; ModuleID = 'build/96b_neonkey/getline/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233828 to i8*), void (i8*)* inttoptr (i32 134230789 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233828 to i8*), void (i8*)* inttoptr (i32 134230769 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233828 to i8*), void (i8*)* inttoptr (i32 134230759 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233828 to i8*), void (i8*)* inttoptr (i32 134230859 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233828 to i8*), void (i8*)* inttoptr (i32 134230849 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233828 to i8*), void (i8*)* inttoptr (i32 134230839 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233828 to i8*), void (i8*)* inttoptr (i32 134230829 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233828 to i8*), void (i8*)* inttoptr (i32 134230819 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233828 to i8*), void (i8*)* inttoptr (i32 134230809 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234044 to i8*), void (i8*)* inttoptr (i32 134232187 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233828 to i8*), void (i8*)* inttoptr (i32 134230799 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233828 to i8*), void (i8*)* inttoptr (i32 134230779 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [14 x i8] c"Enter a line\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"line: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"last char was: 0x%x\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [41 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.k_fifo* @free_queue to i8*), i8* bitcast (%struct.k_fifo* @used_queue to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@free_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.free_queue", align 4, !dbg !195
@used_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.used_queue", align 4, !dbg !292
@console_getline.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !339
@line_bufs = internal global [2 x %struct.console_input] zeroinitializer, align 4, !dbg !360
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !365
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !371
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !508
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !544
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.34, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !554
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !559
@.str.33 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.34 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !579
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !752
@.str.35 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !713
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !696
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !669
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !685
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !715
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !729
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !731
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !733
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !735
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !737
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !739
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !741
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !743
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !745
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !747
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !757
@.str.37 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !784
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !881
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !870
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !922
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1023
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1063
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1016
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1071
@esc_state = internal global i32 0, align 4, !dbg !1090
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1098
@end = internal unnamed_addr global i8 0, align 1, !dbg !1100
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1094
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1096
@.str.52 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.51 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2.49 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !777
@.str.53 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1102
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1378
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1348
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1334
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1279
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !775
@.str.1.54 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1380
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1352
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1350
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1296
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !773
@.str.2.55 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1393
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1356
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1354
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1302
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !771
@.str.3.56 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1395
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1360
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1358
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1308
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !769
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1397
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1364
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1362
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1314
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !767
@.str.5.57 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1399
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1368
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1366
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1320
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !765
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1401
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1372
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1370
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1326
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !763
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1403
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1376
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1374
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1332
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !779
@.str.63 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1405
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1641
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1591
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1643
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1582
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1584
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1593
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1601
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1624
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1627
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1630
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !854
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1669
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1776
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1778
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1774
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1745
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1780
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1277
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.54, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1294
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.55, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1300
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.56, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1306
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1312
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.57, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1318
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1324
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1330
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1870
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1912
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1915
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1921
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1927
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2136
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2145
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2152
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2157
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.110 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.113, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.114, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.115, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.117, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.111, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.118, i32 0, i32 0)], align 4, !dbg !2185
@.str.112 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.113 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.114 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.115 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.116 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.117 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.111 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.118 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2297
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2310
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2418
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2421
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2423
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2150
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2147
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2425
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2461
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2459
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2014
@.str.189 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2464
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3155 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3213, !srcloc !3216
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3263, !srcloc !3264
  ret void, !dbg !3265
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3268 {
  tail call void @console_getline_init() #26, !dbg !3273
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)) #26, !dbg !3274
  br label %1, !dbg !3275

1:                                                ; preds = %0, %1
  %2 = tail call i8* @console_getline() #26, !dbg !3276
  call void @llvm.dbg.value(metadata i8* %2, metadata !3271, metadata !DIExpression()), !dbg !3277
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* noundef %2) #26, !dbg !3278
  %3 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !3279
  %4 = add i32 %3, -1, !dbg !3280
  %5 = getelementptr inbounds i8, i8* %2, i32 %4, !dbg !3281
  %6 = load i8, i8* %5, align 1, !dbg !3281
  %7 = zext i8 %6 to i32, !dbg !3281
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i32 noundef %7) #26, !dbg !3282
  br label %1, !dbg !3275, !llvm.loop !3283
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3287, metadata !DIExpression()), !dbg !3288
  ret i32 0, !dbg !3289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3290 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3294, metadata !DIExpression()), !dbg !3295
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3296
  ret void, !dbg !3297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3298 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3301
  ret i8* %1, !dbg !3302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3303 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3315, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata i8* %0, metadata !3314, metadata !DIExpression()), !dbg !3324
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !3325
  ret void, !dbg !3327
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3332, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i8* %1, metadata !3333, metadata !DIExpression()), !dbg !3334
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3335
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3335
  ret i32 %4, !dbg !3336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3337 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3349, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3346, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata i8* %1, metadata !3347, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata i8* %2, metadata !3348, metadata !DIExpression()), !dbg !3350
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3351
  ret void, !dbg !3352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3353 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3357, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %1, metadata !3358, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 0, metadata !3359, metadata !DIExpression()), !dbg !3360
  %3 = icmp eq i32 %1, 0, !dbg !3361
  br i1 %3, label %13, label %4, !dbg !3364

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3359, metadata !DIExpression()), !dbg !3360
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3365
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3367
  %8 = load i8, i8* %7, align 1, !dbg !3367
  %9 = zext i8 %8 to i32, !dbg !3367
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3365
  %11 = add nuw i32 %5, 1, !dbg !3368
  call void @llvm.dbg.value(metadata i32 %11, metadata !3359, metadata !DIExpression()), !dbg !3360
  %12 = icmp eq i32 %11, %1, !dbg !3361
  br i1 %12, label %13, label %4, !dbg !3364, !llvm.loop !3369

13:                                               ; preds = %4, %2
  ret void, !dbg !3371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3372 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3376, metadata !DIExpression()), !dbg !3378
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3379
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3379
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3377, metadata !DIExpression()), !dbg !3380
  call void @llvm.va_start(i8* nonnull %3), !dbg !3381
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3382
  %5 = load i32, i32* %4, align 4, !dbg !3382
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3382
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !3382
  call void @llvm.va_end(i8* nonnull %3), !dbg !3383
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3384
  ret void, !dbg !3384
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3385 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3389, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata i32 %1, metadata !3390, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata i8* %2, metadata !3391, metadata !DIExpression()), !dbg !3394
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3395
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3395
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3392, metadata !DIExpression()), !dbg !3396
  call void @llvm.va_start(i8* nonnull %5), !dbg !3397
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3398
  %7 = load i32, i32* %6, align 4, !dbg !3398
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3398
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !3398
  call void @llvm.dbg.value(metadata i32 %9, metadata !3393, metadata !DIExpression()), !dbg !3394
  call void @llvm.va_end(i8* nonnull %5), !dbg !3399
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3400
  ret i32 %9, !dbg !3401
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3402 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3409, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i8* %0, metadata !3406, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i32 %1, metadata !3407, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i8* %2, metadata !3408, metadata !DIExpression()), !dbg !3416
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3417
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3417
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3410, metadata !DIExpression()), !dbg !3418
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3419
  store i8* %0, i8** %7, align 4, !dbg !3419
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3419
  store i32 %1, i32* %8, align 4, !dbg !3419
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3419
  store i32 0, i32* %9, align 4, !dbg !3419
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !3420
  %10 = load i32, i32* %9, align 4, !dbg !3421
  %11 = load i32, i32* %8, align 4, !dbg !3423
  %12 = icmp slt i32 %10, %11, !dbg !3424
  br i1 %12, label %13, label %15, !dbg !3425

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3426
  store i8 0, i8* %14, align 1, !dbg !3428
  br label %15, !dbg !3429

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3430
  ret i32 %10, !dbg !3431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3437, metadata !DIExpression()), !dbg !3439
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3438, metadata !DIExpression()), !dbg !3439
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3440
  %4 = load i8*, i8** %3, align 4, !dbg !3440
  %5 = icmp eq i8* %4, null, !dbg !3442
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3443
  br i1 %5, label %12, label %8, !dbg !3444

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3445
  %10 = load i32, i32* %9, align 4, !dbg !3445
  %11 = icmp slt i32 %7, %10, !dbg !3446
  br i1 %11, label %15, label %12, !dbg !3447

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3448
  %14 = add nsw i32 %7, 1, !dbg !3450
  store i32 %14, i32* %13, align 4, !dbg !3450
  br label %25, !dbg !3451

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3452
  %17 = icmp eq i32 %7, %16, !dbg !3454
  br i1 %17, label %18, label %21, !dbg !3455

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3456
  store i32 %19, i32* %6, align 4, !dbg !3456
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3458
  store i8 0, i8* %20, align 1, !dbg !3459
  br label %25, !dbg !3460

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3461
  %23 = add nsw i32 %7, 1, !dbg !3463
  store i32 %23, i32* %6, align 4, !dbg !3463
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3464
  store i8 %22, i8* %24, align 1, !dbg !3465
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3466
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3467 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3477, metadata !DIExpression()), !dbg !3481
  call void @llvm.dbg.value(metadata i8* %1, metadata !3478, metadata !DIExpression()), !dbg !3481
  call void @llvm.dbg.value(metadata i8* %2, metadata !3479, metadata !DIExpression()), !dbg !3481
  call void @llvm.dbg.value(metadata i8* %3, metadata !3480, metadata !DIExpression()), !dbg !3481
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !3482
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3483
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !3484
  unreachable, !dbg !3485
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3486 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3590
  ret %struct.k_thread* %1, !dbg !3591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3597, metadata !DIExpression()), !dbg !3598
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3599, !srcloc !3601
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !3602
  ret void, !dbg !3603
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3604 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3605, !srcloc !3607
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3608
  ret %struct.k_thread* %1, !dbg !3609
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3610 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3621, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8* %1, metadata !3622, metadata !DIExpression()), !dbg !3625
  %3 = icmp eq i8* %1, null, !dbg !3626
  br i1 %3, label %8, label %4, !dbg !3628

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3629
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3629
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3623, metadata !DIExpression()), !dbg !3625
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !3630, !range !3631
  call void @llvm.dbg.value(metadata i32 %7, metadata !3624, metadata !DIExpression()), !dbg !3625
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !3632
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !3633
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3635 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3639, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.value(metadata i8* %1, metadata !3640, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.value(metadata i8* %1, metadata !3641, metadata !DIExpression()), !dbg !3643
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3644
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3642, metadata !DIExpression()), !dbg !3643
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3645
  %5 = ptrtoint i8* %4 to i32, !dbg !3646
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3646
  %7 = sub i32 %5, %6, !dbg !3646
  %8 = lshr i32 %7, 3, !dbg !3647
  ret i32 %8, !dbg !3648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3649 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3653, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i32 %1, metadata !3654, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i1 %2, metadata !3655, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3658
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3659
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3656, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3657, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3658
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3660
  %6 = bitcast i8* %5 to i16*, !dbg !3660
  %7 = load i16, i16* %6, align 2, !dbg !3660
  %8 = and i16 %7, -2, !dbg !3664
  %9 = zext i1 %2 to i16, !dbg !3664
  %10 = or i16 %8, %9, !dbg !3664
  store i16 %10, i16* %6, align 2, !dbg !3660
  ret void, !dbg !3665
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3666 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3670, metadata !DIExpression()), !dbg !3672
  call void @llvm.dbg.value(metadata i32 %1, metadata !3671, metadata !DIExpression()), !dbg !3672
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3673
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3675
  br i1 %4, label %7, label %5, !dbg !3676

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3677
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3679
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3680
  br label %7, !dbg !3681

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3682, !range !3684
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3685
  br i1 %9, label %13, label %10, !dbg !3686

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3687
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3689, !range !3684
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !3690
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3691
  call void @llvm.dbg.value(metadata i32 %12, metadata !3671, metadata !DIExpression()), !dbg !3672
  br label %13, !dbg !3692

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3671, metadata !DIExpression()), !dbg !3672
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !3693
  ret void, !dbg !3694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3695 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3699, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.value(metadata i32 %1, metadata !3700, metadata !DIExpression()), !dbg !3701
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3702
  %4 = add i32 %3, %1, !dbg !3703
  ret i32 %4, !dbg !3704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3705 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3709, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.value(metadata i32 %1, metadata !3710, metadata !DIExpression()), !dbg !3711
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3712
  %4 = and i32 %3, 1, !dbg !3713
  %5 = icmp ne i32 %4, 0, !dbg !3712
  ret i1 %5, !dbg !3714
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3715 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3717, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i32 %1, metadata !3718, metadata !DIExpression()), !dbg !3722
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3723, !range !3724
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3725
  call void @llvm.dbg.value(metadata i32 %4, metadata !3719, metadata !DIExpression()), !dbg !3726
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3727
  ret void, !dbg !3728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3729 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3733, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata i32 %1, metadata !3734, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata i32 %2, metadata !3735, metadata !DIExpression()), !dbg !3738
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3739
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3740
  %6 = add i32 %5, %4, !dbg !3741
  call void @llvm.dbg.value(metadata i32 %6, metadata !3736, metadata !DIExpression()), !dbg !3738
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3742
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3743
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !3744
  ret void, !dbg !3745
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3746 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3748, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.value(metadata i32 %1, metadata !3749, metadata !DIExpression()), !dbg !3750
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !3751
  %4 = sub i32 %1, %3, !dbg !3752
  ret i32 %4, !dbg !3753
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3754 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3756, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %1, metadata !3757, metadata !DIExpression()), !dbg !3761
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3762, !range !3724
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3763
  call void @llvm.dbg.value(metadata i32 %4, metadata !3758, metadata !DIExpression()), !dbg !3764
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3765
  ret void, !dbg !3766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3767 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3771, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata i32 %1, metadata !3772, metadata !DIExpression()), !dbg !3773
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3774
  %4 = lshr i32 %3, 1, !dbg !3775
  ret i32 %4, !dbg !3776
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3777 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3781, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 %1, metadata !3782, metadata !DIExpression()), !dbg !3784
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !3785
  %4 = add i32 %1, 1, !dbg !3786
  %5 = sub i32 %4, %3, !dbg !3787
  call void @llvm.dbg.value(metadata i32 %5, metadata !3783, metadata !DIExpression()), !dbg !3784
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3788, !range !3789
  %7 = sub nsw i32 31, %6, !dbg !3790
  ret i32 %7, !dbg !3791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3792 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3796, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.value(metadata i32 %1, metadata !3797, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.value(metadata i32 %2, metadata !3798, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3799, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3805
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3806
  %5 = load i32, i32* %4, align 4, !dbg !3806
  %6 = icmp eq i32 %5, 0, !dbg !3807
  br i1 %6, label %7, label %12, !dbg !3808

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3809
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3811
  %10 = load i32, i32* %9, align 4, !dbg !3812
  %11 = or i32 %10, %8, !dbg !3812
  store i32 %11, i32* %9, align 4, !dbg !3812
  store i32 %1, i32* %4, align 4, !dbg !3813
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3814
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3815
  br label %14, !dbg !3816

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3801, metadata !DIExpression()), !dbg !3817
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !3818, !range !3819
  call void @llvm.dbg.value(metadata i32 %13, metadata !3804, metadata !DIExpression()), !dbg !3817
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !3820
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !3821
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !3822
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !3823
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3825 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3827, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i32 %1, metadata !3828, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i32 %2, metadata !3829, metadata !DIExpression()), !dbg !3830
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !3831
  ret void, !dbg !3832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3833 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3835, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.value(metadata i32 %1, metadata !3836, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.value(metadata i32 %2, metadata !3837, metadata !DIExpression()), !dbg !3838
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !3839
  ret void, !dbg !3840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3841 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3843, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.value(metadata i32 %1, metadata !3844, metadata !DIExpression()), !dbg !3845
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !3846
  ret i32 %3, !dbg !3847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3848 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3852, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %1, metadata !3853, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %2, metadata !3854, metadata !DIExpression()), !dbg !3857
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3858
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3855, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3856, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3857
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3856, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3857
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3859
  call void @llvm.dbg.value(metadata i8* %5, metadata !3856, metadata !DIExpression()), !dbg !3857
  %6 = bitcast i8* %5 to i16*, !dbg !3860
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3863
  %8 = load i16, i16* %7, align 2, !dbg !3863
  %9 = zext i16 %8 to i32, !dbg !3863
  ret i32 %9, !dbg !3864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3865 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3869, metadata !DIExpression()), !dbg !3870
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3871
  ret %struct.chunk_unit_t* %2, !dbg !3872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3873 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3877, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata i32 %1, metadata !3878, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata i32 %2, metadata !3879, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata i32 %3, metadata !3880, metadata !DIExpression()), !dbg !3883
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3884
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3881, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3882, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3883
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3885
  call void @llvm.dbg.value(metadata i8* %6, metadata !3882, metadata !DIExpression()), !dbg !3883
  %7 = trunc i32 %3 to i16, !dbg !3886
  %8 = bitcast i8* %6 to i16*, !dbg !3889
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3890
  store i16 %7, i16* %9, align 2, !dbg !3891
  ret void, !dbg !3892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3893 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3897, metadata !DIExpression()), !dbg !3898
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !3899
  ret i32 %2, !dbg !3900
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3901 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3905, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata i32 %1, metadata !3906, metadata !DIExpression()), !dbg !3907
  %3 = add i32 %1, 4, !dbg !3908
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !3909
  ret i32 %4, !dbg !3910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3915, metadata !DIExpression()), !dbg !3916
  %2 = add i32 %0, 7, !dbg !3917
  %3 = lshr i32 %2, 3, !dbg !3918
  ret i32 %3, !dbg !3919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3920 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3924, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.value(metadata i32 %1, metadata !3925, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.value(metadata i32 %2, metadata !3926, metadata !DIExpression()), !dbg !3927
  %4 = shl i32 %2, 1, !dbg !3928
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !3929
  ret void, !dbg !3930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3931 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3933, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %1, metadata !3934, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %2, metadata !3935, metadata !DIExpression()), !dbg !3936
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !3937
  ret void, !dbg !3938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3939 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3941, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata i32 %1, metadata !3942, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata i32 %2, metadata !3943, metadata !DIExpression()), !dbg !3949
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !3950
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3944, metadata !DIExpression()), !dbg !3949
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3951
  %6 = icmp eq i32 %5, %1, !dbg !3952
  br i1 %6, label %7, label %14, !dbg !3953

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3954
  %9 = xor i32 %8, -1, !dbg !3956
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3957
  %11 = load i32, i32* %10, align 4, !dbg !3958
  %12 = and i32 %11, %9, !dbg !3958
  store i32 %12, i32* %10, align 4, !dbg !3958
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3959
  store i32 0, i32* %13, align 4, !dbg !3960
  br label %17, !dbg !3961

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3962
  call void @llvm.dbg.value(metadata i32 %15, metadata !3945, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i32 %5, metadata !3948, metadata !DIExpression()), !dbg !3963
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3964
  store i32 %5, i32* %16, align 4, !dbg !3965
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !3966
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !3967
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !3968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3969 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3971, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i32 %1, metadata !3972, metadata !DIExpression()), !dbg !3973
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !3974
  ret i32 %3, !dbg !3975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3976 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3980, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i8* %1, metadata !3981, metadata !DIExpression()), !dbg !3987
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3988
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3988
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3982, metadata !DIExpression()), !dbg !3987
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !3989
  call void @llvm.dbg.value(metadata i32 %5, metadata !3983, metadata !DIExpression()), !dbg !3987
  %6 = ptrtoint i8* %1 to i32, !dbg !3990
  call void @llvm.dbg.value(metadata i32 %6, metadata !3984, metadata !DIExpression()), !dbg !3987
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !3991
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3991
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3992
  call void @llvm.dbg.value(metadata i32 %9, metadata !3985, metadata !DIExpression()), !dbg !3987
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !3993
  %11 = shl i32 %10, 3, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %11, metadata !3986, metadata !DIExpression()), !dbg !3987
  %12 = sub i32 %9, %6, !dbg !3995
  %13 = add i32 %12, %11, !dbg !3996
  ret i32 %13, !dbg !3997
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3998 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4002, metadata !DIExpression()), !dbg !4008
  call void @llvm.dbg.value(metadata i32 %1, metadata !4003, metadata !DIExpression()), !dbg !4008
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4009
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4009
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4004, metadata !DIExpression()), !dbg !4008
  %5 = icmp eq i32 %1, 0, !dbg !4010
  br i1 %5, label %19, label %6, !dbg !4012

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4013
  br i1 %7, label %19, label %8, !dbg !4014

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4015, !range !3631
  call void @llvm.dbg.value(metadata i32 %9, metadata !4006, metadata !DIExpression()), !dbg !4008
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !4016
  call void @llvm.dbg.value(metadata i32 %10, metadata !4007, metadata !DIExpression()), !dbg !4008
  %11 = icmp eq i32 %10, 0, !dbg !4017
  br i1 %11, label %19, label %12, !dbg !4019

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4020
  %14 = icmp ugt i32 %13, %9, !dbg !4022
  br i1 %14, label %15, label %17, !dbg !4023

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4024
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !4026
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !4027
  br label %17, !dbg !4028

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !4029
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4030
  call void @llvm.dbg.value(metadata i8* %18, metadata !4005, metadata !DIExpression()), !dbg !4008
  br label %19, !dbg !4031

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4008
  ret i8* %20, !dbg !4032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4033 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4037, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i32 %1, metadata !4038, metadata !DIExpression()), !dbg !4039
  %3 = lshr i32 %1, 3, !dbg !4040
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4041
  %5 = load i32, i32* %4, align 4, !dbg !4041
  %6 = icmp uge i32 %3, %5, !dbg !4042
  ret i1 %6, !dbg !4043
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4044 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4048, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.value(metadata i32 %1, metadata !4049, metadata !DIExpression()), !dbg !4063
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4064
  call void @llvm.dbg.value(metadata i32 %3, metadata !4050, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4051, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4063
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4065
  %5 = load i32, i32* %4, align 4, !dbg !4065
  %6 = icmp eq i32 %5, 0, !dbg !4066
  br i1 %6, label %19, label %7, !dbg !4067

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4068
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4069
  call void @llvm.dbg.value(metadata i32 %9, metadata !4055, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i32 %8, metadata !4056, metadata !DIExpression()), !dbg !4070
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4071
  %11 = icmp ult i32 %10, %1, !dbg !4073
  br i1 %11, label %13, label %12, !dbg !4074

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !4075
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4077
  store i32 %14, i32* %4, align 4, !dbg !4078
  %15 = add nsw i32 %9, -1, !dbg !4079
  call void @llvm.dbg.value(metadata i32 %15, metadata !4055, metadata !DIExpression()), !dbg !4069
  %16 = icmp eq i32 %15, 0, !dbg !4079
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4080
  br i1 %18, label %19, label %7, !dbg !4080, !llvm.loop !4081

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4084
  %21 = load i32, i32* %20, align 4, !dbg !4084
  %22 = add nsw i32 %3, 1, !dbg !4085
  %23 = shl nsw i32 -1, %22, !dbg !4085
  %24 = and i32 %21, %23, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %24, metadata !4058, metadata !DIExpression()), !dbg !4063
  %25 = icmp eq i32 %24, 0, !dbg !4087
  br i1 %25, label %30, label %26, !dbg !4088

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4089, !range !3789
  call void @llvm.dbg.value(metadata i32 %27, metadata !4059, metadata !DIExpression()), !dbg !4090
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4091
  %29 = load i32, i32* %28, align 4, !dbg !4091
  call void @llvm.dbg.value(metadata i32 %29, metadata !4062, metadata !DIExpression()), !dbg !4090
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !4092
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4063
  ret i32 %31, !dbg !4093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4094 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4096, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.value(metadata i32 %1, metadata !4097, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.value(metadata i32 %2, metadata !4098, metadata !DIExpression()), !dbg !4102
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %4, metadata !4099, metadata !DIExpression()), !dbg !4102
  %5 = sub i32 %2, %1, !dbg !4104
  call void @llvm.dbg.value(metadata i32 %5, metadata !4100, metadata !DIExpression()), !dbg !4102
  %6 = sub i32 %4, %5, !dbg !4105
  call void @llvm.dbg.value(metadata i32 %6, metadata !4101, metadata !DIExpression()), !dbg !4102
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !4106
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !4107
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !4108
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !4109
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !4110
  ret void, !dbg !4111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4112 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4116, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i32 %1, metadata !4117, metadata !DIExpression()), !dbg !4120
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4121
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4118, metadata !DIExpression()), !dbg !4120
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4122
  call void @llvm.dbg.value(metadata i8* %4, metadata !4119, metadata !DIExpression()), !dbg !4120
  ret i8* %4, !dbg !4123
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4124 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4128, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %1, metadata !4129, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %2, metadata !4130, metadata !DIExpression()), !dbg !4140
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4141
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4141
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4131, metadata !DIExpression()), !dbg !4140
  %6 = sub i32 0, %1, !dbg !4142
  %7 = and i32 %6, %1, !dbg !4143
  call void @llvm.dbg.value(metadata i32 %7, metadata !4133, metadata !DIExpression()), !dbg !4140
  %8 = icmp eq i32 %7, %1, !dbg !4144
  br i1 %8, label %13, label %9, !dbg !4146

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4147
  call void @llvm.dbg.value(metadata i32 %10, metadata !4129, metadata !DIExpression()), !dbg !4140
  %11 = icmp ult i32 %7, 4, !dbg !4149
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4149
  br label %17, !dbg !4149

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4150
  br i1 %14, label %15, label %17, !dbg !4153

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !4154
  br label %57, !dbg !4156

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4140
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4157
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4129, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %19, metadata !4132, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %18, metadata !4133, metadata !DIExpression()), !dbg !4140
  %21 = icmp eq i32 %2, 0, !dbg !4158
  br i1 %21, label %57, label %22, !dbg !4160

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !4161
  br i1 %23, label %57, label %24, !dbg !4162

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4163
  %26 = add i32 %25, %20, !dbg !4164
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #27, !dbg !4165, !range !3631
  call void @llvm.dbg.value(metadata i32 %27, metadata !4134, metadata !DIExpression()), !dbg !4140
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #27, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %28, metadata !4135, metadata !DIExpression()), !dbg !4140
  %29 = icmp eq i32 %28, 0, !dbg !4167
  br i1 %29, label %57, label %30, !dbg !4169

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4170
  call void @llvm.dbg.value(metadata i8* %31, metadata !4136, metadata !DIExpression()), !dbg !4140
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4171
  %33 = ptrtoint i8* %32 to i32, !dbg !4171
  %34 = add i32 %20, -1, !dbg !4171
  %35 = add i32 %34, %33, !dbg !4171
  %36 = sub i32 0, %20, !dbg !4171
  %37 = and i32 %35, %36, !dbg !4171
  %38 = inttoptr i32 %37 to i8*, !dbg !4172
  %39 = sub i32 0, %18, !dbg !4173
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4173
  call void @llvm.dbg.value(metadata i8* %40, metadata !4136, metadata !DIExpression()), !dbg !4140
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4174
  %42 = ptrtoint i8* %41 to i32, !dbg !4174
  %43 = add i32 %42, 7, !dbg !4174
  %44 = and i32 %43, -8, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %44, metadata !4137, metadata !DIExpression()), !dbg !4140
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #27, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %45, metadata !4138, metadata !DIExpression()), !dbg !4140
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !4176
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4177
  %48 = sub i32 %44, %47, !dbg !4177
  %49 = ashr exact i32 %48, 3, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %49, metadata !4139, metadata !DIExpression()), !dbg !4140
  %50 = icmp ugt i32 %45, %28, !dbg !4178
  br i1 %50, label %51, label %52, !dbg !4180

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #27, !dbg !4181
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4183
  br label %52, !dbg !4184

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #27, !dbg !4185
  %54 = icmp ugt i32 %53, %49, !dbg !4187
  br i1 %54, label %55, label %56, !dbg !4188

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #27, !dbg !4189
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !4191
  br label %56, !dbg !4192

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #27, !dbg !4193
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4140
  ret i8* %58, !dbg !4194
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4195 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4199, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i8* %1, metadata !4200, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %2, metadata !4201, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %3, metadata !4202, metadata !DIExpression()), !dbg !4218
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4219
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4219
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4203, metadata !DIExpression()), !dbg !4218
  %7 = icmp eq i8* %1, null, !dbg !4220
  br i1 %7, label %8, label %10, !dbg !4222

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4223
  br label %59, !dbg !4225

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4226
  br i1 %11, label %12, label %13, !dbg !4228

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4229
  br label %59, !dbg !4231

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !4232
  br i1 %14, label %59, label %15, !dbg !4234

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !4235, !range !3631
  call void @llvm.dbg.value(metadata i32 %16, metadata !4204, metadata !DIExpression()), !dbg !4218
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4236
  call void @llvm.dbg.value(metadata i32 %17, metadata !4205, metadata !DIExpression()), !dbg !4218
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4237
  %19 = ptrtoint i8* %1 to i32, !dbg !4238
  %20 = ptrtoint i8* %18 to i32, !dbg !4238
  %21 = sub i32 %19, %20, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %21, metadata !4206, metadata !DIExpression()), !dbg !4218
  %22 = add i32 %21, %3, !dbg !4239
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !4240
  call void @llvm.dbg.value(metadata i32 %23, metadata !4207, metadata !DIExpression()), !dbg !4218
  %24 = icmp eq i32 %2, 0, !dbg !4241
  br i1 %24, label %29, label %25, !dbg !4242

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4243
  %27 = and i32 %26, %19, !dbg !4244
  %28 = icmp eq i32 %27, 0, !dbg !4244
  br i1 %28, label %29, label %49, !dbg !4245

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4246
  %31 = icmp eq i32 %23, %30, !dbg !4247
  br i1 %31, label %59, label %32, !dbg !4248

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4249
  br i1 %33, label %34, label %36, !dbg !4250

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4251
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #27, !dbg !4253
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4254
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #27, !dbg !4255
  br label %59, !dbg !4256

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4257
  br i1 %37, label %49, label %38, !dbg !4258

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4259
  %40 = add i32 %39, %30, !dbg !4260
  %41 = icmp ult i32 %40, %23, !dbg !4261
  br i1 %41, label %49, label %42, !dbg !4262

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4263
  call void @llvm.dbg.value(metadata i32 %43, metadata !4208, metadata !DIExpression()), !dbg !4264
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4265
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4266
  %45 = icmp ult i32 %43, %44, !dbg !4268
  br i1 %45, label %46, label %48, !dbg !4269

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4270
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #27, !dbg !4272
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #27, !dbg !4273
  br label %48, !dbg !4274

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #27, !dbg !4275
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4276
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4277
  call void @llvm.dbg.value(metadata i8* %50, metadata !4214, metadata !DIExpression()), !dbg !4218
  %51 = icmp eq i8* %50, null, !dbg !4278
  br i1 %51, label %59, label %52, !dbg !4279

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4280, !range !3724
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #27, !dbg !4281
  %55 = sub i32 %54, %21, !dbg !4282
  call void @llvm.dbg.value(metadata i32 %55, metadata !4215, metadata !DIExpression()), !dbg !4283
  %56 = icmp ult i32 %55, %3, !dbg !4284
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4284
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #26, !dbg !4285
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4286
  br label %59, !dbg !4287

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4218
  ret i8* %60, !dbg !4288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4289 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4293, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.value(metadata i32 %1, metadata !4294, metadata !DIExpression()), !dbg !4295
  %3 = shl i32 %1, 3, !dbg !4296
  %4 = add i32 %3, -4, !dbg !4297
  ret i32 %4, !dbg !4298
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4299 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4303, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i8* %1, metadata !4304, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i32 %2, metadata !4305, metadata !DIExpression()), !dbg !4314
  %4 = add i32 %2, -4, !dbg !4315
  call void @llvm.dbg.value(metadata i32 %4, metadata !4305, metadata !DIExpression()), !dbg !4314
  %5 = ptrtoint i8* %1 to i32, !dbg !4316
  %6 = add i32 %5, 7, !dbg !4316
  %7 = and i32 %6, -8, !dbg !4316
  call void @llvm.dbg.value(metadata i32 %7, metadata !4306, metadata !DIExpression()), !dbg !4314
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4317
  %9 = ptrtoint i8* %8 to i32, !dbg !4317
  %10 = and i32 %9, -8, !dbg !4317
  call void @llvm.dbg.value(metadata i32 %10, metadata !4307, metadata !DIExpression()), !dbg !4314
  %11 = sub i32 %10, %7, !dbg !4318
  %12 = lshr exact i32 %11, 3, !dbg !4319
  call void @llvm.dbg.value(metadata i32 %12, metadata !4308, metadata !DIExpression()), !dbg !4314
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4320
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4309, metadata !DIExpression()), !dbg !4314
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4321
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4322
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4323
  store i32 %12, i32* %15, align 8, !dbg !4324
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4325
  store i32 0, i32* %16, align 4, !dbg !4326
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #27, !dbg !4327
  call void @llvm.dbg.value(metadata i32 %17, metadata !4310, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4314
  %18 = shl i32 %17, 2, !dbg !4328
  %19 = add i32 %18, 20, !dbg !4329
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #27, !dbg !4330
  call void @llvm.dbg.value(metadata i32 %20, metadata !4311, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i32 0, metadata !4312, metadata !DIExpression()), !dbg !4331
  %21 = icmp slt i32 %17, 0, !dbg !4332
  br i1 %21, label %22, label %24, !dbg !4334

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #27, !dbg !4335
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #27, !dbg !4336
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !4337
  %23 = sub i32 %12, %20, !dbg !4338
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #27, !dbg !4339
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #27, !dbg !4340
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #27, !dbg !4341
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #27, !dbg !4342
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #27, !dbg !4343
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #27, !dbg !4344
  ret void, !dbg !4345

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4312, metadata !DIExpression()), !dbg !4331
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4346
  store i32 0, i32* %26, align 4, !dbg !4348
  %27 = add nuw i32 %25, 1, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %27, metadata !4312, metadata !DIExpression()), !dbg !4331
  %28 = icmp eq i32 %25, %17, !dbg !4332
  br i1 %28, label %22, label %24, !dbg !4334, !llvm.loop !4350
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4352 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4365, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4362, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i8* %1, metadata !4363, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i8* %2, metadata !4364, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %4, metadata !4366, metadata !DIExpression()), !dbg !4493
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4494
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4494
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4367, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.value(metadata i32 0, metadata !4371, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i1 undef, metadata !4373, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4493
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4496

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4496

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4497
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4365, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i8* %30, metadata !4364, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %29, metadata !4371, metadata !DIExpression()), !dbg !4493
  %31 = load i8, i8* %30, align 1, !dbg !4498
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4496

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4498
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4499
  call void @llvm.dbg.value(metadata i8* %34, metadata !4364, metadata !DIExpression()), !dbg !4493
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !4499
  call void @llvm.dbg.value(metadata i32 %35, metadata !4375, metadata !DIExpression()), !dbg !4500
  %36 = icmp slt i32 %35, 0, !dbg !4501
  %37 = add i32 %29, 1, !dbg !4499
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression()), !dbg !4493
  br i1 %36, label %365, label %28, !llvm.loop !4503

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4505
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4380, metadata !DIExpression()), !dbg !4506
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4506
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4425, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4428, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i8* %30, metadata !4431, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i32 -1, metadata !4432, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i32 -1, metadata !4433, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i8* null, metadata !4434, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i8* %14, metadata !4435, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i8 0, metadata !4436, metadata !DIExpression()), !dbg !4507
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !4508
  call void @llvm.dbg.value(metadata i8* %39, metadata !4364, metadata !DIExpression()), !dbg !4493
  %40 = load i24, i24* %15, align 8, !dbg !4509
  %41 = and i24 %40, 256, !dbg !4509
  %42 = icmp eq i24 %41, 0, !dbg !4509
  br i1 %42, label %51, label %43, !dbg !4511

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4512
  call void @llvm.dbg.value(metadata i8* %44, metadata !4365, metadata !DIExpression()), !dbg !4493
  %45 = bitcast i8* %27 to i32*, !dbg !4512
  %46 = load i32, i32* %45, align 4, !dbg !4512
  call void @llvm.dbg.value(metadata i32 %46, metadata !4432, metadata !DIExpression()), !dbg !4507
  %47 = icmp slt i32 %46, 0, !dbg !4514
  br i1 %47, label %48, label %56, !dbg !4516

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4517
  store i24 %49, i24* %15, align 8, !dbg !4517
  %50 = sub nsw i32 0, %46, !dbg !4519
  call void @llvm.dbg.value(metadata i32 %50, metadata !4432, metadata !DIExpression()), !dbg !4507
  br label %56, !dbg !4520

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4521
  %53 = icmp eq i24 %52, 0, !dbg !4521
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4523
  br label %56, !dbg !4523

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4524
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4507
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4365, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %58, metadata !4432, metadata !DIExpression()), !dbg !4507
  %60 = and i24 %57, 1024, !dbg !4524
  %61 = icmp eq i24 %60, 0, !dbg !4524
  br i1 %61, label %69, label %62, !dbg !4525

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4526
  call void @llvm.dbg.value(metadata i8* %63, metadata !4365, metadata !DIExpression()), !dbg !4493
  %64 = bitcast i8* %59 to i32*, !dbg !4526
  %65 = load i32, i32* %64, align 4, !dbg !4526
  call void @llvm.dbg.value(metadata i32 %65, metadata !4437, metadata !DIExpression()), !dbg !4527
  %66 = icmp slt i32 %65, 0, !dbg !4528
  br i1 %66, label %67, label %74, !dbg !4530

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4531
  store i24 %68, i24* %15, align 8, !dbg !4531
  br label %74, !dbg !4533

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4534
  %71 = icmp eq i24 %70, 0, !dbg !4534
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4536
  br label %74, !dbg !4536

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4537
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4507
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4507
  call void @llvm.dbg.value(metadata i8* %77, metadata !4365, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %76, metadata !4433, metadata !DIExpression()), !dbg !4507
  store i32 0, i32* %16, align 4, !dbg !4538
  store i32 0, i32* %17, align 8, !dbg !4539
  %78 = lshr i24 %75, 16, !dbg !4537
  call void @llvm.dbg.value(metadata i24 %78, metadata !4440, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4507
  %79 = lshr i24 %75, 11, !dbg !4540
  %80 = and i24 %79, 15, !dbg !4540
  %81 = zext i24 %80 to i32, !dbg !4540
  call void @llvm.dbg.value(metadata i32 %81, metadata !4441, metadata !DIExpression()), !dbg !4507
  %82 = trunc i24 %78 to i3, !dbg !4541
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4541

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4542

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4545
  call void @llvm.dbg.value(metadata i8* %85, metadata !4365, metadata !DIExpression()), !dbg !4493
  %86 = bitcast i8* %77 to i32*, !dbg !4545
  %87 = load i32, i32* %86, align 4, !dbg !4545
  %88 = sext i32 %87 to i64, !dbg !4545
  store i64 %88, i64* %20, align 8, !dbg !4547
  br label %115, !dbg !4548

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4549
  call void @llvm.dbg.value(metadata i8* %90, metadata !4365, metadata !DIExpression()), !dbg !4493
  %91 = bitcast i8* %77 to i32*, !dbg !4549
  %92 = load i32, i32* %91, align 4, !dbg !4549
  %93 = sext i32 %92 to i64, !dbg !4549
  store i64 %93, i64* %20, align 8, !dbg !4552
  br label %115, !dbg !4553

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4554
  %96 = add i32 %95, 7, !dbg !4554
  %97 = and i32 %96, -8, !dbg !4554
  %98 = inttoptr i32 %97 to i8*, !dbg !4554
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4554
  call void @llvm.dbg.value(metadata i8* %99, metadata !4365, metadata !DIExpression()), !dbg !4493
  %100 = inttoptr i32 %97 to i64*, !dbg !4554
  %101 = load i64, i64* %100, align 8, !dbg !4554
  store i64 %101, i64* %20, align 8, !dbg !4555
  br label %115, !dbg !4556

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4557
  %104 = add i32 %103, 7, !dbg !4557
  %105 = and i32 %104, -8, !dbg !4557
  %106 = inttoptr i32 %105 to i8*, !dbg !4557
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4557
  call void @llvm.dbg.value(metadata i8* %107, metadata !4365, metadata !DIExpression()), !dbg !4493
  %108 = inttoptr i32 %105 to i64*, !dbg !4557
  %109 = load i64, i64* %108, align 8, !dbg !4557
  store i64 %109, i64* %20, align 8, !dbg !4558
  br label %115, !dbg !4559

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4560
  call void @llvm.dbg.value(metadata i8* %111, metadata !4365, metadata !DIExpression()), !dbg !4493
  %112 = bitcast i8* %77 to i32*, !dbg !4560
  %113 = load i32, i32* %112, align 4, !dbg !4560
  %114 = sext i32 %113 to i64, !dbg !4561
  store i64 %114, i64* %20, align 8, !dbg !4562
  br label %115, !dbg !4563

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4564
  call void @llvm.dbg.value(metadata i8* %117, metadata !4365, metadata !DIExpression()), !dbg !4493
  %118 = trunc i24 %79 to i4, !dbg !4565
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4565

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4566
  %121 = ashr exact i64 %120, 56, !dbg !4566
  store i64 %121, i64* %20, align 8, !dbg !4569
  br label %177, !dbg !4570

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4571
  %124 = ashr exact i64 %123, 48, !dbg !4571
  store i64 %124, i64* %20, align 8, !dbg !4574
  br label %177, !dbg !4575

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4576

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4579
  call void @llvm.dbg.value(metadata i8* %127, metadata !4365, metadata !DIExpression()), !dbg !4493
  %128 = bitcast i8* %77 to i32*, !dbg !4579
  %129 = load i32, i32* %128, align 4, !dbg !4579
  %130 = zext i32 %129 to i64, !dbg !4579
  store i64 %130, i64* %20, align 8, !dbg !4581
  br label %157, !dbg !4582

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4583
  call void @llvm.dbg.value(metadata i8* %132, metadata !4365, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i8* %132, metadata !4365, metadata !DIExpression()), !dbg !4493
  %133 = bitcast i8* %77 to i32*, !dbg !4583
  %134 = load i32, i32* %133, align 4, !dbg !4583
  %135 = zext i32 %134 to i64, !dbg !4583
  store i64 %135, i64* %20, align 8, !dbg !4583
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4585
  %138 = add i32 %137, 7, !dbg !4585
  %139 = and i32 %138, -8, !dbg !4585
  %140 = inttoptr i32 %139 to i8*, !dbg !4585
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4585
  call void @llvm.dbg.value(metadata i8* %141, metadata !4365, metadata !DIExpression()), !dbg !4493
  %142 = inttoptr i32 %139 to i64*, !dbg !4585
  %143 = load i64, i64* %142, align 8, !dbg !4585
  store i64 %143, i64* %20, align 8, !dbg !4586
  br label %157, !dbg !4587

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4588
  %146 = add i32 %145, 7, !dbg !4588
  %147 = and i32 %146, -8, !dbg !4588
  %148 = inttoptr i32 %147 to i8*, !dbg !4588
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4588
  call void @llvm.dbg.value(metadata i8* %149, metadata !4365, metadata !DIExpression()), !dbg !4493
  %150 = inttoptr i32 %147 to i64*, !dbg !4588
  %151 = load i64, i64* %150, align 8, !dbg !4588
  store i64 %151, i64* %20, align 8, !dbg !4589
  br label %157, !dbg !4590

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4591
  call void @llvm.dbg.value(metadata i8* %153, metadata !4365, metadata !DIExpression()), !dbg !4493
  %154 = bitcast i8* %77 to i32*, !dbg !4591
  %155 = load i32, i32* %154, align 4, !dbg !4591
  %156 = zext i32 %155 to i64, !dbg !4592
  store i64 %156, i64* %20, align 8, !dbg !4593
  br label %157, !dbg !4594

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4595
  call void @llvm.dbg.value(metadata i8* %159, metadata !4365, metadata !DIExpression()), !dbg !4493
  %160 = trunc i24 %79 to i4, !dbg !4596
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4596

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4597
  store i64 %162, i64* %20, align 8, !dbg !4600
  br label %177, !dbg !4601

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4602
  store i64 %164, i64* %20, align 8, !dbg !4605
  br label %177, !dbg !4606

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4607
  %167 = add i32 %166, 7, !dbg !4607
  %168 = and i32 %167, -8, !dbg !4607
  %169 = inttoptr i32 %168 to i8*, !dbg !4607
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4607
  call void @llvm.dbg.value(metadata i8* %170, metadata !4365, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i8* %170, metadata !4365, metadata !DIExpression()), !dbg !4493
  %171 = inttoptr i32 %168 to double*, !dbg !4607
  %172 = load double, double* %171, align 8, !dbg !4607
  store double %172, double* %19, align 8, !dbg !4607
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4611
  call void @llvm.dbg.value(metadata i8* %174, metadata !4365, metadata !DIExpression()), !dbg !4493
  %175 = bitcast i8* %77 to i8**, !dbg !4611
  %176 = load i8*, i8** %175, align 4, !dbg !4611
  store i8* %176, i8** %18, align 8, !dbg !4614
  br label %177, !dbg !4615

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4507
  call void @llvm.dbg.value(metadata i8* %178, metadata !4365, metadata !DIExpression()), !dbg !4493
  %179 = and i24 %75, 3, !dbg !4616
  %180 = icmp eq i24 %179, 0, !dbg !4616
  br i1 %180, label %185, label %181, !dbg !4616

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %182, metadata !4442, metadata !DIExpression()), !dbg !4618
  %183 = icmp slt i32 %182, 0, !dbg !4619
  %184 = add i32 %182, %29, !dbg !4617
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression()), !dbg !4493
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4621
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4622

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !4623
  call void @llvm.dbg.value(metadata i32 %188, metadata !4446, metadata !DIExpression()), !dbg !4624
  %189 = icmp slt i32 %188, 0, !dbg !4625
  %190 = add i32 %29, 1, !dbg !4623
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression()), !dbg !4493
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4627
  call void @llvm.dbg.value(metadata i8* %192, metadata !4434, metadata !DIExpression()), !dbg !4507
  %193 = icmp sgt i32 %76, -1, !dbg !4628
  br i1 %193, label %194, label %196, !dbg !4630

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !4631
  call void @llvm.dbg.value(metadata i32 %195, metadata !4449, metadata !DIExpression()), !dbg !4633
  br label %241, !dbg !4634

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !4635
  call void @llvm.dbg.value(metadata i32 %197, metadata !4449, metadata !DIExpression()), !dbg !4633
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4434, metadata !DIExpression()), !dbg !4507
  %199 = load i64, i64* %20, align 8, !dbg !4637
  %200 = trunc i64 %199 to i8, !dbg !4638
  store i8 %200, i8* %10, align 1, !dbg !4639
  call void @llvm.dbg.value(metadata i8* %23, metadata !4435, metadata !DIExpression()), !dbg !4507
  br label %245, !dbg !4640

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4641
  %203 = icmp eq i24 %202, 0, !dbg !4641
  %204 = trunc i24 %75 to i8, !dbg !4643
  %205 = shl i8 %204, 1, !dbg !4643
  %206 = and i8 %205, 32, !dbg !4643
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4643
  call void @llvm.dbg.value(metadata i8 %207, metadata !4436, metadata !DIExpression()), !dbg !4507
  %208 = load i64, i64* %20, align 8, !dbg !4644
  call void @llvm.dbg.value(metadata i64 %208, metadata !4372, metadata !DIExpression()), !dbg !4493
  %209 = icmp slt i64 %208, 0, !dbg !4645
  br i1 %209, label %210, label %212, !dbg !4647

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4436, metadata !DIExpression()), !dbg !4507
  %211 = sub nsw i64 0, %208, !dbg !4648
  store i64 %211, i64* %20, align 8, !dbg !4650
  br label %212, !dbg !4651

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4507
  call void @llvm.dbg.value(metadata i8 %213, metadata !4436, metadata !DIExpression()), !dbg !4507
  %214 = load i64, i64* %20, align 8, !dbg !4652
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4653
  call void @llvm.dbg.value(metadata i8* %215, metadata !4434, metadata !DIExpression()), !dbg !4507
  br label %216, !dbg !4654

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4655
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4656
  call void @llvm.dbg.value(metadata i8* %218, metadata !4434, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i8 %217, metadata !4436, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.label(metadata !4492), !dbg !4657
  %219 = icmp sgt i32 %76, -1, !dbg !4658
  br i1 %219, label %222, label %220, !dbg !4659

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4660
  br label %245, !dbg !4659

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4662
  %224 = sub i32 %22, %223, !dbg !4662
  call void @llvm.dbg.value(metadata i32 %224, metadata !4451, metadata !DIExpression()), !dbg !4663
  %225 = load i24, i24* %15, align 8, !dbg !4664
  %226 = and i24 %225, -65, !dbg !4664
  store i24 %226, i24* %15, align 8, !dbg !4664
  %227 = icmp ugt i32 %76, %224, !dbg !4665
  br i1 %227, label %228, label %245, !dbg !4667

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4668
  store i32 %229, i32* %16, align 4, !dbg !4670
  br label %245, !dbg !4671

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4672
  %232 = icmp eq i8* %231, null, !dbg !4674
  br i1 %232, label %245, label %233, !dbg !4675

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4676
  %235 = zext i32 %234 to i64, !dbg !4676
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4678
  call void @llvm.dbg.value(metadata i8* %236, metadata !4434, metadata !DIExpression()), !dbg !4507
  %237 = load i24, i24* %15, align 8, !dbg !4679
  %238 = or i24 %237, 1048576, !dbg !4679
  store i24 %238, i24* %15, align 8, !dbg !4679
  store i8 120, i8* %21, align 1, !dbg !4680
  br label %216, !dbg !4681

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4682
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !4685
  br label %363, !dbg !4686

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4687
  call void @llvm.dbg.value(metadata i32 %242, metadata !4449, metadata !DIExpression()), !dbg !4633
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4688
  call void @llvm.dbg.value(metadata i32 -1, metadata !4433, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i32 %29, metadata !4371, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i8* %192, metadata !4434, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i8* %243, metadata !4435, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i8 0, metadata !4436, metadata !DIExpression()), !dbg !4507
  %244 = icmp eq i8* %192, null, !dbg !4689
  br i1 %244, label %363, label %245, !dbg !4691, !llvm.loop !4503

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4660
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4507
  call void @llvm.dbg.value(metadata i32 0, metadata !4455, metadata !DIExpression()), !dbg !4507
  %250 = zext i8 %249 to i32, !dbg !4692
  %251 = icmp eq i8 %249, 0, !dbg !4694
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4507
  call void @llvm.dbg.value(metadata i32 undef, metadata !4454, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4507
  call void @llvm.dbg.value(metadata i32 undef, metadata !4454, metadata !DIExpression()), !dbg !4507
  %252 = icmp sgt i32 %58, 0, !dbg !4695
  br i1 %252, label %253, label %302, !dbg !4696

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4660
  %255 = icmp eq i24 %254, 0, !dbg !4660
  %256 = ptrtoint i8* %248 to i32, !dbg !4697
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4507
  %257 = ptrtoint i8* %247 to i32, !dbg !4697
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4507
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4507
  %258 = xor i1 %251, true, !dbg !4698
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4507
  %259 = sext i1 %258 to i32, !dbg !4698
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4507
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4507
  %260 = lshr i24 %246, 19, !dbg !4699
  %261 = and i24 %260, 1, !dbg !4699
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4699
  %263 = zext i24 %262 to i32, !dbg !4699
  %264 = add i32 %257, %259, !dbg !4699
  %265 = add i32 %256, %263, !dbg !4699
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4507
  %266 = and i24 %246, 4194304, !dbg !4700
  %267 = icmp eq i24 %266, 0, !dbg !4700
  %268 = load i32, i32* %16, align 4, !dbg !4702
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4507
  call void @llvm.dbg.value(metadata i32 undef, metadata !4454, metadata !DIExpression()), !dbg !4507
  %269 = load i32, i32* %17, align 8, !dbg !4703
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4703
  call void @llvm.dbg.value(metadata i32 undef, metadata !4454, metadata !DIExpression()), !dbg !4507
  %271 = add i32 %264, %58, !dbg !4703
  %272 = add i32 %265, %268, !dbg !4703
  %273 = add i32 %272, %270, !dbg !4704
  %274 = sub i32 %271, %273, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %274, metadata !4432, metadata !DIExpression()), !dbg !4507
  %275 = and i24 %246, 4, !dbg !4705
  %276 = icmp eq i24 %275, 0, !dbg !4705
  br i1 %276, label %277, label %302, !dbg !4706

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4456, metadata !DIExpression()), !dbg !4707
  %278 = and i24 %246, 64, !dbg !4708
  %279 = icmp eq i24 %278, 0, !dbg !4708
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4709
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4709
  %282 = select i1 %279, i32 32, i32 48, !dbg !4709
  br i1 %280, label %287, label %283, !dbg !4709

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !4710
  call void @llvm.dbg.value(metadata i32 %284, metadata !4461, metadata !DIExpression()), !dbg !4711
  %285 = icmp slt i32 %284, 0, !dbg !4712
  %286 = add i32 %29, 1, !dbg !4710
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression()), !dbg !4493
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4507
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4497
  call void @llvm.dbg.value(metadata i32 %290, metadata !4371, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i8 undef, metadata !4456, metadata !DIExpression()), !dbg !4707
  call void @llvm.dbg.value(metadata i8 %288, metadata !4436, metadata !DIExpression()), !dbg !4507
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4714
  %292 = add i32 %291, -1, !dbg !4714
  br label %293, !dbg !4714

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4715
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4497
  call void @llvm.dbg.value(metadata i32 %295, metadata !4371, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %294, metadata !4432, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i32 %294, metadata !4432, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4507
  %296 = icmp sgt i32 %294, 0, !dbg !4716
  br i1 %296, label %297, label %302, !dbg !4714

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %298, metadata !4432, metadata !DIExpression()), !dbg !4507
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !4718
  call void @llvm.dbg.value(metadata i32 %299, metadata !4467, metadata !DIExpression()), !dbg !4719
  %300 = icmp slt i32 %299, 0, !dbg !4720
  %301 = add i32 %295, 1, !dbg !4718
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression()), !dbg !4493
  br i1 %300, label %361, label %293, !llvm.loop !4722

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4507
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4507
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4497
  call void @llvm.dbg.value(metadata i32 %305, metadata !4371, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %304, metadata !4432, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i8 %303, metadata !4436, metadata !DIExpression()), !dbg !4507
  %306 = icmp eq i8 %303, 0, !dbg !4724
  br i1 %306, label %312, label %307, !dbg !4725

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4726
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %309, metadata !4470, metadata !DIExpression()), !dbg !4728
  %310 = icmp slt i32 %309, 0, !dbg !4729
  %311 = add i32 %305, 1, !dbg !4727
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression()), !dbg !4493
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4497
  call void @llvm.dbg.value(metadata i32 %313, metadata !4371, metadata !DIExpression()), !dbg !4493
  %314 = lshr i24 %246, 20, !dbg !4731
  %315 = lshr i24 %246, 19, !dbg !4732
  %316 = or i24 %314, %315, !dbg !4733
  %317 = and i24 %316, 1, !dbg !4733
  %318 = icmp eq i24 %317, 0, !dbg !4733
  br i1 %318, label %323, label %319, !dbg !4734

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4735
  call void @llvm.dbg.value(metadata i32 %320, metadata !4474, metadata !DIExpression()), !dbg !4736
  %321 = icmp slt i32 %320, 0, !dbg !4737
  %322 = add i32 %313, 1, !dbg !4735
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression()), !dbg !4493
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4497
  call void @llvm.dbg.value(metadata i32 %324, metadata !4371, metadata !DIExpression()), !dbg !4493
  %325 = and i24 %246, 1048576, !dbg !4739
  %326 = icmp eq i24 %325, 0, !dbg !4739
  br i1 %326, label %333, label %327, !dbg !4740

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4741
  %329 = zext i8 %328 to i32, !dbg !4741
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %330, metadata !4480, metadata !DIExpression()), !dbg !4742
  %331 = icmp slt i32 %330, 0, !dbg !4743
  %332 = add i32 %324, 1, !dbg !4741
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression()), !dbg !4493
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4497
  call void @llvm.dbg.value(metadata i32 %334, metadata !4371, metadata !DIExpression()), !dbg !4493
  %335 = load i32, i32* %16, align 4, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %335, metadata !4455, metadata !DIExpression()), !dbg !4507
  br label %336, !dbg !4746

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4747
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4497
  call void @llvm.dbg.value(metadata i32 %338, metadata !4371, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %337, metadata !4455, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4507
  %339 = icmp sgt i32 %337, 0, !dbg !4748
  br i1 %339, label %340, label %345, !dbg !4746

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %341, metadata !4455, metadata !DIExpression()), !dbg !4507
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4750
  call void @llvm.dbg.value(metadata i32 %342, metadata !4484, metadata !DIExpression()), !dbg !4751
  %343 = icmp slt i32 %342, 0, !dbg !4752
  %344 = add i32 %338, 1, !dbg !4750
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression()), !dbg !4493
  br i1 %343, label %361, label %336, !llvm.loop !4754

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !4756
  call void @llvm.dbg.value(metadata i32 %346, metadata !4487, metadata !DIExpression()), !dbg !4757
  %347 = icmp slt i32 %346, 0, !dbg !4758
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression()), !dbg !4493
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4756
  call void @llvm.dbg.value(metadata i32 %349, metadata !4371, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %304, metadata !4432, metadata !DIExpression()), !dbg !4507
  %350 = icmp sgt i32 %304, 0, !dbg !4760
  br i1 %350, label %351, label %363, !dbg !4761

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4761
  %353 = add i32 %352, %338, !dbg !4761
  br label %354, !dbg !4761

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %355, metadata !4432, metadata !DIExpression()), !dbg !4507
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %356, metadata !4489, metadata !DIExpression()), !dbg !4763
  %357 = icmp slt i32 %356, 0, !dbg !4764
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4766
  call void @llvm.dbg.value(metadata i32 undef, metadata !4371, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %359, metadata !4432, metadata !DIExpression()), !dbg !4507
  %360 = icmp sgt i32 %355, 1, !dbg !4760
  br i1 %360, label %354, label %363, !dbg !4761, !llvm.loop !4767

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4371, metadata !DIExpression()), !dbg !4493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4504
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4497
  call void @llvm.dbg.value(metadata i32 %364, metadata !4371, metadata !DIExpression()), !dbg !4493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4504
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4493
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4769
  ret i32 %366, !dbg !4769
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4770 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4774, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata i8* %1, metadata !4775, metadata !DIExpression()), !dbg !4776
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4777
  store i24 0, i24* %3, align 4, !dbg !4777
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4777
  store i8 0, i8* %4, align 1, !dbg !4777
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4777
  store i32 0, i32* %5, align 4, !dbg !4777
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4777
  store i32 0, i32* %6, align 4, !dbg !4777
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4778
  call void @llvm.dbg.value(metadata i8* %7, metadata !4775, metadata !DIExpression()), !dbg !4776
  %8 = load i8, i8* %7, align 1, !dbg !4779
  %9 = icmp eq i8 %8, 37, !dbg !4781
  br i1 %9, label %10, label %12, !dbg !4782

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4783
  call void @llvm.dbg.value(metadata i8* %11, metadata !4775, metadata !DIExpression()), !dbg !4776
  store i8 37, i8* %4, align 1, !dbg !4785
  br label %18, !dbg !4786

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !4787
  call void @llvm.dbg.value(metadata i8* %13, metadata !4775, metadata !DIExpression()), !dbg !4776
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !4788
  call void @llvm.dbg.value(metadata i8* %14, metadata !4775, metadata !DIExpression()), !dbg !4776
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !4789
  call void @llvm.dbg.value(metadata i8* %15, metadata !4775, metadata !DIExpression()), !dbg !4776
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !4790
  call void @llvm.dbg.value(metadata i8* %16, metadata !4775, metadata !DIExpression()), !dbg !4776
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !4791
  call void @llvm.dbg.value(metadata i8* %17, metadata !4775, metadata !DIExpression()), !dbg !4776
  br label %18, !dbg !4792

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4776
  ret i8* %19, !dbg !4793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4794 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4798, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.value(metadata i8* %1, metadata !4799, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.value(metadata i8* %2, metadata !4800, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.value(metadata i8* %3, metadata !4801, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.value(metadata i32 0, metadata !4802, metadata !DIExpression()), !dbg !4805
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4806

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4807
  call void @llvm.dbg.value(metadata i32 %9, metadata !4802, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.value(metadata i8* %8, metadata !4800, metadata !DIExpression()), !dbg !4805
  %10 = icmp ult i8* %8, %3, !dbg !4808
  br i1 %10, label %11, label %13, !dbg !4809

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4810
  br label %17, !dbg !4809

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4811

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4812
  %16 = icmp eq i8 %15, 0, !dbg !4811
  br i1 %16, label %24, label %17, !dbg !4806

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4810
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4813
  call void @llvm.dbg.value(metadata i8* %19, metadata !4800, metadata !DIExpression()), !dbg !4805
  %20 = zext i8 %18 to i32, !dbg !4814
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %21, metadata !4803, metadata !DIExpression()), !dbg !4816
  %22 = icmp slt i32 %21, 0, !dbg !4817
  %23 = add i32 %9, 1, !dbg !4819
  call void @llvm.dbg.value(metadata i32 undef, metadata !4802, metadata !DIExpression()), !dbg !4805
  br i1 %22, label %24, label %7, !llvm.loop !4820

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4805
  ret i32 %25, !dbg !4822
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4823 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4827, metadata !DIExpression()), !dbg !4837
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4828, metadata !DIExpression()), !dbg !4837
  call void @llvm.dbg.value(metadata i8* %2, metadata !4829, metadata !DIExpression()), !dbg !4837
  call void @llvm.dbg.value(metadata i8* %3, metadata !4830, metadata !DIExpression()), !dbg !4837
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4838
  %6 = load i8, i8* %5, align 1, !dbg !4838
  %7 = zext i8 %6 to i32, !dbg !4839
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !4840
  %9 = icmp eq i32 %8, 0, !dbg !4840
  call void @llvm.dbg.value(metadata i1 %9, metadata !4831, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4837
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !4841
  call void @llvm.dbg.value(metadata i32 %10, metadata !4832, metadata !DIExpression()), !dbg !4837
  %11 = ptrtoint i8* %3 to i32, !dbg !4842
  %12 = ptrtoint i8* %2 to i32, !dbg !4842
  %13 = sub i32 %11, %12, !dbg !4842
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4843
  call void @llvm.dbg.value(metadata i8* %14, metadata !4834, metadata !DIExpression()), !dbg !4837
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4844

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4837
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4827, metadata !DIExpression()), !dbg !4837
  call void @llvm.dbg.value(metadata i8* %18, metadata !4834, metadata !DIExpression()), !dbg !4837
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4845
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %25, metadata !4835, metadata !DIExpression()), !dbg !4847
  %26 = icmp ult i32 %25, 10, !dbg !4848
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4849
  %28 = add i32 %27, %25, !dbg !4847
  %29 = trunc i32 %28 to i8, !dbg !4849
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %30, metadata !4834, metadata !DIExpression()), !dbg !4837
  store i8 %29, i8* %30, align 1, !dbg !4851
  call void @llvm.dbg.value(metadata i64 %22, metadata !4827, metadata !DIExpression()), !dbg !4837
  %31 = icmp uge i64 %19, %15, !dbg !4852
  %32 = icmp ugt i8* %30, %2, !dbg !4853
  %33 = and i1 %31, %32, !dbg !4853
  br i1 %33, label %17, label %34, !dbg !4854, !llvm.loop !4855

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4857
  %36 = load i24, i24* %35, align 4, !dbg !4857
  %37 = and i24 %36, 32, !dbg !4857
  %38 = icmp eq i24 %37, 0, !dbg !4857
  br i1 %38, label %44, label %39, !dbg !4859

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4860

40:                                               ; preds = %39
  br label %41, !dbg !4862

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4866
  store i24 %43, i24* %35, align 4, !dbg !4866
  br label %44, !dbg !4867

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4867
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4868 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4874, metadata !DIExpression()), !dbg !4877
  call void @llvm.dbg.value(metadata i8* %1, metadata !4875, metadata !DIExpression()), !dbg !4877
  call void @llvm.dbg.value(metadata i32 %2, metadata !4876, metadata !DIExpression()), !dbg !4877
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4878
  %5 = load i24, i24* %4, align 4, !dbg !4878
  %6 = lshr i24 %5, 11, !dbg !4878
  %7 = and i24 %6, 15, !dbg !4878
  %8 = zext i24 %7 to i32, !dbg !4878
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4879

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4880
  store i32 %2, i32* %10, align 4, !dbg !4882
  br label %28, !dbg !4883

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4884
  store i8 %12, i8* %1, align 1, !dbg !4885
  br label %28, !dbg !4886

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4887
  %15 = bitcast i8* %1 to i16*, !dbg !4888
  store i16 %14, i16* %15, align 2, !dbg !4889
  br label %28, !dbg !4890

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4891
  store i32 %2, i32* %17, align 4, !dbg !4892
  br label %28, !dbg !4893

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4894
  %20 = bitcast i8* %1 to i64*, !dbg !4895
  store i64 %19, i64* %20, align 8, !dbg !4896
  br label %28, !dbg !4897

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4898
  %23 = bitcast i8* %1 to i64*, !dbg !4899
  store i64 %22, i64* %23, align 8, !dbg !4900
  br label %28, !dbg !4901

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4902
  store i32 %2, i32* %25, align 4, !dbg !4903
  br label %28, !dbg !4904

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4905
  store i32 %2, i32* %27, align 4, !dbg !4906
  br label %28, !dbg !4907

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4908
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4912, metadata !DIExpression()), !dbg !4913
  %2 = add i32 %0, -65, !dbg !4914
  %3 = icmp ult i32 %2, 26, !dbg !4915
  %4 = zext i1 %3 to i32, !dbg !4915
  ret i32 %4, !dbg !4916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4917 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4921, metadata !DIExpression()), !dbg !4922
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4923

2:                                                ; preds = %1
  br label %4, !dbg !4924

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4926

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4927
  ret i32 %5, !dbg !4928
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !4929 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4931, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i8* %1, metadata !4932, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i8 1, metadata !4933, metadata !DIExpression()), !dbg !4934
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4935

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4933, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i8* %5, metadata !4932, metadata !DIExpression()), !dbg !4934
  %6 = load i8, i8* %5, align 1, !dbg !4936
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4938

7:                                                ; preds = %4
  br label %11, !dbg !4939

8:                                                ; preds = %4
  br label %11, !dbg !4941

9:                                                ; preds = %4
  br label %11, !dbg !4942

10:                                               ; preds = %4
  br label %11, !dbg !4943

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4944
  %14 = or i24 %13, %12, !dbg !4944
  store i24 %14, i24* %3, align 4, !dbg !4944
  call void @llvm.dbg.value(metadata i8 poison, metadata !4933, metadata !DIExpression()), !dbg !4934
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4932, metadata !DIExpression()), !dbg !4934
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4933, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i8* %15, metadata !4932, metadata !DIExpression()), !dbg !4934
  %17 = load i24, i24* %3, align 4, !dbg !4945
  %18 = and i24 %17, 68, !dbg !4947
  %19 = icmp eq i24 %18, 68, !dbg !4947
  br i1 %19, label %20, label %22, !dbg !4947

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4948
  store i24 %21, i24* %3, align 4, !dbg !4948
  br label %22, !dbg !4950

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4951
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4952 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4954, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.value(metadata i8* %1, metadata !4955, metadata !DIExpression()), !dbg !4958
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4959
  %5 = load i24, i24* %4, align 4, !dbg !4960
  %6 = or i24 %5, 128, !dbg !4960
  store i24 %6, i24* %4, align 4, !dbg !4960
  call void @llvm.dbg.value(metadata i8* %1, metadata !4955, metadata !DIExpression()), !dbg !4958
  %7 = load i8, i8* %1, align 1, !dbg !4961
  %8 = icmp eq i8 %7, 42, !dbg !4963
  br i1 %8, label %9, label %12, !dbg !4964

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4965
  store i24 %10, i24* %4, align 4, !dbg !4965
  call void @llvm.dbg.value(metadata i8* %1, metadata !4955, metadata !DIExpression()), !dbg !4958
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4967
  call void @llvm.dbg.value(metadata i8* %11, metadata !4955, metadata !DIExpression()), !dbg !4958
  store i8* %11, i8** %3, align 4, !dbg !4967
  br label %29, !dbg !4968

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4956, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.value(metadata i8** %3, metadata !4955, metadata !DIExpression(DW_OP_deref)), !dbg !4958
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !4969
  call void @llvm.dbg.value(metadata i32 %13, metadata !4957, metadata !DIExpression()), !dbg !4958
  %14 = load i8*, i8** %3, align 4, !dbg !4970
  call void @llvm.dbg.value(metadata i8* %14, metadata !4955, metadata !DIExpression()), !dbg !4958
  %15 = icmp eq i8* %14, %1, !dbg !4972
  br i1 %15, label %29, label %16, !dbg !4973

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4974
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4976
  store i32 %13, i32* %18, align 4, !dbg !4977
  %19 = lshr i32 %13, 31, !dbg !4978
  %20 = lshr i24 %17, 1, !dbg !4979
  %21 = and i24 %20, 1, !dbg !4979
  %22 = zext i24 %21 to i32, !dbg !4979
  %23 = or i32 %19, %22, !dbg !4979
  %24 = trunc i32 %23 to i24, !dbg !4979
  %25 = shl nuw nsw i24 %24, 1, !dbg !4979
  %26 = and i24 %17, -131, !dbg !4979
  %27 = or i24 %26, 128, !dbg !4979
  %28 = or i24 %25, %27, !dbg !4979
  store i24 %28, i24* %4, align 4, !dbg !4979
  br label %29, !dbg !4980

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4958
  ret i8* %30, !dbg !4981
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4982 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4984, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8* %1, metadata !4985, metadata !DIExpression()), !dbg !4987
  %4 = load i8, i8* %1, align 1, !dbg !4988
  %5 = icmp eq i8 %4, 46, !dbg !4989
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4990
  %7 = load i24, i24* %6, align 4, !dbg !4991
  %8 = select i1 %5, i24 512, i24 0, !dbg !4991
  %9 = and i24 %7, -513, !dbg !4991
  %10 = or i24 %9, %8, !dbg !4991
  store i24 %10, i24* %6, align 4, !dbg !4991
  br i1 %5, label %11, label %32, !dbg !4992

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4985, metadata !DIExpression()), !dbg !4987
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4993
  call void @llvm.dbg.value(metadata i8* %12, metadata !4985, metadata !DIExpression()), !dbg !4987
  store i8* %12, i8** %3, align 4, !dbg !4993
  %13 = load i8, i8* %12, align 1, !dbg !4994
  %14 = icmp eq i8 %13, 42, !dbg !4996
  br i1 %14, label %15, label %18, !dbg !4997

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4998
  store i24 %16, i24* %6, align 4, !dbg !4998
  call void @llvm.dbg.value(metadata i8* %12, metadata !4985, metadata !DIExpression()), !dbg !4987
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5000
  call void @llvm.dbg.value(metadata i8* %17, metadata !4985, metadata !DIExpression()), !dbg !4987
  store i8* %17, i8** %3, align 4, !dbg !5000
  br label %32, !dbg !5001

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4985, metadata !DIExpression(DW_OP_deref)), !dbg !4987
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %19, metadata !4986, metadata !DIExpression()), !dbg !4987
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5003
  store i32 %19, i32* %20, align 4, !dbg !5004
  %21 = lshr i32 %19, 31, !dbg !5005
  %22 = load i24, i24* %6, align 4, !dbg !5006
  %23 = lshr i24 %22, 1, !dbg !5006
  %24 = and i24 %23, 1, !dbg !5006
  %25 = zext i24 %24 to i32, !dbg !5006
  %26 = or i32 %21, %25, !dbg !5006
  %27 = trunc i32 %26 to i24, !dbg !5006
  %28 = shl nuw nsw i24 %27, 1, !dbg !5006
  %29 = and i24 %22, -3, !dbg !5006
  %30 = or i24 %28, %29, !dbg !5006
  store i24 %30, i24* %6, align 4, !dbg !5006
  %31 = load i8*, i8** %3, align 4, !dbg !5007
  call void @llvm.dbg.value(metadata i8* %31, metadata !4985, metadata !DIExpression()), !dbg !4987
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4987
  ret i8* %33, !dbg !5008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5009 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5011, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i8* %1, metadata !5012, metadata !DIExpression()), !dbg !5013
  %3 = load i8, i8* %1, align 1, !dbg !5014
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5015

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5016
  call void @llvm.dbg.value(metadata i8* %5, metadata !5012, metadata !DIExpression()), !dbg !5013
  %6 = load i8, i8* %5, align 1, !dbg !5019
  %7 = icmp eq i8 %6, 104, !dbg !5020
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5021
  %9 = load i24, i24* %8, align 4, !dbg !5021
  %10 = and i24 %9, -30721, !dbg !5021
  br i1 %7, label %11, label %14, !dbg !5022

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5023
  store i24 %12, i24* %8, align 4, !dbg !5023
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5025
  call void @llvm.dbg.value(metadata i8* %13, metadata !5012, metadata !DIExpression()), !dbg !5013
  br label %56, !dbg !5026

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5027
  store i24 %15, i24* %8, align 4, !dbg !5027
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5029
  call void @llvm.dbg.value(metadata i8* %17, metadata !5012, metadata !DIExpression()), !dbg !5013
  %18 = load i8, i8* %17, align 1, !dbg !5031
  %19 = icmp eq i8 %18, 108, !dbg !5032
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5033
  %21 = load i24, i24* %20, align 4, !dbg !5033
  %22 = and i24 %21, -30721, !dbg !5033
  br i1 %19, label %23, label %26, !dbg !5034

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5035
  store i24 %24, i24* %20, align 4, !dbg !5035
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5037
  call void @llvm.dbg.value(metadata i8* %25, metadata !5012, metadata !DIExpression()), !dbg !5013
  br label %56, !dbg !5038

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5039
  store i24 %27, i24* %20, align 4, !dbg !5039
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5041
  %30 = load i24, i24* %29, align 4, !dbg !5042
  %31 = and i24 %30, -30721, !dbg !5042
  %32 = or i24 %31, 10240, !dbg !5042
  store i24 %32, i24* %29, align 4, !dbg !5042
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5043
  call void @llvm.dbg.value(metadata i8* %33, metadata !5012, metadata !DIExpression()), !dbg !5013
  br label %56, !dbg !5044

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5045
  %36 = load i24, i24* %35, align 4, !dbg !5046
  %37 = and i24 %36, -30721, !dbg !5046
  %38 = or i24 %37, 12288, !dbg !5046
  store i24 %38, i24* %35, align 4, !dbg !5046
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5047
  call void @llvm.dbg.value(metadata i8* %39, metadata !5012, metadata !DIExpression()), !dbg !5013
  br label %56, !dbg !5048

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5049
  %42 = load i24, i24* %41, align 4, !dbg !5050
  %43 = and i24 %42, -30721, !dbg !5050
  %44 = or i24 %43, 14336, !dbg !5050
  store i24 %44, i24* %41, align 4, !dbg !5050
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5051
  call void @llvm.dbg.value(metadata i8* %45, metadata !5012, metadata !DIExpression()), !dbg !5013
  br label %56, !dbg !5052

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5053
  %48 = load i24, i24* %47, align 4, !dbg !5054
  %49 = and i24 %48, -30723, !dbg !5054
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5055
  call void @llvm.dbg.value(metadata i8* %50, metadata !5012, metadata !DIExpression()), !dbg !5013
  %51 = or i24 %49, 16386, !dbg !5056
  store i24 %51, i24* %47, align 4, !dbg !5056
  br label %56, !dbg !5057

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5058
  %54 = load i24, i24* %53, align 4, !dbg !5059
  %55 = and i24 %54, -30721, !dbg !5059
  store i24 %55, i24* %53, align 4, !dbg !5059
  br label %56, !dbg !5060

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5012, metadata !DIExpression()), !dbg !5013
  ret i8* %57, !dbg !5061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5062 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5064, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8* %1, metadata !5065, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8 0, metadata !5066, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8* %1, metadata !5065, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5069
  %3 = load i8, i8* %1, align 1, !dbg !5070
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5071
  store i8 %3, i8* %4, align 1, !dbg !5072
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5073

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5074

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5075
  %9 = load i24, i24* %8, align 4, !dbg !5075
  %10 = and i24 %9, -458753, !dbg !5075
  %11 = or i24 %10, %7, !dbg !5075
  call void @llvm.dbg.label(metadata !5067), !dbg !5076
  %12 = and i24 %9, 30720, !dbg !5077
  %13 = icmp eq i24 %12, 16384, !dbg !5077
  %14 = zext i1 %13 to i24, !dbg !5079
  %15 = or i24 %11, %14, !dbg !5079
  %16 = icmp eq i8 %3, 99, !dbg !5080
  br i1 %16, label %17, label %43, !dbg !5082

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5083
  %19 = icmp ne i24 %18, 0, !dbg !5083
  call void @llvm.dbg.value(metadata i1 %19, metadata !5066, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5069
  br label %43, !dbg !5085

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5086
  %22 = load i24, i24* %21, align 4, !dbg !5087
  %23 = and i24 %22, -458753, !dbg !5087
  %24 = or i24 %23, 262144, !dbg !5087
  call void @llvm.dbg.value(metadata i8 1, metadata !5066, metadata !DIExpression()), !dbg !5069
  br label %43, !dbg !5088

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5091
  %27 = load i24, i24* %26, align 4, !dbg !5092
  %28 = and i24 %27, -458753, !dbg !5092
  %29 = or i24 %28, 196608, !dbg !5092
  %30 = and i24 %27, 30720, !dbg !5093
  %31 = icmp eq i24 %30, 16384, !dbg !5093
  br label %43, !dbg !5095

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5096
  %34 = load i24, i24* %33, align 4, !dbg !5097
  %35 = and i24 %34, -458753, !dbg !5097
  %36 = or i24 %35, 196608, !dbg !5097
  %37 = and i24 %34, 30720, !dbg !5098
  %38 = icmp ne i24 %37, 0, !dbg !5098
  br label %43, !dbg !5100

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5101
  %41 = load i24, i24* %40, align 4, !dbg !5102
  %42 = or i24 %41, 1, !dbg !5102
  br label %43, !dbg !5103

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5104
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5105
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5106
  call void @llvm.dbg.value(metadata i8* %48, metadata !5065, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8 poison, metadata !5066, metadata !DIExpression()), !dbg !5069
  %49 = lshr i24 %44, 1, !dbg !5104
  %50 = and i24 %49, 1, !dbg !5104
  %51 = zext i24 %50 to i32, !dbg !5104
  %52 = or i32 %51, %47, !dbg !5104
  %53 = trunc i32 %52 to i24, !dbg !5104
  %54 = shl nuw nsw i24 %53, 1, !dbg !5104
  %55 = and i24 %44, -3, !dbg !5104
  %56 = or i24 %54, %55, !dbg !5104
  store i24 %56, i24* %46, align 4, !dbg !5104
  ret i8* %48, !dbg !5107
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5108 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5113, metadata !DIExpression()), !dbg !5116
  %2 = load i8*, i8** %0, align 4, !dbg !5117
  call void @llvm.dbg.value(metadata i8* %2, metadata !5114, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i32 0, metadata !5115, metadata !DIExpression()), !dbg !5116
  %3 = load i8, i8* %2, align 1, !dbg !5118
  %4 = zext i8 %3 to i32, !dbg !5119
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !5120
  %6 = icmp eq i32 %5, 0, !dbg !5121
  br i1 %6, label %19, label %7, !dbg !5121

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5115, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i8* %10, metadata !5114, metadata !DIExpression()), !dbg !5116
  %11 = mul i32 %9, 10, !dbg !5122
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5124
  call void @llvm.dbg.value(metadata i8* %12, metadata !5114, metadata !DIExpression()), !dbg !5116
  %13 = add i32 %11, -48, !dbg !5125
  %14 = add i32 %13, %8, !dbg !5126
  call void @llvm.dbg.value(metadata i32 %14, metadata !5115, metadata !DIExpression()), !dbg !5116
  %15 = load i8, i8* %12, align 1, !dbg !5118
  %16 = zext i8 %15 to i32, !dbg !5119
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !5120
  %18 = icmp eq i32 %17, 0, !dbg !5121
  br i1 %18, label %19, label %7, !dbg !5121, !llvm.loop !5127

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5116
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5116
  store i8* %20, i8** %0, align 4, !dbg !5129
  ret i32 %21, !dbg !5130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5133, metadata !DIExpression()), !dbg !5134
  %2 = add i32 %0, -48, !dbg !5135
  %3 = icmp ult i32 %2, 10, !dbg !5136
  %4 = zext i1 %3 to i32, !dbg !5136
  ret i32 %4, !dbg !5137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5138 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5140, !srcloc !5141
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5142, !srcloc !5143
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5144, !srcloc !5145
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5146, !srcloc !5147
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5148, !srcloc !5149
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5150, !srcloc !5151
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5152, !srcloc !5153
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5154, !srcloc !5155
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5156, !srcloc !5157
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5158, !srcloc !5159
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5160, !srcloc !5161
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5162, !srcloc !5163
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5164, !srcloc !5165
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5166, !srcloc !5167
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5168, !srcloc !5169
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5170, !srcloc !5171
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5172, !srcloc !5173
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5174, !srcloc !5175
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5176, !srcloc !5177
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5178, !srcloc !5179
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5180, !srcloc !5181
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5182, !srcloc !5183
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5184, !srcloc !5185
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5186, !srcloc !5187
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5188, !srcloc !5189
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5190, !srcloc !5191
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5192, !srcloc !5193
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5194, !srcloc !5195
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5196, !srcloc !5197
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5198, !srcloc !5199
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5200, !srcloc !5201
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5202, !srcloc !5203
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5204, !srcloc !5205
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5206, !srcloc !5207
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5208, !srcloc !5209
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5210, !srcloc !5211
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5212, !srcloc !5213
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5214, !srcloc !5215
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5216, !srcloc !5217
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5218, !srcloc !5219
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5220, !srcloc !5221
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5222, !srcloc !5223
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #25, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #25, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #25, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #25, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #25, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETLINE\0A\09.equ\09CONFIG_CONSOLE_GETLINE,1\0A\09.type\09CONFIG_CONSOLE_GETLINE,%object", ""() #25, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5692, !srcloc !5693
  ret void, !dbg !5694
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5695 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5697, metadata !DIExpression()), !dbg !5699
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !5700
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !5701
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5702, !srcloc !5711
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5702
  call void @llvm.dbg.value(metadata i32 %3, metadata !5708, metadata !DIExpression()) #25, !dbg !5712
  call void @llvm.dbg.value(metadata i32 undef, metadata !5709, metadata !DIExpression()) #25, !dbg !5712
  call void @llvm.dbg.value(metadata i32 %3, metadata !5698, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i32 %3, metadata !5713, metadata !DIExpression()) #25, !dbg !5718
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5720, !srcloc !5721
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5722
  ret i32 0, !dbg !5723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5724 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5726
  %2 = or i32 %1, 512, !dbg !5726
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5726
  ret void, !dbg !5727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5728 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5729
  %2 = or i32 %1, 1024, !dbg !5729
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5729
  ret void, !dbg !5730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5731 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5733, metadata !DIExpression()), !dbg !5734
  ret i32 0, !dbg !5735
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @console_getline() local_unnamed_addr #1 !dbg !341 {
  %1 = load %struct.console_input*, %struct.console_input** @console_getline.cmd, align 4, !dbg !5736
  %2 = icmp eq %struct.console_input* %1, null, !dbg !5738
  br i1 %2, label %5, label %3, !dbg !5739

3:                                                ; preds = %0
  %4 = bitcast %struct.console_input* %1 to i8*, !dbg !5740
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull %4) #26, !dbg !5740
  br label %5, !dbg !5743

5:                                                ; preds = %3, %0
  %6 = tail call fastcc i8* @k_queue_get() #27, !dbg !5744
  call void @llvm.dbg.value(metadata i8* %6, metadata !346, metadata !DIExpression()), !dbg !5745
  store i8* %6, i8** bitcast (%struct.console_input** @console_getline.cmd to i8**), align 4, !dbg !5746
  %7 = getelementptr inbounds i8, i8* %6, i32 5, !dbg !5747
  ret i8* %7, !dbg !5748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !5749 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5759, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), metadata !5758, metadata !DIExpression()), !dbg !5760
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5761, !srcloc !5763
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), [1 x i64] [i64 -1]) #26, !dbg !5764
  ret i8* %1, !dbg !5765
}

; Function Attrs: noinline nounwind optsize
define dso_local void @console_getline_init() local_unnamed_addr #1 !dbg !5766 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5768, metadata !DIExpression()), !dbg !5769
  call void @llvm.dbg.value(metadata i32 0, metadata !5768, metadata !DIExpression()), !dbg !5769
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast ([2 x %struct.console_input]* @line_bufs to i8*)) #26, !dbg !5770
  call void @llvm.dbg.value(metadata i32 0, metadata !5768, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5769
  call void @llvm.dbg.value(metadata i32 0, metadata !5768, metadata !DIExpression()), !dbg !5769
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast (%struct.console_input* getelementptr inbounds ([2 x %struct.console_input], [2 x %struct.console_input]* @line_bufs, i32 0, i32 1) to i8*)) #26, !dbg !5770
  call void @llvm.dbg.value(metadata i32 0, metadata !5768, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5769
  tail call void @uart_register_input(%struct.k_fifo* noundef nonnull @free_queue, %struct.k_fifo* noundef nonnull @used_queue, i8 (i8*, i8)* noundef null) #26, !dbg !5775
  ret void, !dbg !5776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5826, metadata !DIExpression()), !dbg !5828
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5827, metadata !DIExpression()), !dbg !5828
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !5829
  ret void, !dbg !5830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5831 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5848, metadata !DIExpression()), !dbg !5851
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5849, metadata !DIExpression()), !dbg !5851
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5852
  %4 = load i32, i32* %3, align 4, !dbg !5852
  call void @llvm.dbg.value(metadata i32 %4, metadata !5850, metadata !DIExpression()), !dbg !5851
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !5853
  ret void, !dbg !5854
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5855 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5859, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i8* %0, metadata !5860, metadata !DIExpression()), !dbg !5862
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5863
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !5863
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5861, metadata !DIExpression()), !dbg !5864
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5864
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5865
  %5 = bitcast i8* %4 to i32*, !dbg !5865
  %6 = load i32, i32* %5, align 4, !dbg !5865
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5866
  store i32 %6, i32* %7, align 4, !dbg !5867
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !5868
  unreachable, !dbg !5869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5873, metadata !DIExpression()), !dbg !5874
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !5875
  ret void, !dbg !5876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5881, metadata !DIExpression()), !dbg !5882
  %2 = icmp sgt i32 %0, -1, !dbg !5883
  br i1 %2, label %3, label %8, !dbg !5885

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5886, !srcloc !5888
  %4 = and i32 %0, 31, !dbg !5889
  %5 = shl nuw i32 1, %4, !dbg !5890
  %6 = lshr i32 %0, 5, !dbg !5891
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5892
  store volatile i32 %5, i32* %7, align 4, !dbg !5893
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5894, !srcloc !5895
  br label %8, !dbg !5896

8:                                                ; preds = %3, %1
  ret void, !dbg !5897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5900, metadata !DIExpression()), !dbg !5901
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !5902
  ret void, !dbg !5903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5906, metadata !DIExpression()), !dbg !5907
  %2 = icmp sgt i32 %0, -1, !dbg !5908
  br i1 %2, label %3, label %8, !dbg !5910

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5911
  %5 = shl nuw i32 1, %4, !dbg !5913
  %6 = lshr i32 %0, 5, !dbg !5914
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5915
  store volatile i32 %5, i32* %7, align 4, !dbg !5916
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !5917, !srcloc !5921
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !5922, !srcloc !5925
  br label %8, !dbg !5926

8:                                                ; preds = %3, %1
  ret void, !dbg !5927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !5928 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5932, metadata !DIExpression()), !dbg !5933
  %2 = lshr i32 %0, 5, !dbg !5934
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5935
  %4 = load volatile i32, i32* %3, align 4, !dbg !5935
  %5 = and i32 %0, 31, !dbg !5936
  %6 = shl nuw i32 1, %5, !dbg !5936
  %7 = and i32 %4, %6, !dbg !5937
  ret i32 %7, !dbg !5938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !5939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5943, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.value(metadata i32 %1, metadata !5944, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.value(metadata i32 %2, metadata !5945, metadata !DIExpression()), !dbg !5946
  %4 = add i32 %1, 1, !dbg !5947
  call void @llvm.dbg.value(metadata i32 %4, metadata !5944, metadata !DIExpression()), !dbg !5946
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !5950
  ret void, !dbg !5951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5956, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.value(metadata i32 %1, metadata !5957, metadata !DIExpression()), !dbg !5958
  %3 = trunc i32 %1 to i8, !dbg !5959
  %4 = shl i8 %3, 4, !dbg !5959
  %5 = and i32 %0, 15, !dbg !5961
  %6 = add nsw i32 %5, -4, !dbg !5961
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5961
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5961
  %9 = icmp slt i32 %0, 0, !dbg !5961
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5961
  store volatile i8 %4, i8* %10, align 1, !dbg !5959
  ret void, !dbg !5962
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5963 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5965, metadata !DIExpression()), !dbg !5966
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !5967
  ret void, !dbg !5968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5969 {
  tail call void @z_SysNmiOnReset() #26, !dbg !5971
  tail call void @z_arm_int_exit() #26, !dbg !5972
  ret void, !dbg !5973
}

; Function Attrs: optsize
declare !dbg !5974 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5975 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !5977 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !5979
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !5980
  tail call void @z_bss_zero() #26, !dbg !5981
  tail call void @z_data_copy() #26, !dbg !5982
  tail call void @z_arm_interrupt_init() #26, !dbg !5983
  tail call void @z_cstart() #29, !dbg !5984
  unreachable, !dbg !5984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5985 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5986
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !5987, !srcloc !5990
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !5991, !srcloc !5994
  ret void, !dbg !5995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !5996 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5997
  %2 = and i32 %1, -15728641, !dbg !5997
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5997
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !5998, !srcloc !6005
  call void @llvm.dbg.value(metadata i32 %3, metadata !6003, metadata !DIExpression()) #25, !dbg !6006
  %4 = and i32 %3, -5, !dbg !6007
  call void @llvm.dbg.value(metadata i32 %4, metadata !6008, metadata !DIExpression()) #25, !dbg !6013
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6017, !srcloc !5994
  ret void, !dbg !6019
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6023, metadata !DIExpression()), !dbg !6024
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6025
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6026
  store i32 %0, i32* %3, align 4, !dbg !6027
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6028
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6029
  store i32 %4, i32* %5, align 4, !dbg !6030
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6031
  %7 = or i32 %6, 268435456, !dbg !6031
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6031
  call void @llvm.dbg.value(metadata i32 0, metadata !6032, metadata !DIExpression()) #25, !dbg !6035
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6037, !srcloc !6038
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6039
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6040
  %10 = load i32, i32* %9, align 4, !dbg !6040
  ret i32 %10, !dbg !6041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6042 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6152, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6153, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i8* %2, metadata !6154, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6155, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i8* %4, metadata !6156, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i8* %5, metadata !6157, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i8* %6, metadata !6158, metadata !DIExpression()), !dbg !6160
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6161
  call void @llvm.dbg.value(metadata i8* %8, metadata !6159, metadata !DIExpression()), !dbg !6160
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6162
  %10 = bitcast i8* %9 to i32*, !dbg !6162
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6163
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6164
  %12 = bitcast i8* %8 to i32*, !dbg !6165
  store i32 %11, i32* %12, align 4, !dbg !6166
  %13 = ptrtoint i8* %4 to i32, !dbg !6167
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6168
  %15 = bitcast i8* %14 to i32*, !dbg !6168
  store i32 %13, i32* %15, align 4, !dbg !6169
  %16 = ptrtoint i8* %5 to i32, !dbg !6170
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6171
  %18 = bitcast i8* %17 to i32*, !dbg !6171
  store i32 %16, i32* %18, align 4, !dbg !6172
  %19 = ptrtoint i8* %6 to i32, !dbg !6173
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6174
  %21 = bitcast i8* %20 to i32*, !dbg !6174
  store i32 %19, i32* %21, align 4, !dbg !6175
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6176
  %23 = bitcast i8* %22 to i32*, !dbg !6176
  store i32 16777216, i32* %23, align 4, !dbg !6177
  %24 = ptrtoint i8* %8 to i32, !dbg !6178
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6179
  store i32 %24, i32* %25, align 8, !dbg !6180
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6181
  store i32 0, i32* %26, align 4, !dbg !6182
  ret void, !dbg !6183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6189, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata i32 %1, metadata !6190, metadata !DIExpression()), !dbg !6195
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6196
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6191, metadata !DIExpression()), !dbg !6195
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6197
  br i1 %4, label %19, label %5, !dbg !6199

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6194, metadata !DIExpression()), !dbg !6195
  %6 = icmp eq i32 %0, -22, !dbg !6200
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6200
  %8 = load i32, i32* %7, align 4, !dbg !6200
  br i1 %6, label %16, label %9, !dbg !6202

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6200
  %11 = icmp ule i32 %10, %0, !dbg !6200
  %12 = icmp ugt i32 %8, %0, !dbg !6200
  %13 = and i1 %12, %11, !dbg !6200
  %14 = icmp ugt i32 %8, %1, !dbg !6200
  %15 = and i1 %14, %13, !dbg !6200
  br i1 %15, label %18, label %19, !dbg !6200

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6200
  br i1 %17, label %18, label %19, !dbg !6202

18:                                               ; preds = %9, %16
  br label %19, !dbg !6203

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6195
  ret i32 %20, !dbg !6205
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6206 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6210, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata i8* %1, metadata !6211, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6212, metadata !DIExpression()), !dbg !6213
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6214
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !6215
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6216, !srcloc !6217
  unreachable, !dbg !6218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6219 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6237, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 %1, metadata !6238, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 %2, metadata !6239, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6240, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 0, metadata !6241, metadata !DIExpression()), !dbg !6247
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6248
  %9 = and i32 %8, 511, !dbg !6249
  call void @llvm.dbg.value(metadata i32 %9, metadata !6242, metadata !DIExpression()), !dbg !6247
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6250
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6250
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6251
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6251
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6246, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.value(metadata i32 0, metadata !6253, metadata !DIExpression()) #25, !dbg !6256
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6258, !srcloc !6259
  call void @llvm.dbg.value(metadata i8* %6, metadata !6244, metadata !DIExpression(DW_OP_deref)), !dbg !6247
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !6260
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6245, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i8* %5, metadata !6243, metadata !DIExpression(DW_OP_deref)), !dbg !6247
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #27, !dbg !6261
  call void @llvm.dbg.value(metadata i32 %12, metadata !6241, metadata !DIExpression()), !dbg !6247
  %13 = load i8, i8* %5, align 1, !dbg !6262, !range !6264
  call void @llvm.dbg.value(metadata i8 %13, metadata !6243, metadata !DIExpression()), !dbg !6247
  %14 = icmp eq i8 %13, 0, !dbg !6262
  br i1 %14, label %15, label %32, !dbg !6265

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6266
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #26, !dbg !6267
  %18 = load i8, i8* %6, align 1, !dbg !6268, !range !6264
  call void @llvm.dbg.value(metadata i8 %18, metadata !6244, metadata !DIExpression()), !dbg !6247
  %19 = icmp eq i8 %18, 0, !dbg !6268
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6270
  %21 = load i32, i32* %20, align 4, !dbg !6270
  br i1 %19, label %27, label %22, !dbg !6271

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6272
  %24 = icmp eq i32 %23, 0, !dbg !6275
  br i1 %24, label %25, label %31, !dbg !6276

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6277
  br label %29, !dbg !6279

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6280
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6270
  br label %31, !dbg !6282

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #26, !dbg !6282
  br label %32, !dbg !6283

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6283
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6283
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6283
  ret void, !dbg !6283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6289, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata i32 %1, metadata !6290, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata i32 %2, metadata !6291, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata i8* %3, metadata !6292, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata i8 0, metadata !6293, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6294, metadata !DIExpression()), !dbg !6295
  store i8 0, i8* %3, align 1, !dbg !6296
  %5 = icmp ult i32 %2, -16777216, !dbg !6297
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6299
  br i1 %8, label %16, label %9, !dbg !6299

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6300
  %11 = icmp eq i32 %10, 0, !dbg !6300
  br i1 %11, label %12, label %13, !dbg !6302

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6294, metadata !DIExpression()), !dbg !6295
  store i8 1, i8* %3, align 1, !dbg !6305
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6295
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6294, metadata !DIExpression()), !dbg !6295
  br label %16, !dbg !6308

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6295
  ret %struct.__esf* %17, !dbg !6309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6310 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6314, metadata !DIExpression()), !dbg !6318
  call void @llvm.dbg.value(metadata i32 %1, metadata !6315, metadata !DIExpression()), !dbg !6318
  call void @llvm.dbg.value(metadata i8* %2, metadata !6316, metadata !DIExpression()), !dbg !6318
  call void @llvm.dbg.value(metadata i32 0, metadata !6317, metadata !DIExpression()), !dbg !6318
  store i8 0, i8* %2, align 1, !dbg !6319
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6320

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !6321
  call void @llvm.dbg.value(metadata i32 %5, metadata !6317, metadata !DIExpression()), !dbg !6318
  br label %11, !dbg !6323

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %7, metadata !6317, metadata !DIExpression()), !dbg !6318
  br label %11, !dbg !6325

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6326
  call void @llvm.dbg.value(metadata i32 0, metadata !6317, metadata !DIExpression()), !dbg !6318
  br label %11, !dbg !6327

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !6328
  call void @llvm.dbg.value(metadata i32 0, metadata !6317, metadata !DIExpression()), !dbg !6318
  br label %11, !dbg !6329

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !6330
  br label %11, !dbg !6331

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6333 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6337, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.value(metadata i8* %1, metadata !6338, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.value(metadata i32 0, metadata !6339, metadata !DIExpression()), !dbg !6340
  store i8 0, i8* %1, align 1, !dbg !6341
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6342
  %4 = and i32 %3, 2, !dbg !6344
  %5 = icmp eq i32 %4, 0, !dbg !6345
  br i1 %5, label %6, label %33, !dbg !6346

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6347
  %8 = icmp sgt i32 %7, -1, !dbg !6349
  br i1 %8, label %9, label %33, !dbg !6350

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6351
  %11 = and i32 %10, 1073741824, !dbg !6353
  %12 = icmp eq i32 %11, 0, !dbg !6354
  br i1 %12, label %33, label %13, !dbg !6355

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !6356
  br i1 %14, label %15, label %18, !dbg !6359

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6360
  %17 = load i32, i32* %16, align 4, !dbg !6360
  call void @llvm.dbg.value(metadata i32 %17, metadata !6339, metadata !DIExpression()), !dbg !6340
  br label %33, !dbg !6362

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6363
  %20 = and i32 %19, 255, !dbg !6365
  %21 = icmp eq i32 %20, 0, !dbg !6366
  br i1 %21, label %24, label %22, !dbg !6367

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6368
  call void @llvm.dbg.value(metadata i32 %23, metadata !6339, metadata !DIExpression()), !dbg !6340
  br label %33, !dbg !6370

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6371
  %26 = and i32 %25, 65280, !dbg !6373
  %27 = icmp eq i32 %26, 0, !dbg !6374
  br i1 %27, label %29, label %28, !dbg !6375

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6376
  call void @llvm.dbg.value(metadata i32 0, metadata !6339, metadata !DIExpression()), !dbg !6340
  br label %33, !dbg !6378

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6379
  %31 = icmp ult i32 %30, 65536, !dbg !6381
  br i1 %31, label %33, label %32, !dbg !6382

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #27, !dbg !6383
  call void @llvm.dbg.value(metadata i32 0, metadata !6339, metadata !DIExpression()), !dbg !6340
  br label %33, !dbg !6385

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6340
  call void @llvm.dbg.value(metadata i32 %34, metadata !6339, metadata !DIExpression()), !dbg !6340
  ret i32 %34, !dbg !6386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6387 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6389, metadata !DIExpression()), !dbg !6402
  call void @llvm.dbg.value(metadata i32 %1, metadata !6390, metadata !DIExpression()), !dbg !6402
  call void @llvm.dbg.value(metadata i8* %2, metadata !6391, metadata !DIExpression()), !dbg !6402
  call void @llvm.dbg.value(metadata i32 0, metadata !6392, metadata !DIExpression()), !dbg !6402
  call void @llvm.dbg.value(metadata i32 -22, metadata !6393, metadata !DIExpression()), !dbg !6402
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6403
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6405
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6407
  %7 = and i32 %6, 2, !dbg !6408
  %8 = icmp eq i32 %7, 0, !dbg !6409
  br i1 %8, label %19, label %9, !dbg !6410

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6411
  call void @llvm.dbg.value(metadata i32 %10, metadata !6394, metadata !DIExpression()), !dbg !6412
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6413
  %12 = and i32 %11, 128, !dbg !6415
  %13 = icmp eq i32 %12, 0, !dbg !6416
  br i1 %13, label %19, label %14, !dbg !6417

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6393, metadata !DIExpression()), !dbg !6402
  %15 = icmp eq i32 %1, 0, !dbg !6418
  br i1 %15, label %19, label %16, !dbg !6421

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6422
  %18 = and i32 %17, -129, !dbg !6422
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6422
  br label %19, !dbg !6424

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6402
  call void @llvm.dbg.value(metadata i32 %20, metadata !6393, metadata !DIExpression()), !dbg !6402
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6425
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6427
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6429
  %24 = and i32 %23, 16, !dbg !6430
  %25 = icmp eq i32 %24, 0, !dbg !6430
  br i1 %25, label %26, label %30, !dbg !6431

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6432
  %28 = and i32 %27, 2, !dbg !6433
  %29 = icmp eq i32 %28, 0, !dbg !6433
  br i1 %29, label %39, label %30, !dbg !6434

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6435
  %32 = and i32 %31, 2048, !dbg !6436
  %33 = icmp eq i32 %32, 0, !dbg !6436
  br i1 %33, label %39, label %34, !dbg !6437

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6438
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #26, !dbg !6439
  call void @llvm.dbg.value(metadata i32 %36, metadata !6397, metadata !DIExpression()), !dbg !6440
  %37 = icmp eq i32 %36, 0, !dbg !6441
  br i1 %37, label %39, label %38, !dbg !6443

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6444, metadata !DIExpression()) #25, !dbg !6447
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6450, !srcloc !6451
  call void @llvm.dbg.value(metadata i32 2, metadata !6392, metadata !DIExpression()), !dbg !6402
  br label %39, !dbg !6452

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6402
  call void @llvm.dbg.value(metadata i32 %40, metadata !6392, metadata !DIExpression()), !dbg !6402
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6453
  %42 = and i32 %41, 32, !dbg !6455
  %43 = icmp eq i32 %42, 0, !dbg !6456
  br i1 %43, label %47, label %44, !dbg !6457

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6458
  %46 = and i32 %45, -8193, !dbg !6458
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6458
  br label %47, !dbg !6460

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6461
  %49 = or i32 %48, 255, !dbg !6461
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6461
  store i8 0, i8* %2, align 1, !dbg !6462
  ret i32 %40, !dbg !6463
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6464 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6468, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i32 %0, metadata !6469, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i8* %1, metadata !6470, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i32 0, metadata !6471, metadata !DIExpression()), !dbg !6475
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6476
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6478
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6480
  %6 = and i32 %5, 512, !dbg !6481
  %7 = icmp eq i32 %6, 0, !dbg !6481
  br i1 %7, label %18, label %8, !dbg !6482

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6483
  call void @llvm.dbg.value(metadata i32 %9, metadata !6472, metadata !DIExpression()), !dbg !6484
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6485
  %11 = and i32 %10, 32768, !dbg !6487
  %12 = icmp ne i32 %11, 0, !dbg !6488
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6489
  br i1 %14, label %15, label %18, !dbg !6489

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6490
  %17 = and i32 %16, -32769, !dbg !6490
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6490
  br label %18, !dbg !6494

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6495
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6497
  %21 = and i32 %20, 256, !dbg !6499
  %22 = icmp eq i32 %21, 0, !dbg !6500
  br i1 %22, label %23, label %25, !dbg !6501

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6502
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6504
  %27 = or i32 %26, 65280, !dbg !6504
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6504
  store i8 0, i8* %1, align 1, !dbg !6505
  ret void, !dbg !6506
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6507 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6513, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i32 0, metadata !6514, metadata !DIExpression()), !dbg !6515
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6516
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6518
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6520
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6522
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6524
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6526
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6528
  %8 = or i32 %7, -65536, !dbg !6528
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6528
  ret void, !dbg !6529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6530 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6534, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata i8* %0, metadata !6535, metadata !DIExpression()), !dbg !6536
  store i8 0, i8* %0, align 1, !dbg !6537
  ret void, !dbg !6538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6539 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6543, metadata !DIExpression()), !dbg !6546
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6547
  %3 = load i32, i32* %2, align 4, !dbg !6547
  %4 = inttoptr i32 %3 to i16*, !dbg !6548
  call void @llvm.dbg.value(metadata i16* %4, metadata !6544, metadata !DIExpression()), !dbg !6546
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6549
  %6 = or i32 %5, 256, !dbg !6549
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6549
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6550, !srcloc !6553
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6554, !srcloc !6557
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6558
  %8 = load i16, i16* %7, align 2, !dbg !6559
  call void @llvm.dbg.value(metadata i16 %8, metadata !6545, metadata !DIExpression()), !dbg !6546
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6560
  %10 = and i32 %9, -257, !dbg !6560
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6560
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6561, !srcloc !6553
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6563, !srcloc !6557
  %11 = icmp eq i16 %8, -8446, !dbg !6565
  ret i1 %11, !dbg !6567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6568 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6569
  %2 = or i32 %1, 16, !dbg !6569
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6569
  ret void, !dbg !6570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6571 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6574, metadata !DIExpression()), !dbg !6575
  br label %1, !dbg !6576

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6574, metadata !DIExpression()), !dbg !6575
  tail call fastcc void @__NVIC_SetPriority.16(i32 noundef %2) #27, !dbg !6578
  %3 = add nuw nsw i32 %2, 1, !dbg !6581
  call void @llvm.dbg.value(metadata i32 %3, metadata !6574, metadata !DIExpression()), !dbg !6575
  %4 = icmp eq i32 %3, 86, !dbg !6582
  br i1 %4, label %5, label %1, !dbg !6576, !llvm.loop !6583

5:                                                ; preds = %1
  ret void, !dbg !6585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.16(i32 noundef %0) unnamed_addr #15 !dbg !6586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6588, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i32 1, metadata !6589, metadata !DIExpression()), !dbg !6590
  %2 = and i32 %0, 15, !dbg !6591
  %3 = add nsw i32 %2, -4, !dbg !6591
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6591
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6591
  %6 = icmp slt i32 %0, 0, !dbg !6591
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6591
  store volatile i8 16, i8* %7, align 1, !dbg !6592
  ret void, !dbg !6594
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6595 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6701, metadata !DIExpression()), !dbg !6702
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6703
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6705
  br i1 %3, label %4, label %12, !dbg !6706

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6707, !srcloc !6719
  call void @llvm.dbg.value(metadata i32 %5, metadata !6710, metadata !DIExpression()) #25, !dbg !6720
  %6 = icmp eq i32 %5, 0, !dbg !6721
  br i1 %6, label %12, label %7, !dbg !6722

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6723
  %9 = or i32 %8, 268435456, !dbg !6723
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6723
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6725
  %11 = and i32 %10, -32769, !dbg !6725
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6725
  br label %12, !dbg !6726

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !6727
  ret void, !dbg !6728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6729 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !6730
  ret void, !dbg !6731
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !373 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !488, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i8 0, metadata !489, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i32 64, metadata !491, metadata !DIExpression()), !dbg !6732
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6733
  %3 = load i32, i32* %2, align 4, !dbg !6733
  %4 = add i32 %3, -64, !dbg !6735
  call void @llvm.dbg.value(metadata i32 %4, metadata !490, metadata !DIExpression()), !dbg !6732
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6736
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6737
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6738
  call void @llvm.dbg.value(metadata i8 1, metadata !489, metadata !DIExpression()), !dbg !6732
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !6739
  ret void, !dbg !6740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6741 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6742
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6743, !srcloc !6746
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6747, !srcloc !6750
  ret void, !dbg !6751
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6752 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6753, !srcloc !6756
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6757
  ret void, !dbg !6758
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6759 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6774, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8 %1, metadata !6775, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %2, metadata !6776, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %3, metadata !6777, metadata !DIExpression()), !dbg !6778
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !6779
  ret void, !dbg !6781
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6782 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6787, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.value(metadata i8 %1, metadata !6788, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.value(metadata i32 undef, metadata !6789, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.value(metadata i32 undef, metadata !6790, metadata !DIExpression()), !dbg !6792
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6793
  call void @llvm.dbg.value(metadata i8 %3, metadata !6791, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6792
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !6794
  call void @llvm.dbg.value(metadata i32 %4, metadata !6791, metadata !DIExpression()), !dbg !6792
  %5 = trunc i32 %4 to i8, !dbg !6795
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6796
  ret void, !dbg !6797
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6798 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6802, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i8 %1, metadata !6803, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i8 %2, metadata !6804, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i1 %3, metadata !6805, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6808
  %5 = zext i8 %2 to i32, !dbg !6809
  call void @llvm.dbg.value(metadata i32 %5, metadata !6807, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i32 0, metadata !6806, metadata !DIExpression()), !dbg !6808
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6807, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i32 0, metadata !6806, metadata !DIExpression()), !dbg !6808
  %7 = icmp eq i8 %1, 0, !dbg !6810
  br i1 %7, label %29, label %8, !dbg !6813

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6807, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i32 %10, metadata !6806, metadata !DIExpression()), !dbg !6808
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6814
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6817
  %13 = load i32, i32* %12, align 4, !dbg !6817
  %14 = icmp eq i32 %13, 0, !dbg !6818
  br i1 %14, label %25, label %15, !dbg !6819

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6820

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6822
  %18 = icmp eq i32 %17, 0, !dbg !6822
  br i1 %18, label %29, label %19, !dbg !6823

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6824
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6825
  call void @llvm.dbg.value(metadata i32 %21, metadata !6807, metadata !DIExpression()), !dbg !6808
  %22 = icmp eq i32 %21, -22, !dbg !6826
  br i1 %22, label %29, label %23, !dbg !6828

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6829
  call void @llvm.dbg.value(metadata i32 %24, metadata !6807, metadata !DIExpression()), !dbg !6808
  br label %25, !dbg !6830

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6808
  call void @llvm.dbg.value(metadata i32 %26, metadata !6807, metadata !DIExpression()), !dbg !6808
  %27 = add nuw nsw i32 %10, 1, !dbg !6831
  call void @llvm.dbg.value(metadata i32 %27, metadata !6806, metadata !DIExpression()), !dbg !6808
  %28 = icmp eq i32 %27, %6, !dbg !6810
  br i1 %28, label %29, label %8, !dbg !6813, !llvm.loop !6832

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6808
  ret i32 %30, !dbg !6834
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !6835 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6839, metadata !DIExpression()), !dbg !6841
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6842
  %3 = load i32, i32* %2, align 4, !dbg !6842
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6843, !range !3789
  %5 = icmp ult i32 %4, 2, !dbg !6843
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6844
  br i1 %7, label %8, label %15, !dbg !6844

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6845
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6846
  %11 = load i32, i32* %10, align 4, !dbg !6846
  %12 = and i32 %11, %9, !dbg !6847
  %13 = icmp eq i32 %12, 0, !dbg !6848
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6840, metadata !DIExpression()), !dbg !6841
  ret i32 %16, !dbg !6849
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !6850 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6854, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6855, metadata !DIExpression()), !dbg !6857
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6858
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6858
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6856, metadata !DIExpression()), !dbg !6859
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6860
  %6 = load i32, i32* %5, align 4, !dbg !6860
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6861
  store i32 %6, i32* %7, align 4, !dbg !6862
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6863
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6864
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6865
  %11 = load i32, i32* %10, align 4, !dbg !6865
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #27, !dbg !6866
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !6867
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6868
  ret i32 %12, !dbg !6869
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6870 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !6877, metadata !DIExpression()), !dbg !6881
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !6878, metadata !DIExpression()), !dbg !6881
  call void @llvm.dbg.value(metadata i32 undef, metadata !6879, metadata !DIExpression()), !dbg !6881
  call void @llvm.dbg.value(metadata i32 %2, metadata !6880, metadata !DIExpression()), !dbg !6881
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !6882
  %5 = load i32, i32* %4, align 4, !dbg !6882
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !6883
  %7 = or i32 %6, %5, !dbg !6884
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !6885
  store i32 %7, i32* %8, align 4, !dbg !6886
  ret void, !dbg !6887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6888 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6892, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6893, metadata !DIExpression()), !dbg !6894
  %3 = zext i8 %0 to i32, !dbg !6895
  %4 = icmp ugt i8 %0, 7, !dbg !6897
  br i1 %4, label %6, label %5, !dbg !6898

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !6899
  br label %6, !dbg !6900

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6894
  ret i32 %7, !dbg !6901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6906, metadata !DIExpression()), !dbg !6908
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6907, metadata !DIExpression()), !dbg !6908
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !6909
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6910
  %4 = load i32, i32* %3, align 4, !dbg !6910
  %5 = and i32 %4, -32, !dbg !6911
  %6 = or i32 %5, %0, !dbg !6912
  %7 = or i32 %6, 16, !dbg !6912
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6913
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6914
  %9 = load i32, i32* %8, align 4, !dbg !6914
  %10 = or i32 %9, 1, !dbg !6915
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6916
  ret void, !dbg !6917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !6918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6921, metadata !DIExpression()), !dbg !6922
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6923
  ret void, !dbg !6924
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6929, metadata !DIExpression()), !dbg !6930
  %2 = icmp ult i32 %0, 33, !dbg !6931
  br i1 %2, label %11, label %3, !dbg !6933

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6934
  br i1 %4, label %11, label %5, !dbg !6936

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6937
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6938, !range !3789
  %8 = mul nsw i32 %7, -2, !dbg !6939
  %9 = add nsw i32 %8, 62, !dbg !6939
  %10 = and i32 %9, 62, !dbg !6940
  br label %11, !dbg !6941

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6930
  ret i32 %12, !dbg !6942
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !6943 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6947, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i8 %1, metadata !6948, metadata !DIExpression()), !dbg !6949
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !6950
  ret void, !dbg !6952
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6953 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6957, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata i8 %1, metadata !6958, metadata !DIExpression()), !dbg !6964
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6965
  call void @llvm.dbg.value(metadata i8 %3, metadata !6959, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6964
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !6966
  call void @llvm.dbg.value(metadata i32 %4, metadata !6959, metadata !DIExpression()), !dbg !6964
  %5 = icmp ne i32 %4, -22, !dbg !6967
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6968
  call void @llvm.dbg.value(metadata i32 %4, metadata !6960, metadata !DIExpression()), !dbg !6969
  br i1 %7, label %8, label %12, !dbg !6968

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6960, metadata !DIExpression()), !dbg !6969
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !6970
  %10 = add i32 %9, 1, !dbg !6973
  call void @llvm.dbg.value(metadata i32 %10, metadata !6960, metadata !DIExpression()), !dbg !6969
  %11 = icmp eq i32 %10, 8, !dbg !6974
  br i1 %11, label %12, label %8, !dbg !6975, !llvm.loop !6976

12:                                               ; preds = %8, %2
  ret void, !dbg !6978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !6979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6982, metadata !DIExpression()), !dbg !6983
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6984
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6985
  ret void, !dbg !6986
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6987 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6992
  %2 = icmp ugt i32 %1, 8, !dbg !6994
  br i1 %2, label %14, label %3, !dbg !6995

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !6996
  call void @llvm.dbg.value(metadata i32 0, metadata !6991, metadata !DIExpression()), !dbg !6997
  %4 = icmp eq i32 %1, 0, !dbg !6998
  br i1 %4, label %12, label %5, !dbg !7001

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7001

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6991, metadata !DIExpression()), !dbg !6997
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7002
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #27, !dbg !7004
  %10 = add nuw i32 %8, 1, !dbg !7005
  call void @llvm.dbg.value(metadata i32 %10, metadata !6991, metadata !DIExpression()), !dbg !6997
  %11 = icmp eq i32 %10, %1, !dbg !6998
  br i1 %11, label %12, label %7, !dbg !7001, !llvm.loop !7006

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7008
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7009
  tail call void @arm_core_mpu_enable() #27, !dbg !7010
  br label %14, !dbg !7011

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6997
  ret i32 %15, !dbg !7012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7013 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7020, metadata !DIExpression()), !dbg !7023
  call void @llvm.dbg.value(metadata i8* %1, metadata !7021, metadata !DIExpression()), !dbg !7023
  call void @llvm.dbg.value(metadata i8* %0, metadata !7022, metadata !DIExpression()), !dbg !7023
  %3 = load i8, i8* %1, align 1, !dbg !7024
  %4 = icmp eq i8 %3, 0, !dbg !7025
  br i1 %4, label %13, label %5, !dbg !7026

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7020, metadata !DIExpression()), !dbg !7023
  call void @llvm.dbg.value(metadata i8* %8, metadata !7021, metadata !DIExpression()), !dbg !7023
  store i8 %6, i8* %7, align 1, !dbg !7027
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7029
  call void @llvm.dbg.value(metadata i8* %9, metadata !7020, metadata !DIExpression()), !dbg !7023
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7030
  call void @llvm.dbg.value(metadata i8* %10, metadata !7021, metadata !DIExpression()), !dbg !7023
  %11 = load i8, i8* %10, align 1, !dbg !7024
  %12 = icmp eq i8 %11, 0, !dbg !7025
  br i1 %12, label %13, label %5, !dbg !7026, !llvm.loop !7031

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7033
  ret i8* %0, !dbg !7034
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7035 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7039, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i8* %1, metadata !7040, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i32 %2, metadata !7041, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i8* %0, metadata !7042, metadata !DIExpression()), !dbg !7043
  %4 = icmp eq i32 %2, 0, !dbg !7044
  br i1 %4, label %22, label %5, !dbg !7045

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7039, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i32 %7, metadata !7041, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i8* %8, metadata !7040, metadata !DIExpression()), !dbg !7043
  %9 = load i8, i8* %8, align 1, !dbg !7046
  %10 = icmp eq i8 %9, 0, !dbg !7047
  br i1 %10, label %16, label %11, !dbg !7048

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7049
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7051
  call void @llvm.dbg.value(metadata i8* %12, metadata !7040, metadata !DIExpression()), !dbg !7043
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7052
  call void @llvm.dbg.value(metadata i8* %13, metadata !7039, metadata !DIExpression()), !dbg !7043
  %14 = add i32 %7, -1, !dbg !7053
  call void @llvm.dbg.value(metadata i32 %14, metadata !7041, metadata !DIExpression()), !dbg !7043
  %15 = icmp eq i32 %14, 0, !dbg !7044
  br i1 %15, label %22, label %5, !dbg !7045, !llvm.loop !7054

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7039, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i32 %18, metadata !7041, metadata !DIExpression()), !dbg !7043
  store i8 0, i8* %17, align 1, !dbg !7056
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7058
  call void @llvm.dbg.value(metadata i8* %19, metadata !7039, metadata !DIExpression()), !dbg !7043
  %20 = add i32 %18, -1, !dbg !7059
  call void @llvm.dbg.value(metadata i32 %20, metadata !7041, metadata !DIExpression()), !dbg !7043
  %21 = icmp eq i32 %20, 0, !dbg !7060
  br i1 %21, label %22, label %16, !dbg !7061, !llvm.loop !7062

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7064
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7065 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7069, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.value(metadata i32 %1, metadata !7070, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.value(metadata i32 %1, metadata !7071, metadata !DIExpression()), !dbg !7072
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7073

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7069, metadata !DIExpression()), !dbg !7072
  %6 = load i8, i8* %5, align 1, !dbg !7074
  %7 = icmp eq i8 %6, %3, !dbg !7075
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7076
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7077
  call void @llvm.dbg.value(metadata i8* %10, metadata !7069, metadata !DIExpression()), !dbg !7072
  br i1 %9, label %11, label %4, !dbg !7076, !llvm.loop !7079

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7081
  ret i8* %12, !dbg !7082
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7083 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7085, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.value(metadata i32 %1, metadata !7086, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.value(metadata i8* null, metadata !7087, metadata !DIExpression()), !dbg !7088
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7089

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7088
  call void @llvm.dbg.value(metadata i8* %6, metadata !7087, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.value(metadata i8* %5, metadata !7085, metadata !DIExpression()), !dbg !7088
  %7 = load i8, i8* %5, align 1, !dbg !7090
  %8 = icmp eq i8 %7, %3, !dbg !7093
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7094
  call void @llvm.dbg.value(metadata i8* %9, metadata !7087, metadata !DIExpression()), !dbg !7088
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7095
  call void @llvm.dbg.value(metadata i8* %10, metadata !7085, metadata !DIExpression()), !dbg !7088
  %11 = icmp eq i8 %7, 0, !dbg !7096
  br i1 %11, label %12, label %4, !dbg !7096, !llvm.loop !7097

12:                                               ; preds = %4
  ret i8* %9, !dbg !7099
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7100 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7104, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.value(metadata i32 0, metadata !7105, metadata !DIExpression()), !dbg !7106
  %2 = load i8, i8* %0, align 1, !dbg !7107
  %3 = icmp eq i8 %2, 0, !dbg !7108
  br i1 %3, label %11, label %4, !dbg !7109

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7105, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.value(metadata i8* %6, metadata !7104, metadata !DIExpression()), !dbg !7106
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7110
  call void @llvm.dbg.value(metadata i8* %7, metadata !7104, metadata !DIExpression()), !dbg !7106
  %8 = add i32 %5, 1, !dbg !7112
  call void @llvm.dbg.value(metadata i32 %8, metadata !7105, metadata !DIExpression()), !dbg !7106
  %9 = load i8, i8* %7, align 1, !dbg !7107
  %10 = icmp eq i8 %9, 0, !dbg !7108
  br i1 %10, label %11, label %4, !dbg !7109, !llvm.loop !7113

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7106
  ret i32 %12, !dbg !7115
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7116 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7120, metadata !DIExpression()), !dbg !7123
  call void @llvm.dbg.value(metadata i32 %1, metadata !7121, metadata !DIExpression()), !dbg !7123
  call void @llvm.dbg.value(metadata i32 0, metadata !7122, metadata !DIExpression()), !dbg !7123
  %3 = load i8, i8* %0, align 1, !dbg !7124
  %4 = icmp ne i8 %3, 0, !dbg !7125
  %5 = icmp ne i32 %1, 0, !dbg !7126
  %6 = and i1 %4, %5, !dbg !7126
  br i1 %6, label %7, label %16, !dbg !7127

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7122, metadata !DIExpression()), !dbg !7123
  call void @llvm.dbg.value(metadata i8* %9, metadata !7120, metadata !DIExpression()), !dbg !7123
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7128
  call void @llvm.dbg.value(metadata i8* %10, metadata !7120, metadata !DIExpression()), !dbg !7123
  %11 = add nuw i32 %8, 1, !dbg !7130
  call void @llvm.dbg.value(metadata i32 %11, metadata !7122, metadata !DIExpression()), !dbg !7123
  %12 = load i8, i8* %10, align 1, !dbg !7124
  %13 = icmp ne i8 %12, 0, !dbg !7125
  %14 = icmp ult i32 %11, %1, !dbg !7126
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7126
  br i1 %15, label %7, label %16, !dbg !7127, !llvm.loop !7131

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7123
  ret i32 %17, !dbg !7133
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7134 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7138, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.value(metadata i8* %1, metadata !7139, metadata !DIExpression()), !dbg !7140
  %3 = load i8, i8* %0, align 1, !dbg !7141
  %4 = load i8, i8* %1, align 1, !dbg !7142
  %5 = icmp ne i8 %3, %4, !dbg !7143
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7144
  br i1 %7, label %18, label %8, !dbg !7144

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7139, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.value(metadata i8* %10, metadata !7138, metadata !DIExpression()), !dbg !7140
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7145
  call void @llvm.dbg.value(metadata i8* %11, metadata !7138, metadata !DIExpression()), !dbg !7140
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7147
  call void @llvm.dbg.value(metadata i8* %12, metadata !7139, metadata !DIExpression()), !dbg !7140
  %13 = load i8, i8* %11, align 1, !dbg !7141
  %14 = load i8, i8* %12, align 1, !dbg !7142
  %15 = icmp ne i8 %13, %14, !dbg !7143
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7144
  br i1 %17, label %18, label %8, !dbg !7144, !llvm.loop !7148

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7141
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7142
  %21 = zext i8 %19 to i32, !dbg !7151
  %22 = zext i8 %20 to i32, !dbg !7152
  %23 = sub nsw i32 %21, %22, !dbg !7153
  ret i32 %23, !dbg !7154
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7159, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i8* %1, metadata !7160, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i32 %2, metadata !7161, metadata !DIExpression()), !dbg !7162
  %4 = icmp eq i32 %2, 0, !dbg !7163
  br i1 %4, label %23, label %5, !dbg !7163

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7161, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i8* %7, metadata !7160, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i8* %8, metadata !7159, metadata !DIExpression()), !dbg !7162
  %9 = load i8, i8* %8, align 1, !dbg !7164
  %10 = load i8, i8* %7, align 1, !dbg !7165
  %11 = icmp ne i8 %9, %10, !dbg !7166
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7167
  br i1 %13, label %19, label %14, !dbg !7167

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7168
  call void @llvm.dbg.value(metadata i8* %15, metadata !7159, metadata !DIExpression()), !dbg !7162
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7170
  call void @llvm.dbg.value(metadata i8* %16, metadata !7160, metadata !DIExpression()), !dbg !7162
  %17 = add i32 %6, -1, !dbg !7171
  call void @llvm.dbg.value(metadata i32 %17, metadata !7161, metadata !DIExpression()), !dbg !7162
  %18 = icmp eq i32 %17, 0, !dbg !7163
  br i1 %18, label %23, label %5, !dbg !7163, !llvm.loop !7172

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7175
  %21 = zext i8 %10 to i32, !dbg !7176
  %22 = sub nsw i32 %20, %21, !dbg !7177
  br label %23, !dbg !7178

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7178
  ret i32 %24, !dbg !7179
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7180 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7185, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.value(metadata i8* %1, metadata !7186, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.value(metadata i8** %2, metadata !7187, metadata !DIExpression()), !dbg !7190
  %4 = icmp eq i8* %0, null, !dbg !7191
  br i1 %4, label %5, label %7, !dbg !7191

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7192
  br label %7, !dbg !7191

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7191
  call void @llvm.dbg.value(metadata i8* %8, metadata !7188, metadata !DIExpression()), !dbg !7190
  %9 = load i8, i8* %8, align 1, !dbg !7193
  %10 = icmp eq i8 %9, 0, !dbg !7193
  br i1 %10, label %33, label %11, !dbg !7194

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7188, metadata !DIExpression()), !dbg !7190
  %14 = zext i8 %12 to i32, !dbg !7193
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !7195
  %16 = icmp eq i8* %15, null, !dbg !7194
  br i1 %16, label %21, label %17, !dbg !7196

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7197
  call void @llvm.dbg.value(metadata i8* %18, metadata !7188, metadata !DIExpression()), !dbg !7190
  %19 = load i8, i8* %18, align 1, !dbg !7193
  %20 = icmp eq i8 %19, 0, !dbg !7193
  br i1 %20, label %33, label %11, !dbg !7194, !llvm.loop !7199

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7189, metadata !DIExpression()), !dbg !7190
  %24 = zext i8 %22 to i32, !dbg !7201
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !7202
  %26 = icmp eq i8* %25, null, !dbg !7203
  br i1 %26, label %27, label %31, !dbg !7204

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7205
  call void @llvm.dbg.value(metadata i8* %28, metadata !7189, metadata !DIExpression()), !dbg !7190
  %29 = load i8, i8* %28, align 1, !dbg !7201
  %30 = icmp eq i8 %29, 0, !dbg !7201
  br i1 %30, label %33, label %21, !dbg !7207, !llvm.loop !7208

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7210
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7213
  br label %33, !dbg !7214

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7190
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7190
  store i8* %34, i8** %2, align 4, !dbg !7190
  ret i8* %35, !dbg !7215
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7216 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7218, metadata !DIExpression()), !dbg !7220
  call void @llvm.dbg.value(metadata i8* %1, metadata !7219, metadata !DIExpression()), !dbg !7220
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7221
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7222
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !7223
  ret i8* %0, !dbg !7224
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7225 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7227, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8* %1, metadata !7228, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i32 %2, metadata !7229, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8* %0, metadata !7230, metadata !DIExpression()), !dbg !7232
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7233
  call void @llvm.dbg.value(metadata i32 %4, metadata !7231, metadata !DIExpression()), !dbg !7232
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7234
  call void @llvm.dbg.value(metadata i8* %5, metadata !7227, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8* %1, metadata !7228, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i32 %2, metadata !7229, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i32 %2, metadata !7229, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7232
  %6 = icmp eq i32 %2, 0, !dbg !7235
  br i1 %6, label %18, label %7, !dbg !7236

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7237
  call void @llvm.dbg.value(metadata i8* %9, metadata !7227, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8* %10, metadata !7228, metadata !DIExpression()), !dbg !7232
  %12 = load i8, i8* %10, align 1, !dbg !7238
  %13 = icmp eq i8 %12, 0, !dbg !7239
  br i1 %13, label %18, label %14, !dbg !7240

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7241
  call void @llvm.dbg.value(metadata i8* %15, metadata !7228, metadata !DIExpression()), !dbg !7232
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7243
  call void @llvm.dbg.value(metadata i8* %16, metadata !7227, metadata !DIExpression()), !dbg !7232
  store i8 %12, i8* %9, align 1, !dbg !7244
  call void @llvm.dbg.value(metadata i32 %11, metadata !7229, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i32 %11, metadata !7229, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7232
  %17 = icmp eq i32 %11, 0, !dbg !7235
  br i1 %17, label %18, label %7, !dbg !7236, !llvm.loop !7245

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7232
  store i8 0, i8* %19, align 1, !dbg !7247
  ret i8* %0, !dbg !7248
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7249 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7253, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %1, metadata !7254, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i32 %2, metadata !7255, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %0, metadata !7256, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %1, metadata !7257, metadata !DIExpression()), !dbg !7258
  %4 = icmp eq i32 %2, 0, !dbg !7259
  br i1 %4, label %31, label %5, !dbg !7261

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7257, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %0, metadata !7256, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i32 %2, metadata !7255, metadata !DIExpression()), !dbg !7258
  %6 = add i32 %2, -1, !dbg !7262
  call void @llvm.dbg.value(metadata i32 %6, metadata !7255, metadata !DIExpression()), !dbg !7258
  %7 = icmp eq i32 %6, 0, !dbg !7263
  br i1 %7, label %23, label %8, !dbg !7264

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7265
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7265
  br label %11, !dbg !7265

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7257, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %14, metadata !7256, metadata !DIExpression()), !dbg !7258
  %15 = load i8, i8* %14, align 1, !dbg !7266
  %16 = load i8, i8* %13, align 1, !dbg !7267
  %17 = icmp eq i8 %15, %16, !dbg !7268
  br i1 %17, label %18, label %23, !dbg !7265

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7269
  call void @llvm.dbg.value(metadata i8* %19, metadata !7256, metadata !DIExpression()), !dbg !7258
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7271
  call void @llvm.dbg.value(metadata i8* %20, metadata !7257, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i32 %12, metadata !7255, metadata !DIExpression()), !dbg !7258
  %21 = add i32 %12, -1, !dbg !7262
  call void @llvm.dbg.value(metadata i32 %21, metadata !7255, metadata !DIExpression()), !dbg !7258
  %22 = icmp eq i32 %21, 0, !dbg !7263
  br i1 %22, label %23, label %11, !dbg !7264, !llvm.loop !7272

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7258
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7258
  %26 = load i8, i8* %24, align 1, !dbg !7274
  %27 = zext i8 %26 to i32, !dbg !7274
  %28 = load i8, i8* %25, align 1, !dbg !7275
  %29 = zext i8 %28 to i32, !dbg !7275
  %30 = sub nsw i32 %27, %29, !dbg !7276
  br label %31, !dbg !7277

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7258
  ret i32 %32, !dbg !7278
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7279 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7283, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i8* %1, metadata !7284, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i32 %2, metadata !7285, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i8* %0, metadata !7286, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i8* %1, metadata !7287, metadata !DIExpression()), !dbg !7288
  %4 = ptrtoint i8* %0 to i32, !dbg !7289
  %5 = ptrtoint i8* %1 to i32, !dbg !7289
  %6 = sub i32 %4, %5, !dbg !7289
  %7 = icmp ult i32 %6, %2, !dbg !7291
  br i1 %7, label %10, label %8, !dbg !7292

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7287, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i8* %0, metadata !7286, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i32 %2, metadata !7285, metadata !DIExpression()), !dbg !7288
  %9 = icmp eq i32 %2, 0, !dbg !7293
  br i1 %9, label %26, label %17, !dbg !7295

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7285, metadata !DIExpression()), !dbg !7288
  %12 = add i32 %11, -1, !dbg !7296
  call void @llvm.dbg.value(metadata i32 %12, metadata !7285, metadata !DIExpression()), !dbg !7288
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7299
  %14 = load i8, i8* %13, align 1, !dbg !7299
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7300
  store i8 %14, i8* %15, align 1, !dbg !7301
  %16 = icmp eq i32 %12, 0, !dbg !7302
  br i1 %16, label %26, label %10, !dbg !7303, !llvm.loop !7304

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7287, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i8* %19, metadata !7286, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i32 %20, metadata !7285, metadata !DIExpression()), !dbg !7288
  %21 = load i8, i8* %18, align 1, !dbg !7306
  store i8 %21, i8* %19, align 1, !dbg !7308
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7309
  call void @llvm.dbg.value(metadata i8* %22, metadata !7286, metadata !DIExpression()), !dbg !7288
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7310
  call void @llvm.dbg.value(metadata i8* %23, metadata !7287, metadata !DIExpression()), !dbg !7288
  %24 = add i32 %20, -1, !dbg !7311
  call void @llvm.dbg.value(metadata i32 %24, metadata !7285, metadata !DIExpression()), !dbg !7288
  %25 = icmp eq i32 %24, 0, !dbg !7293
  br i1 %25, label %26, label %17, !dbg !7295, !llvm.loop !7312

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7314
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7315 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7321, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i8* %1, metadata !7322, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i32 %2, metadata !7323, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i8* %0, metadata !7324, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i8* %1, metadata !7325, metadata !DIExpression()), !dbg !7326
  %4 = icmp eq i32 %2, 0, !dbg !7327
  br i1 %4, label %14, label %5, !dbg !7328

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7325, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i8* %7, metadata !7324, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i32 %8, metadata !7323, metadata !DIExpression()), !dbg !7326
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7329
  call void @llvm.dbg.value(metadata i8* %9, metadata !7325, metadata !DIExpression()), !dbg !7326
  %10 = load i8, i8* %6, align 1, !dbg !7331
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7332
  call void @llvm.dbg.value(metadata i8* %11, metadata !7324, metadata !DIExpression()), !dbg !7326
  store i8 %10, i8* %7, align 1, !dbg !7333
  %12 = add i32 %8, -1, !dbg !7334
  call void @llvm.dbg.value(metadata i32 %12, metadata !7323, metadata !DIExpression()), !dbg !7326
  %13 = icmp eq i32 %12, 0, !dbg !7327
  br i1 %13, label %14, label %5, !dbg !7328, !llvm.loop !7335

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7337
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7338 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7342, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 %1, metadata !7343, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 %2, metadata !7344, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i8* %0, metadata !7345, metadata !DIExpression()), !dbg !7347
  %4 = trunc i32 %1 to i8, !dbg !7348
  call void @llvm.dbg.value(metadata i8 %4, metadata !7346, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 %2, metadata !7344, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i8* %0, metadata !7345, metadata !DIExpression()), !dbg !7347
  %5 = icmp eq i32 %2, 0, !dbg !7349
  br i1 %5, label %12, label %6, !dbg !7350

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7344, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i8* %8, metadata !7345, metadata !DIExpression()), !dbg !7347
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7351
  call void @llvm.dbg.value(metadata i8* %9, metadata !7345, metadata !DIExpression()), !dbg !7347
  store i8 %4, i8* %8, align 1, !dbg !7353
  %10 = add i32 %7, -1, !dbg !7354
  call void @llvm.dbg.value(metadata i32 %10, metadata !7344, metadata !DIExpression()), !dbg !7347
  %11 = icmp eq i32 %10, 0, !dbg !7349
  br i1 %11, label %12, label %6, !dbg !7350, !llvm.loop !7355

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7357
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7358 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7362, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.value(metadata i32 %1, metadata !7363, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.value(metadata i32 %2, metadata !7364, metadata !DIExpression()), !dbg !7368
  %4 = icmp eq i32 %2, 0, !dbg !7369
  br i1 %4, label %17, label %5, !dbg !7370

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7371

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7372
  call void @llvm.dbg.value(metadata i8* %9, metadata !7365, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i32 %8, metadata !7364, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.value(metadata i8* %9, metadata !7365, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7372
  %10 = load i8, i8* %9, align 1, !dbg !7373
  %11 = icmp eq i8 %10, %6, !dbg !7376
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7377
  call void @llvm.dbg.value(metadata i8* %12, metadata !7365, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i32 %13, metadata !7364, metadata !DIExpression()), !dbg !7368
  br i1 %15, label %16, label %7, !dbg !7377, !llvm.loop !7378

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7380

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7368
  ret i8* %19, !dbg !7381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7382 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7384, metadata !DIExpression()), !dbg !7385
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7386
  ret void, !dbg !7387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7390, metadata !DIExpression()), !dbg !7391
  ret i32 -1, !dbg !7392
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7397, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata i32* %1, metadata !7398, metadata !DIExpression()), !dbg !7399
  %3 = ptrtoint i32* %1 to i32, !dbg !7400
  %4 = and i32 %3, -2, !dbg !7400
  %5 = icmp eq i32 %4, 2, !dbg !7400
  br i1 %5, label %6, label %9, !dbg !7400

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7401
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !7401
  br label %9, !dbg !7402

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7402
  ret i32 %10, !dbg !7403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7406, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i32* %1, metadata !7407, metadata !DIExpression()), !dbg !7408
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7409
  ret i32 %3, !dbg !7410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7414, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.value(metadata i32* %1, metadata !7415, metadata !DIExpression()), !dbg !7416
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7417, !srcloc !7419
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7420
  ret i32 %3, !dbg !7421
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7427, metadata !DIExpression()), !dbg !7431
  call void @llvm.dbg.value(metadata i32* %1, metadata !7428, metadata !DIExpression()), !dbg !7431
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7432
  call void @llvm.dbg.value(metadata i32 %3, metadata !7429, metadata !DIExpression()), !dbg !7431
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !7433
  call void @llvm.dbg.value(metadata i32 %4, metadata !7430, metadata !DIExpression()), !dbg !7431
  %5 = icmp ne i32 %3, %4, !dbg !7434
  %6 = sext i1 %5 to i32, !dbg !7435
  ret i32 %6, !dbg !7436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7441, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.value(metadata i32 %1, metadata !7442, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.value(metadata i32 %2, metadata !7443, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.value(metadata i32* %3, metadata !7444, metadata !DIExpression()), !dbg !7445
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7446
  ret i32 %5, !dbg !7447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7448 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7450, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 %1, metadata !7451, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 %2, metadata !7452, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32* %3, metadata !7453, metadata !DIExpression()), !dbg !7454
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7455, !srcloc !7457
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7458
  ret i32 %5, !dbg !7459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7460 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7462, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 %1, metadata !7463, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 %2, metadata !7464, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32* %3, metadata !7465, metadata !DIExpression()), !dbg !7470
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7471
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7473
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7473
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7473
  br i1 %11, label %33, label %12, !dbg !7473

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7470
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7470
  call void @llvm.dbg.value(metadata i8* %14, metadata !7468, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 %13, metadata !7466, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 %1, metadata !7467, metadata !DIExpression()), !dbg !7470
  br label %15, !dbg !7474

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7476
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7470
  call void @llvm.dbg.value(metadata i8* %17, metadata !7468, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 %16, metadata !7467, metadata !DIExpression()), !dbg !7470
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7477
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7480
  call void @llvm.dbg.value(metadata i8* %19, metadata !7468, metadata !DIExpression()), !dbg !7470
  %20 = load i8, i8* %17, align 1, !dbg !7481
  %21 = zext i8 %20 to i32, !dbg !7482
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !7477
  %23 = icmp eq i32 %22, -1, !dbg !7483
  br i1 %23, label %30, label %24, !dbg !7484

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7485
  call void @llvm.dbg.value(metadata i32 %25, metadata !7467, metadata !DIExpression()), !dbg !7470
  %26 = icmp eq i32 %25, 0, !dbg !7486
  br i1 %26, label %27, label %15, !dbg !7487, !llvm.loop !7488

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7490
  call void @llvm.dbg.value(metadata i32 %28, metadata !7466, metadata !DIExpression()), !dbg !7470
  %29 = icmp eq i32 %28, 0, !dbg !7491
  br i1 %29, label %30, label %12, !dbg !7492, !llvm.loop !7493

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7470
  call void @llvm.dbg.value(metadata i32 %31, metadata !7466, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.label(metadata !7469), !dbg !7496
  %32 = sub i32 %2, %31, !dbg !7497
  br label %33, !dbg !7498

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7470
  ret i32 %34, !dbg !7499
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7500 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7504, metadata !DIExpression()), !dbg !7505
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7506
  %3 = icmp eq i32 %2, -1, !dbg !7508
  br i1 %3, label %8, label %4, !dbg !7509

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7510
  %6 = icmp eq i32 %5, -1, !dbg !7511
  %7 = sext i1 %6 to i32, !dbg !7510
  br label %8, !dbg !7512

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7505
  ret i32 %9, !dbg !7513
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7514 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7516, metadata !DIExpression()), !dbg !7517
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !7518
  ret void, !dbg !7519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7520 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7524, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.value(metadata i32 %1, metadata !7525, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7526, metadata !DIExpression()), !dbg !7530
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7531
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7531
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7531
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7527, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.value(metadata i32 %0, metadata !7529, metadata !DIExpression()), !dbg !7530
  %7 = icmp slt i32 %0, %1, !dbg !7532
  br i1 %7, label %8, label %22, !dbg !7535

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7529, metadata !DIExpression()), !dbg !7530
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !7536
  %11 = icmp eq i32 %10, 0, !dbg !7536
  br i1 %11, label %19, label %12, !dbg !7539

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !7540
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7542
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7542
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7544
  br i1 %15, label %19, label %16, !dbg !7545

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7546
  %18 = load i8*, i8** %17, align 4, !dbg !7546
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !7547
  br label %19, !dbg !7548

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7549
  call void @llvm.dbg.value(metadata i32 %20, metadata !7529, metadata !DIExpression()), !dbg !7530
  %21 = icmp eq i32 %20, %1, !dbg !7532
  br i1 %21, label %22, label %8, !dbg !7535, !llvm.loop !7550

22:                                               ; preds = %19, %3
  ret void, !dbg !7552
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7555, metadata !DIExpression()), !dbg !7556
  %2 = shl nuw i32 1, %0, !dbg !7557
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !7560
  ret i32 %3, !dbg !7561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7566, metadata !DIExpression()), !dbg !7567
  %2 = shl nuw i32 1, %0, !dbg !7568
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !7571
  ret void, !dbg !7572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7576, metadata !DIExpression()), !dbg !7577
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7578
  ret void, !dbg !7579
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7582, metadata !DIExpression()), !dbg !7583
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7584
  %3 = and i32 %2, %0, !dbg !7584
  %4 = icmp eq i32 %3, %0, !dbg !7585
  %5 = zext i1 %4 to i32, !dbg !7585
  ret i32 %5, !dbg !7586
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7587 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7589, metadata !DIExpression()), !dbg !7590
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !7591
  ret void, !dbg !7592
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7593 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7595, metadata !DIExpression()), !dbg !7596
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !7597
  ret void, !dbg !7598
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7601, metadata !DIExpression()), !dbg !7602
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !7603
  ret void, !dbg !7604
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7605 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7607, metadata !DIExpression()), !dbg !7608
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !7609
  ret void, !dbg !7610
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7611 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7613, metadata !DIExpression()), !dbg !7614
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !7615
  ret void, !dbg !7616
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7619, metadata !DIExpression()), !dbg !7620
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !7621
  ret void, !dbg !7622
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7623 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7625, metadata !DIExpression()), !dbg !7626
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !7627
  ret void, !dbg !7628
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7629 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7631, metadata !DIExpression()), !dbg !7632
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !7633
  ret void, !dbg !7634
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7637, metadata !DIExpression()), !dbg !7638
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !7639
  ret void, !dbg !7640
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7641 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7643, metadata !DIExpression()), !dbg !7644
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !7645
  ret void, !dbg !7646
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7647 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7649, metadata !DIExpression()), !dbg !7650
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !7651
  ret i32 0, !dbg !7652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !717 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !721, metadata !DIExpression()), !dbg !7653
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !7654
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !7656
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !7658
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !7660
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !7662
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !7664
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !7666
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !7668
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !7670
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !7672
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !7674
  ret void, !dbg !7676
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7679, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata i32 0, metadata !7680, metadata !DIExpression()), !dbg !7681
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7682
  %3 = load i32, i32* %2, align 4, !dbg !7682
  call void @llvm.dbg.value(metadata i32 %3, metadata !7680, metadata !DIExpression()), !dbg !7681
  %4 = shl nuw i32 1, %0, !dbg !7683
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !7684
  tail call void @arch_irq_enable(i32 noundef %3) #26, !dbg !7685
  ret void, !dbg !7686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7689, metadata !DIExpression()), !dbg !7690
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7691
  %3 = or i32 %2, %0, !dbg !7691
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7691
  ret void, !dbg !7692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7695, metadata !DIExpression()), !dbg !7696
  %2 = icmp slt i32 %0, 32, !dbg !7697
  br i1 %2, label %3, label %5, !dbg !7699

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7700
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !7702
  br label %5, !dbg !7703

5:                                                ; preds = %1, %3
  ret void, !dbg !7704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7707, metadata !DIExpression()), !dbg !7708
  %2 = xor i32 %0, -1, !dbg !7709
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7709
  %4 = and i32 %3, %2, !dbg !7709
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7709
  ret void, !dbg !7710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7711 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7715, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata i32 %1, metadata !7716, metadata !DIExpression()), !dbg !7717
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7718

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7719
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !7721
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !7722
  br label %11, !dbg !7723

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7724
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !7725
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !7726
  br label %11, !dbg !7727

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7728
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !7729
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !7730
  br label %11, !dbg !7731

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7732
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !7733
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !7734
  br label %11, !dbg !7735

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7739, metadata !DIExpression()), !dbg !7740
  %2 = xor i32 %0, -1, !dbg !7741
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7741
  %4 = and i32 %3, %2, !dbg !7741
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7741
  ret void, !dbg !7742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7745, metadata !DIExpression()), !dbg !7746
  %2 = xor i32 %0, -1, !dbg !7747
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7747
  %4 = and i32 %3, %2, !dbg !7747
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7747
  ret void, !dbg !7748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7751, metadata !DIExpression()), !dbg !7752
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7753
  %3 = or i32 %2, %0, !dbg !7753
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7753
  ret void, !dbg !7754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7757, metadata !DIExpression()), !dbg !7758
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7759
  %3 = or i32 %2, %0, !dbg !7759
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7759
  ret void, !dbg !7760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !7761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7765, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7766, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i8* %2, metadata !7767, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7768, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7770, metadata !DIExpression()), !dbg !7771
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7772
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7772
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7774
  br i1 %6, label %7, label %9, !dbg !7775

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7776
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7777
  store i8* %2, i8** %8, align 4, !dbg !7778
  br label %9, !dbg !7779

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7771
  ret i32 %10, !dbg !7780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7783, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7784, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7785, metadata !DIExpression()), !dbg !7786
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7787
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7788
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7789
  store i8* null, i8** %3, align 4, !dbg !7790
  ret void, !dbg !7791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7794, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i8* %1, metadata !7795, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i8* %1, metadata !7796, metadata !DIExpression()), !dbg !7799
  %3 = bitcast i8* %1 to i32*, !dbg !7800
  %4 = load i32, i32* %3, align 4, !dbg !7800
  %5 = add i32 %4, -169, !dbg !7800
  %6 = icmp ult i32 %5, -121, !dbg !7800
  br i1 %6, label %15, label %7, !dbg !7802

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7803
  %9 = inttoptr i32 %8 to i32*, !dbg !7804
  call void @llvm.dbg.value(metadata i32* %9, metadata !7797, metadata !DIExpression()), !dbg !7799
  %10 = load volatile i32, i32* %9, align 4, !dbg !7805
  call void @llvm.dbg.value(metadata i32 %10, metadata !7798, metadata !DIExpression()), !dbg !7799
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7806
  %12 = bitcast i8* %11 to i32*, !dbg !7806
  %13 = load i32, i32* %12, align 4, !dbg !7806
  %14 = or i32 %13, %10, !dbg !7807
  call void @llvm.dbg.value(metadata i32 %14, metadata !7798, metadata !DIExpression()), !dbg !7799
  store volatile i32 %14, i32* %9, align 4, !dbg !7808
  br label %15, !dbg !7809

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7799
  ret i32 %16, !dbg !7810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7813, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8* %1, metadata !7814, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8* %1, metadata !7815, metadata !DIExpression()), !dbg !7818
  %3 = bitcast i8* %1 to i32*, !dbg !7819
  %4 = load i32, i32* %3, align 4, !dbg !7819
  %5 = add i32 %4, -169, !dbg !7819
  %6 = icmp ult i32 %5, -121, !dbg !7819
  br i1 %6, label %16, label %7, !dbg !7821

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7822
  %9 = inttoptr i32 %8 to i32*, !dbg !7823
  call void @llvm.dbg.value(metadata i32* %9, metadata !7816, metadata !DIExpression()), !dbg !7818
  %10 = load volatile i32, i32* %9, align 4, !dbg !7824
  call void @llvm.dbg.value(metadata i32 %10, metadata !7817, metadata !DIExpression()), !dbg !7818
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7825
  %12 = bitcast i8* %11 to i32*, !dbg !7825
  %13 = load i32, i32* %12, align 4, !dbg !7825
  %14 = xor i32 %13, -1, !dbg !7826
  %15 = and i32 %10, %14, !dbg !7827
  call void @llvm.dbg.value(metadata i32 %15, metadata !7817, metadata !DIExpression()), !dbg !7818
  store volatile i32 %15, i32* %9, align 4, !dbg !7828
  br label %16, !dbg !7829

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7818
  ret i32 %17, !dbg !7830
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !7831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7833, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata i8* %1, metadata !7834, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata i32* %2, metadata !7835, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata i8* %1, metadata !7836, metadata !DIExpression()), !dbg !7841
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7842
  call void @llvm.dbg.value(metadata i32 %4, metadata !7837, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata i32 undef, metadata !7838, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata i32 undef, metadata !7839, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata i32 %4, metadata !7840, metadata !DIExpression()), !dbg !7841
  %5 = bitcast i8* %1 to i32*, !dbg !7843
  %6 = load i32, i32* %5, align 4, !dbg !7843
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !7844

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #27, !dbg !7845
  call void @llvm.dbg.value(metadata i32 %8, metadata !7838, metadata !DIExpression()), !dbg !7841
  br label %16, !dbg !7846

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #27, !dbg !7848
  call void @llvm.dbg.value(metadata i32 %10, metadata !7839, metadata !DIExpression()), !dbg !7841
  br label %16, !dbg !7849

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #26, !dbg !7850
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #27, !dbg !7851
  br label %16, !dbg !7852

14:                                               ; preds = %3
  br label %16, !dbg !7853

15:                                               ; preds = %3
  br label %16, !dbg !7854

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !7855
  br label %18, !dbg !7856

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !7841
  ret i32 %19, !dbg !7856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !7857 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7859, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i8* %1, metadata !7860, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i8* %2, metadata !7861, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i8* %1, metadata !7862, metadata !DIExpression()), !dbg !7867
  %4 = bitcast i8* %1 to i32*, !dbg !7868
  %5 = load i32, i32* %4, align 4, !dbg !7868
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !7869
  call void @llvm.dbg.value(metadata i32 %6, metadata !7866, metadata !DIExpression()), !dbg !7867
  %7 = icmp slt i32 %6, 0, !dbg !7870
  br i1 %7, label %22, label %8, !dbg !7872

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7862, metadata !DIExpression()), !dbg !7867
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7873
  %10 = bitcast i8* %9 to i32*, !dbg !7873
  %11 = load i32, i32* %10, align 4, !dbg !7873
  %12 = lshr i32 %11, 16, !dbg !7873
  %13 = and i32 %12, 7, !dbg !7873
  %14 = lshr i32 %11, 8, !dbg !7874
  %15 = and i32 %14, 31, !dbg !7874
  %16 = shl i32 %13, %15, !dbg !7875
  call void @llvm.dbg.value(metadata i32 %16, metadata !7865, metadata !DIExpression()), !dbg !7867
  %17 = and i32 %11, 255, !dbg !7876
  %18 = or i32 %17, 1073887232, !dbg !7877
  %19 = inttoptr i32 %18 to i32*, !dbg !7878
  call void @llvm.dbg.value(metadata i32* %19, metadata !7863, metadata !DIExpression()), !dbg !7867
  %20 = load volatile i32, i32* %19, align 4, !dbg !7879
  call void @llvm.dbg.value(metadata i32 %20, metadata !7864, metadata !DIExpression()), !dbg !7867
  %21 = or i32 %16, %20, !dbg !7880
  call void @llvm.dbg.value(metadata i32 %21, metadata !7864, metadata !DIExpression()), !dbg !7867
  store volatile i32 %21, i32* %19, align 4, !dbg !7881
  br label %22, !dbg !7882

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !7867
  ret i32 %23, !dbg !7883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !7884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7888, metadata !DIExpression()), !dbg !7890
  call void @llvm.dbg.value(metadata i32 0, metadata !7889, metadata !DIExpression()), !dbg !7890
  %2 = add i32 %0, -1, !dbg !7891
  %3 = icmp ult i32 %2, 6, !dbg !7891
  br i1 %3, label %4, label %7, !dbg !7891

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !7891
  %6 = load i32, i32* %5, align 4, !dbg !7891
  call void @llvm.dbg.value(metadata i32 %6, metadata !7889, metadata !DIExpression()), !dbg !7890
  br label %7, !dbg !7892

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !7890
  ret i32 %8, !dbg !7893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !7894 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7898, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata i32 %1, metadata !7899, metadata !DIExpression()), !dbg !7900
  %3 = udiv i32 %0, %1, !dbg !7901
  ret i32 %3, !dbg !7902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #11 !dbg !7903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7907, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i32 16, metadata !7908, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i32 336, metadata !7909, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i32 4, metadata !7910, metadata !DIExpression()), !dbg !7911
  %2 = mul i32 %0, 336, !dbg !7912
  %3 = lshr i32 %2, 6, !dbg !7913
  ret i32 %3, !dbg !7914
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !7915 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !7917, metadata !DIExpression()), !dbg !7920
  tail call void @config_enable_default_clocks() #26, !dbg !7921
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !7922
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !7922
  %4 = lshr i32 %3, 4, !dbg !7922
  %5 = and i32 %4, 15, !dbg !7922
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !7922
  %7 = load i8, i8* %6, align 1, !dbg !7922
  %8 = zext i8 %7 to i32, !dbg !7922
  %9 = lshr i32 %2, %8, !dbg !7922
  call void @llvm.dbg.value(metadata i32 %9, metadata !7918, metadata !DIExpression()), !dbg !7920
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !7919, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !7920
  %10 = icmp ult i32 %9, 84000000, !dbg !7923
  br i1 %10, label %11, label %13, !dbg !7925

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !7926
  br label %13, !dbg !7928

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !7929
  tail call fastcc void @set_up_plls() #27, !dbg !7930
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !7931
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !7934
  br label %14, !dbg !7935

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !7936
  %16 = icmp eq i32 %15, 8, !dbg !7937
  br i1 %16, label %17, label %14, !dbg !7935, !llvm.loop !7938

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !7940
  br i1 %18, label %19, label %21, !dbg !7942

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !7943
  br label %21, !dbg !7945

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !7946
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !7947
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !7948
  ret i32 0, !dbg !7949
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !7950 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7952
  %2 = and i32 %1, 240, !dbg !7952
  ret i32 %2, !dbg !7953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !7954 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !7955
  %2 = icmp eq i32 %1, 1, !dbg !7959
  br i1 %2, label %7, label %3, !dbg !7960

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !7961
  br label %4, !dbg !7963

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !7964
  %6 = icmp eq i32 %5, 1, !dbg !7965
  br i1 %6, label %7, label %4, !dbg !7963, !llvm.loop !7966

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !7968
  br label %8, !dbg !7971

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !7972
  %10 = icmp eq i32 %9, 1, !dbg !7973
  br i1 %10, label %11, label %8, !dbg !7971, !llvm.loop !7974

11:                                               ; preds = %8
  ret void, !dbg !7976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !7977 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !7978
  %2 = icmp eq i32 %1, 8, !dbg !7980
  br i1 %2, label %3, label %4, !dbg !7981

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !7982
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !7984
  br label %4, !dbg !7985

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !7986
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7987
  %6 = and i32 %5, -196609, !dbg !7987
  %7 = or i32 %6, 65536, !dbg !7987
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7987
  tail call void @config_pll_sysclock() #26, !dbg !7988
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !7989
  br label %8, !dbg !7990

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !7991
  %10 = icmp eq i32 %9, 1, !dbg !7992
  br i1 %10, label %11, label %8, !dbg !7990, !llvm.loop !7993

11:                                               ; preds = %8
  ret void, !dbg !7995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !7996 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7998, metadata !DIExpression()), !dbg !7999
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8000
  %2 = and i32 %1, -241, !dbg !8000
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8000
  ret void, !dbg !8001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8004, metadata !DIExpression()), !dbg !8005
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8006
  %3 = and i32 %2, -4, !dbg !8006
  %4 = or i32 %3, %0, !dbg !8006
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8006
  ret void, !dbg !8007
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8008 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8009
  %2 = and i32 %1, 12, !dbg !8009
  ret i32 %2, !dbg !8010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8011 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8013, metadata !DIExpression()), !dbg !8014
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8015
  %2 = and i32 %1, -7169, !dbg !8015
  %3 = or i32 %2, 4096, !dbg !8015
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8015
  ret void, !dbg !8016
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8017 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8019, metadata !DIExpression()), !dbg !8020
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8021
  %2 = and i32 %1, -57345, !dbg !8021
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8021
  ret void, !dbg !8022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8023 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8024
  %2 = icmp eq i32 %1, 1, !dbg !8026
  br i1 %2, label %7, label %3, !dbg !8027

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !8028
  br label %4, !dbg !8030

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8031
  %6 = icmp eq i32 %5, 1, !dbg !8032
  br i1 %6, label %7, label %4, !dbg !8030, !llvm.loop !8033

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !8035
  br label %8, !dbg !8036

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8037
  %10 = icmp eq i32 %9, 0, !dbg !8038
  br i1 %10, label %11, label %8, !dbg !8036, !llvm.loop !8039

11:                                               ; preds = %8
  ret void, !dbg !8041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8042 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8043
  %2 = and i32 %1, -16777217, !dbg !8043
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8043
  ret void, !dbg !8044
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8045 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8046
  %2 = or i32 %1, 16777216, !dbg !8046
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8046
  ret void, !dbg !8047
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8048 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8049
  %2 = lshr i32 %1, 25, !dbg !8050
  %3 = and i32 %2, 1, !dbg !8050
  ret i32 %3, !dbg !8051
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8052 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8053
  %2 = lshr i32 %1, 1, !dbg !8054
  %3 = and i32 %2, 1, !dbg !8054
  ret i32 %3, !dbg !8055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8056 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8057
  %2 = or i32 %1, 1, !dbg !8057
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8057
  ret void, !dbg !8058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8059 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8060
  %2 = or i32 %1, 1, !dbg !8060
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8060
  ret void, !dbg !8061
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8062 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8063
  %2 = lshr i32 %1, 1, !dbg !8064
  %3 = and i32 %2, 1, !dbg !8064
  ret i32 %3, !dbg !8065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8066 {
  ret i32 16000000, !dbg !8068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8071 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !8072
  ret void, !dbg !8073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8074 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8078, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 16, metadata !8079, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 336, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 65536, metadata !8081, metadata !DIExpression()), !dbg !8082
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8083
  %2 = and i32 %1, -4227072, !dbg !8083
  %3 = or i32 %2, 21520, !dbg !8083
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8083
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8084
  %5 = and i32 %4, -196609, !dbg !8084
  %6 = or i32 %5, 65536, !dbg !8084
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8084
  ret void, !dbg !8085
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8086 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !8087
  ret void, !dbg !8088
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8089 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8092, metadata !DIExpression()), !dbg !8094
  %2 = bitcast i32* %1 to i8*, !dbg !8095
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8095
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8093, metadata !DIExpression()), !dbg !8096
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8097
  %4 = or i32 %3, 268435456, !dbg !8097
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8097
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8098
  %6 = and i32 %5, 268435456, !dbg !8098
  store volatile i32 %6, i32* %1, align 4, !dbg !8099
  %7 = load volatile i32, i32* %1, align 4, !dbg !8100
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8101
  ret void, !dbg !8101
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8102 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8104, metadata !DIExpression()), !dbg !8105
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !8106
  br i1 %2, label %3, label %4, !dbg !8108

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !8109
  br label %4, !dbg !8110

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8105
  ret i32 %5, !dbg !8111
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8112 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8117, metadata !DIExpression()), !dbg !8118
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8119, !srcloc !8121
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !8122
  ret i1 %1, !dbg !8123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8124 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8125
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8126
  ret void, !dbg !8127
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8130, metadata !DIExpression()), !dbg !8131
  %2 = icmp eq i32 %0, 10, !dbg !8132
  br i1 %2, label %3, label %4, !dbg !8134

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8135
  br label %4, !dbg !8137

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8138
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !8139
  ret i32 %0, !dbg !8140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8141 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8144, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8 %0, metadata !8145, metadata !DIExpression()), !dbg !8146
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8147, !srcloc !8149
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !8150
  ret void, !dbg !8151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8152 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8154, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i8 %0, metadata !8155, metadata !DIExpression()), !dbg !8157
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8158
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8156, metadata !DIExpression()), !dbg !8157
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8159
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8159
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #26, !dbg !8160
  ret void, !dbg !8161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8162 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8164, metadata !DIExpression()), !dbg !8165
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8166
  ret i1 %1, !dbg !8167
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !8168 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8172, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8173, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8174, metadata !DIExpression()), !dbg !8175
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !8176
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !8177
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8178
  tail call fastcc void @console_input_init() #27, !dbg !8179
  ret void, !dbg !8180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !8181 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8184
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8185
  tail call fastcc void @uart_irq_tx_disable() #27, !dbg !8186
  tail call fastcc void @uart_irq_callback_set() #27, !dbg !8187
  %2 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8188
  %3 = icmp eq i32 %2, 0, !dbg !8189
  br i1 %3, label %8, label %4, !dbg !8189

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !8183, metadata !DIExpression(DW_OP_deref)), !dbg !8190
  %5 = call fastcc i32 @uart_fifo_read(i8* noundef nonnull %1) #27, !dbg !8191
  %6 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8188
  %7 = icmp eq i32 %6, 0, !dbg !8189
  br i1 %7, label %8, label %4, !dbg !8189, !llvm.loop !8193

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable() #27, !dbg !8195
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8196
  ret void, !dbg !8196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable() unnamed_addr #1 !dbg !8197 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8199, metadata !DIExpression()), !dbg !8200
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8201, !srcloc !8203
  tail call fastcc void @z_impl_uart_irq_rx_disable() #27, !dbg !8204
  ret void, !dbg !8205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable() unnamed_addr #1 !dbg !8206 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8208, metadata !DIExpression()), !dbg !8209
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8210, !srcloc !8212
  tail call fastcc void @z_impl_uart_irq_tx_disable() #27, !dbg !8213
  ret void, !dbg !8214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !8215 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8219, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8220, metadata !DIExpression()), !dbg !8221
  tail call fastcc void @uart_irq_callback_user_data_set() #27, !dbg !8222
  ret void, !dbg !8223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !8224 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8226, metadata !DIExpression()), !dbg !8228
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8229
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8227, metadata !DIExpression()), !dbg !8228
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !8230
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8230
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8232
  br i1 %4, label %7, label %5, !dbg !8233

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8234
  br label %7, !dbg !8235

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8228
  ret i32 %8, !dbg !8236
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !8237 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8239, metadata !DIExpression()), !dbg !8243
  call void @llvm.dbg.value(metadata i8* %0, metadata !8240, metadata !DIExpression()), !dbg !8243
  call void @llvm.dbg.value(metadata i32 1, metadata !8241, metadata !DIExpression()), !dbg !8243
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8244
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8242, metadata !DIExpression()), !dbg !8243
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !8245
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !8245
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !8247
  br i1 %5, label %8, label %6, !dbg !8248

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8* noundef %0, i32 noundef 1) #26, !dbg !8249
  br label %8, !dbg !8250

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !8243
  ret i32 %9, !dbg !8251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !8252 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8254, metadata !DIExpression()), !dbg !8255
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8256, !srcloc !8258
  tail call fastcc void @z_impl_uart_irq_rx_enable() #27, !dbg !8259
  ret void, !dbg !8260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !8261 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8263, metadata !DIExpression()), !dbg !8265
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8266
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8264, metadata !DIExpression()), !dbg !8265
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !8267
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8267
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8269
  br i1 %4, label %6, label %5, !dbg !8270

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8271
  br label %6, !dbg !8273

6:                                                ; preds = %5, %0
  ret void, !dbg !8274
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1073 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1075, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.value(metadata i8* %1, metadata !1076, metadata !DIExpression()), !dbg !8275
  %4 = call fastcc i32 @uart_irq_update() #27, !dbg !8276
  %5 = icmp eq i32 %4, 0, !dbg !8276
  br i1 %5, label %89, label %6, !dbg !8277

6:                                                ; preds = %2, %86
  %7 = call fastcc i32 @uart_irq_is_pending() #27, !dbg !8278
  %8 = icmp eq i32 %7, 0, !dbg !8277
  br i1 %8, label %89, label %9, !dbg !8279

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8280
  %10 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8281
  %11 = icmp eq i32 %10, 0, !dbg !8281
  br i1 %11, label %86, label %12, !dbg !8283, !llvm.loop !8284

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1077, metadata !DIExpression(DW_OP_deref)), !dbg !8286
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #27, !dbg !8287
  call void @llvm.dbg.value(metadata i32 %13, metadata !1079, metadata !DIExpression()), !dbg !8286
  %14 = icmp slt i32 %13, 0, !dbg !8288
  br i1 %14, label %85, label %15, !dbg !8290

15:                                               ; preds = %12
  %16 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8291
  %17 = icmp eq %struct.console_input* %16, null, !dbg !8291
  br i1 %17, label %18, label %23, !dbg !8292

18:                                               ; preds = %15
  %19 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !8293
  %20 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %19, i32 0, i32 0, !dbg !8293
  %21 = call fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %20) #27, !dbg !8293
  call void @llvm.dbg.value(metadata i8* %21, metadata !1080, metadata !DIExpression()), !dbg !8294
  store i8* %21, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8295
  %22 = icmp eq i8* %21, null, !dbg !8296
  br i1 %22, label %85, label %23, !dbg !8298

23:                                               ; preds = %18, %15
  %24 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #27, !dbg !8299
  br i1 %24, label %25, label %29, !dbg !8301

25:                                               ; preds = %23
  %26 = load i8, i8* %3, align 1, !dbg !8302
  call void @llvm.dbg.value(metadata i8 %26, metadata !1077, metadata !DIExpression()), !dbg !8286
  %27 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8304
  %28 = getelementptr inbounds %struct.console_input, %struct.console_input* %27, i32 0, i32 2, i32 0, !dbg !8304
  call fastcc void @handle_ansi(i8 noundef zeroext %26, i8* noundef nonnull %28) #27, !dbg !8305
  br label %86, !dbg !8306, !llvm.loop !8284

29:                                               ; preds = %23
  %30 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #27, !dbg !8307
  %31 = load i8, i8* %3, align 1, !dbg !8286
  call void @llvm.dbg.value(metadata i8 %31, metadata !1077, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.value(metadata i8 %31, metadata !1077, metadata !DIExpression()), !dbg !8286
  br i1 %30, label %32, label %35, !dbg !8309

32:                                               ; preds = %29
  %33 = icmp eq i8 %31, 91, !dbg !8310
  br i1 %33, label %34, label %86, !dbg !8313, !llvm.loop !8284

34:                                               ; preds = %32
  call fastcc void @atomic_set_bit(i32 noundef 1) #27, !dbg !8314
  call fastcc void @atomic_set_bit(i32 noundef 2) #27, !dbg !8316
  br label %86, !dbg !8317, !llvm.loop !8284

35:                                               ; preds = %29
  %36 = zext i8 %31 to i32, !dbg !8318
  %37 = call fastcc i32 @isprint(i32 noundef %36) #27, !dbg !8320
  %38 = icmp eq i32 %37, 0, !dbg !8320
  br i1 %38, label %39, label %74, !dbg !8321

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i8 undef, metadata !1077, metadata !DIExpression()), !dbg !8286
  switch i8 %31, label %86 [
    i8 8, label %40
    i8 127, label %40
    i8 27, label %49
    i8 13, label %50
    i8 9, label %61
  ], !dbg !8322, !llvm.loop !8284

40:                                               ; preds = %39, %39
  %41 = load i8, i8* @cur, align 1, !dbg !8324
  %42 = icmp eq i8 %41, 0, !dbg !8327
  br i1 %42, label %86, label %43, !dbg !8328, !llvm.loop !8284

43:                                               ; preds = %40
  %44 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8329
  %45 = add i8 %41, -1, !dbg !8331
  store i8 %45, i8* @cur, align 1, !dbg !8331
  %46 = zext i8 %45 to i32, !dbg !8329
  %47 = getelementptr inbounds %struct.console_input, %struct.console_input* %44, i32 0, i32 2, i32 %46, !dbg !8329
  %48 = load i8, i8* @end, align 1, !dbg !8332
  call fastcc void @del_char(i8* noundef nonnull %47, i8 noundef zeroext %48) #27, !dbg !8333
  br label %86, !dbg !8334, !llvm.loop !8284

49:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 0) #27, !dbg !8335
  br label %86, !dbg !8336, !llvm.loop !8284

50:                                               ; preds = %39
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8337
  %52 = load i8, i8* @cur, align 1, !dbg !8338
  %53 = zext i8 %52 to i32, !dbg !8338
  %54 = load i8, i8* @end, align 1, !dbg !8339
  %55 = zext i8 %54 to i32, !dbg !8339
  %56 = add nuw nsw i32 %55, %53, !dbg !8340
  %57 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %56, !dbg !8337
  store i8 0, i8* %57, align 1, !dbg !8341
  call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8342
  call fastcc void @uart_poll_out(i8 noundef zeroext 10) #27, !dbg !8343
  store i8 0, i8* @cur, align 1, !dbg !8344
  store i8 0, i8* @end, align 1, !dbg !8345
  %58 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !8346
  %59 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %58, i32 0, i32 0, !dbg !8346
  %60 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8346
  call void @k_queue_append(%struct.k_queue* noundef %59, i8* noundef %60) #26, !dbg !8346
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8348
  br label %86, !dbg !8349, !llvm.loop !8284

61:                                               ; preds = %39
  %62 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8350
  %63 = icmp eq i8 (i8*, i8)* %62, null, !dbg !8350
  %64 = load i8, i8* @end, align 1
  %65 = icmp ne i8 %64, 0
  %66 = select i1 %63, i1 true, i1 %65, !dbg !8352
  br i1 %66, label %86, label %67, !dbg !8352, !llvm.loop !8284

67:                                               ; preds = %61
  %68 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8353
  %69 = getelementptr inbounds %struct.console_input, %struct.console_input* %68, i32 0, i32 2, i32 0, !dbg !8353
  %70 = load i8, i8* @cur, align 1, !dbg !8355
  %71 = call zeroext i8 %62(i8* noundef nonnull %69, i8 noundef zeroext %70) #26, !dbg !8356
  %72 = load i8, i8* @cur, align 1, !dbg !8357
  %73 = add i8 %72, %71, !dbg !8357
  store i8 %73, i8* @cur, align 1, !dbg !8357
  br label %86, !dbg !8358, !llvm.loop !8284

74:                                               ; preds = %35
  %75 = load i8, i8* @cur, align 1, !dbg !8359
  %76 = zext i8 %75 to i32, !dbg !8359
  %77 = load i8, i8* @end, align 1, !dbg !8361
  %78 = zext i8 %77 to i32, !dbg !8361
  %79 = add nuw nsw i32 %78, %76, !dbg !8362
  %80 = icmp ult i32 %79, 127, !dbg !8363
  br i1 %80, label %81, label %86, !dbg !8364

81:                                               ; preds = %74
  %82 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8365
  %83 = add i8 %75, 1, !dbg !8367
  store i8 %83, i8* @cur, align 1, !dbg !8367
  %84 = getelementptr inbounds %struct.console_input, %struct.console_input* %82, i32 0, i32 2, i32 %76, !dbg !8365
  call void @llvm.dbg.value(metadata i8 %31, metadata !1077, metadata !DIExpression()), !dbg !8286
  call fastcc void @insert_char(i8* noundef nonnull %84, i8 noundef zeroext %31, i8 noundef zeroext %77) #27, !dbg !8368
  br label %86, !dbg !8369

85:                                               ; preds = %12, %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8285
  br label %89

86:                                               ; preds = %74, %81, %49, %50, %43, %40, %67, %61, %39, %32, %34, %9, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8285
  %87 = call fastcc i32 @uart_irq_update() #27, !dbg !8276
  %88 = icmp eq i32 %87, 0, !dbg !8276
  br i1 %88, label %89, label %6, !dbg !8277

89:                                               ; preds = %6, %86, %2, %85
  ret void, !dbg !8370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !8371 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8373, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8374, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata i8* null, metadata !8375, metadata !DIExpression()), !dbg !8377
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8378
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8376, metadata !DIExpression()), !dbg !8377
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !8379
  br i1 %2, label %8, label %3, !dbg !8381

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !8382
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !8382
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !8383
  br i1 %6, label %8, label %7, !dbg !8384

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_45, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #26, !dbg !8385
  br label %8, !dbg !8387

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !8388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !8389 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8391, metadata !DIExpression()), !dbg !8392
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8393, !srcloc !8395
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #27, !dbg !8396
  ret i32 %1, !dbg !8397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !8398 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8400, metadata !DIExpression()), !dbg !8401
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8402, !srcloc !8404
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #27, !dbg !8405
  ret i32 %1, !dbg !8406
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !8407 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8411, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i8* %0, metadata !8412, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i32 1, metadata !8413, metadata !DIExpression()), !dbg !8415
  %2 = tail call fastcc i32 @uart_fifo_read(i8* noundef %0) #27, !dbg !8416
  call void @llvm.dbg.value(metadata i32 %2, metadata !8414, metadata !DIExpression()), !dbg !8415
  %3 = icmp slt i32 %2, 0, !dbg !8417
  br i1 %3, label %4, label %5, !dbg !8419

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8420
  br label %5, !dbg !8422

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !8415
  ret i32 %6, !dbg !8423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !8424 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8434, metadata !DIExpression()), !dbg !8435
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !8433, metadata !DIExpression()), !dbg !8435
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8436, !srcloc !8438
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #26, !dbg !8439
  ret i8* %2, !dbg !8440
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !8441 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8447, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.value(metadata i32 %0, metadata !8448, metadata !DIExpression()), !dbg !8451
  %2 = tail call fastcc i32 @atomic_get() #27, !dbg !8452
  call void @llvm.dbg.value(metadata i32 %2, metadata !8449, metadata !DIExpression()), !dbg !8451
  %3 = and i32 %0, 31, !dbg !8453
  %4 = shl nuw i32 1, %3, !dbg !8454
  %5 = and i32 %2, %4, !dbg !8454
  %6 = icmp ne i32 %5, 0, !dbg !8454
  ret i1 %6, !dbg !8455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !8456 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8460, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i8* %1, metadata !8461, metadata !DIExpression()), !dbg !8463
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #27, !dbg !8464
  br i1 %3, label %4, label %11, !dbg !8466

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !8467
  %6 = tail call fastcc i32 @isdigit.50(i32 noundef %5) #27, !dbg !8470
  %7 = icmp eq i32 %6, 0, !dbg !8470
  br i1 %7, label %8, label %9, !dbg !8471

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !8472
  br label %34, !dbg !8474

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #27, !dbg !8475
  %10 = add nsw i32 %5, -48, !dbg !8476
  store i32 %10, i32* @ansi_val, align 4, !dbg !8477
  store i32 0, i32* @ansi_val_2, align 4, !dbg !8478
  br label %81, !dbg !8479

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #27, !dbg !8480
  br i1 %12, label %13, label %34, !dbg !8482

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !8483
  %15 = tail call fastcc i32 @isdigit.50(i32 noundef %14) #27, !dbg !8486
  %16 = icmp eq i32 %15, 0, !dbg !8486
  br i1 %16, label %29, label %17, !dbg !8487

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #27, !dbg !8488
  br i1 %18, label %19, label %24, !dbg !8491

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !8492
  %21 = mul i32 %20, 10, !dbg !8492
  %22 = add nsw i32 %14, -48, !dbg !8494
  %23 = add i32 %22, %21, !dbg !8495
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !8495
  br label %81, !dbg !8496

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !8497
  %26 = mul i32 %25, 10, !dbg !8497
  %27 = add nsw i32 %14, -48, !dbg !8499
  %28 = add i32 %27, %26, !dbg !8500
  store i32 %28, i32* @ansi_val, align 4, !dbg !8500
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !8501
  br i1 %30, label %31, label %33, !dbg !8503

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #27, !dbg !8504
  br i1 %32, label %33, label %81, !dbg !8505

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #27, !dbg !8506
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #27, !dbg !8507
  br label %34, !dbg !8508

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !8462), !dbg !8509
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !8510

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !8511
  %37 = load i8, i8* @cur, align 1, !dbg !8514
  %38 = zext i8 %37 to i32, !dbg !8514
  %39 = icmp ugt i32 %36, %38, !dbg !8515
  br i1 %39, label %80, label %40, !dbg !8516

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !8517
  %42 = trunc i32 %36 to i8, !dbg !8517
  %43 = add i8 %41, %42, !dbg !8517
  store i8 %43, i8* @end, align 1, !dbg !8517
  %44 = sub i8 %37, %42, !dbg !8518
  store i8 %44, i8* @cur, align 1, !dbg !8518
  tail call fastcc void @cursor_backward(i32 noundef %36) #27, !dbg !8519
  br label %80, !dbg !8520

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !8521
  %47 = load i8, i8* @end, align 1, !dbg !8523
  %48 = zext i8 %47 to i32, !dbg !8523
  %49 = icmp ugt i32 %46, %48, !dbg !8524
  br i1 %49, label %80, label %50, !dbg !8525

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !8526
  %52 = sub i8 %47, %51, !dbg !8526
  store i8 %52, i8* @end, align 1, !dbg !8526
  %53 = load i8, i8* @cur, align 1, !dbg !8527
  %54 = add i8 %53, %51, !dbg !8527
  store i8 %54, i8* @cur, align 1, !dbg !8527
  tail call fastcc void @cursor_forward(i32 noundef %46) #27, !dbg !8528
  br label %80, !dbg !8529

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !8530
  %57 = icmp eq i8 %56, 0, !dbg !8530
  br i1 %57, label %80, label %58, !dbg !8532

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !8533
  tail call fastcc void @cursor_backward(i32 noundef %59) #27, !dbg !8534
  %60 = load i8, i8* @cur, align 1, !dbg !8535
  %61 = load i8, i8* @end, align 1, !dbg !8536
  %62 = add i8 %61, %60, !dbg !8536
  store i8 %62, i8* @end, align 1, !dbg !8536
  store i8 0, i8* @cur, align 1, !dbg !8537
  br label %80, !dbg !8538

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !8539
  %65 = icmp eq i8 %64, 0, !dbg !8539
  br i1 %65, label %80, label %66, !dbg !8541

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !8542
  tail call fastcc void @cursor_forward(i32 noundef %67) #27, !dbg !8543
  %68 = load i8, i8* @end, align 1, !dbg !8544
  %69 = load i8, i8* @cur, align 1, !dbg !8545
  %70 = add i8 %69, %68, !dbg !8545
  store i8 %70, i8* @cur, align 1, !dbg !8545
  store i8 0, i8* @end, align 1, !dbg !8546
  br label %80, !dbg !8547

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !8548
  %73 = icmp eq i8 %72, 0, !dbg !8548
  br i1 %73, label %80, label %74, !dbg !8550

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #27, !dbg !8551
  %75 = load i8, i8* @cur, align 1, !dbg !8552
  %76 = zext i8 %75 to i32, !dbg !8553
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !8553
  %78 = load i8, i8* @end, align 1, !dbg !8554
  %79 = add i8 %78, -1, !dbg !8554
  store i8 %79, i8* @end, align 1, !dbg !8554
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #27, !dbg !8555
  br label %80, !dbg !8556

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #27, !dbg !8557
  br label %81, !dbg !8558

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !8558
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8559 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8564, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 %0, metadata !8565, metadata !DIExpression()), !dbg !8568
  %2 = and i32 %0, 31, !dbg !8569
  %3 = shl nuw i32 1, %2, !dbg !8569
  call void @llvm.dbg.value(metadata i32 %3, metadata !8566, metadata !DIExpression()), !dbg !8568
  %4 = xor i32 %3, -1, !dbg !8570
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8571
  call void @llvm.dbg.value(metadata i32 %5, metadata !8567, metadata !DIExpression()), !dbg !8568
  %6 = and i32 %5, %3, !dbg !8572
  %7 = icmp ne i32 %6, 0, !dbg !8573
  ret i1 %7, !dbg !8574
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !8575 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8579, metadata !DIExpression()), !dbg !8582
  call void @llvm.dbg.value(metadata i32 %0, metadata !8580, metadata !DIExpression()), !dbg !8582
  %2 = and i32 %0, 31, !dbg !8583
  %3 = shl nuw i32 1, %2, !dbg !8583
  call void @llvm.dbg.value(metadata i32 %3, metadata !8581, metadata !DIExpression()), !dbg !8582
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #27, !dbg !8584
  ret void, !dbg !8585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !8586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8588, metadata !DIExpression()), !dbg !8589
  %2 = add i32 %0, -32, !dbg !8590
  %3 = icmp ult i32 %2, 95, !dbg !8590
  %4 = zext i1 %3 to i32, !dbg !8590
  ret i32 %4, !dbg !8591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8592 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8596, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i8 %1, metadata !8597, metadata !DIExpression()), !dbg !8598
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8599
  %3 = icmp eq i8 %1, 0, !dbg !8600
  br i1 %3, label %4, label %5, !dbg !8602

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8603
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8605
  br label %14, !dbg !8606

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #27, !dbg !8607
  call void @llvm.dbg.value(metadata i8 %1, metadata !8597, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %0, metadata !8596, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i8 %1, metadata !8597, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8598
  br label %6, !dbg !8608

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !8597, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %8, metadata !8596, metadata !DIExpression()), !dbg !8598
  %9 = add i8 %7, -1, !dbg !8609
  call void @llvm.dbg.value(metadata i8 %9, metadata !8597, metadata !DIExpression()), !dbg !8598
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8610
  %11 = load i8, i8* %10, align 1, !dbg !8612
  store i8 %11, i8* %8, align 1, !dbg !8613
  call void @llvm.dbg.value(metadata i8* %10, metadata !8596, metadata !DIExpression()), !dbg !8598
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %11) #27, !dbg !8614
  call void @llvm.dbg.value(metadata i8 %9, metadata !8597, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8598
  %12 = icmp eq i8 %9, 0, !dbg !8615
  br i1 %12, label %13, label %6, !dbg !8608, !llvm.loop !8616

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8618
  tail call fastcc void @cursor_restore() #27, !dbg !8619
  br label %14, !dbg !8620

14:                                               ; preds = %13, %4
  ret void, !dbg !8620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !8621 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8625, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i8 %1, metadata !8626, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i8 %2, metadata !8627, metadata !DIExpression()), !dbg !8629
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %1) #27, !dbg !8630
  %4 = icmp eq i8 %2, 0, !dbg !8631
  br i1 %4, label %5, label %6, !dbg !8633

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !8634
  br label %17, !dbg !8636

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !8637
  call void @llvm.dbg.value(metadata i8 %7, metadata !8628, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i8* %0, metadata !8625, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8629
  store i8 %1, i8* %0, align 1, !dbg !8638
  tail call fastcc void @cursor_save() #27, !dbg !8639
  call void @llvm.dbg.value(metadata i8 %7, metadata !8628, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i8 %2, metadata !8627, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i8* %0, metadata !8625, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8629
  call void @llvm.dbg.value(metadata i8 %2, metadata !8627, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8629
  br label %8, !dbg !8640

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8629
  call void @llvm.dbg.value(metadata i8 %10, metadata !8628, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i8 %11, metadata !8627, metadata !DIExpression()), !dbg !8629
  %13 = add i8 %11, -1, !dbg !8641
  call void @llvm.dbg.value(metadata i8 %13, metadata !8627, metadata !DIExpression()), !dbg !8629
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %10) #27, !dbg !8642
  %14 = load i8, i8* %12, align 1, !dbg !8644
  call void @llvm.dbg.value(metadata i8 %14, metadata !8626, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i8* %12, metadata !8625, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8629
  store i8 %10, i8* %12, align 1, !dbg !8645
  call void @llvm.dbg.value(metadata i8 %14, metadata !8628, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i8* %12, metadata !8625, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8629
  call void @llvm.dbg.value(metadata i8 %13, metadata !8627, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8629
  %15 = icmp eq i8 %13, 0, !dbg !8646
  br i1 %15, label %16, label %8, !dbg !8640, !llvm.loop !8647

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #27, !dbg !8649
  br label %17, !dbg !8650

17:                                               ; preds = %16, %5
  ret void, !dbg !8650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !8651 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.49, i32 0, i32 0)) #26, !dbg !8652
  ret void, !dbg !8653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !8654 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !8655
  ret void, !dbg !8656
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !8657 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8662, metadata !DIExpression()), !dbg !8664
  call void @llvm.dbg.value(metadata i32 %0, metadata !8663, metadata !DIExpression()), !dbg !8664
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8665
  ret i32 %2, !dbg !8666
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !8667 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8669, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i32 %0, metadata !8670, metadata !DIExpression()), !dbg !8671
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8672
  ret i32 %2, !dbg !8673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.50(i32 noundef %0) unnamed_addr #11 !dbg !8674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8676, metadata !DIExpression()), !dbg !8677
  %2 = add i32 %0, -48, !dbg !8678
  %3 = icmp ult i32 %2, 10, !dbg !8679
  %4 = zext i1 %3 to i32, !dbg !8679
  ret i32 %4, !dbg !8680
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !8681 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8683, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.value(metadata i32 4, metadata !8684, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.value(metadata i32 16, metadata !8685, metadata !DIExpression()), !dbg !8687
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #27, !dbg !8688
  call void @llvm.dbg.value(metadata i32 %1, metadata !8686, metadata !DIExpression()), !dbg !8687
  %2 = and i32 %1, 16, !dbg !8689
  %3 = icmp ne i32 %2, 0, !dbg !8690
  ret i1 %3, !dbg !8691
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8692 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8694, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i32 %0, metadata !8695, metadata !DIExpression()), !dbg !8697
  %2 = and i32 %0, 31, !dbg !8698
  %3 = shl nuw i32 1, %2, !dbg !8698
  call void @llvm.dbg.value(metadata i32 %3, metadata !8696, metadata !DIExpression()), !dbg !8697
  %4 = xor i32 %3, -1, !dbg !8699
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8700
  ret void, !dbg !8701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !8702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8704, metadata !DIExpression()), !dbg !8705
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i32 noundef %0) #26, !dbg !8706
  ret void, !dbg !8707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !8708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8710, metadata !DIExpression()), !dbg !8711
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.51, i32 0, i32 0), i32 noundef %0) #26, !dbg !8712
  ret void, !dbg !8713
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !8714 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8718, metadata !DIExpression()), !dbg !8719
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !8720
  ret i32 %1, !dbg !8721
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !8722 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8724, metadata !DIExpression()), !dbg !8726
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8727
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8725, metadata !DIExpression()), !dbg !8726
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !8728
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8728
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8730
  br i1 %4, label %7, label %5, !dbg !8731

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8732
  br label %7, !dbg !8733

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8726
  ret i32 %8, !dbg !8734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !8735 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8737, metadata !DIExpression()), !dbg !8739
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8740
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8738, metadata !DIExpression()), !dbg !8739
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !8741
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8741
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8743
  br i1 %4, label %7, label %5, !dbg !8744

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8745
  br label %7, !dbg !8746

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8739
  ret i32 %8, !dbg !8747
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable() unnamed_addr #1 !dbg !8748 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8750, metadata !DIExpression()), !dbg !8752
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8753
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8751, metadata !DIExpression()), !dbg !8752
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !8754
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8754
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8756
  br i1 %4, label %6, label %5, !dbg !8757

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8758
  br label %6, !dbg !8760

6:                                                ; preds = %5, %0
  ret void, !dbg !8761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable() unnamed_addr #1 !dbg !8762 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8764, metadata !DIExpression()), !dbg !8766
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8767
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8765, metadata !DIExpression()), !dbg !8766
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !8768
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8768
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8770
  br i1 %4, label %6, label %5, !dbg !8771

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8772
  br label %6, !dbg !8774

6:                                                ; preds = %5, %0
  ret void, !dbg !8775
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8776 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8778, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.value(metadata i8 %1, metadata !8779, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.value(metadata i32 %2, metadata !8780, metadata !DIExpression()), !dbg !8783
  %5 = bitcast i32* %4 to i8*, !dbg !8784
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8784
  call void @llvm.dbg.value(metadata i32* %4, metadata !8782, metadata !DIExpression(DW_OP_deref)), !dbg !8783
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !8785
  call void @llvm.dbg.value(metadata i32 %6, metadata !8781, metadata !DIExpression()), !dbg !8783
  %7 = icmp eq i32 %6, 0, !dbg !8786
  br i1 %7, label %8, label %31, !dbg !8788

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8781, metadata !DIExpression()), !dbg !8783
  %9 = and i32 %2, 131072, !dbg !8789
  %10 = icmp eq i32 %9, 0, !dbg !8791
  br i1 %10, label %28, label %11, !dbg !8792

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8793
  %13 = icmp eq i32 %12, 0, !dbg !8796
  br i1 %13, label %18, label %14, !dbg !8797

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8798
  %16 = shl nuw i32 1, %15, !dbg !8798
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !8800
  br label %25, !dbg !8801

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8802
  %20 = icmp eq i32 %19, 0, !dbg !8804
  %21 = zext i8 %1 to i32, !dbg !8783
  br i1 %20, label %25, label %22, !dbg !8805

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8806
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !8808
  br label %25, !dbg !8809

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8810
  %27 = load i32, i32* %4, align 4, !dbg !8811
  call void @llvm.dbg.value(metadata i32 %30, metadata !8782, metadata !DIExpression()), !dbg !8783
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !8812
  br label %31, !dbg !8813

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8810
  %30 = load i32, i32* %4, align 4, !dbg !8811
  call void @llvm.dbg.value(metadata i32 %30, metadata !8782, metadata !DIExpression()), !dbg !8783
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !8812
  call void @llvm.dbg.value(metadata i32 0, metadata !8781, metadata !DIExpression()), !dbg !8783
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8814
  ret i32 %6, !dbg !8814
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8815 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8819, metadata !DIExpression()), !dbg !8824
  call void @llvm.dbg.value(metadata i32* %1, metadata !8820, metadata !DIExpression()), !dbg !8824
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8825
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8825
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8825
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8821, metadata !DIExpression()), !dbg !8824
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8826
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8826
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8826
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8823, metadata !DIExpression()), !dbg !8824
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !8827
  store i32 %9, i32* %1, align 4, !dbg !8828
  ret i32 0, !dbg !8829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8830 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8832, metadata !DIExpression()), !dbg !8838
  call void @llvm.dbg.value(metadata i32 %1, metadata !8833, metadata !DIExpression()), !dbg !8838
  call void @llvm.dbg.value(metadata i32 %2, metadata !8834, metadata !DIExpression()), !dbg !8838
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8839
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8839
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8839
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8835, metadata !DIExpression()), !dbg !8838
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8840
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8840
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8840
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8836, metadata !DIExpression()), !dbg !8838
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !8841
  call void @llvm.dbg.value(metadata i32 %10, metadata !8837, metadata !DIExpression()), !dbg !8838
  %11 = xor i32 %1, -1, !dbg !8842
  %12 = and i32 %10, %11, !dbg !8843
  %13 = and i32 %2, %1, !dbg !8844
  %14 = or i32 %12, %13, !dbg !8845
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !8846
  ret i32 0, !dbg !8847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8850, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 %1, metadata !8851, metadata !DIExpression()), !dbg !8854
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8855
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8855
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8855
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8852, metadata !DIExpression()), !dbg !8854
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8856
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8856
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8856
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8853, metadata !DIExpression()), !dbg !8854
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8857
  store volatile i32 %1, i32* %9, align 4, !dbg !8857
  ret i32 0, !dbg !8858
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8861, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.value(metadata i32 %1, metadata !8862, metadata !DIExpression()), !dbg !8865
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8866
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8866
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8866
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8863, metadata !DIExpression()), !dbg !8865
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8867
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8867
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8867
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8864, metadata !DIExpression()), !dbg !8865
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !8868
  ret i32 0, !dbg !8869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8872, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.value(metadata i32 %1, metadata !8873, metadata !DIExpression()), !dbg !8876
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8877
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8877
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8877
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8874, metadata !DIExpression()), !dbg !8876
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8878
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8878
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8878
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8875, metadata !DIExpression()), !dbg !8876
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8879
  %10 = load volatile i32, i32* %9, align 4, !dbg !8879
  %11 = xor i32 %10, %1, !dbg !8879
  store volatile i32 %11, i32* %9, align 4, !dbg !8879
  ret i32 0, !dbg !8880
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8881 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8883, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata i8 %1, metadata !8884, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata i32 %2, metadata !8885, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata i32 %3, metadata !8886, metadata !DIExpression()), !dbg !8893
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8894
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8894
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8894
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8887, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata i8* undef, metadata !8888, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata i32 0, metadata !8890, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata i32 0, metadata !8891, metadata !DIExpression()), !dbg !8893
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8895

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8896
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !8900
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8901
  %12 = load i32, i32* %11, align 4, !dbg !8901
  %13 = icmp eq i32 %10, %12, !dbg !8902
  br i1 %13, label %14, label %29, !dbg !8903

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !8904
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !8906
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !8907
  br label %29, !dbg !8908

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8909
  %17 = load i8*, i8** %16, align 4, !dbg !8909
  call void @llvm.dbg.value(metadata i8* %17, metadata !8888, metadata !DIExpression()), !dbg !8893
  %18 = zext i8 %1 to i32, !dbg !8910
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !8912
  %20 = icmp eq i32 %19, 0, !dbg !8913
  br i1 %20, label %21, label %29, !dbg !8914

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8915
  %23 = load i32, i32* %22, align 4, !dbg !8915
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !8916
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8917

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8890, metadata !DIExpression()), !dbg !8893
  br label %27, !dbg !8918

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8890, metadata !DIExpression()), !dbg !8893
  br label %27, !dbg !8920

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8890, metadata !DIExpression()), !dbg !8893
  br label %27, !dbg !8921

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8893
  call void @llvm.dbg.value(metadata i32 %28, metadata !8890, metadata !DIExpression()), !dbg !8893
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !8922
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !8923
  br label %29, !dbg !8923

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8893
  call void @llvm.dbg.value(metadata i32 %30, metadata !8891, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.label(metadata !8892), !dbg !8924
  ret i32 %30, !dbg !8925
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !8926 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8928, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8929, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i1 %2, metadata !8930, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8932
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8933
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8933
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8933
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8931, metadata !DIExpression()), !dbg !8932
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8934
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !8935
  ret i32 %8, !dbg !8936
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !8937 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8943, metadata !DIExpression()), !dbg !8946
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8944, metadata !DIExpression()), !dbg !8946
  call void @llvm.dbg.value(metadata i1 %2, metadata !8945, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8946
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !8947
  br i1 %4, label %10, label %5, !dbg !8949

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8950
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #27, !dbg !8953
  %8 = or i1 %7, %2, !dbg !8954
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8954
  br i1 %2, label %11, label %13, !dbg !8954

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8955

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8956
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #27, !dbg !8959
  br label %13, !dbg !8960

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8946
  ret i32 %14, !dbg !8961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8962 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8966, metadata !DIExpression()), !dbg !8967
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !8968
  %3 = icmp eq %struct._snode* %2, null, !dbg !8968
  ret i1 %3, !dbg !8968
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8969 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8973, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8974, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8975, metadata !DIExpression()), !dbg !8977
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !8978
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8976, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8975, metadata !DIExpression()), !dbg !8977
  %4 = icmp eq %struct._snode* %3, null, !dbg !8980
  br i1 %4, label %15, label %5, !dbg !8978

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8976, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8975, metadata !DIExpression()), !dbg !8977
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8982
  br i1 %6, label %9, label %11, !dbg !8985

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8976, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8975, metadata !DIExpression()), !dbg !8977
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8982
  br i1 %8, label %9, label %11, !dbg !8985, !llvm.loop !8986

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !8987
  br label %15, !dbg !8987

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8976, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8975, metadata !DIExpression()), !dbg !8977
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !8980
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8976, metadata !DIExpression()), !dbg !8977
  %14 = icmp eq %struct._snode* %13, null, !dbg !8980
  br i1 %14, label %15, label %7, !dbg !8978, !llvm.loop !8986

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !8990 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8994, metadata !DIExpression()), !dbg !8996
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8995, metadata !DIExpression()), !dbg !8996
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !8997
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !8997
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !8997
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !8998
  %5 = icmp eq %struct._snode* %4, null, !dbg !8998
  br i1 %5, label %6, label %8, !dbg !8997

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9000
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !9000
  br label %8, !dbg !9000

8:                                                ; preds = %6, %2
  ret void, !dbg !8997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9002 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9006, metadata !DIExpression()), !dbg !9007
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9008
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9008
  ret %struct._snode* %3, !dbg !9009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9010 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9014, metadata !DIExpression()), !dbg !9016
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9015, metadata !DIExpression()), !dbg !9016
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9017
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9018
  ret void, !dbg !9019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9020 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9022, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9023, metadata !DIExpression()), !dbg !9024
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9025
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9026
  ret void, !dbg !9027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9028 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9030, metadata !DIExpression()), !dbg !9031
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9032
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9032
  ret %struct._snode* %3, !dbg !9033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9034 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9036, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9037, metadata !DIExpression()), !dbg !9038
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9039
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9040
  ret void, !dbg !9041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9042 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9046, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9047, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9048, metadata !DIExpression()), !dbg !9049
  %4 = icmp eq %struct._snode* %1, null, !dbg !9050
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !9052
  br i1 %4, label %6, label %11, !dbg !9053

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !9054
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9056
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9056
  br i1 %8, label %9, label %15, !dbg !9054

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9058
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !9058
  br label %15, !dbg !9058

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !9060
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9062
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9062
  br i1 %13, label %14, label %15, !dbg !9060

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !9064
  br label %15, !dbg !9064

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !9053
  ret void, !dbg !9053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9066 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9070, metadata !DIExpression()), !dbg !9071
  %2 = icmp eq %struct._snode* %0, null, !dbg !9072
  br i1 %2, label %5, label %3, !dbg !9072

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !9072
  br label %5, !dbg !9072

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9072
  ret %struct._snode* %6, !dbg !9072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9073 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9075, metadata !DIExpression()), !dbg !9076
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !9077
  ret %struct._snode* %2, !dbg !9077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9078 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9080, metadata !DIExpression()), !dbg !9081
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9082
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9082
  ret %struct._snode* %3, !dbg !9083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9086, metadata !DIExpression()), !dbg !9089
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !9090, !range !9091
  call void @llvm.dbg.value(metadata i32 %2, metadata !9087, metadata !DIExpression()), !dbg !9089
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !9092
  call void @llvm.dbg.value(metadata i32 %3, metadata !9088, metadata !DIExpression()), !dbg !9089
  ret i32 %3, !dbg !9093
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9096, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i8* %1, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i8* %1, metadata !9098, metadata !DIExpression()), !dbg !9099
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9100
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9100
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9101
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9101
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9101
  %8 = shl nuw i32 1, %0, !dbg !9102
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !9103
  ret void, !dbg !9104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9105 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9109, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata i32 %1, metadata !9110, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9111, metadata !DIExpression()), !dbg !9115
  %4 = bitcast i64* %3 to i8*, !dbg !9116
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9116
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9113, metadata !DIExpression()), !dbg !9115
  store i64 70368744177732, i64* %3, align 8, !dbg !9117
  call void @llvm.dbg.value(metadata i64* %3, metadata !9113, metadata !DIExpression(DW_OP_deref)), !dbg !9115
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !9118
  call void @llvm.dbg.value(metadata i32 %5, metadata !9114, metadata !DIExpression()), !dbg !9115
  %6 = icmp eq i32 %5, 0, !dbg !9119
  br i1 %6, label %7, label %8, !dbg !9121

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !9122
  br label %8, !dbg !9123

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9124
  ret void, !dbg !9124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9125 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9127, metadata !DIExpression()), !dbg !9130
  call void @llvm.dbg.value(metadata i8* %0, metadata !9128, metadata !DIExpression()), !dbg !9130
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9131
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9129, metadata !DIExpression()), !dbg !9130
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9132
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9132
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #26, !dbg !9133
  ret i32 %5, !dbg !9134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9137, metadata !DIExpression()), !dbg !9140
  call void @llvm.dbg.value(metadata i32 %1, metadata !9138, metadata !DIExpression()), !dbg !9140
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !9141
  call void @llvm.dbg.value(metadata i32 %3, metadata !9139, metadata !DIExpression()), !dbg !9140
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !9142
  ret void, !dbg !9143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !9144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9148, metadata !DIExpression()), !dbg !9149
  %2 = sdiv i32 %0, 4, !dbg !9150
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9151
  %6 = add nsw i32 %5, 16, !dbg !9152
  %7 = shl i32 15, %6, !dbg !9153
  %8 = or i32 %7, %2, !dbg !9154
  ret i32 %8, !dbg !9155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9160, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 %1, metadata !9161, metadata !DIExpression()), !dbg !9162
  %3 = and i32 %1, 255, !dbg !9163
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9163
  %5 = load volatile i32, i32* %4, align 4, !dbg !9163
  %6 = lshr i32 %1, 16, !dbg !9163
  %7 = xor i32 %6, -1, !dbg !9163
  %8 = and i32 %5, %7, !dbg !9163
  call void @llvm.dbg.value(metadata i32 %6, metadata !9164, metadata !DIExpression()) #25, !dbg !9168
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9170, !srcloc !9171
  call void @llvm.dbg.value(metadata i32 %9, metadata !9167, metadata !DIExpression()) #25, !dbg !9168
  call void @llvm.dbg.value(metadata i32 %9, metadata !9172, metadata !DIExpression()) #25, !dbg !9177
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !9179, !range !3789
  %11 = shl i32 %0, %10, !dbg !9163
  %12 = or i32 %11, %8, !dbg !9163
  store volatile i32 %12, i32* %4, align 4, !dbg !9163
  ret void, !dbg !9180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9181 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9185, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9186, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata i32 %2, metadata !9187, metadata !DIExpression()), !dbg !9190
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9191
  %5 = icmp eq %struct._snode* %4, null, !dbg !9191
  br i1 %5, label %21, label %6, !dbg !9191

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !9193
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9189, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9188, metadata !DIExpression()), !dbg !9190
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9194
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9194
  %11 = load i32, i32* %10, align 4, !dbg !9194
  %12 = and i32 %11, %2, !dbg !9198
  %13 = icmp eq i32 %12, 0, !dbg !9198
  br i1 %13, label %19, label %14, !dbg !9199

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9188, metadata !DIExpression()), !dbg !9190
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9200
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9200
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9200
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #26, !dbg !9202
  br label %19, !dbg !9203

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9188, metadata !DIExpression()), !dbg !9190
  %20 = icmp eq %struct._snode* %8, null, !dbg !9204
  br i1 %20, label %21, label %6, !dbg !9204

21:                                               ; preds = %19, %3
  ret void, !dbg !9205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9208, metadata !DIExpression()), !dbg !9209
  %2 = and i32 %0, 255, !dbg !9210
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9210
  %4 = load volatile i32, i32* %3, align 4, !dbg !9210
  %5 = lshr i32 %0, 16, !dbg !9210
  %6 = and i32 %4, %5, !dbg !9210
  call void @llvm.dbg.value(metadata i32 %5, metadata !9164, metadata !DIExpression()) #25, !dbg !9211
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !9213, !srcloc !9171
  call void @llvm.dbg.value(metadata i32 %7, metadata !9167, metadata !DIExpression()) #25, !dbg !9211
  call void @llvm.dbg.value(metadata i32 %7, metadata !9172, metadata !DIExpression()) #25, !dbg !9214
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9216, !range !3789
  %9 = lshr i32 %6, %8, !dbg !9217
  ret i32 %9, !dbg !9218
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9219 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9224, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.value(metadata i32 %1, metadata !9225, metadata !DIExpression()), !dbg !9226
  %3 = shl i32 %1, 16, !dbg !9227
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9227
  store volatile i32 %3, i32* %4, align 4, !dbg !9227
  ret void, !dbg !9228
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9229 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9233, metadata !DIExpression()), !dbg !9234
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9235
  %3 = load volatile i32, i32* %2, align 4, !dbg !9235
  ret i32 %3, !dbg !9236
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9237 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9239, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.value(metadata i32 %1, metadata !9240, metadata !DIExpression()), !dbg !9241
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9242
  store volatile i32 %1, i32* %3, align 4, !dbg !9242
  ret void, !dbg !9243
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9244 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9246, metadata !DIExpression()), !dbg !9247
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9248
  %3 = load volatile i32, i32* %2, align 4, !dbg !9248
  ret i32 %3, !dbg !9249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !9250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9254, metadata !DIExpression()), !dbg !9256
  call void @llvm.dbg.value(metadata i32* %1, metadata !9255, metadata !DIExpression()), !dbg !9256
  %3 = and i32 %0, 131072, !dbg !9257
  %4 = icmp eq i32 %3, 0, !dbg !9259
  br i1 %4, label %22, label %5, !dbg !9260

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9261
  %6 = and i32 %0, 2, !dbg !9263
  %7 = icmp eq i32 %6, 0, !dbg !9265
  br i1 %7, label %11, label %8, !dbg !9266

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9267
  %10 = icmp eq i32 %9, 0, !dbg !9267
  br i1 %10, label %33, label %11, !dbg !9270

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9271
  store i32 %12, i32* %1, align 4, !dbg !9271
  %13 = and i32 %0, 16, !dbg !9272
  %14 = icmp eq i32 %13, 0, !dbg !9274
  br i1 %14, label %17, label %15, !dbg !9275

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9276
  br label %31, !dbg !9278

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9279
  %19 = icmp eq i32 %18, 0, !dbg !9281
  br i1 %19, label %33, label %20, !dbg !9282

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9283
  br label %31, !dbg !9285

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9286
  %24 = icmp eq i32 %23, 0, !dbg !9288
  br i1 %24, label %31, label %25, !dbg !9289

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9290
  %27 = icmp eq i32 %26, 0, !dbg !9293
  br i1 %27, label %28, label %31, !dbg !9294

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9295
  br label %33, !dbg !9296

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9256
  ret i32 %34, !dbg !9296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9297 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9301, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %1, metadata !9302, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %2, metadata !9303, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %3, metadata !9304, metadata !DIExpression()), !dbg !9312
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9313
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9313
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9313
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9305, metadata !DIExpression()), !dbg !9312
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9314
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9314
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9314
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9306, metadata !DIExpression()), !dbg !9312
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !9315
  call void @llvm.dbg.value(metadata i32 %11, metadata !9307, metadata !DIExpression()), !dbg !9312
  %12 = and i32 %2, 48, !dbg !9316
  call void @llvm.dbg.value(metadata i32 %12, metadata !9308, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %2, metadata !9309, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %2, metadata !9310, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %2, metadata !9311, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9312
  %13 = lshr i32 %2, 6, !dbg !9317
  %14 = and i32 %13, 1, !dbg !9317
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !9318
  %15 = lshr i32 %2, 7, !dbg !9319
  %16 = and i32 %15, 3, !dbg !9319
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !9320
  %17 = lshr i32 %2, 9, !dbg !9321
  %18 = and i32 %17, 3, !dbg !9321
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !9322
  %19 = icmp eq i32 %12, 32, !dbg !9323
  br i1 %19, label %20, label %24, !dbg !9325

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9326
  br i1 %21, label %22, label %23, !dbg !9329

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9330
  br label %24, !dbg !9332

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9333
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9335
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !9336
  ret void, !dbg !9337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9340, metadata !DIExpression()), !dbg !9342
  %2 = shl nuw i32 1, %0, !dbg !9343
  call void @llvm.dbg.value(metadata i32 %2, metadata !9341, metadata !DIExpression()), !dbg !9342
  ret i32 %2, !dbg !9344
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9345 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9349, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i32 %1, metadata !9350, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i32 %2, metadata !9351, metadata !DIExpression()), !dbg !9352
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9353
  %5 = load volatile i32, i32* %4, align 4, !dbg !9353
  %6 = xor i32 %1, -1, !dbg !9353
  %7 = and i32 %5, %6, !dbg !9353
  %8 = mul i32 %2, %1, !dbg !9353
  %9 = or i32 %7, %8, !dbg !9353
  store volatile i32 %9, i32* %4, align 4, !dbg !9353
  ret void, !dbg !9354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9355 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9357, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %1, metadata !9358, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %2, metadata !9359, metadata !DIExpression()), !dbg !9360
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9361
  %5 = load volatile i32, i32* %4, align 4, !dbg !9361
  call void @llvm.dbg.value(metadata i32 %1, metadata !9164, metadata !DIExpression()) #25, !dbg !9362
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9364, !srcloc !9171
  call void @llvm.dbg.value(metadata i32 %6, metadata !9167, metadata !DIExpression()) #25, !dbg !9362
  call void @llvm.dbg.value(metadata i32 %6, metadata !9172, metadata !DIExpression()) #25, !dbg !9365
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9367, !range !3789
  %8 = shl nuw nsw i32 %7, 1, !dbg !9361
  %9 = shl i32 3, %8, !dbg !9361
  %10 = xor i32 %9, -1, !dbg !9361
  %11 = and i32 %5, %10, !dbg !9361
  call void @llvm.dbg.value(metadata i32 %1, metadata !9164, metadata !DIExpression()) #25, !dbg !9368
  call void @llvm.dbg.value(metadata i32 %6, metadata !9167, metadata !DIExpression()) #25, !dbg !9368
  call void @llvm.dbg.value(metadata i32 %6, metadata !9172, metadata !DIExpression()) #25, !dbg !9370
  %12 = shl i32 %2, %8, !dbg !9361
  %13 = or i32 %11, %12, !dbg !9361
  store volatile i32 %13, i32* %4, align 4, !dbg !9361
  ret void, !dbg !9372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9373 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9375, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 %1, metadata !9376, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 %2, metadata !9377, metadata !DIExpression()), !dbg !9378
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9379
  %5 = load volatile i32, i32* %4, align 4, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %1, metadata !9164, metadata !DIExpression()) #25, !dbg !9380
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9382, !srcloc !9171
  call void @llvm.dbg.value(metadata i32 %6, metadata !9167, metadata !DIExpression()) #25, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %6, metadata !9172, metadata !DIExpression()) #25, !dbg !9383
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9385, !range !3789
  %8 = shl nuw nsw i32 %7, 1, !dbg !9379
  %9 = shl i32 3, %8, !dbg !9379
  %10 = xor i32 %9, -1, !dbg !9379
  %11 = and i32 %5, %10, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %1, metadata !9164, metadata !DIExpression()) #25, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %6, metadata !9167, metadata !DIExpression()) #25, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %6, metadata !9172, metadata !DIExpression()) #25, !dbg !9388
  %12 = shl i32 %2, %8, !dbg !9379
  %13 = or i32 %11, %12, !dbg !9379
  store volatile i32 %13, i32* %4, align 4, !dbg !9379
  ret void, !dbg !9390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9391 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9393, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i32 %1, metadata !9394, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i32 %2, metadata !9395, metadata !DIExpression()), !dbg !9396
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9397
  %5 = load volatile i32, i32* %4, align 4, !dbg !9397
  call void @llvm.dbg.value(metadata i32 %1, metadata !9164, metadata !DIExpression()) #25, !dbg !9398
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9400, !srcloc !9171
  call void @llvm.dbg.value(metadata i32 %6, metadata !9167, metadata !DIExpression()) #25, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %6, metadata !9172, metadata !DIExpression()) #25, !dbg !9401
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9403, !range !3789
  %8 = shl nuw nsw i32 %7, 2, !dbg !9397
  %9 = shl i32 15, %8, !dbg !9397
  %10 = xor i32 %9, -1, !dbg !9397
  %11 = and i32 %5, %10, !dbg !9397
  call void @llvm.dbg.value(metadata i32 %1, metadata !9164, metadata !DIExpression()) #25, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %6, metadata !9167, metadata !DIExpression()) #25, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %6, metadata !9172, metadata !DIExpression()) #25, !dbg !9406
  %12 = shl i32 %2, %8, !dbg !9397
  %13 = or i32 %11, %12, !dbg !9397
  store volatile i32 %13, i32* %4, align 4, !dbg !9397
  ret void, !dbg !9408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9409 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9411, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i32 %1, metadata !9412, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i32 %2, metadata !9413, metadata !DIExpression()), !dbg !9414
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9415
  %5 = load volatile i32, i32* %4, align 4, !dbg !9415
  %6 = lshr i32 %1, 8, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %6, metadata !9164, metadata !DIExpression()) #25, !dbg !9416
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9418, !srcloc !9171
  call void @llvm.dbg.value(metadata i32 %7, metadata !9167, metadata !DIExpression()) #25, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %7, metadata !9172, metadata !DIExpression()) #25, !dbg !9419
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9421, !range !3789
  %9 = shl nuw nsw i32 %8, 2, !dbg !9415
  %10 = shl i32 15, %9, !dbg !9415
  %11 = xor i32 %10, -1, !dbg !9415
  %12 = and i32 %5, %11, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %6, metadata !9164, metadata !DIExpression()) #25, !dbg !9422
  call void @llvm.dbg.value(metadata i32 %7, metadata !9167, metadata !DIExpression()) #25, !dbg !9422
  call void @llvm.dbg.value(metadata i32 %7, metadata !9172, metadata !DIExpression()) #25, !dbg !9424
  %13 = shl i32 %2, %9, !dbg !9415
  %14 = or i32 %12, %13, !dbg !9415
  store volatile i32 %14, i32* %4, align 4, !dbg !9415
  ret void, !dbg !9426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9427 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9429, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 %1, metadata !9430, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 %2, metadata !9431, metadata !DIExpression()), !dbg !9432
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9433
  %5 = load volatile i32, i32* %4, align 4, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %1, metadata !9164, metadata !DIExpression()) #25, !dbg !9434
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9436, !srcloc !9171
  call void @llvm.dbg.value(metadata i32 %6, metadata !9167, metadata !DIExpression()) #25, !dbg !9434
  call void @llvm.dbg.value(metadata i32 %6, metadata !9172, metadata !DIExpression()) #25, !dbg !9437
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9439, !range !3789
  %8 = shl nuw nsw i32 %7, 1, !dbg !9433
  %9 = shl i32 3, %8, !dbg !9433
  %10 = xor i32 %9, -1, !dbg !9433
  %11 = and i32 %5, %10, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %1, metadata !9164, metadata !DIExpression()) #25, !dbg !9440
  call void @llvm.dbg.value(metadata i32 %6, metadata !9167, metadata !DIExpression()) #25, !dbg !9440
  call void @llvm.dbg.value(metadata i32 %6, metadata !9172, metadata !DIExpression()) #25, !dbg !9442
  %12 = shl i32 %2, %8, !dbg !9433
  %13 = or i32 %11, %12, !dbg !9433
  store volatile i32 %13, i32* %4, align 4, !dbg !9433
  ret void, !dbg !9444
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9445 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9447, metadata !DIExpression()), !dbg !9450
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9451
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9451
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9451
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9448, metadata !DIExpression()), !dbg !9450
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9452
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9453
  %6 = tail call fastcc zeroext i1 @device_is_ready.59() #27, !dbg !9454
  br i1 %6, label %7, label %11, !dbg !9456

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !9457
  call void @llvm.dbg.value(metadata i32 %8, metadata !9449, metadata !DIExpression()), !dbg !9450
  %9 = icmp slt i32 %8, 0, !dbg !9458
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9460
  br label %11, !dbg !9460

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9450
  ret i32 %12, !dbg !9461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.59() unnamed_addr #1 !dbg !9462 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9466, metadata !DIExpression()), !dbg !9467
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9468, !srcloc !9470
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.60() #27, !dbg !9471
  ret i1 %1, !dbg !9472
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9473 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9477, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8 1, metadata !9478, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9479, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i32 0, metadata !9480, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9481, metadata !DIExpression()), !dbg !9482
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9483
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9483
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9483
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9479, metadata !DIExpression()), !dbg !9482
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9484
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9487
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !9488
  call void @llvm.dbg.value(metadata i32 %7, metadata !9480, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i32 %7, metadata !9480, metadata !DIExpression()), !dbg !9482
  ret i32 %7, !dbg !9489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.60() unnamed_addr #1 !dbg !9490 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9492, metadata !DIExpression()), !dbg !9493
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #26, !dbg !9494
  ret i1 %1, !dbg !9495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9496 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9500, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata i32 %1, metadata !9501, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata i32 %2, metadata !9502, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata i32 %3, metadata !9503, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata i32 0, metadata !9504, metadata !DIExpression()), !dbg !9508
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !9509
  %5 = icmp eq i32 %3, 17, !dbg !9510
  br i1 %5, label %6, label %14, !dbg !9511

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9512
  call void @llvm.dbg.value(metadata i32 %7, metadata !9505, metadata !DIExpression()), !dbg !9513
  %8 = icmp eq i32 %7, 0, !dbg !9514
  %9 = shl nuw i32 1, %1, !dbg !9516
  br i1 %8, label %12, label %10, !dbg !9517

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9518
  br label %14, !dbg !9520

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9521
  br label %14, !dbg !9524

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9525
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9526 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9528, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata i8* %1, metadata !9529, metadata !DIExpression()), !dbg !9532
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9533
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9533
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9533
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9530, metadata !DIExpression()), !dbg !9532
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9534
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9534
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !9536
  %9 = icmp eq i32 %8, 0, !dbg !9536
  br i1 %9, label %12, label %10, !dbg !9537

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9538
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !9540
  br label %12, !dbg !9541

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9542
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9544
  %15 = icmp eq i32 %14, 0, !dbg !9544
  br i1 %15, label %19, label %16, !dbg !9545

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9546
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !9547
  store i8 %18, i8* %1, align 1, !dbg !9548
  br label %19, !dbg !9549

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9532
  ret i32 %20, !dbg !9550
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9553, metadata !DIExpression()), !dbg !9557
  call void @llvm.dbg.value(metadata i8 %1, metadata !9554, metadata !DIExpression()), !dbg !9557
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9558
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9558
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9558
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9555, metadata !DIExpression()), !dbg !9557
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9559

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9560
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9563
  %10 = icmp eq i32 %9, 0, !dbg !9563
  br i1 %10, label %18, label %11, !dbg !9564

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9565, !srcloc !9572
  call void @llvm.dbg.value(metadata i32 undef, metadata !9568, metadata !DIExpression()) #25, !dbg !9573
  call void @llvm.dbg.value(metadata i32 undef, metadata !9569, metadata !DIExpression()) #25, !dbg !9573
  call void @llvm.dbg.value(metadata i32 undef, metadata !9556, metadata !DIExpression()), !dbg !9557
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9574
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9576
  %15 = icmp eq i32 %14, 0, !dbg !9576
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9565
  br i1 %15, label %17, label %19, !dbg !9577

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9568, metadata !DIExpression()) #25, !dbg !9573
  call void @llvm.dbg.value(metadata i32 %16, metadata !9556, metadata !DIExpression()), !dbg !9557
  call void @llvm.dbg.value(metadata i32 undef, metadata !9578, metadata !DIExpression()) #25, !dbg !9581
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9583, !srcloc !9584
  br label %18, !dbg !9585

18:                                               ; preds = %17, %7
  br label %7, !dbg !9560, !llvm.loop !9586

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9565
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9588
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !9589
  call void @llvm.dbg.value(metadata i32 %20, metadata !9578, metadata !DIExpression()) #25, !dbg !9590
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9592, !srcloc !9584
  ret void, !dbg !9593
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9594 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9596, metadata !DIExpression()), !dbg !9599
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9600
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9600
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9600
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9597, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.value(metadata i32 0, metadata !9598, metadata !DIExpression()), !dbg !9599
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9601
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9601
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9603
  %8 = icmp ne i32 %7, 0, !dbg !9603
  %9 = zext i1 %8 to i32, !dbg !9604
  call void @llvm.dbg.value(metadata i32 %9, metadata !9598, metadata !DIExpression()), !dbg !9599
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9605
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !9607
  %12 = icmp eq i32 %11, 0, !dbg !9607
  %13 = or i32 %9, 2, !dbg !9608
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9608
  call void @llvm.dbg.value(metadata i32 %14, metadata !9598, metadata !DIExpression()), !dbg !9599
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9609
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !9611
  %17 = icmp eq i32 %16, 0, !dbg !9611
  %18 = or i32 %14, 4, !dbg !9612
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9612
  call void @llvm.dbg.value(metadata i32 %19, metadata !9598, metadata !DIExpression()), !dbg !9599
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9613
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !9615
  %22 = icmp eq i32 %21, 0, !dbg !9615
  %23 = or i32 %19, 8, !dbg !9616
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9616
  call void @llvm.dbg.value(metadata i32 %24, metadata !9598, metadata !DIExpression()), !dbg !9599
  %25 = and i32 %24, 8, !dbg !9617
  %26 = icmp eq i32 %25, 0, !dbg !9617
  br i1 %26, label %29, label %27, !dbg !9619

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9620
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !9622
  br label %29, !dbg !9623

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9624
  %31 = icmp eq i32 %30, 0, !dbg !9624
  br i1 %31, label %34, label %32, !dbg !9626

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9627
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !9629
  br label %34, !dbg !9630

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9631
  %36 = icmp eq i32 %35, 0, !dbg !9631
  br i1 %36, label %39, label %37, !dbg !9633

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9634
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !9636
  br label %39, !dbg !9637

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9638
  %41 = icmp eq i32 %40, 0, !dbg !9638
  br i1 %41, label %44, label %42, !dbg !9640

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9641
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !9643
  br label %44, !dbg !9644

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9645
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !9646
  ret i32 %24, !dbg !9647
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9648 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9650, metadata !DIExpression()), !dbg !9659
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9651, metadata !DIExpression()), !dbg !9659
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9660
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9660
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9660
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9652, metadata !DIExpression()), !dbg !9659
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9661
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9661
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9661
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9653, metadata !DIExpression()), !dbg !9659
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9662
  %10 = load i8, i8* %9, align 4, !dbg !9662
  %11 = zext i8 %10 to i32, !dbg !9663
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !9664
  call void @llvm.dbg.value(metadata i32 %12, metadata !9655, metadata !DIExpression()), !dbg !9659
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9665
  %14 = load i8, i8* %13, align 1, !dbg !9665
  %15 = zext i8 %14 to i32, !dbg !9666
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %16, metadata !9656, metadata !DIExpression()), !dbg !9659
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9668
  %18 = load i8, i8* %17, align 2, !dbg !9668
  %19 = zext i8 %18 to i32, !dbg !9669
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !9670
  call void @llvm.dbg.value(metadata i32 %20, metadata !9657, metadata !DIExpression()), !dbg !9659
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9671
  %22 = load i8, i8* %21, align 1, !dbg !9671
  %23 = zext i8 %22 to i32, !dbg !9672
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !9673
  call void @llvm.dbg.value(metadata i32 %24, metadata !9658, metadata !DIExpression()), !dbg !9659
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9674

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9676
  br i1 %26, label %69, label %27, !dbg !9678

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9679

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9680
  br i1 %29, label %65, label %30, !dbg !9680

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9682
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9659
  br i1 %31, label %38, label %34, !dbg !9684

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9685
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9685

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9688
  br i1 %37, label %38, label %69, !dbg !9689

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9690
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !9691
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !9692
  %41 = icmp eq i32 %12, %40, !dbg !9694
  br i1 %41, label %43, label %42, !dbg !9695

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !9696
  br label %43, !dbg !9698

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !9699
  %45 = icmp eq i32 %16, %44, !dbg !9701
  br i1 %45, label %47, label %46, !dbg !9702

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !9703
  br label %47, !dbg !9705

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !9706
  %49 = icmp eq i32 %20, %48, !dbg !9708
  br i1 %49, label %51, label %50, !dbg !9709

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !9710
  br label %51, !dbg !9712

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !9713
  %53 = icmp eq i32 %24, %52, !dbg !9715
  br i1 %53, label %55, label %54, !dbg !9716

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !9717
  br label %55, !dbg !9719

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9720
  %57 = load i32, i32* %56, align 4, !dbg !9720
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9722
  %59 = load i32, i32* %58, align 4, !dbg !9722
  %60 = icmp eq i32 %57, %59, !dbg !9723
  br i1 %60, label %63, label %61, !dbg !9724

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !9725
  %62 = load i32, i32* %56, align 4, !dbg !9727
  store i32 %62, i32* %58, align 4, !dbg !9728
  br label %63, !dbg !9729

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9730
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !9731
  br label %69, !dbg !9732

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9680
  %67 = and i8 %66, 1, !dbg !9680
  %68 = icmp eq i8 %67, 0, !dbg !9680
  br i1 %68, label %30, label %69, !dbg !9680

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9659
  ret i32 %70, !dbg !9733
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9734 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9736, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9737, metadata !DIExpression()), !dbg !9739
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9740
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9740
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9740
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9738, metadata !DIExpression()), !dbg !9739
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9741
  %7 = load i32, i32* %6, align 4, !dbg !9741
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9742
  store i32 %7, i32* %8, align 4, !dbg !9743
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9744, !range !9745
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !9746
  %11 = trunc i32 %10 to i8, !dbg !9746
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9747
  store i8 %11, i8* %12, align 4, !dbg !9748
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !9749, !range !9750
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !9751
  %15 = trunc i32 %14 to i8, !dbg !9751
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9752
  store i8 %15, i8* %16, align 1, !dbg !9753
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !9754
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9755, !range !9745
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !9756
  %20 = trunc i32 %19 to i8, !dbg !9756
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9757
  store i8 %20, i8* %21, align 2, !dbg !9758
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !9759, !range !9760
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !9761
  %24 = trunc i32 %23 to i8, !dbg !9761
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9762
  store i8 %24, i8* %25, align 1, !dbg !9763
  ret i32 0, !dbg !9764
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9767, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.value(metadata i8* %1, metadata !9768, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.value(metadata i32 %2, metadata !9769, metadata !DIExpression()), !dbg !9773
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9774
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9774
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9774
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9770, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.value(metadata i8 0, metadata !9771, metadata !DIExpression()), !dbg !9773
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9775
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9775
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9777
  %10 = icmp eq i32 %9, 0, !dbg !9777
  br i1 %10, label %30, label %11, !dbg !9778

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9779, !srcloc !9572
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9779
  call void @llvm.dbg.value(metadata i32 %13, metadata !9568, metadata !DIExpression()) #25, !dbg !9781
  call void @llvm.dbg.value(metadata i32 undef, metadata !9569, metadata !DIExpression()) #25, !dbg !9781
  call void @llvm.dbg.value(metadata i32 %13, metadata !9772, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.value(metadata i8 0, metadata !9771, metadata !DIExpression()), !dbg !9773
  %14 = icmp sgt i32 %2, 0, !dbg !9782
  br i1 %14, label %15, label %28, !dbg !9783

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9771, metadata !DIExpression()), !dbg !9773
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9784
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #27, !dbg !9785
  %20 = icmp eq i32 %19, 0, !dbg !9783
  br i1 %20, label %28, label %21, !dbg !9786

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9787
  %23 = add i8 %17, 1, !dbg !9789
  call void @llvm.dbg.value(metadata i8 %23, metadata !9771, metadata !DIExpression()), !dbg !9773
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9790
  %25 = load i8, i8* %24, align 1, !dbg !9790
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #27, !dbg !9791
  %26 = zext i8 %23 to i32, !dbg !9792
  %27 = icmp slt i32 %26, %2, !dbg !9782
  br i1 %27, label %15, label %28, !dbg !9783, !llvm.loop !9793

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9792
  call void @llvm.dbg.value(metadata i32 %13, metadata !9578, metadata !DIExpression()) #25, !dbg !9795
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9797, !srcloc !9584
  br label %30, !dbg !9798

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9773
  ret i32 %31, !dbg !9799
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9800 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9802, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i8* %1, metadata !9803, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i32 %2, metadata !9804, metadata !DIExpression()), !dbg !9807
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9808
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9808
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9808
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9805, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i8 0, metadata !9806, metadata !DIExpression()), !dbg !9807
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9809
  call void @llvm.dbg.value(metadata i8 0, metadata !9806, metadata !DIExpression()), !dbg !9807
  %8 = icmp sgt i32 %2, 0, !dbg !9810
  br i1 %8, label %9, label %28, !dbg !9811

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9806, metadata !DIExpression()), !dbg !9807
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9809
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9812
  %14 = icmp eq i32 %13, 0, !dbg !9811
  br i1 %14, label %28, label %15, !dbg !9813

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9814
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #27, !dbg !9816
  %18 = add i8 %11, 1, !dbg !9817
  call void @llvm.dbg.value(metadata i8 %18, metadata !9806, metadata !DIExpression()), !dbg !9807
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9818
  store i8 %17, i8* %19, align 1, !dbg !9819
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9820
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #27, !dbg !9822
  %22 = icmp eq i32 %21, 0, !dbg !9822
  br i1 %22, label %25, label %23, !dbg !9823

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9824
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #27, !dbg !9826
  br label %25, !dbg !9827

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9806, metadata !DIExpression()), !dbg !9807
  %26 = zext i8 %18 to i32, !dbg !9828
  %27 = icmp slt i32 %26, %2, !dbg !9810
  br i1 %27, label %9, label %28, !dbg !9811, !llvm.loop !9829

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9828
  ret i32 %29, !dbg !9831
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9834, metadata !DIExpression()), !dbg !9836
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9837
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9837
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9837
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9835, metadata !DIExpression()), !dbg !9836
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9838
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9838
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9839
  ret void, !dbg !9840
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9843, metadata !DIExpression()), !dbg !9845
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9846
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9846
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9846
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9844, metadata !DIExpression()), !dbg !9845
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9847
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9847
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9848
  ret void, !dbg !9849
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9852, metadata !DIExpression()), !dbg !9854
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9855
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9855
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9855
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9853, metadata !DIExpression()), !dbg !9854
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9856
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9856
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9857
  %8 = icmp eq i32 %7, 0, !dbg !9857
  br i1 %8, label %14, label %9, !dbg !9858

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9859
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #27, !dbg !9860
  %12 = icmp ne i32 %11, 0, !dbg !9858
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9861
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9862 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9864, metadata !DIExpression()), !dbg !9866
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9867
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9867
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9867
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9865, metadata !DIExpression()), !dbg !9866
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9868
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9868
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9869
  ret void, !dbg !9870
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9871 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9873, metadata !DIExpression()), !dbg !9875
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9876
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9876
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9876
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9874, metadata !DIExpression()), !dbg !9875
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9877
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9877
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9878
  ret void, !dbg !9879
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !9880 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9882, metadata !DIExpression()), !dbg !9884
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9885
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9885
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9885
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9883, metadata !DIExpression()), !dbg !9884
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9886
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9886
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9887
  ret i32 %7, !dbg !9888
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9889 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9891, metadata !DIExpression()), !dbg !9893
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9894
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9894
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9894
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9892, metadata !DIExpression()), !dbg !9893
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9895
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9895
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9896
  ret i32 %7, !dbg !9897
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9900, metadata !DIExpression()), !dbg !9902
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9903
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9903
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9901, metadata !DIExpression()), !dbg !9902
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9904
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9904
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !9905
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9906
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9906
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !9906

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !9908
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9910
  br label %11, !dbg !9911

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9910
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9912
  ret void, !dbg !9913
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9914 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9916, metadata !DIExpression()), !dbg !9918
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9919
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9919
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9919
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9917, metadata !DIExpression()), !dbg !9918
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9920
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9920
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !9921
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9922
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9922
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !9922

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !9924
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9926
  br label %11, !dbg !9927

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9926
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9928
  ret void, !dbg !9929
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !9930 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9932, metadata !DIExpression()), !dbg !9934
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9935
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9935
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9935
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9933, metadata !DIExpression()), !dbg !9934
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9936
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9936
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9937
  %8 = icmp eq i32 %7, 0, !dbg !9937
  br i1 %8, label %13, label %9, !dbg !9938

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9939
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #27, !dbg !9940
  %12 = icmp eq i32 %11, 0, !dbg !9940
  br i1 %12, label %13, label %22, !dbg !9941

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9942
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #27, !dbg !9943
  %16 = icmp eq i32 %15, 0, !dbg !9943
  br i1 %16, label %22, label %17, !dbg !9944

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9945
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #27, !dbg !9946
  %20 = icmp ne i32 %19, 0, !dbg !9944
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !9947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !9948 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9950, metadata !DIExpression()), !dbg !9951
  ret i32 1, !dbg !9952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !9953 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9955, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9956, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.value(metadata i8* %2, metadata !9957, metadata !DIExpression()), !dbg !9959
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9960
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !9960
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !9960
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !9958, metadata !DIExpression()), !dbg !9959
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !9961
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9962
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !9963
  store i8* %2, i8** %8, align 4, !dbg !9964
  ret void, !dbg !9965
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9966 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9971, metadata !DIExpression()), !dbg !9972
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9973
  %3 = load volatile i32, i32* %2, align 4, !dbg !9973
  %4 = lshr i32 %3, 5, !dbg !9974
  %5 = and i32 %4, 1, !dbg !9974
  ret i32 %5, !dbg !9975
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9976 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9978, metadata !DIExpression()), !dbg !9979
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9980
  %3 = load volatile i32, i32* %2, align 4, !dbg !9980
  %4 = lshr i32 %3, 5, !dbg !9981
  %5 = and i32 %4, 1, !dbg !9981
  ret i32 %5, !dbg !9982
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9983 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9985, metadata !DIExpression()), !dbg !9986
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9987
  %3 = load volatile i32, i32* %2, align 4, !dbg !9987
  %4 = lshr i32 %3, 6, !dbg !9988
  %5 = and i32 %4, 1, !dbg !9988
  ret i32 %5, !dbg !9989
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9990 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9992, metadata !DIExpression()), !dbg !9993
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9994
  %3 = load volatile i32, i32* %2, align 4, !dbg !9994
  %4 = lshr i32 %3, 6, !dbg !9995
  %5 = and i32 %4, 1, !dbg !9995
  ret i32 %5, !dbg !9996
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9997 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10001, metadata !DIExpression()), !dbg !10004
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10005

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10006, metadata !DIExpression()) #25, !dbg !10012
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10015, !srcloc !10016
  call void @llvm.dbg.value(metadata i32 %4, metadata !10011, metadata !DIExpression()) #25, !dbg !10012
  %5 = and i32 %4, -2, !dbg !10017
  call void @llvm.dbg.value(metadata i32 %5, metadata !10002, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata i32 %5, metadata !10019, metadata !DIExpression()) #25, !dbg !10026
  call void @llvm.dbg.value(metadata i32* %2, metadata !10024, metadata !DIExpression()) #25, !dbg !10026
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10028, !srcloc !10029
  call void @llvm.dbg.value(metadata i32 %6, metadata !10025, metadata !DIExpression()) #25, !dbg !10026
  %7 = icmp eq i32 %6, 0, !dbg !10005
  br i1 %7, label %8, label %3, !dbg !10017, !llvm.loop !10030

8:                                                ; preds = %3
  ret void, !dbg !10031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10032 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10034, metadata !DIExpression()), !dbg !10035
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10036
  %3 = load volatile i32, i32* %2, align 4, !dbg !10036
  %4 = and i32 %3, -65, !dbg !10036
  store volatile i32 %4, i32* %2, align 4, !dbg !10036
  ret void, !dbg !10037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10038 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10040, metadata !DIExpression()), !dbg !10043
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10044

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10006, metadata !DIExpression()) #25, !dbg !10045
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10048, !srcloc !10016
  call void @llvm.dbg.value(metadata i32 %4, metadata !10011, metadata !DIExpression()) #25, !dbg !10045
  %5 = and i32 %4, -257, !dbg !10049
  call void @llvm.dbg.value(metadata i32 %5, metadata !10041, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.value(metadata i32 %5, metadata !10019, metadata !DIExpression()) #25, !dbg !10051
  call void @llvm.dbg.value(metadata i32* %2, metadata !10024, metadata !DIExpression()) #25, !dbg !10051
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10053, !srcloc !10029
  call void @llvm.dbg.value(metadata i32 %6, metadata !10025, metadata !DIExpression()) #25, !dbg !10051
  %7 = icmp eq i32 %6, 0, !dbg !10044
  br i1 %7, label %8, label %3, !dbg !10049, !llvm.loop !10054

8:                                                ; preds = %3
  ret void, !dbg !10055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10056 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10058, metadata !DIExpression()), !dbg !10061
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10062

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10006, metadata !DIExpression()) #25, !dbg !10063
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10066, !srcloc !10016
  call void @llvm.dbg.value(metadata i32 %4, metadata !10011, metadata !DIExpression()) #25, !dbg !10063
  %5 = or i32 %4, 1, !dbg !10067
  call void @llvm.dbg.value(metadata i32 %5, metadata !10059, metadata !DIExpression()), !dbg !10068
  call void @llvm.dbg.value(metadata i32 %5, metadata !10019, metadata !DIExpression()) #25, !dbg !10069
  call void @llvm.dbg.value(metadata i32* %2, metadata !10024, metadata !DIExpression()) #25, !dbg !10069
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10071, !srcloc !10029
  call void @llvm.dbg.value(metadata i32 %6, metadata !10025, metadata !DIExpression()) #25, !dbg !10069
  %7 = icmp eq i32 %6, 0, !dbg !10062
  br i1 %7, label %8, label %3, !dbg !10067, !llvm.loop !10072

8:                                                ; preds = %3
  ret void, !dbg !10073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10074 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10076, metadata !DIExpression()), !dbg !10077
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10078
  %3 = load volatile i32, i32* %2, align 4, !dbg !10078
  %4 = or i32 %3, 64, !dbg !10078
  store volatile i32 %4, i32* %2, align 4, !dbg !10078
  ret void, !dbg !10079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10080 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10082, metadata !DIExpression()), !dbg !10085
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10086

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10006, metadata !DIExpression()) #25, !dbg !10087
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10090, !srcloc !10016
  call void @llvm.dbg.value(metadata i32 %4, metadata !10011, metadata !DIExpression()) #25, !dbg !10087
  %5 = or i32 %4, 256, !dbg !10091
  call void @llvm.dbg.value(metadata i32 %5, metadata !10083, metadata !DIExpression()), !dbg !10092
  call void @llvm.dbg.value(metadata i32 %5, metadata !10019, metadata !DIExpression()) #25, !dbg !10093
  call void @llvm.dbg.value(metadata i32* %2, metadata !10024, metadata !DIExpression()) #25, !dbg !10093
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10095, !srcloc !10029
  call void @llvm.dbg.value(metadata i32 %6, metadata !10025, metadata !DIExpression()) #25, !dbg !10093
  %7 = icmp eq i32 %6, 0, !dbg !10086
  br i1 %7, label %8, label %3, !dbg !10091, !llvm.loop !10096

8:                                                ; preds = %3
  ret void, !dbg !10097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10098 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10100, metadata !DIExpression()), !dbg !10103
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10104

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10006, metadata !DIExpression()) #25, !dbg !10105
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10108, !srcloc !10016
  call void @llvm.dbg.value(metadata i32 %4, metadata !10011, metadata !DIExpression()) #25, !dbg !10105
  %5 = and i32 %4, -33, !dbg !10109
  call void @llvm.dbg.value(metadata i32 %5, metadata !10101, metadata !DIExpression()), !dbg !10110
  call void @llvm.dbg.value(metadata i32 %5, metadata !10019, metadata !DIExpression()) #25, !dbg !10111
  call void @llvm.dbg.value(metadata i32* %2, metadata !10024, metadata !DIExpression()) #25, !dbg !10111
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10113, !srcloc !10029
  call void @llvm.dbg.value(metadata i32 %6, metadata !10025, metadata !DIExpression()) #25, !dbg !10111
  %7 = icmp eq i32 %6, 0, !dbg !10104
  br i1 %7, label %8, label %3, !dbg !10109, !llvm.loop !10114

8:                                                ; preds = %3
  ret void, !dbg !10115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10116 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10118, metadata !DIExpression()), !dbg !10121
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10122

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10006, metadata !DIExpression()) #25, !dbg !10123
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10126, !srcloc !10016
  call void @llvm.dbg.value(metadata i32 %4, metadata !10011, metadata !DIExpression()) #25, !dbg !10123
  %5 = or i32 %4, 32, !dbg !10127
  call void @llvm.dbg.value(metadata i32 %5, metadata !10119, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.value(metadata i32 %5, metadata !10019, metadata !DIExpression()) #25, !dbg !10129
  call void @llvm.dbg.value(metadata i32* %2, metadata !10024, metadata !DIExpression()) #25, !dbg !10129
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10131, !srcloc !10029
  call void @llvm.dbg.value(metadata i32 %6, metadata !10025, metadata !DIExpression()) #25, !dbg !10129
  %7 = icmp eq i32 %6, 0, !dbg !10122
  br i1 %7, label %8, label %3, !dbg !10127, !llvm.loop !10132

8:                                                ; preds = %3
  ret void, !dbg !10133
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10134 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10136, metadata !DIExpression()), !dbg !10137
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10138
  %3 = load volatile i32, i32* %2, align 4, !dbg !10138
  %4 = lshr i32 %3, 7, !dbg !10139
  %5 = and i32 %4, 1, !dbg !10139
  ret i32 %5, !dbg !10140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10141 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10143, metadata !DIExpression()), !dbg !10146
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10147

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10006, metadata !DIExpression()) #25, !dbg !10148
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10151, !srcloc !10016
  call void @llvm.dbg.value(metadata i32 %4, metadata !10011, metadata !DIExpression()) #25, !dbg !10148
  %5 = and i32 %4, -65, !dbg !10152
  call void @llvm.dbg.value(metadata i32 %5, metadata !10144, metadata !DIExpression()), !dbg !10153
  call void @llvm.dbg.value(metadata i32 %5, metadata !10019, metadata !DIExpression()) #25, !dbg !10154
  call void @llvm.dbg.value(metadata i32* %2, metadata !10024, metadata !DIExpression()) #25, !dbg !10154
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10156, !srcloc !10029
  call void @llvm.dbg.value(metadata i32 %6, metadata !10025, metadata !DIExpression()) #25, !dbg !10154
  %7 = icmp eq i32 %6, 0, !dbg !10147
  br i1 %7, label %8, label %3, !dbg !10152, !llvm.loop !10157

8:                                                ; preds = %3
  ret void, !dbg !10158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10159 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10161, metadata !DIExpression()), !dbg !10164
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10165

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10006, metadata !DIExpression()) #25, !dbg !10166
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10169, !srcloc !10016
  call void @llvm.dbg.value(metadata i32 %4, metadata !10011, metadata !DIExpression()) #25, !dbg !10166
  %5 = or i32 %4, 64, !dbg !10170
  call void @llvm.dbg.value(metadata i32 %5, metadata !10162, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.value(metadata i32 %5, metadata !10019, metadata !DIExpression()) #25, !dbg !10172
  call void @llvm.dbg.value(metadata i32* %2, metadata !10024, metadata !DIExpression()) #25, !dbg !10172
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10174, !srcloc !10029
  call void @llvm.dbg.value(metadata i32 %6, metadata !10025, metadata !DIExpression()) #25, !dbg !10172
  %7 = icmp eq i32 %6, 0, !dbg !10165
  br i1 %7, label %8, label %3, !dbg !10170, !llvm.loop !10175

8:                                                ; preds = %3
  ret void, !dbg !10176
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10177 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10181, metadata !DIExpression()), !dbg !10182
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10183
  %3 = load volatile i32, i32* %2, align 4, !dbg !10183
  %4 = trunc i32 %3 to i8, !dbg !10184
  ret i8 %4, !dbg !10185
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10186 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10188, metadata !DIExpression()), !dbg !10189
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10190
  %3 = load volatile i32, i32* %2, align 4, !dbg !10190
  %4 = lshr i32 %3, 3, !dbg !10191
  %5 = and i32 %4, 1, !dbg !10191
  ret i32 %5, !dbg !10192
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10193 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10195, metadata !DIExpression()), !dbg !10197
  %3 = bitcast i32* %2 to i8*, !dbg !10198
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10198
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10196, metadata !DIExpression()), !dbg !10199
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10200
  %5 = load volatile i32, i32* %4, align 4, !dbg !10200
  store volatile i32 %5, i32* %2, align 4, !dbg !10201
  %6 = load volatile i32, i32* %2, align 4, !dbg !10202
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10203
  %8 = load volatile i32, i32* %7, align 4, !dbg !10203
  store volatile i32 %8, i32* %2, align 4, !dbg !10204
  %9 = load volatile i32, i32* %2, align 4, !dbg !10205
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10206
  ret void, !dbg !10206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10207 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10211, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.value(metadata i8 %1, metadata !10212, metadata !DIExpression()), !dbg !10213
  %3 = zext i8 %1 to i32, !dbg !10214
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10215
  store volatile i32 %3, i32* %4, align 4, !dbg !10216
  ret void, !dbg !10217
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10218 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10222, metadata !DIExpression()), !dbg !10224
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10225
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10225
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10225
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10223, metadata !DIExpression()), !dbg !10224
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10226
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10226
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !10227
  ret i32 %7, !dbg !10228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !10229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10233, metadata !DIExpression()), !dbg !10234
  %2 = icmp eq i32 %0, 1024, !dbg !10235
  %3 = select i1 %2, i32 2, i32 0, !dbg !10235
  %4 = icmp eq i32 %0, 1536, !dbg !10235
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10235
  ret i32 %5, !dbg !10236
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10237 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10239, metadata !DIExpression()), !dbg !10241
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10242
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10242
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10242
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10240, metadata !DIExpression()), !dbg !10241
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10243
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10243
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !10244
  ret i32 %7, !dbg !10245
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !10246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10250, metadata !DIExpression()), !dbg !10251
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10252
  %3 = icmp ult i32 %2, 4, !dbg !10252
  br i1 %3, label %4, label %7, !dbg !10252

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10252
  %6 = load i32, i32* %5, align 4, !dbg !10252
  br label %7, !dbg !10252

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10253
  ret i32 %8, !dbg !10255
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10256 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10258, metadata !DIExpression()), !dbg !10260
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10261
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10261
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10261
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10259, metadata !DIExpression()), !dbg !10260
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10262
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10262
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !10263
  ret i32 %7, !dbg !10264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10269, metadata !DIExpression()), !dbg !10271
  call void @llvm.dbg.value(metadata i32 %1, metadata !10270, metadata !DIExpression()), !dbg !10271
  %3 = icmp eq i32 %0, 4096, !dbg !10272
  %4 = icmp eq i32 %1, 0, !dbg !10272
  %5 = select i1 %4, i32 4, i32 3, !dbg !10272
  %6 = select i1 %4, i32 3, i32 2, !dbg !10272
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10272
  ret i32 %7, !dbg !10273
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10274 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10276, metadata !DIExpression()), !dbg !10278
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10279
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10279
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10279
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10277, metadata !DIExpression()), !dbg !10278
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10280
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10280
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !10281
  ret i32 %7, !dbg !10282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10287, metadata !DIExpression()), !dbg !10288
  %2 = icmp eq i32 %0, 768, !dbg !10289
  %3 = zext i1 %2 to i32, !dbg !10288
  ret i32 %3, !dbg !10291
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10292 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10294, metadata !DIExpression()), !dbg !10295
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10296
  %3 = load volatile i32, i32* %2, align 4, !dbg !10296
  %4 = and i32 %3, 768, !dbg !10296
  ret i32 %4, !dbg !10297
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10298 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10300, metadata !DIExpression()), !dbg !10301
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10302
  %3 = load volatile i32, i32* %2, align 4, !dbg !10302
  %4 = and i32 %3, 4096, !dbg !10302
  ret i32 %4, !dbg !10303
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10304 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10306, metadata !DIExpression()), !dbg !10307
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10308
  %3 = load volatile i32, i32* %2, align 4, !dbg !10308
  %4 = and i32 %3, 12288, !dbg !10308
  ret i32 %4, !dbg !10309
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10310 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10312, metadata !DIExpression()), !dbg !10313
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10314
  %3 = load volatile i32, i32* %2, align 4, !dbg !10314
  %4 = and i32 %3, 1536, !dbg !10314
  ret i32 %4, !dbg !10315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !10316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10320, metadata !DIExpression()), !dbg !10321
  %2 = icmp eq i32 %0, 2, !dbg !10322
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10322
  %4 = icmp eq i32 %0, 1, !dbg !10322
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10322
  ret i32 %5, !dbg !10323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10328, metadata !DIExpression()), !dbg !10329
  %2 = icmp ult i32 %0, 3, !dbg !10330
  br i1 %2, label %3, label %6, !dbg !10330

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10330
  %5 = load i32, i32* %4, align 4, !dbg !10330
  br label %6, !dbg !10330

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10331
  ret i32 %7, !dbg !10333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10338, metadata !DIExpression()), !dbg !10340
  call void @llvm.dbg.value(metadata i32 %1, metadata !10339, metadata !DIExpression()), !dbg !10340
  %3 = icmp eq i32 %0, 4, !dbg !10341
  %4 = icmp eq i32 %1, 0, !dbg !10341
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10341
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10341
  ret i32 %6, !dbg !10342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10347, metadata !DIExpression()), !dbg !10348
  %2 = icmp eq i32 %0, 1, !dbg !10349
  %3 = select i1 %2, i32 768, i32 0, !dbg !10348
  ret i32 %3, !dbg !10351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10352 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10354, metadata !DIExpression()), !dbg !10355
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10356
  %3 = load volatile i32, i32* %2, align 4, !dbg !10356
  %4 = and i32 %3, -8193, !dbg !10356
  store volatile i32 %4, i32* %2, align 4, !dbg !10356
  ret void, !dbg !10357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10358 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10362, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %1, metadata !10363, metadata !DIExpression()), !dbg !10365
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10366
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10366
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10366
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10364, metadata !DIExpression()), !dbg !10365
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10367
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10367
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10368
  ret void, !dbg !10369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10370 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10372, metadata !DIExpression()), !dbg !10375
  call void @llvm.dbg.value(metadata i32 %1, metadata !10373, metadata !DIExpression()), !dbg !10375
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10376
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10376
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10376
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10374, metadata !DIExpression()), !dbg !10375
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10377
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10377
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10378
  ret void, !dbg !10379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10380 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10382, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.value(metadata i32 %1, metadata !10383, metadata !DIExpression()), !dbg !10385
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10386
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10386
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10386
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10384, metadata !DIExpression()), !dbg !10385
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10387
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10387
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10388
  ret void, !dbg !10389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10390 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10392, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata i32 %1, metadata !10393, metadata !DIExpression()), !dbg !10395
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10396
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10396
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10396
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10394, metadata !DIExpression()), !dbg !10395
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10397
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10397
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10398
  ret void, !dbg !10399
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10400 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10402, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.value(metadata i32 %1, metadata !10403, metadata !DIExpression()), !dbg !10407
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10408
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10408
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10408
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10404, metadata !DIExpression()), !dbg !10407
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10409
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10409
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10409
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10405, metadata !DIExpression()), !dbg !10407
  %10 = bitcast i32* %3 to i8*, !dbg !10410
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10410
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10411
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10411
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10415
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10415
  %15 = load i8*, i8** %14, align 4, !dbg !10415
  call void @llvm.dbg.value(metadata i32* %3, metadata !10406, metadata !DIExpression(DW_OP_deref)), !dbg !10407
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !10416
  %17 = icmp slt i32 %16, 0, !dbg !10417
  br i1 %17, label %23, label %18, !dbg !10418

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10419
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10419
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #27, !dbg !10420
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10421
  %22 = load i32, i32* %3, align 4, !dbg !10422
  call void @llvm.dbg.value(metadata i32 %22, metadata !10406, metadata !DIExpression()), !dbg !10407
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #27, !dbg !10423
  br label %23, !dbg !10424

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10424
  ret void, !dbg !10424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10425 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10427, metadata !DIExpression()), !dbg !10428
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10429
  %3 = load volatile i32, i32* %2, align 4, !dbg !10429
  %4 = or i32 %3, 8192, !dbg !10429
  store volatile i32 %4, i32* %2, align 4, !dbg !10429
  ret void, !dbg !10430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10431 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10433, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.value(metadata i8* %1, metadata !10434, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.value(metadata i32* %2, metadata !10435, metadata !DIExpression()), !dbg !10437
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10438
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10438
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10438
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10436, metadata !DIExpression()), !dbg !10437
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10439
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10439
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10441
  br i1 %9, label %12, label %10, !dbg !10442

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !10443
  br label %12, !dbg !10444

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10437
  ret i32 %13, !dbg !10445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10446 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10450, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i32 0, metadata !10451, metadata !DIExpression()), !dbg !10452
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10453
  %3 = load volatile i32, i32* %2, align 4, !dbg !10453
  %4 = and i32 %3, -32769, !dbg !10453
  store volatile i32 %4, i32* %2, align 4, !dbg !10453
  ret void, !dbg !10454
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10455 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10459, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i32 %1, metadata !10460, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i32 0, metadata !10461, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i32 %2, metadata !10462, metadata !DIExpression()), !dbg !10463
  %4 = zext i32 %1 to i64, !dbg !10464
  %5 = mul nuw nsw i64 %4, 25, !dbg !10464
  %6 = zext i32 %2 to i64, !dbg !10464
  %7 = shl nuw nsw i64 %6, 2, !dbg !10464
  %8 = udiv i64 %5, %7, !dbg !10464
  %9 = trunc i64 %8 to i32, !dbg !10464
  %10 = udiv i32 %9, 100, !dbg !10464
  %11 = shl nuw nsw i32 %10, 4, !dbg !10464
  %12 = mul i32 %10, -100, !dbg !10464
  %13 = add i32 %12, %9, !dbg !10464
  %14 = shl i32 %13, 4, !dbg !10464
  %15 = add i32 %14, 50, !dbg !10464
  %16 = udiv i32 %15, 100, !dbg !10464
  %17 = and i32 %16, 240, !dbg !10464
  %18 = add nuw nsw i32 %17, %11, !dbg !10464
  %19 = and i32 %16, 15, !dbg !10464
  %20 = and i32 %18, 65520, !dbg !10467
  %21 = or i32 %20, %19, !dbg !10467
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10468
  store volatile i32 %21, i32* %22, align 4, !dbg !10469
  ret void, !dbg !10470
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10471 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10473, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.value(metadata i32 %1, metadata !10474, metadata !DIExpression()), !dbg !10475
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10476
  %4 = load volatile i32, i32* %3, align 4, !dbg !10476
  %5 = and i32 %4, -769, !dbg !10476
  %6 = or i32 %5, %1, !dbg !10476
  store volatile i32 %6, i32* %3, align 4, !dbg !10476
  ret void, !dbg !10477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10478 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10480, metadata !DIExpression()), !dbg !10482
  call void @llvm.dbg.value(metadata i32 %1, metadata !10481, metadata !DIExpression()), !dbg !10482
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10483
  %4 = load volatile i32, i32* %3, align 4, !dbg !10483
  %5 = and i32 %4, -4097, !dbg !10483
  %6 = or i32 %5, %1, !dbg !10483
  store volatile i32 %6, i32* %3, align 4, !dbg !10483
  ret void, !dbg !10484
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10485 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10487, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32 %1, metadata !10488, metadata !DIExpression()), !dbg !10489
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10490
  %4 = load volatile i32, i32* %3, align 4, !dbg !10490
  %5 = and i32 %4, -12289, !dbg !10490
  %6 = or i32 %5, %1, !dbg !10490
  store volatile i32 %6, i32* %3, align 4, !dbg !10490
  ret void, !dbg !10491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10492 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10494, metadata !DIExpression()), !dbg !10496
  call void @llvm.dbg.value(metadata i32 %1, metadata !10495, metadata !DIExpression()), !dbg !10496
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10497
  %4 = load volatile i32, i32* %3, align 4, !dbg !10497
  %5 = and i32 %4, -1537, !dbg !10497
  %6 = or i32 %5, %1, !dbg !10497
  store volatile i32 %6, i32* %3, align 4, !dbg !10497
  ret void, !dbg !10498
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10499 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10501, metadata !DIExpression()), !dbg !10502
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10503
  %3 = load volatile i32, i32* %2, align 4, !dbg !10503
  %4 = and i32 %3, 1, !dbg !10503
  ret i32 %4, !dbg !10504
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10505 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10507, metadata !DIExpression()), !dbg !10508
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10509
  %3 = load volatile i32, i32* %2, align 4, !dbg !10509
  %4 = lshr i32 %3, 1, !dbg !10510
  %5 = and i32 %4, 1, !dbg !10510
  ret i32 %5, !dbg !10511
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10512 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10514, metadata !DIExpression()), !dbg !10515
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10516
  %3 = load volatile i32, i32* %2, align 4, !dbg !10516
  %4 = lshr i32 %3, 8, !dbg !10517
  %5 = and i32 %4, 1, !dbg !10517
  ret i32 %5, !dbg !10518
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10519 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10521, metadata !DIExpression()), !dbg !10522
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10523
  store volatile i32 -257, i32* %2, align 4, !dbg !10523
  ret void, !dbg !10524
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10525 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10527, metadata !DIExpression()), !dbg !10529
  %3 = bitcast i32* %2 to i8*, !dbg !10530
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10530
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10528, metadata !DIExpression()), !dbg !10531
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10532
  %5 = load volatile i32, i32* %4, align 4, !dbg !10532
  store volatile i32 %5, i32* %2, align 4, !dbg !10533
  %6 = load volatile i32, i32* %2, align 4, !dbg !10534
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10535
  %8 = load volatile i32, i32* %7, align 4, !dbg !10535
  store volatile i32 %8, i32* %2, align 4, !dbg !10536
  %9 = load volatile i32, i32* %2, align 4, !dbg !10537
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10538
  ret void, !dbg !10538
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10539 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10541, metadata !DIExpression()), !dbg !10543
  %3 = bitcast i32* %2 to i8*, !dbg !10544
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10544
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10542, metadata !DIExpression()), !dbg !10545
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10546
  %5 = load volatile i32, i32* %4, align 4, !dbg !10546
  store volatile i32 %5, i32* %2, align 4, !dbg !10547
  %6 = load volatile i32, i32* %2, align 4, !dbg !10548
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10549
  %8 = load volatile i32, i32* %7, align 4, !dbg !10549
  store volatile i32 %8, i32* %2, align 4, !dbg !10550
  %9 = load volatile i32, i32* %2, align 4, !dbg !10551
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10552
  ret void, !dbg !10552
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10553 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10555, metadata !DIExpression()), !dbg !10557
  %3 = bitcast i32* %2 to i8*, !dbg !10558
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10558
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10556, metadata !DIExpression()), !dbg !10559
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10560
  %5 = load volatile i32, i32* %4, align 4, !dbg !10560
  store volatile i32 %5, i32* %2, align 4, !dbg !10561
  %6 = load volatile i32, i32* %2, align 4, !dbg !10562
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10563
  %8 = load volatile i32, i32* %7, align 4, !dbg !10563
  store volatile i32 %8, i32* %2, align 4, !dbg !10564
  %9 = load volatile i32, i32* %2, align 4, !dbg !10565
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10566
  ret void, !dbg !10566
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1632 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1634, metadata !DIExpression()), !dbg !10567
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #26, !dbg !10568
  tail call void @arch_irq_enable(i32 noundef 37) #26, !dbg !10570
  ret void, !dbg !10570
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10573, metadata !DIExpression()), !dbg !10575
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10576
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10576
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10576
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10574, metadata !DIExpression()), !dbg !10575
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10577
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10577
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10579
  br i1 %7, label %11, label %8, !dbg !10580

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10581
  %10 = load i8*, i8** %9, align 4, !dbg !10581
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #26, !dbg !10583
  br label %11, !dbg !10584

11:                                               ; preds = %8, %1
  ret void, !dbg !10585
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10586 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10588, metadata !DIExpression()), !dbg !10594
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10595
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10595
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10595
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10589, metadata !DIExpression()), !dbg !10594
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10596
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10596
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10596
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10590, metadata !DIExpression()), !dbg !10594
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !10597
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10598
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10598
  %10 = tail call fastcc zeroext i1 @device_is_ready.65(%struct.device* noundef %9) #27, !dbg !10600
  br i1 %10, label %11, label %51, !dbg !10601

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10602
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10603
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10603
  %15 = load i8*, i8** %14, align 4, !dbg !10603
  %16 = tail call fastcc i32 @clock_control_on.66(%struct.device* noundef %12, i8* noundef %15) #27, !dbg !10604
  call void @llvm.dbg.value(metadata i32 %16, metadata !10593, metadata !DIExpression()), !dbg !10594
  %17 = icmp eq i32 %16, 0, !dbg !10605
  br i1 %17, label %18, label %51, !dbg !10607

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10608
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10608
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #27, !dbg !10609
  call void @llvm.dbg.value(metadata i32 %21, metadata !10593, metadata !DIExpression()), !dbg !10594
  %22 = icmp slt i32 %21, 0, !dbg !10610
  br i1 %22, label %51, label %23, !dbg !10612

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10613
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10613
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #27, !dbg !10614
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10615
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #27, !dbg !10616
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10617
  %28 = load i32, i32* %27, align 4, !dbg !10617
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10619

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10591, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i32 4096, metadata !10592, metadata !DIExpression()), !dbg !10594
  br label %31, !dbg !10620

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10591, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i32 0, metadata !10592, metadata !DIExpression()), !dbg !10594
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10623
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10623
  call void @llvm.dbg.value(metadata i32 %33, metadata !10592, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i32 %32, metadata !10591, metadata !DIExpression()), !dbg !10594
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10624
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #27, !dbg !10625
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10626
  %36 = load i8, i8* %35, align 4, !dbg !10626, !range !6264
  %37 = icmp eq i8 %36, 0, !dbg !10626
  br i1 %37, label %39, label %38, !dbg !10628

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !10629
  br label %39, !dbg !10631

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10632
  %41 = load i32, i32* %40, align 4, !dbg !10632
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #27, !dbg !10633
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10634
  %43 = load i8, i8* %42, align 4, !dbg !10634, !range !6264
  %44 = icmp eq i8 %43, 0, !dbg !10634
  br i1 %44, label %47, label %45, !dbg !10636

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10637
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #27, !dbg !10639
  br label %47, !dbg !10640

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10641
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #27, !dbg !10642
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10643
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10643
  tail call void %50(%struct.device* noundef nonnull %0) #26, !dbg !10644
  br label %51, !dbg !10645

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10594
  ret i32 %52, !dbg !10646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10647 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10649, metadata !DIExpression()), !dbg !10653
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10654
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10654
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10654
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10650, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10651, metadata !DIExpression()), !dbg !10653
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10655
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10656
  ret void, !dbg !10657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.65(%struct.device* noundef %0) unnamed_addr #1 !dbg !10658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10662, metadata !DIExpression()), !dbg !10663
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10664, !srcloc !10666
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.67(%struct.device* noundef %0) #27, !dbg !10667
  ret i1 %2, !dbg !10668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.66(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10669 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10671, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata i8* %1, metadata !10672, metadata !DIExpression()), !dbg !10674
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10675
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10675
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10675
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10673, metadata !DIExpression()), !dbg !10674
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10676
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10676
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !10677
  ret i32 %8, !dbg !10678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10679 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10683, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i8 0, metadata !10684, metadata !DIExpression()), !dbg !10687
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10688
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10688
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10686, metadata !DIExpression(DW_OP_deref)), !dbg !10687
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !10689
  call void @llvm.dbg.value(metadata i32 %4, metadata !10685, metadata !DIExpression()), !dbg !10687
  %5 = icmp slt i32 %4, 0, !dbg !10690
  br i1 %5, label %9, label %6, !dbg !10692

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10693
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10686, metadata !DIExpression()), !dbg !10687
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !10694
  br label %9, !dbg !10695

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10687
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10696
  ret i32 %10, !dbg !10696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10697 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10699, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 12, metadata !10700, metadata !DIExpression()), !dbg !10703
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10704

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10006, metadata !DIExpression()) #25, !dbg !10705
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10708, !srcloc !10016
  call void @llvm.dbg.value(metadata i32 %4, metadata !10011, metadata !DIExpression()) #25, !dbg !10705
  %5 = or i32 %4, 12, !dbg !10709
  call void @llvm.dbg.value(metadata i32 %5, metadata !10701, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.value(metadata i32 %5, metadata !10019, metadata !DIExpression()) #25, !dbg !10711
  call void @llvm.dbg.value(metadata i32* %2, metadata !10024, metadata !DIExpression()) #25, !dbg !10711
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10713, !srcloc !10029
  call void @llvm.dbg.value(metadata i32 %6, metadata !10025, metadata !DIExpression()) #25, !dbg !10711
  %7 = icmp eq i32 %6, 0, !dbg !10704
  br i1 %7, label %8, label %3, !dbg !10709, !llvm.loop !10714

8:                                                ; preds = %3
  ret void, !dbg !10715
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10716 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10718, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.value(metadata i32 %1, metadata !10719, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.value(metadata i32 %2, metadata !10720, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.value(metadata i32 0, metadata !10721, metadata !DIExpression()), !dbg !10722
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10723
  %5 = load volatile i32, i32* %4, align 4, !dbg !10723
  %6 = and i32 %5, -5633, !dbg !10723
  %7 = or i32 %2, %1, !dbg !10723
  %8 = or i32 %7, %6, !dbg !10723
  store volatile i32 %8, i32* %4, align 4, !dbg !10723
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10724
  %10 = load volatile i32, i32* %9, align 4, !dbg !10724
  %11 = and i32 %10, -12289, !dbg !10724
  store volatile i32 %11, i32* %9, align 4, !dbg !10724
  ret void, !dbg !10725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10726 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10728, metadata !DIExpression()), !dbg !10729
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10730
  %3 = load volatile i32, i32* %2, align 4, !dbg !10730
  %4 = or i32 %3, 8, !dbg !10730
  store volatile i32 %4, i32* %2, align 4, !dbg !10730
  ret void, !dbg !10731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10732 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10736, metadata !DIExpression()), !dbg !10739
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10737, metadata !DIExpression()), !dbg !10739
  call void @llvm.dbg.value(metadata i32 0, metadata !10738, metadata !DIExpression()), !dbg !10739
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10740
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10740
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10741
  %5 = load i8, i8* %4, align 4, !dbg !10741
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !10742
  ret i32 %6, !dbg !10743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.67(%struct.device* noundef %0) unnamed_addr #1 !dbg !10744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10746, metadata !DIExpression()), !dbg !10747
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10748
  ret i1 %2, !dbg !10749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10750 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10752, metadata !DIExpression()), !dbg !10753
  tail call fastcc void @__NVIC_SetPriority.69() #27, !dbg !10754
  store i32 8399, i32* @last_load, align 4, !dbg !10755
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10756
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10757
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10758
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10759
  %3 = or i32 %2, 7, !dbg !10759
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10759
  ret i32 0, !dbg !10760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.69() unnamed_addr #15 !dbg !10761 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10763, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 1, metadata !10764, metadata !DIExpression()), !dbg !10765
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10766
  ret void, !dbg !10769
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10770 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10772, metadata !DIExpression()), !dbg !10774
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !10775
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10776
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10777
  %5 = add i32 %4, %3, !dbg !10777
  store i32 %5, i32* @cycle_count, align 4, !dbg !10777
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10778
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10779
  %7 = sub i32 %5, %6, !dbg !10782
  %8 = udiv i32 %7, 8400, !dbg !10783
  call void @llvm.dbg.value(metadata i32 %8, metadata !10773, metadata !DIExpression()), !dbg !10774
  %9 = mul nuw i32 %8, 8400, !dbg !10784
  %10 = add i32 %9, %6, !dbg !10785
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10785
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !10786
  tail call void @z_arm_int_exit() #26, !dbg !10787
  ret void, !dbg !10788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10789 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10794
  call void @llvm.dbg.value(metadata i32 %1, metadata !10791, metadata !DIExpression()), !dbg !10795
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10796
  call void @llvm.dbg.value(metadata i32 %2, metadata !10792, metadata !DIExpression()), !dbg !10795
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10797
  call void @llvm.dbg.value(metadata i32 %3, metadata !10793, metadata !DIExpression()), !dbg !10795
  %4 = and i32 %2, 65536, !dbg !10798
  %5 = icmp ne i32 %4, 0, !dbg !10798
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10800
  %8 = load i32, i32* @last_load, align 4, !dbg !10795
  br i1 %7, label %9, label %13, !dbg !10800

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10801
  %11 = add i32 %10, %8, !dbg !10801
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10801
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10803
  br label %13, !dbg !10804

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10805
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10806
  %16 = add i32 %14, %15, !dbg !10807
  ret i32 %16, !dbg !10808
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10813, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.value(metadata i1 %1, metadata !10814, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10826
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10827
  br i1 %4, label %5, label %8, !dbg !10827

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10829
  %7 = and i32 %6, -2, !dbg !10829
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10829
  store i32 -16777216, i32* @last_load, align 4, !dbg !10831
  br label %54, !dbg !10832

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10833
  call void @llvm.dbg.value(metadata i32 %9, metadata !10818, metadata !DIExpression()), !dbg !10826
  br i1 %3, label %18, label %10, !dbg !10834

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10834
  call void @llvm.dbg.value(metadata i32 undef, metadata !10813, metadata !DIExpression()), !dbg !10826
  %12 = icmp slt i32 %11, 1, !dbg !10835
  br i1 %12, label %18, label %13, !dbg !10835

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10835
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10835
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10835
  %17 = add nuw nsw i32 %16, 8399, !dbg !10835
  br label %18, !dbg !10835

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10813, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10836, metadata !DIExpression()) #25, !dbg !10843
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10845, !srcloc !10851
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10845
  call void @llvm.dbg.value(metadata i32 %21, metadata !10848, metadata !DIExpression()) #25, !dbg !10852
  call void @llvm.dbg.value(metadata i32 undef, metadata !10849, metadata !DIExpression()) #25, !dbg !10852
  call void @llvm.dbg.value(metadata i32 %21, metadata !10842, metadata !DIExpression()) #25, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %21, metadata !10819, metadata !DIExpression()), !dbg !10826
  %22 = tail call fastcc i32 @elapsed() #27, !dbg !10853
  call void @llvm.dbg.value(metadata i32 %22, metadata !10824, metadata !DIExpression()), !dbg !10826
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %23, metadata !10816, metadata !DIExpression()), !dbg !10826
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10855
  %25 = add i32 %24, %22, !dbg !10855
  store i32 %25, i32* @cycle_count, align 4, !dbg !10855
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10856
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10857
  %27 = sub i32 %25, %26, !dbg !10858
  call void @llvm.dbg.value(metadata i32 %27, metadata !10825, metadata !DIExpression()), !dbg !10826
  %28 = icmp slt i32 %27, 0, !dbg !10859
  br i1 %28, label %38, label %29, !dbg !10861

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()), !dbg !10826
  %30 = add nuw i32 %19, %27, !dbg !10862
  %31 = urem i32 %30, 8400, !dbg !10864
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10826
  %32 = sub nuw nsw i32 %19, %31, !dbg !10865
  call void @llvm.dbg.value(metadata i32 %32, metadata !10815, metadata !DIExpression()), !dbg !10826
  %33 = icmp ugt i32 %32, 1024, !dbg !10866
  br i1 %33, label %34, label %36, !dbg !10866

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10815, metadata !DIExpression()), !dbg !10826
  %35 = icmp ugt i32 %32, 16766400, !dbg !10867
  br i1 %35, label %38, label %36, !dbg !10869

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10870
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10871
  call void @llvm.dbg.value(metadata i32 %40, metadata !10817, metadata !DIExpression()), !dbg !10826
  %41 = add nsw i32 %39, -1, !dbg !10872
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10873
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10874
  %42 = icmp ult i32 %23, %40, !dbg !10875
  br i1 %42, label %43, label %48, !dbg !10877

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10878
  %45 = add i32 %23, %9, !dbg !10880
  %46 = sub i32 %45, %40, !dbg !10881
  %47 = add i32 %46, %44, !dbg !10878
  br label %52, !dbg !10882

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10883
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10885
  %51 = add i32 %49, %50, !dbg !10885
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10886
  store i32 %53, i32* @cycle_count, align 4, !dbg !10886
  call void @llvm.dbg.value(metadata i32 %21, metadata !10887, metadata !DIExpression()) #25, !dbg !10893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10892, metadata !DIExpression()) #25, !dbg !10893
  call void @llvm.dbg.value(metadata i32 %21, metadata !10895, metadata !DIExpression()) #25, !dbg !10898
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !10900, !srcloc !10901
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10902
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10903 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10836, metadata !DIExpression()) #25, !dbg !10907
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10909, !srcloc !10851
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10909
  call void @llvm.dbg.value(metadata i32 %2, metadata !10848, metadata !DIExpression()) #25, !dbg !10911
  call void @llvm.dbg.value(metadata i32 undef, metadata !10849, metadata !DIExpression()) #25, !dbg !10911
  call void @llvm.dbg.value(metadata i32 %2, metadata !10842, metadata !DIExpression()) #25, !dbg !10907
  call void @llvm.dbg.value(metadata i32 %2, metadata !10905, metadata !DIExpression()), !dbg !10912
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !10913
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10914
  %5 = add i32 %4, %3, !dbg !10915
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10916
  %7 = sub i32 %5, %6, !dbg !10917
  call void @llvm.dbg.value(metadata i32 %7, metadata !10906, metadata !DIExpression()), !dbg !10912
  call void @llvm.dbg.value(metadata i32 %2, metadata !10887, metadata !DIExpression()) #25, !dbg !10918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10892, metadata !DIExpression()) #25, !dbg !10918
  call void @llvm.dbg.value(metadata i32 %2, metadata !10895, metadata !DIExpression()) #25, !dbg !10920
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10922, !srcloc !10901
  %8 = udiv i32 %7, 8400, !dbg !10923
  ret i32 %8, !dbg !10924
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10925 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10836, metadata !DIExpression()) #25, !dbg !10929
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10931, !srcloc !10851
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10931
  call void @llvm.dbg.value(metadata i32 %2, metadata !10848, metadata !DIExpression()) #25, !dbg !10933
  call void @llvm.dbg.value(metadata i32 undef, metadata !10849, metadata !DIExpression()) #25, !dbg !10933
  call void @llvm.dbg.value(metadata i32 %2, metadata !10842, metadata !DIExpression()) #25, !dbg !10929
  call void @llvm.dbg.value(metadata i32 %2, metadata !10927, metadata !DIExpression()), !dbg !10934
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !10935
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10936
  %5 = add i32 %4, %3, !dbg !10937
  call void @llvm.dbg.value(metadata i32 %5, metadata !10928, metadata !DIExpression()), !dbg !10934
  call void @llvm.dbg.value(metadata i32 %2, metadata !10887, metadata !DIExpression()) #25, !dbg !10938
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10892, metadata !DIExpression()) #25, !dbg !10938
  call void @llvm.dbg.value(metadata i32 %2, metadata !10895, metadata !DIExpression()) #25, !dbg !10940
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10942, !srcloc !10901
  ret i32 %5, !dbg !10943
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10944 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10945
  %2 = icmp eq i32 %1, -16777216, !dbg !10947
  br i1 %2, label %3, label %6, !dbg !10948

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10949
  %5 = or i32 %4, 1, !dbg !10949
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10949
  br label %6, !dbg !10951

6:                                                ; preds = %3, %0
  ret void, !dbg !10952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10953 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10954
  %2 = and i32 %1, -2, !dbg !10954
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10954
  ret void, !dbg !10955
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10956 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10982, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i8 %1, metadata !10983, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10984, metadata !DIExpression()), !dbg !10985
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10986
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10986
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10985
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10987
  %8 = load i8, i8* %6, align 4, !dbg !10988
  %9 = zext i8 %8 to i32, !dbg !10989
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10989
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10990
  br i1 %11, label %18, label %24, !dbg !10991

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10985
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10987
  %14 = load i8, i8* %6, align 4, !dbg !10988
  %15 = zext i8 %14 to i32, !dbg !10989
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10989
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10990
  br i1 %17, label %18, label %24, !dbg !10991, !llvm.loop !10992

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10994
  %21 = load i8, i8* %20, align 1, !dbg !10994
  %22 = icmp eq i8 %21, %1, !dbg !10997
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10998
  br i1 %22, label %24, label %12, !dbg !10999

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10985
  ret i32 %25, !dbg !11000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11001 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11012, metadata !DIExpression()), !dbg !11028
  call void @llvm.dbg.value(metadata i8 %1, metadata !11013, metadata !DIExpression()), !dbg !11028
  call void @llvm.dbg.value(metadata i32 %2, metadata !11014, metadata !DIExpression()), !dbg !11028
  call void @llvm.dbg.value(metadata i32 0, metadata !11017, metadata !DIExpression()), !dbg !11028
  call void @llvm.dbg.value(metadata i32 0, metadata !11018, metadata !DIExpression()), !dbg !11028
  call void @llvm.dbg.value(metadata i8 0, metadata !11019, metadata !DIExpression()), !dbg !11029
  %4 = icmp eq i8 %1, 0, !dbg !11030
  br i1 %4, label %35, label %5, !dbg !11031

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11030
  br label %9, !dbg !11031

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11019, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.value(metadata i32 %29, metadata !11017, metadata !DIExpression()), !dbg !11028
  %8 = icmp eq i32 %34, %6, !dbg !11030
  br i1 %8, label %35, label %9, !dbg !11031, !llvm.loop !11032

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11019, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.value(metadata i32 %11, metadata !11017, metadata !DIExpression()), !dbg !11028
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11034
  %13 = load i32, i32* %12, align 4, !dbg !11034
  call void @llvm.dbg.value(metadata i32 %13, metadata !11016, metadata !DIExpression()), !dbg !11028
  %14 = and i32 %13, 31, !dbg !11035
  %15 = icmp ult i32 %14, 16, !dbg !11036
  br i1 %15, label %16, label %20, !dbg !11037

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11038
  %18 = load i32, i32* %17, align 4, !dbg !11038
  %19 = or i32 %18, 32, !dbg !11040
  call void @llvm.dbg.value(metadata i32 %19, metadata !11017, metadata !DIExpression()), !dbg !11028
  br label %28, !dbg !11041

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11042

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11043
  %23 = load i32, i32* %22, align 4, !dbg !11043
  call void @llvm.dbg.value(metadata i32 %23, metadata !11021, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11044
  %24 = lshr i32 %23, 7, !dbg !11045
  %25 = and i32 %24, 16, !dbg !11045
  %26 = or i32 %25, %23, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %26, metadata !11017, metadata !DIExpression()), !dbg !11028
  br label %28, !dbg !11046

27:                                               ; preds = %20
  br label %28, !dbg !11047

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11028
  call void @llvm.dbg.value(metadata i32 %29, metadata !11017, metadata !DIExpression()), !dbg !11028
  %30 = lshr i32 %13, 5, !dbg !11047
  %31 = and i32 %30, 255, !dbg !11047
  call void @llvm.dbg.value(metadata i32 %31, metadata !11015, metadata !DIExpression()), !dbg !11028
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !11048
  call void @llvm.dbg.value(metadata i32 %32, metadata !11018, metadata !DIExpression()), !dbg !11028
  %33 = icmp slt i32 %32, 0, !dbg !11049
  %34 = add nuw nsw i32 %10, 1, !dbg !11051
  call void @llvm.dbg.value(metadata i32 %34, metadata !11019, metadata !DIExpression()), !dbg !11029
  br i1 %33, label %35, label %7, !dbg !11052

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11058, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %1, metadata !11059, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %2, metadata !11060, metadata !DIExpression()), !dbg !11062
  %4 = icmp ugt i32 %0, 175, !dbg !11063
  br i1 %4, label %16, label %5, !dbg !11065

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11066
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11067
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11067
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11061, metadata !DIExpression()), !dbg !11062
  %9 = add nsw i32 %6, -8, !dbg !11068
  %10 = icmp ult i32 %9, 3, !dbg !11068
  br i1 %10, label %16, label %11, !dbg !11070

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.74(%struct.device* noundef %8) #27, !dbg !11071
  br i1 %12, label %13, label %16, !dbg !11072

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11073
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !11074
  br label %16, !dbg !11075

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11062
  ret i32 %17, !dbg !11076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.74(%struct.device* noundef %0) unnamed_addr #1 !dbg !11077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11081, metadata !DIExpression()), !dbg !11082
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11083, !srcloc !11085
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.75(%struct.device* noundef %0) #27, !dbg !11086
  ret i1 %2, !dbg !11087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.75(%struct.device* noundef %0) unnamed_addr #1 !dbg !11088 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11090, metadata !DIExpression()), !dbg !11091
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !11092
  ret i1 %2, !dbg !11093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !11094 {
  ret void, !dbg !11095
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !11096 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11098, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 0, metadata !11099, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 2, metadata !11100, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 0, metadata !11101, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 2, metadata !11102, metadata !DIExpression()), !dbg !11103
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11104
  %2 = and i32 %1, 12, !dbg !11105
  call void @llvm.dbg.value(metadata i32 %2, metadata !11098, metadata !DIExpression()), !dbg !11103
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11106

3:                                                ; preds = %0
  br label %21, !dbg !11107

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11109
  call void @llvm.dbg.value(metadata i32 %5, metadata !11101, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11103
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11110
  %7 = and i32 %6, 63, !dbg !11111
  call void @llvm.dbg.value(metadata i32 %7, metadata !11102, metadata !DIExpression()), !dbg !11103
  %8 = and i32 %5, 4194304, !dbg !11112
  %9 = icmp eq i32 %8, 0, !dbg !11112
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !11114
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11114
  %13 = lshr i32 %12, 6, !dbg !11114
  %14 = and i32 %13, 511, !dbg !11114
  %15 = mul i32 %14, %11, !dbg !11114
  call void @llvm.dbg.value(metadata i32 %15, metadata !11099, metadata !DIExpression()), !dbg !11103
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11115
  %17 = lshr i32 %16, 15, !dbg !11116
  %18 = and i32 %17, 6, !dbg !11116
  %19 = add nuw nsw i32 %18, 2, !dbg !11116
  call void @llvm.dbg.value(metadata i32 %19, metadata !11100, metadata !DIExpression()), !dbg !11103
  %20 = udiv i32 %15, %19, !dbg !11117
  br label %21, !dbg !11118

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11119
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11120
  %24 = lshr i32 %23, 4, !dbg !11121
  %25 = and i32 %24, 15, !dbg !11121
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11122
  %27 = load i8, i8* %26, align 1, !dbg !11122
  %28 = zext i8 %27 to i32, !dbg !11122
  call void @llvm.dbg.value(metadata i32 %28, metadata !11098, metadata !DIExpression()), !dbg !11103
  %29 = lshr i32 %22, %28, !dbg !11123
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11123
  ret void, !dbg !11124
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11125 {
  ret i32 0, !dbg !11130
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11131 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11157, metadata !DIExpression()), !dbg !11168
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11169
  br i1 %3, label %311, label %4, !dbg !11171

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11172
  %6 = load i32, i32* %5, align 4, !dbg !11172
  %7 = and i32 %6, 1, !dbg !11174
  %8 = icmp eq i32 %7, 0, !dbg !11175
  br i1 %8, label %66, label %9, !dbg !11176

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11177
  %11 = and i32 %10, 12, !dbg !11177
  %12 = icmp eq i32 %11, 4, !dbg !11180
  br i1 %12, label %21, label %13, !dbg !11181

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11182
  %15 = and i32 %14, 12, !dbg !11182
  %16 = icmp eq i32 %15, 8, !dbg !11183
  br i1 %16, label %17, label %29, !dbg !11184

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11185
  %19 = and i32 %18, 4194304, !dbg !11186
  %20 = icmp eq i32 %19, 0, !dbg !11187
  br i1 %20, label %29, label %21, !dbg !11188

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11189
  %23 = and i32 %22, 131072, !dbg !11189
  %24 = icmp eq i32 %23, 0, !dbg !11189
  br i1 %24, label %66, label %25, !dbg !11192

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11193
  %27 = load i32, i32* %26, align 4, !dbg !11193
  %28 = icmp eq i32 %27, 0, !dbg !11194
  br i1 %28, label %311, label %66, !dbg !11195

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11196
  %31 = load i32, i32* %30, align 4, !dbg !11196
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11200

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11201
  %34 = or i32 %33, 65536, !dbg !11201
  br label %45, !dbg !11201

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11203
  %37 = or i32 %36, 262144, !dbg !11203
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11203
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11203
  %39 = or i32 %38, 65536, !dbg !11203
  br label %45, !dbg !11203

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11206
  %42 = and i32 %41, -65537, !dbg !11206
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11206
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11206
  %44 = and i32 %43, -262145, !dbg !11206
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11208
  %47 = load i32, i32* %30, align 4, !dbg !11209
  %48 = icmp eq i32 %47, 0, !dbg !11211
  %49 = tail call i32 @HAL_GetTick() #26, !dbg !11212
  call void @llvm.dbg.value(metadata i32 %49, metadata !11158, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i32 %49, metadata !11158, metadata !DIExpression()), !dbg !11168
  br i1 %48, label %58, label %50, !dbg !11213

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11214
  %52 = and i32 %51, 131072, !dbg !11216
  %53 = icmp eq i32 %52, 0, !dbg !11216
  br i1 %53, label %54, label %66, !dbg !11217

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #26, !dbg !11218
  %56 = sub i32 %55, %49, !dbg !11221
  %57 = icmp ugt i32 %56, 100, !dbg !11222
  br i1 %57, label %311, label %50, !dbg !11223, !llvm.loop !11224

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11226
  %60 = and i32 %59, 131072, !dbg !11226
  %61 = icmp eq i32 %60, 0, !dbg !11226
  br i1 %61, label %66, label %62, !dbg !11228

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !11229
  %64 = sub i32 %63, %49, !dbg !11232
  %65 = icmp ugt i32 %64, 100, !dbg !11233
  br i1 %65, label %311, label %58, !dbg !11234, !llvm.loop !11235

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11237
  %68 = and i32 %67, 2, !dbg !11239
  %69 = icmp eq i32 %68, 0, !dbg !11240
  br i1 %69, label %121, label %70, !dbg !11241

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11242
  %72 = and i32 %71, 12, !dbg !11242
  %73 = icmp eq i32 %72, 0, !dbg !11245
  br i1 %73, label %82, label %74, !dbg !11246

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11247
  %76 = and i32 %75, 12, !dbg !11247
  %77 = icmp eq i32 %76, 8, !dbg !11248
  br i1 %77, label %78, label %90, !dbg !11249

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11250
  %80 = and i32 %79, 4194304, !dbg !11251
  %81 = icmp eq i32 %80, 0, !dbg !11252
  br i1 %81, label %82, label %90, !dbg !11253

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11254
  %84 = and i32 %83, 2, !dbg !11254
  %85 = icmp eq i32 %84, 0, !dbg !11254
  br i1 %85, label %114, label %86, !dbg !11257

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11258
  %88 = load i32, i32* %87, align 4, !dbg !11258
  %89 = icmp eq i32 %88, 1, !dbg !11259
  br i1 %89, label %114, label %311, !dbg !11260

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11261
  %92 = load i32, i32* %91, align 4, !dbg !11261
  %93 = icmp eq i32 %92, 0, !dbg !11264
  br i1 %93, label %104, label %94, !dbg !11265

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11266
  %95 = tail call i32 @HAL_GetTick() #26, !dbg !11268
  call void @llvm.dbg.value(metadata i32 %95, metadata !11158, metadata !DIExpression()), !dbg !11168
  br label %96, !dbg !11269

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11270
  %98 = and i32 %97, 2, !dbg !11271
  %99 = icmp eq i32 %98, 0, !dbg !11271
  br i1 %99, label %100, label %114, !dbg !11269

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #26, !dbg !11272
  %102 = sub i32 %101, %95, !dbg !11275
  %103 = icmp ugt i32 %102, 2, !dbg !11276
  br i1 %103, label %311, label %96, !dbg !11277, !llvm.loop !11278

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11280
  %105 = tail call i32 @HAL_GetTick() #26, !dbg !11282
  call void @llvm.dbg.value(metadata i32 %105, metadata !11158, metadata !DIExpression()), !dbg !11168
  br label %106, !dbg !11283

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11284
  %108 = and i32 %107, 2, !dbg !11284
  %109 = icmp eq i32 %108, 0, !dbg !11284
  br i1 %109, label %121, label %110, !dbg !11283

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !11285
  %112 = sub i32 %111, %105, !dbg !11288
  %113 = icmp ugt i32 %112, 2, !dbg !11289
  br i1 %113, label %311, label %106, !dbg !11290, !llvm.loop !11291

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11293
  %116 = and i32 %115, -249, !dbg !11293
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11293
  %118 = load i32, i32* %117, align 4, !dbg !11293
  %119 = shl i32 %118, 3, !dbg !11293
  %120 = or i32 %119, %116, !dbg !11293
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11293
  br label %121, !dbg !11294

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11294
  %123 = and i32 %122, 8, !dbg !11296
  %124 = icmp eq i32 %123, 0, !dbg !11297
  br i1 %124, label %149, label %125, !dbg !11298

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11299
  %127 = load i32, i32* %126, align 4, !dbg !11299
  %128 = icmp eq i32 %127, 0, !dbg !11302
  br i1 %128, label %139, label %129, !dbg !11303

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11304
  %130 = tail call i32 @HAL_GetTick() #26, !dbg !11306
  call void @llvm.dbg.value(metadata i32 %130, metadata !11158, metadata !DIExpression()), !dbg !11168
  br label %131, !dbg !11307

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11308
  %133 = and i32 %132, 2, !dbg !11309
  %134 = icmp eq i32 %133, 0, !dbg !11309
  br i1 %134, label %135, label %149, !dbg !11307

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #26, !dbg !11310
  %137 = sub i32 %136, %130, !dbg !11313
  %138 = icmp ugt i32 %137, 2, !dbg !11314
  br i1 %138, label %311, label %131, !dbg !11315, !llvm.loop !11316

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11318
  %140 = tail call i32 @HAL_GetTick() #26, !dbg !11320
  call void @llvm.dbg.value(metadata i32 %140, metadata !11158, metadata !DIExpression()), !dbg !11168
  br label %141, !dbg !11321

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11322
  %143 = and i32 %142, 2, !dbg !11322
  %144 = icmp eq i32 %143, 0, !dbg !11322
  br i1 %144, label %149, label %145, !dbg !11321

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !11323
  %147 = sub i32 %146, %140, !dbg !11326
  %148 = icmp ugt i32 %147, 2, !dbg !11327
  br i1 %148, label %311, label %141, !dbg !11328, !llvm.loop !11329

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11331
  %151 = and i32 %150, 4, !dbg !11332
  %152 = icmp eq i32 %151, 0, !dbg !11333
  br i1 %152, label %221, label %153, !dbg !11334

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11160, metadata !DIExpression()), !dbg !11335
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11336
  %155 = and i32 %154, 268435456, !dbg !11336
  %156 = icmp eq i32 %155, 0, !dbg !11336
  br i1 %156, label %157, label %164, !dbg !11337

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11338
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11338
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11164, metadata !DIExpression()), !dbg !11338
  store volatile i32 0, i32* %2, align 4, !dbg !11338
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11338
  %160 = or i32 %159, 268435456, !dbg !11338
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11338
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11338
  %162 = and i32 %161, 268435456, !dbg !11338
  store volatile i32 %162, i32* %2, align 4, !dbg !11338
  %163 = load volatile i32, i32* %2, align 4, !dbg !11338
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11339
  call void @llvm.dbg.value(metadata i32 1, metadata !11160, metadata !DIExpression()), !dbg !11335
  br label %164, !dbg !11340

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11160, metadata !DIExpression()), !dbg !11335
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11341
  %166 = and i32 %165, 256, !dbg !11341
  %167 = icmp eq i32 %166, 0, !dbg !11341
  br i1 %167, label %168, label %180, !dbg !11343

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11344
  %170 = or i32 %169, 256, !dbg !11344
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11344
  %171 = tail call i32 @HAL_GetTick() #26, !dbg !11346
  call void @llvm.dbg.value(metadata i32 %171, metadata !11158, metadata !DIExpression()), !dbg !11168
  br label %172, !dbg !11347

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11348
  %174 = and i32 %173, 256, !dbg !11348
  %175 = icmp eq i32 %174, 0, !dbg !11348
  br i1 %175, label %176, label %180, !dbg !11347

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #26, !dbg !11349
  %178 = sub i32 %177, %171, !dbg !11352
  %179 = icmp ugt i32 %178, 2, !dbg !11353
  br i1 %179, label %311, label %172, !dbg !11354, !llvm.loop !11355

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11357
  %182 = load i32, i32* %181, align 4, !dbg !11357
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11360

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11361
  %185 = or i32 %184, 1, !dbg !11361
  br label %196, !dbg !11361

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11363
  %188 = or i32 %187, 4, !dbg !11363
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11363
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11363
  %190 = or i32 %189, 1, !dbg !11363
  br label %196, !dbg !11363

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11366
  %193 = and i32 %192, -2, !dbg !11366
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11366
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11366
  %195 = and i32 %194, -5, !dbg !11366
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11368
  %198 = load i32, i32* %181, align 4, !dbg !11369
  %199 = icmp eq i32 %198, 0, !dbg !11371
  %200 = tail call i32 @HAL_GetTick() #26, !dbg !11372
  call void @llvm.dbg.value(metadata i32 %200, metadata !11158, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i32 %200, metadata !11158, metadata !DIExpression()), !dbg !11168
  br i1 %199, label %209, label %201, !dbg !11373

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11374
  %203 = and i32 %202, 2, !dbg !11376
  %204 = icmp eq i32 %203, 0, !dbg !11376
  br i1 %204, label %205, label %217, !dbg !11377

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !11378
  %207 = sub i32 %206, %200, !dbg !11381
  %208 = icmp ugt i32 %207, 5000, !dbg !11382
  br i1 %208, label %311, label %201, !dbg !11383, !llvm.loop !11384

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11386
  %211 = and i32 %210, 2, !dbg !11386
  %212 = icmp eq i32 %211, 0, !dbg !11386
  br i1 %212, label %217, label %213, !dbg !11388

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #26, !dbg !11389
  %215 = sub i32 %214, %200, !dbg !11392
  %216 = icmp ugt i32 %215, 5000, !dbg !11393
  br i1 %216, label %311, label %209, !dbg !11394, !llvm.loop !11395

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11397

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11398
  %220 = and i32 %219, -268435457, !dbg !11398
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11398
  br label %221, !dbg !11401

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11402
  %223 = load i32, i32* %222, align 4, !dbg !11402
  %224 = icmp eq i32 %223, 0, !dbg !11404
  br i1 %224, label %310, label %225, !dbg !11405

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11406
  %227 = and i32 %226, 12, !dbg !11406
  %228 = icmp eq i32 %227, 8, !dbg !11409
  br i1 %228, label %277, label %229, !dbg !11410

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11411
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11414
  %231 = tail call i32 @HAL_GetTick() #26, !dbg !11414
  call void @llvm.dbg.value(metadata i32 %231, metadata !11158, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i32 %231, metadata !11158, metadata !DIExpression()), !dbg !11168
  br i1 %230, label %232, label %269, !dbg !11415

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11416
  %234 = and i32 %233, 33554432, !dbg !11416
  %235 = icmp eq i32 %234, 0, !dbg !11416
  br i1 %235, label %240, label %236, !dbg !11418

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #26, !dbg !11419
  %238 = sub i32 %237, %231, !dbg !11422
  %239 = icmp ugt i32 %238, 2, !dbg !11423
  br i1 %239, label %311, label %232, !dbg !11424, !llvm.loop !11425

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11427
  %242 = load i32, i32* %241, align 4, !dbg !11427
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11427
  %244 = load i32, i32* %243, align 4, !dbg !11427
  %245 = or i32 %244, %242, !dbg !11427
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11427
  %247 = load i32, i32* %246, align 4, !dbg !11427
  %248 = shl i32 %247, 6, !dbg !11427
  %249 = or i32 %245, %248, !dbg !11427
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11427
  %251 = load i32, i32* %250, align 4, !dbg !11427
  %252 = shl i32 %251, 15, !dbg !11427
  %253 = add i32 %252, -65536, !dbg !11427
  %254 = and i32 %253, -65536, !dbg !11427
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11427
  %256 = load i32, i32* %255, align 4, !dbg !11427
  %257 = shl i32 %256, 24, !dbg !11427
  %258 = or i32 %249, %257, !dbg !11427
  %259 = or i32 %258, %254, !dbg !11427
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11427
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11428
  %260 = tail call i32 @HAL_GetTick() #26, !dbg !11429
  call void @llvm.dbg.value(metadata i32 %260, metadata !11158, metadata !DIExpression()), !dbg !11168
  br label %261, !dbg !11430

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11431
  %263 = and i32 %262, 33554432, !dbg !11432
  %264 = icmp eq i32 %263, 0, !dbg !11432
  br i1 %264, label %265, label %310, !dbg !11430

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #26, !dbg !11433
  %267 = sub i32 %266, %260, !dbg !11436
  %268 = icmp ugt i32 %267, 2, !dbg !11437
  br i1 %268, label %311, label %261, !dbg !11438, !llvm.loop !11439

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11441
  %271 = and i32 %270, 33554432, !dbg !11441
  %272 = icmp eq i32 %271, 0, !dbg !11441
  br i1 %272, label %310, label %273, !dbg !11443

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #26, !dbg !11444
  %275 = sub i32 %274, %231, !dbg !11447
  %276 = icmp ugt i32 %275, 2, !dbg !11448
  br i1 %276, label %311, label %269, !dbg !11449, !llvm.loop !11450

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11452
  br i1 %278, label %311, label %279, !dbg !11455

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11456
  call void @llvm.dbg.value(metadata i32 %280, metadata !11159, metadata !DIExpression()), !dbg !11168
  %281 = and i32 %280, 4194304, !dbg !11458
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11460
  %283 = load i32, i32* %282, align 4, !dbg !11460
  %284 = icmp eq i32 %281, %283, !dbg !11461
  br i1 %284, label %285, label %311, !dbg !11462

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11463
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11464
  %288 = load i32, i32* %287, align 4, !dbg !11464
  %289 = icmp eq i32 %286, %288, !dbg !11465
  br i1 %289, label %290, label %311, !dbg !11466

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11467
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11468
  %293 = load i32, i32* %292, align 4, !dbg !11468
  %294 = shl i32 %293, 6, !dbg !11469
  %295 = icmp eq i32 %291, %294, !dbg !11470
  br i1 %295, label %296, label %311, !dbg !11471

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11472
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11473
  %299 = load i32, i32* %298, align 4, !dbg !11473
  %300 = shl i32 %299, 15, !dbg !11474
  %301 = add i32 %300, -65536, !dbg !11474
  %302 = and i32 %301, -65536, !dbg !11474
  %303 = icmp eq i32 %297, %302, !dbg !11475
  br i1 %303, label %304, label %311, !dbg !11476

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11477
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11478
  %307 = load i32, i32* %306, align 4, !dbg !11478
  %308 = shl i32 %307, 24, !dbg !11479
  %309 = icmp eq i32 %305, %308, !dbg !11480
  br i1 %309, label %310, label %311, !dbg !11481

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11482

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11168
  ret i32 %312, !dbg !11483
}

; Function Attrs: optsize
declare !dbg !11484 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11486 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11499, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.value(metadata i32 %1, metadata !11500, metadata !DIExpression()), !dbg !11502
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11503
  br i1 %3, label %115, label %4, !dbg !11505

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11506
  %6 = and i32 %5, 7, !dbg !11506
  %7 = icmp ult i32 %6, %1, !dbg !11508
  br i1 %7, label %8, label %13, !dbg !11509

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11510
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11510
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11512
  %11 = and i32 %10, 7, !dbg !11512
  %12 = icmp eq i32 %11, %1, !dbg !11514
  br i1 %12, label %13, label %115, !dbg !11515

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11516
  %15 = load i32, i32* %14, align 4, !dbg !11516
  %16 = and i32 %15, 2, !dbg !11518
  %17 = icmp eq i32 %16, 0, !dbg !11519
  br i1 %17, label %39, label %18, !dbg !11520

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11521
  %20 = icmp eq i32 %19, 0, !dbg !11524
  br i1 %20, label %25, label %21, !dbg !11525

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11526
  %23 = or i32 %22, 7168, !dbg !11526
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11526
  %24 = load i32, i32* %14, align 4, !dbg !11528
  br label %25, !dbg !11530

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11528
  %27 = and i32 %26, 8, !dbg !11531
  %28 = icmp eq i32 %27, 0, !dbg !11532
  br i1 %28, label %32, label %29, !dbg !11533

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11534
  %31 = or i32 %30, 57344, !dbg !11534
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11534
  br label %32, !dbg !11536

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11537
  %34 = and i32 %33, -241, !dbg !11537
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11537
  %36 = load i32, i32* %35, align 4, !dbg !11537
  %37 = or i32 %34, %36, !dbg !11537
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11537
  %38 = load i32, i32* %14, align 4, !dbg !11538
  br label %39, !dbg !11540

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11538
  %41 = and i32 %40, 1, !dbg !11541
  %42 = icmp eq i32 %41, 0, !dbg !11542
  br i1 %42, label %73, label %43, !dbg !11543

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11544
  %45 = load i32, i32* %44, align 4, !dbg !11544
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11547

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11548
  %48 = and i32 %47, 131072, !dbg !11551
  %49 = icmp eq i32 %48, 0, !dbg !11551
  br i1 %49, label %115, label %58, !dbg !11552

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11553
  %52 = and i32 %51, 33554432, !dbg !11557
  %53 = icmp eq i32 %52, 0, !dbg !11557
  br i1 %53, label %115, label %58, !dbg !11558

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11559
  %56 = and i32 %55, 2, !dbg !11562
  %57 = icmp eq i32 %56, 0, !dbg !11562
  br i1 %57, label %115, label %58, !dbg !11563

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11564
  %60 = and i32 %59, -4, !dbg !11564
  %61 = or i32 %60, %45, !dbg !11564
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11564
  %62 = tail call i32 @HAL_GetTick() #26, !dbg !11565
  call void @llvm.dbg.value(metadata i32 %62, metadata !11501, metadata !DIExpression()), !dbg !11502
  br label %63, !dbg !11566

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11567
  %65 = and i32 %64, 12, !dbg !11567
  %66 = load i32, i32* %44, align 4, !dbg !11568
  %67 = shl i32 %66, 2, !dbg !11569
  %68 = icmp eq i32 %65, %67, !dbg !11570
  br i1 %68, label %73, label %69, !dbg !11566

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #26, !dbg !11571
  %71 = sub i32 %70, %62, !dbg !11574
  %72 = icmp ugt i32 %71, 5000, !dbg !11575
  br i1 %72, label %115, label %63, !dbg !11576, !llvm.loop !11577

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11579
  %75 = and i32 %74, 7, !dbg !11579
  %76 = icmp ugt i32 %75, %1, !dbg !11581
  br i1 %76, label %77, label %82, !dbg !11582

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11583
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11583
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11585
  %80 = and i32 %79, 7, !dbg !11585
  %81 = icmp eq i32 %80, %1, !dbg !11587
  br i1 %81, label %82, label %115, !dbg !11588

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11589
  %84 = and i32 %83, 4, !dbg !11591
  %85 = icmp eq i32 %84, 0, !dbg !11592
  br i1 %85, label %93, label %86, !dbg !11593

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11594
  %88 = and i32 %87, -7169, !dbg !11594
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11594
  %90 = load i32, i32* %89, align 4, !dbg !11594
  %91 = or i32 %88, %90, !dbg !11594
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11594
  %92 = load i32, i32* %14, align 4, !dbg !11596
  br label %93, !dbg !11598

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11596
  %95 = and i32 %94, 8, !dbg !11599
  %96 = icmp eq i32 %95, 0, !dbg !11600
  br i1 %96, label %104, label %97, !dbg !11601

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11602
  %99 = and i32 %98, -57345, !dbg !11602
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11602
  %101 = load i32, i32* %100, align 4, !dbg !11602
  %102 = shl i32 %101, 3, !dbg !11602
  %103 = or i32 %102, %99, !dbg !11602
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11602
  br label %104, !dbg !11604

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !11605
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11606
  %107 = lshr i32 %106, 4, !dbg !11607
  %108 = and i32 %107, 15, !dbg !11607
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11608
  %110 = load i8, i8* %109, align 1, !dbg !11608
  %111 = zext i8 %110 to i32, !dbg !11608
  %112 = lshr i32 %105, %111, !dbg !11609
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11610
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11611
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #26, !dbg !11612
  br label %115, !dbg !11613

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11502
  ret i32 %116, !dbg !11614
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11615 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11617, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 0, metadata !11618, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 0, metadata !11619, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 0, metadata !11620, metadata !DIExpression()), !dbg !11621
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11622
  %2 = and i32 %1, 12, !dbg !11623
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11624

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11620, metadata !DIExpression()), !dbg !11621
  br label %29, !dbg !11625

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11628
  %6 = and i32 %5, 63, !dbg !11630
  call void @llvm.dbg.value(metadata i32 %6, metadata !11617, metadata !DIExpression()), !dbg !11621
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11631
  %8 = and i32 %7, 4194304, !dbg !11631
  %9 = icmp eq i32 %8, 0, !dbg !11633
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11634
  %11 = lshr i32 %10, 6, !dbg !11634
  %12 = and i32 %11, 511, !dbg !11634
  br i1 %9, label %16, label %13, !dbg !11635

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !11636
  %15 = udiv i32 %14, %6, !dbg !11638
  call void @llvm.dbg.value(metadata i32 %15, metadata !11618, metadata !DIExpression()), !dbg !11621
  br label %22, !dbg !11639

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !11640
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !11642
  %19 = zext i32 %6 to i64, !dbg !11643
  %20 = udiv i64 %18, %19, !dbg !11644
  %21 = trunc i64 %20 to i32, !dbg !11645
  call void @llvm.dbg.value(metadata i32 %21, metadata !11618, metadata !DIExpression()), !dbg !11621
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !11634
  call void @llvm.dbg.value(metadata i32 %23, metadata !11618, metadata !DIExpression()), !dbg !11621
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11646
  %25 = lshr i32 %24, 15, !dbg !11647
  %26 = and i32 %25, 6, !dbg !11647
  %27 = add nuw nsw i32 %26, 2, !dbg !11647
  call void @llvm.dbg.value(metadata i32 %27, metadata !11619, metadata !DIExpression()), !dbg !11621
  %28 = udiv i32 %23, %27, !dbg !11648
  call void @llvm.dbg.value(metadata i32 %28, metadata !11620, metadata !DIExpression()), !dbg !11621
  br label %29, !dbg !11649

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !11650
  call void @llvm.dbg.value(metadata i32 %30, metadata !11620, metadata !DIExpression()), !dbg !11621
  ret i32 %30, !dbg !11651
}

; Function Attrs: optsize
declare !dbg !11652 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11655 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11659, metadata !DIExpression()), !dbg !11679
  call void @llvm.dbg.value(metadata i32 %1, metadata !11660, metadata !DIExpression()), !dbg !11679
  call void @llvm.dbg.value(metadata i32 %2, metadata !11661, metadata !DIExpression()), !dbg !11679
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11680
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11680
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11662, metadata !DIExpression()), !dbg !11681
  %8 = icmp eq i32 %0, 0, !dbg !11682
  br i1 %8, label %9, label %23, !dbg !11683

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11684
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11684
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11672, metadata !DIExpression()), !dbg !11684
  store volatile i32 0, i32* %5, align 4, !dbg !11684
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11684
  %12 = or i32 %11, 1, !dbg !11684
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11684
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11684
  %14 = and i32 %13, 1, !dbg !11684
  store volatile i32 %14, i32* %5, align 4, !dbg !11684
  %15 = load volatile i32, i32* %5, align 4, !dbg !11684
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11685
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11686
  store i32 256, i32* %16, align 4, !dbg !11687
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11688
  store i32 2, i32* %17, align 4, !dbg !11689
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11690
  store i32 3, i32* %18, align 4, !dbg !11691
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11692
  store i32 0, i32* %19, align 4, !dbg !11693
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11694
  store i32 0, i32* %20, align 4, !dbg !11695
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11696
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11697
  %22 = and i32 %21, -123731969, !dbg !11697
  br label %38, !dbg !11698

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11699
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11699
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11676, metadata !DIExpression()), !dbg !11699
  store volatile i32 0, i32* %6, align 4, !dbg !11699
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11699
  %26 = or i32 %25, 4, !dbg !11699
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11699
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11699
  %28 = and i32 %27, 4, !dbg !11699
  store volatile i32 %28, i32* %6, align 4, !dbg !11699
  %29 = load volatile i32, i32* %6, align 4, !dbg !11699
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11700
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11701
  store i32 512, i32* %30, align 4, !dbg !11702
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11703
  store i32 2, i32* %31, align 4, !dbg !11704
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11705
  store i32 3, i32* %32, align 4, !dbg !11706
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11707
  store i32 0, i32* %33, align 4, !dbg !11708
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11709
  store i32 0, i32* %34, align 4, !dbg !11710
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11711
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11712
  %36 = and i32 %35, 134217727, !dbg !11712
  %37 = shl i32 %2, 3, !dbg !11712
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11713
  %42 = or i32 %41, %40, !dbg !11713
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11713
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11714
  ret void, !dbg !11714
}

; Function Attrs: optsize
declare !dbg !11715 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11719 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11720
  ret void, !dbg !11721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11722 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11723
  ret void, !dbg !11724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11725 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11726
  ret i32 %1, !dbg !11727
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11728 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11729
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11730
  %3 = lshr i32 %2, 10, !dbg !11731
  %4 = and i32 %3, 7, !dbg !11731
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11732
  %6 = load i8, i8* %5, align 1, !dbg !11732
  %7 = zext i8 %6 to i32, !dbg !11732
  %8 = lshr i32 %1, %7, !dbg !11733
  ret i32 %8, !dbg !11734
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11735 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11736
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11737
  %3 = lshr i32 %2, 13, !dbg !11738
  %4 = and i32 %3, 7, !dbg !11738
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11739
  %6 = load i8, i8* %5, align 1, !dbg !11739
  %7 = zext i8 %6 to i32, !dbg !11739
  %8 = lshr i32 %1, %7, !dbg !11740
  ret i32 %8, !dbg !11741
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11742 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11746, metadata !DIExpression()), !dbg !11747
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11748
  store i32 15, i32* %2, align 4, !dbg !11749
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11750
  %4 = and i32 %3, 262144, !dbg !11752
  %5 = icmp eq i32 %4, 0, !dbg !11753
  br i1 %5, label %8, label %6, !dbg !11754

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11755
  store i32 327680, i32* %7, align 4, !dbg !11757
  br label %15, !dbg !11758

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11759
  %10 = and i32 %9, 65536, !dbg !11761
  %11 = icmp eq i32 %10, 0, !dbg !11762
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11763
  br i1 %11, label %14, label %13, !dbg !11764

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11765
  br label %15, !dbg !11767

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11768
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11770
  %17 = and i32 %16, 1, !dbg !11772
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11773
  store i32 %17, i32* %18, align 4, !dbg !11775
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11776
  %20 = lshr i32 %19, 3, !dbg !11777
  %21 = and i32 %20, 31, !dbg !11777
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11778
  store i32 %21, i32* %22, align 4, !dbg !11779
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11780
  %24 = and i32 %23, 4, !dbg !11782
  %25 = icmp eq i32 %24, 0, !dbg !11783
  br i1 %25, label %28, label %26, !dbg !11784

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11785
  store i32 5, i32* %27, align 4, !dbg !11787
  br label %35, !dbg !11788

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11789
  %30 = and i32 %29, 1, !dbg !11791
  %31 = icmp eq i32 %30, 0, !dbg !11792
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11793
  br i1 %31, label %34, label %33, !dbg !11794

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11795
  br label %35, !dbg !11797

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11798
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11800
  %37 = and i32 %36, 1, !dbg !11802
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11803
  store i32 %37, i32* %38, align 4, !dbg !11805
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11806
  %40 = and i32 %39, 16777216, !dbg !11808
  %41 = icmp eq i32 %40, 0, !dbg !11809
  %42 = select i1 %41, i32 1, i32 2, !dbg !11810
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11811
  store i32 %42, i32* %43, align 4, !dbg !11813
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11814
  %45 = and i32 %44, 4194304, !dbg !11815
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11816
  store i32 %45, i32* %46, align 4, !dbg !11817
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11818
  %48 = and i32 %47, 63, !dbg !11819
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11820
  store i32 %48, i32* %49, align 4, !dbg !11821
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11822
  %51 = lshr i32 %50, 6, !dbg !11823
  %52 = and i32 %51, 511, !dbg !11823
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11824
  store i32 %52, i32* %53, align 4, !dbg !11825
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11826
  %55 = shl i32 %54, 1, !dbg !11827
  %56 = and i32 %55, 393216, !dbg !11827
  %57 = add nuw nsw i32 %56, 131072, !dbg !11827
  %58 = lshr exact i32 %57, 16, !dbg !11828
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11829
  store i32 %58, i32* %59, align 4, !dbg !11830
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11831
  %61 = lshr i32 %60, 24, !dbg !11832
  %62 = and i32 %61, 15, !dbg !11832
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11833
  store i32 %62, i32* %63, align 4, !dbg !11834
  ret void, !dbg !11835
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11836 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11840, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata i32* %1, metadata !11841, metadata !DIExpression()), !dbg !11842
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11843
  store i32 15, i32* %3, align 4, !dbg !11844
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11845
  %5 = and i32 %4, 3, !dbg !11846
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11847
  store i32 %5, i32* %6, align 4, !dbg !11848
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11849
  %8 = and i32 %7, 240, !dbg !11850
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11851
  store i32 %8, i32* %9, align 4, !dbg !11852
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11853
  %11 = and i32 %10, 7168, !dbg !11854
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11855
  store i32 %11, i32* %12, align 4, !dbg !11856
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11857
  %14 = lshr i32 %13, 3, !dbg !11858
  %15 = and i32 %14, 7168, !dbg !11858
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11859
  store i32 %15, i32* %16, align 4, !dbg !11860
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11861
  %18 = and i32 %17, 7, !dbg !11862
  store i32 %18, i32* %1, align 4, !dbg !11863
  ret void, !dbg !11864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11865 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11866
  %2 = and i32 %1, 128, !dbg !11866
  %3 = icmp eq i32 %2, 0, !dbg !11866
  br i1 %3, label %5, label %4, !dbg !11868

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #27, !dbg !11869
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11871
  br label %5, !dbg !11872

5:                                                ; preds = %4, %0
  ret void, !dbg !11873
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11874 {
  ret void, !dbg !11875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11879, metadata !DIExpression()), !dbg !11880
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !11881
  ret void, !dbg !11882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11886, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.value(metadata i32 1000, metadata !11887, metadata !DIExpression()), !dbg !11888
  %2 = udiv i32 %0, 1000, !dbg !11889
  %3 = add nsw i32 %2, -1, !dbg !11890
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11891
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11892
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11893
  ret void, !dbg !11894
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11895 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11897, metadata !DIExpression()), !dbg !11899
  %3 = bitcast i32* %2 to i8*, !dbg !11900
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11900
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11898, metadata !DIExpression()), !dbg !11901
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11902
  store volatile i32 %4, i32* %2, align 4, !dbg !11901
  %5 = load volatile i32, i32* %2, align 4, !dbg !11903
  %6 = icmp eq i32 %0, -1, !dbg !11904
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11897, metadata !DIExpression()), !dbg !11899
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11899
  call void @llvm.dbg.value(metadata i32 %8, metadata !11897, metadata !DIExpression()), !dbg !11899
  br label %9, !dbg !11906

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11897, metadata !DIExpression()), !dbg !11899
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11907
  call void @llvm.dbg.value(metadata i32 undef, metadata !11897, metadata !DIExpression()), !dbg !11899
  %12 = shl i32 %11, 15, !dbg !11899
  %13 = ashr i32 %12, 31, !dbg !11899
  %14 = add i32 %13, %10, !dbg !11899
  call void @llvm.dbg.value(metadata i32 %14, metadata !11897, metadata !DIExpression()), !dbg !11899
  %15 = icmp eq i32 %14, 0, !dbg !11906
  br i1 %15, label %16, label %9, !dbg !11906

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11910
  ret void, !dbg !11910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11913, metadata !DIExpression()), !dbg !11914
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11915
  ret void, !dbg !11916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11922, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i32 0, metadata !11925, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i32 0, metadata !11926, metadata !DIExpression()), !dbg !11927
  %2 = icmp eq i32 %0, 0, !dbg !11928
  br i1 %2, label %50, label %3, !dbg !11930

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !11931
  %5 = icmp eq i32 %4, 49152, !dbg !11934
  br i1 %5, label %6, label %15, !dbg !11935

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11925, metadata !DIExpression()), !dbg !11927
  %7 = add i32 %0, -64000001, !dbg !11936
  %8 = icmp ult i32 %7, 26000000, !dbg !11936
  br i1 %8, label %15, label %9, !dbg !11936

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11939
  %11 = select i1 %10, i32 0, i32 3, !dbg !11941
  call void @llvm.dbg.value(metadata i32 %11, metadata !11925, metadata !DIExpression()), !dbg !11927
  %12 = add i32 %0, -30000001, !dbg !11942
  %13 = icmp ult i32 %12, 60000000, !dbg !11942
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11942
  call void @llvm.dbg.value(metadata i32 %14, metadata !11925, metadata !DIExpression()), !dbg !11927
  br label %15, !dbg !11942

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11927
  call void @llvm.dbg.value(metadata i32 %16, metadata !11925, metadata !DIExpression()), !dbg !11927
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !11945
  %18 = icmp eq i32 %17, 32768, !dbg !11947
  br i1 %18, label %19, label %27, !dbg !11948

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11949
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11952
  br i1 %22, label %27, label %23, !dbg !11952

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11953
  %25 = and i1 %24, %21, !dbg !11956
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11956
  call void @llvm.dbg.value(metadata i32 %26, metadata !11925, metadata !DIExpression()), !dbg !11927
  br label %27, !dbg !11956

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11957
  call void @llvm.dbg.value(metadata i32 %28, metadata !11925, metadata !DIExpression()), !dbg !11927
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !11958
  %30 = icmp eq i32 %29, 16384, !dbg !11960
  br i1 %30, label %31, label %39, !dbg !11961

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11962
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11965
  br i1 %34, label %39, label %35, !dbg !11965

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11966
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11969
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %38, metadata !11925, metadata !DIExpression()), !dbg !11927
  br label %39, !dbg !11969

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11957
  call void @llvm.dbg.value(metadata i32 %40, metadata !11925, metadata !DIExpression()), !dbg !11927
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #27, !dbg !11970
  call void @llvm.dbg.value(metadata i32 2, metadata !11923, metadata !DIExpression()), !dbg !11927
  br label %41, !dbg !11971

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11957
  call void @llvm.dbg.value(metadata i32 %42, metadata !11923, metadata !DIExpression()), !dbg !11927
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !11972
  call void @llvm.dbg.value(metadata i32 %43, metadata !11924, metadata !DIExpression()), !dbg !11927
  %44 = add nsw i32 %42, -1, !dbg !11974
  call void @llvm.dbg.value(metadata i32 %44, metadata !11923, metadata !DIExpression()), !dbg !11927
  %45 = icmp ne i32 %43, %40, !dbg !11975
  %46 = icmp ne i32 %44, 0, !dbg !11976
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11976
  br i1 %47, label %41, label %48, !dbg !11977, !llvm.loop !11978

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11980
  call void @llvm.dbg.value(metadata i32 %51, metadata !11926, metadata !DIExpression()), !dbg !11927
  ret i32 %51, !dbg !11981
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11982 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11984
  %2 = and i32 %1, 49152, !dbg !11984
  ret i32 %2, !dbg !11985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11988, metadata !DIExpression()), !dbg !11989
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11990
  %3 = and i32 %2, -8, !dbg !11990
  %4 = or i32 %3, %0, !dbg !11990
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11990
  ret void, !dbg !11991
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11992 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11993
  %2 = and i32 %1, 7, !dbg !11993
  ret i32 %2, !dbg !11994
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11995 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12013, metadata !DIExpression()), !dbg !12017
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12014, metadata !DIExpression()), !dbg !12017
  call void @llvm.dbg.value(metadata i32 0, metadata !12015, metadata !DIExpression()), !dbg !12017
  call void @llvm.dbg.value(metadata i32 0, metadata !12016, metadata !DIExpression()), !dbg !12017
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12018
  %4 = icmp eq i32 %3, 0, !dbg !12020
  br i1 %4, label %5, label %21, !dbg !12021

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !12022
  call void @llvm.dbg.value(metadata i32 %6, metadata !12016, metadata !DIExpression()), !dbg !12017
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.84() #27, !dbg !12024
  %8 = icmp eq i32 %7, 1, !dbg !12026
  br i1 %8, label %13, label %9, !dbg !12027

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.85() #27, !dbg !12028
  br label %10, !dbg !12030

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.84() #27, !dbg !12031
  %12 = icmp eq i32 %11, 1, !dbg !12032
  br i1 %12, label %13, label %10, !dbg !12030, !llvm.loop !12033

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12035
  %15 = load i32, i32* %14, align 4, !dbg !12035
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12036
  %17 = load i32, i32* %16, align 4, !dbg !12036
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12037
  %19 = load i32, i32* %18, align 4, !dbg !12037
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.86(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !12038
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %20, metadata !12015, metadata !DIExpression()), !dbg !12017
  br label %21, !dbg !12040

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12041
  call void @llvm.dbg.value(metadata i32 %22, metadata !12015, metadata !DIExpression()), !dbg !12017
  ret i32 %22, !dbg !12042
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12043 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12047, metadata !DIExpression()), !dbg !12048
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.88() #27, !dbg !12049
  %2 = icmp ne i32 %1, 0, !dbg !12051
  call void @llvm.dbg.value(metadata i1 %2, metadata !12047, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12048
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !12052
  %4 = icmp ne i32 %3, 0, !dbg !12054
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12055
  %6 = zext i1 %5 to i32, !dbg !12055
  call void @llvm.dbg.value(metadata i32 %6, metadata !12047, metadata !DIExpression()), !dbg !12048
  ret i32 %6, !dbg !12056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12061, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12062, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.value(metadata i32 0, metadata !12063, metadata !DIExpression()), !dbg !12064
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12065
  %4 = load i32, i32* %3, align 4, !dbg !12065
  %5 = and i32 %4, 63, !dbg !12066
  %6 = udiv i32 %0, %5, !dbg !12067
  call void @llvm.dbg.value(metadata i32 %6, metadata !12063, metadata !DIExpression()), !dbg !12064
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12068
  %8 = load i32, i32* %7, align 4, !dbg !12068
  %9 = and i32 %8, 511, !dbg !12069
  %10 = mul i32 %9, %6, !dbg !12070
  call void @llvm.dbg.value(metadata i32 %10, metadata !12063, metadata !DIExpression()), !dbg !12064
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12071
  %12 = load i32, i32* %11, align 4, !dbg !12071
  %13 = lshr i32 %12, 15, !dbg !12072
  %14 = and i32 %13, 131070, !dbg !12072
  %15 = add nuw nsw i32 %14, 2, !dbg !12072
  %16 = udiv i32 %10, %15, !dbg !12073
  call void @llvm.dbg.value(metadata i32 %16, metadata !12063, metadata !DIExpression()), !dbg !12064
  ret i32 %16, !dbg !12074
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.84() unnamed_addr #16 !dbg !12075 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12076
  %2 = lshr i32 %1, 1, !dbg !12077
  %3 = and i32 %2, 1, !dbg !12077
  ret i32 %3, !dbg !12078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.85() unnamed_addr #15 !dbg !12079 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12080
  %2 = or i32 %1, 1, !dbg !12080
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12080
  ret void, !dbg !12081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.86(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12084, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.value(metadata i32 %1, metadata !12085, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.value(metadata i32 %2, metadata !12086, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.value(metadata i32 %3, metadata !12087, metadata !DIExpression()), !dbg !12088
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12089
  %6 = and i32 %5, -4227072, !dbg !12089
  %7 = or i32 %1, %0, !dbg !12089
  %8 = shl i32 %2, 6, !dbg !12089
  %9 = or i32 %7, %8, !dbg !12089
  %10 = or i32 %9, %6, !dbg !12089
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12089
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12090
  %12 = and i32 %11, -196609, !dbg !12090
  %13 = or i32 %12, %3, !dbg !12090
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12090
  ret void, !dbg !12091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12096, metadata !DIExpression()), !dbg !12100
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12097, metadata !DIExpression()), !dbg !12100
  call void @llvm.dbg.value(metadata i32 0, metadata !12098, metadata !DIExpression()), !dbg !12100
  call void @llvm.dbg.value(metadata i32 0, metadata !12099, metadata !DIExpression()), !dbg !12100
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12101
  %4 = load i32, i32* %3, align 4, !dbg !12101
  %5 = lshr i32 %4, 4, !dbg !12101
  %6 = and i32 %5, 15, !dbg !12101
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12101
  %8 = load i8, i8* %7, align 1, !dbg !12101
  %9 = zext i8 %8 to i32, !dbg !12101
  %10 = lshr i32 %0, %9, !dbg !12101
  call void @llvm.dbg.value(metadata i32 %10, metadata !12099, metadata !DIExpression()), !dbg !12100
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12102
  %12 = icmp ult i32 %11, %10, !dbg !12104
  br i1 %12, label %13, label %16, !dbg !12105

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12106
  call void @llvm.dbg.value(metadata i32 %14, metadata !12098, metadata !DIExpression()), !dbg !12100
  %15 = icmp eq i32 %14, 0, !dbg !12108
  br i1 %15, label %16, label %30, !dbg !12110

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.87() #27, !dbg !12111
  br label %17, !dbg !12113

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.88() #27, !dbg !12114
  %19 = icmp eq i32 %18, 1, !dbg !12115
  br i1 %19, label %20, label %17, !dbg !12113, !llvm.loop !12116

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12118
  tail call fastcc void @LL_RCC_SetAHBPrescaler.89(i32 noundef %21) #27, !dbg !12119
  tail call fastcc void @LL_RCC_SetSysClkSource.90() #27, !dbg !12120
  br label %22, !dbg !12121

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.91() #27, !dbg !12122
  %24 = icmp eq i32 %23, 8, !dbg !12123
  br i1 %24, label %25, label %22, !dbg !12121, !llvm.loop !12124

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12126
  %27 = load i32, i32* %26, align 4, !dbg !12126
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.92(i32 noundef %27) #27, !dbg !12127
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12128
  %29 = load i32, i32* %28, align 4, !dbg !12128
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.93(i32 noundef %29) #27, !dbg !12129
  br label %30, !dbg !12130

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12131
  %33 = icmp ugt i32 %32, %10, !dbg !12133
  br i1 %33, label %34, label %36, !dbg !12134

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12135
  call void @llvm.dbg.value(metadata i32 %35, metadata !12098, metadata !DIExpression()), !dbg !12100
  br label %36, !dbg !12137

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12100
  call void @llvm.dbg.value(metadata i32 %37, metadata !12098, metadata !DIExpression()), !dbg !12100
  %38 = icmp eq i32 %37, 0, !dbg !12138
  br i1 %38, label %39, label %40, !dbg !12140

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !12141
  br label %40, !dbg !12143

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.87() unnamed_addr #15 !dbg !12145 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12146
  %2 = or i32 %1, 16777216, !dbg !12146
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12146
  ret void, !dbg !12147
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.88() unnamed_addr #16 !dbg !12148 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12149
  %2 = lshr i32 %1, 25, !dbg !12150
  %3 = and i32 %2, 1, !dbg !12150
  ret i32 %3, !dbg !12151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.89(i32 noundef %0) unnamed_addr #15 !dbg !12152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12154, metadata !DIExpression()), !dbg !12155
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12156
  %3 = and i32 %2, -241, !dbg !12156
  %4 = or i32 %3, %0, !dbg !12156
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12156
  ret void, !dbg !12157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.90() unnamed_addr #15 !dbg !12158 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12160, metadata !DIExpression()), !dbg !12161
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12162
  %2 = and i32 %1, -4, !dbg !12162
  %3 = or i32 %2, 2, !dbg !12162
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12162
  ret void, !dbg !12163
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.91() unnamed_addr #16 !dbg !12164 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12165
  %2 = and i32 %1, 12, !dbg !12165
  ret i32 %2, !dbg !12166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.92(i32 noundef %0) unnamed_addr #15 !dbg !12167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12169, metadata !DIExpression()), !dbg !12170
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12171
  %3 = and i32 %2, -7169, !dbg !12171
  %4 = or i32 %3, %0, !dbg !12171
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12171
  ret void, !dbg !12172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.93(i32 noundef %0) unnamed_addr #15 !dbg !12173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12175, metadata !DIExpression()), !dbg !12176
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12177
  %3 = and i32 %2, -57345, !dbg !12177
  %4 = or i32 %3, %0, !dbg !12177
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12177
  ret void, !dbg !12178
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !12179 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12180
  %2 = lshr i32 %1, 27, !dbg !12181
  %3 = and i32 %2, 1, !dbg !12181
  ret i32 %3, !dbg !12182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12187, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.value(metadata i32 %1, metadata !12188, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12189, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12190, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.value(metadata i32 0, metadata !12191, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.value(metadata i32 0, metadata !12192, metadata !DIExpression()), !dbg !12193
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12194
  %6 = icmp eq i32 %5, 0, !dbg !12196
  br i1 %6, label %7, label %27, !dbg !12197

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !12198
  call void @llvm.dbg.value(metadata i32 %8, metadata !12192, metadata !DIExpression()), !dbg !12193
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !12200
  %10 = icmp eq i32 %9, 1, !dbg !12202
  br i1 %10, label %19, label %11, !dbg !12203

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12204
  br i1 %12, label %13, label %14, !dbg !12207

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !12208
  br label %15, !dbg !12210

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !12211
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !12213
  br label %16, !dbg !12214

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !12215
  %18 = icmp eq i32 %17, 1, !dbg !12216
  br i1 %18, label %19, label %16, !dbg !12214, !llvm.loop !12217

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12219
  %21 = load i32, i32* %20, align 4, !dbg !12219
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12220
  %23 = load i32, i32* %22, align 4, !dbg !12220
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12221
  %25 = load i32, i32* %24, align 4, !dbg !12221
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.86(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !12222
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !12223
  call void @llvm.dbg.value(metadata i32 %26, metadata !12191, metadata !DIExpression()), !dbg !12193
  br label %27, !dbg !12224

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12225
  call void @llvm.dbg.value(metadata i32 %28, metadata !12191, metadata !DIExpression()), !dbg !12193
  ret i32 %28, !dbg !12226
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !12227 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12228
  %2 = lshr i32 %1, 17, !dbg !12229
  %3 = and i32 %2, 1, !dbg !12229
  ret i32 %3, !dbg !12230
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12231 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12232
  %2 = or i32 %1, 262144, !dbg !12232
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12232
  ret void, !dbg !12233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !12234 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12235
  %2 = and i32 %1, -262145, !dbg !12235
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12235
  ret void, !dbg !12236
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !12237 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12238
  %2 = or i32 %1, 65536, !dbg !12238
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12238
  ret void, !dbg !12239
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !12240 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12243, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i32 undef, metadata !12243, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i32 undef, metadata !12243, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12259
  ret void, !dbg !12260
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12261 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12265, metadata !DIExpression()), !dbg !12267
  %2 = icmp eq i8* %0, null, !dbg !12268
  br i1 %2, label %29, label %3, !dbg !12270

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12271
  %5 = icmp eq i8 %4, 0, !dbg !12272
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12273
  br i1 %6, label %29, label %8, !dbg !12273

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12266, metadata !DIExpression()), !dbg !12267
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12274

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12266, metadata !DIExpression()), !dbg !12267
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !12276
  br i1 %10, label %11, label %15, !dbg !12281

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12282
  %13 = load i8*, i8** %12, align 4, !dbg !12282
  %14 = icmp eq i8* %13, %0, !dbg !12283
  br i1 %14, label %29, label %15, !dbg !12284

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12285
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12266, metadata !DIExpression()), !dbg !12267
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12286
  br i1 %17, label %7, label %8, !dbg !12287, !llvm.loop !12288

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12266, metadata !DIExpression()), !dbg !12267
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !12290
  br i1 %20, label %21, label %26, !dbg !12294

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12295
  %23 = load i8*, i8** %22, align 4, !dbg !12295
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !12296
  %25 = icmp eq i32 %24, 0, !dbg !12297
  br i1 %25, label %29, label %26, !dbg !12298

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12299
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12266, metadata !DIExpression()), !dbg !12267
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12300
  br i1 %28, label %29, label %18, !dbg !12274, !llvm.loop !12301

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12267
  ret %struct.device* %30, !dbg !12303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !12304 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12308, metadata !DIExpression()), !dbg !12309
  %2 = icmp eq %struct.device* %0, null, !dbg !12310
  br i1 %2, label %14, label %3, !dbg !12312

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12313
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12313
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12314
  %7 = load i8, i8* %6, align 1, !dbg !12314
  %8 = and i8 %7, 1, !dbg !12314
  %9 = icmp eq i8 %8, 0, !dbg !12314
  br i1 %9, label %14, label %10, !dbg !12315

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12316
  %12 = load i8, i8* %11, align 1, !dbg !12316
  %13 = icmp eq i8 %12, 0, !dbg !12317
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12309
  ret i1 %15, !dbg !12318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !12319 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12324, metadata !DIExpression()), !dbg !12325
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12326
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12327
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12328 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12336, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12337, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i8* %2, metadata !12338, metadata !DIExpression()), !dbg !12341
  %5 = bitcast i32* %4 to i8*, !dbg !12342
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12342
  call void @llvm.dbg.value(metadata i32 0, metadata !12339, metadata !DIExpression()), !dbg !12341
  store i32 0, i32* %4, align 4, !dbg !12343
  call void @llvm.dbg.value(metadata i32* %4, metadata !12339, metadata !DIExpression(DW_OP_deref)), !dbg !12341
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12344
  call void @llvm.dbg.value(metadata i16* %6, metadata !12340, metadata !DIExpression()), !dbg !12341
  %7 = load i32, i32* %4, align 4, !dbg !12345
  call void @llvm.dbg.value(metadata i32 %7, metadata !12339, metadata !DIExpression()), !dbg !12341
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12346
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12347
  ret i32 %8, !dbg !12348
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12349 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12353, metadata !DIExpression()), !dbg !12359
  call void @llvm.dbg.value(metadata i32* %1, metadata !12354, metadata !DIExpression()), !dbg !12359
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12360
  %4 = load i16*, i16** %3, align 4, !dbg !12360
  call void @llvm.dbg.value(metadata i16* %4, metadata !12355, metadata !DIExpression()), !dbg !12359
  %5 = icmp eq i16* %4, null, !dbg !12361
  br i1 %5, label %14, label %6, !dbg !12362

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12363
  call void @llvm.dbg.value(metadata i32 %7, metadata !12356, metadata !DIExpression()), !dbg !12363
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12364
  %9 = load i16, i16* %8, align 2, !dbg !12364
  %10 = add i16 %9, -32767, !dbg !12365
  %11 = icmp ult i16 %10, 2, !dbg !12365
  %12 = add i32 %7, 1, !dbg !12366
  call void @llvm.dbg.value(metadata i32 %12, metadata !12356, metadata !DIExpression()), !dbg !12363
  br i1 %11, label %13, label %6, !dbg !12365, !llvm.loop !12368

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12371
  br label %14, !dbg !12372

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12374 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12378, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.value(metadata i32 %1, metadata !12379, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12380, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.value(metadata i8* %3, metadata !12381, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.value(metadata i32 0, metadata !12382, metadata !DIExpression()), !dbg !12390
  %5 = icmp eq i32 %1, 0, !dbg !12391
  br i1 %5, label %16, label %8, !dbg !12392

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12382, metadata !DIExpression()), !dbg !12390
  %7 = icmp eq i32 %15, %1, !dbg !12391
  br i1 %7, label %16, label %8, !dbg !12392, !llvm.loop !12393

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12382, metadata !DIExpression()), !dbg !12390
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12395
  %11 = load i16, i16* %10, align 2, !dbg !12395
  call void @llvm.dbg.value(metadata i16 %11, metadata !12384, metadata !DIExpression()), !dbg !12396
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !12397
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12387, metadata !DIExpression()), !dbg !12396
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !12398
  call void @llvm.dbg.value(metadata i32 %13, metadata !12388, metadata !DIExpression()), !dbg !12396
  %14 = icmp slt i32 %13, 0, !dbg !12399
  %15 = add nuw i32 %9, 1, !dbg !12401
  call void @llvm.dbg.value(metadata i32 %15, metadata !12382, metadata !DIExpression()), !dbg !12390
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !12403 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12407, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12408, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12409, metadata !DIExpression()), !dbg !12410
  %2 = sext i16 %0 to i32, !dbg !12411
  %3 = icmp slt i16 %0, 1, !dbg !12413
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12414
  %6 = add nsw i32 %2, -1, !dbg !12414
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12414
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12414
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12408, metadata !DIExpression()), !dbg !12410
  ret %struct.device* %8, !dbg !12415
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12416 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12418, metadata !DIExpression()), !dbg !12423
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12419, metadata !DIExpression()), !dbg !12423
  call void @llvm.dbg.value(metadata i8* %2, metadata !12420, metadata !DIExpression()), !dbg !12423
  %5 = bitcast i32* %4 to i8*, !dbg !12424
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12424
  call void @llvm.dbg.value(metadata i32 0, metadata !12421, metadata !DIExpression()), !dbg !12423
  store i32 0, i32* %4, align 4, !dbg !12425
  call void @llvm.dbg.value(metadata i32* %4, metadata !12421, metadata !DIExpression(DW_OP_deref)), !dbg !12423
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12426
  call void @llvm.dbg.value(metadata i16* %6, metadata !12422, metadata !DIExpression()), !dbg !12423
  %7 = load i32, i32* %4, align 4, !dbg !12427
  call void @llvm.dbg.value(metadata i32 %7, metadata !12421, metadata !DIExpression()), !dbg !12423
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12428
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12429
  ret i32 %8, !dbg !12430
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12431 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12433, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32* %1, metadata !12434, metadata !DIExpression()), !dbg !12438
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12439
  %4 = load i16*, i16** %3, align 4, !dbg !12439
  call void @llvm.dbg.value(metadata i16* %4, metadata !12435, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 0, metadata !12436, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 0, metadata !12437, metadata !DIExpression()), !dbg !12438
  %5 = icmp eq i16* %4, null, !dbg !12440
  br i1 %5, label %22, label %6, !dbg !12442

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12436, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i16* %8, metadata !12435, metadata !DIExpression()), !dbg !12438
  %9 = load i16, i16* %8, align 2, !dbg !12443
  %10 = icmp eq i16 %9, -32768, !dbg !12447
  call void @llvm.dbg.value(metadata i32 undef, metadata !12436, metadata !DIExpression()), !dbg !12438
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12448
  call void @llvm.dbg.value(metadata i16* %11, metadata !12435, metadata !DIExpression()), !dbg !12438
  %12 = zext i1 %10 to i32, !dbg !12449
  %13 = add i32 %7, %12, !dbg !12449
  call void @llvm.dbg.value(metadata i32 %13, metadata !12436, metadata !DIExpression()), !dbg !12438
  %14 = icmp eq i32 %13, 2, !dbg !12450
  br i1 %14, label %15, label %6, !dbg !12451

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12438
  call void @llvm.dbg.value(metadata i32 %16, metadata !12437, metadata !DIExpression()), !dbg !12438
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12452
  %18 = load i16, i16* %17, align 2, !dbg !12452
  %19 = icmp eq i16 %18, 32767, !dbg !12453
  %20 = add i32 %16, 1, !dbg !12454
  call void @llvm.dbg.value(metadata i32 %20, metadata !12437, metadata !DIExpression()), !dbg !12438
  br i1 %19, label %21, label %15, !dbg !12456, !llvm.loop !12457

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12459
  br label %22, !dbg !12460

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12461
  call void @llvm.dbg.value(metadata i16* %23, metadata !12435, metadata !DIExpression()), !dbg !12438
  ret i16* %23, !dbg !12462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12463 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12466
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12467
  ret i32* %2, !dbg !12468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12469 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12617, metadata !DIExpression()), !dbg !12620
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12618, metadata !DIExpression()), !dbg !12620
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12619, metadata !DIExpression()), !dbg !12620
  ret void, !dbg !12621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12626, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.value(metadata i32 %1, metadata !12627, metadata !DIExpression()), !dbg !12628
  ret void, !dbg !12629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12630 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12634, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.value(metadata i32 %1, metadata !12635, metadata !DIExpression()), !dbg !12636
  ret void, !dbg !12637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12642, metadata !DIExpression()), !dbg !12644
  call void @llvm.dbg.value(metadata i8* %1, metadata !12643, metadata !DIExpression()), !dbg !12644
  ret i32 -134, !dbg !12645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12650, metadata !DIExpression()), !dbg !12652
  call void @llvm.dbg.value(metadata i8* %1, metadata !12651, metadata !DIExpression()), !dbg !12652
  ret i32 -134, !dbg !12653
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12654 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12657, metadata !DIExpression()), !dbg !12658
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12659, !srcloc !12665
  call void @llvm.dbg.value(metadata i32 undef, metadata !12662, metadata !DIExpression()) #25, !dbg !12666
  call void @llvm.dbg.value(metadata i32 undef, metadata !12663, metadata !DIExpression()) #25, !dbg !12666
  br label %3, !dbg !12667

3:                                                ; preds = %3, %1
  br label %3, !dbg !12668, !llvm.loop !12671
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12678, metadata !DIExpression()), !dbg !12680
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12679, metadata !DIExpression()), !dbg !12680
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12681
  unreachable, !dbg !12681
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12684, metadata !DIExpression()), !dbg !12685
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12686
  unreachable, !dbg !12686
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12689, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12690, metadata !DIExpression()), !dbg !12693
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12694, !srcloc !12665
  call void @llvm.dbg.value(metadata i32 undef, metadata !12662, metadata !DIExpression()) #25, !dbg !12696
  call void @llvm.dbg.value(metadata i32 undef, metadata !12663, metadata !DIExpression()) #25, !dbg !12696
  call void @llvm.dbg.value(metadata i32 undef, metadata !12691, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12692, metadata !DIExpression()), !dbg !12693
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12697
  br i1 %4, label %6, label %5, !dbg !12699

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #27, !dbg !12700
  br label %7, !dbg !12701

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #27, !dbg !12700
  br label %7, !dbg !12704

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12694
  call void @llvm.dbg.value(metadata i32 %8, metadata !12662, metadata !DIExpression()) #25, !dbg !12696
  call void @llvm.dbg.value(metadata i32 %8, metadata !12691, metadata !DIExpression()), !dbg !12693
  %9 = tail call fastcc %struct.k_thread* @k_current_get.100() #28, !dbg !12706
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12692, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata i32 undef, metadata !12707, metadata !DIExpression()) #25, !dbg !12710
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !12712, !srcloc !12713
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %9) #27, !dbg !12714
  ret void, !dbg !12717
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.100() unnamed_addr #9 !dbg !12718 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.102() #28, !dbg !12722
  ret %struct.k_thread* %1, !dbg !12723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12724 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12728, metadata !DIExpression()), !dbg !12729
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12730, !srcloc !12732
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !12733
  ret void, !dbg !12734
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.102() unnamed_addr #9 !dbg !12735 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12736, !srcloc !12738
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !12739
  ret %struct.k_thread* %1, !dbg !12740
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12741 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12745, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.value(metadata i32 %1, metadata !12746, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.value(metadata i32 %2, metadata !12747, metadata !DIExpression()), !dbg !12748
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !12749
  ret void, !dbg !12750
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12751 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12755, metadata !DIExpression()), !dbg !12758
  call void @llvm.dbg.value(metadata i8* %1, metadata !12756, metadata !DIExpression()), !dbg !12758
  call void @llvm.dbg.value(metadata i32 %2, metadata !12757, metadata !DIExpression()), !dbg !12758
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !12759
  ret void, !dbg !12760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12761 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !12762
  ret void, !dbg !12763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12766, metadata !DIExpression()), !dbg !12767
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !12768
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12769
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12770
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12771
  %4 = trunc i32 %0 to i8, !dbg !12772
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12773
  store i8 %4, i8* %5, align 4, !dbg !12774
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12775
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !12776
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12777
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12778
  store i8* %8, i8** %9, align 4, !dbg !12779
  ret void, !dbg !12780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12783, metadata !DIExpression()), !dbg !12789
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12790
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12784, metadata !DIExpression()), !dbg !12789
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12791
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12785, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.value(metadata i8* null, metadata !12788, metadata !DIExpression()), !dbg !12789
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12792
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12793
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !12794
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !12795
  ret void, !dbg !12796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12797 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12801, metadata !DIExpression()), !dbg !12802
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12803
  ret i8* %2, !dbg !12804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12805 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12810, metadata !DIExpression()), !dbg !12811
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12812
  %3 = load i8, i8* %2, align 1, !dbg !12813
  %4 = and i8 %3, -5, !dbg !12813
  store i8 %4, i8* %2, align 1, !dbg !12813
  ret void, !dbg !12814
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !12815 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !12818
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !12819
  %3 = ptrtoint i8* %2 to i32, !dbg !12828
  %4 = add i32 %3, 2048, !dbg !12829
  call void @llvm.dbg.value(metadata i32 %4, metadata !12823, metadata !DIExpression()) #25, !dbg !12830
  call void @llvm.dbg.value(metadata i32 %4, metadata !12831, metadata !DIExpression()) #25, !dbg !12834
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12836, !srcloc !12837
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12838
  %6 = or i32 %5, 512, !dbg !12838
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12838
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -2, i32 noundef 255) #26, !dbg !12839
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -5, i32 noundef 0) #26, !dbg !12842
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -12, i32 noundef 0) #26, !dbg !12843
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -11, i32 noundef 0) #26, !dbg !12844
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -10, i32 noundef 0) #26, !dbg !12845
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -4, i32 noundef 0) #26, !dbg !12846
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12847
  %8 = or i32 %7, 458752, !dbg !12847
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12847
  tail call void @z_arm_fault_init() #26, !dbg !12848
  tail call void @z_arm_cpu_idle_init() #26, !dbg !12849
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12850
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12853
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !12854
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !12855
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12856
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12856
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12817, metadata !DIExpression()), !dbg !12857
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !12858
  call void @z_device_state_init() #26, !dbg !12859
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !12860
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !12861
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !12862
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12863
  unreachable, !dbg !12863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2163, metadata !DIExpression()), !dbg !12864
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12865
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12865
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2164, metadata !DIExpression()), !dbg !12864
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2164, metadata !DIExpression()), !dbg !12864
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12866
  br i1 %7, label %8, label %35, !dbg !12867

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2164, metadata !DIExpression()), !dbg !12864
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12868
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12868
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2174, metadata !DIExpression()), !dbg !12869
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12870
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12870
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !12871
  call void @llvm.dbg.value(metadata i32 %14, metadata !2178, metadata !DIExpression()), !dbg !12869
  %15 = icmp eq %struct.device* %11, null, !dbg !12872
  br i1 %15, label %32, label %16, !dbg !12874

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12875
  br i1 %17, label %26, label %18, !dbg !12878

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12879
  call void @llvm.dbg.value(metadata i32 %19, metadata !2178, metadata !DIExpression()), !dbg !12869
  %20 = icmp ult i32 %19, 255, !dbg !12881
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12881
  call void @llvm.dbg.value(metadata i32 %21, metadata !2178, metadata !DIExpression()), !dbg !12869
  %22 = trunc i32 %21 to i8, !dbg !12882
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12883
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12883
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12884
  store i8 %22, i8* %25, align 1, !dbg !12885
  br label %26, !dbg !12886

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12887
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12887
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12888
  %30 = load i8, i8* %29, align 1, !dbg !12889
  %31 = or i8 %30, 1, !dbg !12889
  store i8 %31, i8* %29, align 1, !dbg !12889
  br label %32, !dbg !12890

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12891
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2164, metadata !DIExpression()), !dbg !12864
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12866
  br i1 %34, label %8, label %35, !dbg !12867, !llvm.loop !12892

35:                                               ; preds = %32, %1
  ret void, !dbg !12894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.109(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12897, metadata !DIExpression()), !dbg !12899
  call void @llvm.dbg.value(metadata i32 %1, metadata !12898, metadata !DIExpression()), !dbg !12899
  %3 = trunc i32 %1 to i8, !dbg !12900
  %4 = shl i8 %3, 4, !dbg !12900
  %5 = and i32 %0, 15, !dbg !12903
  %6 = add nsw i32 %5, -4, !dbg !12904
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12905
  store volatile i8 %4, i8* %7, align 1, !dbg !12906
  ret void, !dbg !12907
}

; Function Attrs: optsize
declare !dbg !12908 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12909 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12912, metadata !DIExpression()), !dbg !12913
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12914
  store i8 1, i8* %2, align 1, !dbg !12915
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12916
  store i8 1, i8* %3, align 4, !dbg !12917
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12918
  store i32 0, i32* %4, align 4, !dbg !12919
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12920
  store i32 0, i32* %5, align 4, !dbg !12921
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12922
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12923
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12924
  ret void, !dbg !12925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12926 {
  tail call void @z_sched_init() #26, !dbg !12929
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12930
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0)) #26, !dbg !12931
  call void @llvm.dbg.value(metadata i8* %1, metadata !12928, metadata !DIExpression()), !dbg !12932
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12933
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12934
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !12935
  ret i8* %1, !dbg !12936
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !12937 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12941, metadata !DIExpression()), !dbg !12942
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !12943
  unreachable, !dbg !12944
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12947, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.value(metadata i8* %1, metadata !12948, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.value(metadata i8* %2, metadata !12949, metadata !DIExpression()), !dbg !12950
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12951
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !12952
  tail call void @boot_banner() #26, !dbg !12953
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !12954
  tail call void @z_init_static_threads() #26, !dbg !12955
  tail call void @main() #26, !dbg !12956
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12957
  %5 = and i8 %4, -2, !dbg !12957
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12957
  ret void, !dbg !12958
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12959 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12969, metadata !DIExpression()), !dbg !12971
  call void @llvm.dbg.value(metadata i8* %1, metadata !12970, metadata !DIExpression()), !dbg !12971
  ret void, !dbg !12972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12973 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12975, metadata !DIExpression()), !dbg !12977
  call void @llvm.dbg.value(metadata i8* %1, metadata !12976, metadata !DIExpression()), !dbg !12977
  ret void, !dbg !12978
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12979 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12980, !srcloc !12987
  call void @llvm.dbg.value(metadata i32 %1, metadata !12983, metadata !DIExpression()) #25, !dbg !12988
  %2 = icmp ne i32 %1, 0, !dbg !12989
  ret i1 %2, !dbg !12990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !12991 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12992
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12993
  %3 = load i8, i8* %2, align 4, !dbg !12994
  %4 = or i8 %3, 1, !dbg !12994
  store i8 %4, i8* %2, align 4, !dbg !12994
  ret void, !dbg !12995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !12996 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12997
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12998
  %3 = load i8, i8* %2, align 4, !dbg !12999
  %4 = and i8 %3, -2, !dbg !12999
  store i8 %4, i8* %2, align 4, !dbg !12999
  ret void, !dbg !13000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13001 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13002
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13003
  %3 = load i8, i8* %2, align 4, !dbg !13003
  %4 = and i8 %3, 1, !dbg !13004
  %5 = icmp ne i8 %4, 0, !dbg !13005
  ret i1 %5, !dbg !13006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13007 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13011, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.value(metadata i8* %1, metadata !13012, metadata !DIExpression()), !dbg !13013
  ret i32 -88, !dbg !13014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13015 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13019, metadata !DIExpression()), !dbg !13020
  ret i8* null, !dbg !13021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13022 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13026, metadata !DIExpression()), !dbg !13029
  call void @llvm.dbg.value(metadata i8* %1, metadata !13027, metadata !DIExpression()), !dbg !13029
  call void @llvm.dbg.value(metadata i32 %2, metadata !13028, metadata !DIExpression()), !dbg !13029
  ret i32 -88, !dbg !13030
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2187 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2301, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i8* %1, metadata !2302, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 %2, metadata !2303, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 0, metadata !2304, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i8 undef, metadata !2306, metadata !DIExpression()), !dbg !13031
  %4 = icmp eq i8* %1, null, !dbg !13032
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13034
  br i1 %6, label %46, label %7, !dbg !13034

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13035
  %9 = load i8, i8* %8, align 1, !dbg !13035
  call void @llvm.dbg.value(metadata i8 %9, metadata !2306, metadata !DIExpression()), !dbg !13031
  %10 = add i32 %2, -1, !dbg !13036
  call void @llvm.dbg.value(metadata i32 %10, metadata !2303, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i8 0, metadata !2307, metadata !DIExpression()), !dbg !13037
  call void @llvm.dbg.value(metadata i8 %9, metadata !2306, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 0, metadata !2304, metadata !DIExpression()), !dbg !13031
  %11 = icmp eq i8 %9, 0, !dbg !13038
  br i1 %11, label %12, label %15, !dbg !13040

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13041
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13042
  store i8 0, i8* %14, align 1, !dbg !13043
  br label %46, !dbg !13044

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2307, metadata !DIExpression()), !dbg !13037
  call void @llvm.dbg.value(metadata i8 %17, metadata !2306, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 %18, metadata !2304, metadata !DIExpression()), !dbg !13031
  %19 = zext i8 %17 to i32, !dbg !13045
  %20 = zext i8 %16 to i32, !dbg !13046
  %21 = shl nuw i32 1, %20, !dbg !13046
  call void @llvm.dbg.value(metadata i32 %21, metadata !2305, metadata !DIExpression()), !dbg !13031
  %22 = and i32 %21, %19, !dbg !13048
  %23 = icmp eq i32 %22, 0, !dbg !13050
  br i1 %23, label %42, label %24, !dbg !13051

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13052
  %26 = sub i32 %10, %18, !dbg !13053
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13054
  %28 = load i8*, i8** %27, align 4, !dbg !13054
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13055
  %30 = load i32, i32* %29, align 4, !dbg !13055
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !13056
  %32 = add i32 %31, %18, !dbg !13057
  call void @llvm.dbg.value(metadata i32 %32, metadata !2304, metadata !DIExpression()), !dbg !13031
  %33 = trunc i32 %21 to i8, !dbg !13058
  %34 = xor i8 %33, -1, !dbg !13058
  %35 = and i8 %17, %34, !dbg !13058
  call void @llvm.dbg.value(metadata i8 %35, metadata !2306, metadata !DIExpression()), !dbg !13031
  %36 = icmp eq i8 %35, 0, !dbg !13059
  br i1 %36, label %12, label %37, !dbg !13061

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13062
  %39 = sub i32 %10, %32, !dbg !13064
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #27, !dbg !13065
  %41 = add i32 %40, %32, !dbg !13066
  call void @llvm.dbg.value(metadata i32 %41, metadata !2304, metadata !DIExpression()), !dbg !13031
  br label %42, !dbg !13067

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13031
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13031
  call void @llvm.dbg.value(metadata i8 %44, metadata !2306, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 %43, metadata !2304, metadata !DIExpression()), !dbg !13031
  %45 = add i8 %16, 1, !dbg !13068
  call void @llvm.dbg.value(metadata i8 %45, metadata !2307, metadata !DIExpression()), !dbg !13037
  br label %15, !dbg !13040

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.111, i32 0, i32 0), %3 ], !dbg !13031
  ret i8* %47, !dbg !13069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13070 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13074, metadata !DIExpression()), !dbg !13079
  call void @llvm.dbg.value(metadata i32 %1, metadata !13075, metadata !DIExpression()), !dbg !13079
  call void @llvm.dbg.value(metadata i8* %2, metadata !13076, metadata !DIExpression()), !dbg !13079
  call void @llvm.dbg.value(metadata i32 %3, metadata !13077, metadata !DIExpression()), !dbg !13079
  %5 = icmp ult i32 %1, %3, !dbg !13080
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13080
  call void @llvm.dbg.value(metadata i32 %6, metadata !13078, metadata !DIExpression()), !dbg !13079
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !13081
  ret i32 %6, !dbg !13082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13087, metadata !DIExpression()), !dbg !13088
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !13089
  ret void, !dbg !13090
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13091 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13100, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13101, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i32 %2, metadata !13102, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13103, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i8* %4, metadata !13104, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i8* %5, metadata !13105, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i8* %6, metadata !13106, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i32 %7, metadata !13107, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i32 %8, metadata !13108, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i8* undef, metadata !13109, metadata !DIExpression()), !dbg !13111
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13112
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #27, !dbg !13113
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13114
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !13115
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !13116
  call void @llvm.dbg.value(metadata i8* %13, metadata !13110, metadata !DIExpression()), !dbg !13111
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !13117
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13118
  store i8* null, i8** %14, align 4, !dbg !13119
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13120
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13120
  br i1 %16, label %20, label %17, !dbg !13122

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !13123
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !13123
  br label %20, !dbg !13124

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13111
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13125
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !13127
  ret i8* %13, !dbg !13128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !13129 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13134, metadata !DIExpression()), !dbg !13135
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13136
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !13137
  ret void, !dbg !13138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13139 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13144, metadata !DIExpression()), !dbg !13148
  call void @llvm.dbg.value(metadata i32 %1, metadata !13145, metadata !DIExpression()), !dbg !13148
  call void @llvm.dbg.value(metadata i32 %2, metadata !13146, metadata !DIExpression()), !dbg !13148
  call void @llvm.dbg.value(metadata i32 %3, metadata !13147, metadata !DIExpression()), !dbg !13148
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13149
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13150
  %6 = trunc i32 %3 to i8, !dbg !13151
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13152
  store i8 %6, i8* %7, align 4, !dbg !13153
  %8 = trunc i32 %2 to i8, !dbg !13154
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13155
  store i8 %8, i8* %9, align 1, !dbg !13156
  %10 = trunc i32 %1 to i8, !dbg !13157
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13158
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13158
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13158
  store i8 %10, i8* %13, align 2, !dbg !13159
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13160
  store i8 0, i8* %14, align 1, !dbg !13161
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !13162
  ret void, !dbg !13163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !13164 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13168, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13169, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i32 %2, metadata !13170, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i32 0, metadata !13175, metadata !DIExpression()), !dbg !13176
  %4 = add i32 %2, 7, !dbg !13177
  %5 = and i32 %4, -8, !dbg !13177
  %6 = add i32 %5, 64, !dbg !13177
  call void @llvm.dbg.value(metadata i32 %6, metadata !13171, metadata !DIExpression()), !dbg !13176
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.121(%struct.z_thread_stack_element* noundef %1) #27, !dbg !13179
  call void @llvm.dbg.value(metadata i8* %7, metadata !13174, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i32 %5, metadata !13172, metadata !DIExpression()), !dbg !13176
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13180
  call void @llvm.dbg.value(metadata i8* %8, metadata !13173, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i32 0, metadata !13175, metadata !DIExpression()), !dbg !13176
  %9 = ptrtoint i8* %7 to i32, !dbg !13181
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13182
  store i32 %9, i32* %10, align 4, !dbg !13183
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13184
  store i32 %5, i32* %11, align 4, !dbg !13185
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13186
  store i32 0, i32* %12, align 4, !dbg !13187
  call void @llvm.dbg.value(metadata i8* %8, metadata !13173, metadata !DIExpression()), !dbg !13176
  ret i8* %8, !dbg !13188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.121(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13189 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13193, metadata !DIExpression()), !dbg !13194
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13195
  ret i8* %2, !dbg !13196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13197 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13202, metadata !DIExpression()), !dbg !13203
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13204
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !13205
  ret void, !dbg !13206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13207 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13209, metadata !DIExpression()), !dbg !13210
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13211
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !13212
  ret void, !dbg !13213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13214 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13218, metadata !DIExpression()), !dbg !13219
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13220
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13221
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13222
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13223
  ret void, !dbg !13224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13225 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13230, metadata !DIExpression()), !dbg !13231
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13232
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13233
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13234
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13235
  ret void, !dbg !13236
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13237 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !13254, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13245, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13246, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i32 %2, metadata !13247, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13248, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i8* %4, metadata !13249, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i8* %5, metadata !13250, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i8* %6, metadata !13251, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i32 %7, metadata !13252, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i32 %8, metadata !13253, metadata !DIExpression()), !dbg !13255
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !13256
  %13 = icmp eq i64 %11, -1, !dbg !13257
  br i1 %13, label %15, label %14, !dbg !13259

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !13260
  br label %15, !dbg !13262

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !13263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13264 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13269, metadata !DIExpression()), !dbg !13270
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13268, metadata !DIExpression()), !dbg !13270
  %4 = icmp eq i64 %3, 0, !dbg !13271
  br i1 %4, label %5, label %6, !dbg !13273

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13274
  br label %7, !dbg !13276

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !13277
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13280 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13284, metadata !DIExpression()), !dbg !13285
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13286, !srcloc !13288
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13289
  ret void, !dbg !13290
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13291 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13294, metadata !DIExpression()), !dbg !13295
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13293, metadata !DIExpression()), !dbg !13295
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13296
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !13297
  ret void, !dbg !13298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13299 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13301, metadata !DIExpression()), !dbg !13321
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !13322

1:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !13323
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13319, metadata !DIExpression()), !dbg !13324
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !13325

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13301, metadata !DIExpression()), !dbg !13321
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13326
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13326
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13329
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !13329
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13330
  %9 = load i32, i32* %8, align 4, !dbg !13330
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13331
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !13331
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13332
  %13 = load i8*, i8** %12, align 4, !dbg !13332
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13333
  %15 = load i8*, i8** %14, align 4, !dbg !13333
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13334
  %17 = load i8*, i8** %16, align 4, !dbg !13334
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13335
  %19 = load i32, i32* %18, align 4, !dbg !13335
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13336
  %21 = load i32, i32* %20, align 4, !dbg !13336
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #27, !dbg !13337
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13338
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !13339
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !13340
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !13340
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13341
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !13301, metadata !DIExpression()), !dbg !13321
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13342
  br i1 %27, label %2, label %1, !dbg !13322, !llvm.loop !13344

28:                                               ; preds = %0
  tail call void @k_sched_lock() #26, !dbg !13323
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13319, metadata !DIExpression()), !dbg !13324
  br label %29, !dbg !13325

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #26, !dbg !13346
  ret void, !dbg !13347

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13319, metadata !DIExpression()), !dbg !13324
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !13348
  %33 = load i32, i32* %32, align 4, !dbg !13348
  %34 = icmp eq i32 %33, -1, !dbg !13352
  br i1 %34, label %43, label %35, !dbg !13353

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !13354
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !13354
  %38 = icmp sgt i32 %33, 0, !dbg !13356
  %39 = select i1 %38, i32 %33, i32 0, !dbg !13356
  %40 = zext i32 %39 to i64, !dbg !13356
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #27, !dbg !13356
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !13357
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #27, !dbg !13357
  br label %43, !dbg !13358

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !13359
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !13319, metadata !DIExpression()), !dbg !13324
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13360
  br i1 %45, label %30, label %29, !dbg !13325, !llvm.loop !13362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !13364 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13369, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata i64 %0, metadata !13371, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i32 1000, metadata !13376, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i32 10000, metadata !13377, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i8 1, metadata !13378, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i8 0, metadata !13379, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i8 1, metadata !13380, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i8 0, metadata !13381, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i8 1, metadata !13382, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i8 0, metadata !13383, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i64 0, metadata !13384, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i64 0, metadata !13384, metadata !DIExpression()), !dbg !13388
  %2 = mul i64 %0, 10, !dbg !13390
  ret i64 %2, !dbg !13396
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !13397 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13399, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.value(metadata i8* %1, metadata !13400, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.value(metadata i8* %2, metadata !13401, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.value(metadata i8* %3, metadata !13402, metadata !DIExpression()), !dbg !13403
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13404
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13405
  %7 = load i8, i8* %6, align 4, !dbg !13406
  %8 = or i8 %7, 4, !dbg !13406
  store i8 %8, i8* %6, align 4, !dbg !13406
  tail call void @z_thread_essential_clear() #27, !dbg !13407
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13408
  unreachable, !dbg !13408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13409 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13413, metadata !DIExpression()), !dbg !13414
  ret i32 -134, !dbg !13415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13420, metadata !DIExpression()), !dbg !13422
  call void @llvm.dbg.value(metadata i32 %1, metadata !13421, metadata !DIExpression()), !dbg !13422
  ret i32 -134, !dbg !13423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13431, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13432, metadata !DIExpression()), !dbg !13433
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13434
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13436
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13433
  ret i32 %6, !dbg !13437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13438 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13442, metadata !DIExpression()), !dbg !13443
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13444
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13443
  ret i32 %3, !dbg !13446
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13447 {
  tail call void @sys_clock_idle_exit() #26, !dbg !13449
  ret void, !dbg !13450
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !13451 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13453, metadata !DIExpression()), !dbg !13456
  call void @llvm.dbg.value(metadata i8* %1, metadata !13454, metadata !DIExpression()), !dbg !13456
  call void @llvm.dbg.value(metadata i8* %2, metadata !13455, metadata !DIExpression()), !dbg !13456
  br label %4, !dbg !13457

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13458, !srcloc !13465
  call void @llvm.dbg.value(metadata i32 undef, metadata !13461, metadata !DIExpression()) #25, !dbg !13466
  call void @llvm.dbg.value(metadata i32 undef, metadata !13462, metadata !DIExpression()) #25, !dbg !13466
  tail call fastcc void @k_cpu_idle() #27, !dbg !13467
  br label %4, !dbg !13457, !llvm.loop !13468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13470 {
  tail call void @arch_cpu_idle() #26, !dbg !13471
  ret void, !dbg !13472
}

; Function Attrs: optsize
declare !dbg !13473 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13474 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13478, metadata !DIExpression()), !dbg !13484
  call void @llvm.dbg.value(metadata i1 %1, metadata !13479, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13484
  %3 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !13485
  br i1 %3, label %13, label %4, !dbg !13486

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !13487
  %6 = icmp eq i8 %5, 0, !dbg !13488
  br i1 %6, label %13, label %7, !dbg !13489

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13481, metadata !DIExpression()), !dbg !13490
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 1, !dbg !13491
  %9 = bitcast %struct.z_heap_bucket* %8 to i8**, !dbg !13491
  %10 = load i8*, i8** %9, align 4, !dbg !13491
  call void @llvm.dbg.value(metadata i8* %10, metadata !13480, metadata !DIExpression()), !dbg !13484
  br i1 %1, label %11, label %15, !dbg !13492

11:                                               ; preds = %7
  %12 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13493
  tail call void @k_free(i8* noundef nonnull %12) #26, !dbg !13494
  br label %15, !dbg !13497

13:                                               ; preds = %4, %2
  %14 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13498
  call void @llvm.dbg.value(metadata i8* %14, metadata !13480, metadata !DIExpression()), !dbg !13484
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !13500
  call void @llvm.dbg.value(metadata i8* %16, metadata !13480, metadata !DIExpression()), !dbg !13484
  ret i8* %16, !dbg !13501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13502 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13506, metadata !DIExpression()), !dbg !13507
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13508
  %3 = load i32, i32* %2, align 4, !dbg !13508
  %4 = trunc i32 %3 to i8, !dbg !13509
  %5 = and i8 %4, 3, !dbg !13509
  ret i8 %5, !dbg !13510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #4 !dbg !13511 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13532, metadata !DIExpression()), !dbg !13533
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13534
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #27, !dbg !13535
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13536
  tail call fastcc void @z_waitq_init.126(%union.anon* noundef nonnull %3) #27, !dbg !13537
  ret void, !dbg !13538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13539 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13544, metadata !DIExpression()), !dbg !13545
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13546
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %2, align 4, !dbg !13547
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13548
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %3, align 4, !dbg !13549
  ret void, !dbg !13550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.126(%union.anon* noundef %0) unnamed_addr #4 !dbg !13551 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13556, metadata !DIExpression()), !dbg !13557
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13558
  tail call fastcc void @sys_dlist_init.127(%struct._dnode* noundef %2) #27, !dbg !13559
  ret void, !dbg !13560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.127(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13561 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13566, metadata !DIExpression()), !dbg !13567
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13568
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13569
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13570
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13571
  ret void, !dbg !13572
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !13573 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13575, metadata !DIExpression()), !dbg !13661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13662, metadata !DIExpression()) #25, !dbg !13669
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13671, !srcloc !13677
  call void @llvm.dbg.value(metadata i32 undef, metadata !13674, metadata !DIExpression()) #25, !dbg !13678
  call void @llvm.dbg.value(metadata i32 undef, metadata !13675, metadata !DIExpression()) #25, !dbg !13678
  call void @llvm.dbg.value(metadata i32 undef, metadata !13668, metadata !DIExpression()) #25, !dbg !13669
  call void @llvm.dbg.value(metadata i32 undef, metadata !13576, metadata !DIExpression()), !dbg !13661
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13679
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %3) #26, !dbg !13680
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13581, metadata !DIExpression()), !dbg !13661
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13681
  br i1 %5, label %7, label %6, !dbg !13683

6:                                                ; preds = %1
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %4, i8* noundef null) #27, !dbg !13684
  br label %7, !dbg !13686

7:                                                ; preds = %6, %1
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13671
  call void @llvm.dbg.value(metadata i32 %8, metadata !13674, metadata !DIExpression()) #25, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %8, metadata !13668, metadata !DIExpression()) #25, !dbg !13669
  call void @llvm.dbg.value(metadata i32 %8, metadata !13576, metadata !DIExpression()), !dbg !13661
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13687
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13688
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %10) #26, !dbg !13688
  ret void, !dbg !13689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !13690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13694, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i8* %1, metadata !13695, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13697, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i32 0, metadata !13703, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i8* %1, metadata !13704, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13707, metadata !DIExpression()), !dbg !13713
  call void @llvm.dbg.value(metadata i32 0, metadata !13712, metadata !DIExpression()), !dbg !13713
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !13715
  store i32 0, i32* %3, align 4, !dbg !13716
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !13717
  store i8* %1, i8** %4, align 4, !dbg !13718
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13719
  ret void, !dbg !13720
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13721 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13725, metadata !DIExpression()), !dbg !13728
  call void @llvm.dbg.value(metadata i8* %1, metadata !13726, metadata !DIExpression()), !dbg !13728
  call void @llvm.dbg.value(metadata i8* %2, metadata !13727, metadata !DIExpression()), !dbg !13728
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !13729
  ret void, !dbg !13730
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !13731 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13735, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.value(metadata i8* %1, metadata !13736, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.value(metadata i8* %2, metadata !13737, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.value(metadata i1 %3, metadata !13738, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13745
  call void @llvm.dbg.value(metadata i1 %4, metadata !13739, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13745
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13746
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13662, metadata !DIExpression()) #25, !dbg !13747
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13749, !srcloc !13677
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !13749
  call void @llvm.dbg.value(metadata i32 %8, metadata !13674, metadata !DIExpression()) #25, !dbg !13751
  call void @llvm.dbg.value(metadata i32 undef, metadata !13675, metadata !DIExpression()) #25, !dbg !13751
  call void @llvm.dbg.value(metadata i32 %8, metadata !13668, metadata !DIExpression()) #25, !dbg !13747
  call void @llvm.dbg.value(metadata i32 %8, metadata !13741, metadata !DIExpression()), !dbg !13745
  br i1 %4, label %9, label %13, !dbg !13752

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13753
  %11 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %10) #27, !dbg !13756
  %12 = bitcast %struct.z_heap_bucket* %11 to i8*, !dbg !13756
  call void @llvm.dbg.value(metadata i8* %12, metadata !13736, metadata !DIExpression()), !dbg !13745
  br label %13, !dbg !13757

13:                                               ; preds = %9, %5
  %14 = phi i8* [ %12, %9 ], [ %1, %5 ]
  call void @llvm.dbg.value(metadata i8* %14, metadata !13736, metadata !DIExpression()), !dbg !13745
  %15 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13758
  %16 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %15) #26, !dbg !13759
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !13740, metadata !DIExpression()), !dbg !13745
  %17 = icmp eq %struct.k_thread* %16, null, !dbg !13760
  br i1 %17, label %20, label %18, !dbg !13762

18:                                               ; preds = %13
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %16, i8* noundef %2) #27, !dbg !13763
  %19 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13765
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %19) #26, !dbg !13765
  br label %36, !dbg !13766

20:                                               ; preds = %13
  br i1 %3, label %21, label %29, !dbg !13767

21:                                               ; preds = %20
  %22 = tail call fastcc i8* @z_thread_malloc() #27, !dbg !13768
  call void @llvm.dbg.value(metadata i8* %22, metadata !13742, metadata !DIExpression()), !dbg !13769
  %23 = icmp eq i8* %22, null, !dbg !13770
  br i1 %23, label %24, label %25, !dbg !13772

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %8, metadata !13773, metadata !DIExpression()) #25, !dbg !13779
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13778, metadata !DIExpression()) #25, !dbg !13779
  call void @llvm.dbg.value(metadata i32 %8, metadata !13782, metadata !DIExpression()) #25, !dbg !13785
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13787, !srcloc !13788
  call void @llvm.dbg.value(metadata i8* %22, metadata !13737, metadata !DIExpression()), !dbg !13745
  br label %36

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i8* %22, metadata !13742, metadata !DIExpression()), !dbg !13769
  %26 = getelementptr inbounds i8, i8* %22, i32 4, !dbg !13789
  %27 = bitcast i8* %26 to i8**, !dbg !13789
  store i8* %2, i8** %27, align 4, !dbg !13790
  %28 = bitcast i8* %22 to %struct.z_heap_bucket*, !dbg !13791
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef nonnull %28, i8 noundef zeroext 1) #27, !dbg !13792
  call void @llvm.dbg.value(metadata i8* %22, metadata !13737, metadata !DIExpression()), !dbg !13745
  br label %31

29:                                               ; preds = %20
  %30 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !13793
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef %30, i8 noundef zeroext 0) #27, !dbg !13795
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi %struct.z_heap_bucket* [ %28, %25 ], [ %30, %29 ], !dbg !13796
  call void @llvm.dbg.value(metadata i8* undef, metadata !13737, metadata !DIExpression()), !dbg !13745
  %33 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13797
  %34 = bitcast i8* %14 to %struct.z_heap_bucket*, !dbg !13798
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %33, %struct.z_heap_bucket* noundef %34, %struct.z_heap_bucket* noundef %32) #27, !dbg !13799
  %35 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13800
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %35) #26, !dbg !13800
  br label %36, !dbg !13801

36:                                               ; preds = %24, %31, %18
  %37 = phi i32 [ 0, %18 ], [ 0, %31 ], [ -12, %24 ], !dbg !13745
  ret i32 %37, !dbg !13802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13803 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13807, metadata !DIExpression()), !dbg !13808
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13809
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !13809
  ret %struct.z_heap_bucket* %3, !dbg !13810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !13811 {
  call void @llvm.dbg.value(metadata i32 8, metadata !13814, metadata !DIExpression()), !dbg !13815
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #26, !dbg !13816
  ret i8* %1, !dbg !13817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sfnode_init(%struct.z_heap_bucket* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #4 !dbg !13818 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13822, metadata !DIExpression()), !dbg !13824
  call void @llvm.dbg.value(metadata i8 %1, metadata !13823, metadata !DIExpression()), !dbg !13824
  %3 = zext i8 %1 to i32, !dbg !13825
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13826
  store i32 %3, i32* %4, align 4, !dbg !13827
  ret void, !dbg !13828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !13829 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13833, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13834, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !13835, metadata !DIExpression()), !dbg !13836
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !13837
  br i1 %4, label %5, label %6, !dbg !13839

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !13840
  br label %11, !dbg !13840

6:                                                ; preds = %3
  %7 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !13842
  %8 = icmp eq %struct.z_heap_bucket* %7, null, !dbg !13842
  br i1 %8, label %9, label %10, !dbg !13837

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !13844
  br label %11, !dbg !13844

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef nonnull %7) #27, !dbg !13846
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %2) #27, !dbg !13846
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !13839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13848 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13852, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13853, metadata !DIExpression()), !dbg !13854
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !13855
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %3) #27, !dbg !13855
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13855
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !13856
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !13856
  br i1 %5, label %6, label %8, !dbg !13855

6:                                                ; preds = %2
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !13858
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !13858
  br label %8, !dbg !13858

8:                                                ; preds = %6, %2
  ret void, !dbg !13855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13860 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13864, metadata !DIExpression()), !dbg !13865
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13866
  %3 = load i32, i32* %2, align 4, !dbg !13866
  %4 = and i32 %3, -4, !dbg !13867
  %5 = inttoptr i32 %4 to %struct.z_heap_bucket*, !dbg !13868
  ret %struct.z_heap_bucket* %5, !dbg !13869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13870 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13872, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13873, metadata !DIExpression()), !dbg !13874
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef null) #27, !dbg !13875
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !13876
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !13876
  br i1 %4, label %5, label %6, !dbg !13875

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13878
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13878
  br label %7, !dbg !13878

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %3, %struct.z_heap_bucket* noundef %1) #27, !dbg !13880
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13880
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13882 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13886, metadata !DIExpression()), !dbg !13889
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13887, metadata !DIExpression()), !dbg !13889
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef %0) #27, !dbg !13890
  call void @llvm.dbg.value(metadata i8 %3, metadata !13888, metadata !DIExpression()), !dbg !13889
  %4 = zext i8 %3 to i32, !dbg !13891
  %5 = ptrtoint %struct.z_heap_bucket* %1 to i32, !dbg !13892
  %6 = or i32 %4, %5, !dbg !13893
  %7 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13894
  store i32 %6, i32* %7, align 4, !dbg !13895
  ret void, !dbg !13896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !13897 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13899, metadata !DIExpression()), !dbg !13901
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13900, metadata !DIExpression()), !dbg !13901
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13902
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !13903
  ret void, !dbg !13904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !13905 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13907, metadata !DIExpression()), !dbg !13909
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13908, metadata !DIExpression()), !dbg !13909
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13910
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !13911
  ret void, !dbg !13912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13913 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13915, metadata !DIExpression()), !dbg !13916
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13917
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !13917
  ret %struct.z_heap_bucket* %3, !dbg !13918
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13919 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13923, metadata !DIExpression()), !dbg !13925
  call void @llvm.dbg.value(metadata i8* %1, metadata !13924, metadata !DIExpression()), !dbg !13925
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #27, !dbg !13926
  ret void, !dbg !13927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13928 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13930, metadata !DIExpression()), !dbg !13932
  call void @llvm.dbg.value(metadata i8* %1, metadata !13931, metadata !DIExpression()), !dbg !13932
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !13933
  ret void, !dbg !13934
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13935 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13939, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata i8* %1, metadata !13940, metadata !DIExpression()), !dbg !13942
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #27, !dbg !13943
  call void @llvm.dbg.value(metadata i32 %3, metadata !13941, metadata !DIExpression()), !dbg !13942
  ret i32 %3, !dbg !13944
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13945 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13947, metadata !DIExpression()), !dbg !13950
  call void @llvm.dbg.value(metadata i8* %1, metadata !13948, metadata !DIExpression()), !dbg !13950
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #27, !dbg !13951
  call void @llvm.dbg.value(metadata i32 %3, metadata !13949, metadata !DIExpression()), !dbg !13950
  ret i32 %3, !dbg !13952
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13953 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13957, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata i8* %1, metadata !13958, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata i8* %2, metadata !13959, metadata !DIExpression()), !dbg !13962
  %4 = icmp eq i8* %1, null, !dbg !13963
  %5 = icmp eq i8* %2, null, !dbg !13963
  %6 = or i1 %4, %5, !dbg !13963
  br i1 %6, label %29, label %7, !dbg !13963

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13662, metadata !DIExpression()) #25, !dbg !13966
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13968, !srcloc !13677
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !13968
  call void @llvm.dbg.value(metadata i32 %10, metadata !13674, metadata !DIExpression()) #25, !dbg !13970
  call void @llvm.dbg.value(metadata i32 undef, metadata !13675, metadata !DIExpression()) #25, !dbg !13970
  call void @llvm.dbg.value(metadata i32 %10, metadata !13668, metadata !DIExpression()) #25, !dbg !13966
  call void @llvm.dbg.value(metadata i32 %10, metadata !13960, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13961, metadata !DIExpression()), !dbg !13962
  %11 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13971
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !13974
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !13961, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !13961, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata i8* %1, metadata !13958, metadata !DIExpression()), !dbg !13962
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !13975
  br i1 %13, label %24, label %14, !dbg !13976

14:                                               ; preds = %7, %14
  %15 = phi %struct.k_thread* [ %19, %14 ], [ %12, %7 ]
  %16 = phi i8* [ %18, %14 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13961, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata i8* %16, metadata !13958, metadata !DIExpression()), !dbg !13962
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %15, i8* noundef nonnull %16) #27, !dbg !13977
  %17 = bitcast i8* %16 to i8**, !dbg !13979
  %18 = load i8*, i8** %17, align 4, !dbg !13980
  call void @llvm.dbg.value(metadata i8* %18, metadata !13958, metadata !DIExpression()), !dbg !13962
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !13981
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13961, metadata !DIExpression()), !dbg !13962
  %20 = icmp ne i8* %18, null, !dbg !13982
  %21 = icmp ne %struct.k_thread* %19, null, !dbg !13975
  %22 = select i1 %20, i1 %21, i1 false, !dbg !13975
  br i1 %22, label %14, label %23, !dbg !13976, !llvm.loop !13983

23:                                               ; preds = %14
  br i1 %20, label %24, label %27, !dbg !13985

24:                                               ; preds = %7, %23
  %25 = phi i8* [ %18, %23 ], [ %1, %7 ]
  %26 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13986
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %26, i8* noundef nonnull %25, i8* noundef %2) #27, !dbg !13989
  br label %27, !dbg !13990

27:                                               ; preds = %23, %24
  %28 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !13991
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %8, [1 x i32] %28) #26, !dbg !13991
  br label %29

29:                                               ; preds = %3, %27
  %30 = phi i32 [ 0, %27 ], [ -22, %3 ], !dbg !13962
  ret i32 %30, !dbg !13992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #8 !dbg !13993 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13997, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i8* %1, metadata !13998, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i8* %2, metadata !13999, metadata !DIExpression()), !dbg !14000
  %4 = icmp ne i8* %1, null, !dbg !14001
  %5 = icmp ne i8* %2, null, !dbg !14001
  %6 = and i1 %4, %5, !dbg !14001
  br i1 %6, label %7, label %15, !dbg !14001

7:                                                ; preds = %3
  %8 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14003
  %9 = icmp eq %struct.z_heap_bucket* %8, null, !dbg !14003
  %10 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14006
  br i1 %9, label %11, label %12, !dbg !14007

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14008
  br label %13, !dbg !14008

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14010
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !14007
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %14) #27, !dbg !14007
  br label %15, !dbg !14007

15:                                               ; preds = %13, %3
  ret void, !dbg !14012
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !14013 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14029, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !14030, metadata !DIExpression()), !dbg !14032
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.130(%struct._slist* noundef %1) #27, !dbg !14033
  br i1 %3, label %13, label %4, !dbg !14035

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !14036
  %6 = load i8*, i8** %5, align 4, !dbg !14036
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !14037
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !14037
  %9 = load i8*, i8** %8, align 4, !dbg !14037
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #27, !dbg !14038
  call void @llvm.dbg.value(metadata i32 %10, metadata !14031, metadata !DIExpression()), !dbg !14032
  %11 = icmp eq i32 %10, 0, !dbg !14039
  br i1 %11, label %12, label %13, !dbg !14041

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #27, !dbg !14042
  br label %13, !dbg !14043

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !14032
  ret i32 %14, !dbg !14044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.130(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14045 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14049, metadata !DIExpression()), !dbg !14050
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.131(%struct._slist* noundef %0) #27, !dbg !14051
  %3 = icmp eq %struct._snode* %2, null, !dbg !14051
  ret i1 %3, !dbg !14051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14052 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14056, metadata !DIExpression()), !dbg !14057
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14058
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !14059
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !14060
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !14061
  ret void, !dbg !14062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.131(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14063 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14067, metadata !DIExpression()), !dbg !14068
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14069
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !14069
  ret %struct._snode* %3, !dbg !14070
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14071 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14080, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14079, metadata !DIExpression()), !dbg !14087
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14088
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13662, metadata !DIExpression()) #25, !dbg !14089
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14091, !srcloc !13677
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14091
  call void @llvm.dbg.value(metadata i32 %5, metadata !13674, metadata !DIExpression()) #25, !dbg !14093
  call void @llvm.dbg.value(metadata i32 undef, metadata !13675, metadata !DIExpression()) #25, !dbg !14093
  call void @llvm.dbg.value(metadata i32 %5, metadata !13668, metadata !DIExpression()) #25, !dbg !14089
  call void @llvm.dbg.value(metadata i32 %5, metadata !14081, metadata !DIExpression()), !dbg !14087
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14094
  %7 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %6) #27, !dbg !14094
  br i1 %7, label %11, label %8, !dbg !14095, !prof !14096

8:                                                ; preds = %2
  %9 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* noundef %6) #27, !dbg !14097
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14083, metadata !DIExpression()), !dbg !14098
  %10 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %9, i1 noundef zeroext true) #27, !dbg !14099
  call void @llvm.dbg.value(metadata i8* %10, metadata !14082, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i32 %5, metadata !13773, metadata !DIExpression()) #25, !dbg !14100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13778, metadata !DIExpression()) #25, !dbg !14100
  call void @llvm.dbg.value(metadata i32 %5, metadata !13782, metadata !DIExpression()) #25, !dbg !14102
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14104, !srcloc !13788
  br label %24

11:                                               ; preds = %2
  %12 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %12, metadata !14080, metadata !DIExpression()), !dbg !14087
  %13 = icmp eq i64 %12, 0, !dbg !14105
  br i1 %13, label %14, label %15, !dbg !14107

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %5, metadata !13773, metadata !DIExpression()) #25, !dbg !14108
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13778, metadata !DIExpression()) #25, !dbg !14108
  call void @llvm.dbg.value(metadata i32 %5, metadata !13782, metadata !DIExpression()) #25, !dbg !14111
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14113, !srcloc !13788
  br label %24, !dbg !14114

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14115
  %17 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !14116
  %18 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %17, %union.anon* noundef nonnull %16, [1 x i64] %1) #26, !dbg !14116
  call void @llvm.dbg.value(metadata i32 %18, metadata !14086, metadata !DIExpression()), !dbg !14087
  %19 = icmp eq i32 %18, 0, !dbg !14117
  br i1 %19, label %20, label %24, !dbg !14118

20:                                               ; preds = %15
  %21 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14119
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 6, !dbg !14120
  %23 = load i8*, i8** %22, align 4, !dbg !14120
  br label %24, !dbg !14118

24:                                               ; preds = %20, %15, %14, %8
  %25 = phi i8* [ %10, %8 ], [ null, %14 ], [ %23, %20 ], [ null, %15 ], !dbg !14087
  ret i8* %25, !dbg !14121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14122 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14126, metadata !DIExpression()), !dbg !14127
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14128
  %3 = icmp eq %struct.z_heap_bucket* %2, null, !dbg !14128
  ret i1 %3, !dbg !14128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #8 !dbg !14129 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14131, metadata !DIExpression()), !dbg !14133
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14134
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14132, metadata !DIExpression()), !dbg !14133
  %3 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14134
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %3) #27, !dbg !14134
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14135
  %5 = icmp eq %struct.z_heap_bucket* %4, %2, !dbg !14135
  br i1 %5, label %6, label %8, !dbg !14134

6:                                                ; preds = %1
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14137
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !14137
  br label %8, !dbg !14137

8:                                                ; preds = %6, %1
  ret %struct.z_heap_bucket* %2, !dbg !14134
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !14139 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14143, metadata !DIExpression()), !dbg !14146
  call void @llvm.dbg.value(metadata i8* %1, metadata !14144, metadata !DIExpression()), !dbg !14146
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14147
  %4 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14148
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct.z_heap_bucket* noundef %4) #27, !dbg !14149
  call void @llvm.dbg.value(metadata i1 %5, metadata !14145, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14146
  ret i1 %5, !dbg !14150
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #14 !dbg !14151 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14155, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14156, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14157, metadata !DIExpression()), !dbg !14159
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14160
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14158, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14157, metadata !DIExpression()), !dbg !14159
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !14162
  br i1 %4, label %15, label %5, !dbg !14160

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14158, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14157, metadata !DIExpression()), !dbg !14159
  %6 = icmp eq %struct.z_heap_bucket* %3, %1, !dbg !14164
  br i1 %6, label %9, label %11, !dbg !14167

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14158, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14157, metadata !DIExpression()), !dbg !14159
  %8 = icmp eq %struct.z_heap_bucket* %13, %1, !dbg !14164
  br i1 %8, label %9, label %11, !dbg !14167, !llvm.loop !14168

9:                                                ; preds = %7, %5
  %10 = phi %struct.z_heap_bucket* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10, %struct.z_heap_bucket* noundef %1) #27, !dbg !14169
  br label %15, !dbg !14169

11:                                               ; preds = %5, %7
  %12 = phi %struct.z_heap_bucket* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14158, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14157, metadata !DIExpression()), !dbg !14159
  %13 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %12) #27, !dbg !14162
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14158, metadata !DIExpression()), !dbg !14159
  %14 = icmp eq %struct.z_heap_bucket* %13, null, !dbg !14162
  br i1 %14, label %15, label %7, !dbg !14160, !llvm.loop !14168

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !14171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !14172 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14174, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14175, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14176, metadata !DIExpression()), !dbg !14177
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !14178
  %5 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14180
  br i1 %4, label %6, label %11, !dbg !14181

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %5) #27, !dbg !14182
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14184
  %8 = icmp eq %struct.z_heap_bucket* %7, %2, !dbg !14184
  br i1 %8, label %9, label %15, !dbg !14182

9:                                                ; preds = %6
  %10 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14186
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10) #27, !dbg !14186
  br label %15, !dbg !14186

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %5) #27, !dbg !14188
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14190
  %13 = icmp eq %struct.z_heap_bucket* %12, %2, !dbg !14190
  br i1 %13, label %14, label %15, !dbg !14188

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !14192
  br label %15, !dbg !14192

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef null) #27, !dbg !14181
  ret void, !dbg !14181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef readonly %0) unnamed_addr #5 !dbg !14194 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14196, metadata !DIExpression()), !dbg !14197
  %2 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !14198
  br i1 %2, label %5, label %3, !dbg !14198

3:                                                ; preds = %1
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !14198
  br label %5, !dbg !14198

5:                                                ; preds = %1, %3
  %6 = phi %struct.z_heap_bucket* [ %4, %3 ], [ null, %1 ], !dbg !14198
  ret %struct.z_heap_bucket* %6, !dbg !14198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14199 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14201, metadata !DIExpression()), !dbg !14202
  %2 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %0) #27, !dbg !14203
  ret %struct.z_heap_bucket* %2, !dbg !14203
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14204 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14206, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.value(metadata i8* %1, metadata !14207, metadata !DIExpression()), !dbg !14209
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14210
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %3) #27, !dbg !14210
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !14208, metadata !DIExpression()), !dbg !14209
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !14212
  br i1 %5, label %14, label %6, !dbg !14210

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct.z_heap_bucket*
  br label %8, !dbg !14210

8:                                                ; preds = %6, %11
  %9 = phi %struct.z_heap_bucket* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14208, metadata !DIExpression()), !dbg !14209
  %10 = icmp eq %struct.z_heap_bucket* %9, %7, !dbg !14214
  br i1 %10, label %15, label %11, !dbg !14217

11:                                               ; preds = %8
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %9) #27, !dbg !14212
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14208, metadata !DIExpression()), !dbg !14209
  %13 = icmp eq %struct.z_heap_bucket* %12, null, !dbg !14212
  br i1 %13, label %14, label %8, !dbg !14210, !llvm.loop !14218

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #27, !dbg !14220
  br label %15, !dbg !14221

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !14222
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14223 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14227, metadata !DIExpression()), !dbg !14229
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14230
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %2) #27, !dbg !14231
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14232
  call void @llvm.dbg.value(metadata i8* %4, metadata !14228, metadata !DIExpression()), !dbg !14229
  ret i8* %4, !dbg !14233
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14234 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14236, metadata !DIExpression()), !dbg !14238
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14239
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #27, !dbg !14240
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14241
  call void @llvm.dbg.value(metadata i8* %4, metadata !14237, metadata !DIExpression()), !dbg !14238
  ret i8* %4, !dbg !14242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14247, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14248, metadata !DIExpression()), !dbg !14251
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14252
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14252
  %5 = load i8, i8* %4, align 2, !dbg !14252
  call void @llvm.dbg.value(metadata i8 %5, metadata !14249, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14251
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14253
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14253
  %8 = load i8, i8* %7, align 2, !dbg !14253
  call void @llvm.dbg.value(metadata i8 %8, metadata !14250, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14251
  %9 = icmp eq i8 %8, %5, !dbg !14254
  %10 = sext i8 %5 to i32, !dbg !14256
  %11 = sext i8 %8 to i32, !dbg !14256
  %12 = sub nsw i32 %11, %10, !dbg !14256
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14256
  ret i32 %13, !dbg !14257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14262, metadata !DIExpression()), !dbg !14263
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !14264
  %3 = icmp eq i32 %2, 0, !dbg !14266
  br i1 %3, label %8, label %4, !dbg !14267

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !14268
  %6 = add i32 %5, %2, !dbg !14270
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14271
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !14272
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !14273
  br label %8, !dbg !14274

8:                                                ; preds = %4, %1
  ret void, !dbg !14275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14276 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14280, metadata !DIExpression()), !dbg !14282
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14283
  call void @llvm.dbg.value(metadata i32 %1, metadata !14281, metadata !DIExpression()), !dbg !14282
  ret i32 %1, !dbg !14284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14289, metadata !DIExpression()), !dbg !14298
  call void @llvm.dbg.value(metadata i32 %1, metadata !14290, metadata !DIExpression()), !dbg !14298
  call void @llvm.dbg.value(metadata i32 0, metadata !14291, metadata !DIExpression()), !dbg !14299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !14307
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14309, !srcloc !14315
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14309
  call void @llvm.dbg.value(metadata i32 %4, metadata !14312, metadata !DIExpression()) #25, !dbg !14316
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !14316
  call void @llvm.dbg.value(metadata i32 %4, metadata !14306, metadata !DIExpression()) #25, !dbg !14307
  call void @llvm.dbg.value(metadata i32 %4, metadata !14297, metadata !DIExpression()), !dbg !14299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14291, metadata !DIExpression()), !dbg !14299
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14317
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !14320
  %6 = icmp sgt i32 %0, 0, !dbg !14321
  %7 = icmp sgt i32 %5, 2, !dbg !14323
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14323
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14323
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14324
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14325
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14326
  call void @llvm.dbg.value(metadata i32 %4, metadata !14327, metadata !DIExpression()) #25, !dbg !14333
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !14333
  call void @llvm.dbg.value(metadata i32 %4, metadata !14335, metadata !DIExpression()) #25, !dbg !14338
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14340, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 1, metadata !14291, metadata !DIExpression()), !dbg !14299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14291, metadata !DIExpression()), !dbg !14299
  ret void, !dbg !14342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14345, metadata !DIExpression()), !dbg !14346
  call void @llvm.dbg.value(metadata i32 %0, metadata !14347, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14362
  call void @llvm.dbg.value(metadata i32 1000, metadata !14350, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i32 10000, metadata !14351, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i8 1, metadata !14352, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i1 true, metadata !14353, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14362
  call void @llvm.dbg.value(metadata i1 true, metadata !14354, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14362
  call void @llvm.dbg.value(metadata i8 0, metadata !14355, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i1 true, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14362
  call void @llvm.dbg.value(metadata i1 false, metadata !14357, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14362
  call void @llvm.dbg.value(metadata i64 0, metadata !14358, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i64 0, metadata !14358, metadata !DIExpression()), !dbg !14362
  %2 = mul i32 %0, 10, !dbg !14364
  ret i32 %2, !dbg !14370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14373, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !14376
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14378, !srcloc !14315
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14378
  call void @llvm.dbg.value(metadata i32 %3, metadata !14312, metadata !DIExpression()) #25, !dbg !14380
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !14380
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !14376
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()), !dbg !14375
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14381
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14383
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14384
  br i1 %6, label %7, label %8, !dbg !14385

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14386
  call void @llvm.dbg.value(metadata i32 %3, metadata !14327, metadata !DIExpression()) #25, !dbg !14388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !14388
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()) #25, !dbg !14390
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14392, !srcloc !14341
  br label %24, !dbg !14393

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14394
  %9 = tail call fastcc i32 @slice_time() #27, !dbg !14395
  %10 = icmp eq i32 %9, 0, !dbg !14395
  br i1 %10, label %21, label %11, !dbg !14397

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #27, !dbg !14398
  br i1 %12, label %13, label %21, !dbg !14399

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14400
  %15 = icmp sgt i32 %14, %0, !dbg !14403
  br i1 %15, label %19, label %16, !dbg !14404

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14405
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #27, !dbg !14405
  call void @llvm.dbg.value(metadata i32 %18, metadata !14374, metadata !DIExpression()), !dbg !14375
  br label %22, !dbg !14407

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14408
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14408
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14410
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14375
  call void @llvm.dbg.value(metadata i32 %23, metadata !14374, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata i32 %23, metadata !14327, metadata !DIExpression()) #25, !dbg !14412
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !14412
  call void @llvm.dbg.value(metadata i32 %23, metadata !14335, metadata !DIExpression()) #25, !dbg !14414
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !14416, !srcloc !14341
  br label %24, !dbg !14417

24:                                               ; preds = %22, %7
  ret void, !dbg !14417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14418 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14422, metadata !DIExpression()), !dbg !14424
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !14425
  %3 = icmp eq i32 %2, 0, !dbg !14425
  br i1 %3, label %16, label %4, !dbg !14426

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !14427
  br i1 %5, label %16, label %6, !dbg !14428

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14429
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14429
  %9 = load i8, i8* %8, align 2, !dbg !14429
  %10 = sext i8 %9 to i32, !dbg !14430
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14431
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #27, !dbg !14432
  br i1 %12, label %16, label %13, !dbg !14433

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !14434
  %15 = xor i1 %14, true, !dbg !14435
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14424
  call void @llvm.dbg.value(metadata i1 %17, metadata !14423, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14424
  ret i1 %17, !dbg !14436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14437 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14441, metadata !DIExpression()), !dbg !14443
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14444
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14442, metadata !DIExpression()), !dbg !14443
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !14445
  br i1 %3, label %5, label %4, !dbg !14447

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !14448
  br label %5, !dbg !14450

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14441, metadata !DIExpression()), !dbg !14443
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14451
  ret i32 %6, !dbg !14452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14453 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14455, metadata !DIExpression()), !dbg !14457
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14458
  %3 = load i8, i8* %2, align 1, !dbg !14458
  call void @llvm.dbg.value(metadata i8 %3, metadata !14456, metadata !DIExpression()), !dbg !14457
  %4 = and i8 %3, 31, !dbg !14459
  %5 = icmp ne i8 %4, 0, !dbg !14460
  ret i1 %5, !dbg !14461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14462 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14464, metadata !DIExpression()), !dbg !14465
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14466
  br i1 %2, label %3, label %7, !dbg !14468

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14469, metadata !DIExpression()) #25, !dbg !14472
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14475
  %5 = load i8, i8* %4, align 1, !dbg !14476
  %6 = and i8 %5, 127, !dbg !14476
  store i8 %6, i8* %4, align 1, !dbg !14476
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #25, !dbg !14480
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14484
  br label %7, !dbg !14485

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14486, metadata !DIExpression()) #25, !dbg !14489
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14491
  %9 = load i8, i8* %8, align 1, !dbg !14492
  %10 = or i8 %9, -128, !dbg !14492
  store i8 %10, i8* %8, align 1, !dbg !14492
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14493, metadata !DIExpression()) #25, !dbg !14496
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14500, metadata !DIExpression()) #25, !dbg !14508
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14506, metadata !DIExpression()) #25, !dbg !14508
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14510
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14507, metadata !DIExpression()) #25, !dbg !14508
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14512
  br i1 %12, label %23, label %13, !dbg !14510

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14507, metadata !DIExpression()) #25, !dbg !14508
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14514
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14507, metadata !DIExpression()) #25, !dbg !14508
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #26, !dbg !14515
  %17 = icmp sgt i32 %16, 0, !dbg !14518
  br i1 %17, label %18, label %20, !dbg !14519

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14520
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #26, !dbg !14522
  br label %25, !dbg !14523

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #26, !dbg !14512
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14507, metadata !DIExpression()) #25, !dbg !14508
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14512
  br i1 %22, label %23, label %13, !dbg !14510, !llvm.loop !14524

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14526
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #26, !dbg !14527
  br label %25, !dbg !14528

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14529
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14530
  %28 = zext i1 %27 to i32, !dbg !14530
  tail call fastcc void @update_cache(i32 noundef %28) #27, !dbg !14531
  ret void, !dbg !14532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14535, metadata !DIExpression()), !dbg !14536
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #27, !dbg !14537
  ret i1 %2, !dbg !14538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14539 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14541, metadata !DIExpression()), !dbg !14543
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14542, metadata !DIExpression()), !dbg !14543
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14544
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #27, !dbg !14545
  ret void, !dbg !14546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14547 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14551, metadata !DIExpression()), !dbg !14552
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !14553
  br i1 %2, label %6, label %3, !dbg !14553

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14554
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14554
  br label %6, !dbg !14553

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14553
  ret %struct._dnode* %7, !dbg !14555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14556 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14560, metadata !DIExpression()), !dbg !14564
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14561, metadata !DIExpression()), !dbg !14564
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14565
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14565
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14562, metadata !DIExpression()), !dbg !14564
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14566
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14567
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14568
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14569
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14570
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14571
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14572
  ret void, !dbg !14573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14574 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14578, metadata !DIExpression()), !dbg !14580
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14579, metadata !DIExpression()), !dbg !14580
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14581
  br i1 %3, label %6, label %4, !dbg !14582

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !14583
  br label %6, !dbg !14582

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14582
  ret %struct._dnode* %7, !dbg !14584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14585 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14589, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14590, metadata !DIExpression()), !dbg !14592
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14593
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14593
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14591, metadata !DIExpression()), !dbg !14592
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14594
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14595
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14596
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14597
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14598
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14599
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14600
  ret void, !dbg !14601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14604, metadata !DIExpression()), !dbg !14606
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14607
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14614, metadata !DIExpression()) #25, !dbg !14616
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14617
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14618
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14618
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14605, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14619, metadata !DIExpression()) #25, !dbg !14625
  call void @llvm.dbg.value(metadata i32 %0, metadata !14624, metadata !DIExpression()) #25, !dbg !14625
  %6 = icmp eq i32 %0, 0, !dbg !14628
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14630
  br i1 %6, label %8, label %15, !dbg !14631

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #26, !dbg !14632
  br i1 %9, label %15, label %10, !dbg !14634

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !14635
  br i1 %11, label %15, label %12, !dbg !14637

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #26, !dbg !14638
  %14 = icmp eq i32 %13, 0, !dbg !14638
  br i1 %14, label %18, label %15, !dbg !14640

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !14641
  br i1 %16, label %18, label %17, !dbg !14644

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14645
  br label %18, !dbg !14647

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !14630
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14630
  ret void, !dbg !14648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !14649 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14653, metadata !DIExpression()), !dbg !14656
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14654, metadata !DIExpression()), !dbg !14656
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #27, !dbg !14657
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14655, metadata !DIExpression()), !dbg !14656
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14654, metadata !DIExpression()), !dbg !14656
  ret %struct.k_thread* %3, !dbg !14658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14659 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14661, metadata !DIExpression()), !dbg !14662
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14663
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14664
  %4 = xor i1 %3, true, !dbg !14665
  ret i1 %4, !dbg !14666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14667 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()), !dbg !14670
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14671
  %3 = load i16, i16* %2, align 2, !dbg !14671
  %4 = icmp ult i16 %3, 128, !dbg !14672
  %5 = zext i1 %4 to i32, !dbg !14672
  ret i32 %5, !dbg !14673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14674 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14680, metadata !DIExpression()), !dbg !14681
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14682
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !14683
  %4 = xor i1 %3, true, !dbg !14684
  ret i1 %4, !dbg !14685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14686 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14692, metadata !DIExpression()), !dbg !14693
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14694
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14694
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14695
  ret i1 %4, !dbg !14696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14697 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14699, metadata !DIExpression()), !dbg !14701
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14700, metadata !DIExpression()), !dbg !14701
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14702
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14702
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14703
  br i1 %5, label %9, label %6, !dbg !14704

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14705
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14705
  br label %9, !dbg !14704

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14704
  ret %struct._dnode* %10, !dbg !14706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14707 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14711, metadata !DIExpression()), !dbg !14712
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14713
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14713
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14714
  ret i1 %4, !dbg !14715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !14716 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14720, metadata !DIExpression()), !dbg !14723
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14724
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14724
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14721, metadata !DIExpression()), !dbg !14723
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14725
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14725
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14722, metadata !DIExpression()), !dbg !14723
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14726
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14727
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14728
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14729
  tail call fastcc void @sys_dnode_init.134(%struct._dnode* noundef %0) #27, !dbg !14730
  ret void, !dbg !14731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.134(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14732 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14734, metadata !DIExpression()), !dbg !14735
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14736
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14737
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14738
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14739
  ret void, !dbg !14740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14741 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14745, metadata !DIExpression()), !dbg !14747
  call void @llvm.dbg.value(metadata i32 128, metadata !14746, metadata !DIExpression()), !dbg !14747
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14748
  %3 = load i8, i8* %2, align 1, !dbg !14748
  %4 = icmp slt i8 %3, 0, !dbg !14749
  ret i1 %4, !dbg !14750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14755, metadata !DIExpression()), !dbg !14757
  call void @llvm.dbg.value(metadata i32 %1, metadata !14756, metadata !DIExpression()), !dbg !14757
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !14758
  ret i1 %3, !dbg !14759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14762, metadata !DIExpression()), !dbg !14763
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14764
  ret i1 %2, !dbg !14765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14768, metadata !DIExpression()), !dbg !14770
  call void @llvm.dbg.value(metadata i32 %1, metadata !14769, metadata !DIExpression()), !dbg !14770
  %3 = icmp slt i32 %0, %1, !dbg !14771
  ret i1 %3, !dbg !14772
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14773 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14775, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i32 0, metadata !14776, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !14781
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14783, !srcloc !14315
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14783
  call void @llvm.dbg.value(metadata i32 %3, metadata !14312, metadata !DIExpression()) #25, !dbg !14785
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !14785
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !14781
  call void @llvm.dbg.value(metadata i32 %3, metadata !14778, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i32 undef, metadata !14776, metadata !DIExpression()), !dbg !14780
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %3, metadata !14327, metadata !DIExpression()) #25, !dbg !14791
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !14791
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()) #25, !dbg !14793
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14795, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 1, metadata !14776, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i32 undef, metadata !14776, metadata !DIExpression()), !dbg !14780
  ret void, !dbg !14796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14797 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14799, metadata !DIExpression()), !dbg !14800
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14801
  br i1 %2, label %24, label %3, !dbg !14803

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !14804
  br i1 %4, label %5, label %24, !dbg !14805

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14486, metadata !DIExpression()) #25, !dbg !14806
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14809
  %7 = load i8, i8* %6, align 1, !dbg !14810
  %8 = or i8 %7, -128, !dbg !14810
  store i8 %8, i8* %6, align 1, !dbg !14810
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14493, metadata !DIExpression()) #25, !dbg !14811
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14500, metadata !DIExpression()) #25, !dbg !14813
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14506, metadata !DIExpression()) #25, !dbg !14813
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14815
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14507, metadata !DIExpression()) #25, !dbg !14813
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14816
  br i1 %10, label %21, label %11, !dbg !14815

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14507, metadata !DIExpression()) #25, !dbg !14813
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14817
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14507, metadata !DIExpression()) #25, !dbg !14813
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #26, !dbg !14818
  %15 = icmp sgt i32 %14, 0, !dbg !14819
  br i1 %15, label %16, label %18, !dbg !14820

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14821
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #26, !dbg !14822
  br label %23, !dbg !14823

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #26, !dbg !14816
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14507, metadata !DIExpression()) #25, !dbg !14813
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14816
  br i1 %20, label %21, label %11, !dbg !14815, !llvm.loop !14824

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14826
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #26, !dbg !14827
  br label %23, !dbg !14828

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !14829
  br label %24, !dbg !14830

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14832 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14834, metadata !DIExpression()), !dbg !14835
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !14836
  br i1 %2, label %6, label %3, !dbg !14837

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !14838
  %5 = xor i1 %4, true, !dbg !14837
  br label %6, !dbg !14837

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14842, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.value(metadata i32 0, metadata !14843, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !14848
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14850, !srcloc !14315
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14850
  call void @llvm.dbg.value(metadata i32 %3, metadata !14312, metadata !DIExpression()) #25, !dbg !14852
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !14852
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !14848
  call void @llvm.dbg.value(metadata i32 %3, metadata !14845, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.value(metadata i32 undef, metadata !14843, metadata !DIExpression()), !dbg !14847
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !14853
  call void @llvm.dbg.value(metadata i32 %3, metadata !14327, metadata !DIExpression()) #25, !dbg !14856
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !14856
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()) #25, !dbg !14858
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14860, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 1, metadata !14843, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.value(metadata i32 undef, metadata !14843, metadata !DIExpression()), !dbg !14847
  ret void, !dbg !14861
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14862 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14864, metadata !DIExpression()), !dbg !14866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !14867
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14869, !srcloc !14315
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14869
  call void @llvm.dbg.value(metadata i32 %3, metadata !14312, metadata !DIExpression()) #25, !dbg !14871
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !14871
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !14867
  call void @llvm.dbg.value(metadata i32 %3, metadata !14865, metadata !DIExpression()), !dbg !14866
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !14872
  br i1 %4, label %5, label %6, !dbg !14874

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14327, metadata !DIExpression()) #25, !dbg !14875
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !14875
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()) #25, !dbg !14878
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14880, !srcloc !14341
  br label %8, !dbg !14881

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.139(%struct.k_thread* noundef %0) #27, !dbg !14882
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !14883
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14884
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !14884
  br label %8, !dbg !14885

8:                                                ; preds = %6, %5
  ret void, !dbg !14885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14886 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14888, metadata !DIExpression()), !dbg !14889
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14890
  %3 = load i8, i8* %2, align 1, !dbg !14890
  %4 = and i8 %3, 4, !dbg !14891
  %5 = icmp eq i8 %4, 0, !dbg !14892
  ret i1 %5, !dbg !14893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.139(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !14894 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14896, metadata !DIExpression()), !dbg !14897
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14898
  %3 = load i8, i8* %2, align 1, !dbg !14899
  %4 = and i8 %3, -5, !dbg !14899
  store i8 %4, i8* %2, align 1, !dbg !14899
  ret void, !dbg !14900
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14901 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14904, metadata !DIExpression()), !dbg !14905
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14903, metadata !DIExpression()), !dbg !14905
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !14906
  br i1 %4, label %5, label %9, !dbg !14908

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !14909
  br i1 %6, label %7, label %9, !dbg !14910

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14911, metadata !DIExpression()) #25, !dbg !14917
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14916, metadata !DIExpression()) #25, !dbg !14917
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !14920
  br label %10, !dbg !14921

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14327, metadata !DIExpression()) #25, !dbg !14922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !14922
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()) #25, !dbg !14925
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14927, !srcloc !14341
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14933, metadata !DIExpression()), !dbg !14934
  call void @llvm.dbg.value(metadata i32 %0, metadata !14935, metadata !DIExpression()), !dbg !14940
  %2 = icmp eq i32 %0, 0, !dbg !14942
  br i1 %2, label %3, label %6, !dbg !14943

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14944, !srcloc !14951
  call void @llvm.dbg.value(metadata i32 %4, metadata !14947, metadata !DIExpression()) #25, !dbg !14952
  %5 = icmp eq i32 %4, 0, !dbg !14953
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14934
  ret i1 %7, !dbg !14954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14955 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14958
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14957, metadata !DIExpression()), !dbg !14959
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14960
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14961
  ret i1 %3, !dbg !14962
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14965, metadata !DIExpression()), !dbg !14967
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !14968
  call void @llvm.dbg.value(metadata i32 %2, metadata !14966, metadata !DIExpression()), !dbg !14967
  ret i32 %2, !dbg !14969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14972, metadata !DIExpression()), !dbg !14976
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !14977
  call void @llvm.dbg.value(metadata i32 0, metadata !14973, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !14979
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14981, !srcloc !14315
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14981
  call void @llvm.dbg.value(metadata i32 %4, metadata !14312, metadata !DIExpression()) #25, !dbg !14983
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !14983
  call void @llvm.dbg.value(metadata i32 %4, metadata !14306, metadata !DIExpression()) #25, !dbg !14979
  call void @llvm.dbg.value(metadata i32 %4, metadata !14975, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata i32 undef, metadata !14973, metadata !DIExpression()), !dbg !14978
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14984
  br i1 %5, label %6, label %10, !dbg !14988

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14469, metadata !DIExpression()) #25, !dbg !14989
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14992
  %8 = load i8, i8* %7, align 1, !dbg !14993
  %9 = and i8 %8, 127, !dbg !14993
  store i8 %9, i8* %7, align 1, !dbg !14993
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #25, !dbg !14994
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14996
  br label %10, !dbg !14997

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !14998
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14999
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15000
  %13 = zext i1 %12 to i32, !dbg !15000
  tail call fastcc void @update_cache(i32 noundef %13) #27, !dbg !15001
  call void @llvm.dbg.value(metadata i32 %4, metadata !14327, metadata !DIExpression()) #25, !dbg !15002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15002
  call void @llvm.dbg.value(metadata i32 %4, metadata !14335, metadata !DIExpression()) #25, !dbg !15004
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15006, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 1, metadata !14973, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata i32 undef, metadata !14973, metadata !DIExpression()), !dbg !14978
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15007
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15009
  br i1 %15, label %16, label %17, !dbg !15010

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15011
  br label %17, !dbg !15013

17:                                               ; preds = %16, %10
  ret void, !dbg !15014
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15015 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15017, metadata !DIExpression()), !dbg !15018
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15019
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15020
  ret i32 %3, !dbg !15021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15022 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15024, metadata !DIExpression()), !dbg !15025
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15026
  %3 = load i8, i8* %2, align 1, !dbg !15027
  %4 = or i8 %3, 16, !dbg !15027
  store i8 %4, i8* %2, align 1, !dbg !15027
  ret void, !dbg !15028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15029 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15030, !srcloc !14315
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15030
  call void @llvm.dbg.value(metadata i32 %2, metadata !14312, metadata !DIExpression()) #25, !dbg !15032
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15032
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !15033
  ret void, !dbg !15034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15037, metadata !DIExpression()), !dbg !15038
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !15039
  br i1 %2, label %3, label %5, !dbg !15041

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15042
  br label %6, !dbg !15044

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14335, metadata !DIExpression()) #25, !dbg !15045
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !15048, !srcloc !14341
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15050 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15052, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15055
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15057, !srcloc !14315
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15057
  call void @llvm.dbg.value(metadata i32 %3, metadata !14312, metadata !DIExpression()) #25, !dbg !15059
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15059
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !15055
  call void @llvm.dbg.value(metadata i32 %3, metadata !15053, metadata !DIExpression()), !dbg !15054
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !15060
  br i1 %4, label %6, label %5, !dbg !15062

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14327, metadata !DIExpression()) #25, !dbg !15063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15063
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()) #25, !dbg !15066
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15068, !srcloc !14341
  br label %8, !dbg !15069

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !15070
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15071
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15072
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !15072
  br label %8, !dbg !15073

8:                                                ; preds = %6, %5
  ret void, !dbg !15073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15074 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15076, metadata !DIExpression()), !dbg !15077
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15078
  %3 = load i8, i8* %2, align 1, !dbg !15078
  %4 = and i8 %3, 16, !dbg !15079
  %5 = icmp ne i8 %4, 0, !dbg !15080
  ret i1 %5, !dbg !15081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15082 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15084, metadata !DIExpression()), !dbg !15085
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15086
  %3 = load i8, i8* %2, align 1, !dbg !15087
  %4 = and i8 %3, -17, !dbg !15087
  store i8 %4, i8* %2, align 1, !dbg !15087
  ret void, !dbg !15088
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15089 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15099, metadata !DIExpression()), !dbg !15103
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15097, metadata !DIExpression()), !dbg !15103
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15098, metadata !DIExpression()), !dbg !15103
  call void @llvm.dbg.value(metadata i32 0, metadata !15100, metadata !DIExpression()), !dbg !15104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15105
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15107, !srcloc !14315
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15107
  call void @llvm.dbg.value(metadata i32 %5, metadata !14312, metadata !DIExpression()) #25, !dbg !15109
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15109
  call void @llvm.dbg.value(metadata i32 %5, metadata !14306, metadata !DIExpression()) #25, !dbg !15105
  call void @llvm.dbg.value(metadata i32 %5, metadata !15102, metadata !DIExpression()), !dbg !15104
  call void @llvm.dbg.value(metadata i32 undef, metadata !15100, metadata !DIExpression()), !dbg !15104
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15110
  call void @llvm.dbg.value(metadata i32 %5, metadata !14327, metadata !DIExpression()) #25, !dbg !15113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15113
  call void @llvm.dbg.value(metadata i32 %5, metadata !14335, metadata !DIExpression()) #25, !dbg !15115
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15117, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 1, metadata !15100, metadata !DIExpression()), !dbg !15104
  call void @llvm.dbg.value(metadata i32 undef, metadata !15100, metadata !DIExpression()), !dbg !15104
  ret void, !dbg !15118
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15119 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15123, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15121, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15122, metadata !DIExpression()), !dbg !15124
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #27, !dbg !15125
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !15126
  ret void, !dbg !15127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15128 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15132, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15133, metadata !DIExpression()), !dbg !15134
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !15135
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !15136
  %3 = icmp eq %union.anon* %1, null, !dbg !15137
  br i1 %3, label %21, label %4, !dbg !15139

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15140
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15142
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15143
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14500, metadata !DIExpression()) #25, !dbg !15144
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14506, metadata !DIExpression()) #25, !dbg !15144
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #26, !dbg !15146
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14507, metadata !DIExpression()) #25, !dbg !15144
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15147
  br i1 %8, label %19, label %9, !dbg !15146

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14507, metadata !DIExpression()) #25, !dbg !15144
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15148
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14507, metadata !DIExpression()) #25, !dbg !15144
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #26, !dbg !15149
  %13 = icmp sgt i32 %12, 0, !dbg !15150
  br i1 %13, label %14, label %16, !dbg !15151

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15152
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #26, !dbg !15153
  br label %21, !dbg !15154

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #26, !dbg !15147
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14507, metadata !DIExpression()) #25, !dbg !15144
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15147
  br i1 %18, label %19, label %9, !dbg !15146, !llvm.loop !15155

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15157
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #26, !dbg !15158
  br label %21, !dbg !15159

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15161 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15166, metadata !DIExpression()), !dbg !15167
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15165, metadata !DIExpression()), !dbg !15167
  %4 = icmp eq i64 %3, -1, !dbg !15168
  br i1 %4, label %6, label %5, !dbg !15170

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.142(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !15171
  br label %6, !dbg !15173

6:                                                ; preds = %5, %2
  ret void, !dbg !15174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.142(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15175 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15178, metadata !DIExpression()), !dbg !15179
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15177, metadata !DIExpression()), !dbg !15179
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15180
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15181
  ret void, !dbg !15182
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15183 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15185, metadata !DIExpression()), !dbg !15193
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15194
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15194
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15186, metadata !DIExpression()), !dbg !15193
  call void @llvm.dbg.value(metadata i32 0, metadata !15187, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15196
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15198, !srcloc !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14312, metadata !DIExpression()) #25, !dbg !15200
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15200
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15196
  call void @llvm.dbg.value(metadata i32 undef, metadata !15189, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !15187, metadata !DIExpression()), !dbg !15195
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15201
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15202
  %7 = load i8, i8* %6, align 1, !dbg !15202
  %8 = and i8 %7, 40, !dbg !15203
  %9 = icmp eq i8 %8, 0, !dbg !15203
  call void @llvm.dbg.value(metadata i1 %9, metadata !15190, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15204
  br i1 %9, label %10, label %17, !dbg !15205

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15206
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15206
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15206
  %14 = icmp eq %union.anon* %13, null, !dbg !15210
  br i1 %14, label %16, label %15, !dbg !15211

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !15212
  br label %16, !dbg !15214

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.139(%struct.k_thread* noundef nonnull %3) #27, !dbg !15215
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !15216
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !15217
  br label %17, !dbg !15218

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15198
  call void @llvm.dbg.value(metadata i32 %18, metadata !14312, metadata !DIExpression()) #25, !dbg !15200
  call void @llvm.dbg.value(metadata i32 %18, metadata !14306, metadata !DIExpression()) #25, !dbg !15196
  call void @llvm.dbg.value(metadata i32 %18, metadata !15189, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !14327, metadata !DIExpression()) #25, !dbg !15219
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15219
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()) #25, !dbg !15221
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15223, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 1, metadata !15187, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !15187, metadata !DIExpression()), !dbg !15195
  ret void, !dbg !15224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15225 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15227, metadata !DIExpression()), !dbg !15228
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15229
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !15230
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15231
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15232
  ret void, !dbg !15233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15236, metadata !DIExpression()), !dbg !15237
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15238
  %3 = load i8, i8* %2, align 1, !dbg !15239
  %4 = and i8 %3, -3, !dbg !15239
  store i8 %4, i8* %2, align 1, !dbg !15239
  ret void, !dbg !15240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15241 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15243, metadata !DIExpression()), !dbg !15244
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15245
  br i1 %2, label %3, label %7, !dbg !15247

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14469, metadata !DIExpression()) #25, !dbg !15248
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15251
  %5 = load i8, i8* %4, align 1, !dbg !15252
  %6 = and i8 %5, 127, !dbg !15252
  store i8 %6, i8* %4, align 1, !dbg !15252
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #25, !dbg !15253
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15255
  br label %7, !dbg !15256

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15257
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15258
  %10 = zext i1 %9 to i32, !dbg !15258
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !15259
  ret void, !dbg !15260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15261 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15263, metadata !DIExpression()), !dbg !15264
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15265
  %3 = load i8, i8* %2, align 1, !dbg !15266
  %4 = or i8 %3, 2, !dbg !15266
  store i8 %4, i8* %2, align 1, !dbg !15266
  ret void, !dbg !15267
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15268 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15270, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i32 0, metadata !15271, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15276
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15278, !srcloc !14315
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15278
  call void @llvm.dbg.value(metadata i32 %3, metadata !14312, metadata !DIExpression()) #25, !dbg !15280
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15280
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !15276
  call void @llvm.dbg.value(metadata i32 %3, metadata !15273, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata i32 undef, metadata !15271, metadata !DIExpression()), !dbg !15275
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !15281
  call void @llvm.dbg.value(metadata i32 %3, metadata !14327, metadata !DIExpression()) #25, !dbg !15284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15284
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()) #25, !dbg !15286
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15288, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 1, metadata !15271, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata i32 undef, metadata !15271, metadata !DIExpression()), !dbg !15275
  ret void, !dbg !15289
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15290 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15296, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata i32 %0, metadata !15294, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15295, metadata !DIExpression()), !dbg !15301
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15302
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15303
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15304
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15305
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15306
  call void @llvm.dbg.value(metadata i32 %6, metadata !15297, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata i32 0, metadata !15298, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15308
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15310, !srcloc !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14312, metadata !DIExpression()) #25, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15308
  call void @llvm.dbg.value(metadata i32 undef, metadata !15300, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !15298, metadata !DIExpression()), !dbg !15307
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15313
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15317
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15318
  br i1 %10, label %11, label %12, !dbg !15319

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15320
  br label %12, !dbg !15322

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15310
  call void @llvm.dbg.value(metadata i32 %13, metadata !14312, metadata !DIExpression()) #25, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %13, metadata !14306, metadata !DIExpression()) #25, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %13, metadata !15300, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !14327, metadata !DIExpression()) #25, !dbg !15323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15323
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()) #25, !dbg !15325
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !15327, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 1, metadata !15298, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !15298, metadata !DIExpression()), !dbg !15307
  ret i32 %6, !dbg !15328
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15329 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15334, metadata !DIExpression()), !dbg !15337
  call void @llvm.dbg.value(metadata i64 undef, metadata !15336, metadata !DIExpression()), !dbg !15337
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15333, metadata !DIExpression()), !dbg !15337
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15335, metadata !DIExpression()), !dbg !15337
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15338
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15339
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15340
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15342, !srcloc !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14312, metadata !DIExpression()) #25, !dbg !15344
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15344
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15340
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15345
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !15346
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14911, metadata !DIExpression()) #25, !dbg !15347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14916, metadata !DIExpression()) #25, !dbg !15347
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #26, !dbg !15349
  ret i32 %9, !dbg !15350
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15351 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15355, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15356, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata i32 0, metadata !15357, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15362
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15364, !srcloc !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14312, metadata !DIExpression()) #25, !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15362
  call void @llvm.dbg.value(metadata i32 undef, metadata !15359, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15356, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata i32 undef, metadata !15357, metadata !DIExpression()), !dbg !15361
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15367
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15356, metadata !DIExpression()), !dbg !15360
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15370
  br i1 %5, label %7, label %6, !dbg !15372

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15373
  br label %7, !dbg !15375

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15364
  call void @llvm.dbg.value(metadata i32 %8, metadata !14312, metadata !DIExpression()) #25, !dbg !15366
  call void @llvm.dbg.value(metadata i32 %8, metadata !14306, metadata !DIExpression()) #25, !dbg !15362
  call void @llvm.dbg.value(metadata i32 %8, metadata !15359, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14327, metadata !DIExpression()) #25, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()) #25, !dbg !15378
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15380, !srcloc !14341
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15356, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata i32 undef, metadata !15357, metadata !DIExpression()), !dbg !15361
  ret %struct.k_thread* %4, !dbg !15381
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15382 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15384, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15385, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i32 0, metadata !15386, metadata !DIExpression()), !dbg !15390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15391
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15393, !srcloc !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14312, metadata !DIExpression()) #25, !dbg !15395
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15395
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15391
  call void @llvm.dbg.value(metadata i32 undef, metadata !15388, metadata !DIExpression()), !dbg !15390
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15385, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !15386, metadata !DIExpression()), !dbg !15390
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15385, metadata !DIExpression()), !dbg !15389
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15399
  br i1 %5, label %8, label %6, !dbg !15401

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15402
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15404
  br label %8, !dbg !15405

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15393
  call void @llvm.dbg.value(metadata i32 %9, metadata !14312, metadata !DIExpression()) #25, !dbg !15395
  call void @llvm.dbg.value(metadata i32 %9, metadata !14306, metadata !DIExpression()) #25, !dbg !15391
  call void @llvm.dbg.value(metadata i32 %9, metadata !15388, metadata !DIExpression()), !dbg !15390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14327, metadata !DIExpression()) #25, !dbg !15406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15406
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()) #25, !dbg !15408
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15410, !srcloc !14341
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15385, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !15386, metadata !DIExpression()), !dbg !15390
  ret %struct.k_thread* %4, !dbg !15411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15414, metadata !DIExpression()), !dbg !15415
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15270, metadata !DIExpression()) #25, !dbg !15416
  call void @llvm.dbg.value(metadata i32 0, metadata !15271, metadata !DIExpression()) #25, !dbg !15418
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15419
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15421, !srcloc !14315
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15421
  call void @llvm.dbg.value(metadata i32 %3, metadata !14312, metadata !DIExpression()) #25, !dbg !15423
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15423
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !15419
  call void @llvm.dbg.value(metadata i32 %3, metadata !15273, metadata !DIExpression()) #25, !dbg !15418
  call void @llvm.dbg.value(metadata i32 undef, metadata !15271, metadata !DIExpression()) #25, !dbg !15418
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15424
  call void @llvm.dbg.value(metadata i32 %3, metadata !14327, metadata !DIExpression()) #25, !dbg !15425
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15425
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()) #25, !dbg !15427
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15429, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 1, metadata !15271, metadata !DIExpression()) #25, !dbg !15418
  call void @llvm.dbg.value(metadata i32 undef, metadata !15271, metadata !DIExpression()) #25, !dbg !15418
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15430
  ret void, !dbg !15431
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15434, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.value(metadata i32 %1, metadata !15435, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.value(metadata i8 0, metadata !15436, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.value(metadata i32 0, metadata !15437, metadata !DIExpression()), !dbg !15441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15442
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15444, !srcloc !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14312, metadata !DIExpression()) #25, !dbg !15446
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15446
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15442
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()), !dbg !15441
  call void @llvm.dbg.value(metadata i8 poison, metadata !15436, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.value(metadata i32 undef, metadata !15437, metadata !DIExpression()), !dbg !15441
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !15447
  call void @llvm.dbg.value(metadata i1 %6, metadata !15436, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15440
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15450

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14469, metadata !DIExpression()) #25, !dbg !15451
  %11 = load i8, i8* %4, align 1, !dbg !15457
  %12 = and i8 %11, 127, !dbg !15457
  store i8 %12, i8* %4, align 1, !dbg !15457
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #25, !dbg !15458
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15460
  store i8 %9, i8* %8, align 2, !dbg !15461
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14486, metadata !DIExpression()) #25, !dbg !15462
  %13 = load i8, i8* %4, align 1, !dbg !15464
  %14 = or i8 %13, -128, !dbg !15464
  store i8 %14, i8* %4, align 1, !dbg !15464
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14493, metadata !DIExpression()) #25, !dbg !15465
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14500, metadata !DIExpression()) #25, !dbg !15467
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14506, metadata !DIExpression()) #25, !dbg !15467
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15469
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14507, metadata !DIExpression()) #25, !dbg !15467
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15470
  br i1 %16, label %26, label %17, !dbg !15469

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14507, metadata !DIExpression()) #25, !dbg !15467
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15471
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14507, metadata !DIExpression()) #25, !dbg !15467
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #26, !dbg !15472
  %21 = icmp sgt i32 %20, 0, !dbg !15473
  br i1 %21, label %22, label %23, !dbg !15474

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #26, !dbg !15475
  br label %27, !dbg !15476

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #26, !dbg !15470
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14507, metadata !DIExpression()) #25, !dbg !15467
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15470
  br i1 %25, label %26, label %17, !dbg !15469, !llvm.loop !15477

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #26, !dbg !15479
  br label %27, !dbg !15480

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !15481
  br label %29, !dbg !15482

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15483
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15444
  call void @llvm.dbg.value(metadata i32 %30, metadata !14312, metadata !DIExpression()) #25, !dbg !15446
  call void @llvm.dbg.value(metadata i32 %30, metadata !14306, metadata !DIExpression()) #25, !dbg !15442
  call void @llvm.dbg.value(metadata i32 %30, metadata !15439, metadata !DIExpression()), !dbg !15441
  call void @llvm.dbg.value(metadata i32 undef, metadata !14327, metadata !DIExpression()) #25, !dbg !15485
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15485
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()) #25, !dbg !15487
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !15489, !srcloc !14341
  call void @llvm.dbg.value(metadata i8 poison, metadata !15436, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.value(metadata i32 undef, metadata !15437, metadata !DIExpression()), !dbg !15441
  ret i1 %6, !dbg !15490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15495, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.value(metadata i32 %1, metadata !15496, metadata !DIExpression()), !dbg !15498
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !15499
  call void @llvm.dbg.value(metadata i1 %3, metadata !15497, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15498
  br i1 %3, label %4, label %12, !dbg !15500

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15502
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15503
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15503
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15503
  %9 = load i8, i8* %8, align 1, !dbg !15503
  %10 = icmp eq i8 %9, 0, !dbg !15504
  br i1 %10, label %11, label %12, !dbg !15505

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15506
  br label %12, !dbg !15508

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15509
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15510 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15512, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15516
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15518, !srcloc !14315
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15518
  call void @llvm.dbg.value(metadata i32 %2, metadata !14312, metadata !DIExpression()) #25, !dbg !15520
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15520
  call void @llvm.dbg.value(metadata i32 %2, metadata !14306, metadata !DIExpression()) #25, !dbg !15516
  call void @llvm.dbg.value(metadata i32 %2, metadata !15514, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata i32 undef, metadata !15512, metadata !DIExpression()), !dbg !15515
  tail call fastcc void @z_sched_lock() #27, !dbg !15521
  call void @llvm.dbg.value(metadata i32 %2, metadata !14327, metadata !DIExpression()) #25, !dbg !15524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15524
  call void @llvm.dbg.value(metadata i32 %2, metadata !14335, metadata !DIExpression()) #25, !dbg !15526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15528, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 1, metadata !15512, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata i32 undef, metadata !15512, metadata !DIExpression()), !dbg !15515
  ret void, !dbg !15529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15530 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15531
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15532
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15532
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15532
  %5 = load i8, i8* %4, align 1, !dbg !15533
  %6 = add i8 %5, -1, !dbg !15533
  store i8 %6, i8* %4, align 1, !dbg !15533
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15534, !srcloc !15536
  ret void, !dbg !15537
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15538 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15540, metadata !DIExpression()), !dbg !15543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15544
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15546, !srcloc !14315
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15546
  call void @llvm.dbg.value(metadata i32 %2, metadata !14312, metadata !DIExpression()) #25, !dbg !15548
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15548
  call void @llvm.dbg.value(metadata i32 %2, metadata !14306, metadata !DIExpression()) #25, !dbg !15544
  call void @llvm.dbg.value(metadata i32 %2, metadata !15542, metadata !DIExpression()), !dbg !15543
  call void @llvm.dbg.value(metadata i32 undef, metadata !15540, metadata !DIExpression()), !dbg !15543
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15549
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15552
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15552
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15552
  %7 = load i8, i8* %6, align 1, !dbg !15553
  %8 = add i8 %7, 1, !dbg !15553
  store i8 %8, i8* %6, align 1, !dbg !15553
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !15554
  call void @llvm.dbg.value(metadata i32 %2, metadata !14327, metadata !DIExpression()) #25, !dbg !15555
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15555
  call void @llvm.dbg.value(metadata i32 %2, metadata !14335, metadata !DIExpression()) #25, !dbg !15557
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15559, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 1, metadata !15540, metadata !DIExpression()), !dbg !15543
  call void @llvm.dbg.value(metadata i32 undef, metadata !15540, metadata !DIExpression()), !dbg !15543
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15560
  ret void, !dbg !15561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15562 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15563
  ret %struct.k_thread* %1, !dbg !15564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15565 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15569, metadata !DIExpression()), !dbg !15574
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15570, metadata !DIExpression()), !dbg !15574
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15575
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15571, metadata !DIExpression()), !dbg !15574
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15576
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15572, metadata !DIExpression()), !dbg !15574
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !15577
  call void @llvm.dbg.value(metadata i32 %5, metadata !15573, metadata !DIExpression()), !dbg !15574
  %6 = icmp sgt i32 %5, 0, !dbg !15578
  br i1 %6, label %17, label %7, !dbg !15580

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15581
  br i1 %8, label %17, label %9, !dbg !15583

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15584
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15584
  %12 = load i32, i32* %11, align 8, !dbg !15584
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15586
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15586
  %15 = load i32, i32* %14, align 8, !dbg !15586
  %16 = icmp ult i32 %12, %15, !dbg !15587
  br label %17, !dbg !15588

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15589
  ret i1 %18, !dbg !15590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15591 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15608, metadata !DIExpression()), !dbg !15623
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15609, metadata !DIExpression()), !dbg !15623
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15624
  %5 = load i32, i32* %4, align 4, !dbg !15625
  %6 = add nsw i32 %5, 1, !dbg !15625
  store i32 %6, i32* %4, align 4, !dbg !15625
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15626
  store i32 %5, i32* %7, align 8, !dbg !15627
  %8 = load i32, i32* %4, align 4, !dbg !15628
  %9 = icmp eq i32 %8, 0, !dbg !15629
  br i1 %9, label %10, label %32, !dbg !15630

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15631
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15631
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15611, metadata !DIExpression()), !dbg !15631
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15631
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15631
  %14 = load i32, i32* %13, align 4, !dbg !15631
  %15 = shl i32 %14, 2, !dbg !15631
  %16 = alloca i8, i32 %15, align 8, !dbg !15631
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15631
  store i8* %16, i8** %17, align 4, !dbg !15631
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15631
  %19 = alloca i8, i32 %14, align 8, !dbg !15631
  store i8* %19, i8** %18, align 4, !dbg !15631
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15631
  store i32 -1, i32* %20, align 4, !dbg !15631
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15632
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15620, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15610, metadata !DIExpression()), !dbg !15623
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !15634
  br i1 %22, label %23, label %24, !dbg !15631

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15634
  br label %32, !dbg !15635

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !15610, metadata !DIExpression()), !dbg !15623
  %26 = load i32, i32* %4, align 4, !dbg !15636
  %27 = add nsw i32 %26, 1, !dbg !15636
  store i32 %27, i32* %4, align 4, !dbg !15636
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !15638
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !15638
  store i32 %26, i32* %29, align 8, !dbg !15639
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15632
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15620, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15610, metadata !DIExpression()), !dbg !15623
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !15634
  br i1 %31, label %23, label %24, !dbg !15631, !llvm.loop !15640

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15642
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15643
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #26, !dbg !15644
  ret void, !dbg !15645
}

; Function Attrs: optsize
declare !dbg !15646 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15651 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15654 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15656, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15657, metadata !DIExpression()), !dbg !15658
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15659
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15660
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #26, !dbg !15661
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15662
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15662
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !15664
  br i1 %7, label %8, label %10, !dbg !15665

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15666
  store i32 0, i32* %9, align 4, !dbg !15668
  br label %10, !dbg !15669

10:                                               ; preds = %8, %2
  ret void, !dbg !15670
}

; Function Attrs: optsize
declare !dbg !15671 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15672 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15676, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15677, metadata !DIExpression()), !dbg !15679
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15680
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !15681
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15678, metadata !DIExpression()), !dbg !15679
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15677, metadata !DIExpression()), !dbg !15679
  ret %struct.k_thread* %4, !dbg !15682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15683 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15687, metadata !DIExpression()), !dbg !15688
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !15689
  ret %struct.rbnode* %2, !dbg !15690
}

; Function Attrs: optsize
declare !dbg !15691 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15694 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15706, metadata !DIExpression()), !dbg !15710
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15711
  %3 = load i32, i32* %2, align 4, !dbg !15711
  %4 = icmp eq i32 %3, 0, !dbg !15713
  br i1 %4, label %10, label %5, !dbg !15714

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15707, metadata !DIExpression()), !dbg !15710
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15715, !range !3789
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15716
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15708, metadata !DIExpression()), !dbg !15710
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #27, !dbg !15717
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15709, metadata !DIExpression()), !dbg !15710
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15707, metadata !DIExpression()), !dbg !15710
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15710
  ret %struct.k_thread* %11, !dbg !15718
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15719 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15723, metadata !DIExpression()), !dbg !15726
  call void @llvm.dbg.value(metadata i32 0, metadata !15724, metadata !DIExpression()), !dbg !15726
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15727
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15725, metadata !DIExpression()), !dbg !15726
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15728
  br i1 %3, label %8, label %4, !dbg !15729

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15730
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15732
  call void @llvm.dbg.value(metadata i32 1, metadata !15724, metadata !DIExpression()), !dbg !15726
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15727
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15725, metadata !DIExpression()), !dbg !15726
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15728
  br i1 %7, label %8, label %4, !dbg !15729, !llvm.loop !15733

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15726
  ret i32 %9, !dbg !15735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !15736 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15738, metadata !DIExpression()), !dbg !15739
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15740
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !15741
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15742
  ret %struct.k_thread* %4, !dbg !15743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15744 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15753, metadata !DIExpression()), !dbg !15754
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15755
  tail call fastcc void @sys_dlist_init.153(%struct._dnode* noundef nonnull %2) #27, !dbg !15756
  ret void, !dbg !15757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.153(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15758 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15762, metadata !DIExpression()), !dbg !15763
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15764
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15765
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15766
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15767
  ret void, !dbg !15768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15769 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !15770
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !15771
  ret void, !dbg !15772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15773 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15778, metadata !DIExpression()), !dbg !15779
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15780
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15780
  %4 = load i8, i8* %3, align 2, !dbg !15780
  %5 = sext i8 %4 to i32, !dbg !15781
  ret i32 %5, !dbg !15782
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15783 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15787, metadata !DIExpression()), !dbg !15790
  call void @llvm.dbg.value(metadata i32 %1, metadata !15788, metadata !DIExpression()), !dbg !15790
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15789, metadata !DIExpression()), !dbg !15790
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !15791
  ret void, !dbg !15792
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15793 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !15794
  br i1 %1, label %8, label %2, !dbg !15795

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !15796
  br i1 %3, label %8, label %4, !dbg !15797

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15798
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !15799
  %7 = xor i1 %6, true, !dbg !15797
  br label %8, !dbg !15797

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15801 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15802, !range !6264
  %2 = icmp eq i8 %1, 0, !dbg !15802
  ret i1 %2, !dbg !15803
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15804 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15807
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15809, !srcloc !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14312, metadata !DIExpression()) #25, !dbg !15811
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15811
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15807
  call void @llvm.dbg.value(metadata i32 undef, metadata !15806, metadata !DIExpression()), !dbg !15812
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15813
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14469, metadata !DIExpression()) #25, !dbg !15816
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15818
  %4 = load i8, i8* %3, align 1, !dbg !15819
  %5 = and i8 %4, 127, !dbg !15819
  store i8 %5, i8* %3, align 1, !dbg !15819
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14477, metadata !DIExpression()) #25, !dbg !15820
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #26, !dbg !15822
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15823
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14486, metadata !DIExpression()) #25, !dbg !15824
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15826
  %8 = load i8, i8* %7, align 1, !dbg !15827
  %9 = or i8 %8, -128, !dbg !15827
  store i8 %9, i8* %7, align 1, !dbg !15827
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14493, metadata !DIExpression()) #25, !dbg !15828
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14500, metadata !DIExpression()) #25, !dbg !15830
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14506, metadata !DIExpression()) #25, !dbg !15830
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15832
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14507, metadata !DIExpression()) #25, !dbg !15830
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15833
  br i1 %11, label %22, label %12, !dbg !15832

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14507, metadata !DIExpression()) #25, !dbg !15830
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15834
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14507, metadata !DIExpression()) #25, !dbg !15830
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #26, !dbg !15835
  %16 = icmp sgt i32 %15, 0, !dbg !15836
  br i1 %16, label %17, label %19, !dbg !15837

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15838
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !15839
  br label %24, !dbg !15840

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #26, !dbg !15833
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14507, metadata !DIExpression()) #25, !dbg !15830
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15833
  br i1 %21, label %22, label %12, !dbg !15832, !llvm.loop !15841

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15843
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #26, !dbg !15844
  br label %24, !dbg !15845

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15809
  call void @llvm.dbg.value(metadata i32 %25, metadata !14312, metadata !DIExpression()) #25, !dbg !15811
  call void @llvm.dbg.value(metadata i32 %25, metadata !14306, metadata !DIExpression()) #25, !dbg !15807
  call void @llvm.dbg.value(metadata i32 %25, metadata !15806, metadata !DIExpression()), !dbg !15812
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !15846
  call void @llvm.dbg.value(metadata i32 undef, metadata !14911, metadata !DIExpression()) #25, !dbg !15847
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14916, metadata !DIExpression()) #25, !dbg !15847
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #26, !dbg !15849
  ret void, !dbg !15850
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15851 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15855, metadata !DIExpression()), !dbg !15858
  %3 = icmp eq i64 %2, -1, !dbg !15859
  br i1 %3, label %4, label %6, !dbg !15861

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15862
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #27, !dbg !15864
  br label %11, !dbg !15865

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15856, metadata !DIExpression()), !dbg !15858
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !15866
  %8 = sext i32 %7 to i64, !dbg !15866
  call void @llvm.dbg.value(metadata i64 %8, metadata !15856, metadata !DIExpression()), !dbg !15858
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #27, !dbg !15867
  %10 = trunc i64 %9 to i32, !dbg !15867
  call void @llvm.dbg.value(metadata i32 %10, metadata !15857, metadata !DIExpression()), !dbg !15858
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15858
  ret i32 %12, !dbg !15868
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15869 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15873, metadata !DIExpression()), !dbg !15874
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15875, !srcloc !15877
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !15878
  ret void, !dbg !15879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15880 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15884, metadata !DIExpression()), !dbg !15888
  %2 = icmp eq i64 %0, 0, !dbg !15889
  br i1 %2, label %3, label %4, !dbg !15891

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #27, !dbg !15892
  br label %29, !dbg !15894

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15886, metadata !DIExpression()), !dbg !15888
  %5 = icmp sgt i64 %0, -3, !dbg !15895
  br i1 %5, label %6, label %10, !dbg !15897

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15898
  %8 = trunc i64 %0 to i32, !dbg !15900
  %9 = add i32 %7, %8, !dbg !15900
  call void @llvm.dbg.value(metadata i32 %9, metadata !15885, metadata !DIExpression()), !dbg !15888
  br label %13, !dbg !15901

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15902
  %12 = sub i32 -2, %11, !dbg !15902
  call void @llvm.dbg.value(metadata i32 %12, metadata !15885, metadata !DIExpression()), !dbg !15888
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15904
  call void @llvm.dbg.value(metadata i32 %14, metadata !15885, metadata !DIExpression()), !dbg !15888
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !15905
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15907, !srcloc !14315
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15907
  call void @llvm.dbg.value(metadata i32 %16, metadata !14312, metadata !DIExpression()) #25, !dbg !15909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !15909
  call void @llvm.dbg.value(metadata i32 %16, metadata !14306, metadata !DIExpression()) #25, !dbg !15905
  call void @llvm.dbg.value(metadata i32 %16, metadata !15887, metadata !DIExpression()), !dbg !15888
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15910
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15911
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #27, !dbg !15912
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15913
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15914
  tail call fastcc void @z_add_thread_timeout.142(%struct.k_thread* noundef %18, [1 x i64] %19) #27, !dbg !15914
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15915
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #27, !dbg !15916
  call void @llvm.dbg.value(metadata i32 %16, metadata !14911, metadata !DIExpression()) #25, !dbg !15917
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14916, metadata !DIExpression()) #25, !dbg !15917
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #26, !dbg !15919
  %22 = zext i32 %14 to i64, !dbg !15920
  %23 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15921
  %24 = zext i32 %23 to i64, !dbg !15921
  %25 = sub nsw i64 %22, %24, !dbg !15922
  call void @llvm.dbg.value(metadata i64 %25, metadata !15884, metadata !DIExpression()), !dbg !15888
  %26 = icmp sgt i64 %25, 0, !dbg !15923
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15923
  %28 = trunc i64 %27 to i32, !dbg !15923
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15888
  ret i32 %30, !dbg !15924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15925 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15927, metadata !DIExpression()), !dbg !15928
  call void @llvm.dbg.value(metadata i64 %0, metadata !14347, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i32 10000, metadata !14350, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i32 1000, metadata !14351, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i8 1, metadata !14352, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i1 false, metadata !14353, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15929
  call void @llvm.dbg.value(metadata i1 false, metadata !14354, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15929
  call void @llvm.dbg.value(metadata i8 0, metadata !14355, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i1 false, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15929
  call void @llvm.dbg.value(metadata i1 true, metadata !14357, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15929
  call void @llvm.dbg.value(metadata i64 0, metadata !14358, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i64 0, metadata !14358, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i64 %0, metadata !14347, metadata !DIExpression()), !dbg !15929
  %2 = udiv i64 %0, 10, !dbg !15931
  ret i64 %2, !dbg !15935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15936 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15937, !srcloc !15939
  tail call void @z_impl_k_yield() #27, !dbg !15940
  ret void, !dbg !15941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15942 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15946, metadata !DIExpression()), !dbg !15948
  %2 = sext i32 %0 to i64, !dbg !15949
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !15950
  call void @llvm.dbg.value(metadata i64 %3, metadata !15947, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15948
  %4 = shl i64 %3, 32, !dbg !15951
  %5 = ashr exact i64 %4, 32, !dbg !15951
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !15952
  call void @llvm.dbg.value(metadata i32 %6, metadata !15947, metadata !DIExpression()), !dbg !15948
  %7 = sext i32 %6 to i64, !dbg !15953
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !15954
  %9 = trunc i64 %8 to i32, !dbg !15954
  ret i32 %9, !dbg !15955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !15956 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15958, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i64 %0, metadata !14347, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14350, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 10000, metadata !14351, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i8 1, metadata !14352, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i1 false, metadata !14353, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15960
  call void @llvm.dbg.value(metadata i1 true, metadata !14354, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15960
  call void @llvm.dbg.value(metadata i8 0, metadata !14355, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i1 false, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15960
  call void @llvm.dbg.value(metadata i1 true, metadata !14357, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15960
  call void @llvm.dbg.value(metadata i64 0, metadata !14358, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i64 0, metadata !14358, metadata !DIExpression()), !dbg !15960
  %2 = add i64 %0, 99, !dbg !15962
  call void @llvm.dbg.value(metadata i64 %2, metadata !14347, metadata !DIExpression()), !dbg !15960
  %3 = udiv i64 %2, 100, !dbg !15963
  ret i64 %3, !dbg !15964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15965 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15967, metadata !DIExpression()), !dbg !15968
  call void @llvm.dbg.value(metadata i64 %0, metadata !14347, metadata !DIExpression()), !dbg !15969
  call void @llvm.dbg.value(metadata i32 10000, metadata !14350, metadata !DIExpression()), !dbg !15969
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14351, metadata !DIExpression()), !dbg !15969
  call void @llvm.dbg.value(metadata i8 1, metadata !14352, metadata !DIExpression()), !dbg !15969
  call void @llvm.dbg.value(metadata i1 false, metadata !14353, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15969
  call void @llvm.dbg.value(metadata i1 false, metadata !14354, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15969
  call void @llvm.dbg.value(metadata i8 0, metadata !14355, metadata !DIExpression()), !dbg !15969
  call void @llvm.dbg.value(metadata i1 true, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15969
  call void @llvm.dbg.value(metadata i1 false, metadata !14357, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15969
  call void @llvm.dbg.value(metadata i64 0, metadata !14358, metadata !DIExpression()), !dbg !15969
  call void @llvm.dbg.value(metadata i64 0, metadata !14358, metadata !DIExpression()), !dbg !15969
  %2 = mul i64 %0, 100, !dbg !15971
  ret i64 %2, !dbg !15973
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15974 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15976, metadata !DIExpression()), !dbg !15977
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !15978
  br i1 %2, label %14, label %3, !dbg !15980

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15981
  %5 = icmp slt i32 %4, 0, !dbg !15983
  br i1 %5, label %6, label %10, !dbg !15984

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15985
  %8 = load i8, i8* %7, align 1, !dbg !15985
  %9 = icmp eq i8 %8, 16, !dbg !15988
  br i1 %9, label %10, label %14, !dbg !15989

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !15990
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15991
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15992, !srcloc !14951
  call void @llvm.dbg.value(metadata i32 %11, metadata !14947, metadata !DIExpression()) #25, !dbg !15996
  %12 = icmp eq i32 %11, 0, !dbg !15997
  br i1 %12, label %13, label %14, !dbg !15998

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15999
  br label %14, !dbg !16001

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16005, metadata !DIExpression()), !dbg !16006
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16007
  %3 = load i8, i8* %2, align 1, !dbg !16007
  %4 = and i8 %3, 2, !dbg !16008
  %5 = icmp ne i8 %4, 0, !dbg !16009
  ret i1 %5, !dbg !16010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16011 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16016
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16015, metadata !DIExpression()), !dbg !16017
  ret %struct.k_thread* %1, !dbg !16018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16019 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16020, !srcloc !14951
  call void @llvm.dbg.value(metadata i32 %1, metadata !14947, metadata !DIExpression()) #25, !dbg !16023
  %2 = icmp eq i32 %1, 0, !dbg !16024
  br i1 %2, label %3, label %8, !dbg !16025

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16026
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !16027
  %6 = icmp ne i32 %5, 0, !dbg !16025
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16029 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16031, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !16034
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16036, !srcloc !14315
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16036
  call void @llvm.dbg.value(metadata i32 %3, metadata !14312, metadata !DIExpression()) #25, !dbg !16038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !16038
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !16034
  call void @llvm.dbg.value(metadata i32 %3, metadata !16032, metadata !DIExpression()), !dbg !16033
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16039
  %5 = load i8, i8* %4, align 4, !dbg !16039
  %6 = and i8 %5, 1, !dbg !16041
  %7 = icmp eq i8 %6, 0, !dbg !16042
  br i1 %7, label %9, label %8, !dbg !16043

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14327, metadata !DIExpression()) #25, !dbg !16044
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !16044
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()) #25, !dbg !16047
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16049, !srcloc !14341
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !16050, !srcloc !16052
  br label %24, !dbg !16053

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16054
  %11 = load i8, i8* %10, align 1, !dbg !16054
  %12 = and i8 %11, 8, !dbg !16056
  %13 = icmp eq i8 %12, 0, !dbg !16057
  br i1 %13, label %15, label %14, !dbg !16058

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14327, metadata !DIExpression()) #25, !dbg !16059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !16059
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()) #25, !dbg !16062
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16064, !srcloc !14341
  br label %24, !dbg !16065

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !16066
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16067
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16069
  br i1 %17, label %18, label %23, !dbg !16070

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16071, !srcloc !14951
  call void @llvm.dbg.value(metadata i32 %19, metadata !14947, metadata !DIExpression()) #25, !dbg !16074
  %20 = icmp eq i32 %19, 0, !dbg !16075
  br i1 %20, label %21, label %23, !dbg !16076

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14911, metadata !DIExpression()) #25, !dbg !16077
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14916, metadata !DIExpression()) #25, !dbg !16077
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !16080
  br label %23, !dbg !16081

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14327, metadata !DIExpression()) #25, !dbg !16082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !16082
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()) #25, !dbg !16084
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16086, !srcloc !14341
  br label %24, !dbg !16087

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16090, metadata !DIExpression()), !dbg !16091
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16092
  %3 = load i8, i8* %2, align 1, !dbg !16092
  %4 = and i8 %3, 8, !dbg !16094
  %5 = icmp eq i8 %4, 0, !dbg !16095
  br i1 %5, label %6, label %20, !dbg !16096

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16097
  %8 = or i8 %7, 8, !dbg !16097
  store i8 %8, i8* %2, align 1, !dbg !16097
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !16099
  br i1 %9, label %10, label %12, !dbg !16101

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14469, metadata !DIExpression()) #25, !dbg !16102
  %11 = and i8 %8, 95, !dbg !16105
  store i8 %11, i8* %2, align 1, !dbg !16105
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #25, !dbg !16106
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !16108
  br label %12, !dbg !16109

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16110
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16110
  %15 = icmp eq %union.anon* %14, null, !dbg !16112
  br i1 %15, label %17, label %16, !dbg !16113

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16114
  br label %17, !dbg !16116

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16117
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16118
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #27, !dbg !16119
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16120
  br label %20, !dbg !16121

20:                                               ; preds = %17, %1
  ret void, !dbg !16122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16123 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16127, metadata !DIExpression()), !dbg !16129
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16130
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16128, metadata !DIExpression()), !dbg !16129
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16131
  br i1 %3, label %10, label %4, !dbg !16132

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16133
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16135
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16136, metadata !DIExpression()), !dbg !16142
  call void @llvm.dbg.value(metadata i32 0, metadata !16141, metadata !DIExpression()), !dbg !16142
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16144
  store i32 0, i32* %7, align 4, !dbg !16145
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !16146
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16130
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16128, metadata !DIExpression()), !dbg !16129
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16131
  br i1 %9, label %10, label %4, !dbg !16132, !llvm.loop !16147

10:                                               ; preds = %4, %1
  ret void, !dbg !16149
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16150 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16155, metadata !DIExpression()), !dbg !16158
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16154, metadata !DIExpression()), !dbg !16158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !16159
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16161, !srcloc !14315
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16161
  call void @llvm.dbg.value(metadata i32 %4, metadata !14312, metadata !DIExpression()) #25, !dbg !16163
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !16163
  call void @llvm.dbg.value(metadata i32 %4, metadata !14306, metadata !DIExpression()) #25, !dbg !16159
  call void @llvm.dbg.value(metadata i32 %4, metadata !16156, metadata !DIExpression()), !dbg !16158
  call void @llvm.dbg.value(metadata i32 0, metadata !16157, metadata !DIExpression()), !dbg !16158
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16164
  %6 = load i8, i8* %5, align 1, !dbg !16164
  %7 = and i8 %6, 8, !dbg !16166
  %8 = icmp eq i8 %7, 0, !dbg !16167
  br i1 %8, label %9, label %24, !dbg !16168

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16155, metadata !DIExpression()), !dbg !16158
  %11 = icmp eq i64 %10, 0, !dbg !16169
  br i1 %11, label %24, label %12, !dbg !16171

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16172
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16174
  br i1 %14, label %24, label %15, !dbg !16175

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16176
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16176
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16177
  %19 = icmp eq %union.anon* %17, %18, !dbg !16178
  br i1 %19, label %24, label %20, !dbg !16179

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16180
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #27, !dbg !16182
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16183
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #27, !dbg !16184
  call void @llvm.dbg.value(metadata i32 %4, metadata !14911, metadata !DIExpression()) #25, !dbg !16185
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14916, metadata !DIExpression()) #25, !dbg !16185
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #26, !dbg !16187
  call void @llvm.dbg.value(metadata i32 %23, metadata !16157, metadata !DIExpression()), !dbg !16158
  br label %26, !dbg !16188

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16189
  call void @llvm.dbg.value(metadata i32 %25, metadata !16157, metadata !DIExpression()), !dbg !16158
  call void @llvm.dbg.value(metadata i32 %4, metadata !14327, metadata !DIExpression()) #25, !dbg !16190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !16190
  call void @llvm.dbg.value(metadata i32 %4, metadata !14335, metadata !DIExpression()) #25, !dbg !16192
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16194, !srcloc !14341
  br label %26, !dbg !16195

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16158
  ret i32 %27, !dbg !16196
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16197 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16201, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata i32 %1, metadata !16202, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata i8* %2, metadata !16203, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata i8 0, metadata !16205, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata i32 0, metadata !16206, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14300, metadata !DIExpression()) #25, !dbg !16211
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16213, !srcloc !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14312, metadata !DIExpression()) #25, !dbg !16215
  call void @llvm.dbg.value(metadata i32 undef, metadata !14313, metadata !DIExpression()) #25, !dbg !16215
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !16211
  call void @llvm.dbg.value(metadata i32 undef, metadata !16208, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata i8 poison, metadata !16205, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata i32 undef, metadata !16206, metadata !DIExpression()), !dbg !16210
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #27, !dbg !16216
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16204, metadata !DIExpression()), !dbg !16209
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16219
  br i1 %7, label %12, label %8, !dbg !16221

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16222, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata i32 %1, metadata !16227, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata i8* %2, metadata !16228, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16136, metadata !DIExpression()), !dbg !16232
  call void @llvm.dbg.value(metadata i32 %1, metadata !16141, metadata !DIExpression()), !dbg !16232
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16234
  store i32 %1, i32* %9, align 4, !dbg !16235
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16236
  store i8* %2, i8** %10, align 4, !dbg !16237
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16238
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16239
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #27, !dbg !16240
  call void @llvm.dbg.value(metadata i8 1, metadata !16205, metadata !DIExpression()), !dbg !16209
  br label %12, !dbg !16241

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16213
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16213
  call void @llvm.dbg.value(metadata i32 %14, metadata !14312, metadata !DIExpression()) #25, !dbg !16215
  call void @llvm.dbg.value(metadata i32 %14, metadata !14306, metadata !DIExpression()) #25, !dbg !16211
  call void @llvm.dbg.value(metadata i32 %14, metadata !16208, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata i8 poison, metadata !16205, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata i32 undef, metadata !14327, metadata !DIExpression()) #25, !dbg !16242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14332, metadata !DIExpression()) #25, !dbg !16242
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()) #25, !dbg !16244
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16246, !srcloc !14341
  call void @llvm.dbg.value(metadata i32 undef, metadata !16206, metadata !DIExpression()), !dbg !16210
  ret i1 %13, !dbg !16247
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16248 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i64 undef, metadata !16255, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16252, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16254, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i8** %4, metadata !16256, metadata !DIExpression()), !dbg !16258
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !16259
  call void @llvm.dbg.value(metadata i32 %6, metadata !16257, metadata !DIExpression()), !dbg !16258
  %7 = icmp eq i8** %4, null, !dbg !16260
  br i1 %7, label %12, label %8, !dbg !16262

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16263
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16265
  %11 = load i8*, i8** %10, align 4, !dbg !16265
  store i8* %11, i8** %4, align 4, !dbg !16266
  br label %12, !dbg !16267

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16268
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16269 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !16271
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !16272
  ret void, !dbg !16273
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16274 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16284, metadata !DIExpression()), !dbg !16301
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16282, metadata !DIExpression()), !dbg !16301
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16283, metadata !DIExpression()), !dbg !16301
  %5 = icmp eq i64 %4, -1, !dbg !16302
  br i1 %5, label %55, label %6, !dbg !16304

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16305
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16306
  call void @llvm.dbg.value(metadata i32 0, metadata !16285, metadata !DIExpression()), !dbg !16307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16308, metadata !DIExpression()) #25, !dbg !16315
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16317, !srcloc !16323
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16317
  call void @llvm.dbg.value(metadata i32 %9, metadata !16320, metadata !DIExpression()) #25, !dbg !16324
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()) #25, !dbg !16324
  call void @llvm.dbg.value(metadata i32 %9, metadata !16314, metadata !DIExpression()) #25, !dbg !16315
  call void @llvm.dbg.value(metadata i32 %9, metadata !16291, metadata !DIExpression()), !dbg !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16285, metadata !DIExpression()), !dbg !16307
  %10 = icmp slt i64 %4, -1, !dbg !16325
  br i1 %10, label %11, label %17, !dbg !16326

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16327
  %13 = add i64 %4, %12, !dbg !16328
  %14 = sub i64 -2, %13, !dbg !16328
  call void @llvm.dbg.value(metadata i64 %14, metadata !16295, metadata !DIExpression()), !dbg !16329
  %15 = icmp sgt i64 %14, 1, !dbg !16330
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16330
  br label %22, !dbg !16331

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16332
  %19 = tail call fastcc i32 @elapsed.164() #27, !dbg !16334
  %20 = sext i32 %19 to i64, !dbg !16334
  %21 = add nsw i64 %18, %20, !dbg !16335
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16336
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16337
  store i64 %23, i64* %24, align 8, !dbg !16338
  %25 = tail call fastcc %struct._timeout* @first() #27, !dbg !16339
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16292, metadata !DIExpression()), !dbg !16341
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16342
  br i1 %26, label %42, label %27, !dbg !16342

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16343
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16292, metadata !DIExpression()), !dbg !16341
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16347
  %31 = load i64, i64* %30, align 8, !dbg !16347
  %32 = icmp slt i64 %28, %31, !dbg !16348
  br i1 %32, label %33, label %38, !dbg !16349

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16347
  %35 = sub nsw i64 %31, %28, !dbg !16350
  store i64 %35, i64* %34, align 8, !dbg !16350
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16352
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16353
  tail call fastcc void @sys_dlist_insert.165(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #27, !dbg !16354
  br label %44, !dbg !16355

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16356
  store i64 %39, i64* %24, align 8, !dbg !16356
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #27, !dbg !16357
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16292, metadata !DIExpression()), !dbg !16341
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16342
  br i1 %41, label %42, label %27, !dbg !16342, !llvm.loop !16358

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16360
  tail call fastcc void @sys_dlist_append.166(%struct._dnode* noundef %43) #27, !dbg !16363
  br label %44, !dbg !16364

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #27, !dbg !16365
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16366
  br i1 %46, label %47, label %54, !dbg !16367

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #27, !dbg !16368
  call void @llvm.dbg.value(metadata i32 %48, metadata !16298, metadata !DIExpression()), !dbg !16369
  %49 = icmp ne i32 %48, 0, !dbg !16370
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16372
  br i1 %52, label %54, label %53, !dbg !16372

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #26, !dbg !16373
  br label %54, !dbg !16375

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16376, metadata !DIExpression()) #25, !dbg !16382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16382
  call void @llvm.dbg.value(metadata i32 %9, metadata !16384, metadata !DIExpression()) #25, !dbg !16387
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16389, !srcloc !16390
  call void @llvm.dbg.value(metadata i32 undef, metadata !16285, metadata !DIExpression()), !dbg !16307
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.164() unnamed_addr #1 !dbg !16392 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16395
  %2 = icmp eq i32 %1, 0, !dbg !16396
  br i1 %2, label %3, label %5, !dbg !16395

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !16397
  br label %5, !dbg !16395

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16395
  ret i32 %6, !dbg !16398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16399 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.169() #27, !dbg !16405
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16403, metadata !DIExpression()), !dbg !16406
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16407
  ret %struct._timeout* %2, !dbg !16408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.165(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16409 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16413, metadata !DIExpression()), !dbg !16417
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16414, metadata !DIExpression()), !dbg !16417
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16418
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16418
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16415, metadata !DIExpression()), !dbg !16417
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16419
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16420
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16421
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16422
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16423
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16424
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16425
  ret void, !dbg !16426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16427 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16431, metadata !DIExpression()), !dbg !16433
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16434
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.167(%struct._dnode* noundef %2) #27, !dbg !16435
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16432, metadata !DIExpression()), !dbg !16433
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16436
  ret %struct._timeout* %4, !dbg !16437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.166(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16438 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16443, metadata !DIExpression()), !dbg !16446
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16444, metadata !DIExpression()), !dbg !16446
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16447
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16445, metadata !DIExpression()), !dbg !16446
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16448
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16449
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16450
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16451
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16452
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16453
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16454
  ret void, !dbg !16455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16456 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !16461
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16458, metadata !DIExpression()), !dbg !16462
  %2 = tail call fastcc i32 @elapsed.164() #27, !dbg !16463
  call void @llvm.dbg.value(metadata i32 %2, metadata !16459, metadata !DIExpression()), !dbg !16462
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16464
  br i1 %3, label %14, label %4, !dbg !16466

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16467
  %6 = load i64, i64* %5, align 8, !dbg !16467
  %7 = sext i32 %2 to i64, !dbg !16468
  %8 = sub nsw i64 %6, %7, !dbg !16469
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16470
  br i1 %9, label %14, label %10, !dbg !16471

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16472
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16472
  %13 = trunc i64 %12 to i32, !dbg !16472
  call void @llvm.dbg.value(metadata i32 %13, metadata !16460, metadata !DIExpression()), !dbg !16462
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16474
  call void @llvm.dbg.value(metadata i32 %15, metadata !16460, metadata !DIExpression()), !dbg !16462
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16475
  %17 = icmp ne i32 %16, 0, !dbg !16477
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16478
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16478
  call void @llvm.dbg.value(metadata i32 %20, metadata !16460, metadata !DIExpression()), !dbg !16462
  ret i32 %20, !dbg !16479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.167(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16480 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16484, metadata !DIExpression()), !dbg !16486
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16485, metadata !DIExpression()), !dbg !16486
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16487
  br i1 %2, label %5, label %3, !dbg !16488

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.168(%struct._dnode* noundef nonnull %0) #27, !dbg !16489
  br label %5, !dbg !16488

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16488
  ret %struct._dnode* %6, !dbg !16490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.168(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16491 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16493, metadata !DIExpression()), !dbg !16495
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16494, metadata !DIExpression()), !dbg !16495
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16496
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16497
  br i1 %3, label %7, label %4, !dbg !16498

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16499
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16499
  br label %7, !dbg !16498

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16498
  ret %struct._dnode* %8, !dbg !16500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.169() unnamed_addr #5 !dbg !16501 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16505, metadata !DIExpression()), !dbg !16506
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.170() #27, !dbg !16507
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16507
  ret %struct._dnode* %3, !dbg !16508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.170() unnamed_addr #5 !dbg !16509 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16513, metadata !DIExpression()), !dbg !16514
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16515
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16516
  ret i1 %2, !dbg !16517
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16518 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16522, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 -22, metadata !16523, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 0, metadata !16524, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16308, metadata !DIExpression()) #25, !dbg !16529
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16531, !srcloc !16323
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #25, !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()) #25, !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !16314, metadata !DIExpression()) #25, !dbg !16529
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata i32 -22, metadata !16523, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !16524, metadata !DIExpression()), !dbg !16528
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16523, metadata !DIExpression()), !dbg !16527
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.173(%struct._dnode* noundef %3) #27, !dbg !16534
  br i1 %4, label %5, label %6, !dbg !16538

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !16539
  call void @llvm.dbg.value(metadata i32 0, metadata !16523, metadata !DIExpression()), !dbg !16527
  br label %6, !dbg !16541

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16527
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16531
  call void @llvm.dbg.value(metadata i32 %8, metadata !16320, metadata !DIExpression()) #25, !dbg !16533
  call void @llvm.dbg.value(metadata i32 %8, metadata !16314, metadata !DIExpression()) #25, !dbg !16529
  call void @llvm.dbg.value(metadata i32 %8, metadata !16526, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata i32 %7, metadata !16523, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !16376, metadata !DIExpression()) #25, !dbg !16542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()) #25, !dbg !16544
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16546, !srcloc !16390
  call void @llvm.dbg.value(metadata i32 undef, metadata !16524, metadata !DIExpression()), !dbg !16528
  ret i32 %7, !dbg !16547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.173(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16548 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16554, metadata !DIExpression()), !dbg !16555
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16556
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16556
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16557
  ret i1 %4, !dbg !16558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !16559 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16561, metadata !DIExpression()), !dbg !16562
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !16563
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16565
  br i1 %3, label %10, label %4, !dbg !16566

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16567
  %6 = load i64, i64* %5, align 8, !dbg !16567
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16569
  %8 = load i64, i64* %7, align 8, !dbg !16570
  %9 = add nsw i64 %8, %6, !dbg !16570
  store i64 %9, i64* %7, align 8, !dbg !16570
  br label %10, !dbg !16571

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16572
  tail call fastcc void @sys_dlist_remove.174(%struct._dnode* noundef %11) #27, !dbg !16573
  ret void, !dbg !16574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.174(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !16575 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16579, metadata !DIExpression()), !dbg !16582
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16583
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16583
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16580, metadata !DIExpression()), !dbg !16582
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16584
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16584
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16581, metadata !DIExpression()), !dbg !16582
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16585
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16586
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16587
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16588
  tail call fastcc void @sys_dnode_init.175(%struct._dnode* noundef %0) #27, !dbg !16589
  ret void, !dbg !16590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.175(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !16591 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16593, metadata !DIExpression()), !dbg !16594
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16595
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16596
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16597
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16598
  ret void, !dbg !16599
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16600 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16606, metadata !DIExpression()), !dbg !16611
  call void @llvm.dbg.value(metadata i64 0, metadata !16607, metadata !DIExpression()), !dbg !16611
  call void @llvm.dbg.value(metadata i32 0, metadata !16608, metadata !DIExpression()), !dbg !16612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16308, metadata !DIExpression()) #25, !dbg !16613
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16615, !srcloc !16323
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16615
  call void @llvm.dbg.value(metadata i32 %3, metadata !16320, metadata !DIExpression()) #25, !dbg !16617
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()) #25, !dbg !16617
  call void @llvm.dbg.value(metadata i32 %3, metadata !16314, metadata !DIExpression()) #25, !dbg !16613
  call void @llvm.dbg.value(metadata i32 %3, metadata !16610, metadata !DIExpression()), !dbg !16612
  call void @llvm.dbg.value(metadata i64 0, metadata !16607, metadata !DIExpression()), !dbg !16611
  call void @llvm.dbg.value(metadata i32 undef, metadata !16608, metadata !DIExpression()), !dbg !16612
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16618
  call void @llvm.dbg.value(metadata i64 %4, metadata !16607, metadata !DIExpression()), !dbg !16611
  call void @llvm.dbg.value(metadata i32 %3, metadata !16376, metadata !DIExpression()) #25, !dbg !16621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16621
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #25, !dbg !16623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16625, !srcloc !16390
  call void @llvm.dbg.value(metadata i32 undef, metadata !16608, metadata !DIExpression()), !dbg !16612
  ret i64 %4, !dbg !16626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16627 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16629, metadata !DIExpression()), !dbg !16633
  call void @llvm.dbg.value(metadata i64 0, metadata !16630, metadata !DIExpression()), !dbg !16633
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.176(%struct._timeout* noundef %0) #27, !dbg !16634
  br i1 %2, label %21, label %3, !dbg !16636

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !16637
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16631, metadata !DIExpression()), !dbg !16638
  call void @llvm.dbg.value(metadata i64 0, metadata !16630, metadata !DIExpression()), !dbg !16633
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16639
  br i1 %5, label %16, label %6, !dbg !16641

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16631, metadata !DIExpression()), !dbg !16638
  call void @llvm.dbg.value(metadata i64 %8, metadata !16630, metadata !DIExpression()), !dbg !16633
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16642
  %10 = load i64, i64* %9, align 8, !dbg !16642
  %11 = add nsw i64 %10, %8, !dbg !16644
  call void @llvm.dbg.value(metadata i64 %11, metadata !16630, metadata !DIExpression()), !dbg !16633
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16645
  br i1 %12, label %16, label %13, !dbg !16647

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !16648
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16631, metadata !DIExpression()), !dbg !16638
  call void @llvm.dbg.value(metadata i64 %11, metadata !16630, metadata !DIExpression()), !dbg !16633
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16639
  br i1 %15, label %16, label %6, !dbg !16641, !llvm.loop !16649

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16633
  call void @llvm.dbg.value(metadata i64 %17, metadata !16630, metadata !DIExpression()), !dbg !16633
  %18 = tail call fastcc i32 @elapsed.164() #27, !dbg !16651
  %19 = sext i32 %18 to i64, !dbg !16651
  %20 = sub nsw i64 %17, %19, !dbg !16652
  br label %21, !dbg !16653

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16633
  ret i64 %22, !dbg !16654
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.176(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16655 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16659, metadata !DIExpression()), !dbg !16660
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16661
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.173(%struct._dnode* noundef %2) #27, !dbg !16662
  %4 = xor i1 %3, true, !dbg !16663
  ret i1 %4, !dbg !16664
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16665 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16667, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i64 0, metadata !16668, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i32 0, metadata !16669, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16308, metadata !DIExpression()) #25, !dbg !16674
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16676, !srcloc !16323
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16676
  call void @llvm.dbg.value(metadata i32 %3, metadata !16320, metadata !DIExpression()) #25, !dbg !16678
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()) #25, !dbg !16678
  call void @llvm.dbg.value(metadata i32 %3, metadata !16314, metadata !DIExpression()) #25, !dbg !16674
  call void @llvm.dbg.value(metadata i32 %3, metadata !16671, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata i64 0, metadata !16668, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16669, metadata !DIExpression()), !dbg !16673
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16679
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16682
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !16668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16672
  call void @llvm.dbg.value(metadata i32 %3, metadata !16376, metadata !DIExpression()) #25, !dbg !16683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16683
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #25, !dbg !16685
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16687, !srcloc !16390
  call void @llvm.dbg.value(metadata i32 undef, metadata !16669, metadata !DIExpression()), !dbg !16673
  %6 = add i64 %5, %4, !dbg !16688
  ret i64 %6, !dbg !16689
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16690 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16692, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata i32 0, metadata !16693, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16308, metadata !DIExpression()) #25, !dbg !16698
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16700, !srcloc !16323
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16700
  call void @llvm.dbg.value(metadata i32 %2, metadata !16320, metadata !DIExpression()) #25, !dbg !16702
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()) #25, !dbg !16702
  call void @llvm.dbg.value(metadata i32 %2, metadata !16314, metadata !DIExpression()) #25, !dbg !16698
  call void @llvm.dbg.value(metadata i32 %2, metadata !16695, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 -1, metadata !16692, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()), !dbg !16697
  %3 = tail call fastcc i32 @next_timeout() #27, !dbg !16703
  call void @llvm.dbg.value(metadata i32 %3, metadata !16692, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata i32 %2, metadata !16376, metadata !DIExpression()) #25, !dbg !16706
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16706
  call void @llvm.dbg.value(metadata i32 %2, metadata !16384, metadata !DIExpression()) #25, !dbg !16708
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16710, !srcloc !16390
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()), !dbg !16697
  ret i32 %3, !dbg !16711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16714, metadata !DIExpression()), !dbg !16724
  call void @llvm.dbg.value(metadata i1 %1, metadata !16715, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16724
  call void @llvm.dbg.value(metadata i32 0, metadata !16716, metadata !DIExpression()), !dbg !16725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16308, metadata !DIExpression()) #25, !dbg !16726
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16728, !srcloc !16323
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #25, !dbg !16730
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()) #25, !dbg !16730
  call void @llvm.dbg.value(metadata i32 undef, metadata !16314, metadata !DIExpression()) #25, !dbg !16726
  call void @llvm.dbg.value(metadata i32 undef, metadata !16718, metadata !DIExpression()), !dbg !16725
  call void @llvm.dbg.value(metadata i32 undef, metadata !16716, metadata !DIExpression()), !dbg !16725
  %4 = tail call fastcc i32 @next_timeout() #27, !dbg !16731
  call void @llvm.dbg.value(metadata i32 %4, metadata !16719, metadata !DIExpression()), !dbg !16732
  call void @llvm.dbg.value(metadata i1 undef, metadata !16722, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16732
  %5 = icmp slt i32 %4, 2, !dbg !16733
  call void @llvm.dbg.value(metadata i1 %5, metadata !16723, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16732
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16734
  call void @llvm.dbg.value(metadata i1 %6, metadata !16722, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16732
  br i1 %7, label %11, label %8, !dbg !16734

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16736
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16736
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #26, !dbg !16738
  br label %11, !dbg !16739

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16728
  call void @llvm.dbg.value(metadata i32 %12, metadata !16320, metadata !DIExpression()) #25, !dbg !16730
  call void @llvm.dbg.value(metadata i32 %12, metadata !16314, metadata !DIExpression()) #25, !dbg !16726
  call void @llvm.dbg.value(metadata i32 %12, metadata !16718, metadata !DIExpression()), !dbg !16725
  call void @llvm.dbg.value(metadata i32 undef, metadata !16376, metadata !DIExpression()) #25, !dbg !16740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16740
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()) #25, !dbg !16742
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16744, !srcloc !16390
  call void @llvm.dbg.value(metadata i32 1, metadata !16716, metadata !DIExpression()), !dbg !16725
  call void @llvm.dbg.value(metadata i32 undef, metadata !16716, metadata !DIExpression()), !dbg !16725
  ret void, !dbg !16745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16750, metadata !DIExpression()), !dbg !16755
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !16756
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16308, metadata !DIExpression()) #25, !dbg !16757
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16759, !srcloc !16323
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #25, !dbg !16761
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()) #25, !dbg !16761
  call void @llvm.dbg.value(metadata i32 undef, metadata !16314, metadata !DIExpression()) #25, !dbg !16757
  call void @llvm.dbg.value(metadata i32 undef, metadata !16751, metadata !DIExpression()), !dbg !16755
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16755
  call void @llvm.dbg.value(metadata i32 undef, metadata !16751, metadata !DIExpression()), !dbg !16755
  %3 = tail call fastcc %struct._timeout* @first() #27, !dbg !16762
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16763
  br i1 %4, label %28, label %5, !dbg !16764

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16765
  %10 = load i64, i64* %9, align 8, !dbg !16765
  %11 = sext i32 %8 to i64, !dbg !16766
  %12 = icmp sgt i64 %10, %11, !dbg !16767
  br i1 %12, label %26, label %13, !dbg !16768

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16755
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16752, metadata !DIExpression()), !dbg !16769
  %15 = trunc i64 %10 to i32, !dbg !16770
  call void @llvm.dbg.value(metadata i32 %15, metadata !16754, metadata !DIExpression()), !dbg !16769
  %16 = sext i32 %15 to i64, !dbg !16771
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16772
  %18 = add i64 %17, %16, !dbg !16772
  store i64 %18, i64* @curr_tick, align 8, !dbg !16772
  store i64 0, i64* %9, align 8, !dbg !16773
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #27, !dbg !16774
  call void @llvm.dbg.value(metadata i32 %14, metadata !16376, metadata !DIExpression()) #25, !dbg !16775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16775
  call void @llvm.dbg.value(metadata i32 %14, metadata !16384, metadata !DIExpression()) #25, !dbg !16777
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16779, !srcloc !16390
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16780
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16780
  tail call void %20(%struct._timeout* noundef nonnull %6) #26, !dbg !16781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16308, metadata !DIExpression()) #25, !dbg !16782
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16784, !srcloc !16323
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #25, !dbg !16786
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()) #25, !dbg !16786
  call void @llvm.dbg.value(metadata i32 undef, metadata !16314, metadata !DIExpression()) #25, !dbg !16782
  call void @llvm.dbg.value(metadata i32 undef, metadata !16751, metadata !DIExpression()), !dbg !16755
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16787
  %23 = sub nsw i32 %22, %15, !dbg !16787
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16755
  call void @llvm.dbg.value(metadata i32 undef, metadata !16751, metadata !DIExpression()), !dbg !16755
  %24 = tail call fastcc %struct._timeout* @first() #27, !dbg !16762
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16763
  br i1 %25, label %28, label %5, !dbg !16764, !llvm.loop !16788

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16790
  store i64 %27, i64* %9, align 8, !dbg !16790
  br label %32, !dbg !16793

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16755
  %31 = sext i32 %30 to i64, !dbg !16794
  br label %32, !dbg !16794

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16794
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16755
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16795
  %37 = add i64 %36, %33, !dbg !16795
  store i64 %37, i64* @curr_tick, align 8, !dbg !16795
  store i32 0, i32* @announce_remaining, align 4, !dbg !16796
  %38 = tail call fastcc i32 @next_timeout() #27, !dbg !16797
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #26, !dbg !16798
  call void @llvm.dbg.value(metadata i32 %35, metadata !16376, metadata !DIExpression()) #25, !dbg !16799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16799
  call void @llvm.dbg.value(metadata i32 %35, metadata !16384, metadata !DIExpression()) #25, !dbg !16801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !16803, !srcloc !16390
  ret void, !dbg !16804
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16805 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16809, metadata !DIExpression()), !dbg !16813
  call void @llvm.dbg.value(metadata i32 0, metadata !16810, metadata !DIExpression()), !dbg !16814
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16308, metadata !DIExpression()) #25, !dbg !16815
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16817, !srcloc !16323
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16817
  call void @llvm.dbg.value(metadata i32 %2, metadata !16320, metadata !DIExpression()) #25, !dbg !16819
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()) #25, !dbg !16819
  call void @llvm.dbg.value(metadata i32 %2, metadata !16314, metadata !DIExpression()) #25, !dbg !16815
  call void @llvm.dbg.value(metadata i32 %2, metadata !16812, metadata !DIExpression()), !dbg !16814
  call void @llvm.dbg.value(metadata i64 0, metadata !16809, metadata !DIExpression()), !dbg !16813
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()), !dbg !16814
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16820
  %4 = tail call fastcc i32 @elapsed.164() #27, !dbg !16823
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16809, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16813
  call void @llvm.dbg.value(metadata i32 %2, metadata !16376, metadata !DIExpression()) #25, !dbg !16824
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16824
  call void @llvm.dbg.value(metadata i32 %2, metadata !16384, metadata !DIExpression()) #25, !dbg !16826
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16828, !srcloc !16390
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()), !dbg !16814
  %5 = sext i32 %4 to i64, !dbg !16823
  %6 = add i64 %3, %5, !dbg !16829
  ret i64 %6, !dbg !16830
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16831 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !16832
  %2 = trunc i64 %1 to i32, !dbg !16833
  ret i32 %2, !dbg !16834
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16835 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !16836
  ret i64 %1, !dbg !16837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16840, metadata !DIExpression()), !dbg !16847
  %2 = icmp eq i32 %0, 0, !dbg !16848
  br i1 %2, label %10, label %3, !dbg !16850

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !16851
  call void @llvm.dbg.value(metadata i32 %4, metadata !16841, metadata !DIExpression()), !dbg !16847
  %5 = mul i32 %0, 84, !dbg !16852
  call void @llvm.dbg.value(metadata i32 %5, metadata !16842, metadata !DIExpression()), !dbg !16847
  br label %6, !dbg !16853

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !16854
  call void @llvm.dbg.value(metadata i32 %7, metadata !16843, metadata !DIExpression()), !dbg !16855
  %8 = sub i32 %7, %4, !dbg !16856
  %9 = icmp ult i32 %8, %5, !dbg !16858
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16859
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16860 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !16861
  ret i32 %1, !dbg !16862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16863 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !16865
  ret i32 %1, !dbg !16866
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16867 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16871, metadata !DIExpression()), !dbg !16873
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16874

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !16875
  br label %14, !dbg !16879

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16872, metadata !DIExpression()), !dbg !16873
  %6 = icmp slt i64 %2, -1, !dbg !16880
  br i1 %6, label %7, label %9, !dbg !16883

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16884
  br label %14, !dbg !16885

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !16887
  %11 = icmp ugt i64 %2, 1, !dbg !16888
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16888
  %13 = add nsw i64 %10, %12, !dbg !16889
  br label %14, !dbg !16890

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16891
  ret i64 %15, !dbg !16892
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !16893 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16896, metadata !DIExpression()), !dbg !16929
  %2 = icmp eq i8* %0, null, !dbg !16930
  br i1 %2, label %7, label %3, !dbg !16932

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !16897, metadata !DIExpression()), !dbg !16929
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !16933
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !16933
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !16897, metadata !DIExpression()), !dbg !16929
  call void @llvm.dbg.value(metadata i8* %4, metadata !16896, metadata !DIExpression()), !dbg !16929
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !16935
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #26, !dbg !16936
  br label %7, !dbg !16937

7:                                                ; preds = %3, %1
  ret void, !dbg !16938
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16943, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 %1, metadata !16944, metadata !DIExpression()), !dbg !16947
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !16948
  br i1 %3, label %11, label %4, !dbg !16950

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16951
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !16953
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !16953
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !16946, metadata !DIExpression()), !dbg !16947
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !16954
  br i1 %8, label %11, label %9, !dbg !16956

9:                                                ; preds = %4
  %10 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %7, i32 noundef %0, i32 noundef %1) #27, !dbg !16957
  call void @llvm.dbg.value(metadata i8* %10, metadata !16945, metadata !DIExpression()), !dbg !16947
  br label %11, !dbg !16959

11:                                               ; preds = %2, %4, %9
  %12 = phi i8* [ %10, %9 ], [ null, %4 ], [ null, %2 ], !dbg !16960
  call void @llvm.dbg.value(metadata i8* %12, metadata !16945, metadata !DIExpression()), !dbg !16947
  ret i8* %12, !dbg !16961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !16962 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16966, metadata !DIExpression()), !dbg !16972
  call void @llvm.dbg.value(metadata i32 %1, metadata !16967, metadata !DIExpression()), !dbg !16972
  call void @llvm.dbg.value(metadata i32 %2, metadata !16968, metadata !DIExpression()), !dbg !16972
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !16968, metadata !DIExpression(DW_OP_deref)), !dbg !16972
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !16973
  br i1 %5, label %14, label %6, !dbg !16975

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !16976
  call void @llvm.dbg.value(metadata i32 %7, metadata !16971, metadata !DIExpression()), !dbg !16972
  %8 = load i32, i32* %4, align 4, !dbg !16977
  call void @llvm.dbg.value(metadata i32 %8, metadata !16968, metadata !DIExpression()), !dbg !16972
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #26, !dbg !16978
  call void @llvm.dbg.value(metadata i8* %9, metadata !16969, metadata !DIExpression()), !dbg !16972
  %10 = icmp eq i8* %9, null, !dbg !16979
  br i1 %10, label %14, label %11, !dbg !16981

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !16982
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !16970, metadata !DIExpression()), !dbg !16972
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !16983
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !16984
  call void @llvm.dbg.value(metadata i8* %13, metadata !16970, metadata !DIExpression()), !dbg !16972
  call void @llvm.dbg.value(metadata i8* %13, metadata !16969, metadata !DIExpression()), !dbg !16972
  br label %14, !dbg !16985

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !16972
  ret i8* %15, !dbg !16986
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #24 !dbg !16987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16992, metadata !DIExpression()), !dbg !16995
  call void @llvm.dbg.value(metadata i32 4, metadata !16993, metadata !DIExpression()), !dbg !16995
  call void @llvm.dbg.value(metadata i32* %1, metadata !16994, metadata !DIExpression()), !dbg !16995
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !16996
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !16996
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !16996
  store i32 %5, i32* %1, align 4, !dbg !16996
  ret i1 %4, !dbg !16997
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16998 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.189, i32 0, i32 0)) #26, !dbg !17000
  ret void, !dbg !17001
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17002 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17004, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17005, metadata !DIExpression()), !dbg !17025
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17026

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17027

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17005, metadata !DIExpression()), !dbg !17025
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17028
  %6 = load i8*, i8** %5, align 4, !dbg !17028
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17032
  %8 = load i32, i32* %7, align 4, !dbg !17032
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #27, !dbg !17033
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17034
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17005, metadata !DIExpression()), !dbg !17025
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17035
  br i1 %10, label %3, label %2, !dbg !17026, !llvm.loop !17037
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17039 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17043, metadata !DIExpression()), !dbg !17046
  call void @llvm.dbg.value(metadata i8* %1, metadata !17044, metadata !DIExpression()), !dbg !17046
  call void @llvm.dbg.value(metadata i32 %2, metadata !17045, metadata !DIExpression()), !dbg !17046
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17047
  tail call fastcc void @z_waitq_init.191(%union.anon* noundef nonnull %4) #27, !dbg !17048
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17049
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !17050
  ret void, !dbg !17051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.191(%union.anon* noundef %0) unnamed_addr #4 !dbg !17052 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17057, metadata !DIExpression()), !dbg !17058
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17059
  tail call fastcc void @sys_dlist_init.192(%struct._dnode* noundef %2) #27, !dbg !17060
  ret void, !dbg !17061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.192(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17062 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17067, metadata !DIExpression()), !dbg !17068
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17069
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17070
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17071
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17072
  ret void, !dbg !17073
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17074 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17085, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17082, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i32 %1, metadata !17083, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i32 %2, metadata !17084, metadata !DIExpression()), !dbg !17095
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !17096
  call void @llvm.dbg.value(metadata i64 %6, metadata !17087, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i8* null, metadata !17088, metadata !DIExpression()), !dbg !17095
  %7 = icmp eq i64 %5, -1, !dbg !17097
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17097
  call void @llvm.dbg.value(metadata i64 %8, metadata !17087, metadata !DIExpression()), !dbg !17095
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17099, metadata !DIExpression()) #25, !dbg !17106
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17108, !srcloc !17114
  call void @llvm.dbg.value(metadata i32 undef, metadata !17111, metadata !DIExpression()) #25, !dbg !17115
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()) #25, !dbg !17115
  call void @llvm.dbg.value(metadata i32 undef, metadata !17105, metadata !DIExpression()) #25, !dbg !17106
  call void @llvm.dbg.value(metadata i32 undef, metadata !17089, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i8 0, metadata !17094, metadata !DIExpression()), !dbg !17095
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17088, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i8 0, metadata !17094, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i32 undef, metadata !17089, metadata !DIExpression()), !dbg !17095
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17116
  call void @llvm.dbg.value(metadata i8* %12, metadata !17088, metadata !DIExpression()), !dbg !17095
  %13 = tail call i64 @sys_clock_tick_get() #26, !dbg !17118
  call void @llvm.dbg.value(metadata i64 %13, metadata !17086, metadata !DIExpression()), !dbg !17095
  %14 = icmp eq i8* %12, null, !dbg !17119
  br i1 %14, label %15, label %31, !dbg !17121

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17089, metadata !DIExpression()), !dbg !17095
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17121

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17094, metadata !DIExpression()), !dbg !17095
  %20 = sub nsw i64 %8, %18, !dbg !17122
  %21 = icmp slt i64 %20, 1, !dbg !17123
  br i1 %21, label %31, label %22, !dbg !17124

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17095
  call void @llvm.dbg.value(metadata i8 undef, metadata !17094, metadata !DIExpression()), !dbg !17095
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17125
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17125
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #26, !dbg !17125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17099, metadata !DIExpression()) #25, !dbg !17126
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17128, !srcloc !17114
  call void @llvm.dbg.value(metadata i32 undef, metadata !17111, metadata !DIExpression()) #25, !dbg !17130
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()) #25, !dbg !17130
  call void @llvm.dbg.value(metadata i32 undef, metadata !17105, metadata !DIExpression()) #25, !dbg !17126
  call void @llvm.dbg.value(metadata i32 undef, metadata !17089, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i8* null, metadata !17088, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i32 undef, metadata !17089, metadata !DIExpression()), !dbg !17095
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17116
  call void @llvm.dbg.value(metadata i8* %28, metadata !17088, metadata !DIExpression()), !dbg !17095
  %29 = tail call i64 @sys_clock_tick_get() #26, !dbg !17118
  call void @llvm.dbg.value(metadata i64 %29, metadata !17086, metadata !DIExpression()), !dbg !17095
  %30 = icmp eq i8* %28, null, !dbg !17119
  br i1 %30, label %17, label %31, !dbg !17121, !llvm.loop !17131

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17116
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17095
  call void @llvm.dbg.value(metadata i8* %33, metadata !17088, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i32 %34, metadata !17134, metadata !DIExpression()) #25, !dbg !17140
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17139, metadata !DIExpression()) #25, !dbg !17140
  call void @llvm.dbg.value(metadata i32 %34, metadata !17142, metadata !DIExpression()) #25, !dbg !17145
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !17147, !srcloc !17148
  ret i8* %33, !dbg !17149
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17150 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17156, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17154, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata i32 %1, metadata !17155, metadata !DIExpression()), !dbg !17158
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !17159
  call void @llvm.dbg.value(metadata i8* %4, metadata !17157, metadata !DIExpression()), !dbg !17158
  ret i8* %4, !dbg !17160
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17161 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17165, metadata !DIExpression()), !dbg !17168
  call void @llvm.dbg.value(metadata i8* %1, metadata !17166, metadata !DIExpression()), !dbg !17168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17099, metadata !DIExpression()) #25, !dbg !17169
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17171, !srcloc !17114
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17171
  call void @llvm.dbg.value(metadata i32 %4, metadata !17111, metadata !DIExpression()) #25, !dbg !17173
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()) #25, !dbg !17173
  call void @llvm.dbg.value(metadata i32 %4, metadata !17105, metadata !DIExpression()) #25, !dbg !17169
  call void @llvm.dbg.value(metadata i32 %4, metadata !17167, metadata !DIExpression()), !dbg !17168
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17174
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #26, !dbg !17175
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17176
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #26, !dbg !17178
  %8 = icmp eq i32 %7, 0, !dbg !17179
  br i1 %8, label %12, label %9, !dbg !17180

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17181
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17182
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #26, !dbg !17182
  br label %13, !dbg !17184

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17134, metadata !DIExpression()) #25, !dbg !17185
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17139, metadata !DIExpression()) #25, !dbg !17185
  call void @llvm.dbg.value(metadata i32 %4, metadata !17142, metadata !DIExpression()) #25, !dbg !17188
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17190, !srcloc !17148
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17191
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!754, !2, !2497, !2499, !27, !2501, !2503, !2536, !2573, !111, !168, !197, !2575, !2586, !2632, !2634, !2662, !2690, !2733, !2804, !2849, !367, !510, !2877, !546, !556, !581, !786, !2882, !924, !1104, !1407, !1671, !2921, !1782, !1872, !2923, !3009, !3074, !1923, !3077, !1929, !2292, !3095, !3097, !2312, !3138, !2427, !3141, !3143, !2466}
!llvm.ident = !{!3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145, !3145}
!llvm.module.flags = !{!3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 252, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "free_queue", scope: !197, file: !294, line: 17, type: !295, isLocal: true, isDefinition: true, align: 32)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !291, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!199 = !{!102, !200, !204, !103, !206}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !201, line: 46, baseType: !202)
!201 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !203)
!203 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !205, line: 214, baseType: !32)
!205 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !231, !235, !239, !252, !257, !263, !269, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !208, file: !209, line: 365, baseType: !212, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!213 = !DISubroutineType(types: !214)
!214 = !{!103, !215, !230}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !218)
!218 = !{!219, !220, !221, !222, !228, !229}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !217, file: !141, line: 380, baseType: !144, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !217, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !217, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !217, file: !141, line: 386, baseType: !223, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !225)
!225 = !{!226, !227}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !224, file: !141, line: 359, baseType: !154, size: 8)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !224, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !217, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !217, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !208, file: !209, line: 366, baseType: !232, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 32)
!233 = !DISubroutineType(types: !234)
!234 = !{null, !215, !155}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !208, file: !209, line: 374, baseType: !236, size: 32, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = !DISubroutineType(types: !238)
!238 = !{!103, !215}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !208, file: !209, line: 377, baseType: !240, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 32)
!241 = !DISubroutineType(types: !242)
!242 = !{!103, !215, !243}
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !246)
!246 = !{!247, !248, !249, !250, !251}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !245, file: !209, line: 123, baseType: !121, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !245, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !245, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !245, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !245, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !208, file: !209, line: 379, baseType: !253, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = !DISubroutineType(types: !255)
!255 = !{!103, !215, !256}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !208, file: !209, line: 384, baseType: !258, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DISubroutineType(types: !260)
!260 = !{!103, !215, !261, !103}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !208, file: !209, line: 393, baseType: !264, size: 32, offset: 192)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!103, !215, !267, !268}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !208, file: !209, line: 402, baseType: !270, size: 32, offset: 224)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 32)
!271 = !DISubroutineType(types: !272)
!272 = !{null, !215}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !208, file: !209, line: 405, baseType: !270, size: 32, offset: 256)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !208, file: !209, line: 408, baseType: !236, size: 32, offset: 288)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !208, file: !209, line: 411, baseType: !270, size: 32, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !208, file: !209, line: 414, baseType: !270, size: 32, offset: 352)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !208, file: !209, line: 417, baseType: !236, size: 32, offset: 384)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !208, file: !209, line: 420, baseType: !236, size: 32, offset: 416)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !208, file: !209, line: 423, baseType: !270, size: 32, offset: 448)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !208, file: !209, line: 426, baseType: !270, size: 32, offset: 480)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !208, file: !209, line: 429, baseType: !236, size: 32, offset: 512)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !208, file: !209, line: 432, baseType: !236, size: 32, offset: 544)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !208, file: !209, line: 435, baseType: !284, size: 32, offset: 576)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !215, !287, !102}
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!289 = !DISubroutineType(types: !290)
!290 = !{null, !215, !102}
!291 = !{!195, !292, !339, !360}
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "used_queue", scope: !197, file: !294, line: 18, type: !295, isLocal: true, isDefinition: true, align: 32)
!294 = !DIFile(filename: "zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !295, file: !296, line: 2209, baseType: !299, size: 128)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !300)
!300 = !{!301, !314, !318}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !299, file: !296, line: 1710, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !304)
!303 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !305)
!305 = !{!306, !313}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !304, file: !303, line: 42, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !310)
!310 = !{!311}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !309, file: !303, line: 36, baseType: !312, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !303, line: 32, baseType: !121)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !304, file: !303, line: 43, baseType: !307, size: 32, offset: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !299, file: !296, line: 1711, baseType: !315, offset: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !299, file: !296, line: 1712, baseType: !319, size: 64, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !321)
!320 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !322)
!322 = !{!323}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !321, file: !320, line: 232, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !327)
!327 = !{!328, !334}
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 38, baseType: !329, size: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 38, size: 32, elements: !330)
!330 = !{!331, !333}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !329, file: !325, line: 39, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !329, file: !325, line: 40, baseType: !332, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 42, baseType: !335, size: 32, offset: 32)
!335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 42, size: 32, elements: !336)
!336 = !{!337, !338}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !335, file: !325, line: 43, baseType: !332, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !335, file: !325, line: 44, baseType: !332, size: 32)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "cmd", scope: !341, file: !294, line: 22, type: !348, isLocal: true, isDefinition: true)
!341 = distinct !DISubprogram(name: "console_getline", scope: !294, file: !294, line: 20, type: !342, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !345)
!342 = !DISubroutineType(types: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!345 = !{!346}
!346 = !DILocalVariable(name: "ret", scope: !347, file: !294, line: 29, type: !102)
!347 = distinct !DILexicalBlock(scope: !341, file: !294, line: 29, column: 8)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !351)
!350 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !{!352, !355, !356}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !349, file: !350, line: 23, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !354)
!354 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !349, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !349, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 1024, elements: !358)
!358 = !{!359}
!359 = !DISubrange(count: 128)
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "line_bufs", scope: !197, file: !294, line: 15, type: !362, isLocal: true, isDefinition: true)
!362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 2176, elements: !363)
!363 = !{!364}
!364 = !DISubrange(count: 2)
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "static_regions", scope: !367, file: !374, line: 62, type: !506, isLocal: true, isDefinition: true)
!367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !368, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !369, globals: !370, splitDebugInlining: false, nameTableKind: None)
!368 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!369 = !{!204, !103, !121, !102}
!370 = !{!371, !365}
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !373, file: !374, line: 198, type: !492, isLocal: true, isDefinition: true)
!373 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !374, file: !374, line: 175, type: !375, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !487)
!374 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !DISubroutineType(types: !376)
!376 = !{null, !377}
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !444, !457, !458, !459, !460, !466, !482}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !378, file: !379, line: 247, baseType: !382, size: 384)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !383)
!383 = !{!384, !409, !416, !417, !418, !431, !432, !433}
!384 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 60, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 60, size: 64, elements: !386)
!386 = !{!387, !402}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !385, file: !379, line: 61, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !390)
!390 = !{!391, !397}
!391 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 38, baseType: !392, size: 32)
!392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 38, size: 32, elements: !393)
!393 = !{!394, !396}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !392, file: !325, line: 39, baseType: !395, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !392, file: !325, line: 40, baseType: !395, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 42, baseType: !398, size: 32, offset: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 42, size: 32, elements: !399)
!399 = !{!400, !401}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !398, file: !325, line: 43, baseType: !395, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !398, file: !325, line: 44, baseType: !395, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !385, file: !379, line: 62, baseType: !403, size: 64)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !405)
!404 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !403, file: !404, line: 50, baseType: !407, size: 64)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 64, elements: !363)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !382, file: !379, line: 68, baseType: !410, size: 32, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !412)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !413)
!413 = !{!414}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !412, file: !320, line: 232, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !389)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !382, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !382, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!418 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 90, baseType: !419, size: 16, offset: 112)
!419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 90, size: 16, elements: !420)
!420 = !{!421, !428}
!421 = !DIDerivedType(tag: DW_TAG_member, scope: !419, file: !379, line: 91, baseType: !422, size: 16)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !419, file: !379, line: 91, size: 16, elements: !423)
!423 = !{!424, !427}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !422, file: !379, line: 96, baseType: !425, size: 8)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !426)
!426 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !422, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !419, file: !379, line: 100, baseType: !429, size: 16)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !430)
!430 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !382, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !382, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !382, file: !379, line: 131, baseType: !434, size: 192, offset: 192)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !435)
!435 = !{!436, !437, !443}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !434, file: !320, line: 245, baseType: !388, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !434, file: !320, line: 246, baseType: !438, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !439)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 32)
!440 = !DISubroutineType(types: !441)
!441 = !{null, !442}
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !434, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !378, file: !379, line: 250, baseType: !445, size: 288, offset: 384)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !447)
!446 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !{!448, !449, !450, !451, !452, !453, !454, !455, !456}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !445, file: !446, line: 26, baseType: !121, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !445, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !445, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !445, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !445, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !445, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !445, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !445, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !445, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !378, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !378, file: !379, line: 256, baseType: !411, size: 64, offset: 704)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !378, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !378, file: !379, line: 300, baseType: !461, size: 96, offset: 800)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !462)
!462 = !{!463, !464, !465}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !461, file: !379, line: 153, baseType: !22, size: 32)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !461, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !461, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !378, file: !379, line: 325, baseType: !467, size: 32, offset: 896)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !469)
!469 = !{!470, !479, !480}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !468, file: !296, line: 5074, baseType: !471, size: 96)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{!474, !477, !478}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !471, file: !472, line: 57, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !472, line: 57, flags: DIFlagFwdDecl)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !471, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !471, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !468, file: !296, line: 5075, baseType: !411, size: 64, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !468, file: !296, line: 5076, baseType: !481, offset: 160)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !378, file: !379, line: 343, baseType: !483, size: 64, offset: 928)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !484)
!484 = !{!485, !486}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !483, file: !446, line: 63, baseType: !121, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !483, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!487 = !{!488, !489, !490, !491}
!488 = !DILocalVariable(name: "thread", arg: 1, scope: !373, file: !374, line: 175, type: !377)
!489 = !DILocalVariable(name: "region_num", scope: !373, file: !374, line: 200, type: !154)
!490 = !DILocalVariable(name: "guard_start", scope: !373, file: !374, line: 265, type: !22)
!491 = !DILocalVariable(name: "guard_size", scope: !373, file: !374, line: 266, type: !204)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !504)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !495)
!494 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!495 = !{!496, !497, !498}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !493, file: !494, line: 53, baseType: !22, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !493, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !493, file: !494, line: 55, baseType: !499, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !501)
!500 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !502)
!502 = !{!503}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !501, file: !500, line: 150, baseType: !121, size: 32)
!504 = !{!505}
!505 = !DISubrange(count: 1)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 96, elements: !504)
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !493)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !510, file: !543, line: 39, type: !154, isLocal: true, isDefinition: true)
!510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !512, globals: !542, splitDebugInlining: false, nameTableKind: None)
!511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!512 = !{!513, !102, !103, !530, !154}
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !515, line: 1226, baseType: !516)
!515 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 1213, size: 352, elements: !517)
!517 = !{!518, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !516, file: !515, line: 1215, baseType: !519, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !516, file: !515, line: 1216, baseType: !120, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !516, file: !515, line: 1217, baseType: !120, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !516, file: !515, line: 1218, baseType: !120, size: 32, offset: 96)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !516, file: !515, line: 1219, baseType: !120, size: 32, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !516, file: !515, line: 1220, baseType: !120, size: 32, offset: 160)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !516, file: !515, line: 1221, baseType: !120, size: 32, offset: 192)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !516, file: !515, line: 1222, baseType: !120, size: 32, offset: 224)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !516, file: !515, line: 1223, baseType: !120, size: 32, offset: 256)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !516, file: !515, line: 1224, baseType: !120, size: 32, offset: 288)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !516, file: !515, line: 1225, baseType: !120, size: 32, offset: 320)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !534)
!533 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !532, file: !533, line: 29, baseType: !121, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !532, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !532, file: !533, line: 37, baseType: !538, size: 32, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !540)
!540 = !{!541}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !539, file: !500, line: 143, baseType: !121, size: 32)
!542 = !{!508}
!543 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !546, file: !553, line: 21, type: !106, isLocal: true, isDefinition: true)
!546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !548, globals: !552, splitDebugInlining: false, nameTableKind: None)
!547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!548 = !{!549, !103, !102}
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !551, line: 22, baseType: !103)
!551 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!544}
!553 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !556, file: !561, line: 13, type: !578, isLocal: true, isDefinition: true)
!556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !558, splitDebugInlining: false, nameTableKind: None)
!557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!558 = !{!559, !554}
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "mpu_config", scope: !556, file: !561, line: 37, type: !562, isLocal: false, isDefinition: true)
!561 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !533, line: 41, size: 64, elements: !564)
!564 = !{!565, !566}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !563, file: !533, line: 43, baseType: !121, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !563, file: !533, line: 45, baseType: !567, size: 32, offset: 32)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !570)
!570 = !{!571, !572, !573}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !569, file: !533, line: 29, baseType: !121, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !569, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !569, file: !533, line: 37, baseType: !574, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !575, file: !500, line: 143, baseType: !121, size: 32)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 192, elements: !363)
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !581, file: !665, line: 72, type: !749, isLocal: true, isDefinition: true)
!581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !583, retainedTypes: !651, globals: !662, splitDebugInlining: false, nameTableKind: None)
!582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!583 = !{!30, !584}
!584 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !585)
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650}
!586 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!587 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!588 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!589 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!590 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!591 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!592 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!593 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!594 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!595 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!596 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!597 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!598 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!599 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!600 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!601 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!602 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!603 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!604 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!605 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!606 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!607 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!608 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!609 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!610 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!611 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!612 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!613 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!614 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!615 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!616 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!617 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!618 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!619 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!620 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!621 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!622 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!623 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!624 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!625 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!626 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!627 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!628 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!629 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!630 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!631 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!632 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!633 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!634 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!635 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!636 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!637 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!638 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!639 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!640 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!641 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!642 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!643 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!644 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!645 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!646 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!647 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!648 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!649 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!650 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!651 = !{!204, !103, !102, !652}
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 32)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 244, baseType: !654)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 236, size: 192, elements: !655)
!655 = !{!656, !657, !658, !659, !660, !661}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !654, file: !116, line: 238, baseType: !120, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !654, file: !116, line: 239, baseType: !120, size: 32, offset: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !654, file: !116, line: 240, baseType: !120, size: 32, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !654, file: !116, line: 241, baseType: !120, size: 32, offset: 96)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !654, file: !116, line: 242, baseType: !120, size: 32, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !654, file: !116, line: 243, baseType: !120, size: 32, offset: 160)
!662 = !{!663, !669, !685, !696, !713, !579, !715, !729, !731, !733, !735, !737, !739, !741, !743, !745, !747}
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !581, file: !665, line: 424, type: !666, isLocal: false, isDefinition: true, align: 16)
!665 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !667)
!667 = !{!668}
!668 = !DISubrange(count: 4)
!669 = !DIGlobalVariableExpression(var: !670, expr: !DIExpression())
!670 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !581, file: !665, line: 424, type: !671, isLocal: false, isDefinition: true, align: 32)
!671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !673)
!673 = !{!674, !675, !676, !677, !683, !684}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !672, file: !141, line: 380, baseType: !144, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !672, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !672, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !672, file: !141, line: 386, baseType: !678, size: 32, offset: 96)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !680)
!680 = !{!681, !682}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !679, file: !141, line: 359, baseType: !154, size: 8)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !679, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !672, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !672, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !581, file: !665, line: 424, type: !687, isLocal: true, isDefinition: true, align: 32)
!687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !688)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !689)
!689 = !{!690, !695}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !688, file: !132, line: 60, baseType: !691, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 32)
!692 = !DISubroutineType(types: !693)
!693 = !{!103, !694}
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !688, file: !132, line: 65, baseType: !694, size: 32, offset: 32)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "exti_data", scope: !581, file: !665, line: 423, type: !698, isLocal: true, isDefinition: true)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !665, line: 107, size: 1472, elements: !699)
!699 = !{!700}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !698, file: !665, line: 109, baseType: !701, size: 1472)
!701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !702, size: 1472, elements: !711)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !665, line: 101, size: 64, elements: !703)
!703 = !{!704, !710}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !702, file: !665, line: 102, baseType: !705, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !706, line: 63, baseType: !707)
!706 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 32)
!708 = !DISubroutineType(types: !709)
!709 = !{null, !103, !102}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !702, file: !665, line: 103, baseType: !102, size: 32, offset: 32)
!711 = !{!712}
!712 = !DISubrange(count: 23)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !581, file: !665, line: 424, type: !679, isLocal: true, isDefinition: true, align: 8)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !717, file: !665, line: 493, type: !722, isLocal: true, isDefinition: true, align: 32)
!717 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !665, file: !665, line: 460, type: !718, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !720)
!718 = !DISubroutineType(types: !719)
!719 = !{null, !694}
!720 = !{!721}
!721 = !DILocalVariable(name: "dev", arg: 1, scope: !717, file: !665, line: 460, type: !694)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !723)
!723 = !{!724, !726, !727, !728}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !722, file: !10, line: 55, baseType: !725, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !722, file: !10, line: 57, baseType: !725, size: 32, offset: 32)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !722, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !722, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !717, file: !665, line: 497, type: !722, isLocal: true, isDefinition: true, align: 32)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !717, file: !665, line: 507, type: !722, isLocal: true, isDefinition: true, align: 32)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !717, file: !665, line: 512, type: !722, isLocal: true, isDefinition: true, align: 32)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !717, file: !665, line: 516, type: !722, isLocal: true, isDefinition: true, align: 32)
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !717, file: !665, line: 523, type: !722, isLocal: true, isDefinition: true, align: 32)
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !717, file: !665, line: 527, type: !722, isLocal: true, isDefinition: true, align: 32)
!741 = !DIGlobalVariableExpression(var: !742, expr: !DIExpression())
!742 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !717, file: !665, line: 581, type: !722, isLocal: true, isDefinition: true, align: 32)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !717, file: !665, line: 586, type: !722, isLocal: true, isDefinition: true, align: 32)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !717, file: !665, line: 591, type: !722, isLocal: true, isDefinition: true, align: 32)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !717, file: !665, line: 595, type: !722, isLocal: true, isDefinition: true, align: 32)
!749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 736, elements: !711)
!750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !751)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 134, baseType: !584)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !754, file: !759, line: 22, type: !781, isLocal: false, isDefinition: true, align: 16)
!754 = distinct !DICompileUnit(language: DW_LANG_C99, file: !755, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !756, splitDebugInlining: false, nameTableKind: None)
!755 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!756 = !{!757, !752, !763, !765, !767, !769, !771, !773, !775, !777, !779}
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !754, file: !759, line: 17, type: !760, isLocal: false, isDefinition: true, align: 16)
!759 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 192, elements: !761)
!761 = !{!762}
!762 = !DISubrange(count: 12)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !754, file: !759, line: 29, type: !666, isLocal: false, isDefinition: true, align: 16)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !754, file: !759, line: 36, type: !666, isLocal: false, isDefinition: true, align: 16)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !754, file: !759, line: 43, type: !666, isLocal: false, isDefinition: true, align: 16)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !754, file: !759, line: 50, type: !666, isLocal: false, isDefinition: true, align: 16)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !754, file: !759, line: 57, type: !666, isLocal: false, isDefinition: true, align: 16)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !754, file: !759, line: 64, type: !666, isLocal: false, isDefinition: true, align: 16)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !754, file: !759, line: 71, type: !666, isLocal: false, isDefinition: true, align: 16)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !754, file: !759, line: 78, type: !666, isLocal: false, isDefinition: true, align: 16)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !754, file: !759, line: 85, type: !666, isLocal: false, isDefinition: true, align: 16)
!781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !782)
!782 = !{!783}
!783 = !DISubrange(count: 3)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !786, file: !850, line: 398, type: !883, isLocal: true, isDefinition: true)
!786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !788, retainedTypes: !801, globals: !847, splitDebugInlining: false, nameTableKind: None)
!787 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!788 = !{!789, !30, !794}
!789 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !790, line: 197, baseType: !32, size: 32, elements: !791)
!790 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!791 = !{!792, !793}
!792 = !DIEnumerator(name: "SUCCESS", value: 0)
!793 = !DIEnumerator(name: "ERROR", value: 1)
!794 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !795, line: 44, baseType: !32, size: 32, elements: !796)
!795 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!796 = !{!797, !798, !799, !800}
!797 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!798 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!799 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!800 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!801 = !{!102, !103, !121, !802, !840, !846}
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !804)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !805)
!805 = !{!806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !839}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !804, file: !116, line: 338, baseType: !120, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !804, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !804, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !804, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !804, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !804, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !804, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !804, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !804, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !804, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !804, file: !116, line: 348, baseType: !817, size: 64, offset: 320)
!817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !363)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !804, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !804, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !804, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !804, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !804, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !804, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !804, file: !116, line: 355, baseType: !817, size: 64, offset: 576)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !804, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !804, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !804, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !804, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !804, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !804, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !804, file: !116, line: 362, baseType: !817, size: 64, offset: 832)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !804, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !804, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !804, file: !116, line: 365, baseType: !817, size: 64, offset: 960)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !804, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !804, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !804, file: !116, line: 368, baseType: !838, size: 32, offset: 1088)
!838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 32, elements: !504)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !804, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !842, line: 343, size: 64, elements: !843)
!842 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!843 = !{!844, !845}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !841, file: !842, line: 344, baseType: !121, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !841, file: !842, line: 345, baseType: !121, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!847 = !{!848, !854, !870, !881, !784}
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !786, file: !850, line: 752, type: !851, isLocal: false, isDefinition: true, align: 16)
!850 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 704, elements: !852)
!852 = !{!853}
!853 = !DISubrange(count: 44)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !786, file: !850, line: 752, type: !856, isLocal: false, isDefinition: true, align: 32)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !858)
!858 = !{!859, !860, !861, !862, !868, !869}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !857, file: !141, line: 380, baseType: !144, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !857, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !857, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !857, file: !141, line: 386, baseType: !863, size: 32, offset: 96)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !865)
!865 = !{!866, !867}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !864, file: !141, line: 359, baseType: !154, size: 8)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !864, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !857, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !857, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !786, file: !850, line: 752, type: !872, isLocal: true, isDefinition: true, align: 32)
!872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !873)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !874)
!874 = !{!875, !880}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !873, file: !132, line: 60, baseType: !876, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DISubroutineType(types: !878)
!878 = !{!103, !879}
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !873, file: !132, line: 65, baseType: !879, size: 32, offset: 32)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !786, file: !850, line: 752, type: !864, isLocal: true, isDefinition: true, align: 8)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !795, line: 100, size: 224, elements: !884)
!884 = !{!885, !891, !892, !901, !906, !911, !917}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !883, file: !795, line: 101, baseType: !886, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !795, line: 76, baseType: !887)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = !DISubroutineType(types: !889)
!889 = !{!103, !879, !890}
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !795, line: 56, baseType: !102)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !883, file: !795, line: 102, baseType: !886, size: 32, offset: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !883, file: !795, line: 103, baseType: !893, size: 32, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !795, line: 83, baseType: !894)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = !DISubroutineType(types: !896)
!896 = !{!103, !879, !890, !897, !102}
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !795, line: 72, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = !DISubroutineType(types: !900)
!900 = !{null, !879, !890, !102}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !883, file: !795, line: 104, baseType: !902, size: 32, offset: 96)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !795, line: 79, baseType: !903)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 32)
!904 = !DISubroutineType(types: !905)
!905 = !{!103, !879, !890, !846}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !883, file: !795, line: 105, baseType: !907, size: 32, offset: 128)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !795, line: 88, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DISubroutineType(types: !910)
!910 = !{!794, !879, !890}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !883, file: !795, line: 106, baseType: !912, size: 32, offset: 160)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !795, line: 92, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!914 = !DISubroutineType(types: !915)
!915 = !{!103, !879, !890, !916}
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !795, line: 64, baseType: !102)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !883, file: !795, line: 107, baseType: !918, size: 32, offset: 192)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !795, line: 96, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!103, !879, !890, !102}
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "avail_queue", scope: !924, file: !928, line: 108, type: !1025, isLocal: true, isDefinition: true)
!924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !925, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !926, retainedTypes: !935, globals: !1015, splitDebugInlining: false, nameTableKind: None)
!925 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!926 = !{!30, !927}
!927 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !928, line: 214, baseType: !32, size: 32, elements: !929)
!928 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!929 = !{!930, !931, !932, !933, !934}
!930 = !DIEnumerator(name: "ESC_ESC", value: 0)
!931 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!932 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!933 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!934 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!935 = !{!102, !103, !936, !32, !24}
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !938)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !939)
!939 = !{!940, !959, !963, !967, !980, !985, !989, !993, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !938, file: !209, line: 365, baseType: !941, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{!103, !944, !230}
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !946)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !947)
!947 = !{!948, !949, !950, !951, !957, !958}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !946, file: !141, line: 380, baseType: !144, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !946, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !946, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !946, file: !141, line: 386, baseType: !952, size: 32, offset: 96)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !954)
!954 = !{!955, !956}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !953, file: !141, line: 359, baseType: !154, size: 8)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !953, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !946, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !946, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !938, file: !209, line: 366, baseType: !960, size: 32, offset: 32)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = !DISubroutineType(types: !962)
!962 = !{null, !944, !155}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !938, file: !209, line: 374, baseType: !964, size: 32, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{!103, !944}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !938, file: !209, line: 377, baseType: !968, size: 32, offset: 96)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!969 = !DISubroutineType(types: !970)
!970 = !{!103, !944, !971}
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !974)
!974 = !{!975, !976, !977, !978, !979}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !973, file: !209, line: 123, baseType: !121, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !973, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !973, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !973, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !973, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !938, file: !209, line: 379, baseType: !981, size: 32, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DISubroutineType(types: !983)
!983 = !{!103, !944, !984}
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !938, file: !209, line: 384, baseType: !986, size: 32, offset: 160)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = !DISubroutineType(types: !988)
!988 = !{!103, !944, !261, !103}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !938, file: !209, line: 393, baseType: !990, size: 32, offset: 192)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{!103, !944, !267, !268}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !938, file: !209, line: 402, baseType: !994, size: 32, offset: 224)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!995 = !DISubroutineType(types: !996)
!996 = !{null, !944}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !938, file: !209, line: 405, baseType: !994, size: 32, offset: 256)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !938, file: !209, line: 408, baseType: !964, size: 32, offset: 288)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !938, file: !209, line: 411, baseType: !994, size: 32, offset: 320)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !938, file: !209, line: 414, baseType: !994, size: 32, offset: 352)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !938, file: !209, line: 417, baseType: !964, size: 32, offset: 384)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !938, file: !209, line: 420, baseType: !964, size: 32, offset: 416)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !938, file: !209, line: 423, baseType: !994, size: 32, offset: 448)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !938, file: !209, line: 426, baseType: !994, size: 32, offset: 480)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !938, file: !209, line: 429, baseType: !964, size: 32, offset: 512)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !938, file: !209, line: 432, baseType: !964, size: 32, offset: 544)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !938, file: !209, line: 435, baseType: !1008, size: 32, offset: 576)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{null, !944, !1011, !102}
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1012)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{null, !944, !102}
!1015 = !{!1016, !922, !1023, !1063, !1068, !1071, !1090, !1094, !1096, !1098, !1100}
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !924, file: !928, line: 603, type: !1018, isLocal: true, isDefinition: true, align: 32)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1019)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1020)
!1020 = !{!1021, !1022}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1019, file: !132, line: 60, baseType: !964, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1019, file: !132, line: 65, baseType: !944, size: 32, offset: 32)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "lines_queue", scope: !924, file: !928, line: 109, type: !1025, isLocal: true, isDefinition: true)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 32)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !1027)
!1027 = !{!1028}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1026, file: !296, line: 2209, baseType: !1029, size: 128)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !1030)
!1030 = !{!1031, !1042, !1044}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1029, file: !296, line: 1710, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !1034)
!1034 = !{!1035, !1041}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1033, file: !303, line: 42, baseType: !1036, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !1039)
!1039 = !{!1040}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1038, file: !303, line: 36, baseType: !312, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1033, file: !303, line: 43, baseType: !1036, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1029, file: !296, line: 1711, baseType: !1043, offset: 64)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1029, file: !296, line: 1712, baseType: !1045, size: 64, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !1047)
!1047 = !{!1048}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1046, file: !320, line: 232, baseType: !1049, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !1050)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !1051)
!1051 = !{!1052, !1058}
!1052 = !DIDerivedType(tag: DW_TAG_member, scope: !1050, file: !325, line: 38, baseType: !1053, size: 32)
!1053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1050, file: !325, line: 38, size: 32, elements: !1054)
!1054 = !{!1055, !1057}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1053, file: !325, line: 39, baseType: !1056, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1053, file: !325, line: 40, baseType: !1056, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, scope: !1050, file: !325, line: 42, baseType: !1059, size: 32, offset: 32)
!1059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1050, file: !325, line: 42, size: 32, elements: !1060)
!1060 = !{!1061, !1062}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1059, file: !325, line: 43, baseType: !1056, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1059, file: !325, line: 44, baseType: !1056, size: 32)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(name: "completion_cb", scope: !924, file: !928, line: 110, type: !1065, isLocal: true, isDefinition: true)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!154, !344, !154}
!1068 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression())
!1069 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !924, file: !928, line: 38, type: !1070, isLocal: true, isDefinition: true)
!1070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !944)
!1071 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression())
!1072 = distinct !DIGlobalVariable(name: "cmd", scope: !1073, file: !928, line: 435, type: !1084, isLocal: true, isDefinition: true)
!1073 = distinct !DISubprogram(name: "uart_console_isr", scope: !928, file: !928, line: 428, type: !1013, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !1074)
!1074 = !{!1075, !1076, !1077, !1079, !1080}
!1075 = !DILocalVariable(name: "unused", arg: 1, scope: !1073, file: !928, line: 428, type: !944)
!1076 = !DILocalVariable(name: "user_data", arg: 2, scope: !1073, file: !928, line: 428, type: !102)
!1077 = !DILocalVariable(name: "byte", scope: !1078, file: !928, line: 436, type: !154)
!1078 = distinct !DILexicalBlock(scope: !1073, file: !928, line: 434, column: 48)
!1079 = !DILocalVariable(name: "rx", scope: !1078, file: !928, line: 437, type: !103)
!1080 = !DILocalVariable(name: "ret", scope: !1081, file: !928, line: 461, type: !102)
!1081 = distinct !DILexicalBlock(scope: !1082, file: !928, line: 461, column: 10)
!1082 = distinct !DILexicalBlock(scope: !1083, file: !928, line: 460, column: 13)
!1083 = distinct !DILexicalBlock(scope: !1078, file: !928, line: 460, column: 7)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !1086)
!1086 = !{!1087, !1088, !1089}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1085, file: !350, line: 23, baseType: !353, size: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1085, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1085, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "esc_state", scope: !924, file: !928, line: 228, type: !1092, isLocal: true, isDefinition: true)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1093, line: 22, baseType: !354)
!1093 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "ansi_val", scope: !924, file: !928, line: 229, type: !32, isLocal: true, isDefinition: true)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !924, file: !928, line: 229, type: !32, isLocal: true, isDefinition: true)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "cur", scope: !924, file: !928, line: 230, type: !154, isLocal: true, isDefinition: true)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "end", scope: !924, file: !928, line: 230, type: !154, isLocal: true, isDefinition: true)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1104, file: !1273, line: 762, type: !1382, isLocal: true, isDefinition: true)
!1104 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1105, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1106, retainedTypes: !1124, globals: !1270, splitDebugInlining: false, nameTableKind: None)
!1105 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!1106 = !{!30, !1107, !1113, !1118, !794}
!1107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1108, line: 506, baseType: !32, size: 32, elements: !1109)
!1108 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1109 = !{!1110, !1111, !1112}
!1110 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1111 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1112 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1108, line: 512, baseType: !32, size: 32, elements: !1114)
!1114 = !{!1115, !1116, !1117}
!1115 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1116 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1117 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !706, line: 43, baseType: !32, size: 32, elements: !1119)
!1119 = !{!1120, !1121, !1122, !1123}
!1120 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1121 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1122 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1123 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1124 = !{!102, !103, !1125, !1195, !1200, !1160, !1113, !1107, !1205, !1206, !121, !1220, !1175, !344, !1230, !1231}
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1127)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1108, line: 523, size: 288, elements: !1128)
!1128 = !{!1129, !1150, !1156, !1161, !1165, !1166, !1167, !1171, !1191}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1127, file: !1108, line: 524, baseType: !1130, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!103, !1133, !1148, !1149}
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1135)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1136)
!1136 = !{!1137, !1138, !1139, !1140, !1146, !1147}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1135, file: !141, line: 380, baseType: !144, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1135, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1135, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1135, file: !141, line: 386, baseType: !1141, size: 32, offset: 96)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1143)
!1143 = !{!1144, !1145}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1142, file: !141, line: 359, baseType: !154, size: 8)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1142, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1135, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1135, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1108, line: 237, baseType: !154)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1108, line: 257, baseType: !121)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1127, file: !1108, line: 530, baseType: !1151, size: 32, offset: 32)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!103, !1133, !1154}
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1108, line: 229, baseType: !121)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1127, file: !1108, line: 532, baseType: !1157, size: 32, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!103, !1133, !1160, !1155}
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1108, line: 216, baseType: !121)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1127, file: !1108, line: 535, baseType: !1162, size: 32, offset: 96)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!103, !1133, !1160}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1127, file: !1108, line: 537, baseType: !1162, size: 32, offset: 128)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1127, file: !1108, line: 539, baseType: !1162, size: 32, offset: 160)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1127, file: !1108, line: 541, baseType: !1168, size: 32, offset: 192)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 32)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!103, !1133, !1148, !1107, !1113}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1127, file: !1108, line: 544, baseType: !1172, size: 32, offset: 224)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!103, !1133, !1175, !157}
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1108, line: 478, size: 96, elements: !1177)
!1177 = !{!1178, !1185, !1190}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1176, file: !1108, line: 482, baseType: !1179, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1180, line: 33, baseType: !1181)
!1180 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1180, line: 29, size: 32, elements: !1182)
!1182 = !{!1183}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1181, file: !1180, line: 30, baseType: !1184, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1176, file: !1108, line: 485, baseType: !1186, size: 32, offset: 32)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1108, line: 464, baseType: !1187)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{null, !1133, !1175, !1160}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1176, file: !1108, line: 493, baseType: !1160, size: 32, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1127, file: !1108, line: 547, baseType: !1192, size: 32, offset: 256)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!121, !1133}
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1108, line: 428, size: 32, elements: !1198)
!1198 = !{!1199}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1197, file: !1108, line: 434, baseType: !1160, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1108, line: 441, size: 32, elements: !1203)
!1203 = !{!1204}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1202, file: !1108, line: 447, baseType: !1160, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 276, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 265, size: 320, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1208, file: !116, line: 267, baseType: !120, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1208, file: !116, line: 268, baseType: !120, size: 32, offset: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1208, file: !116, line: 269, baseType: !120, size: 32, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1208, file: !116, line: 270, baseType: !120, size: 32, offset: 96)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1208, file: !116, line: 271, baseType: !120, size: 32, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1208, file: !116, line: 272, baseType: !120, size: 32, offset: 160)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1208, file: !116, line: 273, baseType: !120, size: 32, offset: 192)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1208, file: !116, line: 274, baseType: !120, size: 32, offset: 224)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1208, file: !116, line: 275, baseType: !1219, size: 64, offset: 256)
!1219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !363)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 289, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 282, size: 288, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1228, !1229}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1222, file: !116, line: 284, baseType: !120, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1222, file: !116, line: 285, baseType: !120, size: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1222, file: !116, line: 286, baseType: !1227, size: 128, offset: 64)
!1227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !667)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1222, file: !116, line: 287, baseType: !817, size: 64, offset: 192)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1222, file: !116, line: 288, baseType: !120, size: 32, offset: 256)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !795, line: 100, size: 224, elements: !1234)
!1234 = !{!1235, !1240, !1241, !1250, !1255, !1260, !1265}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1233, file: !795, line: 101, baseType: !1236, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !795, line: 76, baseType: !1237)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!103, !1133, !890}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1233, file: !795, line: 102, baseType: !1236, size: 32, offset: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1233, file: !795, line: 103, baseType: !1242, size: 32, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !795, line: 83, baseType: !1243)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!103, !1133, !890, !1246, !102}
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !795, line: 72, baseType: !1247)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{null, !1133, !890, !102}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1233, file: !795, line: 104, baseType: !1251, size: 32, offset: 96)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !795, line: 79, baseType: !1252)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!103, !1133, !890, !846}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1233, file: !795, line: 105, baseType: !1256, size: 32, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !795, line: 88, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!794, !1133, !890}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1233, file: !795, line: 106, baseType: !1261, size: 32, offset: 160)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !795, line: 92, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!103, !1133, !890, !916}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1233, file: !795, line: 107, baseType: !1266, size: 32, offset: 192)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !795, line: 96, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!103, !1133, !890, !102}
!1270 = !{!1271, !1277, !1279, !1289, !1294, !1296, !1298, !1300, !1302, !1304, !1306, !1308, !1310, !1312, !1314, !1316, !1318, !1320, !1322, !1324, !1326, !1328, !1330, !1332, !1334, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1102, !1378, !1380, !1393, !1395, !1397, !1399, !1401, !1403}
!1271 = !DIGlobalVariableExpression(var: !1272, expr: !DIExpression())
!1272 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1104, file: !1273, line: 762, type: !1274, isLocal: false, isDefinition: true, align: 16)
!1273 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1275)
!1275 = !{!1276}
!1276 = !DISubrange(count: 5)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1104, file: !1273, line: 762, type: !1134, isLocal: false, isDefinition: true, align: 32)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1104, file: !1273, line: 762, type: !1281, isLocal: true, isDefinition: true, align: 32)
!1281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1283)
!1283 = !{!1284, !1288}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1282, file: !132, line: 60, baseType: !1285, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!103, !1133}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1282, file: !132, line: 65, baseType: !1133, size: 32, offset: 32)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1104, file: !1273, line: 766, type: !1291, isLocal: false, isDefinition: true, align: 16)
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 160, elements: !1292)
!1292 = !{!1293}
!1293 = !DISubrange(count: 10)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1104, file: !1273, line: 766, type: !1134, isLocal: false, isDefinition: true, align: 32)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1104, file: !1273, line: 766, type: !1281, isLocal: true, isDefinition: true, align: 32)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1104, file: !1273, line: 770, type: !1274, isLocal: false, isDefinition: true, align: 16)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1104, file: !1273, line: 770, type: !1134, isLocal: false, isDefinition: true, align: 32)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1104, file: !1273, line: 770, type: !1281, isLocal: true, isDefinition: true, align: 32)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1104, file: !1273, line: 774, type: !1274, isLocal: false, isDefinition: true, align: 16)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1104, file: !1273, line: 774, type: !1134, isLocal: false, isDefinition: true, align: 32)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1104, file: !1273, line: 774, type: !1281, isLocal: true, isDefinition: true, align: 32)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1104, file: !1273, line: 778, type: !1274, isLocal: false, isDefinition: true, align: 16)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1104, file: !1273, line: 778, type: !1134, isLocal: false, isDefinition: true, align: 32)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1104, file: !1273, line: 778, type: !1281, isLocal: true, isDefinition: true, align: 32)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1104, file: !1273, line: 782, type: !1274, isLocal: false, isDefinition: true, align: 16)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1104, file: !1273, line: 782, type: !1134, isLocal: false, isDefinition: true, align: 32)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1104, file: !1273, line: 782, type: !1281, isLocal: true, isDefinition: true, align: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1104, file: !1273, line: 786, type: !1274, isLocal: false, isDefinition: true, align: 16)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1104, file: !1273, line: 786, type: !1134, isLocal: false, isDefinition: true, align: 32)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1104, file: !1273, line: 786, type: !1281, isLocal: true, isDefinition: true, align: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1104, file: !1273, line: 790, type: !1274, isLocal: false, isDefinition: true, align: 16)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1104, file: !1273, line: 790, type: !1134, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1104, file: !1273, line: 790, type: !1281, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1104, file: !1273, line: 762, type: !1336, isLocal: true, isDefinition: true)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1337, line: 237, size: 128, elements: !1338)
!1337 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1338 = !{!1339, !1340, !1341}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1336, file: !1337, line: 239, baseType: !1202, size: 32)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1336, file: !1337, line: 241, baseType: !1133, size: 32, offset: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1336, file: !1337, line: 243, baseType: !1342, size: 64, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1180, line: 40, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1180, line: 35, size: 64, elements: !1344)
!1344 = !{!1345, !1347}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1343, file: !1180, line: 36, baseType: !1346, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1343, file: !1180, line: 37, baseType: !1346, size: 32, offset: 32)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1104, file: !1273, line: 762, type: !1142, isLocal: true, isDefinition: true, align: 8)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1104, file: !1273, line: 766, type: !1336, isLocal: true, isDefinition: true)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1104, file: !1273, line: 766, type: !1142, isLocal: true, isDefinition: true, align: 8)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1104, file: !1273, line: 770, type: !1336, isLocal: true, isDefinition: true)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1104, file: !1273, line: 770, type: !1142, isLocal: true, isDefinition: true, align: 8)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1104, file: !1273, line: 774, type: !1336, isLocal: true, isDefinition: true)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1104, file: !1273, line: 774, type: !1142, isLocal: true, isDefinition: true, align: 8)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1104, file: !1273, line: 778, type: !1336, isLocal: true, isDefinition: true)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1104, file: !1273, line: 778, type: !1142, isLocal: true, isDefinition: true, align: 8)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1104, file: !1273, line: 782, type: !1336, isLocal: true, isDefinition: true)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1104, file: !1273, line: 782, type: !1142, isLocal: true, isDefinition: true, align: 8)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1104, file: !1273, line: 786, type: !1336, isLocal: true, isDefinition: true)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1104, file: !1273, line: 786, type: !1142, isLocal: true, isDefinition: true, align: 8)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1104, file: !1273, line: 790, type: !1336, isLocal: true, isDefinition: true)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1104, file: !1273, line: 790, type: !1142, isLocal: true, isDefinition: true, align: 8)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1104, file: !1273, line: 656, type: !1126, isLocal: true, isDefinition: true)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1104, file: !1273, line: 766, type: !1382, isLocal: true, isDefinition: true)
!1382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1337, line: 224, size: 160, elements: !1384)
!1384 = !{!1385, !1386, !1387, !1388}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1383, file: !1337, line: 226, baseType: !1197, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1383, file: !1337, line: 228, baseType: !846, size: 32, offset: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1383, file: !1337, line: 230, baseType: !103, size: 32, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1383, file: !1337, line: 231, baseType: !1389, size: 64, offset: 96)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !842, line: 343, size: 64, elements: !1390)
!1390 = !{!1391, !1392}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1389, file: !842, line: 344, baseType: !121, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1389, file: !842, line: 345, baseType: !121, size: 32, offset: 32)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1104, file: !1273, line: 770, type: !1382, isLocal: true, isDefinition: true)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1104, file: !1273, line: 774, type: !1382, isLocal: true, isDefinition: true)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1104, file: !1273, line: 778, type: !1382, isLocal: true, isDefinition: true)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1104, file: !1273, line: 782, type: !1382, isLocal: true, isDefinition: true)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1104, file: !1273, line: 786, type: !1382, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1104, file: !1273, line: 790, type: !1382, isLocal: true, isDefinition: true)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1407, file: !1578, line: 1914, type: !1652, isLocal: true, isDefinition: true)
!1407 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1408, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1409, retainedTypes: !1442, globals: !1575, splitDebugInlining: false, nameTableKind: None)
!1408 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!1409 = !{!30, !1410, !1417, !1424, !1431, !1437, !794}
!1410 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !209, line: 47, baseType: !32, size: 32, elements: !1411)
!1411 = !{!1412, !1413, !1414, !1415, !1416}
!1412 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1413 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1414 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1415 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1416 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1417 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !209, line: 75, baseType: !32, size: 32, elements: !1418)
!1418 = !{!1419, !1420, !1421, !1422, !1423}
!1419 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1420 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1421 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1422 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1423 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1424 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !209, line: 92, baseType: !32, size: 32, elements: !1425)
!1425 = !{!1426, !1427, !1428, !1429, !1430}
!1426 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1427 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1428 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1429 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1430 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1431 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !209, line: 84, baseType: !32, size: 32, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1436}
!1433 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1434 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1435 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1436 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1437 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !209, line: 107, baseType: !32, size: 32, elements: !1438)
!1438 = !{!1439, !1440, !1441}
!1439 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1440 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1441 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1442 = !{!102, !103, !1443, !155, !154, !1522, !121, !890, !1533, !429, !1572, !1574}
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1445)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !1446)
!1446 = !{!1447, !1466, !1470, !1474, !1487, !1492, !1496, !1500, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1445, file: !209, line: 365, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 32)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!103, !1451, !230}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1454)
!1454 = !{!1455, !1456, !1457, !1458, !1464, !1465}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1453, file: !141, line: 380, baseType: !144, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1453, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1453, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1453, file: !141, line: 386, baseType: !1459, size: 32, offset: 96)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1461)
!1461 = !{!1462, !1463}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1460, file: !141, line: 359, baseType: !154, size: 8)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1460, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1453, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1453, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1445, file: !209, line: 366, baseType: !1467, size: 32, offset: 32)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 32)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{null, !1451, !155}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1445, file: !209, line: 374, baseType: !1471, size: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!103, !1451}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1445, file: !209, line: 377, baseType: !1475, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!103, !1451, !1478}
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1480)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !1481)
!1481 = !{!1482, !1483, !1484, !1485, !1486}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1480, file: !209, line: 123, baseType: !121, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1480, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1480, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1480, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1480, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1445, file: !209, line: 379, baseType: !1488, size: 32, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!103, !1451, !1491}
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1445, file: !209, line: 384, baseType: !1493, size: 32, offset: 160)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!103, !1451, !261, !103}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1445, file: !209, line: 393, baseType: !1497, size: 32, offset: 192)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!103, !1451, !267, !268}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1445, file: !209, line: 402, baseType: !1501, size: 32, offset: 224)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{null, !1451}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1445, file: !209, line: 405, baseType: !1501, size: 32, offset: 256)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1445, file: !209, line: 408, baseType: !1471, size: 32, offset: 288)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1445, file: !209, line: 411, baseType: !1501, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1445, file: !209, line: 414, baseType: !1501, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1445, file: !209, line: 417, baseType: !1471, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1445, file: !209, line: 420, baseType: !1471, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1445, file: !209, line: 423, baseType: !1501, size: 32, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1445, file: !209, line: 426, baseType: !1501, size: 32, offset: 480)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1445, file: !209, line: 429, baseType: !1471, size: 32, offset: 512)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1445, file: !209, line: 432, baseType: !1471, size: 32, offset: 544)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1445, file: !209, line: 435, baseType: !1515, size: 32, offset: 576)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{null, !1451, !1518, !102}
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1519)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{null, !1451, !102}
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 508, baseType: !1524)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 499, size: 224, elements: !1525)
!1525 = !{!1526, !1527, !1528, !1529, !1530, !1531, !1532}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1524, file: !116, line: 501, baseType: !120, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1524, file: !116, line: 502, baseType: !120, size: 32, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1524, file: !116, line: 503, baseType: !120, size: 32, offset: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1524, file: !116, line: 504, baseType: !120, size: 32, offset: 96)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1524, file: !116, line: 505, baseType: !120, size: 32, offset: 128)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1524, file: !116, line: 506, baseType: !120, size: 32, offset: 160)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1524, file: !116, line: 507, baseType: !120, size: 32, offset: 192)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1535)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !795, line: 100, size: 224, elements: !1536)
!1536 = !{!1537, !1542, !1543, !1552, !1557, !1562, !1567}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1535, file: !795, line: 101, baseType: !1538, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !795, line: 76, baseType: !1539)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!103, !1451, !890}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1535, file: !795, line: 102, baseType: !1538, size: 32, offset: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1535, file: !795, line: 103, baseType: !1544, size: 32, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !795, line: 83, baseType: !1545)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!103, !1451, !890, !1548, !102}
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !795, line: 72, baseType: !1549)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 32)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{null, !1451, !890, !102}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1535, file: !795, line: 104, baseType: !1553, size: 32, offset: 96)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !795, line: 79, baseType: !1554)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!103, !1451, !890, !846}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1535, file: !795, line: 105, baseType: !1558, size: 32, offset: 128)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !795, line: 88, baseType: !1559)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 32)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!794, !1451, !890}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1535, file: !795, line: 106, baseType: !1563, size: 32, offset: 160)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !795, line: 92, baseType: !1564)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!103, !1451, !890, !916}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1535, file: !795, line: 107, baseType: !1568, size: 32, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !795, line: 96, baseType: !1569)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!103, !1451, !890, !102}
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1573)
!1573 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1575 = !{!1576, !1582, !1584, !1591, !1405, !1593, !1601, !1624, !1627, !1630, !1641, !1643}
!1576 = !DIGlobalVariableExpression(var: !1577, expr: !DIExpression())
!1577 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1407, file: !1578, line: 1914, type: !1579, isLocal: false, isDefinition: true, align: 16)
!1578 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1580)
!1580 = !{!1581}
!1581 = !DISubrange(count: 8)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1407, file: !1578, line: 1914, type: !1452, isLocal: false, isDefinition: true, align: 32)
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1407, file: !1578, line: 1914, type: !1586, isLocal: true, isDefinition: true, align: 32)
!1586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1587)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1588)
!1588 = !{!1589, !1590}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1587, file: !132, line: 60, baseType: !1471, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1587, file: !132, line: 65, baseType: !1451, size: 32, offset: 32)
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1407, file: !1578, line: 1914, type: !1460, isLocal: true, isDefinition: true, align: 8)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1407, file: !1578, line: 1914, type: !1595, isLocal: true, isDefinition: true)
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1596, size: 64, elements: !504)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !842, line: 343, size: 64, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1597, file: !842, line: 344, baseType: !121, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1597, file: !842, line: 345, baseType: !121, size: 32, offset: 32)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1407, file: !1578, line: 1914, type: !1603, isLocal: true, isDefinition: true)
!1603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1605, line: 60, size: 64, elements: !1606)
!1605 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1606 = !{!1607, !1623}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1604, file: !1605, line: 69, baseType: !1608, size: 32)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1605, line: 50, size: 64, elements: !1611)
!1611 = !{!1612, !1621, !1622}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1610, file: !1605, line: 52, baseType: !1613, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1616, line: 37, baseType: !1617)
!1616 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1616, line: 32, size: 64, elements: !1618)
!1618 = !{!1619, !1620}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1617, file: !1616, line: 34, baseType: !121, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1617, file: !1616, line: 36, baseType: !121, size: 32, offset: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1610, file: !1605, line: 54, baseType: !154, size: 8, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1610, file: !1605, line: 56, baseType: !154, size: 8, offset: 40)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1604, file: !1605, line: 71, baseType: !154, size: 8, offset: 32)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1407, file: !1578, line: 1914, type: !1626, isLocal: true, isDefinition: true)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1609, size: 64, elements: !504)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1407, file: !1578, line: 1914, type: !1629, isLocal: true, isDefinition: true)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1614, size: 128, elements: !363)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1632, file: !1578, line: 1914, type: !1635, isLocal: true, isDefinition: true, align: 32)
!1632 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1578, file: !1578, line: 1914, type: !1502, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !1633)
!1633 = !{!1634}
!1634 = !DILocalVariable(name: "dev", arg: 1, scope: !1632, file: !1578, line: 1914, type: !1451)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1636)
!1636 = !{!1637, !1638, !1639, !1640}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1635, file: !10, line: 55, baseType: !725, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1635, file: !10, line: 57, baseType: !725, size: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1635, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1635, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1407, file: !1578, line: 1539, type: !1444, isLocal: true, isDefinition: true)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1407, file: !1578, line: 1914, type: !1645, isLocal: true, isDefinition: true)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1646, line: 74, size: 128, elements: !1647)
!1646 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1647 = !{!1648, !1649, !1650, !1651}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1645, file: !1646, line: 76, baseType: !121, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1645, file: !1646, line: 78, baseType: !1451, size: 32, offset: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1645, file: !1646, line: 80, baseType: !1518, size: 32, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1645, file: !1646, line: 81, baseType: !102, size: 32, offset: 96)
!1652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1646, line: 22, size: 256, elements: !1654)
!1654 = !{!1655, !1656, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1667}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1653, file: !1646, line: 24, baseType: !1522, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1653, file: !1646, line: 26, baseType: !1657, size: 32, offset: 32)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1653, file: !1646, line: 28, baseType: !204, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1653, file: !1646, line: 30, baseType: !157, size: 8, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1653, file: !1646, line: 32, baseType: !103, size: 32, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1653, file: !1646, line: 34, baseType: !157, size: 8, offset: 160)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1653, file: !1646, line: 36, baseType: !157, size: 8, offset: 168)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1653, file: !1646, line: 38, baseType: !157, size: 8, offset: 176)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1653, file: !1646, line: 40, baseType: !157, size: 8, offset: 184)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1653, file: !1646, line: 41, baseType: !1666, size: 32, offset: 192)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1653, file: !1646, line: 44, baseType: !1668, size: 32, offset: 224)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !209, line: 150, baseType: !1501)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1671, file: !1747, line: 65, type: !120, isLocal: true, isDefinition: true)
!1671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1673, retainedTypes: !1674, globals: !1744, splitDebugInlining: false, nameTableKind: None)
!1672 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!1673 = !{!584}
!1674 = !{!200, !1675, !725, !154, !121, !1683, !1714}
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !1678)
!1678 = !{!1679, !1680, !1681, !1682}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1677, file: !515, line: 766, baseType: !120, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1677, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1677, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1677, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !1685)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !1686)
!1686 = !{!1687, !1689, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1704, !1709, !1713}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1685, file: !515, line: 413, baseType: !1688, size: 256)
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1580)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1685, file: !515, line: 414, baseType: !1690, size: 768, offset: 256)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1691)
!1691 = !{!1692}
!1692 = !DISubrange(count: 24)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1685, file: !515, line: 415, baseType: !1688, size: 256, offset: 1024)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1685, file: !515, line: 416, baseType: !1690, size: 768, offset: 1280)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1685, file: !515, line: 417, baseType: !1688, size: 256, offset: 2048)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1685, file: !515, line: 418, baseType: !1690, size: 768, offset: 2304)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1685, file: !515, line: 419, baseType: !1688, size: 256, offset: 3072)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1685, file: !515, line: 420, baseType: !1690, size: 768, offset: 3328)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1685, file: !515, line: 421, baseType: !1688, size: 256, offset: 4096)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1685, file: !515, line: 422, baseType: !1701, size: 1792, offset: 4352)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1702)
!1702 = !{!1703}
!1703 = !DISubrange(count: 56)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1685, file: !515, line: 423, baseType: !1705, size: 1920, offset: 6144)
!1705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1706, size: 1920, elements: !1707)
!1706 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1707 = !{!1708}
!1708 = !DISubrange(count: 240)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1685, file: !515, line: 424, baseType: !1710, size: 20608, offset: 8064)
!1710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1711)
!1711 = !{!1712}
!1712 = !DISubrange(count: 644)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1685, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !1717)
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1723, !1724, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1735, !1736, !1737, !1739, !1741, !1743}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1716, file: !515, line: 447, baseType: !519, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1716, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1716, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1716, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1716, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1716, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1716, file: !515, line: 453, baseType: !1725, size: 96, offset: 192)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1706, size: 96, elements: !761)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1716, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1716, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1716, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1716, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1716, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1716, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1716, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1716, file: !515, line: 461, baseType: !1734, size: 64, offset: 512)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 64, elements: !363)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1716, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1716, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1716, file: !515, line: 464, baseType: !1738, size: 128, offset: 640)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 128, elements: !667)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1716, file: !515, line: 465, baseType: !1740, size: 160, offset: 768)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 160, elements: !1275)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1716, file: !515, line: 466, baseType: !1742, size: 160, offset: 928)
!1742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1275)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1716, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!1744 = !{!1745, !1771, !1774, !1776, !1778, !1669}
!1745 = !DIGlobalVariableExpression(var: !1746, expr: !DIExpression())
!1746 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1671, file: !1747, line: 285, type: !1748, isLocal: true, isDefinition: true, align: 32)
!1747 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1749)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1750)
!1750 = !{!1751, !1770}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1749, file: !132, line: 60, baseType: !1752, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = !DISubroutineType(types: !1754)
!1754 = !{!103, !1755}
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1757)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1758)
!1758 = !{!1759, !1760, !1761, !1762, !1768, !1769}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1757, file: !141, line: 380, baseType: !144, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1757, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1757, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1757, file: !141, line: 386, baseType: !1763, size: 32, offset: 96)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1765)
!1765 = !{!1766, !1767}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1764, file: !141, line: 359, baseType: !154, size: 8)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1764, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1757, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1757, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1749, file: !132, line: 65, baseType: !1755, size: 32, offset: 32)
!1771 = !DIGlobalVariableExpression(var: !1772, expr: !DIExpression())
!1772 = distinct !DIGlobalVariable(name: "lock", scope: !1671, file: !1747, line: 34, type: !1773, isLocal: true, isDefinition: true)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "last_load", scope: !1671, file: !1747, line: 36, type: !121, isLocal: true, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1671, file: !1747, line: 48, type: !121, isLocal: true, isDefinition: true)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1671, file: !1747, line: 54, type: !121, isLocal: true, isDefinition: true)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1782, file: !1864, line: 22, type: !1866, isLocal: true, isDefinition: true)
!1782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1783, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1784, retainedTypes: !1785, globals: !1861, splitDebugInlining: false, nameTableKind: None)
!1783 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!1784 = !{!1107, !1113}
!1785 = !{!1786, !1850, !1855, !1160, !1113, !1107, !1860, !102}
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1108, line: 523, size: 288, elements: !1789)
!1789 = !{!1790, !1809, !1813, !1817, !1821, !1822, !1823, !1827, !1846}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1788, file: !1108, line: 524, baseType: !1791, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{!103, !1794, !1148, !1149}
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1797)
!1797 = !{!1798, !1799, !1800, !1801, !1807, !1808}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1796, file: !141, line: 380, baseType: !144, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1796, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1796, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1796, file: !141, line: 386, baseType: !1802, size: 32, offset: 96)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1804)
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1803, file: !141, line: 359, baseType: !154, size: 8)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1803, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1796, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1796, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1788, file: !1108, line: 530, baseType: !1810, size: 32, offset: 32)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{!103, !1794, !1154}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1788, file: !1108, line: 532, baseType: !1814, size: 32, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 32)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{!103, !1794, !1160, !1155}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1788, file: !1108, line: 535, baseType: !1818, size: 32, offset: 96)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!103, !1794, !1160}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1788, file: !1108, line: 537, baseType: !1818, size: 32, offset: 128)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1788, file: !1108, line: 539, baseType: !1818, size: 32, offset: 160)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1788, file: !1108, line: 541, baseType: !1824, size: 32, offset: 192)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 32)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!103, !1794, !1148, !1107, !1113}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1788, file: !1108, line: 544, baseType: !1828, size: 32, offset: 224)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!103, !1794, !1831, !157}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1108, line: 478, size: 96, elements: !1833)
!1833 = !{!1834, !1840, !1845}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1832, file: !1108, line: 482, baseType: !1835, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1180, line: 33, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1180, line: 29, size: 32, elements: !1837)
!1837 = !{!1838}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1836, file: !1180, line: 30, baseType: !1839, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1832, file: !1108, line: 485, baseType: !1841, size: 32, offset: 32)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1108, line: 464, baseType: !1842)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{null, !1794, !1831, !1160}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1832, file: !1108, line: 493, baseType: !1160, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1788, file: !1108, line: 547, baseType: !1847, size: 32, offset: 256)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 32)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!121, !1794}
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1108, line: 428, size: 32, elements: !1853)
!1853 = !{!1854}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1852, file: !1108, line: 434, baseType: !1160, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1108, line: 441, size: 32, elements: !1858)
!1858 = !{!1859}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1857, file: !1108, line: 447, baseType: !1160, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1861 = !{!1862, !1780}
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1863 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1782, file: !1864, line: 37, type: !1865, isLocal: true, isDefinition: true)
!1864 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1867, size: 352, elements: !1868)
!1867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!1868 = !{!1869}
!1869 = !DISubrange(count: 11)
!1870 = !DIGlobalVariableExpression(var: !1871, expr: !DIExpression())
!1871 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1872, file: !1914, line: 139, type: !1920, isLocal: false, isDefinition: true)
!1872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1874, globals: !1911, splitDebugInlining: false, nameTableKind: None)
!1873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!1874 = !{!1875}
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !1877)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !1878)
!1878 = !{!1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1877, file: !116, line: 338, baseType: !120, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1877, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1877, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1877, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1877, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1877, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1877, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1877, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1877, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1877, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1877, file: !116, line: 348, baseType: !817, size: 64, offset: 320)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1877, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1877, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1877, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1877, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1877, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1877, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1877, file: !116, line: 355, baseType: !817, size: 64, offset: 576)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1877, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1877, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1877, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1877, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1877, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1877, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1877, file: !116, line: 362, baseType: !817, size: 64, offset: 832)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1877, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1877, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1877, file: !116, line: 365, baseType: !817, size: 64, offset: 960)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1877, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1877, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1877, file: !116, line: 368, baseType: !838, size: 32, offset: 1088)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1877, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!1911 = !{!1912, !1915, !1870}
!1912 = !DIGlobalVariableExpression(var: !1913, expr: !DIExpression())
!1913 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1872, file: !1914, line: 137, type: !121, isLocal: false, isDefinition: true)
!1914 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1915 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression())
!1916 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1872, file: !1914, line: 138, type: !1917, isLocal: false, isDefinition: true)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !1918)
!1918 = !{!1919}
!1919 = !DISubrange(count: 16)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1580)
!1921 = !DIGlobalVariableExpression(var: !1922, expr: !DIExpression())
!1922 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1923, file: !1926, line: 23, type: !268, isLocal: false, isDefinition: true)
!1923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1925, splitDebugInlining: false, nameTableKind: None)
!1924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!1925 = !{!1921}
!1926 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1929, file: !1933, line: 86, type: !2182, isLocal: false, isDefinition: true, align: 512)
!1929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1930, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1931, retainedTypes: !1940, globals: !2013, splitDebugInlining: false, nameTableKind: None)
!1930 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!1931 = !{!1932, !30, !584}
!1932 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1933, line: 63, baseType: !32, size: 32, elements: !1934)
!1933 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1934 = !{!1935, !1936, !1937, !1938, !1939}
!1935 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1936 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1937 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1938 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1939 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1940 = !{!204, !102, !103, !1941, !344, !121, !1971, !725, !154, !1996}
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1943)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1944, line: 51, size: 64, elements: !1945)
!1944 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1945 = !{!1946, !1966}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1943, file: !1944, line: 52, baseType: !1947, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1944, line: 38, baseType: !1948)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!103, !1951, !267, !429}
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1954)
!1954 = !{!1955, !1956, !1957, !1958, !1964, !1965}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1953, file: !141, line: 380, baseType: !144, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1953, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1953, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1953, file: !141, line: 386, baseType: !1959, size: 32, offset: 96)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 32)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1961)
!1961 = !{!1962, !1963}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1960, file: !141, line: 359, baseType: !154, size: 8)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1960, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1953, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1953, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1943, file: !1944, line: 53, baseType: !1967, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1944, line: 47, baseType: !1968)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!103, !1951, !267, !429, !121}
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1973, file: !515, line: 447, baseType: !519, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1973, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1973, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1973, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1973, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1973, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1973, file: !515, line: 453, baseType: !1725, size: 96, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1973, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1973, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1973, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1973, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1973, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1973, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1973, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1973, file: !515, line: 461, baseType: !1734, size: 64, offset: 512)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1973, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1973, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1973, file: !515, line: 464, baseType: !1738, size: 128, offset: 640)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1973, file: !515, line: 465, baseType: !1740, size: 160, offset: 768)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1973, file: !515, line: 466, baseType: !1742, size: 160, offset: 928)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1973, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1998, file: !515, line: 413, baseType: !1688, size: 256)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1998, file: !515, line: 414, baseType: !1690, size: 768, offset: 256)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1998, file: !515, line: 415, baseType: !1688, size: 256, offset: 1024)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1998, file: !515, line: 416, baseType: !1690, size: 768, offset: 1280)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1998, file: !515, line: 417, baseType: !1688, size: 256, offset: 2048)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1998, file: !515, line: 418, baseType: !1690, size: 768, offset: 2304)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1998, file: !515, line: 419, baseType: !1688, size: 256, offset: 3072)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1998, file: !515, line: 420, baseType: !1690, size: 768, offset: 3328)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1998, file: !515, line: 421, baseType: !1688, size: 256, offset: 4096)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1998, file: !515, line: 422, baseType: !1701, size: 1792, offset: 4352)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1998, file: !515, line: 423, baseType: !1705, size: 1920, offset: 6144)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1998, file: !515, line: 424, baseType: !1710, size: 20608, offset: 8064)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1998, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2013 = !{!2014, !2136, !2145, !2147, !1927, !2150, !2152, !2157}
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "_kernel", scope: !1929, file: !1933, line: 40, type: !2016, isLocal: false, isDefinition: true)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !320, line: 158, size: 288, elements: !2017)
!2017 = !{!2018, !2131}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2016, file: !320, line: 159, baseType: !2019, size: 192)
!2019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2020, size: 192, elements: !504)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !320, line: 100, size: 192, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2125, !2126, !2127, !2128}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2020, file: !320, line: 102, baseType: !121, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2020, file: !320, line: 105, baseType: !344, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2020, file: !320, line: 108, baseType: !2025, size: 32, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2027)
!2027 = !{!2028, !2086, !2098, !2099, !2100, !2101, !2107, !2120}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2026, file: !379, line: 247, baseType: !2029, size: 384)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2030)
!2030 = !{!2031, !2055, !2062, !2063, !2064, !2073, !2074, !2075}
!2031 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !379, line: 60, baseType: !2032, size: 64)
!2032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !379, line: 60, size: 64, elements: !2033)
!2033 = !{!2034, !2049}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2032, file: !379, line: 61, baseType: !2035, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2037)
!2037 = !{!2038, !2044}
!2038 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !325, line: 38, baseType: !2039, size: 32)
!2039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2036, file: !325, line: 38, size: 32, elements: !2040)
!2040 = !{!2041, !2043}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2039, file: !325, line: 39, baseType: !2042, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2039, file: !325, line: 40, baseType: !2042, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !325, line: 42, baseType: !2045, size: 32, offset: 32)
!2045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2036, file: !325, line: 42, size: 32, elements: !2046)
!2046 = !{!2047, !2048}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2045, file: !325, line: 43, baseType: !2042, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2045, file: !325, line: 44, baseType: !2042, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2032, file: !379, line: 62, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2051)
!2051 = !{!2052}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2050, file: !404, line: 50, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2054, size: 64, elements: !363)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2029, file: !379, line: 68, baseType: !2056, size: 32, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2059)
!2059 = !{!2060}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2058, file: !320, line: 232, baseType: !2061, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2036)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2029, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2029, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2064 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !379, line: 90, baseType: !2065, size: 16, offset: 112)
!2065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !379, line: 90, size: 16, elements: !2066)
!2066 = !{!2067, !2072}
!2067 = !DIDerivedType(tag: DW_TAG_member, scope: !2065, file: !379, line: 91, baseType: !2068, size: 16)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2065, file: !379, line: 91, size: 16, elements: !2069)
!2069 = !{!2070, !2071}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2068, file: !379, line: 96, baseType: !425, size: 8)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2068, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2065, file: !379, line: 100, baseType: !429, size: 16)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2029, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2029, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2029, file: !379, line: 131, baseType: !2076, size: 192, offset: 192)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2077)
!2077 = !{!2078, !2079, !2085}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2076, file: !320, line: 245, baseType: !2035, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2076, file: !320, line: 246, baseType: !2080, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2081)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{null, !2084}
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2076, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2026, file: !379, line: 250, baseType: !2087, size: 288, offset: 384)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2088)
!2088 = !{!2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2087, file: !446, line: 26, baseType: !121, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2087, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2087, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2087, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2087, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2087, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2087, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2087, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2087, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2026, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2026, file: !379, line: 256, baseType: !2057, size: 64, offset: 704)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2026, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2026, file: !379, line: 300, baseType: !2102, size: 96, offset: 800)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2103)
!2103 = !{!2104, !2105, !2106}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2102, file: !379, line: 153, baseType: !22, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2102, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2102, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2026, file: !379, line: 325, baseType: !2108, size: 32, offset: 896)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2110)
!2110 = !{!2111, !2117, !2118}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2109, file: !296, line: 5074, baseType: !2112, size: 96)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2113)
!2113 = !{!2114, !2115, !2116}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2112, file: !472, line: 57, baseType: !475, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2112, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2112, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2109, file: !296, line: 5075, baseType: !2057, size: 64, offset: 96)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2109, file: !296, line: 5076, baseType: !2119, offset: 160)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2026, file: !379, line: 343, baseType: !2121, size: 64, offset: 928)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2122)
!2122 = !{!2123, !2124}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2121, file: !446, line: 63, baseType: !121, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2121, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2020, file: !320, line: 111, baseType: !2025, size: 32, offset: 96)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2020, file: !320, line: 124, baseType: !103, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2020, file: !320, line: 127, baseType: !154, size: 8, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2020, file: !320, line: 153, baseType: !2129, offset: 168)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2130, line: 33, elements: !317)
!2130 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2016, file: !320, line: 170, baseType: !2132, size: 96, offset: 192)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2132, file: !320, line: 86, baseType: !2025, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2132, file: !320, line: 90, baseType: !2061, size: 64, offset: 32)
!2136 = !DIGlobalVariableExpression(var: !2137, expr: !DIExpression())
!2137 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1929, file: !1933, line: 43, type: !2138, isLocal: false, isDefinition: true, align: 512)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2139, size: 8704, elements: !2143)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2140, line: 47, size: 8, elements: !2141)
!2140 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2141 = !{!2142}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2139, file: !2140, line: 48, baseType: !146, size: 8)
!2143 = !{!2144}
!2144 = !DISubrange(count: 1088)
!2145 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression())
!2146 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1929, file: !1933, line: 44, type: !2026, isLocal: false, isDefinition: true)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1929, file: !1933, line: 48, type: !2149, isLocal: false, isDefinition: true)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2026, size: 1024, elements: !504)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1929, file: !1933, line: 217, type: !157, isLocal: false, isDefinition: true)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1929, file: !1933, line: 50, type: !2154, isLocal: true, isDefinition: true, align: 512)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2139, size: 3072, elements: !2155)
!2155 = !{!505, !2156}
!2156 = !DISubrange(count: 384)
!2157 = !DIGlobalVariableExpression(var: !2158, expr: !DIExpression())
!2158 = distinct !DIGlobalVariable(name: "levels", scope: !2159, file: !1933, line: 232, type: !2179, isLocal: true, isDefinition: true)
!2159 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1933, file: !1933, line: 230, type: !2160, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2162)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{null, !1932}
!2162 = !{!2163, !2164, !2174, !2178}
!2163 = !DILocalVariable(name: "level", arg: 1, scope: !2159, file: !1933, line: 230, type: !1932)
!2164 = !DILocalVariable(name: "entry", scope: !2159, file: !1933, line: 244, type: !2165)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2168)
!2168 = !{!2169, !2173}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2167, file: !132, line: 60, baseType: !2170, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 32)
!2171 = !DISubroutineType(types: !2172)
!2172 = !{!103, !1951}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2167, file: !132, line: 65, baseType: !1951, size: 32, offset: 32)
!2174 = !DILocalVariable(name: "dev", scope: !2175, file: !1933, line: 247, type: !1951)
!2175 = distinct !DILexicalBlock(scope: !2176, file: !1933, line: 246, column: 64)
!2176 = distinct !DILexicalBlock(scope: !2177, file: !1933, line: 246, column: 2)
!2177 = distinct !DILexicalBlock(scope: !2159, file: !1933, line: 246, column: 2)
!2178 = !DILocalVariable(name: "rc", scope: !2175, file: !1933, line: 248, type: !103)
!2179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2165, size: 192, elements: !2180)
!2180 = !{!2181}
!2181 = !DISubrange(count: 6)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2139, size: 16896, elements: !2183)
!2183 = !{!505, !2184}
!2184 = !DISubrange(count: 2112)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "states_str", scope: !2187, file: !2188, line: 276, type: !2309, isLocal: true, isDefinition: true)
!2187 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2188, file: !2188, line: 271, type: !2189, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !2300)
!2188 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!144, !2191, !344, !204}
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2192)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 32)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2194)
!2194 = !{!2195, !2253, !2265, !2266, !2267, !2268, !2274, !2287}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2193, file: !379, line: 247, baseType: !2196, size: 384)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2197)
!2197 = !{!2198, !2222, !2229, !2230, !2231, !2240, !2241, !2242}
!2198 = !DIDerivedType(tag: DW_TAG_member, scope: !2196, file: !379, line: 60, baseType: !2199, size: 64)
!2199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2196, file: !379, line: 60, size: 64, elements: !2200)
!2200 = !{!2201, !2216}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2199, file: !379, line: 61, baseType: !2202, size: 64)
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2203)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2204)
!2204 = !{!2205, !2211}
!2205 = !DIDerivedType(tag: DW_TAG_member, scope: !2203, file: !325, line: 38, baseType: !2206, size: 32)
!2206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2203, file: !325, line: 38, size: 32, elements: !2207)
!2207 = !{!2208, !2210}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2206, file: !325, line: 39, baseType: !2209, size: 32)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2206, file: !325, line: 40, baseType: !2209, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, scope: !2203, file: !325, line: 42, baseType: !2212, size: 32, offset: 32)
!2212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2203, file: !325, line: 42, size: 32, elements: !2213)
!2213 = !{!2214, !2215}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2212, file: !325, line: 43, baseType: !2209, size: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2212, file: !325, line: 44, baseType: !2209, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2199, file: !379, line: 62, baseType: !2217, size: 64)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2218)
!2218 = !{!2219}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2217, file: !404, line: 50, baseType: !2220, size: 64)
!2220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2221, size: 64, elements: !363)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2196, file: !379, line: 68, baseType: !2223, size: 32, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2225)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2226)
!2226 = !{!2227}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2225, file: !320, line: 232, baseType: !2228, size: 64)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2203)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2196, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2196, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2231 = !DIDerivedType(tag: DW_TAG_member, scope: !2196, file: !379, line: 90, baseType: !2232, size: 16, offset: 112)
!2232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2196, file: !379, line: 90, size: 16, elements: !2233)
!2233 = !{!2234, !2239}
!2234 = !DIDerivedType(tag: DW_TAG_member, scope: !2232, file: !379, line: 91, baseType: !2235, size: 16)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2232, file: !379, line: 91, size: 16, elements: !2236)
!2236 = !{!2237, !2238}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2235, file: !379, line: 96, baseType: !425, size: 8)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2235, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2232, file: !379, line: 100, baseType: !429, size: 16)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2196, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2196, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2196, file: !379, line: 131, baseType: !2243, size: 192, offset: 192)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2244)
!2244 = !{!2245, !2246, !2252}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2243, file: !320, line: 245, baseType: !2202, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2243, file: !320, line: 246, baseType: !2247, size: 32, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2248)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 32)
!2249 = !DISubroutineType(types: !2250)
!2250 = !{null, !2251}
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2243, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2193, file: !379, line: 250, baseType: !2254, size: 288, offset: 384)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2255)
!2255 = !{!2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2254, file: !446, line: 26, baseType: !121, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2254, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2254, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2254, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2254, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2254, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2254, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2254, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2254, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2193, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2193, file: !379, line: 256, baseType: !2224, size: 64, offset: 704)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2193, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2193, file: !379, line: 300, baseType: !2269, size: 96, offset: 800)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2270)
!2270 = !{!2271, !2272, !2273}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2269, file: !379, line: 153, baseType: !22, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2269, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2269, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2193, file: !379, line: 325, baseType: !2275, size: 32, offset: 896)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 32)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2277)
!2277 = !{!2278, !2284, !2285}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2276, file: !296, line: 5074, baseType: !2279, size: 96)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2280)
!2280 = !{!2281, !2282, !2283}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2279, file: !472, line: 57, baseType: !475, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2279, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2279, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2276, file: !296, line: 5075, baseType: !2224, size: 64, offset: 96)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2276, file: !296, line: 5076, baseType: !2286, offset: 160)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2193, file: !379, line: 343, baseType: !2288, size: 64, offset: 928)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2289)
!2289 = !{!2290, !2291}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2288, file: !446, line: 63, baseType: !121, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2288, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2294, globals: !2296, splitDebugInlining: false, nameTableKind: None)
!2293 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2294 = !{!102, !144, !200, !154, !103, !2295, !24, !204, !344, !22, !121, !1572}
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 32)
!2296 = !{!2185, !2297}
!2297 = !DIGlobalVariableExpression(var: !2298, expr: !DIExpression())
!2298 = distinct !DIGlobalVariable(name: "states_sz", scope: !2187, file: !2188, line: 279, type: !2299, isLocal: true, isDefinition: true)
!2299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1865, size: 256, elements: !1580)
!2300 = !{!2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2301 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2187, file: !2188, line: 271, type: !2191)
!2302 = !DILocalVariable(name: "buf", arg: 2, scope: !2187, file: !2188, line: 271, type: !344)
!2303 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2187, file: !2188, line: 271, type: !204)
!2304 = !DILocalVariable(name: "off", scope: !2187, file: !2188, line: 273, type: !204)
!2305 = !DILocalVariable(name: "bit", scope: !2187, file: !2188, line: 274, type: !154)
!2306 = !DILocalVariable(name: "thread_state", scope: !2187, file: !2188, line: 275, type: !154)
!2307 = !DILocalVariable(name: "index", scope: !2308, file: !2188, line: 293, type: !154)
!2308 = distinct !DILexicalBlock(scope: !2187, file: !2188, line: 293, column: 2)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1580)
!2310 = !DIGlobalVariableExpression(var: !2311, expr: !DIExpression())
!2311 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2312, file: !2420, line: 56, type: !2409, isLocal: false, isDefinition: true)
!2312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2314, globals: !2417, splitDebugInlining: false, nameTableKind: None)
!2313 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2314 = !{!2315, !344, !102, !2415, !267, !200, !725, !103, !121, !1572, !2416}
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2317)
!2317 = !{!2318, !2376, !2388, !2389, !2390, !2391, !2397, !2410}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2316, file: !379, line: 247, baseType: !2319, size: 384)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2320)
!2320 = !{!2321, !2345, !2352, !2353, !2354, !2363, !2364, !2365}
!2321 = !DIDerivedType(tag: DW_TAG_member, scope: !2319, file: !379, line: 60, baseType: !2322, size: 64)
!2322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2319, file: !379, line: 60, size: 64, elements: !2323)
!2323 = !{!2324, !2339}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2322, file: !379, line: 61, baseType: !2325, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2326)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2327)
!2327 = !{!2328, !2334}
!2328 = !DIDerivedType(tag: DW_TAG_member, scope: !2326, file: !325, line: 38, baseType: !2329, size: 32)
!2329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2326, file: !325, line: 38, size: 32, elements: !2330)
!2330 = !{!2331, !2333}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2329, file: !325, line: 39, baseType: !2332, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2329, file: !325, line: 40, baseType: !2332, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, scope: !2326, file: !325, line: 42, baseType: !2335, size: 32, offset: 32)
!2335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2326, file: !325, line: 42, size: 32, elements: !2336)
!2336 = !{!2337, !2338}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2335, file: !325, line: 43, baseType: !2332, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2335, file: !325, line: 44, baseType: !2332, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2322, file: !379, line: 62, baseType: !2340, size: 64)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2341)
!2341 = !{!2342}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2340, file: !404, line: 50, baseType: !2343, size: 64)
!2343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2344, size: 64, elements: !363)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2319, file: !379, line: 68, baseType: !2346, size: 32, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2348)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2349)
!2349 = !{!2350}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2348, file: !320, line: 232, baseType: !2351, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2326)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2319, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2319, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2354 = !DIDerivedType(tag: DW_TAG_member, scope: !2319, file: !379, line: 90, baseType: !2355, size: 16, offset: 112)
!2355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2319, file: !379, line: 90, size: 16, elements: !2356)
!2356 = !{!2357, !2362}
!2357 = !DIDerivedType(tag: DW_TAG_member, scope: !2355, file: !379, line: 91, baseType: !2358, size: 16)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2355, file: !379, line: 91, size: 16, elements: !2359)
!2359 = !{!2360, !2361}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2358, file: !379, line: 96, baseType: !425, size: 8)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2358, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2355, file: !379, line: 100, baseType: !429, size: 16)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2319, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2319, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2319, file: !379, line: 131, baseType: !2366, size: 192, offset: 192)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2367)
!2367 = !{!2368, !2369, !2375}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2366, file: !320, line: 245, baseType: !2325, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2366, file: !320, line: 246, baseType: !2370, size: 32, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2371)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 32)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{null, !2374}
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2366, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2316, file: !379, line: 250, baseType: !2377, size: 288, offset: 384)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2378)
!2378 = !{!2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2377, file: !446, line: 26, baseType: !121, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2377, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2377, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2377, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2377, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2377, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2377, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2377, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2377, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2316, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2316, file: !379, line: 256, baseType: !2347, size: 64, offset: 704)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2316, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2316, file: !379, line: 300, baseType: !2392, size: 96, offset: 800)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2393)
!2393 = !{!2394, !2395, !2396}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2392, file: !379, line: 153, baseType: !22, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2392, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2392, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2316, file: !379, line: 325, baseType: !2398, size: 32, offset: 896)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 32)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2400)
!2400 = !{!2401, !2407, !2408}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2399, file: !296, line: 5074, baseType: !2402, size: 96)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2403)
!2403 = !{!2404, !2405, !2406}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2402, file: !472, line: 57, baseType: !475, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2402, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2402, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2399, file: !296, line: 5075, baseType: !2347, size: 64, offset: 96)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2399, file: !296, line: 5076, baseType: !2409, offset: 160)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2316, file: !379, line: 343, baseType: !2411, size: 64, offset: 928)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2412)
!2412 = !{!2413, !2414}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2411, file: !446, line: 63, baseType: !121, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2411, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!2417 = !{!2310, !2418, !2421, !2423}
!2418 = !DIGlobalVariableExpression(var: !2419, expr: !DIExpression())
!2419 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2312, file: !2420, line: 404, type: !103, isLocal: true, isDefinition: true)
!2420 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2421 = !DIGlobalVariableExpression(var: !2422, expr: !DIExpression())
!2422 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2312, file: !2420, line: 405, type: !103, isLocal: true, isDefinition: true)
!2423 = !DIGlobalVariableExpression(var: !2424, expr: !DIExpression())
!2424 = distinct !DIGlobalVariable(name: "pending_current", scope: !2312, file: !2420, line: 425, type: !2315, isLocal: true, isDefinition: true)
!2425 = !DIGlobalVariableExpression(var: !2426, expr: !DIExpression())
!2426 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2427, file: !2457, line: 15, type: !1572, isLocal: true, isDefinition: true)
!2427 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2428, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2429, globals: !2454, splitDebugInlining: false, nameTableKind: None)
!2428 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2429 = !{!200, !102, !725, !121, !1572, !103, !2430, !344, !202}
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 32)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2432)
!2432 = !{!2433, !2448, !2453}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2431, file: !320, line: 245, baseType: !2434, size: 64)
!2434 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2435)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2436)
!2436 = !{!2437, !2443}
!2437 = !DIDerivedType(tag: DW_TAG_member, scope: !2435, file: !325, line: 38, baseType: !2438, size: 32)
!2438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2435, file: !325, line: 38, size: 32, elements: !2439)
!2439 = !{!2440, !2442}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2438, file: !325, line: 39, baseType: !2441, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2438, file: !325, line: 40, baseType: !2441, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, scope: !2435, file: !325, line: 42, baseType: !2444, size: 32, offset: 32)
!2444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2435, file: !325, line: 42, size: 32, elements: !2445)
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2444, file: !325, line: 43, baseType: !2441, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2444, file: !325, line: 44, baseType: !2441, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2431, file: !320, line: 246, baseType: !2449, size: 32, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2450)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{null, !2430}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2431, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2454 = !{!2425, !2455, !2459, !2461}
!2455 = !DIGlobalVariableExpression(var: !2456, expr: !DIExpression())
!2456 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2427, file: !2457, line: 19, type: !2458, isLocal: true, isDefinition: true)
!2457 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2459 = !DIGlobalVariableExpression(var: !2460, expr: !DIExpression())
!2460 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2427, file: !2457, line: 25, type: !103, isLocal: true, isDefinition: true)
!2461 = !DIGlobalVariableExpression(var: !2462, expr: !DIExpression())
!2462 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2427, file: !2457, line: 17, type: !2463, isLocal: true, isDefinition: true)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2435)
!2464 = !DIGlobalVariableExpression(var: !2465, expr: !DIExpression())
!2465 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2466, file: !2485, line: 55, type: !2486, isLocal: true, isDefinition: true, align: 32)
!2466 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2467, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2468, globals: !2484, splitDebugInlining: false, nameTableKind: None)
!2467 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2468 = !{!102, !200, !103, !2469}
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2471)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2472)
!2472 = !{!2473, !2479}
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !2471, file: !325, line: 38, baseType: !2474, size: 32)
!2474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2471, file: !325, line: 38, size: 32, elements: !2475)
!2475 = !{!2476, !2478}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2474, file: !325, line: 39, baseType: !2477, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2474, file: !325, line: 40, baseType: !2477, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, scope: !2471, file: !325, line: 42, baseType: !2480, size: 32, offset: 32)
!2480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2471, file: !325, line: 42, size: 32, elements: !2481)
!2481 = !{!2482, !2483}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2480, file: !325, line: 43, baseType: !2477, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2480, file: !325, line: 44, baseType: !2477, size: 32)
!2484 = !{!2464}
!2485 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2487)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2488)
!2488 = !{!2489, !2496}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2487, file: !132, line: 60, baseType: !2490, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 32)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!103, !2493}
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2495)
!2495 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !132, line: 48, flags: DIFlagFwdDecl)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2487, file: !132, line: 65, baseType: !2493, size: 32, offset: 32)
!2497 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2498, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2498 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2499 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2500, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2500 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2501 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2502, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2502 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2505, retainedTypes: !2513, splitDebugInlining: false, nameTableKind: None)
!2504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2505 = !{!30, !2506}
!2506 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2507, line: 54, baseType: !32, size: 32, elements: !2508)
!2507 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2508 = !{!2509, !2510, !2511, !2512}
!2509 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2510 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2511 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2512 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2513 = !{!102, !204, !267, !24, !2514, !22, !2520, !103, !846, !2535}
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2507, line: 58, baseType: !2516)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2507, line: 58, size: 64, elements: !2517)
!2517 = !{!2518}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2516, file: !2507, line: 58, baseType: !2519, size: 64)
!2519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !1580)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2507, line: 68, size: 128, elements: !2522)
!2522 = !{!2523, !2526, !2527, !2528}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2521, file: !2507, line: 69, baseType: !2524, size: 64)
!2524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2525, size: 64, elements: !363)
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2507, line: 61, baseType: !121)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2521, file: !2507, line: 70, baseType: !2525, size: 32, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2521, file: !2507, line: 71, baseType: !121, size: 32, offset: 96)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2521, file: !2507, line: 77, baseType: !2529, offset: 128)
!2529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2530, elements: !2533)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2507, line: 64, size: 32, elements: !2531)
!2531 = !{!2532}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2530, file: !2507, line: 65, baseType: !2525, size: 32)
!2533 = !{!2534}
!2534 = !DISubrange(count: 0)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2538, retainedTypes: !2558, splitDebugInlining: false, nameTableKind: None)
!2537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2538 = !{!2539, !2547}
!2539 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2540, line: 69, baseType: !32, size: 32, elements: !2541)
!2540 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2541 = !{!2542, !2543, !2544, !2545, !2546}
!2542 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2543 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2544 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2545 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2546 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2547 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2540, line: 56, baseType: !32, size: 32, elements: !2548)
!2548 = !{!2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557}
!2549 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2550 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2551 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2552 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2553 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2554 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2555 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2556 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2557 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2558 = !{!103, !2539, !2547, !2559, !426, !164, !2561, !2562, !155, !430, !144, !204, !102, !22, !32, !2564, !2565, !2566, !354, !2567, !203, !2568, !2560, !2569, !2570, !2571, !2572}
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2540, line: 31, baseType: !2560)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !203)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !205, line: 329, baseType: !32)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2540, line: 32, baseType: !2563)
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1573)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !205, line: 145, baseType: !103)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2575 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2576, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2577, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2576 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2577 = !{!2578, !30}
!2578 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2579, line: 27, baseType: !32, size: 32, elements: !2580)
!2579 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2580 = !{!2581, !2582, !2583, !2584, !2585}
!2581 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2582 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2583 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2584 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2585 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2586 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2587, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2588, retainedTypes: !2589, splitDebugInlining: false, nameTableKind: None)
!2587 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2588 = !{!584, !2578, !30}
!2589 = !{!751, !2590, !102, !103, !725, !121, !154, !2607}
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2592)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2593)
!2593 = !{!2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2592, file: !515, line: 413, baseType: !1688, size: 256)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2592, file: !515, line: 414, baseType: !1690, size: 768, offset: 256)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2592, file: !515, line: 415, baseType: !1688, size: 256, offset: 1024)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2592, file: !515, line: 416, baseType: !1690, size: 768, offset: 1280)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2592, file: !515, line: 417, baseType: !1688, size: 256, offset: 2048)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2592, file: !515, line: 418, baseType: !1690, size: 768, offset: 2304)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2592, file: !515, line: 419, baseType: !1688, size: 256, offset: 3072)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2592, file: !515, line: 420, baseType: !1690, size: 768, offset: 3328)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2592, file: !515, line: 421, baseType: !1688, size: 256, offset: 4096)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2592, file: !515, line: 422, baseType: !1701, size: 1792, offset: 4352)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2592, file: !515, line: 423, baseType: !1705, size: 1920, offset: 6144)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2592, file: !515, line: 424, baseType: !1710, size: 20608, offset: 8064)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2592, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2609)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2610)
!2610 = !{!2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2609, file: !515, line: 447, baseType: !519, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2609, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2609, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2609, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2609, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2609, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2609, file: !515, line: 453, baseType: !1725, size: 96, offset: 192)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2609, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2609, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2609, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2609, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2609, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2609, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2609, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2609, file: !515, line: 461, baseType: !1734, size: 64, offset: 512)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2609, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2609, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2609, file: !515, line: 464, baseType: !1738, size: 128, offset: 640)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2609, file: !515, line: 465, baseType: !1740, size: 160, offset: 768)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2609, file: !515, line: 466, baseType: !1742, size: 160, offset: 928)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2609, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2633, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2633 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2634 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2635, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2636, splitDebugInlining: false, nameTableKind: None)
!2635 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2636 = !{!102, !103, !22, !2637}
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2639)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2640)
!2640 = !{!2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2639, file: !515, line: 447, baseType: !519, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2639, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2639, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2639, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2639, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2639, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2639, file: !515, line: 453, baseType: !1725, size: 96, offset: 192)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2639, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2639, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2639, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2639, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2639, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2639, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2639, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2639, file: !515, line: 461, baseType: !1734, size: 64, offset: 512)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2639, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2639, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2639, file: !515, line: 464, baseType: !1738, size: 128, offset: 640)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2639, file: !515, line: 465, baseType: !1740, size: 160, offset: 768)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2639, file: !515, line: 466, baseType: !1742, size: 160, offset: 928)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2639, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2662 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2663, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2664, splitDebugInlining: false, nameTableKind: None)
!2663 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2664 = !{!2665, !102, !103}
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2667)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2668)
!2668 = !{!2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2667, file: !515, line: 447, baseType: !519, size: 32)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2667, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2667, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2667, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2667, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2667, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2667, file: !515, line: 453, baseType: !1725, size: 96, offset: 192)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2667, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2667, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2667, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2667, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2667, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2667, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2667, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2667, file: !515, line: 461, baseType: !1734, size: 64, offset: 512)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2667, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2667, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2667, file: !515, line: 464, baseType: !1738, size: 128, offset: 640)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2667, file: !515, line: 465, baseType: !1740, size: 160, offset: 768)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2667, file: !515, line: 466, baseType: !1742, size: 160, offset: 928)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2667, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2692, splitDebugInlining: false, nameTableKind: None)
!2691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2692 = !{!2693, !121, !102, !103}
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2695, line: 98, size: 256, elements: !2696)
!2695 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2696 = !{!2697, !2702, !2707, !2712, !2717, !2722, !2727, !2732}
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !2695, line: 99, baseType: !2698, size: 32)
!2698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2694, file: !2695, line: 99, size: 32, elements: !2699)
!2699 = !{!2700, !2701}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2698, file: !2695, line: 99, baseType: !121, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2698, file: !2695, line: 99, baseType: !121, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !2695, line: 100, baseType: !2703, size: 32, offset: 32)
!2703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2694, file: !2695, line: 100, size: 32, elements: !2704)
!2704 = !{!2705, !2706}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2703, file: !2695, line: 100, baseType: !121, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2703, file: !2695, line: 100, baseType: !121, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !2695, line: 101, baseType: !2708, size: 32, offset: 64)
!2708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2694, file: !2695, line: 101, size: 32, elements: !2709)
!2709 = !{!2710, !2711}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2708, file: !2695, line: 101, baseType: !121, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2708, file: !2695, line: 101, baseType: !121, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !2695, line: 102, baseType: !2713, size: 32, offset: 96)
!2713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2694, file: !2695, line: 102, size: 32, elements: !2714)
!2714 = !{!2715, !2716}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2713, file: !2695, line: 102, baseType: !121, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2713, file: !2695, line: 102, baseType: !121, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !2695, line: 103, baseType: !2718, size: 32, offset: 128)
!2718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2694, file: !2695, line: 103, size: 32, elements: !2719)
!2719 = !{!2720, !2721}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2718, file: !2695, line: 103, baseType: !121, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2718, file: !2695, line: 103, baseType: !121, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !2695, line: 104, baseType: !2723, size: 32, offset: 160)
!2723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2694, file: !2695, line: 104, size: 32, elements: !2724)
!2724 = !{!2725, !2726}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2723, file: !2695, line: 104, baseType: !121, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2723, file: !2695, line: 104, baseType: !121, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !2695, line: 105, baseType: !2728, size: 32, offset: 192)
!2728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2694, file: !2695, line: 105, size: 32, elements: !2729)
!2729 = !{!2730, !2731}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2728, file: !2695, line: 105, baseType: !121, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2728, file: !2695, line: 105, baseType: !121, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2694, file: !2695, line: 106, baseType: !121, size: 32, offset: 224)
!2733 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2734, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2577, retainedTypes: !2735, splitDebugInlining: false, nameTableKind: None)
!2734 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2735 = !{!2736, !102, !103, !2761, !2535, !121}
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2738)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2739)
!2739 = !{!2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2738, file: !515, line: 447, baseType: !519, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2738, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2738, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2738, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2738, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2738, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2738, file: !515, line: 453, baseType: !1725, size: 96, offset: 192)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2738, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2738, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2738, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2738, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2738, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2738, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2738, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2738, file: !515, line: 461, baseType: !1734, size: 64, offset: 512)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2738, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2738, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2738, file: !515, line: 464, baseType: !1738, size: 128, offset: 640)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2738, file: !515, line: 465, baseType: !1740, size: 160, offset: 768)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2738, file: !515, line: 466, baseType: !1742, size: 160, offset: 928)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2738, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2695, line: 141, baseType: !2763)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2695, line: 97, size: 256, elements: !2764)
!2764 = !{!2765}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2763, file: !2695, line: 107, baseType: !2766, size: 256)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2695, line: 98, size: 256, elements: !2767)
!2767 = !{!2768, !2773, !2778, !2783, !2788, !2793, !2798, !2803}
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2766, file: !2695, line: 99, baseType: !2769, size: 32)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2766, file: !2695, line: 99, size: 32, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2769, file: !2695, line: 99, baseType: !121, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2769, file: !2695, line: 99, baseType: !121, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, scope: !2766, file: !2695, line: 100, baseType: !2774, size: 32, offset: 32)
!2774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2766, file: !2695, line: 100, size: 32, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2774, file: !2695, line: 100, baseType: !121, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2774, file: !2695, line: 100, baseType: !121, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2766, file: !2695, line: 101, baseType: !2779, size: 32, offset: 64)
!2779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2766, file: !2695, line: 101, size: 32, elements: !2780)
!2780 = !{!2781, !2782}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2779, file: !2695, line: 101, baseType: !121, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2779, file: !2695, line: 101, baseType: !121, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, scope: !2766, file: !2695, line: 102, baseType: !2784, size: 32, offset: 96)
!2784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2766, file: !2695, line: 102, size: 32, elements: !2785)
!2785 = !{!2786, !2787}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2784, file: !2695, line: 102, baseType: !121, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2784, file: !2695, line: 102, baseType: !121, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, scope: !2766, file: !2695, line: 103, baseType: !2789, size: 32, offset: 128)
!2789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2766, file: !2695, line: 103, size: 32, elements: !2790)
!2790 = !{!2791, !2792}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2789, file: !2695, line: 103, baseType: !121, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2789, file: !2695, line: 103, baseType: !121, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, scope: !2766, file: !2695, line: 104, baseType: !2794, size: 32, offset: 160)
!2794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2766, file: !2695, line: 104, size: 32, elements: !2795)
!2795 = !{!2796, !2797}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2794, file: !2695, line: 104, baseType: !121, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2794, file: !2695, line: 104, baseType: !121, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, scope: !2766, file: !2695, line: 105, baseType: !2799, size: 32, offset: 192)
!2799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2766, file: !2695, line: 105, size: 32, elements: !2800)
!2800 = !{!2801, !2802}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2799, file: !2695, line: 105, baseType: !121, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2799, file: !2695, line: 105, baseType: !121, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2766, file: !2695, line: 106, baseType: !121, size: 32, offset: 224)
!2804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2805, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1673, retainedTypes: !2806, splitDebugInlining: false, nameTableKind: None)
!2805 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2806 = !{!751, !725, !154, !121, !2807, !2824}
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2809)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2810)
!2810 = !{!2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2809, file: !515, line: 413, baseType: !1688, size: 256)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2809, file: !515, line: 414, baseType: !1690, size: 768, offset: 256)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2809, file: !515, line: 415, baseType: !1688, size: 256, offset: 1024)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2809, file: !515, line: 416, baseType: !1690, size: 768, offset: 1280)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2809, file: !515, line: 417, baseType: !1688, size: 256, offset: 2048)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2809, file: !515, line: 418, baseType: !1690, size: 768, offset: 2304)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2809, file: !515, line: 419, baseType: !1688, size: 256, offset: 3072)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2809, file: !515, line: 420, baseType: !1690, size: 768, offset: 3328)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2809, file: !515, line: 421, baseType: !1688, size: 256, offset: 4096)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2809, file: !515, line: 422, baseType: !1701, size: 1792, offset: 4352)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2809, file: !515, line: 423, baseType: !1705, size: 1920, offset: 6144)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2809, file: !515, line: 424, baseType: !1710, size: 20608, offset: 8064)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2809, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2826)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2827)
!2827 = !{!2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2826, file: !515, line: 447, baseType: !519, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2826, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2826, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2826, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2826, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2826, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2826, file: !515, line: 453, baseType: !1725, size: 96, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2826, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2826, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2826, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2826, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2826, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2826, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2826, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2826, file: !515, line: 461, baseType: !1734, size: 64, offset: 512)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2826, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2826, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2826, file: !515, line: 464, baseType: !1738, size: 128, offset: 640)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2826, file: !515, line: 465, baseType: !1740, size: 160, offset: 768)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2826, file: !515, line: 466, baseType: !1742, size: 160, offset: 928)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2826, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2851, splitDebugInlining: false, nameTableKind: None)
!2850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2851 = !{!2852, !102, !103}
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2854)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2855)
!2855 = !{!2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2854, file: !515, line: 447, baseType: !519, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2854, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2854, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2854, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2854, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2854, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2854, file: !515, line: 453, baseType: !1725, size: 96, offset: 192)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2854, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2854, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2854, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2854, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2854, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2854, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2854, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2854, file: !515, line: 461, baseType: !1734, size: 64, offset: 512)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2854, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2854, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2854, file: !515, line: 464, baseType: !1738, size: 128, offset: 640)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2854, file: !515, line: 465, baseType: !1740, size: 160, offset: 768)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2854, file: !515, line: 466, baseType: !1742, size: 160, offset: 928)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2854, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2877 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2878, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2879, splitDebugInlining: false, nameTableKind: None)
!2878 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2879 = !{!146, !344, !204, !230, !2880, !155, !102}
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2882 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2883, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2884, splitDebugInlining: false, nameTableKind: None)
!2883 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2884 = !{!2885}
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2887)
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2888)
!2888 = !{!2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2887, file: !116, line: 338, baseType: !120, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2887, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2887, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2887, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2887, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2887, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2887, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2887, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2887, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2887, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2887, file: !116, line: 348, baseType: !817, size: 64, offset: 320)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2887, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2887, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2887, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2887, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2887, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2887, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2887, file: !116, line: 355, baseType: !817, size: 64, offset: 576)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2887, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2887, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2887, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2887, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2887, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2887, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2887, file: !116, line: 362, baseType: !817, size: 64, offset: 832)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2887, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2887, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2887, file: !116, line: 365, baseType: !817, size: 64, offset: 960)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2887, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2887, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2887, file: !116, line: 368, baseType: !838, size: 32, offset: 1088)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2887, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!2921 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2922, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2922 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2925, retainedTypes: !2941, splitDebugInlining: false, nameTableKind: None)
!2924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!2925 = !{!2926, !2933, !2937}
!2926 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2927, line: 38, baseType: !32, size: 32, elements: !2928)
!2927 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2928 = !{!2929, !2930, !2931, !2932}
!2929 = !DIEnumerator(name: "HAL_OK", value: 0)
!2930 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2931 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2932 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2933 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !790, line: 184, baseType: !32, size: 32, elements: !2934)
!2934 = !{!2935, !2936}
!2935 = !DIEnumerator(name: "RESET", value: 0)
!2936 = !DIEnumerator(name: "SET", value: 1)
!2937 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !790, line: 190, baseType: !32, size: 32, elements: !2938)
!2938 = !{!2939, !2940}
!2939 = !DIEnumerator(name: "DISABLE", value: 0)
!2940 = !DIEnumerator(name: "ENABLE", value: 1)
!2941 = !{!102, !2942, !154, !121, !1574, !2978, !2984, !2995, !429, !2996, !1572}
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2944)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2945)
!2945 = !{!2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2944, file: !116, line: 338, baseType: !120, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2944, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2944, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2944, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2944, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2944, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2944, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2944, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2944, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2944, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2944, file: !116, line: 348, baseType: !817, size: 64, offset: 320)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2944, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2944, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2944, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2944, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2944, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2944, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2944, file: !116, line: 355, baseType: !817, size: 64, offset: 576)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2944, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2944, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2944, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2944, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2944, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2944, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2944, file: !116, line: 362, baseType: !817, size: 64, offset: 832)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2944, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2944, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2944, file: !116, line: 365, baseType: !817, size: 64, offset: 960)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2944, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2944, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2944, file: !116, line: 368, baseType: !838, size: 32, offset: 1088)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2944, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 330, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 326, size: 64, elements: !2981)
!2981 = !{!2982, !2983}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2980, file: !116, line: 328, baseType: !120, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2980, file: !116, line: 329, baseType: !120, size: 32, offset: 32)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !2986)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !2987)
!2987 = !{!2988, !2989, !2990, !2991, !2992, !2993, !2994}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2986, file: !116, line: 252, baseType: !120, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2986, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2986, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2986, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2986, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2986, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2986, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 276, baseType: !2998)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 265, size: 320, elements: !2999)
!2999 = !{!3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2998, file: !116, line: 267, baseType: !120, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2998, file: !116, line: 268, baseType: !120, size: 32, offset: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2998, file: !116, line: 269, baseType: !120, size: 32, offset: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2998, file: !116, line: 270, baseType: !120, size: 32, offset: 96)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2998, file: !116, line: 271, baseType: !120, size: 32, offset: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2998, file: !116, line: 272, baseType: !120, size: 32, offset: 160)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2998, file: !116, line: 273, baseType: !120, size: 32, offset: 192)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2998, file: !116, line: 274, baseType: !120, size: 32, offset: 224)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2998, file: !116, line: 275, baseType: !1219, size: 64, offset: 256)
!3009 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3010, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3011, retainedTypes: !3012, splitDebugInlining: false, nameTableKind: None)
!3010 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!3011 = !{!789}
!3012 = !{!3013, !121, !3021, !3027, !3038}
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !3015)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !3016)
!3016 = !{!3017, !3018, !3019, !3020}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3015, file: !515, line: 766, baseType: !120, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3015, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3015, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3015, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 330, baseType: !3023)
!3023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 326, size: 64, elements: !3024)
!3024 = !{!3025, !3026}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3023, file: !116, line: 328, baseType: !120, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3023, file: !116, line: 329, baseType: !120, size: 32, offset: 32)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 32)
!3028 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !3029)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !3030)
!3030 = !{!3031, !3032, !3033, !3034, !3035, !3036, !3037}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3029, file: !116, line: 252, baseType: !120, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3029, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3029, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3029, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3029, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3029, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3029, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 32)
!3039 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !3040)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !3041)
!3041 = !{!3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3040, file: !116, line: 338, baseType: !120, size: 32)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3040, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3040, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3040, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3040, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3040, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3040, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3040, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3040, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3040, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3040, file: !116, line: 348, baseType: !817, size: 64, offset: 320)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3040, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3040, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3040, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3040, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3040, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3040, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3040, file: !116, line: 355, baseType: !817, size: 64, offset: 576)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3040, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3040, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3040, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3040, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3040, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3040, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3040, file: !116, line: 362, baseType: !817, size: 64, offset: 832)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3040, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3040, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3040, file: !116, line: 365, baseType: !817, size: 64, offset: 960)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3040, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3040, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3040, file: !116, line: 368, baseType: !838, size: 32, offset: 1088)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3040, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!3074 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3075, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3076, splitDebugInlining: false, nameTableKind: None)
!3075 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!3076 = !{!102, !204}
!3077 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3078, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3079, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3078 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!3079 = !{!3080, !3087, !30}
!3080 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3081, line: 14, baseType: !32, size: 32, elements: !3082)
!3081 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3082 = !{!3083, !3084, !3085, !3086}
!3083 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3084 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3085 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3086 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3087 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3081, line: 42, baseType: !32, size: 32, elements: !3088)
!3088 = !{!3089, !3090, !3091, !3092, !3093, !3094}
!3089 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3090 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3091 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3092 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3093 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3094 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3095 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3096, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3096 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!3097 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3098, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3099, retainedTypes: !3110, splitDebugInlining: false, nameTableKind: None)
!3098 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!3099 = !{!3100, !30}
!3100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !296, line: 5323, baseType: !32, size: 32, elements: !3101)
!3101 = !{!3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109}
!3102 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!3103 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!3104 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!3105 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!3106 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!3107 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!3108 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!3109 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!3110 = !{!102, !154, !3111, !344, !3121, !157, !3122, !103, !3123, !312}
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 32)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !3113, line: 25, size: 64, elements: !3114)
!3113 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3114 = !{!3115, !3120}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3112, file: !3113, line: 26, baseType: !3116, size: 32)
!3116 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !3117)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !3118)
!3118 = !{!3119}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !3117, file: !303, line: 36, baseType: !312, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3112, file: !3113, line: 27, baseType: !102, size: 32, offset: 32)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3125)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3126)
!3126 = !{!3127, !3133}
!3127 = !DIDerivedType(tag: DW_TAG_member, scope: !3125, file: !325, line: 38, baseType: !3128, size: 32)
!3128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3125, file: !325, line: 38, size: 32, elements: !3129)
!3129 = !{!3130, !3132}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3128, file: !325, line: 39, baseType: !3131, size: 32)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3128, file: !325, line: 40, baseType: !3131, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, scope: !3125, file: !325, line: 42, baseType: !3134, size: 32, offset: 32)
!3134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3125, file: !325, line: 42, size: 32, elements: !3135)
!3135 = !{!3136, !3137}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3134, file: !325, line: 43, baseType: !3131, size: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3134, file: !325, line: 44, baseType: !3131, size: 32)
!3138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3140, splitDebugInlining: false, nameTableKind: None)
!3139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!3140 = !{!22, !102, !103}
!3141 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3142, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3142 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!3143 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3144, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3144 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!3145 = !{!"Ubuntu clang version 14.0.6"}
!3146 = !{i32 7, !"Dwarf Version", i32 4}
!3147 = !{i32 2, !"Debug Info Version", i32 3}
!3148 = !{i32 1, !"wchar_size", i32 4}
!3149 = !{i32 1, !"min_enum_size", i32 4}
!3150 = !{i32 1, !"branch-target-enforcement", i32 0}
!3151 = !{i32 1, !"sign-return-address", i32 0}
!3152 = !{i32 1, !"sign-return-address-all", i32 0}
!3153 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3154 = !{i32 7, !"frame-pointer", i32 2}
!3155 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3156, file: !3156, line: 26, type: !3157, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !317)
!3156 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3157 = !DISubroutineType(types: !3158)
!3158 = !{null}
!3159 = !DILocation(line: 28, column: 1, scope: !3155)
!3160 = !{i64 2154340173, i64 2154340193, i64 2154340256}
!3161 = !DILocation(line: 29, column: 1, scope: !3155)
!3162 = !{i64 2154340588, i64 2154340608, i64 2154340671}
!3163 = !DILocation(line: 30, column: 1, scope: !3155)
!3164 = !{i64 2154341007, i64 2154341027, i64 2154341090}
!3165 = !DILocation(line: 31, column: 1, scope: !3155)
!3166 = !{i64 2154341426, i64 2154341446, i64 2154341509}
!3167 = !DILocation(line: 33, column: 1, scope: !3155)
!3168 = !{i64 2154341718, i64 2154341738, i64 2154341801}
!3169 = !DILocation(line: 35, column: 1, scope: !3155)
!3170 = !{i64 2154342043, i64 2154342063, i64 2154342126}
!3171 = !DILocation(line: 50, column: 1, scope: !3155)
!3172 = !{i64 2154342470, i64 2154342490, i64 2154342553}
!3173 = !DILocation(line: 54, column: 1, scope: !3155)
!3174 = !{i64 2154342909, i64 2154342929, i64 2154342992}
!3175 = !DILocation(line: 61, column: 1, scope: !3155)
!3176 = !{i64 2154343226, i64 2154343246, i64 2154343309}
!3177 = !DILocation(line: 63, column: 1, scope: !3155)
!3178 = !{i64 2154343606, i64 2154343626, i64 2154343689}
!3179 = !DILocation(line: 64, column: 1, scope: !3155)
!3180 = !{i64 2154344128, i64 2154344148, i64 2154344211}
!3181 = !DILocation(line: 65, column: 1, scope: !3155)
!3182 = !{i64 2154344626, i64 2154344646, i64 2154344709}
!3183 = !DILocation(line: 66, column: 1, scope: !3155)
!3184 = !{i64 2154345108, i64 2154345128, i64 2154345191}
!3185 = !DILocation(line: 67, column: 1, scope: !3155)
!3186 = !{i64 2154345615, i64 2154345635, i64 2154345698}
!3187 = !DILocation(line: 68, column: 1, scope: !3155)
!3188 = !{i64 2154346103, i64 2154346123, i64 2154346186}
!3189 = !DILocation(line: 70, column: 1, scope: !3155)
!3190 = !{i64 2154346571, i64 2154346591, i64 2154346654}
!3191 = !DILocation(line: 71, column: 1, scope: !3155)
!3192 = !{i64 2154347013, i64 2154347033, i64 2154347096}
!3193 = !DILocation(line: 72, column: 1, scope: !3155)
!3194 = !{i64 2154347471, i64 2154347491, i64 2154347554}
!3195 = !DILocation(line: 79, column: 1, scope: !3155)
!3196 = !{i64 2154347925, i64 2154347945, i64 2154348008}
!3197 = !DILocation(line: 80, column: 1, scope: !3155)
!3198 = !{i64 2154348436, i64 2154348456, i64 2154348519}
!3199 = !DILocation(line: 82, column: 1, scope: !3155)
!3200 = !{i64 2154352988, i64 2154353008, i64 2154353071}
!3201 = !DILocation(line: 97, column: 1, scope: !3155)
!3202 = !{i64 2154353325, i64 2154353345, i64 2154353408}
!3203 = !DILocation(line: 99, column: 1, scope: !3155)
!3204 = !{i64 2154353543, i64 2154353563, i64 2154353626}
!3205 = !DILocation(line: 102, column: 1, scope: !3155)
!3206 = !{i64 2154353800, i64 2154353820, i64 2154353883}
!3207 = !DILocation(line: 105, column: 1, scope: !3155)
!3208 = !{i64 2154354040, i64 2154354060, i64 2154354123}
!3209 = !DILocation(line: 115, column: 1, scope: !3155)
!3210 = !{i64 2154354379, i64 2154354399, i64 2154354462}
!3211 = !DILocation(line: 118, column: 1, scope: !3155)
!3212 = !{i64 2154354723, i64 2154354743, i64 2154354806}
!3213 = !DILocation(line: 32, column: 1, scope: !3214)
!3214 = !DILexicalBlockFile(scope: !3155, file: !3215, discriminator: 0)
!3215 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3216 = !{i64 2154355079, i64 2154355099, i64 2154355162}
!3217 = !DILocation(line: 33, column: 1, scope: !3214)
!3218 = !{i64 2154355591, i64 2154355611, i64 2154355674}
!3219 = !DILocation(line: 53, column: 1, scope: !3214)
!3220 = !{i64 2154356099, i64 2154356119, i64 2154356182}
!3221 = !DILocation(line: 54, column: 1, scope: !3214)
!3222 = !{i64 2154356517, i64 2154356537, i64 2154356600}
!3223 = !DILocation(line: 55, column: 1, scope: !3214)
!3224 = !{i64 2154356935, i64 2154356955, i64 2154357018}
!3225 = !DILocation(line: 56, column: 1, scope: !3214)
!3226 = !{i64 2154357353, i64 2154357373, i64 2154357436}
!3227 = !DILocation(line: 57, column: 1, scope: !3214)
!3228 = !{i64 2154357771, i64 2154357791, i64 2154357854}
!3229 = !DILocation(line: 58, column: 1, scope: !3214)
!3230 = !{i64 2154358189, i64 2154358209, i64 2154358272}
!3231 = !DILocation(line: 59, column: 1, scope: !3214)
!3232 = !{i64 2154358607, i64 2154358627, i64 2154358690}
!3233 = !DILocation(line: 60, column: 1, scope: !3214)
!3234 = !{i64 2154359031, i64 2154359051, i64 2154359114}
!3235 = !DILocation(line: 61, column: 1, scope: !3214)
!3236 = !{i64 2154359348, i64 2154359368, i64 2154359431}
!3237 = !DILocation(line: 70, column: 1, scope: !3214)
!3238 = !{i64 2154359577, i64 2154359597, i64 2154359660}
!3239 = !DILocation(line: 72, column: 1, scope: !3214)
!3240 = !{i64 2154359909, i64 2154359929, i64 2154359992}
!3241 = !DILocation(line: 73, column: 1, scope: !3214)
!3242 = !{i64 2154360359, i64 2154360379, i64 2154360442}
!3243 = !DILocation(line: 74, column: 1, scope: !3214)
!3244 = !{i64 2154360809, i64 2154360829, i64 2154360892}
!3245 = !DILocation(line: 75, column: 1, scope: !3214)
!3246 = !{i64 2154361259, i64 2154361279, i64 2154361342}
!3247 = !DILocation(line: 76, column: 1, scope: !3214)
!3248 = !{i64 2154361709, i64 2154361729, i64 2154361792}
!3249 = !DILocation(line: 77, column: 1, scope: !3214)
!3250 = !{i64 2154362159, i64 2154362179, i64 2154362242}
!3251 = !DILocation(line: 78, column: 1, scope: !3214)
!3252 = !{i64 2154366670, i64 2154366690, i64 2154366753}
!3253 = !DILocation(line: 79, column: 1, scope: !3214)
!3254 = !{i64 2154367120, i64 2154367140, i64 2154367203}
!3255 = !DILocation(line: 80, column: 1, scope: !3214)
!3256 = !{i64 2154367573, i64 2154367593, i64 2154367656}
!3257 = !DILocation(line: 84, column: 1, scope: !3214)
!3258 = !{i64 2154367905, i64 2154367925, i64 2154367988}
!3259 = !DILocation(line: 91, column: 1, scope: !3214)
!3260 = !{i64 2154368302, i64 2154368322, i64 2154368385}
!3261 = !DILocation(line: 93, column: 1, scope: !3214)
!3262 = !{i64 2154368669, i64 2154368689, i64 2154368752}
!3263 = !DILocation(line: 106, column: 1, scope: !3214)
!3264 = !{i64 2154368939, i64 2154368959, i64 2154369022}
!3265 = !DILocation(line: 11, column: 1, scope: !3266)
!3266 = !DILexicalBlockFile(scope: !3155, file: !3267, discriminator: 0)
!3267 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3268 = distinct !DISubprogram(name: "main", scope: !3269, file: !3269, line: 12, type: !3157, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2499, retainedNodes: !3270)
!3269 = !DIFile(filename: "zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3270 = !{!3271}
!3271 = !DILocalVariable(name: "s", scope: !3272, file: !3269, line: 19, type: !344)
!3272 = distinct !DILexicalBlock(scope: !3268, file: !3269, line: 18, column: 12)
!3273 = !DILocation(line: 14, column: 2, scope: !3268)
!3274 = !DILocation(line: 16, column: 2, scope: !3268)
!3275 = !DILocation(line: 18, column: 2, scope: !3268)
!3276 = !DILocation(line: 19, column: 13, scope: !3272)
!3277 = !DILocation(line: 0, scope: !3272)
!3278 = !DILocation(line: 21, column: 3, scope: !3272)
!3279 = !DILocation(line: 22, column: 37, scope: !3272)
!3280 = !DILocation(line: 22, column: 47, scope: !3272)
!3281 = !DILocation(line: 22, column: 35, scope: !3272)
!3282 = !DILocation(line: 22, column: 3, scope: !3272)
!3283 = distinct !{!3283, !3275, !3284}
!3284 = !DILocation(line: 23, column: 2, scope: !3268)
!3285 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3286)
!3286 = !{!3287}
!3287 = !DILocalVariable(name: "c", arg: 1, scope: !3285, file: !105, line: 45, type: !103)
!3288 = !DILocation(line: 0, scope: !3285)
!3289 = !DILocation(line: 50, column: 2, scope: !3285)
!3290 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3291, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3293)
!3291 = !DISubroutineType(types: !3292)
!3292 = !{null, !106}
!3293 = !{!3294}
!3294 = !DILocalVariable(name: "fn", arg: 1, scope: !3290, file: !105, line: 63, type: !106)
!3295 = !DILocation(line: 0, scope: !3290)
!3296 = !DILocation(line: 65, column: 12, scope: !3290)
!3297 = !DILocation(line: 66, column: 1, scope: !3290)
!3298 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3299, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !317)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{!102}
!3301 = !DILocation(line: 78, column: 9, scope: !3298)
!3302 = !DILocation(line: 78, column: 2, scope: !3298)
!3303 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3304, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3313)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{null, !144, !3306}
!3306 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3307, line: 99, baseType: !3308)
!3307 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3307, line: 40, baseType: !3309)
!3309 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3310)
!3310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3311)
!3311 = !{!3312}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3310, file: !105, line: 79, baseType: !102, size: 32)
!3313 = !{!3314, !3315, !3316}
!3314 = !DILocalVariable(name: "fmt", arg: 1, scope: !3303, file: !105, line: 113, type: !144)
!3315 = !DILocalVariable(name: "ap", arg: 2, scope: !3303, file: !105, line: 113, type: !3306)
!3316 = !DILocalVariable(name: "ctx", scope: !3317, file: !105, line: 121, type: !3319)
!3317 = distinct !DILexicalBlock(scope: !3318, file: !105, line: 120, column: 27)
!3318 = distinct !DILexicalBlock(scope: !3303, file: !105, line: 120, column: 6)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3320)
!3320 = !{!3321, !3322}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3319, file: !105, line: 85, baseType: !32, size: 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3319, file: !105, line: 86, baseType: !3323, offset: 32)
!3323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2533)
!3324 = !DILocation(line: 0, scope: !3303)
!3325 = !DILocation(line: 148, column: 3, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3318, file: !105, line: 138, column: 9)
!3327 = !DILocation(line: 155, column: 1, scope: !3303)
!3328 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3329, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3331)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!103, !103, !102}
!3331 = !{!3332, !3333}
!3332 = !DILocalVariable(name: "c", arg: 1, scope: !3328, file: !105, line: 107, type: !103)
!3333 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3328, file: !105, line: 107, type: !102)
!3334 = !DILocation(line: 0, scope: !3328)
!3335 = !DILocation(line: 110, column: 9, scope: !3328)
!3336 = !DILocation(line: 110, column: 2, scope: !3328)
!3337 = distinct !DISubprogram(name: "cbvprintf", scope: !3338, file: !3338, line: 739, type: !3339, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3345)
!3338 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!103, !3341, !102, !144, !3306}
!3341 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3338, line: 297, baseType: !3342)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 32)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{!103, null}
!3345 = !{!3346, !3347, !3348, !3349}
!3346 = !DILocalVariable(name: "out", arg: 1, scope: !3337, file: !3338, line: 739, type: !3341)
!3347 = !DILocalVariable(name: "ctx", arg: 2, scope: !3337, file: !3338, line: 739, type: !102)
!3348 = !DILocalVariable(name: "format", arg: 3, scope: !3337, file: !3338, line: 739, type: !144)
!3349 = !DILocalVariable(name: "ap", arg: 4, scope: !3337, file: !3338, line: 739, type: !3306)
!3350 = !DILocation(line: 0, scope: !3337)
!3351 = !DILocation(line: 741, column: 9, scope: !3337)
!3352 = !DILocation(line: 741, column: 2, scope: !3337)
!3353 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3354, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3356)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{null, !344, !204}
!3356 = !{!3357, !3358, !3359}
!3357 = !DILocalVariable(name: "c", arg: 1, scope: !3353, file: !105, line: 157, type: !344)
!3358 = !DILocalVariable(name: "n", arg: 2, scope: !3353, file: !105, line: 157, type: !204)
!3359 = !DILocalVariable(name: "i", scope: !3353, file: !105, line: 159, type: !204)
!3360 = !DILocation(line: 0, scope: !3353)
!3361 = !DILocation(line: 164, column: 16, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3363, file: !105, line: 164, column: 2)
!3363 = distinct !DILexicalBlock(scope: !3353, file: !105, line: 164, column: 2)
!3364 = !DILocation(line: 164, column: 2, scope: !3363)
!3365 = !DILocation(line: 165, column: 3, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3362, file: !105, line: 164, column: 26)
!3367 = !DILocation(line: 165, column: 13, scope: !3366)
!3368 = !DILocation(line: 164, column: 22, scope: !3362)
!3369 = distinct !{!3369, !3364, !3370}
!3370 = !DILocation(line: 166, column: 2, scope: !3363)
!3371 = !DILocation(line: 171, column: 1, scope: !3353)
!3372 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3373, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3375)
!3373 = !DISubroutineType(types: !3374)
!3374 = !{null, !144, null}
!3375 = !{!3376, !3377}
!3376 = !DILocalVariable(name: "fmt", arg: 1, scope: !3372, file: !105, line: 203, type: !144)
!3377 = !DILocalVariable(name: "ap", scope: !3372, file: !105, line: 205, type: !3306)
!3378 = !DILocation(line: 0, scope: !3372)
!3379 = !DILocation(line: 205, column: 2, scope: !3372)
!3380 = !DILocation(line: 205, column: 10, scope: !3372)
!3381 = !DILocation(line: 207, column: 2, scope: !3372)
!3382 = !DILocation(line: 209, column: 2, scope: !3372)
!3383 = !DILocation(line: 211, column: 2, scope: !3372)
!3384 = !DILocation(line: 212, column: 1, scope: !3372)
!3385 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3386, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3388)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!103, !344, !204, !144, null}
!3388 = !{!3389, !3390, !3391, !3392, !3393}
!3389 = !DILocalVariable(name: "str", arg: 1, scope: !3385, file: !105, line: 239, type: !344)
!3390 = !DILocalVariable(name: "size", arg: 2, scope: !3385, file: !105, line: 239, type: !204)
!3391 = !DILocalVariable(name: "fmt", arg: 3, scope: !3385, file: !105, line: 239, type: !144)
!3392 = !DILocalVariable(name: "ap", scope: !3385, file: !105, line: 241, type: !3306)
!3393 = !DILocalVariable(name: "ret", scope: !3385, file: !105, line: 242, type: !103)
!3394 = !DILocation(line: 0, scope: !3385)
!3395 = !DILocation(line: 241, column: 2, scope: !3385)
!3396 = !DILocation(line: 241, column: 10, scope: !3385)
!3397 = !DILocation(line: 244, column: 2, scope: !3385)
!3398 = !DILocation(line: 245, column: 8, scope: !3385)
!3399 = !DILocation(line: 246, column: 2, scope: !3385)
!3400 = !DILocation(line: 249, column: 1, scope: !3385)
!3401 = !DILocation(line: 248, column: 2, scope: !3385)
!3402 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3403, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3405)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!103, !344, !204, !144, !3306}
!3405 = !{!3406, !3407, !3408, !3409, !3410}
!3406 = !DILocalVariable(name: "str", arg: 1, scope: !3402, file: !105, line: 251, type: !344)
!3407 = !DILocalVariable(name: "size", arg: 2, scope: !3402, file: !105, line: 251, type: !204)
!3408 = !DILocalVariable(name: "fmt", arg: 3, scope: !3402, file: !105, line: 251, type: !144)
!3409 = !DILocalVariable(name: "ap", arg: 4, scope: !3402, file: !105, line: 251, type: !3306)
!3410 = !DILocalVariable(name: "ctx", scope: !3402, file: !105, line: 253, type: !3411)
!3411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3412)
!3412 = !{!3413, !3414, !3415}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3411, file: !105, line: 218, baseType: !344, size: 32)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3411, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3411, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3416 = !DILocation(line: 0, scope: !3402)
!3417 = !DILocation(line: 253, column: 2, scope: !3402)
!3418 = !DILocation(line: 253, column: 21, scope: !3402)
!3419 = !DILocation(line: 253, column: 27, scope: !3402)
!3420 = !DILocation(line: 255, column: 2, scope: !3402)
!3421 = !DILocation(line: 257, column: 10, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3402, file: !105, line: 257, column: 6)
!3423 = !DILocation(line: 257, column: 22, scope: !3422)
!3424 = !DILocation(line: 257, column: 16, scope: !3422)
!3425 = !DILocation(line: 257, column: 6, scope: !3402)
!3426 = !DILocation(line: 258, column: 3, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3422, file: !105, line: 257, column: 27)
!3428 = !DILocation(line: 258, column: 18, scope: !3427)
!3429 = !DILocation(line: 259, column: 2, scope: !3427)
!3430 = !DILocation(line: 262, column: 1, scope: !3402)
!3431 = !DILocation(line: 261, column: 2, scope: !3402)
!3432 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3433, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3436)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{!103, !103, !3435}
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 32)
!3436 = !{!3437, !3438}
!3437 = !DILocalVariable(name: "c", arg: 1, scope: !3432, file: !105, line: 223, type: !103)
!3438 = !DILocalVariable(name: "ctx", arg: 2, scope: !3432, file: !105, line: 223, type: !3435)
!3439 = !DILocation(line: 0, scope: !3432)
!3440 = !DILocation(line: 225, column: 11, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3432, file: !105, line: 225, column: 6)
!3442 = !DILocation(line: 225, column: 15, scope: !3441)
!3443 = !DILocation(line: 0, scope: !3441)
!3444 = !DILocation(line: 225, column: 23, scope: !3441)
!3445 = !DILocation(line: 225, column: 45, scope: !3441)
!3446 = !DILocation(line: 225, column: 37, scope: !3441)
!3447 = !DILocation(line: 225, column: 6, scope: !3432)
!3448 = !DILocation(line: 226, column: 8, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3441, file: !105, line: 225, column: 50)
!3450 = !DILocation(line: 226, column: 13, scope: !3449)
!3451 = !DILocation(line: 227, column: 3, scope: !3449)
!3452 = !DILocation(line: 230, column: 29, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3432, file: !105, line: 230, column: 6)
!3454 = !DILocation(line: 230, column: 17, scope: !3453)
!3455 = !DILocation(line: 230, column: 6, scope: !3432)
!3456 = !DILocation(line: 231, column: 22, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3453, file: !105, line: 230, column: 34)
!3458 = !DILocation(line: 231, column: 3, scope: !3457)
!3459 = !DILocation(line: 231, column: 26, scope: !3457)
!3460 = !DILocation(line: 232, column: 2, scope: !3457)
!3461 = !DILocation(line: 233, column: 28, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3453, file: !105, line: 232, column: 9)
!3463 = !DILocation(line: 233, column: 22, scope: !3462)
!3464 = !DILocation(line: 233, column: 3, scope: !3462)
!3465 = !DILocation(line: 233, column: 26, scope: !3462)
!3466 = !DILocation(line: 237, column: 1, scope: !3432)
!3467 = distinct !DISubprogram(name: "z_thread_entry", scope: !3468, file: !3468, line: 30, type: !3469, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !3476)
!3468 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3469 = !DISubroutineType(types: !3470)
!3470 = !{null, !3471, !102, !102, !102}
!3471 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3472, line: 46, baseType: !3473)
!3472 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 32)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{null, !102, !102, !102}
!3476 = !{!3477, !3478, !3479, !3480}
!3477 = !DILocalVariable(name: "entry", arg: 1, scope: !3467, file: !3468, line: 30, type: !3471)
!3478 = !DILocalVariable(name: "p1", arg: 2, scope: !3467, file: !3468, line: 31, type: !102)
!3479 = !DILocalVariable(name: "p2", arg: 3, scope: !3467, file: !3468, line: 31, type: !102)
!3480 = !DILocalVariable(name: "p3", arg: 4, scope: !3467, file: !3468, line: 31, type: !102)
!3481 = !DILocation(line: 0, scope: !3467)
!3482 = !DILocation(line: 36, column: 2, scope: !3467)
!3483 = !DILocation(line: 38, column: 17, scope: !3467)
!3484 = !DILocation(line: 38, column: 2, scope: !3467)
!3485 = !DILocation(line: 45, column: 2, scope: !3467)
!3486 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !3487, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !317)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!3489}
!3489 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !3490)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 32)
!3491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !3492)
!3492 = !{!3493, !3551, !3563, !3564, !3565, !3566, !3572, !3585}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3491, file: !379, line: 247, baseType: !3494, size: 384)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !3495)
!3495 = !{!3496, !3520, !3527, !3528, !3529, !3538, !3539, !3540}
!3496 = !DIDerivedType(tag: DW_TAG_member, scope: !3494, file: !379, line: 60, baseType: !3497, size: 64)
!3497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3494, file: !379, line: 60, size: 64, elements: !3498)
!3498 = !{!3499, !3514}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3497, file: !379, line: 61, baseType: !3500, size: 64)
!3500 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3501)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3502)
!3502 = !{!3503, !3509}
!3503 = !DIDerivedType(tag: DW_TAG_member, scope: !3501, file: !325, line: 38, baseType: !3504, size: 32)
!3504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3501, file: !325, line: 38, size: 32, elements: !3505)
!3505 = !{!3506, !3508}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3504, file: !325, line: 39, baseType: !3507, size: 32)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 32)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3504, file: !325, line: 40, baseType: !3507, size: 32)
!3509 = !DIDerivedType(tag: DW_TAG_member, scope: !3501, file: !325, line: 42, baseType: !3510, size: 32, offset: 32)
!3510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3501, file: !325, line: 42, size: 32, elements: !3511)
!3511 = !{!3512, !3513}
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3510, file: !325, line: 43, baseType: !3507, size: 32)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3510, file: !325, line: 44, baseType: !3507, size: 32)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3497, file: !379, line: 62, baseType: !3515, size: 64)
!3515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !3516)
!3516 = !{!3517}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3515, file: !404, line: 50, baseType: !3518, size: 64)
!3518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3519, size: 64, elements: !363)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 32)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3494, file: !379, line: 68, baseType: !3521, size: 32, offset: 64)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 32)
!3522 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !3523)
!3523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !3524)
!3524 = !{!3525}
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3523, file: !320, line: 232, baseType: !3526, size: 64)
!3526 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3501)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3494, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3494, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!3529 = !DIDerivedType(tag: DW_TAG_member, scope: !3494, file: !379, line: 90, baseType: !3530, size: 16, offset: 112)
!3530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3494, file: !379, line: 90, size: 16, elements: !3531)
!3531 = !{!3532, !3537}
!3532 = !DIDerivedType(tag: DW_TAG_member, scope: !3530, file: !379, line: 91, baseType: !3533, size: 16)
!3533 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3530, file: !379, line: 91, size: 16, elements: !3534)
!3534 = !{!3535, !3536}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3533, file: !379, line: 96, baseType: !425, size: 8)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3533, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3530, file: !379, line: 100, baseType: !429, size: 16)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3494, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3494, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3494, file: !379, line: 131, baseType: !3541, size: 192, offset: 192)
!3541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !3542)
!3542 = !{!3543, !3544, !3550}
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3541, file: !320, line: 245, baseType: !3500, size: 64)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3541, file: !320, line: 246, baseType: !3545, size: 32, offset: 64)
!3545 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !3546)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 32)
!3547 = !DISubroutineType(types: !3548)
!3548 = !{null, !3549}
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 32)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3541, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3491, file: !379, line: 250, baseType: !3552, size: 288, offset: 384)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !3553)
!3553 = !{!3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3552, file: !446, line: 26, baseType: !121, size: 32)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3552, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3552, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3552, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3552, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3552, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3552, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3552, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3552, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3491, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3491, file: !379, line: 256, baseType: !3522, size: 64, offset: 704)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3491, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3491, file: !379, line: 300, baseType: !3567, size: 96, offset: 800)
!3567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !3568)
!3568 = !{!3569, !3570, !3571}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3567, file: !379, line: 153, baseType: !22, size: 32)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3567, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3567, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3491, file: !379, line: 325, baseType: !3573, size: 32, offset: 896)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 32)
!3574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !3575)
!3575 = !{!3576, !3582, !3583}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3574, file: !296, line: 5074, baseType: !3577, size: 96)
!3577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3578)
!3578 = !{!3579, !3580, !3581}
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3577, file: !472, line: 57, baseType: !475, size: 32)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3577, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3577, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3574, file: !296, line: 5075, baseType: !3522, size: 64, offset: 96)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3574, file: !296, line: 5076, baseType: !3584, offset: 160)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3491, file: !379, line: 343, baseType: !3586, size: 64, offset: 928)
!3586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !3587)
!3587 = !{!3588, !3589}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3586, file: !446, line: 63, baseType: !121, size: 32)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3586, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!3590 = !DILocation(line: 535, column: 9, scope: !3486)
!3591 = !DILocation(line: 535, column: 2, scope: !3486)
!3592 = distinct !DISubprogram(name: "k_thread_abort", scope: !3593, file: !3593, line: 188, type: !3594, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !3596)
!3593 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!3594 = !DISubroutineType(types: !3595)
!3595 = !{null, !3489}
!3596 = !{!3597}
!3597 = !DILocalVariable(name: "thread", arg: 1, scope: !3592, file: !3593, line: 188, type: !3489)
!3598 = !DILocation(line: 0, scope: !3592)
!3599 = !DILocation(line: 197, column: 2, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3592, file: !3593, line: 197, column: 2)
!3601 = !{i64 2154061132}
!3602 = !DILocation(line: 198, column: 2, scope: !3592)
!3603 = !DILocation(line: 199, column: 1, scope: !3592)
!3604 = distinct !DISubprogram(name: "z_current_get", scope: !3593, file: !3593, line: 173, type: !3487, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !317)
!3605 = !DILocation(line: 180, column: 2, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3604, file: !3593, line: 180, column: 2)
!3607 = !{i64 2154061064}
!3608 = !DILocation(line: 181, column: 9, scope: !3604)
!3609 = !DILocation(line: 181, column: 2, scope: !3604)
!3610 = distinct !DISubprogram(name: "sys_heap_free", scope: !3611, file: !3611, line: 163, type: !3612, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3620)
!3611 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3612 = !DISubroutineType(types: !3613)
!3613 = !{null, !3614, !102}
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 32)
!3615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3616)
!3616 = !{!3617, !3618, !3619}
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3615, file: !472, line: 57, baseType: !2520, size: 32)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3615, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3615, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3620 = !{!3621, !3622, !3623, !3624}
!3621 = !DILocalVariable(name: "heap", arg: 1, scope: !3610, file: !3611, line: 163, type: !3614)
!3622 = !DILocalVariable(name: "mem", arg: 2, scope: !3610, file: !3611, line: 163, type: !102)
!3623 = !DILocalVariable(name: "h", scope: !3610, file: !3611, line: 168, type: !2520)
!3624 = !DILocalVariable(name: "c", scope: !3610, file: !3611, line: 169, type: !2525)
!3625 = !DILocation(line: 0, scope: !3610)
!3626 = !DILocation(line: 165, column: 10, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3610, file: !3611, line: 165, column: 6)
!3628 = !DILocation(line: 165, column: 6, scope: !3610)
!3629 = !DILocation(line: 168, column: 27, scope: !3610)
!3630 = !DILocation(line: 169, column: 16, scope: !3610)
!3631 = !{i32 0, i32 536870912}
!3632 = !DILocation(line: 187, column: 2, scope: !3610)
!3633 = !DILocation(line: 197, column: 2, scope: !3610)
!3634 = !DILocation(line: 198, column: 1, scope: !3610)
!3635 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3611, file: !3611, line: 157, type: !3636, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3638)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{!2525, !2520, !102}
!3638 = !{!3639, !3640, !3641, !3642}
!3639 = !DILocalVariable(name: "h", arg: 1, scope: !3635, file: !3611, line: 157, type: !2520)
!3640 = !DILocalVariable(name: "p", arg: 2, scope: !3635, file: !3611, line: 157, type: !102)
!3641 = !DILocalVariable(name: "mem", scope: !3635, file: !3611, line: 159, type: !267)
!3642 = !DILocalVariable(name: "base", scope: !3635, file: !3611, line: 159, type: !267)
!3643 = !DILocation(line: 0, scope: !3635)
!3644 = !DILocation(line: 159, column: 39, scope: !3635)
!3645 = !DILocation(line: 160, column: 14, scope: !3635)
!3646 = !DILocation(line: 160, column: 38, scope: !3635)
!3647 = !DILocation(line: 160, column: 46, scope: !3635)
!3648 = !DILocation(line: 160, column: 2, scope: !3635)
!3649 = distinct !DISubprogram(name: "set_chunk_used", scope: !2507, file: !2507, line: 147, type: !3650, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3652)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{null, !2520, !2525, !157}
!3652 = !{!3653, !3654, !3655, !3656, !3657}
!3653 = !DILocalVariable(name: "h", arg: 1, scope: !3649, file: !2507, line: 147, type: !2520)
!3654 = !DILocalVariable(name: "c", arg: 2, scope: !3649, file: !2507, line: 147, type: !2525)
!3655 = !DILocalVariable(name: "used", arg: 3, scope: !3649, file: !2507, line: 147, type: !157)
!3656 = !DILocalVariable(name: "buf", scope: !3649, file: !2507, line: 149, type: !2514)
!3657 = !DILocalVariable(name: "cmem", scope: !3649, file: !2507, line: 150, type: !102)
!3658 = !DILocation(line: 0, scope: !3649)
!3659 = !DILocation(line: 149, column: 22, scope: !3649)
!3660 = !DILocation(line: 0, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !2507, line: 159, column: 7)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !2507, line: 158, column: 9)
!3663 = distinct !DILexicalBlock(scope: !3649, file: !2507, line: 152, column: 6)
!3664 = !DILocation(line: 159, column: 7, scope: !3662)
!3665 = !DILocation(line: 165, column: 1, scope: !3649)
!3666 = distinct !DISubprogram(name: "free_chunk", scope: !3611, file: !3611, line: 133, type: !3667, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3669)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{null, !2520, !2525}
!3669 = !{!3670, !3671}
!3670 = !DILocalVariable(name: "h", arg: 1, scope: !3666, file: !3611, line: 133, type: !2520)
!3671 = !DILocalVariable(name: "c", arg: 2, scope: !3666, file: !3611, line: 133, type: !2525)
!3672 = !DILocation(line: 0, scope: !3666)
!3673 = !DILocation(line: 136, column: 21, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3666, file: !3611, line: 136, column: 6)
!3675 = !DILocation(line: 136, column: 7, scope: !3674)
!3676 = !DILocation(line: 136, column: 6, scope: !3666)
!3677 = !DILocation(line: 137, column: 3, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3674, file: !3611, line: 136, column: 41)
!3679 = !DILocation(line: 138, column: 22, scope: !3678)
!3680 = !DILocation(line: 138, column: 3, scope: !3678)
!3681 = !DILocation(line: 139, column: 2, scope: !3678)
!3682 = !DILocation(line: 142, column: 21, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3666, file: !3611, line: 142, column: 6)
!3684 = !{i32 -65535, i32 536903678}
!3685 = !DILocation(line: 142, column: 7, scope: !3683)
!3686 = !DILocation(line: 142, column: 6, scope: !3666)
!3687 = !DILocation(line: 143, column: 3, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3683, file: !3611, line: 142, column: 40)
!3689 = !DILocation(line: 144, column: 19, scope: !3688)
!3690 = !DILocation(line: 144, column: 3, scope: !3688)
!3691 = !DILocation(line: 145, column: 7, scope: !3688)
!3692 = !DILocation(line: 146, column: 2, scope: !3688)
!3693 = !DILocation(line: 148, column: 2, scope: !3666)
!3694 = !DILocation(line: 149, column: 1, scope: !3666)
!3695 = distinct !DISubprogram(name: "right_chunk", scope: !2507, file: !2507, line: 204, type: !3696, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3698)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!2525, !2520, !2525}
!3698 = !{!3699, !3700}
!3699 = !DILocalVariable(name: "h", arg: 1, scope: !3695, file: !2507, line: 204, type: !2520)
!3700 = !DILocalVariable(name: "c", arg: 2, scope: !3695, file: !2507, line: 204, type: !2525)
!3701 = !DILocation(line: 0, scope: !3695)
!3702 = !DILocation(line: 206, column: 13, scope: !3695)
!3703 = !DILocation(line: 206, column: 11, scope: !3695)
!3704 = !DILocation(line: 206, column: 2, scope: !3695)
!3705 = distinct !DISubprogram(name: "chunk_used", scope: !2507, file: !2507, line: 137, type: !3706, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3708)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{!157, !2520, !2525}
!3708 = !{!3709, !3710}
!3709 = !DILocalVariable(name: "h", arg: 1, scope: !3705, file: !2507, line: 137, type: !2520)
!3710 = !DILocalVariable(name: "c", arg: 2, scope: !3705, file: !2507, line: 137, type: !2525)
!3711 = !DILocation(line: 0, scope: !3705)
!3712 = !DILocation(line: 139, column: 9, scope: !3705)
!3713 = !DILocation(line: 139, column: 42, scope: !3705)
!3714 = !DILocation(line: 139, column: 2, scope: !3705)
!3715 = distinct !DISubprogram(name: "free_list_remove", scope: !3611, file: !3611, line: 60, type: !3667, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3716)
!3716 = !{!3717, !3718, !3719}
!3717 = !DILocalVariable(name: "h", arg: 1, scope: !3715, file: !3611, line: 60, type: !2520)
!3718 = !DILocalVariable(name: "c", arg: 2, scope: !3715, file: !3611, line: 60, type: !2525)
!3719 = !DILocalVariable(name: "bidx", scope: !3720, file: !3611, line: 63, type: !103)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !3611, line: 62, column: 31)
!3721 = distinct !DILexicalBlock(scope: !3715, file: !3611, line: 62, column: 6)
!3722 = !DILocation(line: 0, scope: !3715)
!3723 = !DILocation(line: 63, column: 28, scope: !3720)
!3724 = !{i32 0, i32 32768}
!3725 = !DILocation(line: 63, column: 14, scope: !3720)
!3726 = !DILocation(line: 0, scope: !3720)
!3727 = !DILocation(line: 64, column: 3, scope: !3720)
!3728 = !DILocation(line: 66, column: 1, scope: !3715)
!3729 = distinct !DISubprogram(name: "merge_chunks", scope: !3611, file: !3611, line: 125, type: !3730, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3732)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{null, !2520, !2525, !2525}
!3732 = !{!3733, !3734, !3735, !3736}
!3733 = !DILocalVariable(name: "h", arg: 1, scope: !3729, file: !3611, line: 125, type: !2520)
!3734 = !DILocalVariable(name: "lc", arg: 2, scope: !3729, file: !3611, line: 125, type: !2525)
!3735 = !DILocalVariable(name: "rc", arg: 3, scope: !3729, file: !3611, line: 125, type: !2525)
!3736 = !DILocalVariable(name: "newsz", scope: !3729, file: !3611, line: 127, type: !3737)
!3737 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2507, line: 62, baseType: !121)
!3738 = !DILocation(line: 0, scope: !3729)
!3739 = !DILocation(line: 127, column: 20, scope: !3729)
!3740 = !DILocation(line: 127, column: 40, scope: !3729)
!3741 = !DILocation(line: 127, column: 38, scope: !3729)
!3742 = !DILocation(line: 129, column: 2, scope: !3729)
!3743 = !DILocation(line: 130, column: 25, scope: !3729)
!3744 = !DILocation(line: 130, column: 2, scope: !3729)
!3745 = !DILocation(line: 131, column: 1, scope: !3729)
!3746 = distinct !DISubprogram(name: "left_chunk", scope: !2507, file: !2507, line: 199, type: !3696, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3747)
!3747 = !{!3748, !3749}
!3748 = !DILocalVariable(name: "h", arg: 1, scope: !3746, file: !2507, line: 199, type: !2520)
!3749 = !DILocalVariable(name: "c", arg: 2, scope: !3746, file: !2507, line: 199, type: !2525)
!3750 = !DILocation(line: 0, scope: !3746)
!3751 = !DILocation(line: 201, column: 13, scope: !3746)
!3752 = !DILocation(line: 201, column: 11, scope: !3746)
!3753 = !DILocation(line: 201, column: 2, scope: !3746)
!3754 = distinct !DISubprogram(name: "free_list_add", scope: !3611, file: !3611, line: 98, type: !3667, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3755)
!3755 = !{!3756, !3757, !3758}
!3756 = !DILocalVariable(name: "h", arg: 1, scope: !3754, file: !3611, line: 98, type: !2520)
!3757 = !DILocalVariable(name: "c", arg: 2, scope: !3754, file: !3611, line: 98, type: !2525)
!3758 = !DILocalVariable(name: "bidx", scope: !3759, file: !3611, line: 101, type: !103)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !3611, line: 100, column: 31)
!3760 = distinct !DILexicalBlock(scope: !3754, file: !3611, line: 100, column: 6)
!3761 = !DILocation(line: 0, scope: !3754)
!3762 = !DILocation(line: 101, column: 28, scope: !3759)
!3763 = !DILocation(line: 101, column: 14, scope: !3759)
!3764 = !DILocation(line: 0, scope: !3759)
!3765 = !DILocation(line: 102, column: 3, scope: !3759)
!3766 = !DILocation(line: 104, column: 1, scope: !3754)
!3767 = distinct !DISubprogram(name: "chunk_size", scope: !2507, file: !2507, line: 142, type: !3768, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3770)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{!3737, !2520, !2525}
!3770 = !{!3771, !3772}
!3771 = !DILocalVariable(name: "h", arg: 1, scope: !3767, file: !2507, line: 142, type: !2520)
!3772 = !DILocalVariable(name: "c", arg: 2, scope: !3767, file: !2507, line: 142, type: !2525)
!3773 = !DILocation(line: 0, scope: !3767)
!3774 = !DILocation(line: 144, column: 9, scope: !3767)
!3775 = !DILocation(line: 144, column: 42, scope: !3767)
!3776 = !DILocation(line: 144, column: 2, scope: !3767)
!3777 = distinct !DISubprogram(name: "bucket_idx", scope: !2507, file: !2507, line: 250, type: !3778, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3780)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{!103, !2520, !3737}
!3780 = !{!3781, !3782, !3783}
!3781 = !DILocalVariable(name: "h", arg: 1, scope: !3777, file: !2507, line: 250, type: !2520)
!3782 = !DILocalVariable(name: "sz", arg: 2, scope: !3777, file: !2507, line: 250, type: !3737)
!3783 = !DILocalVariable(name: "usable_sz", scope: !3777, file: !2507, line: 252, type: !32)
!3784 = !DILocation(line: 0, scope: !3777)
!3785 = !DILocation(line: 252, column: 32, scope: !3777)
!3786 = !DILocation(line: 252, column: 30, scope: !3777)
!3787 = !DILocation(line: 252, column: 50, scope: !3777)
!3788 = !DILocation(line: 253, column: 14, scope: !3777)
!3789 = !{i32 0, i32 33}
!3790 = !DILocation(line: 253, column: 12, scope: !3777)
!3791 = !DILocation(line: 253, column: 2, scope: !3777)
!3792 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3611, file: !3611, line: 68, type: !3793, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3795)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{null, !2520, !2525, !103}
!3795 = !{!3796, !3797, !3798, !3799, !3801, !3804}
!3796 = !DILocalVariable(name: "h", arg: 1, scope: !3792, file: !3611, line: 68, type: !2520)
!3797 = !DILocalVariable(name: "c", arg: 2, scope: !3792, file: !3611, line: 68, type: !2525)
!3798 = !DILocalVariable(name: "bidx", arg: 3, scope: !3792, file: !3611, line: 68, type: !103)
!3799 = !DILocalVariable(name: "b", scope: !3792, file: !3611, line: 70, type: !3800)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 32)
!3801 = !DILocalVariable(name: "second", scope: !3802, file: !3611, line: 84, type: !2525)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !3611, line: 80, column: 9)
!3803 = distinct !DILexicalBlock(scope: !3792, file: !3611, line: 72, column: 6)
!3804 = !DILocalVariable(name: "first", scope: !3802, file: !3611, line: 85, type: !2525)
!3805 = !DILocation(line: 0, scope: !3792)
!3806 = !DILocation(line: 72, column: 9, scope: !3803)
!3807 = !DILocation(line: 72, column: 14, scope: !3803)
!3808 = !DILocation(line: 72, column: 6, scope: !3792)
!3809 = !DILocation(line: 76, column: 23, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3803, file: !3611, line: 72, column: 21)
!3811 = !DILocation(line: 76, column: 6, scope: !3810)
!3812 = !DILocation(line: 76, column: 20, scope: !3810)
!3813 = !DILocation(line: 77, column: 11, scope: !3810)
!3814 = !DILocation(line: 78, column: 3, scope: !3810)
!3815 = !DILocation(line: 79, column: 3, scope: !3810)
!3816 = !DILocation(line: 80, column: 2, scope: !3810)
!3817 = !DILocation(line: 0, scope: !3802)
!3818 = !DILocation(line: 85, column: 21, scope: !3802)
!3819 = !{i32 0, i32 65536}
!3820 = !DILocation(line: 87, column: 3, scope: !3802)
!3821 = !DILocation(line: 88, column: 3, scope: !3802)
!3822 = !DILocation(line: 89, column: 3, scope: !3802)
!3823 = !DILocation(line: 90, column: 3, scope: !3802)
!3824 = !DILocation(line: 96, column: 1, scope: !3792)
!3825 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2507, file: !2507, line: 187, type: !3730, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3826)
!3826 = !{!3827, !3828, !3829}
!3827 = !DILocalVariable(name: "h", arg: 1, scope: !3825, file: !2507, line: 187, type: !2520)
!3828 = !DILocalVariable(name: "c", arg: 2, scope: !3825, file: !2507, line: 187, type: !2525)
!3829 = !DILocalVariable(name: "prev", arg: 3, scope: !3825, file: !2507, line: 188, type: !2525)
!3830 = !DILocation(line: 0, scope: !3825)
!3831 = !DILocation(line: 190, column: 2, scope: !3825)
!3832 = !DILocation(line: 191, column: 1, scope: !3825)
!3833 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2507, file: !2507, line: 193, type: !3730, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3834)
!3834 = !{!3835, !3836, !3837}
!3835 = !DILocalVariable(name: "h", arg: 1, scope: !3833, file: !2507, line: 193, type: !2520)
!3836 = !DILocalVariable(name: "c", arg: 2, scope: !3833, file: !2507, line: 193, type: !2525)
!3837 = !DILocalVariable(name: "next", arg: 3, scope: !3833, file: !2507, line: 194, type: !2525)
!3838 = !DILocation(line: 0, scope: !3833)
!3839 = !DILocation(line: 196, column: 2, scope: !3833)
!3840 = !DILocation(line: 197, column: 1, scope: !3833)
!3841 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2507, file: !2507, line: 177, type: !3696, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3842)
!3842 = !{!3843, !3844}
!3843 = !DILocalVariable(name: "h", arg: 1, scope: !3841, file: !2507, line: 177, type: !2520)
!3844 = !DILocalVariable(name: "c", arg: 2, scope: !3841, file: !2507, line: 177, type: !2525)
!3845 = !DILocation(line: 0, scope: !3841)
!3846 = !DILocation(line: 179, column: 9, scope: !3841)
!3847 = !DILocation(line: 179, column: 2, scope: !3841)
!3848 = distinct !DISubprogram(name: "chunk_field", scope: !2507, file: !2507, line: 107, type: !3849, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3851)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!2525, !2520, !2525, !2506}
!3851 = !{!3852, !3853, !3854, !3855, !3856}
!3852 = !DILocalVariable(name: "h", arg: 1, scope: !3848, file: !2507, line: 107, type: !2520)
!3853 = !DILocalVariable(name: "c", arg: 2, scope: !3848, file: !2507, line: 107, type: !2525)
!3854 = !DILocalVariable(name: "f", arg: 3, scope: !3848, file: !2507, line: 108, type: !2506)
!3855 = !DILocalVariable(name: "buf", scope: !3848, file: !2507, line: 110, type: !2514)
!3856 = !DILocalVariable(name: "cmem", scope: !3848, file: !2507, line: 111, type: !102)
!3857 = !DILocation(line: 0, scope: !3848)
!3858 = !DILocation(line: 110, column: 22, scope: !3848)
!3859 = !DILocation(line: 111, column: 15, scope: !3848)
!3860 = !DILocation(line: 116, column: 11, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !2507, line: 115, column: 9)
!3862 = distinct !DILexicalBlock(scope: !3848, file: !2507, line: 113, column: 6)
!3863 = !DILocation(line: 116, column: 10, scope: !3861)
!3864 = !DILocation(line: 118, column: 1, scope: !3848)
!3865 = distinct !DISubprogram(name: "chunk_buf", scope: !2507, file: !2507, line: 101, type: !3866, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3868)
!3866 = !DISubroutineType(types: !3867)
!3867 = !{!2514, !2520}
!3868 = !{!3869}
!3869 = !DILocalVariable(name: "h", arg: 1, scope: !3865, file: !2507, line: 101, type: !2520)
!3870 = !DILocation(line: 0, scope: !3865)
!3871 = !DILocation(line: 104, column: 9, scope: !3865)
!3872 = !DILocation(line: 104, column: 2, scope: !3865)
!3873 = distinct !DISubprogram(name: "chunk_set", scope: !2507, file: !2507, line: 120, type: !3874, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3876)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{null, !2520, !2525, !2506, !2525}
!3876 = !{!3877, !3878, !3879, !3880, !3881, !3882}
!3877 = !DILocalVariable(name: "h", arg: 1, scope: !3873, file: !2507, line: 120, type: !2520)
!3878 = !DILocalVariable(name: "c", arg: 2, scope: !3873, file: !2507, line: 120, type: !2525)
!3879 = !DILocalVariable(name: "f", arg: 3, scope: !3873, file: !2507, line: 121, type: !2506)
!3880 = !DILocalVariable(name: "val", arg: 4, scope: !3873, file: !2507, line: 121, type: !2525)
!3881 = !DILocalVariable(name: "buf", scope: !3873, file: !2507, line: 125, type: !2514)
!3882 = !DILocalVariable(name: "cmem", scope: !3873, file: !2507, line: 126, type: !102)
!3883 = !DILocation(line: 0, scope: !3873)
!3884 = !DILocation(line: 125, column: 22, scope: !3873)
!3885 = !DILocation(line: 126, column: 15, scope: !3873)
!3886 = !DILocation(line: 133, column: 27, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !2507, line: 131, column: 9)
!3888 = distinct !DILexicalBlock(scope: !3873, file: !2507, line: 128, column: 6)
!3889 = !DILocation(line: 133, column: 4, scope: !3887)
!3890 = !DILocation(line: 133, column: 3, scope: !3887)
!3891 = !DILocation(line: 133, column: 25, scope: !3887)
!3892 = !DILocation(line: 135, column: 1, scope: !3873)
!3893 = distinct !DISubprogram(name: "min_chunk_size", scope: !2507, file: !2507, line: 240, type: !3894, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3896)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!3737, !2520}
!3896 = !{!3897}
!3897 = !DILocalVariable(name: "h", arg: 1, scope: !3893, file: !2507, line: 240, type: !2520)
!3898 = !DILocation(line: 0, scope: !3893)
!3899 = !DILocation(line: 242, column: 9, scope: !3893)
!3900 = !DILocation(line: 242, column: 2, scope: !3893)
!3901 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2507, file: !2507, line: 235, type: !3902, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3904)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{!3737, !2520, !204}
!3904 = !{!3905, !3906}
!3905 = !DILocalVariable(name: "h", arg: 1, scope: !3901, file: !2507, line: 235, type: !2520)
!3906 = !DILocalVariable(name: "bytes", arg: 2, scope: !3901, file: !2507, line: 235, type: !204)
!3907 = !DILocation(line: 0, scope: !3901)
!3908 = !DILocation(line: 237, column: 39, scope: !3901)
!3909 = !DILocation(line: 237, column: 9, scope: !3901)
!3910 = !DILocation(line: 237, column: 2, scope: !3901)
!3911 = distinct !DISubprogram(name: "chunksz", scope: !2507, file: !2507, line: 230, type: !3912, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3914)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!3737, !204}
!3914 = !{!3915}
!3915 = !DILocalVariable(name: "bytes", arg: 1, scope: !3911, file: !2507, line: 230, type: !204)
!3916 = !DILocation(line: 0, scope: !3911)
!3917 = !DILocation(line: 232, column: 29, scope: !3911)
!3918 = !DILocation(line: 232, column: 35, scope: !3911)
!3919 = !DILocation(line: 232, column: 2, scope: !3911)
!3920 = distinct !DISubprogram(name: "set_chunk_size", scope: !2507, file: !2507, line: 172, type: !3921, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3923)
!3921 = !DISubroutineType(types: !3922)
!3922 = !{null, !2520, !2525, !3737}
!3923 = !{!3924, !3925, !3926}
!3924 = !DILocalVariable(name: "h", arg: 1, scope: !3920, file: !2507, line: 172, type: !2520)
!3925 = !DILocalVariable(name: "c", arg: 2, scope: !3920, file: !2507, line: 172, type: !2525)
!3926 = !DILocalVariable(name: "size", arg: 3, scope: !3920, file: !2507, line: 172, type: !3737)
!3927 = !DILocation(line: 0, scope: !3920)
!3928 = !DILocation(line: 174, column: 38, scope: !3920)
!3929 = !DILocation(line: 174, column: 2, scope: !3920)
!3930 = !DILocation(line: 175, column: 1, scope: !3920)
!3931 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2507, file: !2507, line: 209, type: !3921, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3932)
!3932 = !{!3933, !3934, !3935}
!3933 = !DILocalVariable(name: "h", arg: 1, scope: !3931, file: !2507, line: 209, type: !2520)
!3934 = !DILocalVariable(name: "c", arg: 2, scope: !3931, file: !2507, line: 209, type: !2525)
!3935 = !DILocalVariable(name: "size", arg: 3, scope: !3931, file: !2507, line: 210, type: !3737)
!3936 = !DILocation(line: 0, scope: !3931)
!3937 = !DILocation(line: 212, column: 2, scope: !3931)
!3938 = !DILocation(line: 213, column: 1, scope: !3931)
!3939 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3611, file: !3611, line: 34, type: !3793, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3940)
!3940 = !{!3941, !3942, !3943, !3944, !3945, !3948}
!3941 = !DILocalVariable(name: "h", arg: 1, scope: !3939, file: !3611, line: 34, type: !2520)
!3942 = !DILocalVariable(name: "c", arg: 2, scope: !3939, file: !3611, line: 34, type: !2525)
!3943 = !DILocalVariable(name: "bidx", arg: 3, scope: !3939, file: !3611, line: 34, type: !103)
!3944 = !DILocalVariable(name: "b", scope: !3939, file: !3611, line: 36, type: !3800)
!3945 = !DILocalVariable(name: "first", scope: !3946, file: !3611, line: 47, type: !2525)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !3611, line: 46, column: 9)
!3947 = distinct !DILexicalBlock(scope: !3939, file: !3611, line: 42, column: 6)
!3948 = !DILocalVariable(name: "second", scope: !3946, file: !3611, line: 48, type: !2525)
!3949 = !DILocation(line: 0, scope: !3939)
!3950 = !DILocation(line: 36, column: 29, scope: !3939)
!3951 = !DILocation(line: 42, column: 6, scope: !3947)
!3952 = !DILocation(line: 42, column: 28, scope: !3947)
!3953 = !DILocation(line: 42, column: 6, scope: !3939)
!3954 = !DILocation(line: 44, column: 24, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3947, file: !3611, line: 42, column: 34)
!3956 = !DILocation(line: 44, column: 23, scope: !3955)
!3957 = !DILocation(line: 44, column: 6, scope: !3955)
!3958 = !DILocation(line: 44, column: 20, scope: !3955)
!3959 = !DILocation(line: 45, column: 6, scope: !3955)
!3960 = !DILocation(line: 45, column: 11, scope: !3955)
!3961 = !DILocation(line: 46, column: 2, scope: !3955)
!3962 = !DILocation(line: 47, column: 21, scope: !3946)
!3963 = !DILocation(line: 0, scope: !3946)
!3964 = !DILocation(line: 50, column: 6, scope: !3946)
!3965 = !DILocation(line: 50, column: 11, scope: !3946)
!3966 = !DILocation(line: 51, column: 3, scope: !3946)
!3967 = !DILocation(line: 52, column: 3, scope: !3946)
!3968 = !DILocation(line: 58, column: 1, scope: !3939)
!3969 = distinct !DISubprogram(name: "next_free_chunk", scope: !2507, file: !2507, line: 182, type: !3696, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3970)
!3970 = !{!3971, !3972}
!3971 = !DILocalVariable(name: "h", arg: 1, scope: !3969, file: !2507, line: 182, type: !2520)
!3972 = !DILocalVariable(name: "c", arg: 2, scope: !3969, file: !2507, line: 182, type: !2525)
!3973 = !DILocation(line: 0, scope: !3969)
!3974 = !DILocation(line: 184, column: 9, scope: !3969)
!3975 = !DILocation(line: 184, column: 2, scope: !3969)
!3976 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3611, file: !3611, line: 200, type: !3977, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !3979)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!204, !3614, !102}
!3979 = !{!3980, !3981, !3982, !3983, !3984, !3985, !3986}
!3980 = !DILocalVariable(name: "heap", arg: 1, scope: !3976, file: !3611, line: 200, type: !3614)
!3981 = !DILocalVariable(name: "mem", arg: 2, scope: !3976, file: !3611, line: 200, type: !102)
!3982 = !DILocalVariable(name: "h", scope: !3976, file: !3611, line: 202, type: !2520)
!3983 = !DILocalVariable(name: "c", scope: !3976, file: !3611, line: 203, type: !2525)
!3984 = !DILocalVariable(name: "addr", scope: !3976, file: !3611, line: 204, type: !204)
!3985 = !DILocalVariable(name: "chunk_base", scope: !3976, file: !3611, line: 205, type: !204)
!3986 = !DILocalVariable(name: "chunk_sz", scope: !3976, file: !3611, line: 206, type: !204)
!3987 = !DILocation(line: 0, scope: !3976)
!3988 = !DILocation(line: 202, column: 27, scope: !3976)
!3989 = !DILocation(line: 203, column: 16, scope: !3976)
!3990 = !DILocation(line: 204, column: 16, scope: !3976)
!3991 = !DILocation(line: 205, column: 31, scope: !3976)
!3992 = !DILocation(line: 205, column: 22, scope: !3976)
!3993 = !DILocation(line: 206, column: 20, scope: !3976)
!3994 = !DILocation(line: 206, column: 37, scope: !3976)
!3995 = !DILocation(line: 208, column: 26, scope: !3976)
!3996 = !DILocation(line: 208, column: 18, scope: !3976)
!3997 = !DILocation(line: 208, column: 2, scope: !3976)
!3998 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3611, file: !3611, line: 263, type: !3999, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !4001)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!102, !3614, !204}
!4001 = !{!4002, !4003, !4004, !4005, !4006, !4007}
!4002 = !DILocalVariable(name: "heap", arg: 1, scope: !3998, file: !3611, line: 263, type: !3614)
!4003 = !DILocalVariable(name: "bytes", arg: 2, scope: !3998, file: !3611, line: 263, type: !204)
!4004 = !DILocalVariable(name: "h", scope: !3998, file: !3611, line: 265, type: !2520)
!4005 = !DILocalVariable(name: "mem", scope: !3998, file: !3611, line: 266, type: !102)
!4006 = !DILocalVariable(name: "chunk_sz", scope: !3998, file: !3611, line: 272, type: !3737)
!4007 = !DILocalVariable(name: "c", scope: !3998, file: !3611, line: 273, type: !2525)
!4008 = !DILocation(line: 0, scope: !3998)
!4009 = !DILocation(line: 265, column: 27, scope: !3998)
!4010 = !DILocation(line: 268, column: 12, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !3998, file: !3611, line: 268, column: 6)
!4012 = !DILocation(line: 268, column: 18, scope: !4011)
!4013 = !DILocation(line: 268, column: 21, scope: !4011)
!4014 = !DILocation(line: 268, column: 6, scope: !3998)
!4015 = !DILocation(line: 272, column: 23, scope: !3998)
!4016 = !DILocation(line: 273, column: 16, scope: !3998)
!4017 = !DILocation(line: 274, column: 8, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3998, file: !3611, line: 274, column: 6)
!4019 = !DILocation(line: 274, column: 6, scope: !3998)
!4020 = !DILocation(line: 279, column: 6, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !3998, file: !3611, line: 279, column: 6)
!4022 = !DILocation(line: 279, column: 23, scope: !4021)
!4023 = !DILocation(line: 279, column: 6, scope: !3998)
!4024 = !DILocation(line: 280, column: 24, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4021, file: !3611, line: 279, column: 35)
!4026 = !DILocation(line: 280, column: 3, scope: !4025)
!4027 = !DILocation(line: 281, column: 3, scope: !4025)
!4028 = !DILocation(line: 282, column: 2, scope: !4025)
!4029 = !DILocation(line: 284, column: 2, scope: !3998)
!4030 = !DILocation(line: 286, column: 8, scope: !3998)
!4031 = !DILocation(line: 298, column: 2, scope: !3998)
!4032 = !DILocation(line: 299, column: 1, scope: !3998)
!4033 = distinct !DISubprogram(name: "size_too_big", scope: !2507, file: !2507, line: 256, type: !4034, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !4036)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!157, !2520, !204}
!4036 = !{!4037, !4038}
!4037 = !DILocalVariable(name: "h", arg: 1, scope: !4033, file: !2507, line: 256, type: !2520)
!4038 = !DILocalVariable(name: "bytes", arg: 2, scope: !4033, file: !2507, line: 256, type: !204)
!4039 = !DILocation(line: 0, scope: !4033)
!4040 = !DILocation(line: 262, column: 16, scope: !4033)
!4041 = !DILocation(line: 262, column: 36, scope: !4033)
!4042 = !DILocation(line: 262, column: 30, scope: !4033)
!4043 = !DILocation(line: 262, column: 2, scope: !4033)
!4044 = distinct !DISubprogram(name: "alloc_chunk", scope: !3611, file: !3611, line: 211, type: !4045, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !4047)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{!2525, !2520, !3737}
!4047 = !{!4048, !4049, !4050, !4051, !4052, !4055, !4056, !4058, !4059, !4062}
!4048 = !DILocalVariable(name: "h", arg: 1, scope: !4044, file: !3611, line: 211, type: !2520)
!4049 = !DILocalVariable(name: "sz", arg: 2, scope: !4044, file: !3611, line: 211, type: !3737)
!4050 = !DILocalVariable(name: "bi", scope: !4044, file: !3611, line: 213, type: !103)
!4051 = !DILocalVariable(name: "b", scope: !4044, file: !3611, line: 214, type: !3800)
!4052 = !DILocalVariable(name: "first", scope: !4053, file: !3611, line: 233, type: !2525)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !3611, line: 232, column: 15)
!4054 = distinct !DILexicalBlock(scope: !4044, file: !3611, line: 232, column: 6)
!4055 = !DILocalVariable(name: "i", scope: !4053, file: !3611, line: 234, type: !103)
!4056 = !DILocalVariable(name: "c", scope: !4057, file: !3611, line: 236, type: !2525)
!4057 = distinct !DILexicalBlock(scope: !4053, file: !3611, line: 235, column: 6)
!4058 = !DILocalVariable(name: "bmask", scope: !4044, file: !3611, line: 249, type: !121)
!4059 = !DILocalVariable(name: "minbucket", scope: !4060, file: !3611, line: 252, type: !103)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !3611, line: 251, column: 19)
!4061 = distinct !DILexicalBlock(scope: !4044, file: !3611, line: 251, column: 6)
!4062 = !DILocalVariable(name: "c", scope: !4060, file: !3611, line: 253, type: !2525)
!4063 = !DILocation(line: 0, scope: !4044)
!4064 = !DILocation(line: 213, column: 11, scope: !4044)
!4065 = !DILocation(line: 232, column: 9, scope: !4054)
!4066 = !DILocation(line: 232, column: 6, scope: !4054)
!4067 = !DILocation(line: 232, column: 6, scope: !4044)
!4068 = !DILocation(line: 236, column: 21, scope: !4057)
!4069 = !DILocation(line: 0, scope: !4053)
!4070 = !DILocation(line: 0, scope: !4057)
!4071 = !DILocation(line: 237, column: 8, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4057, file: !3611, line: 237, column: 8)
!4073 = !DILocation(line: 237, column: 25, scope: !4072)
!4074 = !DILocation(line: 237, column: 8, scope: !4057)
!4075 = !DILocation(line: 238, column: 5, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4072, file: !3611, line: 237, column: 32)
!4077 = !DILocation(line: 241, column: 14, scope: !4057)
!4078 = !DILocation(line: 241, column: 12, scope: !4057)
!4079 = !DILocation(line: 243, column: 12, scope: !4053)
!4080 = !DILocation(line: 243, column: 16, scope: !4053)
!4081 = distinct !{!4081, !4082, !4083}
!4082 = !DILocation(line: 235, column: 3, scope: !4053)
!4083 = !DILocation(line: 243, column: 35, scope: !4053)
!4084 = !DILocation(line: 249, column: 22, scope: !4044)
!4085 = !DILocation(line: 249, column: 39, scope: !4044)
!4086 = !DILocation(line: 249, column: 36, scope: !4044)
!4087 = !DILocation(line: 251, column: 12, scope: !4061)
!4088 = !DILocation(line: 251, column: 6, scope: !4044)
!4089 = !DILocation(line: 252, column: 19, scope: !4060)
!4090 = !DILocation(line: 0, scope: !4060)
!4091 = !DILocation(line: 253, column: 39, scope: !4060)
!4092 = !DILocation(line: 255, column: 3, scope: !4060)
!4093 = !DILocation(line: 261, column: 1, scope: !4044)
!4094 = distinct !DISubprogram(name: "split_chunks", scope: !3611, file: !3611, line: 109, type: !3730, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !4095)
!4095 = !{!4096, !4097, !4098, !4099, !4100, !4101}
!4096 = !DILocalVariable(name: "h", arg: 1, scope: !4094, file: !3611, line: 109, type: !2520)
!4097 = !DILocalVariable(name: "lc", arg: 2, scope: !4094, file: !3611, line: 109, type: !2525)
!4098 = !DILocalVariable(name: "rc", arg: 3, scope: !4094, file: !3611, line: 109, type: !2525)
!4099 = !DILocalVariable(name: "sz0", scope: !4094, file: !3611, line: 114, type: !3737)
!4100 = !DILocalVariable(name: "lsz", scope: !4094, file: !3611, line: 115, type: !3737)
!4101 = !DILocalVariable(name: "rsz", scope: !4094, file: !3611, line: 116, type: !3737)
!4102 = !DILocation(line: 0, scope: !4094)
!4103 = !DILocation(line: 114, column: 18, scope: !4094)
!4104 = !DILocation(line: 115, column: 21, scope: !4094)
!4105 = !DILocation(line: 116, column: 22, scope: !4094)
!4106 = !DILocation(line: 118, column: 2, scope: !4094)
!4107 = !DILocation(line: 119, column: 2, scope: !4094)
!4108 = !DILocation(line: 120, column: 2, scope: !4094)
!4109 = !DILocation(line: 121, column: 25, scope: !4094)
!4110 = !DILocation(line: 121, column: 2, scope: !4094)
!4111 = !DILocation(line: 122, column: 1, scope: !4094)
!4112 = distinct !DISubprogram(name: "chunk_mem", scope: !3611, file: !3611, line: 24, type: !4113, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !4115)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{!102, !2520, !2525}
!4115 = !{!4116, !4117, !4118, !4119}
!4116 = !DILocalVariable(name: "h", arg: 1, scope: !4112, file: !3611, line: 24, type: !2520)
!4117 = !DILocalVariable(name: "c", arg: 2, scope: !4112, file: !3611, line: 24, type: !2525)
!4118 = !DILocalVariable(name: "buf", scope: !4112, file: !3611, line: 26, type: !2514)
!4119 = !DILocalVariable(name: "ret", scope: !4112, file: !3611, line: 27, type: !267)
!4120 = !DILocation(line: 0, scope: !4112)
!4121 = !DILocation(line: 26, column: 22, scope: !4112)
!4122 = !DILocation(line: 27, column: 38, scope: !4112)
!4123 = !DILocation(line: 31, column: 2, scope: !4112)
!4124 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3611, file: !3611, line: 301, type: !4125, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !4127)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{!102, !3614, !204, !204}
!4127 = !{!4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139}
!4128 = !DILocalVariable(name: "heap", arg: 1, scope: !4124, file: !3611, line: 301, type: !3614)
!4129 = !DILocalVariable(name: "align", arg: 2, scope: !4124, file: !3611, line: 301, type: !204)
!4130 = !DILocalVariable(name: "bytes", arg: 3, scope: !4124, file: !3611, line: 301, type: !204)
!4131 = !DILocalVariable(name: "h", scope: !4124, file: !3611, line: 303, type: !2520)
!4132 = !DILocalVariable(name: "gap", scope: !4124, file: !3611, line: 304, type: !204)
!4133 = !DILocalVariable(name: "rew", scope: !4124, file: !3611, line: 304, type: !204)
!4134 = !DILocalVariable(name: "padded_sz", scope: !4124, file: !3611, line: 335, type: !3737)
!4135 = !DILocalVariable(name: "c0", scope: !4124, file: !3611, line: 336, type: !2525)
!4136 = !DILocalVariable(name: "mem", scope: !4124, file: !3611, line: 341, type: !267)
!4137 = !DILocalVariable(name: "end", scope: !4124, file: !3611, line: 345, type: !2514)
!4138 = !DILocalVariable(name: "c", scope: !4124, file: !3611, line: 348, type: !2525)
!4139 = !DILocalVariable(name: "c_end", scope: !4124, file: !3611, line: 349, type: !2525)
!4140 = !DILocation(line: 0, scope: !4124)
!4141 = !DILocation(line: 303, column: 27, scope: !4124)
!4142 = !DILocation(line: 313, column: 16, scope: !4124)
!4143 = !DILocation(line: 313, column: 14, scope: !4124)
!4144 = !DILocation(line: 314, column: 12, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4124, file: !3611, line: 314, column: 6)
!4146 = !DILocation(line: 314, column: 6, scope: !4124)
!4147 = !DILocation(line: 315, column: 9, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4145, file: !3611, line: 314, column: 20)
!4149 = !DILocation(line: 316, column: 9, scope: !4148)
!4150 = !DILocation(line: 318, column: 13, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4152, file: !3611, line: 318, column: 7)
!4152 = distinct !DILexicalBlock(scope: !4145, file: !3611, line: 317, column: 9)
!4153 = !DILocation(line: 318, column: 7, scope: !4152)
!4154 = !DILocation(line: 319, column: 11, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4151, file: !3611, line: 318, column: 39)
!4156 = !DILocation(line: 319, column: 4, scope: !4155)
!4157 = !DILocation(line: 0, scope: !4145)
!4158 = !DILocation(line: 326, column: 12, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4124, file: !3611, line: 326, column: 6)
!4160 = !DILocation(line: 326, column: 17, scope: !4159)
!4161 = !DILocation(line: 326, column: 20, scope: !4159)
!4162 = !DILocation(line: 326, column: 6, scope: !4124)
!4163 = !DILocation(line: 335, column: 50, scope: !4124)
!4164 = !DILocation(line: 335, column: 58, scope: !4124)
!4165 = !DILocation(line: 335, column: 24, scope: !4124)
!4166 = !DILocation(line: 336, column: 17, scope: !4124)
!4167 = !DILocation(line: 338, column: 9, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4124, file: !3611, line: 338, column: 6)
!4169 = !DILocation(line: 338, column: 6, scope: !4124)
!4170 = !DILocation(line: 341, column: 17, scope: !4124)
!4171 = !DILocation(line: 344, column: 20, scope: !4124)
!4172 = !DILocation(line: 344, column: 8, scope: !4124)
!4173 = !DILocation(line: 344, column: 47, scope: !4124)
!4174 = !DILocation(line: 345, column: 39, scope: !4124)
!4175 = !DILocation(line: 348, column: 16, scope: !4124)
!4176 = !DILocation(line: 349, column: 26, scope: !4124)
!4177 = !DILocation(line: 349, column: 24, scope: !4124)
!4178 = !DILocation(line: 353, column: 8, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4124, file: !3611, line: 353, column: 6)
!4180 = !DILocation(line: 353, column: 6, scope: !4124)
!4181 = !DILocation(line: 354, column: 3, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4179, file: !3611, line: 353, column: 14)
!4183 = !DILocation(line: 355, column: 3, scope: !4182)
!4184 = !DILocation(line: 356, column: 2, scope: !4182)
!4185 = !DILocation(line: 359, column: 6, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4124, file: !3611, line: 359, column: 6)
!4187 = !DILocation(line: 359, column: 24, scope: !4186)
!4188 = !DILocation(line: 359, column: 6, scope: !4124)
!4189 = !DILocation(line: 360, column: 3, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4186, file: !3611, line: 359, column: 33)
!4191 = !DILocation(line: 361, column: 3, scope: !4190)
!4192 = !DILocation(line: 362, column: 2, scope: !4190)
!4193 = !DILocation(line: 364, column: 2, scope: !4124)
!4194 = !DILocation(line: 377, column: 1, scope: !4124)
!4195 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3611, file: !3611, line: 379, type: !4196, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !4198)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{!102, !3614, !102, !204, !204}
!4198 = !{!4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4214, !4215}
!4199 = !DILocalVariable(name: "heap", arg: 1, scope: !4195, file: !3611, line: 379, type: !3614)
!4200 = !DILocalVariable(name: "ptr", arg: 2, scope: !4195, file: !3611, line: 379, type: !102)
!4201 = !DILocalVariable(name: "align", arg: 3, scope: !4195, file: !3611, line: 380, type: !204)
!4202 = !DILocalVariable(name: "bytes", arg: 4, scope: !4195, file: !3611, line: 380, type: !204)
!4203 = !DILocalVariable(name: "h", scope: !4195, file: !3611, line: 382, type: !2520)
!4204 = !DILocalVariable(name: "c", scope: !4195, file: !3611, line: 399, type: !2525)
!4205 = !DILocalVariable(name: "rc", scope: !4195, file: !3611, line: 400, type: !2525)
!4206 = !DILocalVariable(name: "align_gap", scope: !4195, file: !3611, line: 401, type: !204)
!4207 = !DILocalVariable(name: "chunks_need", scope: !4195, file: !3611, line: 402, type: !3737)
!4208 = !DILocalVariable(name: "split_size", scope: !4209, file: !3611, line: 435, type: !3737)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !3611, line: 433, column: 61)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !3611, line: 432, column: 13)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !3611, line: 409, column: 13)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !3611, line: 406, column: 13)
!4213 = distinct !DILexicalBlock(scope: !4195, file: !3611, line: 404, column: 6)
!4214 = !DILocalVariable(name: "ptr2", scope: !4195, file: !3611, line: 474, type: !102)
!4215 = !DILocalVariable(name: "prev_size", scope: !4216, file: !3611, line: 477, type: !204)
!4216 = distinct !DILexicalBlock(scope: !4217, file: !3611, line: 476, column: 20)
!4217 = distinct !DILexicalBlock(scope: !4195, file: !3611, line: 476, column: 6)
!4218 = !DILocation(line: 0, scope: !4195)
!4219 = !DILocation(line: 382, column: 27, scope: !4195)
!4220 = !DILocation(line: 385, column: 10, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4195, file: !3611, line: 385, column: 6)
!4222 = !DILocation(line: 385, column: 6, scope: !4195)
!4223 = !DILocation(line: 386, column: 10, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4221, file: !3611, line: 385, column: 19)
!4225 = !DILocation(line: 386, column: 3, scope: !4224)
!4226 = !DILocation(line: 388, column: 12, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4195, file: !3611, line: 388, column: 6)
!4228 = !DILocation(line: 388, column: 6, scope: !4195)
!4229 = !DILocation(line: 389, column: 3, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4227, file: !3611, line: 388, column: 18)
!4231 = !DILocation(line: 390, column: 3, scope: !4230)
!4232 = !DILocation(line: 395, column: 6, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4195, file: !3611, line: 395, column: 6)
!4234 = !DILocation(line: 395, column: 6, scope: !4195)
!4235 = !DILocation(line: 399, column: 16, scope: !4195)
!4236 = !DILocation(line: 400, column: 17, scope: !4195)
!4237 = !DILocation(line: 401, column: 49, scope: !4195)
!4238 = !DILocation(line: 401, column: 36, scope: !4195)
!4239 = !DILocation(line: 402, column: 52, scope: !4195)
!4240 = !DILocation(line: 402, column: 26, scope: !4195)
!4241 = !DILocation(line: 404, column: 6, scope: !4213)
!4242 = !DILocation(line: 404, column: 12, scope: !4213)
!4243 = !DILocation(line: 404, column: 40, scope: !4213)
!4244 = !DILocation(line: 404, column: 31, scope: !4213)
!4245 = !DILocation(line: 404, column: 6, scope: !4195)
!4246 = !DILocation(line: 406, column: 13, scope: !4212)
!4247 = !DILocation(line: 406, column: 30, scope: !4212)
!4248 = !DILocation(line: 406, column: 13, scope: !4213)
!4249 = !DILocation(line: 409, column: 30, scope: !4211)
!4250 = !DILocation(line: 409, column: 13, scope: !4212)
!4251 = !DILocation(line: 420, column: 24, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4211, file: !3611, line: 409, column: 45)
!4253 = !DILocation(line: 420, column: 3, scope: !4252)
!4254 = !DILocation(line: 421, column: 3, scope: !4252)
!4255 = !DILocation(line: 422, column: 3, scope: !4252)
!4256 = !DILocation(line: 431, column: 3, scope: !4252)
!4257 = !DILocation(line: 432, column: 14, scope: !4210)
!4258 = !DILocation(line: 432, column: 32, scope: !4210)
!4259 = !DILocation(line: 433, column: 26, scope: !4210)
!4260 = !DILocation(line: 433, column: 24, scope: !4210)
!4261 = !DILocation(line: 433, column: 44, scope: !4210)
!4262 = !DILocation(line: 432, column: 13, scope: !4211)
!4263 = !DILocation(line: 435, column: 38, scope: !4209)
!4264 = !DILocation(line: 0, scope: !4209)
!4265 = !DILocation(line: 445, column: 3, scope: !4209)
!4266 = !DILocation(line: 447, column: 20, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4209, file: !3611, line: 447, column: 7)
!4268 = !DILocation(line: 447, column: 18, scope: !4267)
!4269 = !DILocation(line: 447, column: 7, scope: !4209)
!4270 = !DILocation(line: 448, column: 27, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4267, file: !3611, line: 447, column: 39)
!4272 = !DILocation(line: 448, column: 4, scope: !4271)
!4273 = !DILocation(line: 449, column: 4, scope: !4271)
!4274 = !DILocation(line: 450, column: 3, scope: !4271)
!4275 = !DILocation(line: 452, column: 3, scope: !4209)
!4276 = !DILocation(line: 453, column: 3, scope: !4209)
!4277 = !DILocation(line: 474, column: 15, scope: !4195)
!4278 = !DILocation(line: 476, column: 11, scope: !4217)
!4279 = !DILocation(line: 476, column: 6, scope: !4195)
!4280 = !DILocation(line: 477, column: 42, scope: !4216)
!4281 = !DILocation(line: 477, column: 22, scope: !4216)
!4282 = !DILocation(line: 477, column: 60, scope: !4216)
!4283 = !DILocation(line: 0, scope: !4216)
!4284 = !DILocation(line: 479, column: 21, scope: !4216)
!4285 = !DILocation(line: 479, column: 3, scope: !4216)
!4286 = !DILocation(line: 480, column: 3, scope: !4216)
!4287 = !DILocation(line: 481, column: 2, scope: !4216)
!4288 = !DILocation(line: 483, column: 1, scope: !4195)
!4289 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2507, file: !2507, line: 245, type: !4290, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !4292)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{!204, !2520, !3737}
!4292 = !{!4293, !4294}
!4293 = !DILocalVariable(name: "h", arg: 1, scope: !4289, file: !2507, line: 245, type: !2520)
!4294 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4289, file: !2507, line: 245, type: !3737)
!4295 = !DILocation(line: 0, scope: !4289)
!4296 = !DILocation(line: 247, column: 20, scope: !4289)
!4297 = !DILocation(line: 247, column: 33, scope: !4289)
!4298 = !DILocation(line: 247, column: 2, scope: !4289)
!4299 = distinct !DISubprogram(name: "sys_heap_init", scope: !3611, file: !3611, line: 485, type: !4300, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !4302)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{null, !3614, !102, !204}
!4302 = !{!4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312}
!4303 = !DILocalVariable(name: "heap", arg: 1, scope: !4299, file: !3611, line: 485, type: !3614)
!4304 = !DILocalVariable(name: "mem", arg: 2, scope: !4299, file: !3611, line: 485, type: !102)
!4305 = !DILocalVariable(name: "bytes", arg: 3, scope: !4299, file: !3611, line: 485, type: !204)
!4306 = !DILocalVariable(name: "addr", scope: !4299, file: !3611, line: 502, type: !22)
!4307 = !DILocalVariable(name: "end", scope: !4299, file: !3611, line: 503, type: !22)
!4308 = !DILocalVariable(name: "heap_sz", scope: !4299, file: !3611, line: 504, type: !3737)
!4309 = !DILocalVariable(name: "h", scope: !4299, file: !3611, line: 509, type: !2520)
!4310 = !DILocalVariable(name: "nb_buckets", scope: !4299, file: !3611, line: 520, type: !103)
!4311 = !DILocalVariable(name: "chunk0_size", scope: !4299, file: !3611, line: 521, type: !3737)
!4312 = !DILocalVariable(name: "i", scope: !4313, file: !3611, line: 526, type: !103)
!4313 = distinct !DILexicalBlock(scope: !4299, file: !3611, line: 526, column: 2)
!4314 = !DILocation(line: 0, scope: !4299)
!4315 = !DILocation(line: 499, column: 8, scope: !4299)
!4316 = !DILocation(line: 502, column: 19, scope: !4299)
!4317 = !DILocation(line: 503, column: 18, scope: !4299)
!4318 = !DILocation(line: 504, column: 27, scope: !4299)
!4319 = !DILocation(line: 504, column: 35, scope: !4299)
!4320 = !DILocation(line: 509, column: 21, scope: !4299)
!4321 = !DILocation(line: 510, column: 8, scope: !4299)
!4322 = !DILocation(line: 510, column: 13, scope: !4299)
!4323 = !DILocation(line: 511, column: 5, scope: !4299)
!4324 = !DILocation(line: 511, column: 15, scope: !4299)
!4325 = !DILocation(line: 512, column: 5, scope: !4299)
!4326 = !DILocation(line: 512, column: 19, scope: !4299)
!4327 = !DILocation(line: 520, column: 19, scope: !4299)
!4328 = !DILocation(line: 522, column: 21, scope: !4299)
!4329 = !DILocation(line: 521, column: 56, scope: !4299)
!4330 = !DILocation(line: 521, column: 26, scope: !4299)
!4331 = !DILocation(line: 0, scope: !4313)
!4332 = !DILocation(line: 526, column: 20, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4313, file: !3611, line: 526, column: 2)
!4334 = !DILocation(line: 526, column: 2, scope: !4313)
!4335 = !DILocation(line: 531, column: 2, scope: !4299)
!4336 = !DILocation(line: 532, column: 2, scope: !4299)
!4337 = !DILocation(line: 533, column: 2, scope: !4299)
!4338 = !DILocation(line: 536, column: 41, scope: !4299)
!4339 = !DILocation(line: 536, column: 2, scope: !4299)
!4340 = !DILocation(line: 537, column: 2, scope: !4299)
!4341 = !DILocation(line: 540, column: 2, scope: !4299)
!4342 = !DILocation(line: 541, column: 2, scope: !4299)
!4343 = !DILocation(line: 542, column: 2, scope: !4299)
!4344 = !DILocation(line: 544, column: 2, scope: !4299)
!4345 = !DILocation(line: 545, column: 1, scope: !4299)
!4346 = !DILocation(line: 527, column: 17, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4333, file: !3611, line: 526, column: 39)
!4348 = !DILocation(line: 527, column: 22, scope: !4347)
!4349 = !DILocation(line: 526, column: 35, scope: !4333)
!4350 = distinct !{!4350, !4334, !4351}
!4351 = !DILocation(line: 528, column: 2, scope: !4313)
!4352 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2540, file: !2540, line: 1338, type: !4353, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !4361)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!103, !3341, !102, !144, !4355, !121}
!4355 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3307, line: 99, baseType: !4356)
!4356 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3307, line: 40, baseType: !4357)
!4357 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2540, baseType: !4358)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4359)
!4359 = !{!4360}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4358, file: !2540, baseType: !102, size: 32)
!4361 = !{!4362, !4363, !4364, !4365, !4366, !4367, !4371, !4372, !4373, !4375, !4380, !4425, !4428, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4440, !4441, !4442, !4446, !4449, !4451, !4454, !4455, !4456, !4461, !4467, !4470, !4474, !4480, !4484, !4487, !4489, !4492}
!4362 = !DILocalVariable(name: "out", arg: 1, scope: !4352, file: !2540, line: 1338, type: !3341)
!4363 = !DILocalVariable(name: "ctx", arg: 2, scope: !4352, file: !2540, line: 1338, type: !102)
!4364 = !DILocalVariable(name: "fp", arg: 3, scope: !4352, file: !2540, line: 1338, type: !144)
!4365 = !DILocalVariable(name: "ap", arg: 4, scope: !4352, file: !2540, line: 1339, type: !4355)
!4366 = !DILocalVariable(name: "flags", arg: 5, scope: !4352, file: !2540, line: 1339, type: !121)
!4367 = !DILocalVariable(name: "buf", scope: !4352, file: !2540, line: 1341, type: !4368)
!4368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !4369)
!4369 = !{!4370}
!4370 = !DISubrange(count: 22)
!4371 = !DILocalVariable(name: "count", scope: !4352, file: !2540, line: 1342, type: !204)
!4372 = !DILocalVariable(name: "sint", scope: !4352, file: !2540, line: 1343, type: !2559)
!4373 = !DILocalVariable(name: "tagged_ap", scope: !4352, file: !2540, line: 1345, type: !4374)
!4374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!4375 = !DILocalVariable(name: "rc", scope: !4376, file: !2540, line: 1377, type: !103)
!4376 = distinct !DILexicalBlock(scope: !4377, file: !2540, line: 1377, column: 4)
!4377 = distinct !DILexicalBlock(scope: !4378, file: !2540, line: 1376, column: 19)
!4378 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1376, column: 7)
!4379 = distinct !DILexicalBlock(scope: !4352, file: !2540, line: 1375, column: 19)
!4380 = !DILocalVariable(name: "state", scope: !4379, file: !2540, line: 1395, type: !4381)
!4381 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4352, file: !2540, line: 1392, size: 192, elements: !4382)
!4382 = !{!4383, !4393}
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4381, file: !2540, line: 1393, baseType: !4384, size: 64)
!4384 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2540, line: 166, size: 64, elements: !4385)
!4385 = !{!4386, !4387, !4388, !4390, !4392}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4384, file: !2540, line: 168, baseType: !2559, size: 64)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4384, file: !2540, line: 171, baseType: !2562, size: 64)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4384, file: !2540, line: 174, baseType: !4389, size: 64)
!4389 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4384, file: !2540, line: 177, baseType: !4391, size: 64)
!4391 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4384, file: !2540, line: 180, baseType: !102, size: 32)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4381, file: !2540, line: 1394, baseType: !4394, size: 96, offset: 64)
!4394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2540, line: 189, size: 96, elements: !4395)
!4395 = !{!4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4420}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4394, file: !2540, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4394, file: !2540, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4394, file: !2540, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4394, file: !2540, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4394, file: !2540, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4394, file: !2540, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4394, file: !2540, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4394, file: !2540, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4394, file: !2540, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4394, file: !2540, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4394, file: !2540, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4394, file: !2540, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4394, file: !2540, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4394, file: !2540, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4394, file: !2540, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4394, file: !2540, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4394, file: !2540, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4394, file: !2540, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4394, file: !2540, line: 260, baseType: !155, size: 8, offset: 24)
!4415 = !DIDerivedType(tag: DW_TAG_member, scope: !4394, file: !2540, line: 262, baseType: !4416, size: 32, offset: 32)
!4416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4394, file: !2540, line: 262, size: 32, elements: !4417)
!4417 = !{!4418, !4419}
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4416, file: !2540, line: 267, baseType: !103, size: 32)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4416, file: !2540, line: 289, baseType: !103, size: 32)
!4420 = !DIDerivedType(tag: DW_TAG_member, scope: !4394, file: !2540, line: 292, baseType: !4421, size: 32, offset: 64)
!4421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4394, file: !2540, line: 292, size: 32, elements: !4422)
!4422 = !{!4423, !4424}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4421, file: !2540, line: 297, baseType: !103, size: 32)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4421, file: !2540, line: 306, baseType: !103, size: 32)
!4425 = !DILocalVariable(name: "conv", scope: !4379, file: !2540, line: 1400, type: !4426)
!4426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4427)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 32)
!4428 = !DILocalVariable(name: "value", scope: !4379, file: !2540, line: 1401, type: !4429)
!4429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4430)
!4430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 32)
!4431 = !DILocalVariable(name: "sp", scope: !4379, file: !2540, line: 1402, type: !144)
!4432 = !DILocalVariable(name: "width", scope: !4379, file: !2540, line: 1403, type: !103)
!4433 = !DILocalVariable(name: "precision", scope: !4379, file: !2540, line: 1404, type: !103)
!4434 = !DILocalVariable(name: "bps", scope: !4379, file: !2540, line: 1405, type: !144)
!4435 = !DILocalVariable(name: "bpe", scope: !4379, file: !2540, line: 1406, type: !144)
!4436 = !DILocalVariable(name: "sign", scope: !4379, file: !2540, line: 1407, type: !146)
!4437 = !DILocalVariable(name: "arg", scope: !4438, file: !2540, line: 1432, type: !103)
!4438 = distinct !DILexicalBlock(scope: !4439, file: !2540, line: 1431, column: 24)
!4439 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1431, column: 7)
!4440 = !DILocalVariable(name: "specifier_cat", scope: !4379, file: !2540, line: 1468, type: !2539)
!4441 = !DILocalVariable(name: "length_mod", scope: !4379, file: !2540, line: 1470, type: !2547)
!4442 = !DILocalVariable(name: "rc", scope: !4443, file: !2540, line: 1575, type: !103)
!4443 = distinct !DILexicalBlock(scope: !4444, file: !2540, line: 1575, column: 4)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !2540, line: 1574, column: 43)
!4445 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1574, column: 7)
!4446 = !DILocalVariable(name: "rc", scope: !4447, file: !2540, line: 1584, type: !103)
!4447 = distinct !DILexicalBlock(scope: !4448, file: !2540, line: 1584, column: 4)
!4448 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1582, column: 28)
!4449 = !DILocalVariable(name: "len", scope: !4450, file: !2540, line: 1589, type: !204)
!4450 = distinct !DILexicalBlock(scope: !4448, file: !2540, line: 1586, column: 13)
!4451 = !DILocalVariable(name: "len", scope: !4452, file: !2540, line: 1641, type: !204)
!4452 = distinct !DILexicalBlock(scope: !4453, file: !2540, line: 1640, column: 24)
!4453 = distinct !DILexicalBlock(scope: !4448, file: !2540, line: 1640, column: 8)
!4454 = !DILocalVariable(name: "nj_len", scope: !4379, file: !2540, line: 1722, type: !204)
!4455 = !DILocalVariable(name: "pad_len", scope: !4379, file: !2540, line: 1723, type: !103)
!4456 = !DILocalVariable(name: "pad", scope: !4457, file: !2540, line: 1751, type: !146)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !2540, line: 1750, column: 26)
!4458 = distinct !DILexicalBlock(scope: !4459, file: !2540, line: 1750, column: 8)
!4459 = distinct !DILexicalBlock(scope: !4460, file: !2540, line: 1747, column: 18)
!4460 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1747, column: 7)
!4461 = !DILocalVariable(name: "rc", scope: !4462, file: !2540, line: 1758, type: !103)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !2540, line: 1758, column: 7)
!4463 = distinct !DILexicalBlock(scope: !4464, file: !2540, line: 1757, column: 21)
!4464 = distinct !DILexicalBlock(scope: !4465, file: !2540, line: 1757, column: 10)
!4465 = distinct !DILexicalBlock(scope: !4466, file: !2540, line: 1756, column: 26)
!4466 = distinct !DILexicalBlock(scope: !4457, file: !2540, line: 1756, column: 9)
!4467 = !DILocalVariable(name: "rc", scope: !4468, file: !2540, line: 1765, type: !103)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !2540, line: 1765, column: 6)
!4469 = distinct !DILexicalBlock(scope: !4457, file: !2540, line: 1764, column: 25)
!4470 = !DILocalVariable(name: "rc", scope: !4471, file: !2540, line: 1774, type: !103)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !2540, line: 1774, column: 4)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !2540, line: 1773, column: 18)
!4473 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1773, column: 7)
!4474 = !DILocalVariable(name: "rc", scope: !4475, file: !2540, line: 1819, type: !103)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !2540, line: 1819, column: 5)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !2540, line: 1818, column: 44)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !2540, line: 1818, column: 8)
!4478 = distinct !DILexicalBlock(scope: !4479, file: !2540, line: 1817, column: 10)
!4479 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1777, column: 7)
!4480 = !DILocalVariable(name: "rc", scope: !4481, file: !2540, line: 1823, type: !103)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !2540, line: 1823, column: 5)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !2540, line: 1822, column: 26)
!4483 = distinct !DILexicalBlock(scope: !4478, file: !2540, line: 1822, column: 8)
!4484 = !DILocalVariable(name: "rc", scope: !4485, file: !2540, line: 1828, type: !103)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !2540, line: 1828, column: 5)
!4486 = distinct !DILexicalBlock(scope: !4478, file: !2540, line: 1827, column: 26)
!4487 = !DILocalVariable(name: "rc", scope: !4488, file: !2540, line: 1831, type: !103)
!4488 = distinct !DILexicalBlock(scope: !4478, file: !2540, line: 1831, column: 4)
!4489 = !DILocalVariable(name: "rc", scope: !4490, file: !2540, line: 1836, type: !103)
!4490 = distinct !DILexicalBlock(scope: !4491, file: !2540, line: 1836, column: 4)
!4491 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1835, column: 21)
!4492 = !DILabel(scope: !4448, name: "prec_int_pad0", file: !2540, line: 1634)
!4493 = !DILocation(line: 0, scope: !4352)
!4494 = !DILocation(line: 1341, column: 2, scope: !4352)
!4495 = !DILocation(line: 1341, column: 7, scope: !4352)
!4496 = !DILocation(line: 1375, column: 2, scope: !4352)
!4497 = !DILocation(line: 1342, column: 9, scope: !4352)
!4498 = !DILocation(line: 1375, column: 9, scope: !4352)
!4499 = !DILocation(line: 1377, column: 4, scope: !4376)
!4500 = !DILocation(line: 0, scope: !4376)
!4501 = !DILocation(line: 1377, column: 4, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4376, file: !2540, line: 1377, column: 4)
!4503 = distinct !{!4503, !4496, !4504}
!4504 = !DILocation(line: 1839, column: 2, scope: !4352)
!4505 = !DILocation(line: 1392, column: 3, scope: !4379)
!4506 = !DILocation(line: 1395, column: 5, scope: !4379)
!4507 = !DILocation(line: 0, scope: !4379)
!4508 = !DILocation(line: 1409, column: 8, scope: !4379)
!4509 = !DILocation(line: 1414, column: 13, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1414, column: 7)
!4511 = !DILocation(line: 1414, column: 7, scope: !4379)
!4512 = !DILocation(line: 1415, column: 12, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4510, file: !2540, line: 1414, column: 25)
!4514 = !DILocation(line: 1417, column: 14, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4513, file: !2540, line: 1417, column: 8)
!4516 = !DILocation(line: 1417, column: 8, scope: !4513)
!4517 = !DILocation(line: 1418, column: 21, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4515, file: !2540, line: 1417, column: 19)
!4519 = !DILocation(line: 1419, column: 13, scope: !4518)
!4520 = !DILocation(line: 1420, column: 4, scope: !4518)
!4521 = !DILocation(line: 1421, column: 20, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4510, file: !2540, line: 1421, column: 14)
!4523 = !DILocation(line: 1421, column: 14, scope: !4510)
!4524 = !DILocation(line: 1431, column: 13, scope: !4439)
!4525 = !DILocation(line: 1431, column: 7, scope: !4379)
!4526 = !DILocation(line: 1432, column: 14, scope: !4438)
!4527 = !DILocation(line: 0, scope: !4438)
!4528 = !DILocation(line: 1434, column: 12, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4438, file: !2540, line: 1434, column: 8)
!4530 = !DILocation(line: 1434, column: 8, scope: !4438)
!4531 = !DILocation(line: 1435, column: 24, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4529, file: !2540, line: 1434, column: 17)
!4533 = !DILocation(line: 1436, column: 4, scope: !4532)
!4534 = !DILocation(line: 1439, column: 20, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4439, file: !2540, line: 1439, column: 14)
!4536 = !DILocation(line: 1439, column: 14, scope: !4439)
!4537 = !DILocation(line: 1469, column: 37, scope: !4379)
!4538 = !DILocation(line: 1448, column: 20, scope: !4379)
!4539 = !DILocation(line: 1449, column: 22, scope: !4379)
!4540 = !DILocation(line: 1471, column: 34, scope: !4379)
!4541 = !DILocation(line: 1478, column: 7, scope: !4379)
!4542 = !DILocation(line: 1479, column: 4, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !2540, line: 1478, column: 40)
!4544 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1478, column: 7)
!4545 = !DILocation(line: 1484, column: 19, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4543, file: !2540, line: 1479, column: 24)
!4547 = !DILocation(line: 1484, column: 17, scope: !4546)
!4548 = !DILocation(line: 1485, column: 5, scope: !4546)
!4549 = !DILocation(line: 1492, column: 20, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !2540, line: 1491, column: 12)
!4551 = distinct !DILexicalBlock(scope: !4546, file: !2540, line: 1487, column: 9)
!4552 = !DILocation(line: 1492, column: 18, scope: !4550)
!4553 = !DILocation(line: 1494, column: 5, scope: !4546)
!4554 = !DILocation(line: 1497, column: 23, scope: !4546)
!4555 = !DILocation(line: 1496, column: 17, scope: !4546)
!4556 = !DILocation(line: 1498, column: 5, scope: !4546)
!4557 = !DILocation(line: 1501, column: 23, scope: !4546)
!4558 = !DILocation(line: 1500, column: 17, scope: !4546)
!4559 = !DILocation(line: 1502, column: 5, scope: !4546)
!4560 = !DILocation(line: 1513, column: 23, scope: !4546)
!4561 = !DILocation(line: 1513, column: 6, scope: !4546)
!4562 = !DILocation(line: 1512, column: 17, scope: !4546)
!4563 = !DILocation(line: 1514, column: 5, scope: !4546)
!4564 = !DILocation(line: 0, scope: !4546)
!4565 = !DILocation(line: 1516, column: 8, scope: !4543)
!4566 = !DILocation(line: 1517, column: 19, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !2540, line: 1516, column: 33)
!4568 = distinct !DILexicalBlock(scope: !4543, file: !2540, line: 1516, column: 8)
!4569 = !DILocation(line: 1517, column: 17, scope: !4567)
!4570 = !DILocation(line: 1518, column: 4, scope: !4567)
!4571 = !DILocation(line: 1519, column: 19, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4573, file: !2540, line: 1518, column: 39)
!4573 = distinct !DILexicalBlock(scope: !4568, file: !2540, line: 1518, column: 15)
!4574 = !DILocation(line: 1519, column: 17, scope: !4572)
!4575 = !DILocation(line: 1520, column: 4, scope: !4572)
!4576 = !DILocation(line: 1522, column: 4, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !2540, line: 1521, column: 47)
!4578 = distinct !DILexicalBlock(scope: !4544, file: !2540, line: 1521, column: 14)
!4579 = !DILocation(line: 1527, column: 19, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4577, file: !2540, line: 1522, column: 24)
!4581 = !DILocation(line: 1527, column: 17, scope: !4580)
!4582 = !DILocation(line: 1528, column: 5, scope: !4580)
!4583 = !DILocation(line: 0, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4580, file: !2540, line: 1530, column: 9)
!4585 = !DILocation(line: 1540, column: 23, scope: !4580)
!4586 = !DILocation(line: 1539, column: 17, scope: !4580)
!4587 = !DILocation(line: 1542, column: 5, scope: !4580)
!4588 = !DILocation(line: 1545, column: 23, scope: !4580)
!4589 = !DILocation(line: 1544, column: 17, scope: !4580)
!4590 = !DILocation(line: 1547, column: 5, scope: !4580)
!4591 = !DILocation(line: 1551, column: 23, scope: !4580)
!4592 = !DILocation(line: 1551, column: 6, scope: !4580)
!4593 = !DILocation(line: 1550, column: 17, scope: !4580)
!4594 = !DILocation(line: 1552, column: 5, scope: !4580)
!4595 = !DILocation(line: 0, scope: !4580)
!4596 = !DILocation(line: 1554, column: 8, scope: !4577)
!4597 = !DILocation(line: 1555, column: 19, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !2540, line: 1554, column: 33)
!4599 = distinct !DILexicalBlock(scope: !4577, file: !2540, line: 1554, column: 8)
!4600 = !DILocation(line: 1555, column: 17, scope: !4598)
!4601 = !DILocation(line: 1556, column: 4, scope: !4598)
!4602 = !DILocation(line: 1557, column: 19, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !2540, line: 1556, column: 39)
!4604 = distinct !DILexicalBlock(scope: !4599, file: !2540, line: 1556, column: 15)
!4605 = !DILocation(line: 1557, column: 17, scope: !4603)
!4606 = !DILocation(line: 1558, column: 4, scope: !4603)
!4607 = !DILocation(line: 0, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !2540, line: 1560, column: 8)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !2540, line: 1559, column: 45)
!4610 = distinct !DILexicalBlock(scope: !4578, file: !2540, line: 1559, column: 14)
!4611 = !DILocation(line: 1566, column: 17, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4613, file: !2540, line: 1565, column: 46)
!4613 = distinct !DILexicalBlock(scope: !4610, file: !2540, line: 1565, column: 14)
!4614 = !DILocation(line: 1566, column: 15, scope: !4612)
!4615 = !DILocation(line: 1567, column: 3, scope: !4612)
!4616 = !DILocation(line: 1574, column: 21, scope: !4445)
!4617 = !DILocation(line: 1575, column: 4, scope: !4443)
!4618 = !DILocation(line: 0, scope: !4443)
!4619 = !DILocation(line: 1575, column: 4, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4443, file: !2540, line: 1575, column: 4)
!4621 = !DILocation(line: 1582, column: 17, scope: !4379)
!4622 = !DILocation(line: 1582, column: 3, scope: !4379)
!4623 = !DILocation(line: 1584, column: 4, scope: !4447)
!4624 = !DILocation(line: 0, scope: !4447)
!4625 = !DILocation(line: 1584, column: 4, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4447, file: !2540, line: 1584, column: 4)
!4627 = !DILocation(line: 1587, column: 31, scope: !4450)
!4628 = !DILocation(line: 1591, column: 18, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4450, file: !2540, line: 1591, column: 8)
!4630 = !DILocation(line: 1591, column: 8, scope: !4450)
!4631 = !DILocation(line: 1592, column: 11, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4629, file: !2540, line: 1591, column: 24)
!4633 = !DILocation(line: 0, scope: !4450)
!4634 = !DILocation(line: 1593, column: 4, scope: !4632)
!4635 = !DILocation(line: 1594, column: 11, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4629, file: !2540, line: 1593, column: 11)
!4637 = !DILocation(line: 1604, column: 51, scope: !4448)
!4638 = !DILocation(line: 1604, column: 13, scope: !4448)
!4639 = !DILocation(line: 1604, column: 11, scope: !4448)
!4640 = !DILocation(line: 1606, column: 4, scope: !4448)
!4641 = !DILocation(line: 1609, column: 14, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4448, file: !2540, line: 1609, column: 8)
!4643 = !DILocation(line: 1609, column: 8, scope: !4448)
!4644 = !DILocation(line: 1619, column: 18, scope: !4448)
!4645 = !DILocation(line: 1620, column: 13, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4448, file: !2540, line: 1620, column: 8)
!4647 = !DILocation(line: 1620, column: 8, scope: !4448)
!4648 = !DILocation(line: 1622, column: 36, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4646, file: !2540, line: 1620, column: 18)
!4650 = !DILocation(line: 1622, column: 17, scope: !4649)
!4651 = !DILocation(line: 1623, column: 4, scope: !4649)
!4652 = !DILocation(line: 1632, column: 29, scope: !4448)
!4653 = !DILocation(line: 1632, column: 10, scope: !4448)
!4654 = !DILocation(line: 1632, column: 4, scope: !4448)
!4655 = !DILocation(line: 1407, column: 8, scope: !4379)
!4656 = !DILocation(line: 0, scope: !4448)
!4657 = !DILocation(line: 1634, column: 3, scope: !4448)
!4658 = !DILocation(line: 1640, column: 18, scope: !4453)
!4659 = !DILocation(line: 1640, column: 8, scope: !4448)
!4660 = !DILocation(line: 1729, column: 13, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1729, column: 7)
!4662 = !DILocation(line: 1641, column: 22, scope: !4452)
!4663 = !DILocation(line: 0, scope: !4452)
!4664 = !DILocation(line: 1646, column: 21, scope: !4452)
!4665 = !DILocation(line: 1649, column: 13, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4452, file: !2540, line: 1649, column: 9)
!4667 = !DILocation(line: 1649, column: 9, scope: !4452)
!4668 = !DILocation(line: 1650, column: 35, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4666, file: !2540, line: 1649, column: 34)
!4670 = !DILocation(line: 1650, column: 23, scope: !4669)
!4671 = !DILocation(line: 1651, column: 5, scope: !4669)
!4672 = !DILocation(line: 1660, column: 15, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4448, file: !2540, line: 1660, column: 8)
!4674 = !DILocation(line: 1660, column: 19, scope: !4673)
!4675 = !DILocation(line: 1660, column: 8, scope: !4448)
!4676 = !DILocation(line: 1661, column: 23, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4673, file: !2540, line: 1660, column: 28)
!4678 = !DILocation(line: 1661, column: 11, scope: !4677)
!4679 = !DILocation(line: 1665, column: 22, scope: !4677)
!4680 = !DILocation(line: 1666, column: 21, scope: !4677)
!4681 = !DILocation(line: 1668, column: 5, scope: !4677)
!4682 = !DILocation(line: 1677, column: 30, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !2540, line: 1676, column: 49)
!4684 = distinct !DILexicalBlock(scope: !4448, file: !2540, line: 1676, column: 8)
!4685 = !DILocation(line: 1677, column: 5, scope: !4683)
!4686 = !DILocation(line: 1680, column: 4, scope: !4448)
!4687 = !DILocation(line: 0, scope: !4629)
!4688 = !DILocation(line: 1597, column: 14, scope: !4450)
!4689 = !DILocation(line: 1699, column: 11, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1699, column: 7)
!4691 = !DILocation(line: 1699, column: 7, scope: !4379)
!4692 = !DILocation(line: 1725, column: 7, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1725, column: 7)
!4694 = !DILocation(line: 1725, column: 12, scope: !4693)
!4695 = !DILocation(line: 1747, column: 13, scope: !4460)
!4696 = !DILocation(line: 1747, column: 7, scope: !4379)
!4697 = !DILocation(line: 1722, column: 24, scope: !4379)
!4698 = !DILocation(line: 1725, column: 7, scope: !4379)
!4699 = !DILocation(line: 1729, column: 7, scope: !4379)
!4700 = !DILocation(line: 1736, column: 13, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4379, file: !2540, line: 1736, column: 7)
!4702 = !DILocation(line: 1735, column: 19, scope: !4379)
!4703 = !DILocation(line: 1736, column: 7, scope: !4379)
!4704 = !DILocation(line: 1748, column: 10, scope: !4459)
!4705 = !DILocation(line: 1750, column: 15, scope: !4458)
!4706 = !DILocation(line: 1750, column: 8, scope: !4459)
!4707 = !DILocation(line: 0, scope: !4457)
!4708 = !DILocation(line: 1756, column: 15, scope: !4466)
!4709 = !DILocation(line: 1756, column: 9, scope: !4457)
!4710 = !DILocation(line: 1758, column: 7, scope: !4462)
!4711 = !DILocation(line: 0, scope: !4462)
!4712 = !DILocation(line: 1758, column: 7, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4462, file: !2540, line: 1758, column: 7)
!4714 = !DILocation(line: 1764, column: 5, scope: !4457)
!4715 = !DILocation(line: 0, scope: !4459)
!4716 = !DILocation(line: 1764, column: 20, scope: !4457)
!4717 = !DILocation(line: 1764, column: 17, scope: !4457)
!4718 = !DILocation(line: 1765, column: 6, scope: !4468)
!4719 = !DILocation(line: 0, scope: !4468)
!4720 = !DILocation(line: 1765, column: 6, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4468, file: !2540, line: 1765, column: 6)
!4722 = distinct !{!4722, !4714, !4723}
!4723 = !DILocation(line: 1766, column: 5, scope: !4457)
!4724 = !DILocation(line: 1773, column: 12, scope: !4473)
!4725 = !DILocation(line: 1773, column: 7, scope: !4379)
!4726 = !DILocation(line: 1773, column: 7, scope: !4473)
!4727 = !DILocation(line: 1774, column: 4, scope: !4471)
!4728 = !DILocation(line: 0, scope: !4471)
!4729 = !DILocation(line: 1774, column: 4, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4471, file: !2540, line: 1774, column: 4)
!4731 = !DILocation(line: 1818, column: 8, scope: !4477)
!4732 = !DILocation(line: 1818, column: 27, scope: !4477)
!4733 = !DILocation(line: 1818, column: 25, scope: !4477)
!4734 = !DILocation(line: 1818, column: 8, scope: !4478)
!4735 = !DILocation(line: 1819, column: 5, scope: !4475)
!4736 = !DILocation(line: 0, scope: !4475)
!4737 = !DILocation(line: 1819, column: 5, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4475, file: !2540, line: 1819, column: 5)
!4739 = !DILocation(line: 1822, column: 14, scope: !4483)
!4740 = !DILocation(line: 1822, column: 8, scope: !4478)
!4741 = !DILocation(line: 1823, column: 5, scope: !4481)
!4742 = !DILocation(line: 0, scope: !4481)
!4743 = !DILocation(line: 1823, column: 5, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4481, file: !2540, line: 1823, column: 5)
!4745 = !DILocation(line: 1826, column: 20, scope: !4478)
!4746 = !DILocation(line: 1827, column: 4, scope: !4478)
!4747 = !DILocation(line: 0, scope: !4478)
!4748 = !DILocation(line: 1827, column: 21, scope: !4478)
!4749 = !DILocation(line: 1827, column: 18, scope: !4478)
!4750 = !DILocation(line: 1828, column: 5, scope: !4485)
!4751 = !DILocation(line: 0, scope: !4485)
!4752 = !DILocation(line: 1828, column: 5, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4485, file: !2540, line: 1828, column: 5)
!4754 = distinct !{!4754, !4746, !4755}
!4755 = !DILocation(line: 1829, column: 4, scope: !4478)
!4756 = !DILocation(line: 1831, column: 4, scope: !4488)
!4757 = !DILocation(line: 0, scope: !4488)
!4758 = !DILocation(line: 1831, column: 4, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4488, file: !2540, line: 1831, column: 4)
!4760 = !DILocation(line: 1835, column: 16, scope: !4379)
!4761 = !DILocation(line: 1835, column: 3, scope: !4379)
!4762 = !DILocation(line: 1836, column: 4, scope: !4490)
!4763 = !DILocation(line: 0, scope: !4490)
!4764 = !DILocation(line: 1836, column: 4, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4490, file: !2540, line: 1836, column: 4)
!4766 = !DILocation(line: 1837, column: 4, scope: !4491)
!4767 = distinct !{!4767, !4761, !4768}
!4768 = !DILocation(line: 1838, column: 3, scope: !4379)
!4769 = !DILocation(line: 1844, column: 1, scope: !4352)
!4770 = distinct !DISubprogram(name: "extract_conversion", scope: !2540, file: !2540, line: 642, type: !4771, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !4773)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{!144, !4427, !144}
!4773 = !{!4774, !4775}
!4774 = !DILocalVariable(name: "conv", arg: 1, scope: !4770, file: !2540, line: 642, type: !4427)
!4775 = !DILocalVariable(name: "sp", arg: 2, scope: !4770, file: !2540, line: 643, type: !144)
!4776 = !DILocation(line: 0, scope: !4770)
!4777 = !DILocation(line: 645, column: 10, scope: !4770)
!4778 = !DILocation(line: 653, column: 2, scope: !4770)
!4779 = !DILocation(line: 654, column: 6, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4770, file: !2540, line: 654, column: 6)
!4781 = !DILocation(line: 654, column: 10, scope: !4780)
!4782 = !DILocation(line: 654, column: 6, scope: !4770)
!4783 = !DILocation(line: 655, column: 24, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4780, file: !2540, line: 654, column: 18)
!4785 = !DILocation(line: 655, column: 19, scope: !4784)
!4786 = !DILocation(line: 656, column: 3, scope: !4784)
!4787 = !DILocation(line: 659, column: 7, scope: !4770)
!4788 = !DILocation(line: 660, column: 7, scope: !4770)
!4789 = !DILocation(line: 661, column: 7, scope: !4770)
!4790 = !DILocation(line: 662, column: 7, scope: !4770)
!4791 = !DILocation(line: 663, column: 7, scope: !4770)
!4792 = !DILocation(line: 665, column: 2, scope: !4770)
!4793 = !DILocation(line: 666, column: 1, scope: !4770)
!4794 = distinct !DISubprogram(name: "outs", scope: !2540, file: !2540, line: 1319, type: !4795, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !4797)
!4795 = !DISubroutineType(types: !4796)
!4796 = !{!103, !3341, !102, !144, !144}
!4797 = !{!4798, !4799, !4800, !4801, !4802, !4803}
!4798 = !DILocalVariable(name: "out", arg: 1, scope: !4794, file: !2540, line: 1319, type: !3341)
!4799 = !DILocalVariable(name: "ctx", arg: 2, scope: !4794, file: !2540, line: 1320, type: !102)
!4800 = !DILocalVariable(name: "sp", arg: 3, scope: !4794, file: !2540, line: 1321, type: !144)
!4801 = !DILocalVariable(name: "ep", arg: 4, scope: !4794, file: !2540, line: 1322, type: !144)
!4802 = !DILocalVariable(name: "count", scope: !4794, file: !2540, line: 1324, type: !204)
!4803 = !DILocalVariable(name: "rc", scope: !4804, file: !2540, line: 1327, type: !103)
!4804 = distinct !DILexicalBlock(scope: !4794, file: !2540, line: 1326, column: 45)
!4805 = !DILocation(line: 0, scope: !4794)
!4806 = !DILocation(line: 1326, column: 2, scope: !4794)
!4807 = !DILocation(line: 1324, column: 9, scope: !4794)
!4808 = !DILocation(line: 1326, column: 13, scope: !4794)
!4809 = !DILocation(line: 1326, column: 19, scope: !4794)
!4810 = !DILocation(line: 1327, column: 21, scope: !4804)
!4811 = !DILocation(line: 1326, column: 36, scope: !4794)
!4812 = !DILocation(line: 1326, column: 39, scope: !4794)
!4813 = !DILocation(line: 1327, column: 24, scope: !4804)
!4814 = !DILocation(line: 1327, column: 16, scope: !4804)
!4815 = !DILocation(line: 1327, column: 12, scope: !4804)
!4816 = !DILocation(line: 0, scope: !4804)
!4817 = !DILocation(line: 1329, column: 10, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4804, file: !2540, line: 1329, column: 7)
!4819 = !DILocation(line: 1329, column: 7, scope: !4804)
!4820 = distinct !{!4820, !4806, !4821}
!4821 = !DILocation(line: 1333, column: 2, scope: !4794)
!4822 = !DILocation(line: 1336, column: 1, scope: !4794)
!4823 = distinct !DISubprogram(name: "encode_uint", scope: !2540, file: !2540, line: 788, type: !4824, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !4826)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{!344, !2562, !4427, !344, !144}
!4826 = !{!4827, !4828, !4829, !4830, !4831, !4832, !4834, !4835}
!4827 = !DILocalVariable(name: "value", arg: 1, scope: !4823, file: !2540, line: 788, type: !2562)
!4828 = !DILocalVariable(name: "conv", arg: 2, scope: !4823, file: !2540, line: 789, type: !4427)
!4829 = !DILocalVariable(name: "bps", arg: 3, scope: !4823, file: !2540, line: 790, type: !344)
!4830 = !DILocalVariable(name: "bpe", arg: 4, scope: !4823, file: !2540, line: 791, type: !144)
!4831 = !DILocalVariable(name: "upcase", scope: !4823, file: !2540, line: 793, type: !157)
!4832 = !DILocalVariable(name: "radix", scope: !4823, file: !2540, line: 794, type: !4833)
!4833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4834 = !DILocalVariable(name: "bp", scope: !4823, file: !2540, line: 795, type: !344)
!4835 = !DILocalVariable(name: "lsv", scope: !4836, file: !2540, line: 798, type: !32)
!4836 = distinct !DILexicalBlock(scope: !4823, file: !2540, line: 797, column: 5)
!4837 = !DILocation(line: 0, scope: !4823)
!4838 = !DILocation(line: 793, column: 35, scope: !4823)
!4839 = !DILocation(line: 793, column: 24, scope: !4823)
!4840 = !DILocation(line: 793, column: 16, scope: !4823)
!4841 = !DILocation(line: 794, column: 29, scope: !4823)
!4842 = !DILocation(line: 795, column: 24, scope: !4823)
!4843 = !DILocation(line: 795, column: 17, scope: !4823)
!4844 = !DILocation(line: 797, column: 2, scope: !4823)
!4845 = !DILocation(line: 802, column: 9, scope: !4836)
!4846 = !DILocation(line: 798, column: 22, scope: !4836)
!4847 = !DILocation(line: 0, scope: !4836)
!4848 = !DILocation(line: 800, column: 16, scope: !4836)
!4849 = !DILocation(line: 800, column: 11, scope: !4836)
!4850 = !DILocation(line: 800, column: 4, scope: !4836)
!4851 = !DILocation(line: 800, column: 9, scope: !4836)
!4852 = !DILocation(line: 803, column: 18, scope: !4823)
!4853 = !DILocation(line: 803, column: 24, scope: !4823)
!4854 = !DILocation(line: 803, column: 2, scope: !4836)
!4855 = distinct !{!4855, !4844, !4856}
!4856 = !DILocation(line: 803, column: 37, scope: !4823)
!4857 = !DILocation(line: 808, column: 12, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4823, file: !2540, line: 808, column: 6)
!4859 = !DILocation(line: 808, column: 6, scope: !4823)
!4860 = !DILocation(line: 809, column: 7, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4858, file: !2540, line: 808, column: 23)
!4862 = !DILocation(line: 813, column: 3, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !2540, line: 811, column: 27)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !2540, line: 811, column: 14)
!4865 = distinct !DILexicalBlock(scope: !4861, file: !2540, line: 809, column: 7)
!4866 = !DILocation(line: 0, scope: !4865)
!4867 = !DILocation(line: 818, column: 2, scope: !4823)
!4868 = distinct !DISubprogram(name: "store_count", scope: !2540, file: !2540, line: 1280, type: !4869, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !4873)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{null, !4871, !102, !103}
!4871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4872, size: 32)
!4872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4394)
!4873 = !{!4874, !4875, !4876}
!4874 = !DILocalVariable(name: "conv", arg: 1, scope: !4868, file: !2540, line: 1280, type: !4871)
!4875 = !DILocalVariable(name: "dp", arg: 2, scope: !4868, file: !2540, line: 1281, type: !102)
!4876 = !DILocalVariable(name: "count", arg: 3, scope: !4868, file: !2540, line: 1282, type: !103)
!4877 = !DILocation(line: 0, scope: !4868)
!4878 = !DILocation(line: 1284, column: 38, scope: !4868)
!4879 = !DILocation(line: 1284, column: 2, scope: !4868)
!4880 = !DILocation(line: 1286, column: 4, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4868, file: !2540, line: 1284, column: 50)
!4882 = !DILocation(line: 1286, column: 14, scope: !4881)
!4883 = !DILocation(line: 1287, column: 3, scope: !4881)
!4884 = !DILocation(line: 1289, column: 24, scope: !4881)
!4885 = !DILocation(line: 1289, column: 22, scope: !4881)
!4886 = !DILocation(line: 1290, column: 3, scope: !4881)
!4887 = !DILocation(line: 1292, column: 18, scope: !4881)
!4888 = !DILocation(line: 1292, column: 4, scope: !4881)
!4889 = !DILocation(line: 1292, column: 16, scope: !4881)
!4890 = !DILocation(line: 1293, column: 3, scope: !4881)
!4891 = !DILocation(line: 1295, column: 4, scope: !4881)
!4892 = !DILocation(line: 1295, column: 15, scope: !4881)
!4893 = !DILocation(line: 1296, column: 3, scope: !4881)
!4894 = !DILocation(line: 1298, column: 22, scope: !4881)
!4895 = !DILocation(line: 1298, column: 4, scope: !4881)
!4896 = !DILocation(line: 1298, column: 20, scope: !4881)
!4897 = !DILocation(line: 1299, column: 3, scope: !4881)
!4898 = !DILocation(line: 1301, column: 21, scope: !4881)
!4899 = !DILocation(line: 1301, column: 4, scope: !4881)
!4900 = !DILocation(line: 1301, column: 19, scope: !4881)
!4901 = !DILocation(line: 1302, column: 3, scope: !4881)
!4902 = !DILocation(line: 1304, column: 4, scope: !4881)
!4903 = !DILocation(line: 1304, column: 17, scope: !4881)
!4904 = !DILocation(line: 1305, column: 3, scope: !4881)
!4905 = !DILocation(line: 1307, column: 4, scope: !4881)
!4906 = !DILocation(line: 1307, column: 20, scope: !4881)
!4907 = !DILocation(line: 1308, column: 3, scope: !4881)
!4908 = !DILocation(line: 1316, column: 1, scope: !4868)
!4909 = distinct !DISubprogram(name: "isupper", scope: !4910, file: !4910, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !4911)
!4910 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4911 = !{!4912}
!4912 = !DILocalVariable(name: "a", arg: 1, scope: !4909, file: !4910, line: 16, type: !103)
!4913 = !DILocation(line: 0, scope: !4909)
!4914 = !DILocation(line: 18, column: 29, scope: !4909)
!4915 = !DILocation(line: 18, column: 45, scope: !4909)
!4916 = !DILocation(line: 18, column: 2, scope: !4909)
!4917 = distinct !DISubprogram(name: "conversion_radix", scope: !2540, file: !2540, line: 761, type: !4918, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !4920)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{!204, !146}
!4920 = !{!4921}
!4921 = !DILocalVariable(name: "specifier", arg: 1, scope: !4917, file: !2540, line: 761, type: !146)
!4922 = !DILocation(line: 0, scope: !4917)
!4923 = !DILocation(line: 763, column: 2, scope: !4917)
!4924 = !DILocation(line: 770, column: 3, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4917, file: !2540, line: 763, column: 21)
!4926 = !DILocation(line: 774, column: 3, scope: !4925)
!4927 = !DILocation(line: 0, scope: !4925)
!4928 = !DILocation(line: 776, column: 1, scope: !4917)
!4929 = distinct !DISubprogram(name: "extract_flags", scope: !2540, file: !2540, line: 339, type: !4771, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !4930)
!4930 = !{!4931, !4932, !4933}
!4931 = !DILocalVariable(name: "conv", arg: 1, scope: !4929, file: !2540, line: 339, type: !4427)
!4932 = !DILocalVariable(name: "sp", arg: 2, scope: !4929, file: !2540, line: 340, type: !144)
!4933 = !DILocalVariable(name: "loop", scope: !4929, file: !2540, line: 342, type: !157)
!4934 = !DILocation(line: 0, scope: !4929)
!4935 = !DILocation(line: 344, column: 2, scope: !4929)
!4936 = !DILocation(line: 345, column: 11, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4929, file: !2540, line: 344, column: 5)
!4938 = !DILocation(line: 345, column: 3, scope: !4937)
!4939 = !DILocation(line: 351, column: 4, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4937, file: !2540, line: 345, column: 16)
!4941 = !DILocation(line: 354, column: 4, scope: !4940)
!4942 = !DILocation(line: 357, column: 4, scope: !4940)
!4943 = !DILocation(line: 360, column: 4, scope: !4940)
!4944 = !DILocation(line: 0, scope: !4940)
!4945 = !DILocation(line: 370, column: 12, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4929, file: !2540, line: 370, column: 6)
!4947 = !DILocation(line: 370, column: 22, scope: !4946)
!4948 = !DILocation(line: 371, column: 19, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4946, file: !2540, line: 370, column: 42)
!4950 = !DILocation(line: 372, column: 2, scope: !4949)
!4951 = !DILocation(line: 376, column: 2, scope: !4929)
!4952 = distinct !DISubprogram(name: "extract_width", scope: !2540, file: !2540, line: 388, type: !4771, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !4953)
!4953 = !{!4954, !4955, !4956, !4957}
!4954 = !DILocalVariable(name: "conv", arg: 1, scope: !4952, file: !2540, line: 388, type: !4427)
!4955 = !DILocalVariable(name: "sp", arg: 2, scope: !4952, file: !2540, line: 389, type: !144)
!4956 = !DILocalVariable(name: "wp", scope: !4952, file: !2540, line: 398, type: !144)
!4957 = !DILocalVariable(name: "width", scope: !4952, file: !2540, line: 399, type: !204)
!4958 = !DILocation(line: 0, scope: !4952)
!4959 = !DILocation(line: 391, column: 8, scope: !4952)
!4960 = !DILocation(line: 391, column: 22, scope: !4952)
!4961 = !DILocation(line: 393, column: 6, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4952, file: !2540, line: 393, column: 6)
!4963 = !DILocation(line: 393, column: 10, scope: !4962)
!4964 = !DILocation(line: 393, column: 6, scope: !4952)
!4965 = !DILocation(line: 394, column: 20, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4962, file: !2540, line: 393, column: 18)
!4967 = !DILocation(line: 395, column: 10, scope: !4966)
!4968 = !DILocation(line: 395, column: 3, scope: !4966)
!4969 = !DILocation(line: 399, column: 17, scope: !4952)
!4970 = !DILocation(line: 401, column: 6, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4952, file: !2540, line: 401, column: 6)
!4972 = !DILocation(line: 401, column: 9, scope: !4971)
!4973 = !DILocation(line: 401, column: 6, scope: !4952)
!4974 = !DILocation(line: 402, column: 23, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4971, file: !2540, line: 401, column: 16)
!4976 = !DILocation(line: 403, column: 9, scope: !4975)
!4977 = !DILocation(line: 403, column: 21, scope: !4975)
!4978 = !DILocation(line: 405, column: 11, scope: !4975)
!4979 = !DILocation(line: 404, column: 21, scope: !4975)
!4980 = !DILocation(line: 406, column: 2, scope: !4975)
!4981 = !DILocation(line: 409, column: 1, scope: !4952)
!4982 = distinct !DISubprogram(name: "extract_prec", scope: !2540, file: !2540, line: 420, type: !4771, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !4983)
!4983 = !{!4984, !4985, !4986}
!4984 = !DILocalVariable(name: "conv", arg: 1, scope: !4982, file: !2540, line: 420, type: !4427)
!4985 = !DILocalVariable(name: "sp", arg: 2, scope: !4982, file: !2540, line: 421, type: !144)
!4986 = !DILocalVariable(name: "prec", scope: !4982, file: !2540, line: 435, type: !204)
!4987 = !DILocation(line: 0, scope: !4982)
!4988 = !DILocation(line: 423, column: 24, scope: !4982)
!4989 = !DILocation(line: 423, column: 28, scope: !4982)
!4990 = !DILocation(line: 423, column: 8, scope: !4982)
!4991 = !DILocation(line: 423, column: 21, scope: !4982)
!4992 = !DILocation(line: 425, column: 6, scope: !4982)
!4993 = !DILocation(line: 428, column: 2, scope: !4982)
!4994 = !DILocation(line: 430, column: 6, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4982, file: !2540, line: 430, column: 6)
!4996 = !DILocation(line: 430, column: 10, scope: !4995)
!4997 = !DILocation(line: 430, column: 6, scope: !4982)
!4998 = !DILocation(line: 431, column: 19, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4995, file: !2540, line: 430, column: 18)
!5000 = !DILocation(line: 432, column: 10, scope: !4999)
!5001 = !DILocation(line: 432, column: 3, scope: !4999)
!5002 = !DILocation(line: 435, column: 16, scope: !4982)
!5003 = !DILocation(line: 437, column: 8, scope: !4982)
!5004 = !DILocation(line: 437, column: 19, scope: !4982)
!5005 = !DILocation(line: 439, column: 10, scope: !4982)
!5006 = !DILocation(line: 438, column: 20, scope: !4982)
!5007 = !DILocation(line: 441, column: 9, scope: !4982)
!5008 = !DILocation(line: 442, column: 1, scope: !4982)
!5009 = distinct !DISubprogram(name: "extract_length", scope: !2540, file: !2540, line: 453, type: !4771, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !5010)
!5010 = !{!5011, !5012}
!5011 = !DILocalVariable(name: "conv", arg: 1, scope: !5009, file: !2540, line: 453, type: !4427)
!5012 = !DILocalVariable(name: "sp", arg: 2, scope: !5009, file: !2540, line: 454, type: !144)
!5013 = !DILocation(line: 0, scope: !5009)
!5014 = !DILocation(line: 456, column: 10, scope: !5009)
!5015 = !DILocation(line: 456, column: 2, scope: !5009)
!5016 = !DILocation(line: 458, column: 8, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5018, file: !2540, line: 458, column: 7)
!5018 = distinct !DILexicalBlock(scope: !5009, file: !2540, line: 456, column: 15)
!5019 = !DILocation(line: 458, column: 7, scope: !5017)
!5020 = !DILocation(line: 458, column: 13, scope: !5017)
!5021 = !DILocation(line: 0, scope: !5017)
!5022 = !DILocation(line: 458, column: 7, scope: !5018)
!5023 = !DILocation(line: 459, column: 21, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5017, file: !2540, line: 458, column: 21)
!5025 = !DILocation(line: 460, column: 4, scope: !5024)
!5026 = !DILocation(line: 461, column: 3, scope: !5024)
!5027 = !DILocation(line: 462, column: 21, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5017, file: !2540, line: 461, column: 10)
!5029 = !DILocation(line: 466, column: 8, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5018, file: !2540, line: 466, column: 7)
!5031 = !DILocation(line: 466, column: 7, scope: !5030)
!5032 = !DILocation(line: 466, column: 13, scope: !5030)
!5033 = !DILocation(line: 0, scope: !5030)
!5034 = !DILocation(line: 466, column: 7, scope: !5018)
!5035 = !DILocation(line: 467, column: 21, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5030, file: !2540, line: 466, column: 21)
!5037 = !DILocation(line: 468, column: 4, scope: !5036)
!5038 = !DILocation(line: 469, column: 3, scope: !5036)
!5039 = !DILocation(line: 470, column: 21, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5030, file: !2540, line: 469, column: 10)
!5041 = !DILocation(line: 474, column: 9, scope: !5018)
!5042 = !DILocation(line: 474, column: 20, scope: !5018)
!5043 = !DILocation(line: 475, column: 3, scope: !5018)
!5044 = !DILocation(line: 476, column: 3, scope: !5018)
!5045 = !DILocation(line: 478, column: 9, scope: !5018)
!5046 = !DILocation(line: 478, column: 20, scope: !5018)
!5047 = !DILocation(line: 479, column: 3, scope: !5018)
!5048 = !DILocation(line: 480, column: 3, scope: !5018)
!5049 = !DILocation(line: 482, column: 9, scope: !5018)
!5050 = !DILocation(line: 482, column: 20, scope: !5018)
!5051 = !DILocation(line: 483, column: 3, scope: !5018)
!5052 = !DILocation(line: 484, column: 3, scope: !5018)
!5053 = !DILocation(line: 486, column: 9, scope: !5018)
!5054 = !DILocation(line: 486, column: 20, scope: !5018)
!5055 = !DILocation(line: 487, column: 3, scope: !5018)
!5056 = !DILocation(line: 492, column: 21, scope: !5018)
!5057 = !DILocation(line: 493, column: 3, scope: !5018)
!5058 = !DILocation(line: 495, column: 9, scope: !5018)
!5059 = !DILocation(line: 495, column: 20, scope: !5018)
!5060 = !DILocation(line: 496, column: 3, scope: !5018)
!5061 = !DILocation(line: 498, column: 2, scope: !5009)
!5062 = distinct !DISubprogram(name: "extract_specifier", scope: !2540, file: !2540, line: 513, type: !4771, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !5063)
!5063 = !{!5064, !5065, !5066, !5067}
!5064 = !DILocalVariable(name: "conv", arg: 1, scope: !5062, file: !2540, line: 513, type: !4427)
!5065 = !DILocalVariable(name: "sp", arg: 2, scope: !5062, file: !2540, line: 514, type: !144)
!5066 = !DILocalVariable(name: "unsupported", scope: !5062, file: !2540, line: 516, type: !157)
!5067 = !DILabel(scope: !5068, name: "int_conv", file: !2540, line: 526)
!5068 = distinct !DILexicalBlock(scope: !5062, file: !2540, line: 520, column: 27)
!5069 = !DILocation(line: 0, scope: !5062)
!5070 = !DILocation(line: 518, column: 20, scope: !5062)
!5071 = !DILocation(line: 518, column: 8, scope: !5062)
!5072 = !DILocation(line: 518, column: 18, scope: !5062)
!5073 = !DILocation(line: 520, column: 2, scope: !5062)
!5074 = !DILocation(line: 525, column: 3, scope: !5068)
!5075 = !DILocation(line: 0, scope: !5068)
!5076 = !DILocation(line: 526, column: 1, scope: !5068)
!5077 = !DILocation(line: 528, column: 24, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5068, file: !2540, line: 528, column: 7)
!5079 = !DILocation(line: 528, column: 7, scope: !5068)
!5080 = !DILocation(line: 535, column: 23, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5068, file: !2540, line: 535, column: 7)
!5082 = !DILocation(line: 535, column: 7, scope: !5068)
!5083 = !DILocation(line: 536, column: 36, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5081, file: !2540, line: 535, column: 31)
!5085 = !DILocation(line: 537, column: 3, scope: !5084)
!5086 = !DILocation(line: 570, column: 9, scope: !5068)
!5087 = !DILocation(line: 570, column: 23, scope: !5068)
!5088 = !DILocation(line: 575, column: 4, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !2540, line: 573, column: 48)
!5090 = distinct !DILexicalBlock(scope: !5068, file: !2540, line: 573, column: 7)
!5091 = !DILocation(line: 603, column: 9, scope: !5068)
!5092 = !DILocation(line: 603, column: 23, scope: !5068)
!5093 = !DILocation(line: 605, column: 24, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5068, file: !2540, line: 605, column: 7)
!5095 = !DILocation(line: 605, column: 7, scope: !5068)
!5096 = !DILocation(line: 612, column: 9, scope: !5068)
!5097 = !DILocation(line: 612, column: 23, scope: !5068)
!5098 = !DILocation(line: 619, column: 24, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5068, file: !2540, line: 619, column: 7)
!5100 = !DILocation(line: 619, column: 7, scope: !5068)
!5101 = !DILocation(line: 625, column: 9, scope: !5068)
!5102 = !DILocation(line: 625, column: 17, scope: !5068)
!5103 = !DILocation(line: 626, column: 3, scope: !5068)
!5104 = !DILocation(line: 629, column: 20, scope: !5062)
!5105 = !DILocation(line: 629, column: 8, scope: !5062)
!5106 = !DILocation(line: 518, column: 23, scope: !5062)
!5107 = !DILocation(line: 631, column: 2, scope: !5062)
!5108 = distinct !DISubprogram(name: "extract_decimal", scope: !2540, file: !2540, line: 318, type: !5109, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !5112)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!204, !5111}
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!5112 = !{!5113, !5114, !5115}
!5113 = !DILocalVariable(name: "str", arg: 1, scope: !5108, file: !2540, line: 318, type: !5111)
!5114 = !DILocalVariable(name: "sp", scope: !5108, file: !2540, line: 320, type: !144)
!5115 = !DILocalVariable(name: "val", scope: !5108, file: !2540, line: 321, type: !204)
!5116 = !DILocation(line: 0, scope: !5108)
!5117 = !DILocation(line: 320, column: 19, scope: !5108)
!5118 = !DILocation(line: 323, column: 37, scope: !5108)
!5119 = !DILocation(line: 323, column: 17, scope: !5108)
!5120 = !DILocation(line: 323, column: 9, scope: !5108)
!5121 = !DILocation(line: 323, column: 2, scope: !5108)
!5122 = !DILocation(line: 324, column: 13, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5108, file: !2540, line: 323, column: 43)
!5124 = !DILocation(line: 324, column: 24, scope: !5123)
!5125 = !DILocation(line: 324, column: 19, scope: !5123)
!5126 = !DILocation(line: 324, column: 27, scope: !5123)
!5127 = distinct !{!5127, !5121, !5128}
!5128 = !DILocation(line: 325, column: 2, scope: !5108)
!5129 = !DILocation(line: 326, column: 7, scope: !5108)
!5130 = !DILocation(line: 327, column: 2, scope: !5108)
!5131 = distinct !DISubprogram(name: "isdigit", scope: !4910, file: !4910, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !5132)
!5132 = !{!5133}
!5133 = !DILocalVariable(name: "a", arg: 1, scope: !5131, file: !4910, line: 43, type: !103)
!5134 = !DILocation(line: 0, scope: !5131)
!5135 = !DILocation(line: 45, column: 29, scope: !5131)
!5136 = !DILocation(line: 45, column: 45, scope: !5131)
!5137 = !DILocation(line: 45, column: 2, scope: !5131)
!5138 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5139, file: !5139, line: 9, type: !3157, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !317)
!5139 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!5140 = !DILocation(line: 11, column: 1, scope: !5138)
!5141 = !{i64 2147560977, i64 2147561020, i64 2147561060}
!5142 = !DILocation(line: 12, column: 1, scope: !5138)
!5143 = !{i64 2147565204, i64 2147565247, i64 2147565287}
!5144 = !DILocation(line: 13, column: 1, scope: !5138)
!5145 = !{i64 2147565413, i64 2147565456, i64 2147565496}
!5146 = !DILocation(line: 14, column: 1, scope: !5138)
!5147 = !{i64 2147565630, i64 2147565673, i64 2147565713}
!5148 = !DILocation(line: 15, column: 1, scope: !5138)
!5149 = !{i64 2147565799, i64 2147565842, i64 2147565882}
!5150 = !DILocation(line: 16, column: 1, scope: !5138)
!5151 = !{i64 2147565962, i64 2147566005, i64 2147566045}
!5152 = !DILocation(line: 17, column: 1, scope: !5138)
!5153 = !{i64 2147566146, i64 2147566189, i64 2147566229}
!5154 = !DILocation(line: 18, column: 1, scope: !5138)
!5155 = !{i64 2147566325, i64 2147566368, i64 2147566408}
!5156 = !DILocation(line: 19, column: 1, scope: !5138)
!5157 = !{i64 2147566567, i64 2147566610, i64 2147566650}
!5158 = !DILocation(line: 20, column: 1, scope: !5138)
!5159 = !{i64 2147566802, i64 2147566845, i64 2147566885}
!5160 = !DILocation(line: 21, column: 1, scope: !5138)
!5161 = !{i64 2147566988, i64 2147567031, i64 2147567071}
!5162 = !DILocation(line: 22, column: 1, scope: !5138)
!5163 = !{i64 2147567204, i64 2147567247, i64 2147567287}
!5164 = !DILocation(line: 23, column: 1, scope: !5138)
!5165 = !{i64 2147567407, i64 2147567450, i64 2147567490}
!5166 = !DILocation(line: 24, column: 1, scope: !5138)
!5167 = !{i64 2147567610, i64 2147567653, i64 2147567693}
!5168 = !DILocation(line: 25, column: 1, scope: !5138)
!5169 = !{i64 2147567785, i64 2147567828, i64 2147567868}
!5170 = !DILocation(line: 26, column: 1, scope: !5138)
!5171 = !{i64 2147567993, i64 2147568036, i64 2147568076}
!5172 = !DILocation(line: 27, column: 1, scope: !5138)
!5173 = !{i64 2147568197, i64 2147568240, i64 2147568280}
!5174 = !DILocation(line: 28, column: 1, scope: !5138)
!5175 = !{i64 2147568390, i64 2147568433, i64 2147568473}
!5176 = !DILocation(line: 29, column: 1, scope: !5138)
!5177 = !{i64 2147568592, i64 2147568635, i64 2147568675}
!5178 = !DILocation(line: 30, column: 1, scope: !5138)
!5179 = !{i64 2147568819, i64 2147568862, i64 2147568902}
!5180 = !DILocation(line: 31, column: 1, scope: !5138)
!5181 = !{i64 2147569021, i64 2147569064, i64 2147569104}
!5182 = !DILocation(line: 32, column: 1, scope: !5138)
!5183 = !{i64 2147569236, i64 2147569279, i64 2147569319}
!5184 = !DILocation(line: 33, column: 1, scope: !5138)
!5185 = !{i64 2147569408, i64 2147569451, i64 2147569491}
!5186 = !DILocation(line: 34, column: 1, scope: !5138)
!5187 = !{i64 2147569610, i64 2147569653, i64 2147569693}
!5188 = !DILocation(line: 35, column: 1, scope: !5138)
!5189 = !{i64 2147569836, i64 2147569879, i64 2147569919}
!5190 = !DILocation(line: 36, column: 1, scope: !5138)
!5191 = !{i64 2147570035, i64 2147570078, i64 2147570118}
!5192 = !DILocation(line: 37, column: 1, scope: !5138)
!5193 = !{i64 2147570210, i64 2147570253, i64 2147570293}
!5194 = !DILocation(line: 38, column: 1, scope: !5138)
!5195 = !{i64 2147570463, i64 2147570506, i64 2147570546}
!5196 = !DILocation(line: 39, column: 1, scope: !5138)
!5197 = !{i64 2147570704, i64 2147570747, i64 2147570787}
!5198 = !DILocation(line: 40, column: 1, scope: !5138)
!5199 = !{i64 2147570939, i64 2147570982, i64 2147571022}
!5200 = !DILocation(line: 41, column: 1, scope: !5138)
!5201 = !{i64 2147571171, i64 2147571214, i64 2147571254}
!5202 = !DILocation(line: 42, column: 1, scope: !5138)
!5203 = !{i64 2147571397, i64 2147571440, i64 2147571480}
!5204 = !DILocation(line: 43, column: 1, scope: !5138)
!5205 = !{i64 2147571623, i64 2147571666, i64 2147571706}
!5206 = !DILocation(line: 44, column: 1, scope: !5138)
!5207 = !{i64 2147571849, i64 2147571892, i64 2147571932}
!5208 = !DILocation(line: 45, column: 1, scope: !5138)
!5209 = !{i64 2147572084, i64 2147572127, i64 2147572167}
!5210 = !DILocation(line: 46, column: 1, scope: !5138)
!5211 = !{i64 2147572322, i64 2147572365, i64 2147572405}
!5212 = !DILocation(line: 47, column: 1, scope: !5138)
!5213 = !{i64 2147572596, i64 2147572639, i64 2147572679}
!5214 = !DILocation(line: 48, column: 1, scope: !5138)
!5215 = !{i64 2147572834, i64 2147572877, i64 2147572917}
!5216 = !DILocation(line: 49, column: 1, scope: !5138)
!5217 = !{i64 2147573078, i64 2147573121, i64 2147573161}
!5218 = !DILocation(line: 50, column: 1, scope: !5138)
!5219 = !{i64 2147573328, i64 2147573371, i64 2147573411}
!5220 = !DILocation(line: 51, column: 1, scope: !5138)
!5221 = !{i64 2147573575, i64 2147573618, i64 2147573658}
!5222 = !DILocation(line: 52, column: 1, scope: !5138)
!5223 = !{i64 2147573810, i64 2147573853, i64 2147573893}
!5224 = !DILocation(line: 53, column: 1, scope: !5138)
!5225 = !{i64 2147578106, i64 2147578149, i64 2147578189}
!5226 = !DILocation(line: 54, column: 1, scope: !5138)
!5227 = !{i64 2147578341, i64 2147578384, i64 2147578424}
!5228 = !DILocation(line: 55, column: 1, scope: !5138)
!5229 = !{i64 2147578579, i64 2147578622, i64 2147578662}
!5230 = !DILocation(line: 56, column: 1, scope: !5138)
!5231 = !{i64 2147578820, i64 2147578863, i64 2147578903}
!5232 = !DILocation(line: 57, column: 1, scope: !5138)
!5233 = !{i64 2147579100, i64 2147579143, i64 2147579183}
!5234 = !DILocation(line: 58, column: 1, scope: !5138)
!5235 = !{i64 2147579359, i64 2147579402, i64 2147579442}
!5236 = !DILocation(line: 59, column: 1, scope: !5138)
!5237 = !{i64 2147579585, i64 2147579628, i64 2147579668}
!5238 = !DILocation(line: 60, column: 1, scope: !5138)
!5239 = !{i64 2147579823, i64 2147579866, i64 2147579906}
!5240 = !DILocation(line: 61, column: 1, scope: !5138)
!5241 = !{i64 2147580052, i64 2147580095, i64 2147580135}
!5242 = !DILocation(line: 62, column: 1, scope: !5138)
!5243 = !{i64 2147580260, i64 2147580303, i64 2147580343}
!5244 = !DILocation(line: 63, column: 1, scope: !5138)
!5245 = !{i64 2147580471, i64 2147580514, i64 2147580554}
!5246 = !DILocation(line: 64, column: 1, scope: !5138)
!5247 = !{i64 2147580706, i64 2147580749, i64 2147580789}
!5248 = !DILocation(line: 65, column: 1, scope: !5138)
!5249 = !{i64 2147580935, i64 2147580978, i64 2147581018}
!5250 = !DILocation(line: 66, column: 1, scope: !5138)
!5251 = !{i64 2147581173, i64 2147581216, i64 2147581256}
!5252 = !DILocation(line: 67, column: 1, scope: !5138)
!5253 = !{i64 2147581405, i64 2147581448, i64 2147581488}
!5254 = !DILocation(line: 68, column: 1, scope: !5138)
!5255 = !{i64 2147581631, i64 2147581674, i64 2147581714}
!5256 = !DILocation(line: 69, column: 1, scope: !5138)
!5257 = !{i64 2147581848, i64 2147581891, i64 2147581931}
!5258 = !DILocation(line: 70, column: 1, scope: !5138)
!5259 = !{i64 2147582080, i64 2147582123, i64 2147582163}
!5260 = !DILocation(line: 71, column: 1, scope: !5138)
!5261 = !{i64 2147582306, i64 2147582349, i64 2147582389}
!5262 = !DILocation(line: 72, column: 1, scope: !5138)
!5263 = !{i64 2147582520, i64 2147582563, i64 2147582603}
!5264 = !DILocation(line: 73, column: 1, scope: !5138)
!5265 = !{i64 2147582740, i64 2147582783, i64 2147582823}
!5266 = !DILocation(line: 74, column: 1, scope: !5138)
!5267 = !{i64 2147582972, i64 2147583015, i64 2147583055}
!5268 = !DILocation(line: 75, column: 1, scope: !5138)
!5269 = !{i64 2147583180, i64 2147583223, i64 2147583263}
!5270 = !DILocation(line: 76, column: 1, scope: !5138)
!5271 = !{i64 2147583385, i64 2147583428, i64 2147583468}
!5272 = !DILocation(line: 77, column: 1, scope: !5138)
!5273 = !{i64 2147583602, i64 2147583645, i64 2147583685}
!5274 = !DILocation(line: 78, column: 1, scope: !5138)
!5275 = !{i64 2147583816, i64 2147583859, i64 2147583899}
!5276 = !DILocation(line: 79, column: 1, scope: !5138)
!5277 = !{i64 2147584042, i64 2147584085, i64 2147584125}
!5278 = !DILocation(line: 80, column: 1, scope: !5138)
!5279 = !{i64 2147584262, i64 2147584305, i64 2147584345}
!5280 = !DILocation(line: 81, column: 1, scope: !5138)
!5281 = !{i64 2147584467, i64 2147584510, i64 2147584550}
!5282 = !DILocation(line: 82, column: 1, scope: !5138)
!5283 = !{i64 2147584699, i64 2147584742, i64 2147584782}
!5284 = !DILocation(line: 83, column: 1, scope: !5138)
!5285 = !{i64 2147584934, i64 2147584977, i64 2147585017}
!5286 = !DILocation(line: 84, column: 1, scope: !5138)
!5287 = !{i64 2147585184, i64 2147585227, i64 2147585267}
!5288 = !DILocation(line: 85, column: 1, scope: !5138)
!5289 = !{i64 2147585434, i64 2147585477, i64 2147585517}
!5290 = !DILocation(line: 86, column: 1, scope: !5138)
!5291 = !{i64 2147585672, i64 2147585715, i64 2147585755}
!5292 = !DILocation(line: 87, column: 1, scope: !5138)
!5293 = !{i64 2147585883, i64 2147585926, i64 2147585966}
!5294 = !DILocation(line: 88, column: 1, scope: !5138)
!5295 = !{i64 2147586100, i64 2147586143, i64 2147586183}
!5296 = !DILocation(line: 89, column: 1, scope: !5138)
!5297 = !{i64 2147590357, i64 2147590400, i64 2147590440}
!5298 = !DILocation(line: 90, column: 1, scope: !5138)
!5299 = !{i64 2147590559, i64 2147590602, i64 2147590642}
!5300 = !DILocation(line: 91, column: 1, scope: !5138)
!5301 = !{i64 2147590752, i64 2147590795, i64 2147590835}
!5302 = !DILocation(line: 92, column: 1, scope: !5138)
!5303 = !{i64 2147590960, i64 2147591003, i64 2147591043}
!5304 = !DILocation(line: 93, column: 1, scope: !5138)
!5305 = !{i64 2147591156, i64 2147591199, i64 2147591239}
!5306 = !DILocation(line: 94, column: 1, scope: !5138)
!5307 = !{i64 2147591361, i64 2147591404, i64 2147591444}
!5308 = !DILocation(line: 95, column: 1, scope: !5138)
!5309 = !{i64 2147591572, i64 2147591615, i64 2147591655}
!5310 = !DILocation(line: 96, column: 1, scope: !5138)
!5311 = !{i64 2147591771, i64 2147591814, i64 2147591854}
!5312 = !DILocation(line: 97, column: 1, scope: !5138)
!5313 = !{i64 2147591946, i64 2147591989, i64 2147592029}
!5314 = !DILocation(line: 98, column: 1, scope: !5138)
!5315 = !{i64 2147592130, i64 2147592173, i64 2147592213}
!5316 = !DILocation(line: 99, column: 1, scope: !5138)
!5317 = !{i64 2147592332, i64 2147592375, i64 2147592415}
!5318 = !DILocation(line: 100, column: 1, scope: !5138)
!5319 = !{i64 2147592531, i64 2147592574, i64 2147592614}
!5320 = !DILocation(line: 101, column: 1, scope: !5138)
!5321 = !{i64 2147592697, i64 2147592740, i64 2147592780}
!5322 = !DILocation(line: 102, column: 1, scope: !5138)
!5323 = !{i64 2147592881, i64 2147592924, i64 2147592964}
!5324 = !DILocation(line: 103, column: 1, scope: !5138)
!5325 = !{i64 2147593071, i64 2147593114, i64 2147593154}
!5326 = !DILocation(line: 104, column: 1, scope: !5138)
!5327 = !{i64 2147593255, i64 2147593298, i64 2147593338}
!5328 = !DILocation(line: 105, column: 1, scope: !5138)
!5329 = !{i64 2147593469, i64 2147593512, i64 2147593552}
!5330 = !DILocation(line: 106, column: 1, scope: !5138)
!5331 = !{i64 2147593680, i64 2147593723, i64 2147593763}
!5332 = !DILocation(line: 107, column: 1, scope: !5138)
!5333 = !{i64 2147593903, i64 2147593946, i64 2147593986}
!5334 = !DILocation(line: 108, column: 1, scope: !5138)
!5335 = !{i64 2147594087, i64 2147594130, i64 2147594170}
!5336 = !DILocation(line: 109, column: 1, scope: !5138)
!5337 = !{i64 2147594301, i64 2147594344, i64 2147594384}
!5338 = !DILocation(line: 110, column: 1, scope: !5138)
!5339 = !{i64 2147594467, i64 2147594510, i64 2147594550}
!5340 = !DILocation(line: 111, column: 1, scope: !5138)
!5341 = !{i64 2147594648, i64 2147594691, i64 2147594731}
!5342 = !DILocation(line: 112, column: 1, scope: !5138)
!5343 = !{i64 2147594841, i64 2147594884, i64 2147594924}
!5344 = !DILocation(line: 113, column: 1, scope: !5138)
!5345 = !{i64 2147595067, i64 2147595110, i64 2147595150}
!5346 = !DILocation(line: 114, column: 1, scope: !5138)
!5347 = !{i64 2147595281, i64 2147595324, i64 2147595364}
!5348 = !DILocation(line: 115, column: 1, scope: !5138)
!5349 = !{i64 2147595507, i64 2147595550, i64 2147595590}
!5350 = !DILocation(line: 116, column: 1, scope: !5138)
!5351 = !{i64 2147595724, i64 2147595767, i64 2147595807}
!5352 = !DILocation(line: 117, column: 1, scope: !5138)
!5353 = !{i64 2147596001, i64 2147596044, i64 2147596084}
!5354 = !DILocation(line: 118, column: 1, scope: !5138)
!5355 = !{i64 2147596227, i64 2147596270, i64 2147596310}
!5356 = !DILocation(line: 119, column: 1, scope: !5138)
!5357 = !{i64 2147596435, i64 2147596478, i64 2147596518}
!5358 = !DILocation(line: 120, column: 1, scope: !5138)
!5359 = !{i64 2147596631, i64 2147596674, i64 2147596714}
!5360 = !DILocation(line: 121, column: 1, scope: !5138)
!5361 = !{i64 2147596896, i64 2147596939, i64 2147596979}
!5362 = !DILocation(line: 122, column: 1, scope: !5138)
!5363 = !{i64 2147597110, i64 2147597153, i64 2147597193}
!5364 = !DILocation(line: 123, column: 1, scope: !5138)
!5365 = !{i64 2147597285, i64 2147597328, i64 2147597368}
!5366 = !DILocation(line: 124, column: 1, scope: !5138)
!5367 = !{i64 2147597539, i64 2147597582, i64 2147597622}
!5368 = !DILocation(line: 125, column: 1, scope: !5138)
!5369 = !{i64 2147597738, i64 2147597781, i64 2147597821}
!5370 = !DILocation(line: 126, column: 1, scope: !5138)
!5371 = !{i64 2147597980, i64 2147598023, i64 2147598063}
!5372 = !DILocation(line: 127, column: 1, scope: !5138)
!5373 = !{i64 2147598143, i64 2147598186, i64 2147598226}
!5374 = !DILocation(line: 128, column: 1, scope: !5138)
!5375 = !{i64 2147598330, i64 2147598373, i64 2147598413}
!5376 = !DILocation(line: 129, column: 1, scope: !5138)
!5377 = !{i64 2147598523, i64 2147598566, i64 2147598606}
!5378 = !DILocation(line: 130, column: 1, scope: !5138)
!5379 = !{i64 2147598706, i64 2147598749, i64 2147598789}
!5380 = !DILocation(line: 131, column: 1, scope: !5138)
!5381 = !{i64 2147598920, i64 2147598963, i64 2147599003}
!5382 = !DILocation(line: 132, column: 1, scope: !5138)
!5383 = !{i64 2147599131, i64 2147599174, i64 2147599214}
!5384 = !DILocation(line: 133, column: 1, scope: !5138)
!5385 = !{i64 2147599351, i64 2147599394, i64 2147599434}
!5386 = !DILocation(line: 134, column: 1, scope: !5138)
!5387 = !{i64 2147599558, i64 2147599601, i64 2147599641}
!5388 = !DILocation(line: 135, column: 1, scope: !5138)
!5389 = !{i64 2147603892, i64 2147603935, i64 2147603975}
!5390 = !DILocation(line: 136, column: 1, scope: !5138)
!5391 = !{i64 2147604140, i64 2147604183, i64 2147604223}
!5392 = !DILocation(line: 137, column: 1, scope: !5138)
!5393 = !{i64 2147604339, i64 2147604382, i64 2147604422}
!5394 = !DILocation(line: 138, column: 1, scope: !5138)
!5395 = !{i64 2147604574, i64 2147604617, i64 2147604657}
!5396 = !DILocation(line: 139, column: 1, scope: !5138)
!5397 = !{i64 2147604824, i64 2147604867, i64 2147604907}
!5398 = !DILocation(line: 140, column: 1, scope: !5138)
!5399 = !{i64 2147605026, i64 2147605069, i64 2147605109}
!5400 = !DILocation(line: 141, column: 1, scope: !5138)
!5401 = !{i64 2147605249, i64 2147605292, i64 2147605332}
!5402 = !DILocation(line: 142, column: 1, scope: !5138)
!5403 = !{i64 2147605463, i64 2147605506, i64 2147605546}
!5404 = !DILocation(line: 143, column: 1, scope: !5138)
!5405 = !{i64 2147605707, i64 2147605750, i64 2147605790}
!5406 = !DILocation(line: 144, column: 1, scope: !5138)
!5407 = !{i64 2147605936, i64 2147605979, i64 2147606019}
!5408 = !DILocation(line: 145, column: 1, scope: !5138)
!5409 = !{i64 2147606165, i64 2147606208, i64 2147606248}
!5410 = !DILocation(line: 146, column: 1, scope: !5138)
!5411 = !{i64 2147606373, i64 2147606416, i64 2147606456}
!5412 = !DILocation(line: 147, column: 1, scope: !5138)
!5413 = !{i64 2147606611, i64 2147606654, i64 2147606694}
!5414 = !DILocation(line: 148, column: 1, scope: !5138)
!5415 = !{i64 2147606837, i64 2147606880, i64 2147606920}
!5416 = !DILocation(line: 149, column: 1, scope: !5138)
!5417 = !{i64 2147607096, i64 2147607139, i64 2147607179}
!5418 = !DILocation(line: 150, column: 1, scope: !5138)
!5419 = !{i64 2147607316, i64 2147607359, i64 2147607399}
!5420 = !DILocation(line: 151, column: 1, scope: !5138)
!5421 = !{i64 2147607548, i64 2147607591, i64 2147607631}
!5422 = !DILocation(line: 152, column: 1, scope: !5138)
!5423 = !{i64 2147607789, i64 2147607832, i64 2147607872}
!5424 = !DILocation(line: 153, column: 1, scope: !5138)
!5425 = !{i64 2147608030, i64 2147608073, i64 2147608113}
!5426 = !DILocation(line: 154, column: 1, scope: !5138)
!5427 = !{i64 2147608253, i64 2147608296, i64 2147608336}
!5428 = !DILocation(line: 155, column: 1, scope: !5138)
!5429 = !{i64 2147608470, i64 2147608513, i64 2147608553}
!5430 = !DILocation(line: 156, column: 1, scope: !5138)
!5431 = !{i64 2147608711, i64 2147608754, i64 2147608794}
!5432 = !DILocation(line: 157, column: 1, scope: !5138)
!5433 = !{i64 2147608898, i64 2147608941, i64 2147608981}
!5434 = !DILocation(line: 158, column: 1, scope: !5138)
!5435 = !{i64 2147609085, i64 2147609128, i64 2147609168}
!5436 = !DILocation(line: 159, column: 1, scope: !5138)
!5437 = !{i64 2147609248, i64 2147609291, i64 2147609331}
!5438 = !DILocation(line: 160, column: 1, scope: !5138)
!5439 = !{i64 2147609507, i64 2147609550, i64 2147609590}
!5440 = !DILocation(line: 161, column: 1, scope: !5138)
!5441 = !{i64 2147609730, i64 2147609773, i64 2147609813}
!5442 = !DILocation(line: 162, column: 1, scope: !5138)
!5443 = !{i64 2147609959, i64 2147610002, i64 2147610042}
!5444 = !DILocation(line: 163, column: 1, scope: !5138)
!5445 = !{i64 2147610155, i64 2147610198, i64 2147610238}
!5446 = !DILocation(line: 164, column: 1, scope: !5138)
!5447 = !{i64 2147610367, i64 2147610410, i64 2147610450}
!5448 = !DILocation(line: 165, column: 1, scope: !5138)
!5449 = !{i64 2147610588, i64 2147610631, i64 2147610671}
!5450 = !DILocation(line: 166, column: 1, scope: !5138)
!5451 = !{i64 2147610802, i64 2147610845, i64 2147610885}
!5452 = !DILocation(line: 167, column: 1, scope: !5138)
!5453 = !{i64 2147610992, i64 2147611035, i64 2147611075}
!5454 = !DILocation(line: 168, column: 1, scope: !5138)
!5455 = !{i64 2147611191, i64 2147611234, i64 2147611274}
!5456 = !DILocation(line: 169, column: 1, scope: !5138)
!5457 = !{i64 2147611396, i64 2147611439, i64 2147611479}
!5458 = !DILocation(line: 170, column: 1, scope: !5138)
!5459 = !{i64 2147611616, i64 2147611659, i64 2147611699}
!5460 = !DILocation(line: 171, column: 1, scope: !5138)
!5461 = !{i64 2147611817, i64 2147611860, i64 2147611900}
!5462 = !DILocation(line: 172, column: 1, scope: !5138)
!5463 = !{i64 2147612016, i64 2147612059, i64 2147612099}
!5464 = !DILocation(line: 173, column: 1, scope: !5138)
!5465 = !{i64 2147616282, i64 2147616325, i64 2147616365}
!5466 = !DILocation(line: 174, column: 1, scope: !5138)
!5467 = !{i64 2147616451, i64 2147616494, i64 2147616534}
!5468 = !DILocation(line: 175, column: 1, scope: !5138)
!5469 = !{i64 2147616635, i64 2147616678, i64 2147616718}
!5470 = !DILocation(line: 176, column: 1, scope: !5138)
!5471 = !{i64 2147616819, i64 2147616862, i64 2147616902}
!5472 = !DILocation(line: 177, column: 1, scope: !5138)
!5473 = !{i64 2147617006, i64 2147617049, i64 2147617089}
!5474 = !DILocation(line: 178, column: 1, scope: !5138)
!5475 = !{i64 2147617190, i64 2147617233, i64 2147617273}
!5476 = !DILocation(line: 179, column: 1, scope: !5138)
!5477 = !{i64 2147617428, i64 2147617471, i64 2147617511}
!5478 = !DILocation(line: 180, column: 1, scope: !5138)
!5479 = !{i64 2147617658, i64 2147617701, i64 2147617741}
!5480 = !DILocation(line: 181, column: 1, scope: !5138)
!5481 = !{i64 2147617887, i64 2147617930, i64 2147617970}
!5482 = !DILocation(line: 182, column: 1, scope: !5138)
!5483 = !{i64 2147618074, i64 2147618117, i64 2147618157}
!5484 = !DILocation(line: 183, column: 1, scope: !5138)
!5485 = !{i64 2147618270, i64 2147618313, i64 2147618353}
!5486 = !DILocation(line: 184, column: 1, scope: !5138)
!5487 = !{i64 2147618478, i64 2147618521, i64 2147618561}
!5488 = !DILocation(line: 185, column: 1, scope: !5138)
!5489 = !{i64 2147618690, i64 2147618733, i64 2147618773}
!5490 = !DILocation(line: 186, column: 1, scope: !5138)
!5491 = !{i64 2147618889, i64 2147618932, i64 2147618972}
!5492 = !DILocation(line: 187, column: 1, scope: !5138)
!5493 = !{i64 2147619127, i64 2147619170, i64 2147619210}
!5494 = !DILocation(line: 188, column: 1, scope: !5138)
!5495 = !{i64 2147619323, i64 2147619366, i64 2147619406}
!5496 = !DILocation(line: 189, column: 1, scope: !5138)
!5497 = !{i64 2147619525, i64 2147619568, i64 2147619608}
!5498 = !DILocation(line: 190, column: 1, scope: !5138)
!5499 = !{i64 2147619718, i64 2147619761, i64 2147619801}
!5500 = !DILocation(line: 191, column: 1, scope: !5138)
!5501 = !{i64 2147619952, i64 2147619995, i64 2147620035}
!5502 = !DILocation(line: 192, column: 1, scope: !5138)
!5503 = !{i64 2147620115, i64 2147620158, i64 2147620198}
!5504 = !DILocation(line: 193, column: 1, scope: !5138)
!5505 = !{i64 2147620354, i64 2147620397, i64 2147620437}
!5506 = !DILocation(line: 194, column: 1, scope: !5138)
!5507 = !{i64 2147620593, i64 2147620636, i64 2147620676}
!5508 = !DILocation(line: 195, column: 1, scope: !5138)
!5509 = !{i64 2147620829, i64 2147620872, i64 2147620912}
!5510 = !DILocation(line: 196, column: 1, scope: !5138)
!5511 = !{i64 2147621059, i64 2147621102, i64 2147621142}
!5512 = !DILocation(line: 197, column: 1, scope: !5138)
!5513 = !{i64 2147621246, i64 2147621289, i64 2147621329}
!5514 = !DILocation(line: 198, column: 1, scope: !5138)
!5515 = !{i64 2147621445, i64 2147621488, i64 2147621528}
!5516 = !DILocation(line: 199, column: 1, scope: !5138)
!5517 = !{i64 2147621716, i64 2147621759, i64 2147621799}
!5518 = !DILocation(line: 200, column: 1, scope: !5138)
!5519 = !{i64 2147621891, i64 2147621934, i64 2147621974}
!5520 = !DILocation(line: 201, column: 1, scope: !5138)
!5521 = !{i64 2147622125, i64 2147622168, i64 2147622208}
!5522 = !DILocation(line: 202, column: 1, scope: !5138)
!5523 = !{i64 2147622333, i64 2147622376, i64 2147622416}
!5524 = !DILocation(line: 203, column: 1, scope: !5138)
!5525 = !{i64 2147622532, i64 2147622575, i64 2147622615}
!5526 = !DILocation(line: 204, column: 1, scope: !5138)
!5527 = !{i64 2147622750, i64 2147622793, i64 2147622833}
!5528 = !DILocation(line: 205, column: 1, scope: !5138)
!5529 = !{i64 2147622940, i64 2147622983, i64 2147623023}
!5530 = !DILocation(line: 206, column: 1, scope: !5138)
!5531 = !{i64 2147623136, i64 2147623179, i64 2147623219}
!5532 = !DILocation(line: 207, column: 1, scope: !5138)
!5533 = !{i64 2147623342, i64 2147623385, i64 2147623425}
!5534 = !DILocation(line: 208, column: 1, scope: !5138)
!5535 = !{i64 2147623547, i64 2147623590, i64 2147623630}
!5536 = !DILocation(line: 209, column: 1, scope: !5138)
!5537 = !{i64 2147623773, i64 2147623816, i64 2147623856}
!5538 = !DILocation(line: 210, column: 1, scope: !5138)
!5539 = !{i64 2147624005, i64 2147624048, i64 2147624088}
!5540 = !DILocation(line: 211, column: 1, scope: !5138)
!5541 = !{i64 2147624189, i64 2147624232, i64 2147624272}
!5542 = !DILocation(line: 212, column: 1, scope: !5138)
!5543 = !{i64 2147624398, i64 2147624441, i64 2147624481}
!5544 = !DILocation(line: 213, column: 1, scope: !5138)
!5545 = !{i64 2147624582, i64 2147624625, i64 2147624665}
!5546 = !DILocation(line: 214, column: 1, scope: !5138)
!5547 = !{i64 2147624808, i64 2147624851, i64 2147624891}
!5548 = !DILocation(line: 215, column: 1, scope: !5138)
!5549 = !{i64 2147625034, i64 2147625077, i64 2147625117}
!5550 = !DILocation(line: 216, column: 1, scope: !5138)
!5551 = !{i64 2147625260, i64 2147625303, i64 2147625343}
!5552 = !DILocation(line: 217, column: 1, scope: !5138)
!5553 = !{i64 2147629547, i64 2147629590, i64 2147629630}
!5554 = !DILocation(line: 218, column: 1, scope: !5138)
!5555 = !{i64 2147629773, i64 2147629816, i64 2147629856}
!5556 = !DILocation(line: 219, column: 1, scope: !5138)
!5557 = !{i64 2147630005, i64 2147630048, i64 2147630088}
!5558 = !DILocation(line: 220, column: 1, scope: !5138)
!5559 = !{i64 2147630243, i64 2147630286, i64 2147630326}
!5560 = !DILocation(line: 221, column: 1, scope: !5138)
!5561 = !{i64 2147630463, i64 2147630506, i64 2147630546}
!5562 = !DILocation(line: 222, column: 1, scope: !5138)
!5563 = !{i64 2147630707, i64 2147630750, i64 2147630790}
!5564 = !DILocation(line: 223, column: 1, scope: !5138)
!5565 = !{i64 2147630948, i64 2147630991, i64 2147631031}
!5566 = !DILocation(line: 224, column: 1, scope: !5138)
!5567 = !{i64 2147631183, i64 2147631226, i64 2147631266}
!5568 = !DILocation(line: 225, column: 1, scope: !5138)
!5569 = !{i64 2147631415, i64 2147631458, i64 2147631498}
!5570 = !DILocation(line: 226, column: 1, scope: !5138)
!5571 = !{i64 2147631617, i64 2147631660, i64 2147631700}
!5572 = !DILocation(line: 227, column: 1, scope: !5138)
!5573 = !{i64 2147631867, i64 2147631910, i64 2147631950}
!5574 = !DILocation(line: 228, column: 1, scope: !5138)
!5575 = !{i64 2147632105, i64 2147632148, i64 2147632188}
!5576 = !DILocation(line: 229, column: 1, scope: !5138)
!5577 = !{i64 2147632289, i64 2147632332, i64 2147632372}
!5578 = !DILocation(line: 230, column: 1, scope: !5138)
!5579 = !{i64 2147632512, i64 2147632555, i64 2147632595}
!5580 = !DILocation(line: 231, column: 1, scope: !5138)
!5581 = !{i64 2147632750, i64 2147632793, i64 2147632833}
!5582 = !DILocation(line: 232, column: 1, scope: !5138)
!5583 = !{i64 2147632988, i64 2147633031, i64 2147633071}
!5584 = !DILocation(line: 233, column: 1, scope: !5138)
!5585 = !{i64 2147633181, i64 2147633224, i64 2147633264}
!5586 = !DILocation(line: 234, column: 1, scope: !5138)
!5587 = !{i64 2147633434, i64 2147633477, i64 2147633517}
!5588 = !DILocation(line: 235, column: 1, scope: !5138)
!5589 = !{i64 2147633648, i64 2147633691, i64 2147633731}
!5590 = !DILocation(line: 236, column: 1, scope: !5138)
!5591 = !{i64 2147633856, i64 2147633899, i64 2147633939}
!5592 = !DILocation(line: 237, column: 1, scope: !5138)
!5593 = !{i64 2147634046, i64 2147634089, i64 2147634129}
!5594 = !DILocation(line: 238, column: 1, scope: !5138)
!5595 = !{i64 2147634260, i64 2147634303, i64 2147634343}
!5596 = !DILocation(line: 239, column: 1, scope: !5138)
!5597 = !{i64 2147634522, i64 2147634565, i64 2147634605}
!5598 = !DILocation(line: 240, column: 1, scope: !5138)
!5599 = !{i64 2147634733, i64 2147634776, i64 2147634816}
!5600 = !DILocation(line: 241, column: 1, scope: !5138)
!5601 = !{i64 2147634977, i64 2147635020, i64 2147635060}
!5602 = !DILocation(line: 242, column: 1, scope: !5138)
!5603 = !{i64 2147635188, i64 2147635231, i64 2147635271}
!5604 = !DILocation(line: 243, column: 1, scope: !5138)
!5605 = !{i64 2147635417, i64 2147635460, i64 2147635500}
!5606 = !DILocation(line: 244, column: 1, scope: !5138)
!5607 = !{i64 2147635682, i64 2147635725, i64 2147635765}
!5608 = !DILocation(line: 245, column: 1, scope: !5138)
!5609 = !{i64 2147635887, i64 2147635930, i64 2147635970}
!5610 = !DILocation(line: 246, column: 1, scope: !5138)
!5611 = !{i64 2147636083, i64 2147636126, i64 2147636166}
!5612 = !DILocation(line: 247, column: 1, scope: !5138)
!5613 = !{i64 2147636306, i64 2147636349, i64 2147636389}
!5614 = !DILocation(line: 248, column: 1, scope: !5138)
!5615 = !{i64 2147636469, i64 2147636512, i64 2147636552}
!5616 = !DILocation(line: 249, column: 1, scope: !5138)
!5617 = !{i64 2147636674, i64 2147636717, i64 2147636757}
!5618 = !DILocation(line: 250, column: 1, scope: !5138)
!5619 = !{i64 2147636894, i64 2147636937, i64 2147636977}
!5620 = !DILocation(line: 251, column: 1, scope: !5138)
!5621 = !{i64 2147637108, i64 2147637151, i64 2147637191}
!5622 = !DILocation(line: 252, column: 1, scope: !5138)
!5623 = !{i64 2147637322, i64 2147637365, i64 2147637405}
!5624 = !DILocation(line: 253, column: 1, scope: !5138)
!5625 = !{i64 2147637533, i64 2147637576, i64 2147637616}
!5626 = !DILocation(line: 254, column: 1, scope: !5138)
!5627 = !{i64 2147637726, i64 2147637769, i64 2147637809}
!5628 = !DILocation(line: 255, column: 1, scope: !5138)
!5629 = !{i64 2147637925, i64 2147637968, i64 2147638008}
!5630 = !DILocation(line: 256, column: 1, scope: !5138)
!5631 = !{i64 2147642182, i64 2147642225, i64 2147642265}
!5632 = !DILocation(line: 257, column: 1, scope: !5138)
!5633 = !{i64 2147642381, i64 2147642424, i64 2147642464}
!5634 = !DILocation(line: 258, column: 1, scope: !5138)
!5635 = !{i64 2147642553, i64 2147642596, i64 2147642636}
!5636 = !DILocation(line: 259, column: 1, scope: !5138)
!5637 = !{i64 2147642746, i64 2147642789, i64 2147642829}
!5638 = !DILocation(line: 260, column: 1, scope: !5138)
!5639 = !{i64 2147642942, i64 2147642985, i64 2147643025}
!5640 = !DILocation(line: 261, column: 1, scope: !5138)
!5641 = !{i64 2147643169, i64 2147643212, i64 2147643252}
!5642 = !DILocation(line: 262, column: 1, scope: !5138)
!5643 = !{i64 2147643386, i64 2147643429, i64 2147643469}
!5644 = !DILocation(line: 263, column: 1, scope: !5138)
!5645 = !{i64 2147643678, i64 2147643721, i64 2147643761}
!5646 = !DILocation(line: 264, column: 1, scope: !5138)
!5647 = !{i64 2147643910, i64 2147643953, i64 2147643993}
!5648 = !DILocation(line: 265, column: 1, scope: !5138)
!5649 = !{i64 2147644127, i64 2147644170, i64 2147644210}
!5650 = !DILocation(line: 266, column: 1, scope: !5138)
!5651 = !{i64 2147644334, i64 2147644377, i64 2147644417}
!5652 = !DILocation(line: 267, column: 1, scope: !5138)
!5653 = !{i64 2147644535, i64 2147644578, i64 2147644618}
!5654 = !DILocation(line: 268, column: 1, scope: !5138)
!5655 = !{i64 2147644767, i64 2147644810, i64 2147644850}
!5656 = !DILocation(line: 269, column: 1, scope: !5138)
!5657 = !{i64 2147644975, i64 2147645018, i64 2147645058}
!5658 = !DILocation(line: 270, column: 1, scope: !5138)
!5659 = !{i64 2147645165, i64 2147645208, i64 2147645248}
!5660 = !DILocation(line: 271, column: 1, scope: !5138)
!5661 = !{i64 2147645391, i64 2147645434, i64 2147645474}
!5662 = !DILocation(line: 272, column: 1, scope: !5138)
!5663 = !{i64 2147645580, i64 2147645623, i64 2147645663}
!5664 = !DILocation(line: 273, column: 1, scope: !5138)
!5665 = !{i64 2147645851, i64 2147645894, i64 2147645934}
!5666 = !DILocation(line: 274, column: 1, scope: !5138)
!5667 = !{i64 2147646071, i64 2147646114, i64 2147646154}
!5668 = !DILocation(line: 275, column: 1, scope: !5138)
!5669 = !{i64 2147646324, i64 2147646367, i64 2147646407}
!5670 = !DILocation(line: 276, column: 1, scope: !5138)
!5671 = !{i64 2147646532, i64 2147646575, i64 2147646615}
!5672 = !DILocation(line: 277, column: 1, scope: !5138)
!5673 = !{i64 2147646764, i64 2147646807, i64 2147646847}
!5674 = !DILocation(line: 278, column: 1, scope: !5138)
!5675 = !{i64 2147646975, i64 2147647018, i64 2147647058}
!5676 = !DILocation(line: 279, column: 1, scope: !5138)
!5677 = !{i64 2147647165, i64 2147647208, i64 2147647248}
!5678 = !DILocation(line: 280, column: 1, scope: !5138)
!5679 = !{i64 2147647379, i64 2147647422, i64 2147647462}
!5680 = !DILocation(line: 281, column: 1, scope: !5138)
!5681 = !{i64 2147647578, i64 2147647621, i64 2147647661}
!5682 = !DILocation(line: 282, column: 1, scope: !5138)
!5683 = !{i64 2147647765, i64 2147647808, i64 2147647848}
!5684 = !DILocation(line: 283, column: 1, scope: !5138)
!5685 = !{i64 2147647973, i64 2147648016, i64 2147648056}
!5686 = !DILocation(line: 284, column: 1, scope: !5138)
!5687 = !{i64 2147648202, i64 2147648245, i64 2147648285}
!5688 = !DILocation(line: 285, column: 1, scope: !5138)
!5689 = !{i64 2147648404, i64 2147648447, i64 2147648487}
!5690 = !DILocation(line: 286, column: 1, scope: !5138)
!5691 = !{i64 2147648603, i64 2147648646, i64 2147648686}
!5692 = !DILocation(line: 287, column: 1, scope: !5138)
!5693 = !{i64 2147648820, i64 2147648863, i64 2147648903}
!5694 = !DILocation(line: 289, column: 1, scope: !5138)
!5695 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5696)
!5696 = !{!5697, !5698}
!5697 = !DILocalVariable(name: "arg", arg: 1, scope: !5695, file: !129, line: 30, type: !138)
!5698 = !DILocalVariable(name: "key", scope: !5695, file: !129, line: 32, type: !121)
!5699 = !DILocation(line: 0, scope: !5695)
!5700 = !DILocation(line: 37, column: 2, scope: !5695)
!5701 = !DILocation(line: 38, column: 2, scope: !5695)
!5702 = !DILocation(line: 55, column: 2, scope: !5703, inlinedAt: !5710)
!5703 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5704, file: !5704, line: 42, type: !5705, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5707)
!5704 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5705 = !DISubroutineType(types: !5706)
!5706 = !{!32}
!5707 = !{!5708, !5709}
!5708 = !DILocalVariable(name: "key", scope: !5703, file: !5704, line: 44, type: !32)
!5709 = !DILocalVariable(name: "tmp", scope: !5703, file: !5704, line: 53, type: !32)
!5710 = distinct !DILocation(line: 40, column: 8, scope: !5695)
!5711 = !{i64 1826804}
!5712 = !DILocation(line: 0, scope: !5703, inlinedAt: !5710)
!5713 = !DILocalVariable(name: "key", arg: 1, scope: !5714, file: !5704, line: 84, type: !32)
!5714 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5704, file: !5704, line: 84, type: !5715, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5717)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{null, !32}
!5717 = !{!5713}
!5718 = !DILocation(line: 0, scope: !5714, inlinedAt: !5719)
!5719 = distinct !DILocation(line: 47, column: 2, scope: !5695)
!5720 = !DILocation(line: 95, column: 2, scope: !5714, inlinedAt: !5719)
!5721 = !{i64 1827621}
!5722 = !DILocation(line: 51, column: 18, scope: !5695)
!5723 = !DILocation(line: 53, column: 2, scope: !5695)
!5724 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5725, file: !5725, line: 1609, type: !3157, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5725 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5726 = !DILocation(line: 1611, column: 3, scope: !5724)
!5727 = !DILocation(line: 1612, column: 1, scope: !5724)
!5728 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5725, file: !5725, line: 1629, type: !3157, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5729 = !DILocation(line: 1631, column: 3, scope: !5728)
!5730 = !DILocation(line: 1632, column: 1, scope: !5728)
!5731 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5732)
!5732 = !{!5733}
!5733 = !DILocalVariable(name: "dev", arg: 1, scope: !5731, file: !171, line: 26, type: !179)
!5734 = !DILocation(line: 0, scope: !5731)
!5735 = !DILocation(line: 68, column: 2, scope: !5731)
!5736 = !DILocation(line: 25, column: 6, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !341, file: !294, line: 25, column: 6)
!5738 = !DILocation(line: 25, column: 10, scope: !5737)
!5739 = !DILocation(line: 25, column: 6, scope: !341)
!5740 = !DILocation(line: 26, column: 3, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !294, line: 26, column: 3)
!5742 = distinct !DILexicalBlock(scope: !5737, file: !294, line: 25, column: 19)
!5743 = !DILocation(line: 27, column: 2, scope: !5742)
!5744 = !DILocation(line: 29, column: 8, scope: !347)
!5745 = !DILocation(line: 0, scope: !347)
!5746 = !DILocation(line: 29, column: 6, scope: !341)
!5747 = !DILocation(line: 30, column: 14, scope: !341)
!5748 = !DILocation(line: 30, column: 2, scope: !341)
!5749 = distinct !DISubprogram(name: "k_queue_get", scope: !3593, file: !3593, line: 649, type: !5750, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5757)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{!102, !5752, !5753}
!5752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!5753 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !5754)
!5754 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !5755)
!5755 = !{!5756}
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5754, file: !201, line: 66, baseType: !200, size: 64)
!5757 = !{!5758, !5759}
!5758 = !DILocalVariable(name: "queue", arg: 1, scope: !5749, file: !3593, line: 649, type: !5752)
!5759 = !DILocalVariable(name: "timeout", arg: 2, scope: !5749, file: !3593, line: 649, type: !5753)
!5760 = !DILocation(line: 0, scope: !5749)
!5761 = !DILocation(line: 658, column: 2, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5749, file: !3593, line: 658, column: 2)
!5763 = !{i64 2154062883}
!5764 = !DILocation(line: 659, column: 9, scope: !5749)
!5765 = !DILocation(line: 659, column: 2, scope: !5749)
!5766 = distinct !DISubprogram(name: "console_getline_init", scope: !294, file: !294, line: 33, type: !3157, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5767)
!5767 = !{!5768}
!5768 = !DILocalVariable(name: "i", scope: !5766, file: !294, line: 35, type: !103)
!5769 = !DILocation(line: 0, scope: !5766)
!5770 = !DILocation(line: 38, column: 3, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !294, line: 38, column: 3)
!5772 = distinct !DILexicalBlock(scope: !5773, file: !294, line: 37, column: 46)
!5773 = distinct !DILexicalBlock(scope: !5774, file: !294, line: 37, column: 2)
!5774 = distinct !DILexicalBlock(scope: !5766, file: !294, line: 37, column: 2)
!5775 = !DILocation(line: 45, column: 2, scope: !5766)
!5776 = !DILocation(line: 46, column: 1, scope: !5766)
!5777 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5778, file: !5778, line: 57, type: !5779, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !5825)
!5778 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5779 = !DISubroutineType(types: !5780)
!5780 = !{null, !32, !5781}
!5781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5782, size: 32)
!5782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5783)
!5783 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2695, line: 141, baseType: !5784)
!5784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2695, line: 97, size: 256, elements: !5785)
!5785 = !{!5786}
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5784, file: !2695, line: 107, baseType: !5787, size: 256)
!5787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2695, line: 98, size: 256, elements: !5788)
!5788 = !{!5789, !5794, !5799, !5804, !5809, !5814, !5819, !5824}
!5789 = !DIDerivedType(tag: DW_TAG_member, scope: !5787, file: !2695, line: 99, baseType: !5790, size: 32)
!5790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !2695, line: 99, size: 32, elements: !5791)
!5791 = !{!5792, !5793}
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5790, file: !2695, line: 99, baseType: !121, size: 32)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5790, file: !2695, line: 99, baseType: !121, size: 32)
!5794 = !DIDerivedType(tag: DW_TAG_member, scope: !5787, file: !2695, line: 100, baseType: !5795, size: 32, offset: 32)
!5795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !2695, line: 100, size: 32, elements: !5796)
!5796 = !{!5797, !5798}
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5795, file: !2695, line: 100, baseType: !121, size: 32)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5795, file: !2695, line: 100, baseType: !121, size: 32)
!5799 = !DIDerivedType(tag: DW_TAG_member, scope: !5787, file: !2695, line: 101, baseType: !5800, size: 32, offset: 64)
!5800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !2695, line: 101, size: 32, elements: !5801)
!5801 = !{!5802, !5803}
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5800, file: !2695, line: 101, baseType: !121, size: 32)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5800, file: !2695, line: 101, baseType: !121, size: 32)
!5804 = !DIDerivedType(tag: DW_TAG_member, scope: !5787, file: !2695, line: 102, baseType: !5805, size: 32, offset: 96)
!5805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !2695, line: 102, size: 32, elements: !5806)
!5806 = !{!5807, !5808}
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5805, file: !2695, line: 102, baseType: !121, size: 32)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5805, file: !2695, line: 102, baseType: !121, size: 32)
!5809 = !DIDerivedType(tag: DW_TAG_member, scope: !5787, file: !2695, line: 103, baseType: !5810, size: 32, offset: 128)
!5810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !2695, line: 103, size: 32, elements: !5811)
!5811 = !{!5812, !5813}
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5810, file: !2695, line: 103, baseType: !121, size: 32)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5810, file: !2695, line: 103, baseType: !121, size: 32)
!5814 = !DIDerivedType(tag: DW_TAG_member, scope: !5787, file: !2695, line: 104, baseType: !5815, size: 32, offset: 160)
!5815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !2695, line: 104, size: 32, elements: !5816)
!5816 = !{!5817, !5818}
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5815, file: !2695, line: 104, baseType: !121, size: 32)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5815, file: !2695, line: 104, baseType: !121, size: 32)
!5819 = !DIDerivedType(tag: DW_TAG_member, scope: !5787, file: !2695, line: 105, baseType: !5820, size: 32, offset: 192)
!5820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !2695, line: 105, size: 32, elements: !5821)
!5821 = !{!5822, !5823}
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5820, file: !2695, line: 105, baseType: !121, size: 32)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5820, file: !2695, line: 105, baseType: !121, size: 32)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5787, file: !2695, line: 106, baseType: !121, size: 32, offset: 224)
!5825 = !{!5826, !5827}
!5826 = !DILocalVariable(name: "reason", arg: 1, scope: !5777, file: !5778, line: 57, type: !32)
!5827 = !DILocalVariable(name: "esf", arg: 2, scope: !5777, file: !5778, line: 57, type: !5781)
!5828 = !DILocation(line: 0, scope: !5777)
!5829 = !DILocation(line: 63, column: 2, scope: !5777)
!5830 = !DILocation(line: 64, column: 1, scope: !5777)
!5831 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5778, file: !5778, line: 82, type: !5832, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !5847)
!5832 = !DISubroutineType(types: !5833)
!5833 = !{null, !5781, !5834}
!5834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5835, size: 32)
!5835 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !5836)
!5836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !5837)
!5837 = !{!5838, !5839, !5840, !5841, !5842, !5843, !5844, !5845, !5846}
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5836, file: !446, line: 26, baseType: !121, size: 32)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5836, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5836, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5836, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5836, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5836, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5836, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5836, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5836, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!5847 = !{!5848, !5849, !5850}
!5848 = !DILocalVariable(name: "esf", arg: 1, scope: !5831, file: !5778, line: 82, type: !5781)
!5849 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5831, file: !5778, line: 82, type: !5834)
!5850 = !DILocalVariable(name: "reason", scope: !5831, file: !5778, line: 88, type: !32)
!5851 = !DILocation(line: 0, scope: !5831)
!5852 = !DILocation(line: 88, column: 35, scope: !5831)
!5853 = !DILocation(line: 108, column: 2, scope: !5831)
!5854 = !DILocation(line: 131, column: 1, scope: !5831)
!5855 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5778, file: !5778, line: 133, type: !5856, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !5858)
!5856 = !DISubroutineType(types: !5857)
!5857 = !{null, !102}
!5858 = !{!5859, !5860, !5861}
!5859 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5855, file: !5778, line: 133, type: !102)
!5860 = !DILocalVariable(name: "ssf_contents", scope: !5855, file: !5778, line: 135, type: !846)
!5861 = !DILocalVariable(name: "oops_esf", scope: !5855, file: !5778, line: 136, type: !5783)
!5862 = !DILocation(line: 0, scope: !5855)
!5863 = !DILocation(line: 136, column: 2, scope: !5855)
!5864 = !DILocation(line: 136, column: 15, scope: !5855)
!5865 = !DILocation(line: 139, column: 22, scope: !5855)
!5866 = !DILocation(line: 139, column: 17, scope: !5855)
!5867 = !DILocation(line: 139, column: 20, scope: !5855)
!5868 = !DILocation(line: 141, column: 2, scope: !5855)
!5869 = !DILocation(line: 142, column: 2, scope: !5855)
!5870 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5871, file: !5871, line: 40, type: !5715, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5872)
!5871 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5872 = !{!5873}
!5873 = !DILocalVariable(name: "irq", arg: 1, scope: !5870, file: !5871, line: 40, type: !32)
!5874 = !DILocation(line: 0, scope: !5870)
!5875 = !DILocation(line: 42, column: 2, scope: !5870)
!5876 = !DILocation(line: 43, column: 1, scope: !5870)
!5877 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !515, file: !515, line: 1684, type: !5878, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5880)
!5878 = !DISubroutineType(types: !5879)
!5879 = !{null, !751}
!5880 = !{!5881}
!5881 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5877, file: !515, line: 1684, type: !751)
!5882 = !DILocation(line: 0, scope: !5877)
!5883 = !DILocation(line: 1686, column: 23, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5877, file: !515, line: 1686, column: 7)
!5885 = !DILocation(line: 1686, column: 7, scope: !5877)
!5886 = !DILocation(line: 1688, column: 5, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5884, file: !515, line: 1687, column: 3)
!5888 = !{i64 2150355386}
!5889 = !DILocation(line: 1689, column: 81, scope: !5887)
!5890 = !DILocation(line: 1689, column: 60, scope: !5887)
!5891 = !DILocation(line: 1689, column: 34, scope: !5887)
!5892 = !DILocation(line: 1689, column: 5, scope: !5887)
!5893 = !DILocation(line: 1689, column: 43, scope: !5887)
!5894 = !DILocation(line: 1690, column: 5, scope: !5887)
!5895 = !{i64 2150355500}
!5896 = !DILocation(line: 1691, column: 3, scope: !5887)
!5897 = !DILocation(line: 1692, column: 1, scope: !5877)
!5898 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5871, file: !5871, line: 45, type: !5715, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5899)
!5899 = !{!5900}
!5900 = !DILocalVariable(name: "irq", arg: 1, scope: !5898, file: !5871, line: 45, type: !32)
!5901 = !DILocation(line: 0, scope: !5898)
!5902 = !DILocation(line: 47, column: 2, scope: !5898)
!5903 = !DILocation(line: 48, column: 1, scope: !5898)
!5904 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !515, file: !515, line: 1722, type: !5878, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5905)
!5905 = !{!5906}
!5906 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5904, file: !515, line: 1722, type: !751)
!5907 = !DILocation(line: 0, scope: !5904)
!5908 = !DILocation(line: 1724, column: 23, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5904, file: !515, line: 1724, column: 7)
!5910 = !DILocation(line: 1724, column: 7, scope: !5904)
!5911 = !DILocation(line: 1726, column: 81, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5909, file: !515, line: 1725, column: 3)
!5913 = !DILocation(line: 1726, column: 60, scope: !5912)
!5914 = !DILocation(line: 1726, column: 34, scope: !5912)
!5915 = !DILocation(line: 1726, column: 5, scope: !5912)
!5916 = !DILocation(line: 1726, column: 43, scope: !5912)
!5917 = !DILocation(line: 271, column: 3, scope: !5918, inlinedAt: !5920)
!5918 = distinct !DISubprogram(name: "__DSB", scope: !5919, file: !5919, line: 269, type: !3157, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !317)
!5919 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5920 = distinct !DILocation(line: 1727, column: 5, scope: !5912)
!5921 = !{i64 2809769}
!5922 = !DILocation(line: 260, column: 3, scope: !5923, inlinedAt: !5924)
!5923 = distinct !DISubprogram(name: "__ISB", scope: !5919, file: !5919, line: 258, type: !3157, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !317)
!5924 = distinct !DILocation(line: 1728, column: 5, scope: !5912)
!5925 = !{i64 2809486}
!5926 = !DILocation(line: 1729, column: 3, scope: !5912)
!5927 = !DILocation(line: 1730, column: 1, scope: !5904)
!5928 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5871, file: !5871, line: 50, type: !5929, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5931)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{!103, !32}
!5931 = !{!5932}
!5932 = !DILocalVariable(name: "irq", arg: 1, scope: !5928, file: !5871, line: 50, type: !32)
!5933 = !DILocation(line: 0, scope: !5928)
!5934 = !DILocation(line: 52, column: 20, scope: !5928)
!5935 = !DILocation(line: 52, column: 9, scope: !5928)
!5936 = !DILocation(line: 52, column: 41, scope: !5928)
!5937 = !DILocation(line: 52, column: 39, scope: !5928)
!5938 = !DILocation(line: 52, column: 2, scope: !5928)
!5939 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5871, file: !5871, line: 64, type: !5940, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5942)
!5940 = !DISubroutineType(types: !5941)
!5941 = !{null, !32, !32, !121}
!5942 = !{!5943, !5944, !5945}
!5943 = !DILocalVariable(name: "irq", arg: 1, scope: !5939, file: !5871, line: 64, type: !32)
!5944 = !DILocalVariable(name: "prio", arg: 2, scope: !5939, file: !5871, line: 64, type: !32)
!5945 = !DILocalVariable(name: "flags", arg: 3, scope: !5939, file: !5871, line: 64, type: !121)
!5946 = !DILocation(line: 0, scope: !5939)
!5947 = !DILocation(line: 83, column: 8, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5949, file: !5871, line: 82, column: 9)
!5949 = distinct !DILexicalBlock(scope: !5939, file: !5871, line: 76, column: 6)
!5950 = !DILocation(line: 95, column: 2, scope: !5939)
!5951 = !DILocation(line: 96, column: 1, scope: !5939)
!5952 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5953, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5955)
!5953 = !DISubroutineType(types: !5954)
!5954 = !{null, !751, !121}
!5955 = !{!5956, !5957}
!5956 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5952, file: !515, line: 1814, type: !751)
!5957 = !DILocalVariable(name: "priority", arg: 2, scope: !5952, file: !515, line: 1814, type: !121)
!5958 = !DILocation(line: 0, scope: !5952)
!5959 = !DILocation(line: 0, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5952, file: !515, line: 1816, column: 7)
!5961 = !DILocation(line: 1816, column: 7, scope: !5952)
!5962 = !DILocation(line: 1824, column: 1, scope: !5952)
!5963 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5871, file: !5871, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5964)
!5964 = !{!5965}
!5965 = !DILocalVariable(name: "unused", arg: 1, scope: !5963, file: !5871, line: 155, type: !13)
!5966 = !DILocation(line: 0, scope: !5963)
!5967 = !DILocation(line: 159, column: 2, scope: !5963)
!5968 = !DILocation(line: 160, column: 1, scope: !5963)
!5969 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5970, file: !5970, line: 87, type: !3157, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !317)
!5970 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5971 = !DILocation(line: 89, column: 2, scope: !5969)
!5972 = !DILocation(line: 90, column: 2, scope: !5969)
!5973 = !DILocation(line: 91, column: 1, scope: !5969)
!5974 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5970, file: !5970, line: 23, type: !3157, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!5975 = !DISubprogram(name: "z_arm_int_exit", scope: !5976, file: !5976, line: 153, type: !3157, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!5976 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5977 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5978, file: !5978, line: 256, type: !3157, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !317)
!5978 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5979 = !DILocation(line: 258, column: 2, scope: !5977)
!5980 = !DILocation(line: 260, column: 2, scope: !5977)
!5981 = !DILocation(line: 262, column: 2, scope: !5977)
!5982 = !DILocation(line: 263, column: 2, scope: !5977)
!5983 = !DILocation(line: 267, column: 2, scope: !5977)
!5984 = !DILocation(line: 268, column: 2, scope: !5977)
!5985 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5978, file: !5978, line: 53, type: !3157, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !317)
!5986 = !DILocation(line: 55, column: 12, scope: !5985)
!5987 = !DILocation(line: 271, column: 3, scope: !5988, inlinedAt: !5989)
!5988 = distinct !DISubprogram(name: "__DSB", scope: !5919, file: !5919, line: 269, type: !3157, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !317)
!5989 = distinct !DILocation(line: 56, column: 2, scope: !5985)
!5990 = !{i64 2808440}
!5991 = !DILocation(line: 260, column: 3, scope: !5992, inlinedAt: !5993)
!5992 = distinct !DISubprogram(name: "__ISB", scope: !5919, file: !5919, line: 258, type: !3157, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !317)
!5993 = distinct !DILocation(line: 57, column: 2, scope: !5985)
!5994 = !{i64 2808157}
!5995 = !DILocation(line: 58, column: 1, scope: !5985)
!5996 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !5978, file: !5978, line: 96, type: !3157, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !317)
!5997 = !DILocation(line: 103, column: 13, scope: !5996)
!5998 = !DILocation(line: 975, column: 3, scope: !5999, inlinedAt: !6004)
!5999 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5919, file: !5919, line: 971, type: !6000, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !6002)
!6000 = !DISubroutineType(types: !6001)
!6001 = !{!121}
!6002 = !{!6003}
!6003 = !DILocalVariable(name: "result", scope: !5999, file: !5919, line: 973, type: !121)
!6004 = distinct !DILocation(line: 189, column: 16, scope: !5996)
!6005 = !{i64 2829270}
!6006 = !DILocation(line: 0, scope: !5999, inlinedAt: !6004)
!6007 = !DILocation(line: 189, column: 32, scope: !5996)
!6008 = !DILocalVariable(name: "control", arg: 1, scope: !6009, file: !5919, line: 1001, type: !121)
!6009 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5919, file: !5919, line: 1001, type: !6010, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !6012)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{null, !121}
!6012 = !{!6008}
!6013 = !DILocation(line: 0, scope: !6009, inlinedAt: !6014)
!6014 = distinct !DILocation(line: 189, column: 2, scope: !5996)
!6015 = !DILocation(line: 1003, column: 3, scope: !6009, inlinedAt: !6014)
!6016 = !{i64 2829990}
!6017 = !DILocation(line: 260, column: 3, scope: !5992, inlinedAt: !6018)
!6018 = distinct !DILocation(line: 1004, column: 3, scope: !6009, inlinedAt: !6014)
!6019 = !DILocation(line: 191, column: 1, scope: !5996)
!6020 = distinct !DISubprogram(name: "arch_swap", scope: !6021, file: !6021, line: 33, type: !5929, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6022)
!6021 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6022 = !{!6023}
!6023 = !DILocalVariable(name: "key", arg: 1, scope: !6020, file: !6021, line: 33, type: !32)
!6024 = !DILocation(line: 0, scope: !6020)
!6025 = !DILocation(line: 36, column: 2, scope: !6020)
!6026 = !DILocation(line: 36, column: 17, scope: !6020)
!6027 = !DILocation(line: 36, column: 25, scope: !6020)
!6028 = !DILocation(line: 37, column: 37, scope: !6020)
!6029 = !DILocation(line: 37, column: 17, scope: !6020)
!6030 = !DILocation(line: 37, column: 35, scope: !6020)
!6031 = !DILocation(line: 41, column: 12, scope: !6020)
!6032 = !DILocalVariable(name: "key", arg: 1, scope: !6033, file: !5704, line: 84, type: !32)
!6033 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5704, file: !5704, line: 84, type: !5715, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6034)
!6034 = !{!6032}
!6035 = !DILocation(line: 0, scope: !6033, inlinedAt: !6036)
!6036 = distinct !DILocation(line: 44, column: 2, scope: !6020)
!6037 = !DILocation(line: 95, column: 2, scope: !6033, inlinedAt: !6036)
!6038 = !{i64 1947636}
!6039 = !DILocation(line: 53, column: 9, scope: !6020)
!6040 = !DILocation(line: 53, column: 24, scope: !6020)
!6041 = !DILocation(line: 53, column: 2, scope: !6020)
!6042 = distinct !DISubprogram(name: "arch_new_thread", scope: !6043, file: !6043, line: 56, type: !6044, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6151)
!6043 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6044 = !DISubroutineType(types: !6045)
!6045 = !{null, !6046, !6146, !344, !3471, !102, !102, !102}
!6046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6047, size: 32)
!6047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6048)
!6048 = !{!6049, !6107, !6119, !6120, !6121, !6122, !6128, !6141}
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6047, file: !379, line: 247, baseType: !6050, size: 384)
!6050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6051)
!6051 = !{!6052, !6076, !6083, !6084, !6085, !6094, !6095, !6096}
!6052 = !DIDerivedType(tag: DW_TAG_member, scope: !6050, file: !379, line: 60, baseType: !6053, size: 64)
!6053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6050, file: !379, line: 60, size: 64, elements: !6054)
!6054 = !{!6055, !6070}
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6053, file: !379, line: 61, baseType: !6056, size: 64)
!6056 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6057)
!6057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6058)
!6058 = !{!6059, !6065}
!6059 = !DIDerivedType(tag: DW_TAG_member, scope: !6057, file: !325, line: 38, baseType: !6060, size: 32)
!6060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6057, file: !325, line: 38, size: 32, elements: !6061)
!6061 = !{!6062, !6064}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6060, file: !325, line: 39, baseType: !6063, size: 32)
!6063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6057, size: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6060, file: !325, line: 40, baseType: !6063, size: 32)
!6065 = !DIDerivedType(tag: DW_TAG_member, scope: !6057, file: !325, line: 42, baseType: !6066, size: 32, offset: 32)
!6066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6057, file: !325, line: 42, size: 32, elements: !6067)
!6067 = !{!6068, !6069}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6066, file: !325, line: 43, baseType: !6063, size: 32)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6066, file: !325, line: 44, baseType: !6063, size: 32)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6053, file: !379, line: 62, baseType: !6071, size: 64)
!6071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6072)
!6072 = !{!6073}
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6071, file: !404, line: 50, baseType: !6074, size: 64)
!6074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6075, size: 64, elements: !363)
!6075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6071, size: 32)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6050, file: !379, line: 68, baseType: !6077, size: 32, offset: 64)
!6077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6078, size: 32)
!6078 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6079)
!6079 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6080)
!6080 = !{!6081}
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6079, file: !320, line: 232, baseType: !6082, size: 64)
!6082 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6057)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6050, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6050, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6085 = !DIDerivedType(tag: DW_TAG_member, scope: !6050, file: !379, line: 90, baseType: !6086, size: 16, offset: 112)
!6086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6050, file: !379, line: 90, size: 16, elements: !6087)
!6087 = !{!6088, !6093}
!6088 = !DIDerivedType(tag: DW_TAG_member, scope: !6086, file: !379, line: 91, baseType: !6089, size: 16)
!6089 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6086, file: !379, line: 91, size: 16, elements: !6090)
!6090 = !{!6091, !6092}
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6089, file: !379, line: 96, baseType: !425, size: 8)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6089, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6086, file: !379, line: 100, baseType: !429, size: 16)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6050, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6050, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6050, file: !379, line: 131, baseType: !6097, size: 192, offset: 192)
!6097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6098)
!6098 = !{!6099, !6100, !6106}
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6097, file: !320, line: 245, baseType: !6056, size: 64)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6097, file: !320, line: 246, baseType: !6101, size: 32, offset: 64)
!6101 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6102)
!6102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6103, size: 32)
!6103 = !DISubroutineType(types: !6104)
!6104 = !{null, !6105}
!6105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6097, size: 32)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6097, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6047, file: !379, line: 250, baseType: !6108, size: 288, offset: 384)
!6108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6109)
!6109 = !{!6110, !6111, !6112, !6113, !6114, !6115, !6116, !6117, !6118}
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6108, file: !446, line: 26, baseType: !121, size: 32)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6108, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6108, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6108, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6108, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6108, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6108, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6108, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6108, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6047, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6047, file: !379, line: 256, baseType: !6078, size: 64, offset: 704)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6047, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6047, file: !379, line: 300, baseType: !6123, size: 96, offset: 800)
!6123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6124)
!6124 = !{!6125, !6126, !6127}
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6123, file: !379, line: 153, baseType: !22, size: 32)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6123, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6123, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6047, file: !379, line: 325, baseType: !6129, size: 32, offset: 896)
!6129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6130, size: 32)
!6130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6131)
!6131 = !{!6132, !6138, !6139}
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6130, file: !296, line: 5074, baseType: !6133, size: 96)
!6133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6134)
!6134 = !{!6135, !6136, !6137}
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6133, file: !472, line: 57, baseType: !475, size: 32)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6133, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6133, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6130, file: !296, line: 5075, baseType: !6078, size: 64, offset: 96)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6130, file: !296, line: 5076, baseType: !6140, offset: 160)
!6140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6047, file: !379, line: 343, baseType: !6142, size: 64, offset: 928)
!6142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6143)
!6143 = !{!6144, !6145}
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6142, file: !446, line: 63, baseType: !121, size: 32)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6142, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6147, size: 32)
!6147 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3472, line: 44, baseType: !6148)
!6148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2140, line: 47, size: 8, elements: !6149)
!6149 = !{!6150}
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6148, file: !2140, line: 48, baseType: !146, size: 8)
!6151 = !{!6152, !6153, !6154, !6155, !6156, !6157, !6158, !6159}
!6152 = !DILocalVariable(name: "thread", arg: 1, scope: !6042, file: !6043, line: 56, type: !6046)
!6153 = !DILocalVariable(name: "stack", arg: 2, scope: !6042, file: !6043, line: 56, type: !6146)
!6154 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6042, file: !6043, line: 57, type: !344)
!6155 = !DILocalVariable(name: "entry", arg: 4, scope: !6042, file: !6043, line: 57, type: !3471)
!6156 = !DILocalVariable(name: "p1", arg: 5, scope: !6042, file: !6043, line: 58, type: !102)
!6157 = !DILocalVariable(name: "p2", arg: 6, scope: !6042, file: !6043, line: 58, type: !102)
!6158 = !DILocalVariable(name: "p3", arg: 7, scope: !6042, file: !6043, line: 58, type: !102)
!6159 = !DILocalVariable(name: "iframe", scope: !6042, file: !6043, line: 60, type: !2693)
!6160 = !DILocation(line: 0, scope: !6042)
!6161 = !DILocation(line: 85, column: 11, scope: !6042)
!6162 = !DILocation(line: 93, column: 10, scope: !6042)
!6163 = !DILocation(line: 98, column: 13, scope: !6042)
!6164 = !DILocation(line: 100, column: 15, scope: !6042)
!6165 = !DILocation(line: 100, column: 10, scope: !6042)
!6166 = !DILocation(line: 100, column: 13, scope: !6042)
!6167 = !DILocation(line: 101, column: 15, scope: !6042)
!6168 = !DILocation(line: 101, column: 10, scope: !6042)
!6169 = !DILocation(line: 101, column: 13, scope: !6042)
!6170 = !DILocation(line: 102, column: 15, scope: !6042)
!6171 = !DILocation(line: 102, column: 10, scope: !6042)
!6172 = !DILocation(line: 102, column: 13, scope: !6042)
!6173 = !DILocation(line: 103, column: 15, scope: !6042)
!6174 = !DILocation(line: 103, column: 10, scope: !6042)
!6175 = !DILocation(line: 103, column: 13, scope: !6042)
!6176 = !DILocation(line: 106, column: 10, scope: !6042)
!6177 = !DILocation(line: 106, column: 15, scope: !6042)
!6178 = !DILocation(line: 122, column: 29, scope: !6042)
!6179 = !DILocation(line: 122, column: 23, scope: !6042)
!6180 = !DILocation(line: 122, column: 27, scope: !6042)
!6181 = !DILocation(line: 123, column: 15, scope: !6042)
!6182 = !DILocation(line: 123, column: 23, scope: !6042)
!6183 = !DILocation(line: 143, column: 1, scope: !6042)
!6184 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6043, file: !6043, line: 385, type: !6185, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6188)
!6185 = !DISubroutineType(types: !6186)
!6186 = !{!121, !6187, !6187}
!6187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!6188 = !{!6189, !6190, !6191, !6194}
!6189 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6184, file: !6043, line: 385, type: !6187)
!6190 = !DILocalVariable(name: "psp", arg: 2, scope: !6184, file: !6043, line: 385, type: !6187)
!6191 = !DILocalVariable(name: "thread", scope: !6184, file: !6043, line: 388, type: !6192)
!6192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6193, size: 32)
!6193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6047)
!6194 = !DILocalVariable(name: "guard_len", scope: !6184, file: !6043, line: 405, type: !121)
!6195 = !DILocation(line: 0, scope: !6184)
!6196 = !DILocation(line: 388, column: 34, scope: !6184)
!6197 = !DILocation(line: 390, column: 13, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6184, file: !6043, line: 390, column: 6)
!6199 = !DILocation(line: 390, column: 6, scope: !6184)
!6200 = !DILocation(line: 438, column: 6, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6184, file: !6043, line: 438, column: 6)
!6202 = !DILocation(line: 438, column: 6, scope: !6184)
!6203 = !DILocation(line: 442, column: 3, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6201, file: !6043, line: 440, column: 22)
!6205 = !DILocation(line: 455, column: 1, scope: !6184)
!6206 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6043, file: !6043, line: 530, type: !6207, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6209)
!6207 = !DISubroutineType(types: !6208)
!6208 = !{null, !6046, !344, !3471}
!6209 = !{!6210, !6211, !6212}
!6210 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6206, file: !6043, line: 530, type: !6046)
!6211 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6206, file: !6043, line: 530, type: !344)
!6212 = !DILocalVariable(name: "_main", arg: 3, scope: !6206, file: !6043, line: 531, type: !3471)
!6213 = !DILocation(line: 0, scope: !6206)
!6214 = !DILocation(line: 535, column: 11, scope: !6206)
!6215 = !DILocation(line: 560, column: 2, scope: !6206)
!6216 = !DILocation(line: 576, column: 2, scope: !6206)
!6217 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6218 = !DILocation(line: 603, column: 2, scope: !6206)
!6219 = distinct !DISubprogram(name: "z_arm_fault", scope: !6220, file: !6220, line: 1036, type: !6221, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6236)
!6220 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6221 = !DISubroutineType(types: !6222)
!6222 = !{null, !121, !121, !121, !6223}
!6223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6224, size: 32)
!6224 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !6225)
!6225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6226)
!6226 = !{!6227, !6228, !6229, !6230, !6231, !6232, !6233, !6234, !6235}
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6225, file: !446, line: 26, baseType: !121, size: 32)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6225, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6225, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6225, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6225, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6225, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6225, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6225, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6225, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6236 = !{!6237, !6238, !6239, !6240, !6241, !6242, !6243, !6244, !6245, !6246}
!6237 = !DILocalVariable(name: "msp", arg: 1, scope: !6219, file: !6220, line: 1036, type: !121)
!6238 = !DILocalVariable(name: "psp", arg: 2, scope: !6219, file: !6220, line: 1036, type: !121)
!6239 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6219, file: !6220, line: 1036, type: !121)
!6240 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6219, file: !6220, line: 1037, type: !6223)
!6241 = !DILocalVariable(name: "reason", scope: !6219, file: !6220, line: 1039, type: !121)
!6242 = !DILocalVariable(name: "fault", scope: !6219, file: !6220, line: 1040, type: !103)
!6243 = !DILocalVariable(name: "recoverable", scope: !6219, file: !6220, line: 1041, type: !157)
!6244 = !DILocalVariable(name: "nested_exc", scope: !6219, file: !6220, line: 1041, type: !157)
!6245 = !DILocalVariable(name: "esf", scope: !6219, file: !6220, line: 1042, type: !2761)
!6246 = !DILocalVariable(name: "esf_copy", scope: !6219, file: !6220, line: 1047, type: !2762)
!6247 = !DILocation(line: 0, scope: !6219)
!6248 = !DILocation(line: 1040, column: 19, scope: !6219)
!6249 = !DILocation(line: 1040, column: 24, scope: !6219)
!6250 = !DILocation(line: 1041, column: 2, scope: !6219)
!6251 = !DILocation(line: 1047, column: 2, scope: !6219)
!6252 = !DILocation(line: 1047, column: 15, scope: !6219)
!6253 = !DILocalVariable(name: "key", arg: 1, scope: !6254, file: !5704, line: 84, type: !32)
!6254 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5704, file: !5704, line: 84, type: !5715, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6255)
!6255 = !{!6253}
!6256 = !DILocation(line: 0, scope: !6254, inlinedAt: !6257)
!6257 = distinct !DILocation(line: 1050, column: 2, scope: !6219)
!6258 = !DILocation(line: 95, column: 2, scope: !6254, inlinedAt: !6257)
!6259 = !{i64 1980880}
!6260 = !DILocation(line: 1055, column: 9, scope: !6219)
!6261 = !DILocation(line: 1063, column: 11, scope: !6219)
!6262 = !DILocation(line: 1064, column: 6, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6219, file: !6220, line: 1064, column: 6)
!6264 = !{i8 0, i8 2}
!6265 = !DILocation(line: 1064, column: 6, scope: !6219)
!6266 = !DILocation(line: 1070, column: 20, scope: !6219)
!6267 = !DILocation(line: 1070, column: 2, scope: !6219)
!6268 = !DILocation(line: 1089, column: 6, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6219, file: !6220, line: 1089, column: 6)
!6270 = !DILocation(line: 0, scope: !6269)
!6271 = !DILocation(line: 1089, column: 6, scope: !6219)
!6272 = !DILocation(line: 1090, column: 28, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6274, file: !6220, line: 1090, column: 7)
!6274 = distinct !DILexicalBlock(scope: !6269, file: !6220, line: 1089, column: 18)
!6275 = !DILocation(line: 1090, column: 44, scope: !6273)
!6276 = !DILocation(line: 1090, column: 7, scope: !6274)
!6277 = !DILocation(line: 1091, column: 24, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6273, file: !6220, line: 1090, column: 50)
!6279 = !DILocation(line: 1092, column: 3, scope: !6278)
!6280 = !DILocation(line: 1094, column: 23, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6269, file: !6220, line: 1093, column: 9)
!6282 = !DILocation(line: 1097, column: 2, scope: !6219)
!6283 = !DILocation(line: 1098, column: 1, scope: !6219)
!6284 = distinct !DISubprogram(name: "get_esf", scope: !6220, file: !6220, line: 894, type: !6285, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6288)
!6285 = !DISubroutineType(types: !6286)
!6286 = !{!2761, !121, !121, !121, !6287}
!6287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!6288 = !{!6289, !6290, !6291, !6292, !6293, !6294}
!6289 = !DILocalVariable(name: "msp", arg: 1, scope: !6284, file: !6220, line: 894, type: !121)
!6290 = !DILocalVariable(name: "psp", arg: 2, scope: !6284, file: !6220, line: 894, type: !121)
!6291 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6284, file: !6220, line: 894, type: !121)
!6292 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6284, file: !6220, line: 895, type: !6287)
!6293 = !DILocalVariable(name: "alternative_state_exc", scope: !6284, file: !6220, line: 897, type: !157)
!6294 = !DILocalVariable(name: "ptr_esf", scope: !6284, file: !6220, line: 898, type: !2761)
!6295 = !DILocation(line: 0, scope: !6284)
!6296 = !DILocation(line: 900, column: 14, scope: !6284)
!6297 = !DILocation(line: 902, column: 49, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6284, file: !6220, line: 902, column: 6)
!6299 = !DILocation(line: 902, column: 6, scope: !6284)
!6300 = !DILocation(line: 983, column: 18, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6284, file: !6220, line: 983, column: 6)
!6302 = !DILocation(line: 991, column: 7, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6304, file: !6220, line: 990, column: 30)
!6304 = distinct !DILexicalBlock(scope: !6284, file: !6220, line: 990, column: 6)
!6305 = !DILocation(line: 998, column: 16, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !6220, line: 995, column: 10)
!6307 = distinct !DILexicalBlock(scope: !6303, file: !6220, line: 991, column: 7)
!6308 = !DILocation(line: 1002, column: 2, scope: !6284)
!6309 = !DILocation(line: 1003, column: 1, scope: !6284)
!6310 = distinct !DISubprogram(name: "fault_handle", scope: !6220, file: !6220, line: 786, type: !6311, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6313)
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!121, !2761, !103, !6287}
!6313 = !{!6314, !6315, !6316, !6317}
!6314 = !DILocalVariable(name: "esf", arg: 1, scope: !6310, file: !6220, line: 786, type: !2761)
!6315 = !DILocalVariable(name: "fault", arg: 2, scope: !6310, file: !6220, line: 786, type: !103)
!6316 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6310, file: !6220, line: 786, type: !6287)
!6317 = !DILocalVariable(name: "reason", scope: !6310, file: !6220, line: 788, type: !121)
!6318 = !DILocation(line: 0, scope: !6310)
!6319 = !DILocation(line: 790, column: 15, scope: !6310)
!6320 = !DILocation(line: 792, column: 2, scope: !6310)
!6321 = !DILocation(line: 794, column: 12, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6310, file: !6220, line: 792, column: 17)
!6323 = !DILocation(line: 795, column: 3, scope: !6322)
!6324 = !DILocation(line: 800, column: 12, scope: !6322)
!6325 = !DILocation(line: 801, column: 3, scope: !6322)
!6326 = !DILocation(line: 803, column: 12, scope: !6322)
!6327 = !DILocation(line: 804, column: 3, scope: !6322)
!6328 = !DILocation(line: 806, column: 12, scope: !6322)
!6329 = !DILocation(line: 807, column: 3, scope: !6322)
!6330 = !DILocation(line: 814, column: 3, scope: !6322)
!6331 = !DILocation(line: 815, column: 3, scope: !6322)
!6332 = !DILocation(line: 829, column: 2, scope: !6310)
!6333 = distinct !DISubprogram(name: "hard_fault", scope: !6220, file: !6220, line: 709, type: !6334, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6336)
!6334 = !DISubroutineType(types: !6335)
!6335 = !{!121, !2761, !6287}
!6336 = !{!6337, !6338, !6339}
!6337 = !DILocalVariable(name: "esf", arg: 1, scope: !6333, file: !6220, line: 709, type: !2761)
!6338 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6333, file: !6220, line: 709, type: !6287)
!6339 = !DILocalVariable(name: "reason", scope: !6333, file: !6220, line: 711, type: !121)
!6340 = !DILocation(line: 0, scope: !6333)
!6341 = !DILocation(line: 732, column: 15, scope: !6333)
!6342 = !DILocation(line: 734, column: 12, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6333, file: !6220, line: 734, column: 6)
!6344 = !DILocation(line: 734, column: 17, scope: !6343)
!6345 = !DILocation(line: 734, column: 41, scope: !6343)
!6346 = !DILocation(line: 734, column: 6, scope: !6333)
!6347 = !DILocation(line: 736, column: 19, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6343, file: !6220, line: 736, column: 13)
!6349 = !DILocation(line: 736, column: 49, scope: !6348)
!6350 = !DILocation(line: 736, column: 13, scope: !6343)
!6351 = !DILocation(line: 738, column: 19, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6348, file: !6220, line: 738, column: 13)
!6353 = !DILocation(line: 738, column: 24, scope: !6352)
!6354 = !DILocation(line: 738, column: 47, scope: !6352)
!6355 = !DILocation(line: 738, column: 13, scope: !6348)
!6356 = !DILocation(line: 740, column: 7, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6358, file: !6220, line: 740, column: 7)
!6358 = distinct !DILexicalBlock(scope: !6352, file: !6220, line: 738, column: 53)
!6359 = !DILocation(line: 740, column: 7, scope: !6358)
!6360 = !DILocation(line: 742, column: 24, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6357, file: !6220, line: 740, column: 38)
!6362 = !DILocation(line: 743, column: 3, scope: !6361)
!6363 = !DILocation(line: 743, column: 20, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6357, file: !6220, line: 743, column: 14)
!6365 = !DILocation(line: 743, column: 25, scope: !6364)
!6366 = !DILocation(line: 743, column: 52, scope: !6364)
!6367 = !DILocation(line: 743, column: 14, scope: !6357)
!6368 = !DILocation(line: 744, column: 13, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6364, file: !6220, line: 743, column: 58)
!6370 = !DILocation(line: 745, column: 3, scope: !6369)
!6371 = !DILocation(line: 745, column: 20, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6364, file: !6220, line: 745, column: 14)
!6373 = !DILocation(line: 745, column: 25, scope: !6372)
!6374 = !DILocation(line: 745, column: 52, scope: !6372)
!6375 = !DILocation(line: 745, column: 14, scope: !6364)
!6376 = !DILocation(line: 746, column: 13, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6372, file: !6220, line: 745, column: 58)
!6378 = !DILocation(line: 747, column: 3, scope: !6377)
!6379 = !DILocation(line: 747, column: 20, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6372, file: !6220, line: 747, column: 14)
!6381 = !DILocation(line: 747, column: 52, scope: !6380)
!6382 = !DILocation(line: 747, column: 14, scope: !6372)
!6383 = !DILocation(line: 748, column: 13, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6380, file: !6220, line: 747, column: 58)
!6385 = !DILocation(line: 753, column: 3, scope: !6384)
!6386 = !DILocation(line: 766, column: 2, scope: !6333)
!6387 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6220, file: !6220, line: 229, type: !6311, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6388)
!6388 = !{!6389, !6390, !6391, !6392, !6393, !6394, !6397}
!6389 = !DILocalVariable(name: "esf", arg: 1, scope: !6387, file: !6220, line: 229, type: !2761)
!6390 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6387, file: !6220, line: 229, type: !103)
!6391 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6387, file: !6220, line: 230, type: !6287)
!6392 = !DILocalVariable(name: "reason", scope: !6387, file: !6220, line: 232, type: !121)
!6393 = !DILocalVariable(name: "mmfar", scope: !6387, file: !6220, line: 233, type: !121)
!6394 = !DILocalVariable(name: "temp", scope: !6395, file: !6220, line: 254, type: !121)
!6395 = distinct !DILexicalBlock(scope: !6396, file: !6220, line: 244, column: 48)
!6396 = distinct !DILexicalBlock(scope: !6387, file: !6220, line: 244, column: 6)
!6397 = !DILocalVariable(name: "min_stack_ptr", scope: !6398, file: !6220, line: 309, type: !121)
!6398 = distinct !DILexicalBlock(scope: !6399, file: !6220, line: 308, column: 43)
!6399 = distinct !DILexicalBlock(scope: !6400, file: !6220, line: 308, column: 7)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !6220, line: 289, column: 40)
!6401 = distinct !DILexicalBlock(scope: !6387, file: !6220, line: 288, column: 6)
!6402 = !DILocation(line: 0, scope: !6387)
!6403 = !DILocation(line: 237, column: 12, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6387, file: !6220, line: 237, column: 6)
!6405 = !DILocation(line: 241, column: 12, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6387, file: !6220, line: 241, column: 6)
!6407 = !DILocation(line: 244, column: 12, scope: !6396)
!6408 = !DILocation(line: 244, column: 17, scope: !6396)
!6409 = !DILocation(line: 244, column: 42, scope: !6396)
!6410 = !DILocation(line: 244, column: 6, scope: !6387)
!6411 = !DILocation(line: 254, column: 24, scope: !6395)
!6412 = !DILocation(line: 0, scope: !6395)
!6413 = !DILocation(line: 256, column: 13, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6395, file: !6220, line: 256, column: 7)
!6415 = !DILocation(line: 256, column: 18, scope: !6414)
!6416 = !DILocation(line: 256, column: 44, scope: !6414)
!6417 = !DILocation(line: 256, column: 7, scope: !6395)
!6418 = !DILocation(line: 259, column: 24, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !6220, line: 259, column: 8)
!6420 = distinct !DILexicalBlock(scope: !6414, file: !6220, line: 256, column: 50)
!6421 = !DILocation(line: 259, column: 8, scope: !6420)
!6422 = !DILocation(line: 261, column: 15, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6419, file: !6220, line: 259, column: 30)
!6424 = !DILocation(line: 262, column: 4, scope: !6423)
!6425 = !DILocation(line: 265, column: 12, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6387, file: !6220, line: 265, column: 6)
!6427 = !DILocation(line: 269, column: 12, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6387, file: !6220, line: 269, column: 6)
!6429 = !DILocation(line: 288, column: 12, scope: !6401)
!6430 = !DILocation(line: 288, column: 17, scope: !6401)
!6431 = !DILocation(line: 288, column: 41, scope: !6401)
!6432 = !DILocation(line: 289, column: 9, scope: !6401)
!6433 = !DILocation(line: 289, column: 14, scope: !6401)
!6434 = !DILocation(line: 288, column: 6, scope: !6387)
!6435 = !DILocation(line: 308, column: 12, scope: !6399)
!6436 = !DILocation(line: 308, column: 17, scope: !6399)
!6437 = !DILocation(line: 308, column: 7, scope: !6400)
!6438 = !DILocation(line: 310, column: 6, scope: !6398)
!6439 = !DILocation(line: 309, column: 29, scope: !6398)
!6440 = !DILocation(line: 0, scope: !6398)
!6441 = !DILocation(line: 312, column: 8, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6398, file: !6220, line: 312, column: 8)
!6443 = !DILocation(line: 312, column: 8, scope: !6398)
!6444 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6445, file: !5919, line: 1099, type: !121)
!6445 = distinct !DISubprogram(name: "__set_PSP", scope: !5919, file: !5919, line: 1099, type: !6010, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6446)
!6446 = !{!6444}
!6447 = !DILocation(line: 0, scope: !6445, inlinedAt: !6448)
!6448 = distinct !DILocation(line: 338, column: 5, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6442, file: !6220, line: 312, column: 23)
!6450 = !DILocation(line: 1101, column: 3, scope: !6445, inlinedAt: !6448)
!6451 = !{i64 2859409}
!6452 = !DILocation(line: 341, column: 4, scope: !6449)
!6453 = !DILocation(line: 360, column: 12, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6387, file: !6220, line: 360, column: 6)
!6455 = !DILocation(line: 360, column: 17, scope: !6454)
!6456 = !DILocation(line: 360, column: 41, scope: !6454)
!6457 = !DILocation(line: 360, column: 6, scope: !6387)
!6458 = !DILocation(line: 361, column: 14, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6454, file: !6220, line: 360, column: 47)
!6460 = !DILocation(line: 362, column: 2, scope: !6459)
!6461 = !DILocation(line: 366, column: 12, scope: !6387)
!6462 = !DILocation(line: 369, column: 15, scope: !6387)
!6463 = !DILocation(line: 371, column: 2, scope: !6387)
!6464 = distinct !DISubprogram(name: "bus_fault", scope: !6220, file: !6220, line: 383, type: !6465, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6467)
!6465 = !DISubroutineType(types: !6466)
!6466 = !{!103, !2761, !103, !6287}
!6467 = !{!6468, !6469, !6470, !6471, !6472}
!6468 = !DILocalVariable(name: "esf", arg: 1, scope: !6464, file: !6220, line: 383, type: !2761)
!6469 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6464, file: !6220, line: 383, type: !103)
!6470 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6464, file: !6220, line: 383, type: !6287)
!6471 = !DILocalVariable(name: "reason", scope: !6464, file: !6220, line: 385, type: !121)
!6472 = !DILocalVariable(name: "bfar", scope: !6473, file: !6220, line: 405, type: !121)
!6473 = distinct !DILexicalBlock(scope: !6474, file: !6220, line: 395, column: 42)
!6474 = distinct !DILexicalBlock(scope: !6464, file: !6220, line: 395, column: 6)
!6475 = !DILocation(line: 0, scope: !6464)
!6476 = !DILocation(line: 389, column: 11, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6464, file: !6220, line: 389, column: 6)
!6478 = !DILocation(line: 392, column: 11, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6464, file: !6220, line: 392, column: 6)
!6480 = !DILocation(line: 395, column: 11, scope: !6474)
!6481 = !DILocation(line: 395, column: 16, scope: !6474)
!6482 = !DILocation(line: 395, column: 6, scope: !6464)
!6483 = !DILocation(line: 405, column: 3, scope: !6473)
!6484 = !DILocation(line: 0, scope: !6473)
!6485 = !DILocation(line: 407, column: 13, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6473, file: !6220, line: 407, column: 7)
!6487 = !DILocation(line: 407, column: 18, scope: !6486)
!6488 = !DILocation(line: 407, column: 44, scope: !6486)
!6489 = !DILocation(line: 407, column: 7, scope: !6473)
!6490 = !DILocation(line: 411, column: 15, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !6220, line: 409, column: 30)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !6220, line: 409, column: 8)
!6493 = distinct !DILexicalBlock(scope: !6486, file: !6220, line: 407, column: 50)
!6494 = !DILocation(line: 412, column: 4, scope: !6491)
!6495 = !DILocation(line: 415, column: 11, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6464, file: !6220, line: 415, column: 6)
!6497 = !DILocation(line: 418, column: 12, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6464, file: !6220, line: 418, column: 6)
!6499 = !DILocation(line: 418, column: 17, scope: !6498)
!6500 = !DILocation(line: 418, column: 41, scope: !6498)
!6501 = !DILocation(line: 418, column: 6, scope: !6464)
!6502 = !DILocation(line: 423, column: 18, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6498, file: !6220, line: 423, column: 13)
!6504 = !DILocation(line: 524, column: 12, scope: !6464)
!6505 = !DILocation(line: 526, column: 15, scope: !6464)
!6506 = !DILocation(line: 528, column: 2, scope: !6464)
!6507 = distinct !DISubprogram(name: "usage_fault", scope: !6220, file: !6220, line: 539, type: !6508, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6512)
!6508 = !DISubroutineType(types: !6509)
!6509 = !{!121, !6510}
!6510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6511, size: 32)
!6511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2762)
!6512 = !{!6513, !6514}
!6513 = !DILocalVariable(name: "esf", arg: 1, scope: !6507, file: !6220, line: 539, type: !6510)
!6514 = !DILocalVariable(name: "reason", scope: !6507, file: !6220, line: 541, type: !121)
!6515 = !DILocation(line: 0, scope: !6507)
!6516 = !DILocation(line: 546, column: 12, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6507, file: !6220, line: 546, column: 6)
!6518 = !DILocation(line: 549, column: 12, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6507, file: !6220, line: 549, column: 6)
!6520 = !DILocation(line: 567, column: 12, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6507, file: !6220, line: 567, column: 6)
!6522 = !DILocation(line: 570, column: 12, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6507, file: !6220, line: 570, column: 6)
!6524 = !DILocation(line: 573, column: 12, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6507, file: !6220, line: 573, column: 6)
!6526 = !DILocation(line: 576, column: 12, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6507, file: !6220, line: 576, column: 6)
!6528 = !DILocation(line: 581, column: 12, scope: !6507)
!6529 = !DILocation(line: 583, column: 2, scope: !6507)
!6530 = distinct !DISubprogram(name: "debug_monitor", scope: !6220, file: !6220, line: 632, type: !6531, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6533)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{null, !2761, !6287}
!6533 = !{!6534, !6535}
!6534 = !DILocalVariable(name: "esf", arg: 1, scope: !6530, file: !6220, line: 632, type: !2761)
!6535 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6530, file: !6220, line: 632, type: !6287)
!6536 = !DILocation(line: 0, scope: !6530)
!6537 = !DILocation(line: 634, column: 15, scope: !6530)
!6538 = !DILocation(line: 652, column: 1, scope: !6530)
!6539 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6220, file: !6220, line: 658, type: !6540, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6542)
!6540 = !DISubroutineType(types: !6541)
!6541 = !{!157, !2761}
!6542 = !{!6543, !6544, !6545}
!6543 = !DILocalVariable(name: "esf", arg: 1, scope: !6539, file: !6220, line: 658, type: !2761)
!6544 = !DILocalVariable(name: "ret_addr", scope: !6539, file: !6220, line: 660, type: !2535)
!6545 = !DILocalVariable(name: "fault_insn", scope: !6539, file: !6220, line: 686, type: !429)
!6546 = !DILocation(line: 0, scope: !6539)
!6547 = !DILocation(line: 660, column: 46, scope: !6539)
!6548 = !DILocation(line: 660, column: 23, scope: !6539)
!6549 = !DILocation(line: 682, column: 11, scope: !6539)
!6550 = !DILocation(line: 271, column: 3, scope: !6551, inlinedAt: !6552)
!6551 = distinct !DISubprogram(name: "__DSB", scope: !5919, file: !5919, line: 269, type: !3157, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !317)
!6552 = distinct !DILocation(line: 683, column: 2, scope: !6539)
!6553 = !{i64 2835544}
!6554 = !DILocation(line: 260, column: 3, scope: !6555, inlinedAt: !6556)
!6555 = distinct !DISubprogram(name: "__ISB", scope: !5919, file: !5919, line: 258, type: !3157, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !317)
!6556 = distinct !DILocation(line: 684, column: 2, scope: !6539)
!6557 = !{i64 2835261}
!6558 = !DILocation(line: 686, column: 35, scope: !6539)
!6559 = !DILocation(line: 686, column: 24, scope: !6539)
!6560 = !DILocation(line: 688, column: 11, scope: !6539)
!6561 = !DILocation(line: 271, column: 3, scope: !6551, inlinedAt: !6562)
!6562 = distinct !DILocation(line: 689, column: 2, scope: !6539)
!6563 = !DILocation(line: 260, column: 3, scope: !6555, inlinedAt: !6564)
!6564 = distinct !DILocation(line: 690, column: 2, scope: !6539)
!6565 = !DILocation(line: 693, column: 45, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6539, file: !6220, line: 693, column: 6)
!6567 = !DILocation(line: 699, column: 1, scope: !6539)
!6568 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6220, file: !6220, line: 1107, type: !3157, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !317)
!6569 = !DILocation(line: 1111, column: 11, scope: !6568)
!6570 = !DILocation(line: 1136, column: 1, scope: !6568)
!6571 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6572, file: !6572, line: 26, type: !3157, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !6573)
!6572 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6573 = !{!6574}
!6574 = !DILocalVariable(name: "irq", scope: !6571, file: !6572, line: 28, type: !103)
!6575 = !DILocation(line: 0, scope: !6571)
!6576 = !DILocation(line: 30, column: 2, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6571, file: !6572, line: 30, column: 2)
!6578 = !DILocation(line: 31, column: 3, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6580, file: !6572, line: 30, column: 39)
!6580 = distinct !DILexicalBlock(scope: !6577, file: !6572, line: 30, column: 2)
!6581 = !DILocation(line: 30, column: 35, scope: !6580)
!6582 = !DILocation(line: 30, column: 13, scope: !6580)
!6583 = distinct !{!6583, !6576, !6584}
!6584 = !DILocation(line: 32, column: 2, scope: !6577)
!6585 = !DILocation(line: 33, column: 1, scope: !6571)
!6586 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5953, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !6587)
!6587 = !{!6588, !6589}
!6588 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6586, file: !515, line: 1814, type: !751)
!6589 = !DILocalVariable(name: "priority", arg: 2, scope: !6586, file: !515, line: 1814, type: !121)
!6590 = !DILocation(line: 0, scope: !6586)
!6591 = !DILocation(line: 1816, column: 7, scope: !6586)
!6592 = !DILocation(line: 0, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6586, file: !515, line: 1816, column: 7)
!6594 = !DILocation(line: 1824, column: 1, scope: !6586)
!6595 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6596, file: !6596, line: 27, type: !6597, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !6700)
!6596 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6597 = !DISubroutineType(types: !6598)
!6598 = !{null, !6599}
!6599 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !6600)
!6600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6601, size: 32)
!6601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6602)
!6602 = !{!6603, !6661, !6673, !6674, !6675, !6676, !6682, !6695}
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6601, file: !379, line: 247, baseType: !6604, size: 384)
!6604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6605)
!6605 = !{!6606, !6630, !6637, !6638, !6639, !6648, !6649, !6650}
!6606 = !DIDerivedType(tag: DW_TAG_member, scope: !6604, file: !379, line: 60, baseType: !6607, size: 64)
!6607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6604, file: !379, line: 60, size: 64, elements: !6608)
!6608 = !{!6609, !6624}
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6607, file: !379, line: 61, baseType: !6610, size: 64)
!6610 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6611)
!6611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6612)
!6612 = !{!6613, !6619}
!6613 = !DIDerivedType(tag: DW_TAG_member, scope: !6611, file: !325, line: 38, baseType: !6614, size: 32)
!6614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6611, file: !325, line: 38, size: 32, elements: !6615)
!6615 = !{!6616, !6618}
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6614, file: !325, line: 39, baseType: !6617, size: 32)
!6617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6611, size: 32)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6614, file: !325, line: 40, baseType: !6617, size: 32)
!6619 = !DIDerivedType(tag: DW_TAG_member, scope: !6611, file: !325, line: 42, baseType: !6620, size: 32, offset: 32)
!6620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6611, file: !325, line: 42, size: 32, elements: !6621)
!6621 = !{!6622, !6623}
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6620, file: !325, line: 43, baseType: !6617, size: 32)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6620, file: !325, line: 44, baseType: !6617, size: 32)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6607, file: !379, line: 62, baseType: !6625, size: 64)
!6625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6626)
!6626 = !{!6627}
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6625, file: !404, line: 50, baseType: !6628, size: 64)
!6628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6629, size: 64, elements: !363)
!6629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6625, size: 32)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6604, file: !379, line: 68, baseType: !6631, size: 32, offset: 64)
!6631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6632, size: 32)
!6632 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6633)
!6633 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6634)
!6634 = !{!6635}
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6633, file: !320, line: 232, baseType: !6636, size: 64)
!6636 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6611)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6604, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6604, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6639 = !DIDerivedType(tag: DW_TAG_member, scope: !6604, file: !379, line: 90, baseType: !6640, size: 16, offset: 112)
!6640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6604, file: !379, line: 90, size: 16, elements: !6641)
!6641 = !{!6642, !6647}
!6642 = !DIDerivedType(tag: DW_TAG_member, scope: !6640, file: !379, line: 91, baseType: !6643, size: 16)
!6643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6640, file: !379, line: 91, size: 16, elements: !6644)
!6644 = !{!6645, !6646}
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6643, file: !379, line: 96, baseType: !425, size: 8)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6643, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6640, file: !379, line: 100, baseType: !429, size: 16)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6604, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6604, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6604, file: !379, line: 131, baseType: !6651, size: 192, offset: 192)
!6651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6652)
!6652 = !{!6653, !6654, !6660}
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6651, file: !320, line: 245, baseType: !6610, size: 64)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6651, file: !320, line: 246, baseType: !6655, size: 32, offset: 64)
!6655 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6656)
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 32)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{null, !6659}
!6659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6651, size: 32)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6651, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6601, file: !379, line: 250, baseType: !6662, size: 288, offset: 384)
!6662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6663)
!6663 = !{!6664, !6665, !6666, !6667, !6668, !6669, !6670, !6671, !6672}
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6662, file: !446, line: 26, baseType: !121, size: 32)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6662, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6662, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6662, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6662, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6662, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6662, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6662, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6662, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6601, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6601, file: !379, line: 256, baseType: !6632, size: 64, offset: 704)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6601, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6601, file: !379, line: 300, baseType: !6677, size: 96, offset: 800)
!6677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6678)
!6678 = !{!6679, !6680, !6681}
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6677, file: !379, line: 153, baseType: !22, size: 32)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6677, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6677, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6601, file: !379, line: 325, baseType: !6683, size: 32, offset: 896)
!6683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6684, size: 32)
!6684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6685)
!6685 = !{!6686, !6692, !6693}
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6684, file: !296, line: 5074, baseType: !6687, size: 96)
!6687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6688)
!6688 = !{!6689, !6690, !6691}
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6687, file: !472, line: 57, baseType: !475, size: 32)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6687, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6687, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6684, file: !296, line: 5075, baseType: !6632, size: 64, offset: 96)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6684, file: !296, line: 5076, baseType: !6694, offset: 160)
!6694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6601, file: !379, line: 343, baseType: !6696, size: 64, offset: 928)
!6696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6697)
!6697 = !{!6698, !6699}
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6696, file: !446, line: 63, baseType: !121, size: 32)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6696, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6700 = !{!6701}
!6701 = !DILocalVariable(name: "thread", arg: 1, scope: !6595, file: !6596, line: 27, type: !6599)
!6702 = !DILocation(line: 0, scope: !6595)
!6703 = !DILocation(line: 29, column: 6, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6595, file: !6596, line: 29, column: 6)
!6705 = !DILocation(line: 29, column: 15, scope: !6704)
!6706 = !DILocation(line: 29, column: 6, scope: !6595)
!6707 = !DILocation(line: 1031, column: 3, scope: !6708, inlinedAt: !6711)
!6708 = distinct !DISubprogram(name: "__get_IPSR", scope: !5919, file: !5919, line: 1027, type: !6000, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !6709)
!6709 = !{!6710}
!6710 = !DILocalVariable(name: "result", scope: !6708, file: !5919, line: 1029, type: !121)
!6711 = distinct !DILocation(line: 48, column: 10, scope: !6712, inlinedAt: !6716)
!6712 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6713, file: !6713, line: 46, type: !6714, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !317)
!6713 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6714 = !DISubroutineType(types: !6715)
!6715 = !{!157}
!6716 = distinct !DILocation(line: 30, column: 7, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !6596, line: 30, column: 7)
!6718 = distinct !DILexicalBlock(scope: !6704, file: !6596, line: 29, column: 26)
!6719 = !{i64 2824392}
!6720 = !DILocation(line: 0, scope: !6708, inlinedAt: !6711)
!6721 = !DILocation(line: 48, column: 9, scope: !6712, inlinedAt: !6716)
!6722 = !DILocation(line: 30, column: 7, scope: !6718)
!6723 = !DILocation(line: 42, column: 14, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6717, file: !6596, line: 30, column: 25)
!6725 = !DILocation(line: 48, column: 15, scope: !6724)
!6726 = !DILocation(line: 49, column: 3, scope: !6724)
!6727 = !DILocation(line: 52, column: 2, scope: !6595)
!6728 = !DILocation(line: 53, column: 1, scope: !6595)
!6729 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !374, file: !374, line: 127, type: !3157, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !317)
!6730 = !DILocation(line: 134, column: 2, scope: !6729)
!6731 = !DILocation(line: 156, column: 1, scope: !6729)
!6732 = !DILocation(line: 0, scope: !373)
!6733 = !DILocation(line: 289, column: 36, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !373, file: !374, line: 285, column: 2)
!6735 = !DILocation(line: 289, column: 42, scope: !6734)
!6736 = !DILocation(line: 300, column: 36, scope: !373)
!6737 = !DILocation(line: 301, column: 35, scope: !373)
!6738 = !DILocation(line: 302, column: 37, scope: !373)
!6739 = !DILocation(line: 311, column: 2, scope: !373)
!6740 = !DILocation(line: 316, column: 1, scope: !373)
!6741 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !543, file: !543, line: 180, type: !3157, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6742 = !DILocation(line: 188, column: 12, scope: !6741)
!6743 = !DILocation(line: 271, column: 3, scope: !6744, inlinedAt: !6745)
!6744 = distinct !DISubprogram(name: "__DSB", scope: !5919, file: !5919, line: 269, type: !3157, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6745 = distinct !DILocation(line: 192, column: 2, scope: !6741)
!6746 = !{i64 2984539}
!6747 = !DILocation(line: 260, column: 3, scope: !6748, inlinedAt: !6749)
!6748 = distinct !DISubprogram(name: "__ISB", scope: !5919, file: !5919, line: 258, type: !3157, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6749 = distinct !DILocation(line: 193, column: 2, scope: !6741)
!6750 = !{i64 2984256}
!6751 = !DILocation(line: 194, column: 1, scope: !6741)
!6752 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !543, file: !543, line: 199, type: !3157, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6753 = !DILocation(line: 282, column: 3, scope: !6754, inlinedAt: !6755)
!6754 = distinct !DISubprogram(name: "__DMB", scope: !5919, file: !5919, line: 280, type: !3157, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6755 = distinct !DILocation(line: 202, column: 2, scope: !6752)
!6756 = !{i64 2984815}
!6757 = !DILocation(line: 205, column: 12, scope: !6752)
!6758 = !DILocation(line: 206, column: 1, scope: !6752)
!6759 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !543, file: !543, line: 275, type: !6760, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6773)
!6760 = !DISubroutineType(types: !6761)
!6761 = !{null, !6762, !262, !6187, !6187}
!6762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6763, size: 32)
!6763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6764)
!6764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !6765)
!6765 = !{!6766, !6767, !6768}
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6764, file: !494, line: 53, baseType: !22, size: 32)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6764, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6764, file: !494, line: 55, baseType: !6769, size: 32, offset: 64)
!6769 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !6770)
!6770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !6771)
!6771 = !{!6772}
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6770, file: !500, line: 150, baseType: !121, size: 32)
!6773 = !{!6774, !6775, !6776, !6777}
!6774 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6759, file: !543, line: 276, type: !6762)
!6775 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6759, file: !543, line: 276, type: !262)
!6776 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6759, file: !543, line: 277, type: !6187)
!6777 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6759, file: !543, line: 277, type: !6187)
!6778 = !DILocation(line: 0, scope: !6759)
!6779 = !DILocation(line: 279, column: 6, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6759, file: !543, line: 279, column: 6)
!6781 = !DILocation(line: 285, column: 1, scope: !6759)
!6782 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6783, file: !6783, line: 220, type: !6784, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6786)
!6783 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6784 = !DISubroutineType(types: !6785)
!6785 = !{!103, !6762, !262, !6187, !6187}
!6786 = !{!6787, !6788, !6789, !6790, !6791}
!6787 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6782, file: !6783, line: 221, type: !6762)
!6788 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6782, file: !6783, line: 221, type: !262)
!6789 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6782, file: !6783, line: 222, type: !6187)
!6790 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6782, file: !6783, line: 223, type: !6187)
!6791 = !DILocalVariable(name: "mpu_reg_index", scope: !6782, file: !6783, line: 225, type: !103)
!6792 = !DILocation(line: 0, scope: !6782)
!6793 = !DILocation(line: 225, column: 22, scope: !6782)
!6794 = !DILocation(line: 233, column: 18, scope: !6782)
!6795 = !DILocation(line: 236, column: 23, scope: !6782)
!6796 = !DILocation(line: 236, column: 21, scope: !6782)
!6797 = !DILocation(line: 238, column: 2, scope: !6782)
!6798 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !543, file: !543, line: 105, type: !6799, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6801)
!6799 = !DISubroutineType(types: !6800)
!6800 = !{!103, !6762, !154, !154, !157}
!6801 = !{!6802, !6803, !6804, !6805, !6806, !6807}
!6802 = !DILocalVariable(name: "regions", arg: 1, scope: !6798, file: !543, line: 106, type: !6762)
!6803 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6798, file: !543, line: 106, type: !154)
!6804 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6798, file: !543, line: 106, type: !154)
!6805 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6798, file: !543, line: 107, type: !157)
!6806 = !DILocalVariable(name: "i", scope: !6798, file: !543, line: 109, type: !103)
!6807 = !DILocalVariable(name: "reg_index", scope: !6798, file: !543, line: 110, type: !103)
!6808 = !DILocation(line: 0, scope: !6798)
!6809 = !DILocation(line: 110, column: 18, scope: !6798)
!6810 = !DILocation(line: 112, column: 16, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !543, line: 112, column: 2)
!6812 = distinct !DILexicalBlock(scope: !6798, file: !543, line: 112, column: 2)
!6813 = !DILocation(line: 112, column: 2, scope: !6812)
!6814 = !DILocation(line: 113, column: 7, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !543, line: 113, column: 7)
!6816 = distinct !DILexicalBlock(scope: !6811, file: !543, line: 112, column: 36)
!6817 = !DILocation(line: 113, column: 18, scope: !6815)
!6818 = !DILocation(line: 113, column: 23, scope: !6815)
!6819 = !DILocation(line: 113, column: 7, scope: !6816)
!6820 = !DILocation(line: 118, column: 23, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6816, file: !543, line: 118, column: 7)
!6822 = !DILocation(line: 119, column: 7, scope: !6821)
!6823 = !DILocation(line: 118, column: 7, scope: !6816)
!6824 = !DILocation(line: 124, column: 36, scope: !6816)
!6825 = !DILocation(line: 124, column: 15, scope: !6816)
!6826 = !DILocation(line: 126, column: 17, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6816, file: !543, line: 126, column: 7)
!6828 = !DILocation(line: 126, column: 7, scope: !6816)
!6829 = !DILocation(line: 131, column: 12, scope: !6816)
!6830 = !DILocation(line: 132, column: 2, scope: !6816)
!6831 = !DILocation(line: 112, column: 32, scope: !6811)
!6832 = distinct !{!6832, !6813, !6833}
!6833 = !DILocation(line: 132, column: 2, scope: !6812)
!6834 = !DILocation(line: 135, column: 1, scope: !6798)
!6835 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6783, file: !6783, line: 63, type: !6836, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6838)
!6836 = !DISubroutineType(types: !6837)
!6837 = !{!103, !6762}
!6838 = !{!6839, !6840}
!6839 = !DILocalVariable(name: "part", arg: 1, scope: !6835, file: !6783, line: 63, type: !6762)
!6840 = !DILocalVariable(name: "partition_is_valid", scope: !6835, file: !6783, line: 70, type: !103)
!6841 = !DILocation(line: 0, scope: !6835)
!6842 = !DILocation(line: 71, column: 11, scope: !6835)
!6843 = !DILocation(line: 71, column: 37, scope: !6835)
!6844 = !DILocation(line: 72, column: 3, scope: !6835)
!6845 = !DILocation(line: 71, column: 30, scope: !6835)
!6846 = !DILocation(line: 75, column: 11, scope: !6835)
!6847 = !DILocation(line: 75, column: 17, scope: !6835)
!6848 = !DILocation(line: 75, column: 38, scope: !6835)
!6849 = !DILocation(line: 77, column: 2, scope: !6835)
!6850 = distinct !DISubprogram(name: "mpu_configure_region", scope: !543, file: !543, line: 79, type: !6851, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6853)
!6851 = !DISubroutineType(types: !6852)
!6852 = !{!103, !262, !6762}
!6853 = !{!6854, !6855, !6856}
!6854 = !DILocalVariable(name: "index", arg: 1, scope: !6850, file: !543, line: 79, type: !262)
!6855 = !DILocalVariable(name: "new_region", arg: 2, scope: !6850, file: !543, line: 80, type: !6762)
!6856 = !DILocalVariable(name: "region_conf", scope: !6850, file: !543, line: 82, type: !532)
!6857 = !DILocation(line: 0, scope: !6850)
!6858 = !DILocation(line: 82, column: 2, scope: !6850)
!6859 = !DILocation(line: 82, column: 24, scope: !6850)
!6860 = !DILocation(line: 87, column: 33, scope: !6850)
!6861 = !DILocation(line: 87, column: 14, scope: !6850)
!6862 = !DILocation(line: 87, column: 19, scope: !6850)
!6863 = !DILocation(line: 91, column: 55, scope: !6850)
!6864 = !DILocation(line: 92, column: 16, scope: !6850)
!6865 = !DILocation(line: 92, column: 53, scope: !6850)
!6866 = !DILocation(line: 91, column: 2, scope: !6850)
!6867 = !DILocation(line: 95, column: 9, scope: !6850)
!6868 = !DILocation(line: 97, column: 1, scope: !6850)
!6869 = !DILocation(line: 95, column: 2, scope: !6850)
!6870 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6783, file: !6783, line: 113, type: !6871, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6876)
!6871 = !DISubroutineType(types: !6872)
!6872 = !{null, !6873, !6874, !121, !121}
!6873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 32)
!6874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6875, size: 32)
!6875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6769)
!6876 = !{!6877, !6878, !6879, !6880}
!6877 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6870, file: !6783, line: 114, type: !6873)
!6878 = !DILocalVariable(name: "attr", arg: 2, scope: !6870, file: !6783, line: 115, type: !6874)
!6879 = !DILocalVariable(name: "base", arg: 3, scope: !6870, file: !6783, line: 115, type: !121)
!6880 = !DILocalVariable(name: "size", arg: 4, scope: !6870, file: !6783, line: 115, type: !121)
!6881 = !DILocation(line: 0, scope: !6870)
!6882 = !DILocation(line: 127, column: 23, scope: !6870)
!6883 = !DILocation(line: 127, column: 35, scope: !6870)
!6884 = !DILocation(line: 127, column: 33, scope: !6870)
!6885 = !DILocation(line: 127, column: 10, scope: !6870)
!6886 = !DILocation(line: 127, column: 15, scope: !6870)
!6887 = !DILocation(line: 129, column: 1, scope: !6870)
!6888 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !543, file: !543, line: 57, type: !6889, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6891)
!6889 = !DISubroutineType(types: !6890)
!6890 = !{!103, !262, !530}
!6891 = !{!6892, !6893}
!6892 = !DILocalVariable(name: "index", arg: 1, scope: !6888, file: !543, line: 57, type: !262)
!6893 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6888, file: !543, line: 58, type: !530)
!6894 = !DILocation(line: 0, scope: !6888)
!6895 = !DILocation(line: 61, column: 6, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6888, file: !543, line: 61, column: 6)
!6897 = !DILocation(line: 61, column: 12, scope: !6896)
!6898 = !DILocation(line: 61, column: 6, scope: !6888)
!6899 = !DILocation(line: 71, column: 2, scope: !6888)
!6900 = !DILocation(line: 73, column: 2, scope: !6888)
!6901 = !DILocation(line: 74, column: 1, scope: !6888)
!6902 = distinct !DISubprogram(name: "region_init", scope: !6783, file: !6783, line: 29, type: !6903, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6905)
!6903 = !DISubroutineType(types: !6904)
!6904 = !{null, !6187, !530}
!6905 = !{!6906, !6907}
!6906 = !DILocalVariable(name: "index", arg: 1, scope: !6902, file: !6783, line: 29, type: !6187)
!6907 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6902, file: !6783, line: 30, type: !530)
!6908 = !DILocation(line: 0, scope: !6902)
!6909 = !DILocation(line: 33, column: 2, scope: !6902)
!6910 = !DILocation(line: 47, column: 28, scope: !6902)
!6911 = !DILocation(line: 47, column: 33, scope: !6902)
!6912 = !DILocation(line: 48, column: 26, scope: !6902)
!6913 = !DILocation(line: 47, column: 12, scope: !6902)
!6914 = !DILocation(line: 49, column: 32, scope: !6902)
!6915 = !DILocation(line: 49, column: 37, scope: !6902)
!6916 = !DILocation(line: 49, column: 12, scope: !6902)
!6917 = !DILocation(line: 53, column: 1, scope: !6902)
!6918 = distinct !DISubprogram(name: "set_region_number", scope: !6919, file: !6919, line: 32, type: !6010, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6920)
!6919 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6920 = !{!6921}
!6921 = !DILocalVariable(name: "index", arg: 1, scope: !6918, file: !6919, line: 32, type: !121)
!6922 = !DILocation(line: 0, scope: !6918)
!6923 = !DILocation(line: 34, column: 11, scope: !6918)
!6924 = !DILocation(line: 35, column: 1, scope: !6918)
!6925 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6783, file: !6783, line: 88, type: !6926, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6928)
!6926 = !DISubroutineType(types: !6927)
!6927 = !{!121, !121}
!6928 = !{!6929}
!6929 = !DILocalVariable(name: "size", arg: 1, scope: !6925, file: !6783, line: 88, type: !121)
!6930 = !DILocation(line: 0, scope: !6925)
!6931 = !DILocation(line: 91, column: 11, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6925, file: !6783, line: 91, column: 6)
!6933 = !DILocation(line: 91, column: 6, scope: !6925)
!6934 = !DILocation(line: 100, column: 11, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6925, file: !6783, line: 100, column: 6)
!6936 = !DILocation(line: 100, column: 6, scope: !6925)
!6937 = !DILocation(line: 104, column: 35, scope: !6925)
!6938 = !DILocation(line: 104, column: 16, scope: !6925)
!6939 = !DILocation(line: 104, column: 50, scope: !6925)
!6940 = !DILocation(line: 104, column: 72, scope: !6925)
!6941 = !DILocation(line: 104, column: 2, scope: !6925)
!6942 = !DILocation(line: 106, column: 1, scope: !6925)
!6943 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !543, file: !543, line: 307, type: !6944, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6946)
!6944 = !DISubroutineType(types: !6945)
!6945 = !{null, !6762, !154}
!6946 = !{!6947, !6948}
!6947 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6943, file: !543, line: 308, type: !6762)
!6948 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6943, file: !543, line: 308, type: !154)
!6949 = !DILocation(line: 0, scope: !6943)
!6950 = !DILocation(line: 310, column: 6, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6943, file: !543, line: 310, column: 6)
!6952 = !DILocation(line: 316, column: 1, scope: !6943)
!6953 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6783, file: !6783, line: 249, type: !6954, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6956)
!6954 = !DISubroutineType(types: !6955)
!6955 = !{!103, !6762, !154}
!6956 = !{!6957, !6958, !6959, !6960}
!6957 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6953, file: !6783, line: 250, type: !6762)
!6958 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6953, file: !6783, line: 250, type: !154)
!6959 = !DILocalVariable(name: "mpu_reg_index", scope: !6953, file: !6783, line: 252, type: !103)
!6960 = !DILocalVariable(name: "i", scope: !6961, file: !6783, line: 264, type: !103)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6783, line: 264, column: 3)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !6783, line: 261, column: 32)
!6963 = distinct !DILexicalBlock(scope: !6953, file: !6783, line: 261, column: 6)
!6964 = !DILocation(line: 0, scope: !6953)
!6965 = !DILocation(line: 252, column: 22, scope: !6953)
!6966 = !DILocation(line: 258, column: 18, scope: !6953)
!6967 = !DILocation(line: 261, column: 20, scope: !6963)
!6968 = !DILocation(line: 261, column: 6, scope: !6953)
!6969 = !DILocation(line: 0, scope: !6961)
!6970 = !DILocation(line: 265, column: 4, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6783, line: 264, column: 59)
!6972 = distinct !DILexicalBlock(scope: !6961, file: !6783, line: 264, column: 3)
!6973 = !DILocation(line: 264, column: 55, scope: !6972)
!6974 = !DILocation(line: 264, column: 33, scope: !6972)
!6975 = !DILocation(line: 264, column: 3, scope: !6961)
!6976 = distinct !{!6976, !6975, !6977}
!6977 = !DILocation(line: 266, column: 3, scope: !6961)
!6978 = !DILocation(line: 269, column: 2, scope: !6953)
!6979 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6980, file: !6980, line: 218, type: !6010, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6981)
!6980 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6981 = !{!6982}
!6982 = !DILocalVariable(name: "rnr", arg: 1, scope: !6979, file: !6980, line: 218, type: !121)
!6983 = !DILocation(line: 0, scope: !6979)
!6984 = !DILocation(line: 220, column: 12, scope: !6979)
!6985 = !DILocation(line: 221, column: 13, scope: !6979)
!6986 = !DILocation(line: 222, column: 1, scope: !6979)
!6987 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !543, file: !543, line: 326, type: !6988, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6990)
!6988 = !DISubroutineType(types: !6989)
!6989 = !{!103}
!6990 = !{!6991}
!6991 = !DILocalVariable(name: "r_index", scope: !6987, file: !543, line: 328, type: !121)
!6992 = !DILocation(line: 330, column: 17, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6987, file: !543, line: 330, column: 6)
!6994 = !DILocation(line: 330, column: 29, scope: !6993)
!6995 = !DILocation(line: 330, column: 6, scope: !6987)
!6996 = !DILocation(line: 347, column: 2, scope: !6987)
!6997 = !DILocation(line: 0, scope: !6987)
!6998 = !DILocation(line: 364, column: 29, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !543, line: 364, column: 2)
!7000 = distinct !DILexicalBlock(scope: !6987, file: !543, line: 364, column: 2)
!7001 = !DILocation(line: 364, column: 2, scope: !7000)
!7002 = !DILocation(line: 365, column: 25, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6999, file: !543, line: 364, column: 66)
!7004 = !DILocation(line: 365, column: 3, scope: !7003)
!7005 = !DILocation(line: 364, column: 62, scope: !6999)
!7006 = distinct !{!7006, !7001, !7007}
!7007 = !DILocation(line: 366, column: 2, scope: !7000)
!7008 = !DILocation(line: 369, column: 23, scope: !6987)
!7009 = !DILocation(line: 369, column: 21, scope: !6987)
!7010 = !DILocation(line: 372, column: 2, scope: !6987)
!7011 = !DILocation(line: 443, column: 2, scope: !6987)
!7012 = !DILocation(line: 444, column: 1, scope: !6987)
!7013 = distinct !DISubprogram(name: "strcpy", scope: !7014, file: !7014, line: 20, type: !7015, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7019)
!7014 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7015 = !DISubroutineType(types: !7016)
!7016 = !{!344, !7017, !7018}
!7017 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !344)
!7018 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!7019 = !{!7020, !7021, !7022}
!7020 = !DILocalVariable(name: "d", arg: 1, scope: !7013, file: !7014, line: 20, type: !7017)
!7021 = !DILocalVariable(name: "s", arg: 2, scope: !7013, file: !7014, line: 20, type: !7018)
!7022 = !DILocalVariable(name: "dest", scope: !7013, file: !7014, line: 22, type: !344)
!7023 = !DILocation(line: 0, scope: !7013)
!7024 = !DILocation(line: 24, column: 9, scope: !7013)
!7025 = !DILocation(line: 24, column: 12, scope: !7013)
!7026 = !DILocation(line: 24, column: 2, scope: !7013)
!7027 = !DILocation(line: 25, column: 6, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7013, file: !7014, line: 24, column: 21)
!7029 = !DILocation(line: 26, column: 4, scope: !7028)
!7030 = !DILocation(line: 27, column: 4, scope: !7028)
!7031 = distinct !{!7031, !7026, !7032}
!7032 = !DILocation(line: 28, column: 2, scope: !7013)
!7033 = !DILocation(line: 30, column: 5, scope: !7013)
!7034 = !DILocation(line: 32, column: 2, scope: !7013)
!7035 = distinct !DISubprogram(name: "strncpy", scope: !7014, file: !7014, line: 42, type: !7036, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7038)
!7036 = !DISubroutineType(types: !7037)
!7037 = !{!344, !7017, !7018, !204}
!7038 = !{!7039, !7040, !7041, !7042}
!7039 = !DILocalVariable(name: "d", arg: 1, scope: !7035, file: !7014, line: 42, type: !7017)
!7040 = !DILocalVariable(name: "s", arg: 2, scope: !7035, file: !7014, line: 42, type: !7018)
!7041 = !DILocalVariable(name: "n", arg: 3, scope: !7035, file: !7014, line: 42, type: !204)
!7042 = !DILocalVariable(name: "dest", scope: !7035, file: !7014, line: 44, type: !344)
!7043 = !DILocation(line: 0, scope: !7035)
!7044 = !DILocation(line: 46, column: 12, scope: !7035)
!7045 = !DILocation(line: 46, column: 17, scope: !7035)
!7046 = !DILocation(line: 46, column: 20, scope: !7035)
!7047 = !DILocation(line: 46, column: 23, scope: !7035)
!7048 = !DILocation(line: 46, column: 2, scope: !7035)
!7049 = !DILocation(line: 47, column: 6, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7035, file: !7014, line: 46, column: 32)
!7051 = !DILocation(line: 48, column: 4, scope: !7050)
!7052 = !DILocation(line: 49, column: 4, scope: !7050)
!7053 = !DILocation(line: 50, column: 4, scope: !7050)
!7054 = distinct !{!7054, !7048, !7055}
!7055 = !DILocation(line: 51, column: 2, scope: !7035)
!7056 = !DILocation(line: 54, column: 6, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7035, file: !7014, line: 53, column: 16)
!7058 = !DILocation(line: 55, column: 4, scope: !7057)
!7059 = !DILocation(line: 56, column: 4, scope: !7057)
!7060 = !DILocation(line: 53, column: 11, scope: !7035)
!7061 = !DILocation(line: 53, column: 2, scope: !7035)
!7062 = distinct !{!7062, !7061, !7063}
!7063 = !DILocation(line: 57, column: 2, scope: !7035)
!7064 = !DILocation(line: 59, column: 2, scope: !7035)
!7065 = distinct !DISubprogram(name: "strchr", scope: !7014, file: !7014, line: 69, type: !7066, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7068)
!7066 = !DISubroutineType(types: !7067)
!7067 = !{!344, !144, !103}
!7068 = !{!7069, !7070, !7071}
!7069 = !DILocalVariable(name: "s", arg: 1, scope: !7065, file: !7014, line: 69, type: !144)
!7070 = !DILocalVariable(name: "c", arg: 2, scope: !7065, file: !7014, line: 69, type: !103)
!7071 = !DILocalVariable(name: "tmp", scope: !7065, file: !7014, line: 71, type: !146)
!7072 = !DILocation(line: 0, scope: !7065)
!7073 = !DILocation(line: 73, column: 2, scope: !7065)
!7074 = !DILocation(line: 73, column: 10, scope: !7065)
!7075 = !DILocation(line: 73, column: 13, scope: !7065)
!7076 = !DILocation(line: 73, column: 21, scope: !7065)
!7077 = !DILocation(line: 74, column: 4, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7065, file: !7014, line: 73, column: 38)
!7079 = distinct !{!7079, !7073, !7080}
!7080 = !DILocation(line: 75, column: 2, scope: !7065)
!7081 = !DILocation(line: 77, column: 9, scope: !7065)
!7082 = !DILocation(line: 77, column: 2, scope: !7065)
!7083 = distinct !DISubprogram(name: "strrchr", scope: !7014, file: !7014, line: 87, type: !7066, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7084)
!7084 = !{!7085, !7086, !7087}
!7085 = !DILocalVariable(name: "s", arg: 1, scope: !7083, file: !7014, line: 87, type: !144)
!7086 = !DILocalVariable(name: "c", arg: 2, scope: !7083, file: !7014, line: 87, type: !103)
!7087 = !DILocalVariable(name: "match", scope: !7083, file: !7014, line: 89, type: !344)
!7088 = !DILocation(line: 0, scope: !7083)
!7089 = !DILocation(line: 91, column: 2, scope: !7083)
!7090 = !DILocation(line: 92, column: 7, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !7014, line: 92, column: 7)
!7092 = distinct !DILexicalBlock(scope: !7083, file: !7014, line: 91, column: 5)
!7093 = !DILocation(line: 92, column: 10, scope: !7091)
!7094 = !DILocation(line: 92, column: 7, scope: !7092)
!7095 = !DILocation(line: 95, column: 13, scope: !7083)
!7096 = !DILocation(line: 95, column: 2, scope: !7092)
!7097 = distinct !{!7097, !7089, !7098}
!7098 = !DILocation(line: 95, column: 15, scope: !7083)
!7099 = !DILocation(line: 97, column: 2, scope: !7083)
!7100 = distinct !DISubprogram(name: "strlen", scope: !7014, file: !7014, line: 107, type: !7101, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7103)
!7101 = !DISubroutineType(types: !7102)
!7102 = !{!204, !144}
!7103 = !{!7104, !7105}
!7104 = !DILocalVariable(name: "s", arg: 1, scope: !7100, file: !7014, line: 107, type: !144)
!7105 = !DILocalVariable(name: "n", scope: !7100, file: !7014, line: 109, type: !204)
!7106 = !DILocation(line: 0, scope: !7100)
!7107 = !DILocation(line: 111, column: 9, scope: !7100)
!7108 = !DILocation(line: 111, column: 12, scope: !7100)
!7109 = !DILocation(line: 111, column: 2, scope: !7100)
!7110 = !DILocation(line: 112, column: 4, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7100, file: !7014, line: 111, column: 21)
!7112 = !DILocation(line: 113, column: 4, scope: !7111)
!7113 = distinct !{!7113, !7109, !7114}
!7114 = !DILocation(line: 114, column: 2, scope: !7100)
!7115 = !DILocation(line: 116, column: 2, scope: !7100)
!7116 = distinct !DISubprogram(name: "strnlen", scope: !7014, file: !7014, line: 126, type: !7117, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7119)
!7117 = !DISubroutineType(types: !7118)
!7118 = !{!204, !144, !204}
!7119 = !{!7120, !7121, !7122}
!7120 = !DILocalVariable(name: "s", arg: 1, scope: !7116, file: !7014, line: 126, type: !144)
!7121 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7116, file: !7014, line: 126, type: !204)
!7122 = !DILocalVariable(name: "n", scope: !7116, file: !7014, line: 128, type: !204)
!7123 = !DILocation(line: 0, scope: !7116)
!7124 = !DILocation(line: 130, column: 9, scope: !7116)
!7125 = !DILocation(line: 130, column: 12, scope: !7116)
!7126 = !DILocation(line: 130, column: 20, scope: !7116)
!7127 = !DILocation(line: 130, column: 2, scope: !7116)
!7128 = !DILocation(line: 131, column: 4, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7116, file: !7014, line: 130, column: 35)
!7130 = !DILocation(line: 132, column: 4, scope: !7129)
!7131 = distinct !{!7131, !7127, !7132}
!7132 = !DILocation(line: 133, column: 2, scope: !7116)
!7133 = !DILocation(line: 135, column: 2, scope: !7116)
!7134 = distinct !DISubprogram(name: "strcmp", scope: !7014, file: !7014, line: 145, type: !7135, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7137)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{!103, !144, !144}
!7137 = !{!7138, !7139}
!7138 = !DILocalVariable(name: "s1", arg: 1, scope: !7134, file: !7014, line: 145, type: !144)
!7139 = !DILocalVariable(name: "s2", arg: 2, scope: !7134, file: !7014, line: 145, type: !144)
!7140 = !DILocation(line: 0, scope: !7134)
!7141 = !DILocation(line: 147, column: 10, scope: !7134)
!7142 = !DILocation(line: 147, column: 17, scope: !7134)
!7143 = !DILocation(line: 147, column: 14, scope: !7134)
!7144 = !DILocation(line: 147, column: 22, scope: !7134)
!7145 = !DILocation(line: 148, column: 5, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7134, file: !7014, line: 147, column: 40)
!7147 = !DILocation(line: 149, column: 5, scope: !7146)
!7148 = distinct !{!7148, !7149, !7150}
!7149 = !DILocation(line: 147, column: 2, scope: !7134)
!7150 = !DILocation(line: 150, column: 2, scope: !7134)
!7151 = !DILocation(line: 152, column: 9, scope: !7134)
!7152 = !DILocation(line: 152, column: 15, scope: !7134)
!7153 = !DILocation(line: 152, column: 13, scope: !7134)
!7154 = !DILocation(line: 152, column: 2, scope: !7134)
!7155 = distinct !DISubprogram(name: "strncmp", scope: !7014, file: !7014, line: 162, type: !7156, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7158)
!7156 = !DISubroutineType(types: !7157)
!7157 = !{!103, !144, !144, !204}
!7158 = !{!7159, !7160, !7161}
!7159 = !DILocalVariable(name: "s1", arg: 1, scope: !7155, file: !7014, line: 162, type: !144)
!7160 = !DILocalVariable(name: "s2", arg: 2, scope: !7155, file: !7014, line: 162, type: !144)
!7161 = !DILocalVariable(name: "n", arg: 3, scope: !7155, file: !7014, line: 162, type: !204)
!7162 = !DILocation(line: 0, scope: !7155)
!7163 = !DILocation(line: 164, column: 17, scope: !7155)
!7164 = !DILocation(line: 164, column: 21, scope: !7155)
!7165 = !DILocation(line: 164, column: 28, scope: !7155)
!7166 = !DILocation(line: 164, column: 25, scope: !7155)
!7167 = !DILocation(line: 164, column: 33, scope: !7155)
!7168 = !DILocation(line: 165, column: 5, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7155, file: !7014, line: 164, column: 51)
!7170 = !DILocation(line: 166, column: 5, scope: !7169)
!7171 = !DILocation(line: 167, column: 4, scope: !7169)
!7172 = distinct !{!7172, !7173, !7174}
!7173 = !DILocation(line: 164, column: 2, scope: !7155)
!7174 = !DILocation(line: 168, column: 2, scope: !7155)
!7175 = !DILocation(line: 170, column: 25, scope: !7155)
!7176 = !DILocation(line: 170, column: 31, scope: !7155)
!7177 = !DILocation(line: 170, column: 29, scope: !7155)
!7178 = !DILocation(line: 170, column: 9, scope: !7155)
!7179 = !DILocation(line: 170, column: 2, scope: !7155)
!7180 = distinct !DISubprogram(name: "strtok_r", scope: !7014, file: !7014, line: 180, type: !7181, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7184)
!7181 = !DISubroutineType(types: !7182)
!7182 = !{!344, !344, !144, !7183}
!7183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!7184 = !{!7185, !7186, !7187, !7188, !7189}
!7185 = !DILocalVariable(name: "str", arg: 1, scope: !7180, file: !7014, line: 180, type: !344)
!7186 = !DILocalVariable(name: "sep", arg: 2, scope: !7180, file: !7014, line: 180, type: !144)
!7187 = !DILocalVariable(name: "state", arg: 3, scope: !7180, file: !7014, line: 180, type: !7183)
!7188 = !DILocalVariable(name: "start", scope: !7180, file: !7014, line: 182, type: !344)
!7189 = !DILocalVariable(name: "end", scope: !7180, file: !7014, line: 182, type: !344)
!7190 = !DILocation(line: 0, scope: !7180)
!7191 = !DILocation(line: 184, column: 10, scope: !7180)
!7192 = !DILocation(line: 184, column: 22, scope: !7180)
!7193 = !DILocation(line: 187, column: 9, scope: !7180)
!7194 = !DILocation(line: 187, column: 16, scope: !7180)
!7195 = !DILocation(line: 187, column: 19, scope: !7180)
!7196 = !DILocation(line: 187, column: 2, scope: !7180)
!7197 = !DILocation(line: 188, column: 8, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7180, file: !7014, line: 187, column: 40)
!7199 = distinct !{!7199, !7196, !7200}
!7200 = !DILocation(line: 189, column: 2, scope: !7180)
!7201 = !DILocation(line: 198, column: 9, scope: !7180)
!7202 = !DILocation(line: 198, column: 18, scope: !7180)
!7203 = !DILocation(line: 198, column: 17, scope: !7180)
!7204 = !DILocation(line: 198, column: 2, scope: !7180)
!7205 = !DILocation(line: 199, column: 6, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7180, file: !7014, line: 198, column: 37)
!7207 = !DILocation(line: 198, column: 14, scope: !7180)
!7208 = distinct !{!7208, !7204, !7209}
!7209 = !DILocation(line: 200, column: 2, scope: !7180)
!7210 = !DILocation(line: 203, column: 8, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !7014, line: 202, column: 20)
!7212 = distinct !DILexicalBlock(scope: !7180, file: !7014, line: 202, column: 6)
!7213 = !DILocation(line: 204, column: 16, scope: !7211)
!7214 = !DILocation(line: 205, column: 2, scope: !7211)
!7215 = !DILocation(line: 210, column: 1, scope: !7180)
!7216 = distinct !DISubprogram(name: "strcat", scope: !7014, file: !7014, line: 212, type: !7015, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7217)
!7217 = !{!7218, !7219}
!7218 = !DILocalVariable(name: "dest", arg: 1, scope: !7216, file: !7014, line: 212, type: !7017)
!7219 = !DILocalVariable(name: "src", arg: 2, scope: !7216, file: !7014, line: 212, type: !7018)
!7220 = !DILocation(line: 0, scope: !7216)
!7221 = !DILocation(line: 214, column: 16, scope: !7216)
!7222 = !DILocation(line: 214, column: 14, scope: !7216)
!7223 = !DILocation(line: 214, column: 2, scope: !7216)
!7224 = !DILocation(line: 215, column: 2, scope: !7216)
!7225 = distinct !DISubprogram(name: "strncat", scope: !7014, file: !7014, line: 218, type: !7036, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7226)
!7226 = !{!7227, !7228, !7229, !7230, !7231}
!7227 = !DILocalVariable(name: "dest", arg: 1, scope: !7225, file: !7014, line: 218, type: !7017)
!7228 = !DILocalVariable(name: "src", arg: 2, scope: !7225, file: !7014, line: 218, type: !7018)
!7229 = !DILocalVariable(name: "n", arg: 3, scope: !7225, file: !7014, line: 219, type: !204)
!7230 = !DILocalVariable(name: "orig_dest", scope: !7225, file: !7014, line: 221, type: !344)
!7231 = !DILocalVariable(name: "len", scope: !7225, file: !7014, line: 222, type: !204)
!7232 = !DILocation(line: 0, scope: !7225)
!7233 = !DILocation(line: 222, column: 15, scope: !7225)
!7234 = !DILocation(line: 224, column: 7, scope: !7225)
!7235 = !DILocation(line: 225, column: 14, scope: !7225)
!7236 = !DILocation(line: 225, column: 19, scope: !7225)
!7237 = !DILocation(line: 225, column: 11, scope: !7225)
!7238 = !DILocation(line: 225, column: 23, scope: !7225)
!7239 = !DILocation(line: 225, column: 28, scope: !7225)
!7240 = !DILocation(line: 225, column: 2, scope: !7225)
!7241 = !DILocation(line: 226, column: 17, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7225, file: !7014, line: 225, column: 38)
!7243 = !DILocation(line: 226, column: 8, scope: !7242)
!7244 = !DILocation(line: 226, column: 11, scope: !7242)
!7245 = distinct !{!7245, !7240, !7246}
!7246 = !DILocation(line: 227, column: 2, scope: !7225)
!7247 = !DILocation(line: 228, column: 8, scope: !7225)
!7248 = !DILocation(line: 230, column: 2, scope: !7225)
!7249 = distinct !DISubprogram(name: "memcmp", scope: !7014, file: !7014, line: 239, type: !7250, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7252)
!7250 = !DISubroutineType(types: !7251)
!7251 = !{!103, !13, !13, !204}
!7252 = !{!7253, !7254, !7255, !7256, !7257}
!7253 = !DILocalVariable(name: "m1", arg: 1, scope: !7249, file: !7014, line: 239, type: !13)
!7254 = !DILocalVariable(name: "m2", arg: 2, scope: !7249, file: !7014, line: 239, type: !13)
!7255 = !DILocalVariable(name: "n", arg: 3, scope: !7249, file: !7014, line: 239, type: !204)
!7256 = !DILocalVariable(name: "c1", scope: !7249, file: !7014, line: 241, type: !144)
!7257 = !DILocalVariable(name: "c2", scope: !7249, file: !7014, line: 242, type: !144)
!7258 = !DILocation(line: 0, scope: !7249)
!7259 = !DILocation(line: 244, column: 7, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7249, file: !7014, line: 244, column: 6)
!7261 = !DILocation(line: 244, column: 6, scope: !7249)
!7262 = !DILocation(line: 248, column: 10, scope: !7249)
!7263 = !DILocation(line: 248, column: 14, scope: !7249)
!7264 = !DILocation(line: 248, column: 19, scope: !7249)
!7265 = !DILocation(line: 248, column: 2, scope: !7249)
!7266 = !DILocation(line: 248, column: 23, scope: !7249)
!7267 = !DILocation(line: 248, column: 30, scope: !7249)
!7268 = !DILocation(line: 248, column: 27, scope: !7249)
!7269 = !DILocation(line: 249, column: 5, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7249, file: !7014, line: 248, column: 36)
!7271 = !DILocation(line: 250, column: 5, scope: !7270)
!7272 = distinct !{!7272, !7265, !7273}
!7273 = !DILocation(line: 251, column: 2, scope: !7249)
!7274 = !DILocation(line: 253, column: 9, scope: !7249)
!7275 = !DILocation(line: 253, column: 15, scope: !7249)
!7276 = !DILocation(line: 253, column: 13, scope: !7249)
!7277 = !DILocation(line: 253, column: 2, scope: !7249)
!7278 = !DILocation(line: 254, column: 1, scope: !7249)
!7279 = distinct !DISubprogram(name: "memmove", scope: !7014, file: !7014, line: 263, type: !7280, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7282)
!7280 = !DISubroutineType(types: !7281)
!7281 = !{!102, !102, !13, !204}
!7282 = !{!7283, !7284, !7285, !7286, !7287}
!7283 = !DILocalVariable(name: "d", arg: 1, scope: !7279, file: !7014, line: 263, type: !102)
!7284 = !DILocalVariable(name: "s", arg: 2, scope: !7279, file: !7014, line: 263, type: !13)
!7285 = !DILocalVariable(name: "n", arg: 3, scope: !7279, file: !7014, line: 263, type: !204)
!7286 = !DILocalVariable(name: "dest", scope: !7279, file: !7014, line: 265, type: !344)
!7287 = !DILocalVariable(name: "src", scope: !7279, file: !7014, line: 266, type: !144)
!7288 = !DILocation(line: 0, scope: !7279)
!7289 = !DILocation(line: 268, column: 21, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7279, file: !7014, line: 268, column: 6)
!7291 = !DILocation(line: 268, column: 28, scope: !7290)
!7292 = !DILocation(line: 268, column: 6, scope: !7279)
!7293 = !DILocation(line: 280, column: 12, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7290, file: !7014, line: 278, column: 9)
!7295 = !DILocation(line: 280, column: 3, scope: !7294)
!7296 = !DILocation(line: 275, column: 5, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7298, file: !7014, line: 274, column: 17)
!7298 = distinct !DILexicalBlock(scope: !7290, file: !7014, line: 268, column: 33)
!7299 = !DILocation(line: 276, column: 14, scope: !7297)
!7300 = !DILocation(line: 276, column: 4, scope: !7297)
!7301 = !DILocation(line: 276, column: 12, scope: !7297)
!7302 = !DILocation(line: 274, column: 12, scope: !7298)
!7303 = !DILocation(line: 274, column: 3, scope: !7298)
!7304 = distinct !{!7304, !7303, !7305}
!7305 = !DILocation(line: 277, column: 3, scope: !7298)
!7306 = !DILocation(line: 281, column: 12, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7294, file: !7014, line: 280, column: 17)
!7308 = !DILocation(line: 281, column: 10, scope: !7307)
!7309 = !DILocation(line: 282, column: 8, scope: !7307)
!7310 = !DILocation(line: 283, column: 7, scope: !7307)
!7311 = !DILocation(line: 284, column: 5, scope: !7307)
!7312 = distinct !{!7312, !7295, !7313}
!7313 = !DILocation(line: 285, column: 3, scope: !7294)
!7314 = !DILocation(line: 288, column: 2, scope: !7279)
!7315 = distinct !DISubprogram(name: "memcpy", scope: !7014, file: !7014, line: 298, type: !7316, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7320)
!7316 = !DISubroutineType(types: !7317)
!7317 = !{!102, !7318, !7319, !204}
!7318 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7319 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7320 = !{!7321, !7322, !7323, !7324, !7325}
!7321 = !DILocalVariable(name: "d", arg: 1, scope: !7315, file: !7014, line: 298, type: !7318)
!7322 = !DILocalVariable(name: "s", arg: 2, scope: !7315, file: !7014, line: 298, type: !7319)
!7323 = !DILocalVariable(name: "n", arg: 3, scope: !7315, file: !7014, line: 298, type: !204)
!7324 = !DILocalVariable(name: "d_byte", scope: !7315, file: !7014, line: 302, type: !230)
!7325 = !DILocalVariable(name: "s_byte", scope: !7315, file: !7014, line: 303, type: !2880)
!7326 = !DILocation(line: 0, scope: !7315)
!7327 = !DILocation(line: 337, column: 11, scope: !7315)
!7328 = !DILocation(line: 337, column: 2, scope: !7315)
!7329 = !DILocation(line: 338, column: 25, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7315, file: !7014, line: 337, column: 16)
!7331 = !DILocation(line: 338, column: 17, scope: !7330)
!7332 = !DILocation(line: 338, column: 11, scope: !7330)
!7333 = !DILocation(line: 338, column: 15, scope: !7330)
!7334 = !DILocation(line: 339, column: 4, scope: !7330)
!7335 = distinct !{!7335, !7328, !7336}
!7336 = !DILocation(line: 340, column: 2, scope: !7315)
!7337 = !DILocation(line: 342, column: 2, scope: !7315)
!7338 = distinct !DISubprogram(name: "memset", scope: !7014, file: !7014, line: 352, type: !7339, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7341)
!7339 = !DISubroutineType(types: !7340)
!7340 = !{!102, !102, !103, !204}
!7341 = !{!7342, !7343, !7344, !7345, !7346}
!7342 = !DILocalVariable(name: "buf", arg: 1, scope: !7338, file: !7014, line: 352, type: !102)
!7343 = !DILocalVariable(name: "c", arg: 2, scope: !7338, file: !7014, line: 352, type: !103)
!7344 = !DILocalVariable(name: "n", arg: 3, scope: !7338, file: !7014, line: 352, type: !204)
!7345 = !DILocalVariable(name: "d_byte", scope: !7338, file: !7014, line: 356, type: !230)
!7346 = !DILocalVariable(name: "c_byte", scope: !7338, file: !7014, line: 357, type: !155)
!7347 = !DILocation(line: 0, scope: !7338)
!7348 = !DILocation(line: 357, column: 25, scope: !7338)
!7349 = !DILocation(line: 389, column: 11, scope: !7338)
!7350 = !DILocation(line: 389, column: 2, scope: !7338)
!7351 = !DILocation(line: 390, column: 11, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7338, file: !7014, line: 389, column: 16)
!7353 = !DILocation(line: 390, column: 15, scope: !7352)
!7354 = !DILocation(line: 391, column: 4, scope: !7352)
!7355 = distinct !{!7355, !7350, !7356}
!7356 = !DILocation(line: 392, column: 2, scope: !7338)
!7357 = !DILocation(line: 394, column: 2, scope: !7338)
!7358 = distinct !DISubprogram(name: "memchr", scope: !7014, file: !7014, line: 404, type: !7359, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !7361)
!7359 = !DISubroutineType(types: !7360)
!7360 = !{!102, !13, !103, !204}
!7361 = !{!7362, !7363, !7364, !7365}
!7362 = !DILocalVariable(name: "s", arg: 1, scope: !7358, file: !7014, line: 404, type: !13)
!7363 = !DILocalVariable(name: "c", arg: 2, scope: !7358, file: !7014, line: 404, type: !103)
!7364 = !DILocalVariable(name: "n", arg: 3, scope: !7358, file: !7014, line: 404, type: !204)
!7365 = !DILocalVariable(name: "p", scope: !7366, file: !7014, line: 407, type: !2880)
!7366 = distinct !DILexicalBlock(scope: !7367, file: !7014, line: 406, column: 14)
!7367 = distinct !DILexicalBlock(scope: !7358, file: !7014, line: 406, column: 6)
!7368 = !DILocation(line: 0, scope: !7358)
!7369 = !DILocation(line: 406, column: 8, scope: !7367)
!7370 = !DILocation(line: 406, column: 6, scope: !7358)
!7371 = !DILocation(line: 409, column: 3, scope: !7366)
!7372 = !DILocation(line: 0, scope: !7366)
!7373 = !DILocation(line: 410, column: 8, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7375, file: !7014, line: 410, column: 8)
!7375 = distinct !DILexicalBlock(scope: !7366, file: !7014, line: 409, column: 6)
!7376 = !DILocation(line: 410, column: 13, scope: !7374)
!7377 = !DILocation(line: 410, column: 8, scope: !7375)
!7378 = distinct !{!7378, !7371, !7379}
!7379 = !DILocation(line: 414, column: 20, scope: !7366)
!7380 = !DILocation(line: 417, column: 2, scope: !7358)
!7381 = !DILocation(line: 418, column: 1, scope: !7358)
!7382 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !553, file: !553, line: 23, type: !3291, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7383)
!7383 = !{!7384}
!7384 = !DILocalVariable(name: "hook", arg: 1, scope: !7382, file: !553, line: 23, type: !106)
!7385 = !DILocation(line: 0, scope: !7382)
!7386 = !DILocation(line: 25, column: 15, scope: !7382)
!7387 = !DILocation(line: 26, column: 1, scope: !7382)
!7388 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !553, file: !553, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7389)
!7389 = !{!7390}
!7390 = !DILocalVariable(name: "c", arg: 1, scope: !7388, file: !553, line: 14, type: !103)
!7391 = !DILocation(line: 0, scope: !7388)
!7392 = !DILocation(line: 18, column: 2, scope: !7388)
!7393 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !553, file: !553, line: 28, type: !7394, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7396)
!7394 = !DISubroutineType(types: !7395)
!7395 = !{!103, !103, !549}
!7396 = !{!7397, !7398}
!7397 = !DILocalVariable(name: "c", arg: 1, scope: !7393, file: !553, line: 28, type: !103)
!7398 = !DILocalVariable(name: "stream", arg: 2, scope: !7393, file: !553, line: 28, type: !549)
!7399 = !DILocation(line: 0, scope: !7393)
!7400 = !DILocation(line: 30, column: 27, scope: !7393)
!7401 = !DILocation(line: 30, column: 50, scope: !7393)
!7402 = !DILocation(line: 30, column: 9, scope: !7393)
!7403 = !DILocation(line: 30, column: 2, scope: !7393)
!7404 = distinct !DISubprogram(name: "fputc", scope: !553, file: !553, line: 41, type: !7394, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7405)
!7405 = !{!7406, !7407}
!7406 = !DILocalVariable(name: "c", arg: 1, scope: !7404, file: !553, line: 41, type: !103)
!7407 = !DILocalVariable(name: "stream", arg: 2, scope: !7404, file: !553, line: 41, type: !549)
!7408 = !DILocation(line: 0, scope: !7404)
!7409 = !DILocation(line: 43, column: 9, scope: !7404)
!7410 = !DILocation(line: 43, column: 2, scope: !7404)
!7411 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7412, file: !7412, line: 72, type: !7394, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7413)
!7412 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!7413 = !{!7414, !7415}
!7414 = !DILocalVariable(name: "c", arg: 1, scope: !7411, file: !7412, line: 72, type: !103)
!7415 = !DILocalVariable(name: "stream", arg: 2, scope: !7411, file: !7412, line: 72, type: !549)
!7416 = !DILocation(line: 0, scope: !7411)
!7417 = !DILocation(line: 81, column: 2, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7411, file: !7412, line: 81, column: 2)
!7419 = !{i64 2154126681}
!7420 = !DILocation(line: 82, column: 9, scope: !7411)
!7421 = !DILocation(line: 82, column: 2, scope: !7411)
!7422 = distinct !DISubprogram(name: "fputs", scope: !553, file: !553, line: 46, type: !7423, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7426)
!7423 = !DISubroutineType(types: !7424)
!7424 = !{!103, !7018, !7425}
!7425 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !549)
!7426 = !{!7427, !7428, !7429, !7430}
!7427 = !DILocalVariable(name: "s", arg: 1, scope: !7422, file: !553, line: 46, type: !7018)
!7428 = !DILocalVariable(name: "stream", arg: 2, scope: !7422, file: !553, line: 46, type: !7425)
!7429 = !DILocalVariable(name: "len", scope: !7422, file: !553, line: 48, type: !103)
!7430 = !DILocalVariable(name: "ret", scope: !7422, file: !553, line: 49, type: !103)
!7431 = !DILocation(line: 0, scope: !7422)
!7432 = !DILocation(line: 48, column: 12, scope: !7422)
!7433 = !DILocation(line: 51, column: 8, scope: !7422)
!7434 = !DILocation(line: 53, column: 13, scope: !7422)
!7435 = !DILocation(line: 53, column: 9, scope: !7422)
!7436 = !DILocation(line: 53, column: 2, scope: !7422)
!7437 = distinct !DISubprogram(name: "fwrite", scope: !553, file: !553, line: 99, type: !7438, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7440)
!7438 = !DISubroutineType(types: !7439)
!7439 = !{!204, !7319, !204, !204, !7425}
!7440 = !{!7441, !7442, !7443, !7444}
!7441 = !DILocalVariable(name: "ptr", arg: 1, scope: !7437, file: !553, line: 99, type: !7319)
!7442 = !DILocalVariable(name: "size", arg: 2, scope: !7437, file: !553, line: 99, type: !204)
!7443 = !DILocalVariable(name: "nitems", arg: 3, scope: !7437, file: !553, line: 99, type: !204)
!7444 = !DILocalVariable(name: "stream", arg: 4, scope: !7437, file: !553, line: 100, type: !7425)
!7445 = !DILocation(line: 0, scope: !7437)
!7446 = !DILocation(line: 102, column: 9, scope: !7437)
!7447 = !DILocation(line: 102, column: 2, scope: !7437)
!7448 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7412, file: !7412, line: 96, type: !7438, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7449)
!7449 = !{!7450, !7451, !7452, !7453}
!7450 = !DILocalVariable(name: "ptr", arg: 1, scope: !7448, file: !7412, line: 96, type: !7319)
!7451 = !DILocalVariable(name: "size", arg: 2, scope: !7448, file: !7412, line: 96, type: !204)
!7452 = !DILocalVariable(name: "nitems", arg: 3, scope: !7448, file: !7412, line: 96, type: !204)
!7453 = !DILocalVariable(name: "stream", arg: 4, scope: !7448, file: !7412, line: 96, type: !7425)
!7454 = !DILocation(line: 0, scope: !7448)
!7455 = !DILocation(line: 107, column: 2, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7448, file: !7412, line: 107, column: 2)
!7457 = !{i64 2154126785}
!7458 = !DILocation(line: 108, column: 9, scope: !7448)
!7459 = !DILocation(line: 108, column: 2, scope: !7448)
!7460 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !553, file: !553, line: 56, type: !7438, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7461)
!7461 = !{!7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469}
!7462 = !DILocalVariable(name: "ptr", arg: 1, scope: !7460, file: !553, line: 56, type: !7319)
!7463 = !DILocalVariable(name: "size", arg: 2, scope: !7460, file: !553, line: 56, type: !204)
!7464 = !DILocalVariable(name: "nitems", arg: 3, scope: !7460, file: !553, line: 57, type: !204)
!7465 = !DILocalVariable(name: "stream", arg: 4, scope: !7460, file: !553, line: 57, type: !7425)
!7466 = !DILocalVariable(name: "i", scope: !7460, file: !553, line: 59, type: !204)
!7467 = !DILocalVariable(name: "j", scope: !7460, file: !553, line: 60, type: !204)
!7468 = !DILocalVariable(name: "p", scope: !7460, file: !553, line: 61, type: !2880)
!7469 = !DILabel(scope: !7460, name: "done", file: !553, line: 82)
!7470 = !DILocation(line: 0, scope: !7460)
!7471 = !DILocation(line: 63, column: 14, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7460, file: !553, line: 63, column: 6)
!7473 = !DILocation(line: 63, column: 24, scope: !7472)
!7474 = !DILocation(line: 72, column: 3, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7460, file: !553, line: 70, column: 5)
!7476 = !DILocation(line: 0, scope: !7475)
!7477 = !DILocation(line: 73, column: 8, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !553, line: 73, column: 8)
!7479 = distinct !DILexicalBlock(scope: !7475, file: !553, line: 72, column: 6)
!7480 = !DILocation(line: 73, column: 29, scope: !7478)
!7481 = !DILocation(line: 73, column: 27, scope: !7478)
!7482 = !DILocation(line: 73, column: 21, scope: !7478)
!7483 = !DILocation(line: 73, column: 33, scope: !7478)
!7484 = !DILocation(line: 73, column: 8, scope: !7479)
!7485 = !DILocation(line: 76, column: 5, scope: !7479)
!7486 = !DILocation(line: 77, column: 14, scope: !7475)
!7487 = !DILocation(line: 77, column: 3, scope: !7479)
!7488 = distinct !{!7488, !7474, !7489}
!7489 = !DILocation(line: 77, column: 17, scope: !7475)
!7490 = !DILocation(line: 79, column: 4, scope: !7475)
!7491 = !DILocation(line: 80, column: 13, scope: !7460)
!7492 = !DILocation(line: 80, column: 2, scope: !7475)
!7493 = distinct !{!7493, !7494, !7495}
!7494 = !DILocation(line: 70, column: 2, scope: !7460)
!7495 = !DILocation(line: 80, column: 16, scope: !7460)
!7496 = !DILocation(line: 82, column: 1, scope: !7460)
!7497 = !DILocation(line: 83, column: 17, scope: !7460)
!7498 = !DILocation(line: 83, column: 2, scope: !7460)
!7499 = !DILocation(line: 84, column: 1, scope: !7460)
!7500 = distinct !DISubprogram(name: "puts", scope: !553, file: !553, line: 106, type: !7501, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7503)
!7501 = !DISubroutineType(types: !7502)
!7502 = !{!103, !144}
!7503 = !{!7504}
!7504 = !DILocalVariable(name: "s", arg: 1, scope: !7500, file: !553, line: 106, type: !144)
!7505 = !DILocation(line: 0, scope: !7500)
!7506 = !DILocation(line: 108, column: 6, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7500, file: !553, line: 108, column: 6)
!7508 = !DILocation(line: 108, column: 23, scope: !7507)
!7509 = !DILocation(line: 108, column: 6, scope: !7500)
!7510 = !DILocation(line: 112, column: 9, scope: !7500)
!7511 = !DILocation(line: 112, column: 29, scope: !7500)
!7512 = !DILocation(line: 112, column: 2, scope: !7500)
!7513 = !DILocation(line: 113, column: 1, scope: !7500)
!7514 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !665, file: !665, line: 368, type: !718, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7515)
!7515 = !{!7516}
!7516 = !DILocalVariable(name: "dev", arg: 1, scope: !7514, file: !665, line: 368, type: !694)
!7517 = !DILocation(line: 0, scope: !7514)
!7518 = !DILocation(line: 370, column: 2, scope: !7514)
!7519 = !DILocation(line: 371, column: 1, scope: !7514)
!7520 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !665, file: !665, line: 243, type: !7521, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7523)
!7521 = !DISubroutineType(types: !7522)
!7522 = !{null, !103, !103, !694}
!7523 = !{!7524, !7525, !7526, !7527, !7529}
!7524 = !DILocalVariable(name: "min", arg: 1, scope: !7520, file: !665, line: 243, type: !103)
!7525 = !DILocalVariable(name: "max", arg: 2, scope: !7520, file: !665, line: 243, type: !103)
!7526 = !DILocalVariable(name: "dev", arg: 3, scope: !7520, file: !665, line: 243, type: !694)
!7527 = !DILocalVariable(name: "data", scope: !7520, file: !665, line: 245, type: !7528)
!7528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 32)
!7529 = !DILocalVariable(name: "line", scope: !7520, file: !665, line: 246, type: !103)
!7530 = !DILocation(line: 0, scope: !7520)
!7531 = !DILocation(line: 245, column: 38, scope: !7520)
!7532 = !DILocation(line: 249, column: 24, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !665, line: 249, column: 2)
!7534 = distinct !DILexicalBlock(scope: !7520, file: !665, line: 249, column: 2)
!7535 = !DILocation(line: 249, column: 2, scope: !7534)
!7536 = !DILocation(line: 251, column: 7, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7538, file: !665, line: 251, column: 7)
!7538 = distinct !DILexicalBlock(scope: !7533, file: !665, line: 249, column: 39)
!7539 = !DILocation(line: 251, column: 7, scope: !7538)
!7540 = !DILocation(line: 253, column: 4, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7537, file: !665, line: 251, column: 36)
!7542 = !DILocation(line: 256, column: 24, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7541, file: !665, line: 256, column: 8)
!7544 = !DILocation(line: 256, column: 9, scope: !7543)
!7545 = !DILocation(line: 256, column: 8, scope: !7541)
!7546 = !DILocation(line: 260, column: 43, scope: !7541)
!7547 = !DILocation(line: 260, column: 4, scope: !7541)
!7548 = !DILocation(line: 261, column: 3, scope: !7541)
!7549 = !DILocation(line: 249, column: 35, scope: !7533)
!7550 = distinct !{!7550, !7535, !7551}
!7551 = !DILocation(line: 262, column: 2, scope: !7534)
!7552 = !DILocation(line: 263, column: 1, scope: !7520)
!7553 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !665, file: !665, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7554)
!7554 = !{!7555}
!7555 = !DILocalVariable(name: "line", arg: 1, scope: !7553, file: !665, line: 158, type: !103)
!7556 = !DILocation(line: 0, scope: !7553)
!7557 = !DILocation(line: 170, column: 38, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !665, line: 160, column: 17)
!7559 = distinct !DILexicalBlock(scope: !7553, file: !665, line: 160, column: 6)
!7560 = !DILocation(line: 170, column: 10, scope: !7558)
!7561 = !DILocation(line: 176, column: 1, scope: !7553)
!7562 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !665, file: !665, line: 183, type: !7563, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7565)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{null, !103}
!7565 = !{!7566}
!7566 = !DILocalVariable(name: "line", arg: 1, scope: !7562, file: !665, line: 183, type: !103)
!7567 = !DILocation(line: 0, scope: !7562)
!7568 = !DILocation(line: 195, column: 28, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7570, file: !665, line: 185, column: 17)
!7570 = distinct !DILexicalBlock(scope: !7562, file: !665, line: 185, column: 6)
!7571 = !DILocation(line: 195, column: 3, scope: !7569)
!7572 = !DILocation(line: 200, column: 1, scope: !7562)
!7573 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7574, file: !7574, line: 910, type: !6010, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7575)
!7574 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7575 = !{!7576}
!7576 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7573, file: !7574, line: 910, type: !121)
!7577 = !DILocation(line: 0, scope: !7573)
!7578 = !DILocation(line: 912, column: 3, scope: !7573)
!7579 = !DILocation(line: 913, column: 1, scope: !7573)
!7580 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7574, file: !7574, line: 834, type: !6926, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7581)
!7581 = !{!7582}
!7582 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7580, file: !7574, line: 834, type: !121)
!7583 = !DILocation(line: 0, scope: !7580)
!7584 = !DILocation(line: 836, column: 11, scope: !7580)
!7585 = !DILocation(line: 836, column: 40, scope: !7580)
!7586 = !DILocation(line: 836, column: 3, scope: !7580)
!7587 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !665, file: !665, line: 304, type: !718, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7588)
!7588 = !{!7589}
!7589 = !DILocalVariable(name: "dev", arg: 1, scope: !7587, file: !665, line: 304, type: !694)
!7590 = !DILocation(line: 0, scope: !7587)
!7591 = !DILocation(line: 306, column: 2, scope: !7587)
!7592 = !DILocation(line: 307, column: 1, scope: !7587)
!7593 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !665, file: !665, line: 299, type: !718, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7594)
!7594 = !{!7595}
!7595 = !DILocalVariable(name: "dev", arg: 1, scope: !7593, file: !665, line: 299, type: !694)
!7596 = !DILocation(line: 0, scope: !7593)
!7597 = !DILocation(line: 301, column: 2, scope: !7593)
!7598 = !DILocation(line: 302, column: 1, scope: !7593)
!7599 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !665, file: !665, line: 294, type: !718, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7600)
!7600 = !{!7601}
!7601 = !DILocalVariable(name: "dev", arg: 1, scope: !7599, file: !665, line: 294, type: !694)
!7602 = !DILocation(line: 0, scope: !7599)
!7603 = !DILocation(line: 296, column: 2, scope: !7599)
!7604 = !DILocation(line: 297, column: 1, scope: !7599)
!7605 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !665, file: !665, line: 397, type: !718, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7606)
!7606 = !{!7607}
!7607 = !DILocalVariable(name: "dev", arg: 1, scope: !7605, file: !665, line: 397, type: !694)
!7608 = !DILocation(line: 0, scope: !7605)
!7609 = !DILocation(line: 399, column: 2, scope: !7605)
!7610 = !DILocation(line: 400, column: 1, scope: !7605)
!7611 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !665, file: !665, line: 392, type: !718, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7612)
!7612 = !{!7613}
!7613 = !DILocalVariable(name: "dev", arg: 1, scope: !7611, file: !665, line: 392, type: !694)
!7614 = !DILocation(line: 0, scope: !7611)
!7615 = !DILocation(line: 394, column: 2, scope: !7611)
!7616 = !DILocation(line: 395, column: 1, scope: !7611)
!7617 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !665, file: !665, line: 289, type: !718, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7618)
!7618 = !{!7619}
!7619 = !DILocalVariable(name: "dev", arg: 1, scope: !7617, file: !665, line: 289, type: !694)
!7620 = !DILocation(line: 0, scope: !7617)
!7621 = !DILocation(line: 291, column: 2, scope: !7617)
!7622 = !DILocation(line: 292, column: 1, scope: !7617)
!7623 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !665, file: !665, line: 387, type: !718, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7624)
!7624 = !{!7625}
!7625 = !DILocalVariable(name: "dev", arg: 1, scope: !7623, file: !665, line: 387, type: !694)
!7626 = !DILocation(line: 0, scope: !7623)
!7627 = !DILocation(line: 389, column: 2, scope: !7623)
!7628 = !DILocation(line: 390, column: 1, scope: !7623)
!7629 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !665, file: !665, line: 382, type: !718, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7630)
!7630 = !{!7631}
!7631 = !DILocalVariable(name: "dev", arg: 1, scope: !7629, file: !665, line: 382, type: !694)
!7632 = !DILocation(line: 0, scope: !7629)
!7633 = !DILocation(line: 384, column: 2, scope: !7629)
!7634 = !DILocation(line: 385, column: 1, scope: !7629)
!7635 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !665, file: !665, line: 373, type: !718, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7636)
!7636 = !{!7637}
!7637 = !DILocalVariable(name: "dev", arg: 1, scope: !7635, file: !665, line: 373, type: !694)
!7638 = !DILocation(line: 0, scope: !7635)
!7639 = !DILocation(line: 375, column: 2, scope: !7635)
!7640 = !DILocation(line: 376, column: 1, scope: !7635)
!7641 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !665, file: !665, line: 284, type: !718, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7642)
!7642 = !{!7643}
!7643 = !DILocalVariable(name: "dev", arg: 1, scope: !7641, file: !665, line: 284, type: !694)
!7644 = !DILocation(line: 0, scope: !7641)
!7645 = !DILocation(line: 286, column: 2, scope: !7641)
!7646 = !DILocation(line: 287, column: 1, scope: !7641)
!7647 = distinct !DISubprogram(name: "stm32_exti_init", scope: !665, file: !665, line: 416, type: !692, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7648)
!7648 = !{!7649}
!7649 = !DILocalVariable(name: "dev", arg: 1, scope: !7647, file: !665, line: 416, type: !694)
!7650 = !DILocation(line: 0, scope: !7647)
!7651 = !DILocation(line: 418, column: 2, scope: !7647)
!7652 = !DILocation(line: 420, column: 2, scope: !7647)
!7653 = !DILocation(line: 0, scope: !717)
!7654 = !DILocation(line: 493, column: 2, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !717, file: !665, line: 493, column: 2)
!7656 = !DILocation(line: 497, column: 2, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !717, file: !665, line: 497, column: 2)
!7658 = !DILocation(line: 507, column: 2, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !717, file: !665, line: 507, column: 2)
!7660 = !DILocation(line: 512, column: 2, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !717, file: !665, line: 512, column: 2)
!7662 = !DILocation(line: 516, column: 2, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !717, file: !665, line: 516, column: 2)
!7664 = !DILocation(line: 523, column: 2, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !717, file: !665, line: 523, column: 2)
!7666 = !DILocation(line: 527, column: 2, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !717, file: !665, line: 527, column: 2)
!7668 = !DILocation(line: 581, column: 2, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !717, file: !665, line: 581, column: 2)
!7670 = !DILocation(line: 586, column: 2, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !717, file: !665, line: 586, column: 2)
!7672 = !DILocation(line: 591, column: 2, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !717, file: !665, line: 591, column: 2)
!7674 = !DILocation(line: 595, column: 2, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !717, file: !665, line: 595, column: 2)
!7676 = !DILocation(line: 607, column: 1, scope: !717)
!7677 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !665, file: !665, line: 112, type: !7563, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7678)
!7678 = !{!7679, !7680}
!7679 = !DILocalVariable(name: "line", arg: 1, scope: !7677, file: !665, line: 112, type: !103)
!7680 = !DILocalVariable(name: "irqnum", scope: !7677, file: !665, line: 114, type: !103)
!7681 = !DILocation(line: 0, scope: !7677)
!7682 = !DILocation(line: 121, column: 11, scope: !7677)
!7683 = !DILocation(line: 130, column: 26, scope: !7677)
!7684 = !DILocation(line: 130, column: 2, scope: !7677)
!7685 = !DILocation(line: 134, column: 2, scope: !7677)
!7686 = !DILocation(line: 135, column: 1, scope: !7677)
!7687 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7574, file: !7574, line: 268, type: !6010, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7688)
!7688 = !{!7689}
!7689 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7687, file: !7574, line: 268, type: !121)
!7690 = !DILocation(line: 0, scope: !7687)
!7691 = !DILocation(line: 270, column: 3, scope: !7687)
!7692 = !DILocation(line: 271, column: 1, scope: !7687)
!7693 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !665, file: !665, line: 137, type: !7563, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7694)
!7694 = !{!7695}
!7695 = !DILocalVariable(name: "line", arg: 1, scope: !7693, file: !665, line: 137, type: !103)
!7696 = !DILocation(line: 0, scope: !7693)
!7697 = !DILocation(line: 141, column: 11, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7693, file: !665, line: 141, column: 6)
!7699 = !DILocation(line: 141, column: 6, scope: !7693)
!7700 = !DILocation(line: 145, column: 28, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7698, file: !665, line: 141, column: 17)
!7702 = !DILocation(line: 145, column: 3, scope: !7701)
!7703 = !DILocation(line: 147, column: 2, scope: !7701)
!7704 = !DILocation(line: 151, column: 1, scope: !7693)
!7705 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7574, file: !7574, line: 309, type: !6010, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7706)
!7706 = !{!7707}
!7707 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7705, file: !7574, line: 309, type: !121)
!7708 = !DILocation(line: 0, scope: !7705)
!7709 = !DILocation(line: 311, column: 3, scope: !7705)
!7710 = !DILocation(line: 312, column: 1, scope: !7705)
!7711 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !665, file: !665, line: 202, type: !7712, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7714)
!7712 = !DISubroutineType(types: !7713)
!7713 = !{null, !103, !103}
!7714 = !{!7715, !7716}
!7715 = !DILocalVariable(name: "line", arg: 1, scope: !7711, file: !665, line: 202, type: !103)
!7716 = !DILocalVariable(name: "trigger", arg: 2, scope: !7711, file: !665, line: 202, type: !103)
!7717 = !DILocation(line: 0, scope: !7711)
!7718 = !DILocation(line: 211, column: 2, scope: !7711)
!7719 = !DILocation(line: 213, column: 36, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7711, file: !665, line: 211, column: 19)
!7721 = !DILocation(line: 213, column: 3, scope: !7720)
!7722 = !DILocation(line: 214, column: 3, scope: !7720)
!7723 = !DILocation(line: 215, column: 3, scope: !7720)
!7724 = !DILocation(line: 217, column: 35, scope: !7720)
!7725 = !DILocation(line: 217, column: 3, scope: !7720)
!7726 = !DILocation(line: 218, column: 3, scope: !7720)
!7727 = !DILocation(line: 219, column: 3, scope: !7720)
!7728 = !DILocation(line: 221, column: 36, scope: !7720)
!7729 = !DILocation(line: 221, column: 3, scope: !7720)
!7730 = !DILocation(line: 222, column: 3, scope: !7720)
!7731 = !DILocation(line: 223, column: 3, scope: !7720)
!7732 = !DILocation(line: 225, column: 35, scope: !7720)
!7733 = !DILocation(line: 225, column: 3, scope: !7720)
!7734 = !DILocation(line: 226, column: 3, scope: !7720)
!7735 = !DILocation(line: 227, column: 3, scope: !7720)
!7736 = !DILocation(line: 232, column: 1, scope: !7711)
!7737 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7574, file: !7574, line: 573, type: !6010, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7738)
!7738 = !{!7739}
!7739 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7737, file: !7574, line: 573, type: !121)
!7740 = !DILocation(line: 0, scope: !7737)
!7741 = !DILocation(line: 575, column: 3, scope: !7737)
!7742 = !DILocation(line: 577, column: 1, scope: !7737)
!7743 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7574, file: !7574, line: 703, type: !6010, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7744)
!7744 = !{!7745}
!7745 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7743, file: !7574, line: 703, type: !121)
!7746 = !DILocation(line: 0, scope: !7743)
!7747 = !DILocation(line: 705, column: 3, scope: !7743)
!7748 = !DILocation(line: 706, column: 1, scope: !7743)
!7749 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7574, file: !7574, line: 529, type: !6010, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7750)
!7750 = !{!7751}
!7751 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7749, file: !7574, line: 529, type: !121)
!7752 = !DILocation(line: 0, scope: !7749)
!7753 = !DILocation(line: 531, column: 3, scope: !7749)
!7754 = !DILocation(line: 533, column: 1, scope: !7749)
!7755 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7574, file: !7574, line: 661, type: !6010, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7756)
!7756 = !{!7757}
!7757 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7755, file: !7574, line: 661, type: !121)
!7758 = !DILocation(line: 0, scope: !7755)
!7759 = !DILocation(line: 663, column: 3, scope: !7755)
!7760 = !DILocation(line: 664, column: 1, scope: !7755)
!7761 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !665, file: !665, line: 433, type: !7762, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7764)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!103, !103, !705, !102}
!7764 = !{!7765, !7766, !7767, !7768, !7770}
!7765 = !DILocalVariable(name: "line", arg: 1, scope: !7761, file: !665, line: 433, type: !103)
!7766 = !DILocalVariable(name: "cb", arg: 2, scope: !7761, file: !665, line: 433, type: !705)
!7767 = !DILocalVariable(name: "arg", arg: 3, scope: !7761, file: !665, line: 433, type: !102)
!7768 = !DILocalVariable(name: "dev", scope: !7761, file: !665, line: 435, type: !7769)
!7769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!7770 = !DILocalVariable(name: "data", scope: !7761, file: !665, line: 436, type: !7528)
!7771 = !DILocation(line: 0, scope: !7761)
!7772 = !DILocation(line: 438, column: 21, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7761, file: !665, line: 438, column: 6)
!7774 = !DILocation(line: 438, column: 6, scope: !7773)
!7775 = !DILocation(line: 438, column: 6, scope: !7761)
!7776 = !DILocation(line: 442, column: 20, scope: !7761)
!7777 = !DILocation(line: 443, column: 17, scope: !7761)
!7778 = !DILocation(line: 443, column: 22, scope: !7761)
!7779 = !DILocation(line: 445, column: 2, scope: !7761)
!7780 = !DILocation(line: 446, column: 1, scope: !7761)
!7781 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !665, file: !665, line: 448, type: !7563, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7782)
!7782 = !{!7783, !7784, !7785}
!7783 = !DILocalVariable(name: "line", arg: 1, scope: !7781, file: !665, line: 448, type: !103)
!7784 = !DILocalVariable(name: "dev", scope: !7781, file: !665, line: 450, type: !7769)
!7785 = !DILocalVariable(name: "data", scope: !7781, file: !665, line: 451, type: !7528)
!7786 = !DILocation(line: 0, scope: !7781)
!7787 = !DILocation(line: 453, column: 17, scope: !7781)
!7788 = !DILocation(line: 453, column: 20, scope: !7781)
!7789 = !DILocation(line: 454, column: 17, scope: !7781)
!7790 = !DILocation(line: 454, column: 22, scope: !7781)
!7791 = !DILocation(line: 455, column: 1, scope: !7781)
!7792 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !850, file: !850, line: 183, type: !888, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7793)
!7793 = !{!7794, !7795, !7796, !7797, !7798}
!7794 = !DILocalVariable(name: "dev", arg: 1, scope: !7792, file: !850, line: 183, type: !879)
!7795 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7792, file: !850, line: 184, type: !890)
!7796 = !DILocalVariable(name: "pclken", scope: !7792, file: !850, line: 186, type: !840)
!7797 = !DILocalVariable(name: "reg", scope: !7792, file: !850, line: 187, type: !1574)
!7798 = !DILocalVariable(name: "reg_val", scope: !7792, file: !850, line: 188, type: !121)
!7799 = !DILocation(line: 0, scope: !7792)
!7800 = !DILocation(line: 192, column: 6, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7792, file: !850, line: 192, column: 6)
!7802 = !DILocation(line: 192, column: 6, scope: !7792)
!7803 = !DILocation(line: 197, column: 52, scope: !7792)
!7804 = !DILocation(line: 197, column: 8, scope: !7792)
!7805 = !DILocation(line: 198, column: 12, scope: !7792)
!7806 = !DILocation(line: 199, column: 21, scope: !7792)
!7807 = !DILocation(line: 199, column: 10, scope: !7792)
!7808 = !DILocation(line: 200, column: 7, scope: !7792)
!7809 = !DILocation(line: 202, column: 2, scope: !7792)
!7810 = !DILocation(line: 203, column: 1, scope: !7792)
!7811 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !850, file: !850, line: 205, type: !888, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7812)
!7812 = !{!7813, !7814, !7815, !7816, !7817}
!7813 = !DILocalVariable(name: "dev", arg: 1, scope: !7811, file: !850, line: 205, type: !879)
!7814 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7811, file: !850, line: 206, type: !890)
!7815 = !DILocalVariable(name: "pclken", scope: !7811, file: !850, line: 208, type: !840)
!7816 = !DILocalVariable(name: "reg", scope: !7811, file: !850, line: 209, type: !1574)
!7817 = !DILocalVariable(name: "reg_val", scope: !7811, file: !850, line: 210, type: !121)
!7818 = !DILocation(line: 0, scope: !7811)
!7819 = !DILocation(line: 214, column: 6, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7811, file: !850, line: 214, column: 6)
!7821 = !DILocation(line: 214, column: 6, scope: !7811)
!7822 = !DILocation(line: 219, column: 52, scope: !7811)
!7823 = !DILocation(line: 219, column: 8, scope: !7811)
!7824 = !DILocation(line: 220, column: 12, scope: !7811)
!7825 = !DILocation(line: 221, column: 22, scope: !7811)
!7826 = !DILocation(line: 221, column: 13, scope: !7811)
!7827 = !DILocation(line: 221, column: 10, scope: !7811)
!7828 = !DILocation(line: 222, column: 7, scope: !7811)
!7829 = !DILocation(line: 224, column: 2, scope: !7811)
!7830 = !DILocation(line: 225, column: 1, scope: !7811)
!7831 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !850, file: !850, line: 262, type: !904, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7832)
!7832 = !{!7833, !7834, !7835, !7836, !7837, !7838, !7839, !7840}
!7833 = !DILocalVariable(name: "clock", arg: 1, scope: !7831, file: !850, line: 262, type: !879)
!7834 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7831, file: !850, line: 263, type: !890)
!7835 = !DILocalVariable(name: "rate", arg: 3, scope: !7831, file: !850, line: 264, type: !846)
!7836 = !DILocalVariable(name: "pclken", scope: !7831, file: !850, line: 266, type: !840)
!7837 = !DILocalVariable(name: "ahb_clock", scope: !7831, file: !850, line: 273, type: !121)
!7838 = !DILocalVariable(name: "apb1_clock", scope: !7831, file: !850, line: 274, type: !121)
!7839 = !DILocalVariable(name: "apb2_clock", scope: !7831, file: !850, line: 276, type: !121)
!7840 = !DILocalVariable(name: "ahb3_clock", scope: !7831, file: !850, line: 286, type: !121)
!7841 = !DILocation(line: 0, scope: !7831)
!7842 = !DILocation(line: 273, column: 23, scope: !7831)
!7843 = !DILocation(line: 299, column: 18, scope: !7831)
!7844 = !DILocation(line: 299, column: 2, scope: !7831)
!7845 = !DILocation(line: 274, column: 24, scope: !7831)
!7846 = !DILocation(line: 319, column: 3, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7831, file: !850, line: 299, column: 23)
!7848 = !DILocation(line: 276, column: 24, scope: !7831)
!7849 = !DILocation(line: 323, column: 3, scope: !7847)
!7850 = !DILocation(line: 346, column: 33, scope: !7847)
!7851 = !DILocation(line: 346, column: 11, scope: !7847)
!7852 = !DILocation(line: 350, column: 3, scope: !7847)
!7853 = !DILocation(line: 374, column: 3, scope: !7847)
!7854 = !DILocation(line: 379, column: 3, scope: !7847)
!7855 = !DILocation(line: 0, scope: !7847)
!7856 = !DILocation(line: 396, column: 1, scope: !7831)
!7857 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !850, file: !850, line: 227, type: !920, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7858)
!7858 = !{!7859, !7860, !7861, !7862, !7863, !7864, !7865, !7866}
!7859 = !DILocalVariable(name: "dev", arg: 1, scope: !7857, file: !850, line: 227, type: !879)
!7860 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7857, file: !850, line: 228, type: !890)
!7861 = !DILocalVariable(name: "data", arg: 3, scope: !7857, file: !850, line: 229, type: !102)
!7862 = !DILocalVariable(name: "pclken", scope: !7857, file: !850, line: 233, type: !840)
!7863 = !DILocalVariable(name: "reg", scope: !7857, file: !850, line: 234, type: !1574)
!7864 = !DILocalVariable(name: "reg_val", scope: !7857, file: !850, line: 235, type: !121)
!7865 = !DILocalVariable(name: "dt_val", scope: !7857, file: !850, line: 235, type: !121)
!7866 = !DILocalVariable(name: "err", scope: !7857, file: !850, line: 236, type: !103)
!7867 = !DILocation(line: 0, scope: !7857)
!7868 = !DILocation(line: 241, column: 30, scope: !7857)
!7869 = !DILocation(line: 241, column: 8, scope: !7857)
!7870 = !DILocation(line: 242, column: 10, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7857, file: !850, line: 242, column: 6)
!7872 = !DILocation(line: 242, column: 6, scope: !7857)
!7873 = !DILocation(line: 247, column: 11, scope: !7857)
!7874 = !DILocation(line: 248, column: 6, scope: !7857)
!7875 = !DILocation(line: 247, column: 44, scope: !7857)
!7876 = !DILocation(line: 250, column: 6, scope: !7857)
!7877 = !DILocation(line: 249, column: 52, scope: !7857)
!7878 = !DILocation(line: 249, column: 8, scope: !7857)
!7879 = !DILocation(line: 251, column: 12, scope: !7857)
!7880 = !DILocation(line: 252, column: 10, scope: !7857)
!7881 = !DILocation(line: 253, column: 7, scope: !7857)
!7882 = !DILocation(line: 255, column: 2, scope: !7857)
!7883 = !DILocation(line: 260, column: 1, scope: !7857)
!7884 = distinct !DISubprogram(name: "enabled_clock", scope: !850, file: !850, line: 100, type: !7885, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7887)
!7885 = !DISubroutineType(types: !7886)
!7886 = !{!103, !121}
!7887 = !{!7888, !7889}
!7888 = !DILocalVariable(name: "src_clk", arg: 1, scope: !7884, file: !850, line: 100, type: !121)
!7889 = !DILocalVariable(name: "r", scope: !7884, file: !850, line: 102, type: !103)
!7890 = !DILocation(line: 0, scope: !7884)
!7891 = !DILocation(line: 104, column: 2, scope: !7884)
!7892 = !DILocation(line: 180, column: 2, scope: !7884)
!7893 = !DILocation(line: 181, column: 1, scope: !7884)
!7894 = distinct !DISubprogram(name: "get_bus_clock", scope: !850, file: !850, line: 79, type: !7895, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7897)
!7895 = !DISubroutineType(types: !7896)
!7896 = !{!121, !121, !121}
!7897 = !{!7898, !7899}
!7898 = !DILocalVariable(name: "clock", arg: 1, scope: !7894, file: !850, line: 79, type: !121)
!7899 = !DILocalVariable(name: "prescaler", arg: 2, scope: !7894, file: !850, line: 79, type: !121)
!7900 = !DILocation(line: 0, scope: !7894)
!7901 = !DILocation(line: 81, column: 15, scope: !7894)
!7902 = !DILocation(line: 81, column: 2, scope: !7894)
!7903 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !850, file: !850, line: 68, type: !7904, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7906)
!7904 = !DISubroutineType(types: !7905)
!7905 = !{!121, !121, !103, !103, !103}
!7906 = !{!7907, !7908, !7909, !7910}
!7907 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !7903, file: !850, line: 68, type: !121)
!7908 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !7903, file: !850, line: 69, type: !103)
!7909 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !7903, file: !850, line: 70, type: !103)
!7910 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !7903, file: !850, line: 71, type: !103)
!7911 = !DILocation(line: 0, scope: !7903)
!7912 = !DILocation(line: 75, column: 22, scope: !7903)
!7913 = !DILocation(line: 75, column: 34, scope: !7903)
!7914 = !DILocation(line: 75, column: 2, scope: !7903)
!7915 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !850, file: !850, line: 641, type: !877, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7916)
!7916 = !{!7917, !7918, !7919}
!7917 = !DILocalVariable(name: "dev", arg: 1, scope: !7915, file: !850, line: 641, type: !879)
!7918 = !DILocalVariable(name: "old_flash_freq", scope: !7915, file: !850, line: 664, type: !121)
!7919 = !DILocalVariable(name: "new_flash_freq", scope: !7915, file: !850, line: 665, type: !121)
!7920 = !DILocation(line: 0, scope: !7915)
!7921 = !DILocation(line: 646, column: 2, scope: !7915)
!7922 = !DILocation(line: 667, column: 19, scope: !7915)
!7923 = !DILocation(line: 674, column: 21, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7915, file: !850, line: 674, column: 6)
!7925 = !DILocation(line: 674, column: 6, scope: !7915)
!7926 = !DILocation(line: 675, column: 3, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7924, file: !850, line: 674, column: 59)
!7928 = !DILocation(line: 676, column: 2, scope: !7927)
!7929 = !DILocation(line: 680, column: 2, scope: !7915)
!7930 = !DILocation(line: 683, column: 2, scope: !7915)
!7931 = !DILocation(line: 690, column: 3, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !850, line: 689, column: 9)
!7933 = distinct !DILexicalBlock(scope: !7915, file: !850, line: 685, column: 6)
!7934 = !DILocation(line: 695, column: 2, scope: !7915)
!7935 = !DILocation(line: 696, column: 2, scope: !7915)
!7936 = !DILocation(line: 696, column: 9, scope: !7915)
!7937 = !DILocation(line: 696, column: 34, scope: !7915)
!7938 = distinct !{!7938, !7935, !7939}
!7939 = !DILocation(line: 697, column: 2, scope: !7915)
!7940 = !DILocation(line: 720, column: 21, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7915, file: !850, line: 720, column: 6)
!7942 = !DILocation(line: 720, column: 6, scope: !7915)
!7943 = !DILocation(line: 721, column: 3, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7941, file: !850, line: 720, column: 60)
!7945 = !DILocation(line: 722, column: 2, scope: !7944)
!7946 = !DILocation(line: 725, column: 18, scope: !7915)
!7947 = !DILocation(line: 728, column: 2, scope: !7915)
!7948 = !DILocation(line: 730, column: 2, scope: !7915)
!7949 = !DILocation(line: 745, column: 2, scope: !7915)
!7950 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !7951, file: !7951, line: 3275, type: !6000, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!7951 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7952 = !DILocation(line: 3277, column: 21, scope: !7950)
!7953 = !DILocation(line: 3277, column: 3, scope: !7950)
!7954 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !850, file: !850, line: 507, type: !3157, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!7955 = !DILocation(line: 534, column: 7, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !850, line: 534, column: 7)
!7957 = distinct !DILexicalBlock(scope: !7958, file: !850, line: 532, column: 37)
!7958 = distinct !DILexicalBlock(scope: !7954, file: !850, line: 532, column: 6)
!7959 = !DILocation(line: 534, column: 28, scope: !7956)
!7960 = !DILocation(line: 534, column: 7, scope: !7957)
!7961 = !DILocation(line: 536, column: 4, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7956, file: !850, line: 534, column: 34)
!7963 = !DILocation(line: 537, column: 4, scope: !7962)
!7964 = !DILocation(line: 537, column: 11, scope: !7962)
!7965 = !DILocation(line: 537, column: 32, scope: !7962)
!7966 = distinct !{!7966, !7963, !7967}
!7967 = !DILocation(line: 539, column: 4, scope: !7962)
!7968 = !DILocation(line: 583, column: 3, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7970, file: !850, line: 577, column: 37)
!7970 = distinct !DILexicalBlock(scope: !7954, file: !850, line: 577, column: 6)
!7971 = !DILocation(line: 584, column: 3, scope: !7969)
!7972 = !DILocation(line: 584, column: 10, scope: !7969)
!7973 = !DILocation(line: 584, column: 31, scope: !7969)
!7974 = distinct !{!7974, !7971, !7975}
!7975 = !DILocation(line: 585, column: 3, scope: !7969)
!7976 = !DILocation(line: 627, column: 1, scope: !7954)
!7977 = distinct !DISubprogram(name: "set_up_plls", scope: !850, file: !850, line: 448, type: !3157, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!7978 = !DILocation(line: 460, column: 6, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7977, file: !850, line: 460, column: 6)
!7980 = !DILocation(line: 460, column: 31, scope: !7979)
!7981 = !DILocation(line: 460, column: 6, scope: !7977)
!7982 = !DILocation(line: 461, column: 3, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7979, file: !850, line: 460, column: 67)
!7984 = !DILocation(line: 462, column: 3, scope: !7983)
!7985 = !DILocation(line: 463, column: 2, scope: !7983)
!7986 = !DILocation(line: 464, column: 2, scope: !7977)
!7987 = !DILocation(line: 488, column: 2, scope: !7977)
!7988 = !DILocation(line: 496, column: 2, scope: !7977)
!7989 = !DILocation(line: 499, column: 2, scope: !7977)
!7990 = !DILocation(line: 500, column: 2, scope: !7977)
!7991 = !DILocation(line: 500, column: 9, scope: !7977)
!7992 = !DILocation(line: 500, column: 30, scope: !7977)
!7993 = distinct !{!7993, !7990, !7994}
!7994 = !DILocation(line: 502, column: 2, scope: !7977)
!7995 = !DILocation(line: 505, column: 1, scope: !7977)
!7996 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7951, file: !7951, line: 3224, type: !6010, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7997)
!7997 = !{!7998}
!7998 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7996, file: !7951, line: 3224, type: !121)
!7999 = !DILocation(line: 0, scope: !7996)
!8000 = !DILocation(line: 3226, column: 3, scope: !7996)
!8001 = !DILocation(line: 3227, column: 1, scope: !7996)
!8002 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7951, file: !7951, line: 3188, type: !6010, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !8003)
!8003 = !{!8004}
!8004 = !DILocalVariable(name: "Source", arg: 1, scope: !8002, file: !7951, line: 3188, type: !121)
!8005 = !DILocation(line: 0, scope: !8002)
!8006 = !DILocation(line: 3190, column: 3, scope: !8002)
!8007 = !DILocation(line: 3191, column: 1, scope: !8002)
!8008 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7951, file: !7951, line: 3204, type: !6000, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!8009 = !DILocation(line: 3206, column: 21, scope: !8008)
!8010 = !DILocation(line: 3206, column: 3, scope: !8008)
!8011 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7951, file: !7951, line: 3240, type: !6010, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !8012)
!8012 = !{!8013}
!8013 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8011, file: !7951, line: 3240, type: !121)
!8014 = !DILocation(line: 0, scope: !8011)
!8015 = !DILocation(line: 3242, column: 3, scope: !8011)
!8016 = !DILocation(line: 3243, column: 1, scope: !8011)
!8017 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7951, file: !7951, line: 3256, type: !6010, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !8018)
!8018 = !{!8019}
!8019 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8017, file: !7951, line: 3256, type: !121)
!8020 = !DILocation(line: 0, scope: !8017)
!8021 = !DILocation(line: 3258, column: 3, scope: !8017)
!8022 = !DILocation(line: 3259, column: 1, scope: !8017)
!8023 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !850, file: !850, line: 409, type: !3157, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!8024 = !DILocation(line: 412, column: 6, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8023, file: !850, line: 412, column: 6)
!8026 = !DILocation(line: 412, column: 27, scope: !8025)
!8027 = !DILocation(line: 412, column: 6, scope: !8023)
!8028 = !DILocation(line: 414, column: 3, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8025, file: !850, line: 412, column: 33)
!8030 = !DILocation(line: 415, column: 3, scope: !8029)
!8031 = !DILocation(line: 415, column: 10, scope: !8029)
!8032 = !DILocation(line: 415, column: 31, scope: !8029)
!8033 = distinct !{!8033, !8030, !8034}
!8034 = !DILocation(line: 417, column: 3, scope: !8029)
!8035 = !DILocation(line: 421, column: 2, scope: !8023)
!8036 = !DILocation(line: 422, column: 2, scope: !8023)
!8037 = !DILocation(line: 422, column: 9, scope: !8023)
!8038 = !DILocation(line: 422, column: 34, scope: !8023)
!8039 = distinct !{!8039, !8036, !8040}
!8040 = !DILocation(line: 423, column: 2, scope: !8023)
!8041 = !DILocation(line: 424, column: 1, scope: !8023)
!8042 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !7951, file: !7951, line: 4195, type: !3157, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!8043 = !DILocation(line: 4197, column: 3, scope: !8042)
!8044 = !DILocation(line: 4198, column: 1, scope: !8042)
!8045 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7951, file: !7951, line: 4184, type: !3157, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!8046 = !DILocation(line: 4186, column: 3, scope: !8045)
!8047 = !DILocation(line: 4187, column: 1, scope: !8045)
!8048 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7951, file: !7951, line: 4205, type: !6000, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!8049 = !DILocation(line: 4207, column: 11, scope: !8048)
!8050 = !DILocation(line: 4207, column: 44, scope: !8048)
!8051 = !DILocation(line: 4207, column: 3, scope: !8048)
!8052 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7951, file: !7951, line: 3007, type: !6000, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!8053 = !DILocation(line: 3009, column: 11, scope: !8052)
!8054 = !DILocation(line: 3009, column: 44, scope: !8052)
!8055 = !DILocation(line: 3009, column: 3, scope: !8052)
!8056 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7951, file: !7951, line: 2987, type: !3157, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!8057 = !DILocation(line: 2989, column: 3, scope: !8056)
!8058 = !DILocation(line: 2990, column: 1, scope: !8056)
!8059 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !7951, file: !7951, line: 3143, type: !3157, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!8060 = !DILocation(line: 3145, column: 3, scope: !8059)
!8061 = !DILocation(line: 3146, column: 1, scope: !8059)
!8062 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !7951, file: !7951, line: 3163, type: !6000, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !317)
!8063 = !DILocation(line: 3165, column: 11, scope: !8062)
!8064 = !DILocation(line: 3165, column: 46, scope: !8062)
!8065 = !DILocation(line: 3165, column: 3, scope: !8062)
!8066 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8067, file: !8067, line: 40, type: !6000, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2882, retainedNodes: !317)
!8067 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8068 = !DILocation(line: 43, column: 3, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !8067, line: 42, column: 37)
!8070 = distinct !DILexicalBlock(scope: !8066, file: !8067, line: 42, column: 6)
!8071 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8067, file: !8067, line: 56, type: !3157, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2882, retainedNodes: !317)
!8072 = !DILocation(line: 58, column: 2, scope: !8071)
!8073 = !DILocation(line: 62, column: 1, scope: !8071)
!8074 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7951, file: !7951, line: 4304, type: !8075, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2882, retainedNodes: !8077)
!8075 = !DISubroutineType(types: !8076)
!8076 = !{null, !121, !121, !121, !121}
!8077 = !{!8078, !8079, !8080, !8081}
!8078 = !DILocalVariable(name: "Source", arg: 1, scope: !8074, file: !7951, line: 4304, type: !121)
!8079 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8074, file: !7951, line: 4304, type: !121)
!8080 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8074, file: !7951, line: 4304, type: !121)
!8081 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8074, file: !7951, line: 4304, type: !121)
!8082 = !DILocation(line: 0, scope: !8074)
!8083 = !DILocation(line: 4306, column: 3, scope: !8074)
!8084 = !DILocation(line: 4308, column: 3, scope: !8074)
!8085 = !DILocation(line: 4312, column: 1, scope: !8074)
!8086 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8067, file: !8067, line: 69, type: !3157, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2882, retainedNodes: !317)
!8087 = !DILocation(line: 72, column: 2, scope: !8086)
!8088 = !DILocation(line: 73, column: 1, scope: !8086)
!8089 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8090, file: !8090, line: 1185, type: !6010, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2882, retainedNodes: !8091)
!8090 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8091 = !{!8092, !8093}
!8092 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8089, file: !8090, line: 1185, type: !121)
!8093 = !DILocalVariable(name: "tmpreg", scope: !8089, file: !8090, line: 1187, type: !120)
!8094 = !DILocation(line: 0, scope: !8089)
!8095 = !DILocation(line: 1187, column: 3, scope: !8089)
!8096 = !DILocation(line: 1187, column: 17, scope: !8089)
!8097 = !DILocation(line: 1188, column: 3, scope: !8089)
!8098 = !DILocation(line: 1190, column: 12, scope: !8089)
!8099 = !DILocation(line: 1190, column: 10, scope: !8089)
!8100 = !DILocation(line: 1191, column: 9, scope: !8089)
!8101 = !DILocation(line: 1192, column: 1, scope: !8089)
!8102 = distinct !DISubprogram(name: "uart_console_init", scope: !928, file: !928, line: 588, type: !965, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8103)
!8103 = !{!8104}
!8104 = !DILocalVariable(name: "arg", arg: 1, scope: !8102, file: !928, line: 588, type: !944)
!8105 = !DILocation(line: 0, scope: !8102)
!8106 = !DILocation(line: 593, column: 7, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8102, file: !928, line: 593, column: 6)
!8108 = !DILocation(line: 593, column: 6, scope: !8102)
!8109 = !DILocation(line: 597, column: 2, scope: !8102)
!8110 = !DILocation(line: 599, column: 2, scope: !8102)
!8111 = !DILocation(line: 600, column: 1, scope: !8102)
!8112 = distinct !DISubprogram(name: "device_is_ready", scope: !8113, file: !8113, line: 47, type: !8114, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8116)
!8113 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!8114 = !DISubroutineType(types: !8115)
!8115 = !{!157, !944}
!8116 = !{!8117}
!8117 = !DILocalVariable(name: "dev", arg: 1, scope: !8112, file: !8113, line: 47, type: !944)
!8118 = !DILocation(line: 0, scope: !8112)
!8119 = !DILocation(line: 55, column: 2, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8112, file: !8113, line: 55, column: 2)
!8121 = !{i64 2154266080}
!8122 = !DILocation(line: 56, column: 9, scope: !8112)
!8123 = !DILocation(line: 56, column: 2, scope: !8112)
!8124 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !928, file: !928, line: 573, type: !3157, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !317)
!8125 = !DILocation(line: 576, column: 2, scope: !8124)
!8126 = !DILocation(line: 579, column: 2, scope: !8124)
!8127 = !DILocation(line: 581, column: 1, scope: !8124)
!8128 = distinct !DISubprogram(name: "console_out", scope: !928, file: !928, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8129)
!8129 = !{!8130}
!8130 = !DILocalVariable(name: "c", arg: 1, scope: !8128, file: !928, line: 77, type: !103)
!8131 = !DILocation(line: 0, scope: !8128)
!8132 = !DILocation(line: 89, column: 11, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8128, file: !928, line: 89, column: 6)
!8134 = !DILocation(line: 89, column: 6, scope: !8128)
!8135 = !DILocation(line: 90, column: 3, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8133, file: !928, line: 89, column: 17)
!8137 = !DILocation(line: 91, column: 2, scope: !8136)
!8138 = !DILocation(line: 92, column: 34, scope: !8128)
!8139 = !DILocation(line: 92, column: 2, scope: !8128)
!8140 = !DILocation(line: 94, column: 2, scope: !8128)
!8141 = distinct !DISubprogram(name: "uart_poll_out", scope: !8142, file: !8142, line: 95, type: !961, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8143)
!8142 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getline")
!8143 = !{!8144, !8145}
!8144 = !DILocalVariable(name: "dev", arg: 1, scope: !8141, file: !8142, line: 95, type: !944)
!8145 = !DILocalVariable(name: "out_char", arg: 2, scope: !8141, file: !8142, line: 95, type: !155)
!8146 = !DILocation(line: 0, scope: !8141)
!8147 = !DILocation(line: 105, column: 2, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8141, file: !8142, line: 105, column: 2)
!8149 = !{i64 2154349325}
!8150 = !DILocation(line: 106, column: 2, scope: !8141)
!8151 = !DILocation(line: 107, column: 1, scope: !8141)
!8152 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !209, file: !209, line: 574, type: !961, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8153)
!8153 = !{!8154, !8155, !8156}
!8154 = !DILocalVariable(name: "dev", arg: 1, scope: !8152, file: !209, line: 574, type: !944)
!8155 = !DILocalVariable(name: "out_char", arg: 2, scope: !8152, file: !209, line: 575, type: !155)
!8156 = !DILocalVariable(name: "api", scope: !8152, file: !209, line: 577, type: !936)
!8157 = !DILocation(line: 0, scope: !8152)
!8158 = !DILocation(line: 578, column: 40, scope: !8152)
!8159 = !DILocation(line: 580, column: 7, scope: !8152)
!8160 = !DILocation(line: 580, column: 2, scope: !8152)
!8161 = !DILocation(line: 581, column: 1, scope: !8152)
!8162 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8114, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8163)
!8163 = !{!8164}
!8164 = !DILocalVariable(name: "dev", arg: 1, scope: !8162, file: !141, line: 730, type: !944)
!8165 = !DILocation(line: 0, scope: !8162)
!8166 = !DILocation(line: 732, column: 9, scope: !8162)
!8167 = !DILocation(line: 732, column: 2, scope: !8162)
!8168 = distinct !DISubprogram(name: "uart_register_input", scope: !928, file: !928, line: 549, type: !8169, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8171)
!8169 = !DISubroutineType(types: !8170)
!8170 = !{null, !1025, !1025, !1065}
!8171 = !{!8172, !8173, !8174}
!8172 = !DILocalVariable(name: "avail", arg: 1, scope: !8168, file: !928, line: 549, type: !1025)
!8173 = !DILocalVariable(name: "lines", arg: 2, scope: !8168, file: !928, line: 549, type: !1025)
!8174 = !DILocalVariable(name: "completion", arg: 3, scope: !8168, file: !928, line: 550, type: !1065)
!8175 = !DILocation(line: 0, scope: !8168)
!8176 = !DILocation(line: 552, column: 14, scope: !8168)
!8177 = !DILocation(line: 553, column: 14, scope: !8168)
!8178 = !DILocation(line: 554, column: 16, scope: !8168)
!8179 = !DILocation(line: 556, column: 2, scope: !8168)
!8180 = !DILocation(line: 557, column: 1, scope: !8168)
!8181 = distinct !DISubprogram(name: "console_input_init", scope: !928, file: !928, line: 532, type: !3157, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8182)
!8182 = !{!8183}
!8183 = !DILocalVariable(name: "c", scope: !8181, file: !928, line: 534, type: !154)
!8184 = !DILocation(line: 534, column: 2, scope: !8181)
!8185 = !DILocation(line: 536, column: 2, scope: !8181)
!8186 = !DILocation(line: 537, column: 2, scope: !8181)
!8187 = !DILocation(line: 539, column: 2, scope: !8181)
!8188 = !DILocation(line: 542, column: 9, scope: !8181)
!8189 = !DILocation(line: 542, column: 2, scope: !8181)
!8190 = !DILocation(line: 0, scope: !8181)
!8191 = !DILocation(line: 543, column: 3, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8181, file: !928, line: 542, column: 46)
!8193 = distinct !{!8193, !8189, !8194}
!8194 = !DILocation(line: 544, column: 2, scope: !8181)
!8195 = !DILocation(line: 546, column: 2, scope: !8181)
!8196 = !DILocation(line: 547, column: 1, scope: !8181)
!8197 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !8142, file: !8142, line: 265, type: !995, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8198)
!8198 = !{!8199}
!8199 = !DILocalVariable(name: "dev", arg: 1, scope: !8197, file: !8142, line: 265, type: !944)
!8200 = !DILocation(line: 0, scope: !8197)
!8201 = !DILocation(line: 274, column: 2, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8197, file: !8142, line: 274, column: 2)
!8203 = !{i64 2154349801}
!8204 = !DILocation(line: 275, column: 2, scope: !8197)
!8205 = !DILocation(line: 276, column: 1, scope: !8197)
!8206 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !8142, file: !8142, line: 217, type: !995, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8207)
!8207 = !{!8208}
!8208 = !DILocalVariable(name: "dev", arg: 1, scope: !8206, file: !8142, line: 217, type: !944)
!8209 = !DILocation(line: 0, scope: !8206)
!8210 = !DILocation(line: 226, column: 2, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8206, file: !8142, line: 226, column: 2)
!8212 = !{i64 2154349665}
!8213 = !DILocation(line: 227, column: 2, scope: !8206)
!8214 = !DILocation(line: 228, column: 1, scope: !8206)
!8215 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !209, file: !209, line: 1190, type: !8216, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8218)
!8216 = !DISubroutineType(types: !8217)
!8217 = !{null, !944, !1011}
!8218 = !{!8219, !8220}
!8219 = !DILocalVariable(name: "dev", arg: 1, scope: !8215, file: !209, line: 1190, type: !944)
!8220 = !DILocalVariable(name: "cb", arg: 2, scope: !8215, file: !209, line: 1191, type: !1011)
!8221 = !DILocation(line: 0, scope: !8215)
!8222 = !DILocation(line: 1193, column: 2, scope: !8215)
!8223 = !DILocation(line: 1194, column: 1, scope: !8215)
!8224 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !209, file: !209, line: 1024, type: !965, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8225)
!8225 = !{!8226, !8227}
!8226 = !DILocalVariable(name: "dev", arg: 1, scope: !8224, file: !209, line: 1024, type: !944)
!8227 = !DILocalVariable(name: "api", scope: !8224, file: !209, line: 1027, type: !936)
!8228 = !DILocation(line: 0, scope: !8224)
!8229 = !DILocation(line: 1028, column: 40, scope: !8224)
!8230 = !DILocation(line: 1030, column: 11, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8224, file: !209, line: 1030, column: 6)
!8232 = !DILocation(line: 1030, column: 24, scope: !8231)
!8233 = !DILocation(line: 1030, column: 6, scope: !8224)
!8234 = !DILocation(line: 1033, column: 9, scope: !8224)
!8235 = !DILocation(line: 1033, column: 2, scope: !8224)
!8236 = !DILocation(line: 1038, column: 1, scope: !8224)
!8237 = distinct !DISubprogram(name: "uart_fifo_read", scope: !209, file: !209, line: 785, type: !991, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8238)
!8238 = !{!8239, !8240, !8241, !8242}
!8239 = !DILocalVariable(name: "dev", arg: 1, scope: !8237, file: !209, line: 785, type: !944)
!8240 = !DILocalVariable(name: "rx_data", arg: 2, scope: !8237, file: !209, line: 785, type: !267)
!8241 = !DILocalVariable(name: "size", arg: 3, scope: !8237, file: !209, line: 786, type: !268)
!8242 = !DILocalVariable(name: "api", scope: !8237, file: !209, line: 789, type: !936)
!8243 = !DILocation(line: 0, scope: !8237)
!8244 = !DILocation(line: 790, column: 40, scope: !8237)
!8245 = !DILocation(line: 792, column: 11, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8237, file: !209, line: 792, column: 6)
!8247 = !DILocation(line: 792, column: 21, scope: !8246)
!8248 = !DILocation(line: 792, column: 6, scope: !8237)
!8249 = !DILocation(line: 796, column: 9, scope: !8237)
!8250 = !DILocation(line: 796, column: 2, scope: !8237)
!8251 = !DILocation(line: 803, column: 1, scope: !8237)
!8252 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !8142, file: !8142, line: 241, type: !995, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8253)
!8253 = !{!8254}
!8254 = !DILocalVariable(name: "dev", arg: 1, scope: !8252, file: !8142, line: 241, type: !944)
!8255 = !DILocation(line: 0, scope: !8252)
!8256 = !DILocation(line: 250, column: 2, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8252, file: !8142, line: 250, column: 2)
!8258 = !{i64 2154349733}
!8259 = !DILocation(line: 251, column: 2, scope: !8252)
!8260 = !DILocation(line: 252, column: 1, scope: !8252)
!8261 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !209, file: !209, line: 934, type: !995, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8262)
!8262 = !{!8263, !8264}
!8263 = !DILocalVariable(name: "dev", arg: 1, scope: !8261, file: !209, line: 934, type: !944)
!8264 = !DILocalVariable(name: "api", scope: !8261, file: !209, line: 937, type: !936)
!8265 = !DILocation(line: 0, scope: !8261)
!8266 = !DILocation(line: 938, column: 40, scope: !8261)
!8267 = !DILocation(line: 940, column: 11, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8261, file: !209, line: 940, column: 6)
!8269 = !DILocation(line: 940, column: 25, scope: !8268)
!8270 = !DILocation(line: 940, column: 6, scope: !8261)
!8271 = !DILocation(line: 941, column: 3, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8268, file: !209, line: 940, column: 34)
!8273 = !DILocation(line: 942, column: 2, scope: !8272)
!8274 = !DILocation(line: 946, column: 1, scope: !8261)
!8275 = !DILocation(line: 0, scope: !1073)
!8276 = !DILocation(line: 433, column: 9, scope: !1073)
!8277 = !DILocation(line: 433, column: 43, scope: !1073)
!8278 = !DILocation(line: 434, column: 9, scope: !1073)
!8279 = !DILocation(line: 433, column: 2, scope: !1073)
!8280 = !DILocation(line: 436, column: 3, scope: !1078)
!8281 = !DILocation(line: 439, column: 8, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !1078, file: !928, line: 439, column: 7)
!8283 = !DILocation(line: 439, column: 7, scope: !1078)
!8284 = distinct !{!8284, !8279, !8285}
!8285 = !DILocation(line: 529, column: 2, scope: !1073)
!8286 = !DILocation(line: 0, scope: !1078)
!8287 = !DILocation(line: 445, column: 8, scope: !1078)
!8288 = !DILocation(line: 446, column: 10, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !1078, file: !928, line: 446, column: 7)
!8290 = !DILocation(line: 446, column: 7, scope: !1078)
!8291 = !DILocation(line: 460, column: 8, scope: !1083)
!8292 = !DILocation(line: 460, column: 7, scope: !1078)
!8293 = !DILocation(line: 461, column: 10, scope: !1081)
!8294 = !DILocation(line: 0, scope: !1081)
!8295 = !DILocation(line: 461, column: 8, scope: !1082)
!8296 = !DILocation(line: 462, column: 9, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !1082, file: !928, line: 462, column: 8)
!8298 = !DILocation(line: 462, column: 8, scope: !1082)
!8299 = !DILocation(line: 477, column: 7, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !1078, file: !928, line: 477, column: 7)
!8301 = !DILocation(line: 477, column: 7, scope: !1078)
!8302 = !DILocation(line: 478, column: 16, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8300, file: !928, line: 477, column: 46)
!8304 = !DILocation(line: 478, column: 22, scope: !8303)
!8305 = !DILocation(line: 478, column: 4, scope: !8303)
!8306 = !DILocation(line: 479, column: 4, scope: !8303)
!8307 = !DILocation(line: 483, column: 7, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !1078, file: !928, line: 483, column: 7)
!8309 = !DILocation(line: 483, column: 7, scope: !1078)
!8310 = !DILocation(line: 484, column: 13, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8312, file: !928, line: 484, column: 8)
!8312 = distinct !DILexicalBlock(scope: !8308, file: !928, line: 483, column: 55)
!8313 = !DILocation(line: 484, column: 8, scope: !8312)
!8314 = !DILocation(line: 485, column: 5, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8311, file: !928, line: 484, column: 26)
!8316 = !DILocation(line: 486, column: 5, scope: !8315)
!8317 = !DILocation(line: 487, column: 4, scope: !8315)
!8318 = !DILocation(line: 493, column: 16, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !1078, file: !928, line: 493, column: 7)
!8320 = !DILocation(line: 493, column: 8, scope: !8319)
!8321 = !DILocation(line: 493, column: 7, scope: !1078)
!8322 = !DILocation(line: 494, column: 4, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8319, file: !928, line: 493, column: 23)
!8324 = !DILocation(line: 497, column: 9, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8326, file: !928, line: 497, column: 9)
!8326 = distinct !DILexicalBlock(scope: !8323, file: !928, line: 494, column: 18)
!8327 = !DILocation(line: 497, column: 13, scope: !8325)
!8328 = !DILocation(line: 497, column: 9, scope: !8326)
!8329 = !DILocation(line: 498, column: 16, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8325, file: !928, line: 497, column: 18)
!8331 = !DILocation(line: 498, column: 26, scope: !8330)
!8332 = !DILocation(line: 498, column: 34, scope: !8330)
!8333 = !DILocation(line: 498, column: 6, scope: !8330)
!8334 = !DILocation(line: 499, column: 5, scope: !8330)
!8335 = !DILocation(line: 502, column: 5, scope: !8326)
!8336 = !DILocation(line: 503, column: 5, scope: !8326)
!8337 = !DILocation(line: 505, column: 5, scope: !8326)
!8338 = !DILocation(line: 505, column: 15, scope: !8326)
!8339 = !DILocation(line: 505, column: 21, scope: !8326)
!8340 = !DILocation(line: 505, column: 19, scope: !8326)
!8341 = !DILocation(line: 505, column: 26, scope: !8326)
!8342 = !DILocation(line: 506, column: 5, scope: !8326)
!8343 = !DILocation(line: 507, column: 5, scope: !8326)
!8344 = !DILocation(line: 508, column: 9, scope: !8326)
!8345 = !DILocation(line: 509, column: 9, scope: !8326)
!8346 = !DILocation(line: 510, column: 5, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8326, file: !928, line: 510, column: 5)
!8348 = !DILocation(line: 511, column: 9, scope: !8326)
!8349 = !DILocation(line: 512, column: 5, scope: !8326)
!8350 = !DILocation(line: 514, column: 9, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8326, file: !928, line: 514, column: 9)
!8352 = !DILocation(line: 514, column: 23, scope: !8351)
!8353 = !DILocation(line: 515, column: 27, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8351, file: !928, line: 514, column: 32)
!8355 = !DILocation(line: 515, column: 38, scope: !8354)
!8356 = !DILocation(line: 515, column: 13, scope: !8354)
!8357 = !DILocation(line: 515, column: 10, scope: !8354)
!8358 = !DILocation(line: 516, column: 5, scope: !8354)
!8359 = !DILocation(line: 526, column: 7, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !1078, file: !928, line: 526, column: 7)
!8361 = !DILocation(line: 526, column: 13, scope: !8360)
!8362 = !DILocation(line: 526, column: 11, scope: !8360)
!8363 = !DILocation(line: 526, column: 17, scope: !8360)
!8364 = !DILocation(line: 526, column: 7, scope: !1078)
!8365 = !DILocation(line: 527, column: 17, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8360, file: !928, line: 526, column: 42)
!8367 = !DILocation(line: 527, column: 30, scope: !8366)
!8368 = !DILocation(line: 527, column: 4, scope: !8366)
!8369 = !DILocation(line: 528, column: 3, scope: !8366)
!8370 = !DILocation(line: 530, column: 1, scope: !1073)
!8371 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !209, file: !209, line: 1163, type: !1009, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8372)
!8372 = !{!8373, !8374, !8375, !8376}
!8373 = !DILocalVariable(name: "dev", arg: 1, scope: !8371, file: !209, line: 1163, type: !944)
!8374 = !DILocalVariable(name: "cb", arg: 2, scope: !8371, file: !209, line: 1164, type: !1011)
!8375 = !DILocalVariable(name: "user_data", arg: 3, scope: !8371, file: !209, line: 1165, type: !102)
!8376 = !DILocalVariable(name: "api", scope: !8371, file: !209, line: 1168, type: !936)
!8377 = !DILocation(line: 0, scope: !8371)
!8378 = !DILocation(line: 1169, column: 40, scope: !8371)
!8379 = !DILocation(line: 1171, column: 11, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8371, file: !209, line: 1171, column: 6)
!8381 = !DILocation(line: 1171, column: 20, scope: !8380)
!8382 = !DILocation(line: 1171, column: 29, scope: !8380)
!8383 = !DILocation(line: 1171, column: 46, scope: !8380)
!8384 = !DILocation(line: 1171, column: 6, scope: !8371)
!8385 = !DILocation(line: 1172, column: 3, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8380, file: !209, line: 1171, column: 56)
!8387 = !DILocation(line: 1173, column: 2, scope: !8386)
!8388 = !DILocation(line: 1179, column: 1, scope: !8371)
!8389 = distinct !DISubprogram(name: "uart_irq_update", scope: !8142, file: !8142, line: 360, type: !965, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8390)
!8390 = !{!8391}
!8391 = !DILocalVariable(name: "dev", arg: 1, scope: !8389, file: !8142, line: 360, type: !944)
!8392 = !DILocation(line: 0, scope: !8389)
!8393 = !DILocation(line: 368, column: 2, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8389, file: !8142, line: 368, column: 2)
!8395 = !{i64 2154350073}
!8396 = !DILocation(line: 369, column: 9, scope: !8389)
!8397 = !DILocation(line: 369, column: 2, scope: !8389)
!8398 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !8142, file: !8142, line: 337, type: !965, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8399)
!8399 = !{!8400}
!8400 = !DILocalVariable(name: "dev", arg: 1, scope: !8398, file: !8142, line: 337, type: !944)
!8401 = !DILocation(line: 0, scope: !8398)
!8402 = !DILocation(line: 345, column: 2, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8398, file: !8142, line: 345, column: 2)
!8404 = !{i64 2154350005}
!8405 = !DILocation(line: 346, column: 9, scope: !8398)
!8406 = !DILocation(line: 346, column: 2, scope: !8398)
!8407 = distinct !DISubprogram(name: "read_uart", scope: !928, file: !928, line: 127, type: !8408, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8410)
!8408 = !DISubroutineType(types: !8409)
!8409 = !{!103, !944, !267, !32}
!8410 = !{!8411, !8412, !8413, !8414}
!8411 = !DILocalVariable(name: "uart", arg: 1, scope: !8407, file: !928, line: 127, type: !944)
!8412 = !DILocalVariable(name: "buf", arg: 2, scope: !8407, file: !928, line: 127, type: !267)
!8413 = !DILocalVariable(name: "size", arg: 3, scope: !8407, file: !928, line: 128, type: !32)
!8414 = !DILocalVariable(name: "rx", scope: !8407, file: !928, line: 130, type: !103)
!8415 = !DILocation(line: 0, scope: !8407)
!8416 = !DILocation(line: 132, column: 7, scope: !8407)
!8417 = !DILocation(line: 133, column: 9, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8407, file: !928, line: 133, column: 6)
!8419 = !DILocation(line: 133, column: 6, scope: !8407)
!8420 = !DILocation(line: 135, column: 3, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8418, file: !928, line: 133, column: 14)
!8422 = !DILocation(line: 137, column: 3, scope: !8421)
!8423 = !DILocation(line: 141, column: 1, scope: !8407)
!8424 = distinct !DISubprogram(name: "k_queue_get", scope: !3593, file: !3593, line: 649, type: !8425, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8432)
!8425 = !DISubroutineType(types: !8426)
!8426 = !{!102, !8427, !8428}
!8427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!8428 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !8429)
!8429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !8430)
!8430 = !{!8431}
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8429, file: !201, line: 66, baseType: !200, size: 64)
!8432 = !{!8433, !8434}
!8433 = !DILocalVariable(name: "queue", arg: 1, scope: !8424, file: !3593, line: 649, type: !8427)
!8434 = !DILocalVariable(name: "timeout", arg: 2, scope: !8424, file: !3593, line: 649, type: !8428)
!8435 = !DILocation(line: 0, scope: !8424)
!8436 = !DILocation(line: 658, column: 2, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8424, file: !3593, line: 658, column: 2)
!8438 = !{i64 2154074451}
!8439 = !DILocation(line: 659, column: 9, scope: !8424)
!8440 = !DILocation(line: 659, column: 2, scope: !8424)
!8441 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1093, file: !1093, line: 131, type: !8442, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8446)
!8442 = !DISubroutineType(types: !8443)
!8443 = !{!157, !8444, !103}
!8444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8445, size: 32)
!8445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1092)
!8446 = !{!8447, !8448, !8449}
!8447 = !DILocalVariable(name: "target", arg: 1, scope: !8441, file: !1093, line: 131, type: !8444)
!8448 = !DILocalVariable(name: "bit", arg: 2, scope: !8441, file: !1093, line: 131, type: !103)
!8449 = !DILocalVariable(name: "val", scope: !8441, file: !1093, line: 133, type: !8450)
!8450 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1093, line: 23, baseType: !1092)
!8451 = !DILocation(line: 0, scope: !8441)
!8452 = !DILocation(line: 133, column: 21, scope: !8441)
!8453 = !DILocation(line: 135, column: 27, scope: !8441)
!8454 = !DILocation(line: 135, column: 50, scope: !8441)
!8455 = !DILocation(line: 135, column: 2, scope: !8441)
!8456 = distinct !DISubprogram(name: "handle_ansi", scope: !928, file: !928, line: 232, type: !8457, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8459)
!8457 = !DISubroutineType(types: !8458)
!8458 = !{null, !154, !344}
!8459 = !{!8460, !8461, !8462}
!8460 = !DILocalVariable(name: "byte", arg: 1, scope: !8456, file: !928, line: 232, type: !154)
!8461 = !DILocalVariable(name: "line", arg: 2, scope: !8456, file: !928, line: 232, type: !344)
!8462 = !DILabel(scope: !8456, name: "ansi_cmd", file: !928, line: 268)
!8463 = !DILocation(line: 0, scope: !8456)
!8464 = !DILocation(line: 234, column: 6, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8456, file: !928, line: 234, column: 6)
!8466 = !DILocation(line: 234, column: 6, scope: !8456)
!8467 = !DILocation(line: 235, column: 16, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8469, file: !928, line: 235, column: 7)
!8469 = distinct !DILexicalBlock(scope: !8465, file: !928, line: 234, column: 61)
!8470 = !DILocation(line: 235, column: 8, scope: !8468)
!8471 = !DILocation(line: 235, column: 7, scope: !8469)
!8472 = !DILocation(line: 236, column: 13, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8468, file: !928, line: 235, column: 23)
!8474 = !DILocation(line: 237, column: 4, scope: !8473)
!8475 = !DILocation(line: 240, column: 3, scope: !8469)
!8476 = !DILocation(line: 241, column: 19, scope: !8469)
!8477 = !DILocation(line: 241, column: 12, scope: !8469)
!8478 = !DILocation(line: 242, column: 14, scope: !8469)
!8479 = !DILocation(line: 243, column: 3, scope: !8469)
!8480 = !DILocation(line: 246, column: 6, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8456, file: !928, line: 246, column: 6)
!8482 = !DILocation(line: 246, column: 6, scope: !8456)
!8483 = !DILocation(line: 247, column: 15, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !928, line: 247, column: 7)
!8485 = distinct !DILexicalBlock(scope: !8481, file: !928, line: 246, column: 49)
!8486 = !DILocation(line: 247, column: 7, scope: !8484)
!8487 = !DILocation(line: 247, column: 7, scope: !8485)
!8488 = !DILocation(line: 248, column: 8, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8490, file: !928, line: 248, column: 8)
!8490 = distinct !DILexicalBlock(scope: !8484, file: !928, line: 247, column: 22)
!8491 = !DILocation(line: 248, column: 8, scope: !8490)
!8492 = !DILocation(line: 249, column: 16, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8489, file: !928, line: 248, column: 53)
!8494 = !DILocation(line: 250, column: 24, scope: !8493)
!8495 = !DILocation(line: 250, column: 16, scope: !8493)
!8496 = !DILocation(line: 251, column: 4, scope: !8493)
!8497 = !DILocation(line: 252, column: 14, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8489, file: !928, line: 251, column: 11)
!8499 = !DILocation(line: 253, column: 22, scope: !8498)
!8500 = !DILocation(line: 253, column: 14, scope: !8498)
!8501 = !DILocation(line: 259, column: 12, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8485, file: !928, line: 259, column: 7)
!8503 = !DILocation(line: 259, column: 19, scope: !8502)
!8504 = !DILocation(line: 260, column: 8, scope: !8502)
!8505 = !DILocation(line: 259, column: 7, scope: !8485)
!8506 = !DILocation(line: 264, column: 3, scope: !8485)
!8507 = !DILocation(line: 265, column: 3, scope: !8485)
!8508 = !DILocation(line: 266, column: 2, scope: !8485)
!8509 = !DILocation(line: 268, column: 1, scope: !8456)
!8510 = !DILocation(line: 269, column: 2, scope: !8456)
!8511 = !DILocation(line: 271, column: 7, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8513, file: !928, line: 271, column: 7)
!8513 = distinct !DILexicalBlock(scope: !8456, file: !928, line: 269, column: 16)
!8514 = !DILocation(line: 271, column: 18, scope: !8512)
!8515 = !DILocation(line: 271, column: 16, scope: !8512)
!8516 = !DILocation(line: 271, column: 7, scope: !8513)
!8517 = !DILocation(line: 275, column: 7, scope: !8513)
!8518 = !DILocation(line: 276, column: 7, scope: !8513)
!8519 = !DILocation(line: 277, column: 3, scope: !8513)
!8520 = !DILocation(line: 278, column: 3, scope: !8513)
!8521 = !DILocation(line: 280, column: 7, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8513, file: !928, line: 280, column: 7)
!8523 = !DILocation(line: 280, column: 18, scope: !8522)
!8524 = !DILocation(line: 280, column: 16, scope: !8522)
!8525 = !DILocation(line: 280, column: 7, scope: !8513)
!8526 = !DILocation(line: 284, column: 7, scope: !8513)
!8527 = !DILocation(line: 285, column: 7, scope: !8513)
!8528 = !DILocation(line: 286, column: 3, scope: !8513)
!8529 = !DILocation(line: 287, column: 3, scope: !8513)
!8530 = !DILocation(line: 289, column: 8, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8513, file: !928, line: 289, column: 7)
!8532 = !DILocation(line: 289, column: 7, scope: !8513)
!8533 = !DILocation(line: 293, column: 19, scope: !8513)
!8534 = !DILocation(line: 293, column: 3, scope: !8513)
!8535 = !DILocation(line: 294, column: 10, scope: !8513)
!8536 = !DILocation(line: 294, column: 7, scope: !8513)
!8537 = !DILocation(line: 295, column: 7, scope: !8513)
!8538 = !DILocation(line: 296, column: 3, scope: !8513)
!8539 = !DILocation(line: 298, column: 8, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8513, file: !928, line: 298, column: 7)
!8541 = !DILocation(line: 298, column: 7, scope: !8513)
!8542 = !DILocation(line: 302, column: 18, scope: !8513)
!8543 = !DILocation(line: 302, column: 3, scope: !8513)
!8544 = !DILocation(line: 303, column: 10, scope: !8513)
!8545 = !DILocation(line: 303, column: 7, scope: !8513)
!8546 = !DILocation(line: 304, column: 7, scope: !8513)
!8547 = !DILocation(line: 305, column: 3, scope: !8513)
!8548 = !DILocation(line: 307, column: 8, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8513, file: !928, line: 307, column: 7)
!8550 = !DILocation(line: 307, column: 7, scope: !8513)
!8551 = !DILocation(line: 311, column: 3, scope: !8513)
!8552 = !DILocation(line: 312, column: 18, scope: !8513)
!8553 = !DILocation(line: 312, column: 13, scope: !8513)
!8554 = !DILocation(line: 312, column: 24, scope: !8513)
!8555 = !DILocation(line: 312, column: 3, scope: !8513)
!8556 = !DILocation(line: 313, column: 3, scope: !8513)
!8557 = !DILocation(line: 318, column: 2, scope: !8456)
!8558 = !DILocation(line: 319, column: 1, scope: !8456)
!8559 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1093, file: !1093, line: 152, type: !8560, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8563)
!8560 = !DISubroutineType(types: !8561)
!8561 = !{!157, !8562, !103}
!8562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!8563 = !{!8564, !8565, !8566, !8567}
!8564 = !DILocalVariable(name: "target", arg: 1, scope: !8559, file: !1093, line: 152, type: !8562)
!8565 = !DILocalVariable(name: "bit", arg: 2, scope: !8559, file: !1093, line: 152, type: !103)
!8566 = !DILocalVariable(name: "mask", scope: !8559, file: !1093, line: 154, type: !8450)
!8567 = !DILocalVariable(name: "old", scope: !8559, file: !1093, line: 155, type: !8450)
!8568 = !DILocation(line: 0, scope: !8559)
!8569 = !DILocation(line: 154, column: 22, scope: !8559)
!8570 = !DILocation(line: 157, column: 45, scope: !8559)
!8571 = !DILocation(line: 157, column: 8, scope: !8559)
!8572 = !DILocation(line: 159, column: 14, scope: !8559)
!8573 = !DILocation(line: 159, column: 22, scope: !8559)
!8574 = !DILocation(line: 159, column: 2, scope: !8559)
!8575 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1093, file: !1093, line: 217, type: !8576, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8578)
!8576 = !DISubroutineType(types: !8577)
!8577 = !{null, !8562, !103}
!8578 = !{!8579, !8580, !8581}
!8579 = !DILocalVariable(name: "target", arg: 1, scope: !8575, file: !1093, line: 217, type: !8562)
!8580 = !DILocalVariable(name: "bit", arg: 2, scope: !8575, file: !1093, line: 217, type: !103)
!8581 = !DILocalVariable(name: "mask", scope: !8575, file: !1093, line: 219, type: !8450)
!8582 = !DILocation(line: 0, scope: !8575)
!8583 = !DILocation(line: 219, column: 22, scope: !8575)
!8584 = !DILocation(line: 221, column: 8, scope: !8575)
!8585 = !DILocation(line: 222, column: 1, scope: !8575)
!8586 = distinct !DISubprogram(name: "isprint", scope: !4910, file: !4910, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8587)
!8587 = !{!8588}
!8588 = !DILocalVariable(name: "c", arg: 1, scope: !8586, file: !4910, line: 37, type: !103)
!8589 = !DILocation(line: 0, scope: !8586)
!8590 = !DILocation(line: 39, column: 38, scope: !8586)
!8591 = !DILocation(line: 39, column: 2, scope: !8586)
!8592 = distinct !DISubprogram(name: "del_char", scope: !928, file: !928, line: 191, type: !8593, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8595)
!8593 = !DISubroutineType(types: !8594)
!8594 = !{null, !344, !154}
!8595 = !{!8596, !8597}
!8596 = !DILocalVariable(name: "pos", arg: 1, scope: !8592, file: !928, line: 191, type: !344)
!8597 = !DILocalVariable(name: "end", arg: 2, scope: !8592, file: !928, line: 191, type: !154)
!8598 = !DILocation(line: 0, scope: !8592)
!8599 = !DILocation(line: 193, column: 2, scope: !8592)
!8600 = !DILocation(line: 195, column: 10, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8592, file: !928, line: 195, column: 6)
!8602 = !DILocation(line: 195, column: 6, scope: !8592)
!8603 = !DILocation(line: 196, column: 3, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8601, file: !928, line: 195, column: 17)
!8605 = !DILocation(line: 197, column: 3, scope: !8604)
!8606 = !DILocation(line: 198, column: 3, scope: !8604)
!8607 = !DILocation(line: 201, column: 2, scope: !8592)
!8608 = !DILocation(line: 203, column: 2, scope: !8592)
!8609 = !DILocation(line: 203, column: 12, scope: !8592)
!8610 = !DILocation(line: 204, column: 16, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8592, file: !928, line: 203, column: 20)
!8612 = !DILocation(line: 204, column: 10, scope: !8611)
!8613 = !DILocation(line: 204, column: 8, scope: !8611)
!8614 = !DILocation(line: 205, column: 3, scope: !8611)
!8615 = !DILocation(line: 203, column: 15, scope: !8592)
!8616 = distinct !{!8616, !8608, !8617}
!8617 = !DILocation(line: 206, column: 2, scope: !8592)
!8618 = !DILocation(line: 208, column: 2, scope: !8592)
!8619 = !DILocation(line: 211, column: 2, scope: !8592)
!8620 = !DILocation(line: 212, column: 1, scope: !8592)
!8621 = distinct !DISubprogram(name: "insert_char", scope: !928, file: !928, line: 163, type: !8622, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8624)
!8622 = !DISubroutineType(types: !8623)
!8623 = !{null, !344, !146, !154}
!8624 = !{!8625, !8626, !8627, !8628}
!8625 = !DILocalVariable(name: "pos", arg: 1, scope: !8621, file: !928, line: 163, type: !344)
!8626 = !DILocalVariable(name: "c", arg: 2, scope: !8621, file: !928, line: 163, type: !146)
!8627 = !DILocalVariable(name: "end", arg: 3, scope: !8621, file: !928, line: 163, type: !154)
!8628 = !DILocalVariable(name: "tmp", scope: !8621, file: !928, line: 165, type: !146)
!8629 = !DILocation(line: 0, scope: !8621)
!8630 = !DILocation(line: 168, column: 2, scope: !8621)
!8631 = !DILocation(line: 170, column: 10, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8621, file: !928, line: 170, column: 6)
!8633 = !DILocation(line: 170, column: 6, scope: !8621)
!8634 = !DILocation(line: 171, column: 8, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8632, file: !928, line: 170, column: 17)
!8636 = !DILocation(line: 172, column: 3, scope: !8635)
!8637 = !DILocation(line: 175, column: 8, scope: !8621)
!8638 = !DILocation(line: 176, column: 11, scope: !8621)
!8639 = !DILocation(line: 178, column: 2, scope: !8621)
!8640 = !DILocation(line: 180, column: 2, scope: !8621)
!8641 = !DILocation(line: 180, column: 12, scope: !8621)
!8642 = !DILocation(line: 181, column: 3, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8621, file: !928, line: 180, column: 20)
!8644 = !DILocation(line: 182, column: 7, scope: !8643)
!8645 = !DILocation(line: 183, column: 12, scope: !8643)
!8646 = !DILocation(line: 180, column: 15, scope: !8621)
!8647 = distinct !{!8647, !8640, !8648}
!8648 = !DILocation(line: 185, column: 2, scope: !8621)
!8649 = !DILocation(line: 188, column: 2, scope: !8621)
!8650 = !DILocation(line: 189, column: 1, scope: !8621)
!8651 = distinct !DISubprogram(name: "cursor_save", scope: !928, file: !928, line: 153, type: !3157, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !317)
!8652 = !DILocation(line: 155, column: 2, scope: !8651)
!8653 = !DILocation(line: 156, column: 1, scope: !8651)
!8654 = distinct !DISubprogram(name: "cursor_restore", scope: !928, file: !928, line: 158, type: !3157, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !317)
!8655 = !DILocation(line: 160, column: 2, scope: !8654)
!8656 = !DILocation(line: 161, column: 1, scope: !8654)
!8657 = distinct !DISubprogram(name: "atomic_or", scope: !8658, file: !8658, line: 279, type: !8659, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8661)
!8658 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8659 = !DISubroutineType(types: !8660)
!8660 = !{!8450, !8562, !8450}
!8661 = !{!8662, !8663}
!8662 = !DILocalVariable(name: "target", arg: 1, scope: !8657, file: !8658, line: 279, type: !8562)
!8663 = !DILocalVariable(name: "value", arg: 2, scope: !8657, file: !8658, line: 279, type: !8450)
!8664 = !DILocation(line: 0, scope: !8657)
!8665 = !DILocation(line: 281, column: 9, scope: !8657)
!8666 = !DILocation(line: 281, column: 2, scope: !8657)
!8667 = distinct !DISubprogram(name: "atomic_and", scope: !8658, file: !8658, line: 319, type: !8659, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8668)
!8668 = !{!8669, !8670}
!8669 = !DILocalVariable(name: "target", arg: 1, scope: !8667, file: !8658, line: 319, type: !8562)
!8670 = !DILocalVariable(name: "value", arg: 2, scope: !8667, file: !8658, line: 319, type: !8450)
!8671 = !DILocation(line: 0, scope: !8667)
!8672 = !DILocation(line: 321, column: 9, scope: !8667)
!8673 = !DILocation(line: 321, column: 2, scope: !8667)
!8674 = distinct !DISubprogram(name: "isdigit", scope: !4910, file: !4910, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8675)
!8675 = !{!8676}
!8676 = !DILocalVariable(name: "a", arg: 1, scope: !8674, file: !4910, line: 43, type: !103)
!8677 = !DILocation(line: 0, scope: !8674)
!8678 = !DILocation(line: 45, column: 29, scope: !8674)
!8679 = !DILocation(line: 45, column: 45, scope: !8674)
!8680 = !DILocation(line: 45, column: 2, scope: !8674)
!8681 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1093, file: !1093, line: 176, type: !8560, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8682)
!8682 = !{!8683, !8684, !8685, !8686}
!8683 = !DILocalVariable(name: "target", arg: 1, scope: !8681, file: !1093, line: 176, type: !8562)
!8684 = !DILocalVariable(name: "bit", arg: 2, scope: !8681, file: !1093, line: 176, type: !103)
!8685 = !DILocalVariable(name: "mask", scope: !8681, file: !1093, line: 178, type: !8450)
!8686 = !DILocalVariable(name: "old", scope: !8681, file: !1093, line: 179, type: !8450)
!8687 = !DILocation(line: 0, scope: !8681)
!8688 = !DILocation(line: 181, column: 8, scope: !8681)
!8689 = !DILocation(line: 183, column: 14, scope: !8681)
!8690 = !DILocation(line: 183, column: 22, scope: !8681)
!8691 = !DILocation(line: 183, column: 2, scope: !8681)
!8692 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1093, file: !1093, line: 198, type: !8576, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8693)
!8693 = !{!8694, !8695, !8696}
!8694 = !DILocalVariable(name: "target", arg: 1, scope: !8692, file: !1093, line: 198, type: !8562)
!8695 = !DILocalVariable(name: "bit", arg: 2, scope: !8692, file: !1093, line: 198, type: !103)
!8696 = !DILocalVariable(name: "mask", scope: !8692, file: !1093, line: 200, type: !8450)
!8697 = !DILocation(line: 0, scope: !8692)
!8698 = !DILocation(line: 200, column: 22, scope: !8692)
!8699 = !DILocation(line: 202, column: 45, scope: !8692)
!8700 = !DILocation(line: 202, column: 8, scope: !8692)
!8701 = !DILocation(line: 203, column: 1, scope: !8692)
!8702 = distinct !DISubprogram(name: "cursor_backward", scope: !928, file: !928, line: 148, type: !5715, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8703)
!8703 = !{!8704}
!8704 = !DILocalVariable(name: "count", arg: 1, scope: !8702, file: !928, line: 148, type: !32)
!8705 = !DILocation(line: 0, scope: !8702)
!8706 = !DILocation(line: 150, column: 2, scope: !8702)
!8707 = !DILocation(line: 151, column: 1, scope: !8702)
!8708 = distinct !DISubprogram(name: "cursor_forward", scope: !928, file: !928, line: 143, type: !5715, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8709)
!8709 = !{!8710}
!8710 = !DILocalVariable(name: "count", arg: 1, scope: !8708, file: !928, line: 143, type: !32)
!8711 = !DILocation(line: 0, scope: !8708)
!8712 = !DILocation(line: 145, column: 2, scope: !8708)
!8713 = !DILocation(line: 146, column: 1, scope: !8708)
!8714 = distinct !DISubprogram(name: "atomic_get", scope: !8658, file: !8658, line: 159, type: !8715, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8717)
!8715 = !DISubroutineType(types: !8716)
!8716 = !{!8450, !8444}
!8717 = !{!8718}
!8718 = !DILocalVariable(name: "target", arg: 1, scope: !8714, file: !8658, line: 159, type: !8444)
!8719 = !DILocation(line: 0, scope: !8714)
!8720 = !DILocation(line: 161, column: 9, scope: !8714)
!8721 = !DILocation(line: 161, column: 2, scope: !8714)
!8722 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !209, file: !209, line: 1093, type: !965, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8723)
!8723 = !{!8724, !8725}
!8724 = !DILocalVariable(name: "dev", arg: 1, scope: !8722, file: !209, line: 1093, type: !944)
!8725 = !DILocalVariable(name: "api", scope: !8722, file: !209, line: 1096, type: !936)
!8726 = !DILocation(line: 0, scope: !8722)
!8727 = !DILocation(line: 1097, column: 40, scope: !8722)
!8728 = !DILocation(line: 1099, column: 11, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8722, file: !209, line: 1099, column: 6)
!8730 = !DILocation(line: 1099, column: 26, scope: !8729)
!8731 = !DILocation(line: 1099, column: 6, scope: !8722)
!8732 = !DILocation(line: 1102, column: 9, scope: !8722)
!8733 = !DILocation(line: 1102, column: 2, scope: !8722)
!8734 = !DILocation(line: 1107, column: 1, scope: !8722)
!8735 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !209, file: !209, line: 1136, type: !965, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8736)
!8736 = !{!8737, !8738}
!8737 = !DILocalVariable(name: "dev", arg: 1, scope: !8735, file: !209, line: 1136, type: !944)
!8738 = !DILocalVariable(name: "api", scope: !8735, file: !209, line: 1139, type: !936)
!8739 = !DILocation(line: 0, scope: !8735)
!8740 = !DILocation(line: 1140, column: 40, scope: !8735)
!8741 = !DILocation(line: 1142, column: 11, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8735, file: !209, line: 1142, column: 6)
!8743 = !DILocation(line: 1142, column: 22, scope: !8742)
!8744 = !DILocation(line: 1142, column: 6, scope: !8735)
!8745 = !DILocation(line: 1145, column: 9, scope: !8735)
!8746 = !DILocation(line: 1145, column: 2, scope: !8735)
!8747 = !DILocation(line: 1150, column: 1, scope: !8735)
!8748 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !209, file: !209, line: 878, type: !995, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8749)
!8749 = !{!8750, !8751}
!8750 = !DILocalVariable(name: "dev", arg: 1, scope: !8748, file: !209, line: 878, type: !944)
!8751 = !DILocalVariable(name: "api", scope: !8748, file: !209, line: 881, type: !936)
!8752 = !DILocation(line: 0, scope: !8748)
!8753 = !DILocation(line: 882, column: 40, scope: !8748)
!8754 = !DILocation(line: 884, column: 11, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8748, file: !209, line: 884, column: 6)
!8756 = !DILocation(line: 884, column: 26, scope: !8755)
!8757 = !DILocation(line: 884, column: 6, scope: !8748)
!8758 = !DILocation(line: 885, column: 3, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8755, file: !209, line: 884, column: 35)
!8760 = !DILocation(line: 886, column: 2, scope: !8759)
!8761 = !DILocation(line: 890, column: 1, scope: !8748)
!8762 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !209, file: !209, line: 955, type: !995, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8763)
!8763 = !{!8764, !8765}
!8764 = !DILocalVariable(name: "dev", arg: 1, scope: !8762, file: !209, line: 955, type: !944)
!8765 = !DILocalVariable(name: "api", scope: !8762, file: !209, line: 958, type: !936)
!8766 = !DILocation(line: 0, scope: !8762)
!8767 = !DILocation(line: 959, column: 40, scope: !8762)
!8768 = !DILocation(line: 961, column: 11, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8762, file: !209, line: 961, column: 6)
!8770 = !DILocation(line: 961, column: 26, scope: !8769)
!8771 = !DILocation(line: 961, column: 6, scope: !8762)
!8772 = !DILocation(line: 962, column: 3, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8769, file: !209, line: 961, column: 35)
!8774 = !DILocation(line: 963, column: 2, scope: !8773)
!8775 = !DILocation(line: 967, column: 1, scope: !8762)
!8776 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1273, file: !1273, line: 523, type: !1131, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8777)
!8777 = !{!8778, !8779, !8780, !8781, !8782}
!8778 = !DILocalVariable(name: "dev", arg: 1, scope: !8776, file: !1273, line: 523, type: !1133)
!8779 = !DILocalVariable(name: "pin", arg: 2, scope: !8776, file: !1273, line: 524, type: !1148)
!8780 = !DILocalVariable(name: "flags", arg: 3, scope: !8776, file: !1273, line: 524, type: !1149)
!8781 = !DILocalVariable(name: "err", scope: !8776, file: !1273, line: 526, type: !103)
!8782 = !DILocalVariable(name: "pincfg", scope: !8776, file: !1273, line: 527, type: !103)
!8783 = !DILocation(line: 0, scope: !8776)
!8784 = !DILocation(line: 527, column: 2, scope: !8776)
!8785 = !DILocation(line: 532, column: 8, scope: !8776)
!8786 = !DILocation(line: 533, column: 10, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8776, file: !1273, line: 533, column: 6)
!8788 = !DILocation(line: 533, column: 6, scope: !8776)
!8789 = !DILocation(line: 543, column: 13, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8776, file: !1273, line: 543, column: 6)
!8791 = !DILocation(line: 543, column: 28, scope: !8790)
!8792 = !DILocation(line: 543, column: 6, scope: !8776)
!8793 = !DILocation(line: 544, column: 14, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8795, file: !1273, line: 544, column: 7)
!8795 = distinct !DILexicalBlock(scope: !8790, file: !1273, line: 543, column: 34)
!8796 = !DILocation(line: 544, column: 39, scope: !8794)
!8797 = !DILocation(line: 544, column: 7, scope: !8795)
!8798 = !DILocation(line: 545, column: 38, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8794, file: !1273, line: 544, column: 45)
!8800 = !DILocation(line: 545, column: 4, scope: !8799)
!8801 = !DILocation(line: 546, column: 3, scope: !8799)
!8802 = !DILocation(line: 546, column: 21, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8794, file: !1273, line: 546, column: 14)
!8804 = !DILocation(line: 546, column: 45, scope: !8803)
!8805 = !DILocation(line: 546, column: 14, scope: !8794)
!8806 = !DILocation(line: 547, column: 40, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8803, file: !1273, line: 546, column: 51)
!8808 = !DILocation(line: 547, column: 4, scope: !8807)
!8809 = !DILocation(line: 548, column: 3, scope: !8807)
!8810 = !DILocation(line: 551, column: 32, scope: !8776)
!8811 = !DILocation(line: 551, column: 37, scope: !8776)
!8812 = !DILocation(line: 551, column: 2, scope: !8776)
!8813 = !DILocation(line: 554, column: 6, scope: !8776)
!8814 = !DILocation(line: 562, column: 1, scope: !8776)
!8815 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1273, file: !1273, line: 410, type: !8816, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8818)
!8816 = !DISubroutineType(types: !8817)
!8817 = !{!103, !1133, !846}
!8818 = !{!8819, !8820, !8821, !8823}
!8819 = !DILocalVariable(name: "dev", arg: 1, scope: !8815, file: !1273, line: 410, type: !1133)
!8820 = !DILocalVariable(name: "value", arg: 2, scope: !8815, file: !1273, line: 410, type: !846)
!8821 = !DILocalVariable(name: "cfg", scope: !8815, file: !1273, line: 412, type: !8822)
!8822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!8823 = !DILocalVariable(name: "gpio", scope: !8815, file: !1273, line: 413, type: !1206)
!8824 = !DILocation(line: 0, scope: !8815)
!8825 = !DILocation(line: 412, column: 45, scope: !8815)
!8826 = !DILocation(line: 413, column: 44, scope: !8815)
!8827 = !DILocation(line: 415, column: 11, scope: !8815)
!8828 = !DILocation(line: 415, column: 9, scope: !8815)
!8829 = !DILocation(line: 417, column: 2, scope: !8815)
!8830 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1273, file: !1273, line: 420, type: !1158, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8831)
!8831 = !{!8832, !8833, !8834, !8835, !8836, !8837}
!8832 = !DILocalVariable(name: "dev", arg: 1, scope: !8830, file: !1273, line: 420, type: !1133)
!8833 = !DILocalVariable(name: "mask", arg: 2, scope: !8830, file: !1273, line: 421, type: !1160)
!8834 = !DILocalVariable(name: "value", arg: 3, scope: !8830, file: !1273, line: 422, type: !1155)
!8835 = !DILocalVariable(name: "cfg", scope: !8830, file: !1273, line: 424, type: !8822)
!8836 = !DILocalVariable(name: "gpio", scope: !8830, file: !1273, line: 425, type: !1206)
!8837 = !DILocalVariable(name: "port_value", scope: !8830, file: !1273, line: 426, type: !121)
!8838 = !DILocation(line: 0, scope: !8830)
!8839 = !DILocation(line: 424, column: 45, scope: !8830)
!8840 = !DILocation(line: 425, column: 44, scope: !8830)
!8841 = !DILocation(line: 430, column: 15, scope: !8830)
!8842 = !DILocation(line: 431, column: 46, scope: !8830)
!8843 = !DILocation(line: 431, column: 44, scope: !8830)
!8844 = !DILocation(line: 431, column: 61, scope: !8830)
!8845 = !DILocation(line: 431, column: 53, scope: !8830)
!8846 = !DILocation(line: 431, column: 2, scope: !8830)
!8847 = !DILocation(line: 435, column: 2, scope: !8830)
!8848 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1273, file: !1273, line: 438, type: !1163, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8849)
!8849 = !{!8850, !8851, !8852, !8853}
!8850 = !DILocalVariable(name: "dev", arg: 1, scope: !8848, file: !1273, line: 438, type: !1133)
!8851 = !DILocalVariable(name: "pins", arg: 2, scope: !8848, file: !1273, line: 439, type: !1160)
!8852 = !DILocalVariable(name: "cfg", scope: !8848, file: !1273, line: 441, type: !8822)
!8853 = !DILocalVariable(name: "gpio", scope: !8848, file: !1273, line: 442, type: !1206)
!8854 = !DILocation(line: 0, scope: !8848)
!8855 = !DILocation(line: 441, column: 45, scope: !8848)
!8856 = !DILocation(line: 442, column: 44, scope: !8848)
!8857 = !DILocation(line: 448, column: 2, scope: !8848)
!8858 = !DILocation(line: 450, column: 2, scope: !8848)
!8859 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1273, file: !1273, line: 453, type: !1163, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8860)
!8860 = !{!8861, !8862, !8863, !8864}
!8861 = !DILocalVariable(name: "dev", arg: 1, scope: !8859, file: !1273, line: 453, type: !1133)
!8862 = !DILocalVariable(name: "pins", arg: 2, scope: !8859, file: !1273, line: 454, type: !1160)
!8863 = !DILocalVariable(name: "cfg", scope: !8859, file: !1273, line: 456, type: !8822)
!8864 = !DILocalVariable(name: "gpio", scope: !8859, file: !1273, line: 457, type: !1206)
!8865 = !DILocation(line: 0, scope: !8859)
!8866 = !DILocation(line: 456, column: 45, scope: !8859)
!8867 = !DILocation(line: 457, column: 44, scope: !8859)
!8868 = !DILocation(line: 467, column: 2, scope: !8859)
!8869 = !DILocation(line: 470, column: 2, scope: !8859)
!8870 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1273, file: !1273, line: 473, type: !1163, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8871)
!8871 = !{!8872, !8873, !8874, !8875}
!8872 = !DILocalVariable(name: "dev", arg: 1, scope: !8870, file: !1273, line: 473, type: !1133)
!8873 = !DILocalVariable(name: "pins", arg: 2, scope: !8870, file: !1273, line: 474, type: !1160)
!8874 = !DILocalVariable(name: "cfg", scope: !8870, file: !1273, line: 476, type: !8822)
!8875 = !DILocalVariable(name: "gpio", scope: !8870, file: !1273, line: 477, type: !1206)
!8876 = !DILocation(line: 0, scope: !8870)
!8877 = !DILocation(line: 476, column: 45, scope: !8870)
!8878 = !DILocation(line: 477, column: 44, scope: !8870)
!8879 = !DILocation(line: 484, column: 2, scope: !8870)
!8880 = !DILocation(line: 487, column: 2, scope: !8870)
!8881 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1273, file: !1273, line: 594, type: !1169, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8882)
!8882 = !{!8883, !8884, !8885, !8886, !8887, !8888, !8890, !8891, !8892}
!8883 = !DILocalVariable(name: "dev", arg: 1, scope: !8881, file: !1273, line: 594, type: !1133)
!8884 = !DILocalVariable(name: "pin", arg: 2, scope: !8881, file: !1273, line: 595, type: !1148)
!8885 = !DILocalVariable(name: "mode", arg: 3, scope: !8881, file: !1273, line: 596, type: !1107)
!8886 = !DILocalVariable(name: "trig", arg: 4, scope: !8881, file: !1273, line: 597, type: !1113)
!8887 = !DILocalVariable(name: "cfg", scope: !8881, file: !1273, line: 599, type: !8822)
!8888 = !DILocalVariable(name: "data", scope: !8881, file: !1273, line: 600, type: !8889)
!8889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!8890 = !DILocalVariable(name: "edge", scope: !8881, file: !1273, line: 601, type: !103)
!8891 = !DILocalVariable(name: "err", scope: !8881, file: !1273, line: 602, type: !103)
!8892 = !DILabel(scope: !8881, name: "exit", file: !1273, line: 643)
!8893 = !DILocation(line: 0, scope: !8881)
!8894 = !DILocation(line: 599, column: 45, scope: !8881)
!8895 = !DILocation(line: 604, column: 6, scope: !8881)
!8896 = !DILocation(line: 605, column: 34, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8898, file: !1273, line: 605, column: 7)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !1273, line: 604, column: 38)
!8899 = distinct !DILexicalBlock(scope: !8881, file: !1273, line: 604, column: 6)
!8900 = !DILocation(line: 605, column: 7, scope: !8897)
!8901 = !DILocation(line: 605, column: 47, scope: !8897)
!8902 = !DILocation(line: 605, column: 39, scope: !8897)
!8903 = !DILocation(line: 605, column: 7, scope: !8898)
!8904 = !DILocation(line: 606, column: 4, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8897, file: !1273, line: 605, column: 53)
!8906 = !DILocation(line: 607, column: 4, scope: !8905)
!8907 = !DILocation(line: 608, column: 4, scope: !8905)
!8908 = !DILocation(line: 609, column: 3, scope: !8905)
!8909 = !DILocation(line: 600, column: 38, scope: !8881)
!8910 = !DILocation(line: 620, column: 30, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8881, file: !1273, line: 620, column: 6)
!8912 = !DILocation(line: 620, column: 6, scope: !8911)
!8913 = !DILocation(line: 620, column: 57, scope: !8911)
!8914 = !DILocation(line: 620, column: 6, scope: !8881)
!8915 = !DILocation(line: 625, column: 29, scope: !8881)
!8916 = !DILocation(line: 625, column: 2, scope: !8881)
!8917 = !DILocation(line: 627, column: 2, scope: !8881)
!8918 = !DILocation(line: 630, column: 3, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8881, file: !1273, line: 627, column: 16)
!8920 = !DILocation(line: 633, column: 3, scope: !8919)
!8921 = !DILocation(line: 636, column: 3, scope: !8919)
!8922 = !DILocation(line: 639, column: 2, scope: !8881)
!8923 = !DILocation(line: 641, column: 2, scope: !8881)
!8924 = !DILocation(line: 643, column: 1, scope: !8881)
!8925 = !DILocation(line: 644, column: 2, scope: !8881)
!8926 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1273, file: !1273, line: 647, type: !1173, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8927)
!8927 = !{!8928, !8929, !8930, !8931}
!8928 = !DILocalVariable(name: "dev", arg: 1, scope: !8926, file: !1273, line: 647, type: !1133)
!8929 = !DILocalVariable(name: "callback", arg: 2, scope: !8926, file: !1273, line: 648, type: !1175)
!8930 = !DILocalVariable(name: "set", arg: 3, scope: !8926, file: !1273, line: 649, type: !157)
!8931 = !DILocalVariable(name: "data", scope: !8926, file: !1273, line: 651, type: !8889)
!8932 = !DILocation(line: 0, scope: !8926)
!8933 = !DILocation(line: 651, column: 38, scope: !8926)
!8934 = !DILocation(line: 653, column: 37, scope: !8926)
!8935 = !DILocation(line: 653, column: 9, scope: !8926)
!8936 = !DILocation(line: 653, column: 2, scope: !8926)
!8937 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8938, file: !8938, line: 38, type: !8939, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8942)
!8938 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8939 = !DISubroutineType(types: !8940)
!8940 = !{!103, !8941, !1175, !157}
!8941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!8942 = !{!8943, !8944, !8945}
!8943 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8937, file: !8938, line: 38, type: !8941)
!8944 = !DILocalVariable(name: "callback", arg: 2, scope: !8937, file: !8938, line: 39, type: !1175)
!8945 = !DILocalVariable(name: "set", arg: 3, scope: !8937, file: !8938, line: 40, type: !157)
!8946 = !DILocation(line: 0, scope: !8937)
!8947 = !DILocation(line: 45, column: 7, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8937, file: !8938, line: 45, column: 6)
!8949 = !DILocation(line: 45, column: 6, scope: !8937)
!8950 = !DILocation(line: 46, column: 56, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8952, file: !8938, line: 46, column: 7)
!8952 = distinct !DILexicalBlock(scope: !8948, file: !8938, line: 45, column: 38)
!8953 = !DILocation(line: 46, column: 8, scope: !8951)
!8954 = !DILocation(line: 46, column: 7, scope: !8952)
!8955 = !DILocation(line: 51, column: 13, scope: !8948)
!8956 = !DILocation(line: 56, column: 43, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8958, file: !8938, line: 55, column: 11)
!8958 = distinct !DILexicalBlock(scope: !8937, file: !8938, line: 55, column: 6)
!8959 = !DILocation(line: 56, column: 3, scope: !8957)
!8960 = !DILocation(line: 57, column: 2, scope: !8957)
!8961 = !DILocation(line: 60, column: 1, scope: !8937)
!8962 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1180, file: !1180, line: 261, type: !8963, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8965)
!8963 = !DISubroutineType(types: !8964)
!8964 = !{!157, !8941}
!8965 = !{!8966}
!8966 = !DILocalVariable(name: "list", arg: 1, scope: !8962, file: !1180, line: 261, type: !8941)
!8967 = !DILocation(line: 0, scope: !8962)
!8968 = !DILocation(line: 261, column: 1, scope: !8962)
!8969 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1180, file: !1180, line: 417, type: !8970, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8972)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{!157, !8941, !1346}
!8972 = !{!8973, !8974, !8975, !8976}
!8973 = !DILocalVariable(name: "list", arg: 1, scope: !8969, file: !1180, line: 417, type: !8941)
!8974 = !DILocalVariable(name: "node", arg: 2, scope: !8969, file: !1180, line: 417, type: !1346)
!8975 = !DILocalVariable(name: "prev", scope: !8969, file: !1180, line: 417, type: !1346)
!8976 = !DILocalVariable(name: "test", scope: !8969, file: !1180, line: 417, type: !1346)
!8977 = !DILocation(line: 0, scope: !8969)
!8978 = !DILocation(line: 417, column: 1, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8969, file: !1180, line: 417, column: 1)
!8980 = !DILocation(line: 417, column: 1, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8979, file: !1180, line: 417, column: 1)
!8982 = !DILocation(line: 417, column: 1, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8984, file: !1180, line: 417, column: 1)
!8984 = distinct !DILexicalBlock(scope: !8981, file: !1180, line: 417, column: 1)
!8985 = !DILocation(line: 417, column: 1, scope: !8984)
!8986 = distinct !{!8986, !8978, !8978}
!8987 = !DILocation(line: 417, column: 1, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8983, file: !1180, line: 417, column: 1)
!8989 = !DILocation(line: 417, column: 1, scope: !8969)
!8990 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1180, file: !1180, line: 298, type: !8991, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !8993)
!8991 = !DISubroutineType(types: !8992)
!8992 = !{null, !8941, !1346}
!8993 = !{!8994, !8995}
!8994 = !DILocalVariable(name: "list", arg: 1, scope: !8990, file: !1180, line: 298, type: !8941)
!8995 = !DILocalVariable(name: "node", arg: 2, scope: !8990, file: !1180, line: 298, type: !1346)
!8996 = !DILocation(line: 0, scope: !8990)
!8997 = !DILocation(line: 298, column: 1, scope: !8990)
!8998 = !DILocation(line: 298, column: 1, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8990, file: !1180, line: 298, column: 1)
!9000 = !DILocation(line: 298, column: 1, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8999, file: !1180, line: 298, column: 1)
!9002 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1180, file: !1180, line: 231, type: !9003, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9005)
!9003 = !DISubroutineType(types: !9004)
!9004 = !{!1346, !8941}
!9005 = !{!9006}
!9006 = !DILocalVariable(name: "list", arg: 1, scope: !9002, file: !1180, line: 231, type: !8941)
!9007 = !DILocation(line: 0, scope: !9002)
!9008 = !DILocation(line: 233, column: 15, scope: !9002)
!9009 = !DILocation(line: 233, column: 2, scope: !9002)
!9010 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1180, file: !1180, line: 209, type: !9011, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9013)
!9011 = !DISubroutineType(types: !9012)
!9012 = !{null, !1346, !1346}
!9013 = !{!9014, !9015}
!9014 = !DILocalVariable(name: "parent", arg: 1, scope: !9010, file: !1180, line: 209, type: !1346)
!9015 = !DILocalVariable(name: "child", arg: 2, scope: !9010, file: !1180, line: 209, type: !1346)
!9016 = !DILocation(line: 0, scope: !9010)
!9017 = !DILocation(line: 211, column: 10, scope: !9010)
!9018 = !DILocation(line: 211, column: 15, scope: !9010)
!9019 = !DILocation(line: 212, column: 1, scope: !9010)
!9020 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1180, file: !1180, line: 214, type: !8991, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9021)
!9021 = !{!9022, !9023}
!9022 = !DILocalVariable(name: "list", arg: 1, scope: !9020, file: !1180, line: 214, type: !8941)
!9023 = !DILocalVariable(name: "node", arg: 2, scope: !9020, file: !1180, line: 214, type: !1346)
!9024 = !DILocation(line: 0, scope: !9020)
!9025 = !DILocation(line: 216, column: 8, scope: !9020)
!9026 = !DILocation(line: 216, column: 13, scope: !9020)
!9027 = !DILocation(line: 217, column: 1, scope: !9020)
!9028 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1180, file: !1180, line: 243, type: !9003, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9029)
!9029 = !{!9030}
!9030 = !DILocalVariable(name: "list", arg: 1, scope: !9028, file: !1180, line: 243, type: !8941)
!9031 = !DILocation(line: 0, scope: !9028)
!9032 = !DILocation(line: 245, column: 15, scope: !9028)
!9033 = !DILocation(line: 245, column: 2, scope: !9028)
!9034 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1180, file: !1180, line: 219, type: !8991, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9035)
!9035 = !{!9036, !9037}
!9036 = !DILocalVariable(name: "list", arg: 1, scope: !9034, file: !1180, line: 219, type: !8941)
!9037 = !DILocalVariable(name: "node", arg: 2, scope: !9034, file: !1180, line: 219, type: !1346)
!9038 = !DILocation(line: 0, scope: !9034)
!9039 = !DILocation(line: 221, column: 8, scope: !9034)
!9040 = !DILocation(line: 221, column: 13, scope: !9034)
!9041 = !DILocation(line: 222, column: 1, scope: !9034)
!9042 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1180, file: !1180, line: 401, type: !9043, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9045)
!9043 = !DISubroutineType(types: !9044)
!9044 = !{null, !8941, !1346, !1346}
!9045 = !{!9046, !9047, !9048}
!9046 = !DILocalVariable(name: "list", arg: 1, scope: !9042, file: !1180, line: 401, type: !8941)
!9047 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9042, file: !1180, line: 401, type: !1346)
!9048 = !DILocalVariable(name: "node", arg: 3, scope: !9042, file: !1180, line: 401, type: !1346)
!9049 = !DILocation(line: 0, scope: !9042)
!9050 = !DILocation(line: 401, column: 1, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9042, file: !1180, line: 401, column: 1)
!9052 = !DILocation(line: 0, scope: !9051)
!9053 = !DILocation(line: 401, column: 1, scope: !9042)
!9054 = !DILocation(line: 401, column: 1, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9051, file: !1180, line: 401, column: 1)
!9056 = !DILocation(line: 401, column: 1, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9055, file: !1180, line: 401, column: 1)
!9058 = !DILocation(line: 401, column: 1, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9057, file: !1180, line: 401, column: 1)
!9060 = !DILocation(line: 401, column: 1, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9051, file: !1180, line: 401, column: 1)
!9062 = !DILocation(line: 401, column: 1, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9061, file: !1180, line: 401, column: 1)
!9064 = !DILocation(line: 401, column: 1, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9063, file: !1180, line: 401, column: 1)
!9066 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1180, file: !1180, line: 285, type: !9067, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9069)
!9067 = !DISubroutineType(types: !9068)
!9068 = !{!1346, !1346}
!9069 = !{!9070}
!9070 = !DILocalVariable(name: "node", arg: 1, scope: !9066, file: !1180, line: 285, type: !1346)
!9071 = !DILocation(line: 0, scope: !9066)
!9072 = !DILocation(line: 285, column: 1, scope: !9066)
!9073 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1180, file: !1180, line: 274, type: !9067, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9074)
!9074 = !{!9075}
!9075 = !DILocalVariable(name: "node", arg: 1, scope: !9073, file: !1180, line: 274, type: !1346)
!9076 = !DILocation(line: 0, scope: !9073)
!9077 = !DILocation(line: 274, column: 1, scope: !9073)
!9078 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1180, file: !1180, line: 204, type: !9067, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9079)
!9079 = !{!9080}
!9080 = !DILocalVariable(name: "node", arg: 1, scope: !9078, file: !1180, line: 204, type: !1346)
!9081 = !DILocation(line: 0, scope: !9078)
!9082 = !DILocation(line: 206, column: 15, scope: !9078)
!9083 = !DILocation(line: 206, column: 2, scope: !9078)
!9084 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1273, file: !1273, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9085)
!9085 = !{!9086, !9087, !9088}
!9086 = !DILocalVariable(name: "pin", arg: 1, scope: !9084, file: !1273, line: 342, type: !103)
!9087 = !DILocalVariable(name: "line", scope: !9084, file: !1273, line: 344, type: !121)
!9088 = !DILocalVariable(name: "port", scope: !9084, file: !1273, line: 345, type: !103)
!9089 = !DILocation(line: 0, scope: !9084)
!9090 = !DILocation(line: 344, column: 18, scope: !9084)
!9091 = !{i32 983040, i32 0}
!9092 = !DILocation(line: 356, column: 9, scope: !9084)
!9093 = !DILocation(line: 370, column: 2, scope: !9084)
!9094 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1273, file: !1273, line: 37, type: !708, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9095)
!9095 = !{!9096, !9097, !9098}
!9096 = !DILocalVariable(name: "line", arg: 1, scope: !9094, file: !1273, line: 37, type: !103)
!9097 = !DILocalVariable(name: "arg", arg: 2, scope: !9094, file: !1273, line: 37, type: !102)
!9098 = !DILocalVariable(name: "data", scope: !9094, file: !1273, line: 39, type: !8889)
!9099 = !DILocation(line: 0, scope: !9094)
!9100 = !DILocation(line: 41, column: 29, scope: !9094)
!9101 = !DILocation(line: 41, column: 39, scope: !9094)
!9102 = !DILocation(line: 41, column: 44, scope: !9094)
!9103 = !DILocation(line: 41, column: 2, scope: !9094)
!9104 = !DILocation(line: 42, column: 1, scope: !9094)
!9105 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1273, file: !1273, line: 376, type: !9106, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9108)
!9106 = !DISubroutineType(types: !9107)
!9107 = !{!103, !103, !103}
!9108 = !{!9109, !9110, !9111, !9113, !9114}
!9109 = !DILocalVariable(name: "port", arg: 1, scope: !9105, file: !1273, line: 376, type: !103)
!9110 = !DILocalVariable(name: "pin", arg: 2, scope: !9105, file: !1273, line: 376, type: !103)
!9111 = !DILocalVariable(name: "clk", scope: !9105, file: !1273, line: 386, type: !9112)
!9112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1133)
!9113 = !DILocalVariable(name: "pclken", scope: !9105, file: !1273, line: 387, type: !1389)
!9114 = !DILocalVariable(name: "ret", scope: !9105, file: !1273, line: 396, type: !103)
!9115 = !DILocation(line: 0, scope: !9105)
!9116 = !DILocation(line: 387, column: 2, scope: !9105)
!9117 = !DILocation(line: 387, column: 22, scope: !9105)
!9118 = !DILocation(line: 399, column: 8, scope: !9105)
!9119 = !DILocation(line: 400, column: 10, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9105, file: !1273, line: 400, column: 6)
!9121 = !DILocation(line: 400, column: 6, scope: !9105)
!9122 = !DILocation(line: 405, column: 2, scope: !9105)
!9123 = !DILocation(line: 407, column: 2, scope: !9105)
!9124 = !DILocation(line: 408, column: 1, scope: !9105)
!9125 = distinct !DISubprogram(name: "clock_control_on", scope: !795, file: !795, line: 123, type: !1238, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9126)
!9126 = !{!9127, !9128, !9129}
!9127 = !DILocalVariable(name: "dev", arg: 1, scope: !9125, file: !795, line: 123, type: !1133)
!9128 = !DILocalVariable(name: "sys", arg: 2, scope: !9125, file: !795, line: 124, type: !890)
!9129 = !DILocalVariable(name: "api", scope: !9125, file: !795, line: 126, type: !1231)
!9130 = !DILocation(line: 0, scope: !9125)
!9131 = !DILocation(line: 127, column: 49, scope: !9125)
!9132 = !DILocation(line: 129, column: 14, scope: !9125)
!9133 = !DILocation(line: 129, column: 9, scope: !9125)
!9134 = !DILocation(line: 129, column: 2, scope: !9125)
!9135 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1273, file: !1273, line: 311, type: !7712, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9136)
!9136 = !{!9137, !9138, !9139}
!9137 = !DILocalVariable(name: "port", arg: 1, scope: !9135, file: !1273, line: 311, type: !103)
!9138 = !DILocalVariable(name: "pin", arg: 2, scope: !9135, file: !1273, line: 311, type: !103)
!9139 = !DILocalVariable(name: "line", scope: !9135, file: !1273, line: 313, type: !121)
!9140 = !DILocation(line: 0, scope: !9135)
!9141 = !DILocation(line: 313, column: 18, scope: !9135)
!9142 = !DILocation(line: 337, column: 2, scope: !9135)
!9143 = !DILocation(line: 340, column: 1, scope: !9135)
!9144 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1273, file: !1273, line: 295, type: !9145, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9147)
!9145 = !DISubroutineType(types: !9146)
!9146 = !{!121, !103}
!9147 = !{!9148}
!9148 = !DILocalVariable(name: "pin", arg: 1, scope: !9144, file: !1273, line: 295, type: !103)
!9149 = !DILocation(line: 0, scope: !9144)
!9150 = !DILocation(line: 307, column: 46, scope: !9144)
!9151 = !DILocation(line: 307, column: 27, scope: !9144)
!9152 = !DILocation(line: 307, column: 32, scope: !9144)
!9153 = !DILocation(line: 307, column: 14, scope: !9144)
!9154 = !DILocation(line: 307, column: 39, scope: !9144)
!9155 = !DILocation(line: 307, column: 2, scope: !9144)
!9156 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5725, file: !5725, line: 671, type: !9157, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9159)
!9157 = !DISubroutineType(types: !9158)
!9158 = !{null, !121, !121}
!9159 = !{!9160, !9161}
!9160 = !DILocalVariable(name: "Port", arg: 1, scope: !9156, file: !5725, line: 671, type: !121)
!9161 = !DILocalVariable(name: "Line", arg: 2, scope: !9156, file: !5725, line: 671, type: !121)
!9162 = !DILocation(line: 0, scope: !9156)
!9163 = !DILocation(line: 673, column: 3, scope: !9156)
!9164 = !DILocalVariable(name: "value", arg: 1, scope: !9165, file: !5919, line: 373, type: !121)
!9165 = distinct !DISubprogram(name: "__RBIT", scope: !5919, file: !5919, line: 373, type: !6926, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9166)
!9166 = !{!9164, !9167}
!9167 = !DILocalVariable(name: "result", scope: !9165, file: !5919, line: 375, type: !121)
!9168 = !DILocation(line: 0, scope: !9165, inlinedAt: !9169)
!9169 = distinct !DILocation(line: 673, column: 3, scope: !9156)
!9170 = !DILocation(line: 380, column: 4, scope: !9165, inlinedAt: !9169)
!9171 = !{i64 2831692}
!9172 = !DILocalVariable(name: "value", arg: 1, scope: !9173, file: !5919, line: 403, type: !121)
!9173 = distinct !DISubprogram(name: "__CLZ", scope: !5919, file: !5919, line: 403, type: !9174, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9176)
!9174 = !DISubroutineType(types: !9175)
!9175 = !{!154, !121}
!9176 = !{!9172}
!9177 = !DILocation(line: 0, scope: !9173, inlinedAt: !9178)
!9178 = distinct !DILocation(line: 673, column: 3, scope: !9156)
!9179 = !DILocation(line: 414, column: 7, scope: !9173, inlinedAt: !9178)
!9180 = !DILocation(line: 674, column: 1, scope: !9156)
!9181 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8938, file: !8938, line: 69, type: !9182, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9184)
!9182 = !DISubroutineType(types: !9183)
!9183 = !{null, !8941, !1133, !121}
!9184 = !{!9185, !9186, !9187, !9188, !9189}
!9185 = !DILocalVariable(name: "list", arg: 1, scope: !9181, file: !8938, line: 69, type: !8941)
!9186 = !DILocalVariable(name: "port", arg: 2, scope: !9181, file: !8938, line: 70, type: !1133)
!9187 = !DILocalVariable(name: "pins", arg: 3, scope: !9181, file: !8938, line: 71, type: !121)
!9188 = !DILocalVariable(name: "cb", scope: !9181, file: !8938, line: 73, type: !1175)
!9189 = !DILocalVariable(name: "tmp", scope: !9181, file: !8938, line: 73, type: !1175)
!9190 = !DILocation(line: 0, scope: !9181)
!9191 = !DILocation(line: 75, column: 2, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9181, file: !8938, line: 75, column: 2)
!9193 = !DILocation(line: 0, scope: !9192)
!9194 = !DILocation(line: 76, column: 11, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9196, file: !8938, line: 76, column: 7)
!9196 = distinct !DILexicalBlock(scope: !9197, file: !8938, line: 75, column: 57)
!9197 = distinct !DILexicalBlock(scope: !9192, file: !8938, line: 75, column: 2)
!9198 = !DILocation(line: 76, column: 20, scope: !9195)
!9199 = !DILocation(line: 76, column: 7, scope: !9196)
!9200 = !DILocation(line: 78, column: 8, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9195, file: !8938, line: 76, column: 28)
!9202 = !DILocation(line: 78, column: 4, scope: !9201)
!9203 = !DILocation(line: 79, column: 3, scope: !9201)
!9204 = !DILocation(line: 75, column: 2, scope: !9197)
!9205 = !DILocation(line: 81, column: 1, scope: !9181)
!9206 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5725, file: !5725, line: 710, type: !6926, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9207)
!9207 = !{!9208}
!9208 = !DILocalVariable(name: "Line", arg: 1, scope: !9206, file: !5725, line: 710, type: !121)
!9209 = !DILocation(line: 0, scope: !9206)
!9210 = !DILocation(line: 712, column: 21, scope: !9206)
!9211 = !DILocation(line: 0, scope: !9165, inlinedAt: !9212)
!9212 = distinct !DILocation(line: 712, column: 76, scope: !9206)
!9213 = !DILocation(line: 380, column: 4, scope: !9165, inlinedAt: !9212)
!9214 = !DILocation(line: 0, scope: !9173, inlinedAt: !9215)
!9215 = distinct !DILocation(line: 712, column: 76, scope: !9206)
!9216 = !DILocation(line: 414, column: 7, scope: !9173, inlinedAt: !9215)
!9217 = !DILocation(line: 712, column: 73, scope: !9206)
!9218 = !DILocation(line: 712, column: 3, scope: !9206)
!9219 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9220, file: !9220, line: 910, type: !9221, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9223)
!9220 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9221 = !DISubroutineType(types: !9222)
!9222 = !{null, !1206, !121}
!9223 = !{!9224, !9225}
!9224 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9219, file: !9220, line: 910, type: !1206)
!9225 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9219, file: !9220, line: 910, type: !121)
!9226 = !DILocation(line: 0, scope: !9219)
!9227 = !DILocation(line: 912, column: 3, scope: !9219)
!9228 = !DILocation(line: 913, column: 1, scope: !9219)
!9229 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9220, file: !9220, line: 823, type: !9230, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9232)
!9230 = !DISubroutineType(types: !9231)
!9231 = !{!121, !1206}
!9232 = !{!9233}
!9233 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9229, file: !9220, line: 823, type: !1206)
!9234 = !DILocation(line: 0, scope: !9229)
!9235 = !DILocation(line: 825, column: 21, scope: !9229)
!9236 = !DILocation(line: 825, column: 3, scope: !9229)
!9237 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9220, file: !9220, line: 812, type: !9221, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9238)
!9238 = !{!9239, !9240}
!9239 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9237, file: !9220, line: 812, type: !1206)
!9240 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9237, file: !9220, line: 812, type: !121)
!9241 = !DILocation(line: 0, scope: !9237)
!9242 = !DILocation(line: 814, column: 3, scope: !9237)
!9243 = !DILocation(line: 815, column: 1, scope: !9237)
!9244 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9220, file: !9220, line: 771, type: !9230, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9245)
!9245 = !{!9246}
!9246 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9244, file: !9220, line: 771, type: !1206)
!9247 = !DILocation(line: 0, scope: !9244)
!9248 = !DILocation(line: 773, column: 21, scope: !9244)
!9249 = !DILocation(line: 773, column: 3, scope: !9244)
!9250 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1273, file: !1273, line: 47, type: !9251, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9253)
!9251 = !DISubroutineType(types: !9252)
!9252 = !{!103, !1149, !2564}
!9253 = !{!9254, !9255}
!9254 = !DILocalVariable(name: "flags", arg: 1, scope: !9250, file: !1273, line: 47, type: !1149)
!9255 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9250, file: !1273, line: 47, type: !2564)
!9256 = !DILocation(line: 0, scope: !9250)
!9257 = !DILocation(line: 50, column: 13, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9250, file: !1273, line: 50, column: 6)
!9259 = !DILocation(line: 50, column: 28, scope: !9258)
!9260 = !DILocation(line: 50, column: 6, scope: !9250)
!9261 = !DILocation(line: 53, column: 11, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9258, file: !1273, line: 50, column: 34)
!9263 = !DILocation(line: 55, column: 14, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9262, file: !1273, line: 55, column: 7)
!9265 = !DILocation(line: 55, column: 35, scope: !9264)
!9266 = !DILocation(line: 55, column: 7, scope: !9262)
!9267 = !DILocation(line: 56, column: 14, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9269, file: !1273, line: 56, column: 8)
!9269 = distinct !DILexicalBlock(scope: !9264, file: !1273, line: 55, column: 41)
!9270 = !DILocation(line: 56, column: 8, scope: !9269)
!9271 = !DILocation(line: 0, scope: !9264)
!9272 = !DILocation(line: 66, column: 14, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9262, file: !1273, line: 66, column: 7)
!9274 = !DILocation(line: 66, column: 30, scope: !9273)
!9275 = !DILocation(line: 66, column: 7, scope: !9262)
!9276 = !DILocation(line: 67, column: 12, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9273, file: !1273, line: 66, column: 36)
!9278 = !DILocation(line: 68, column: 3, scope: !9277)
!9279 = !DILocation(line: 68, column: 21, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9273, file: !1273, line: 68, column: 14)
!9281 = !DILocation(line: 68, column: 39, scope: !9280)
!9282 = !DILocation(line: 68, column: 14, scope: !9273)
!9283 = !DILocation(line: 69, column: 12, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9280, file: !1273, line: 68, column: 45)
!9285 = !DILocation(line: 70, column: 3, scope: !9284)
!9286 = !DILocation(line: 72, column: 21, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9258, file: !1273, line: 72, column: 14)
!9288 = !DILocation(line: 72, column: 35, scope: !9287)
!9289 = !DILocation(line: 72, column: 14, scope: !9258)
!9290 = !DILocation(line: 77, column: 14, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !1273, line: 77, column: 7)
!9292 = distinct !DILexicalBlock(scope: !9287, file: !1273, line: 72, column: 41)
!9293 = !DILocation(line: 77, column: 30, scope: !9291)
!9294 = !DILocation(line: 77, column: 7, scope: !9292)
!9295 = !DILocation(line: 0, scope: !9258)
!9296 = !DILocation(line: 90, column: 1, scope: !9250)
!9297 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1273, file: !1273, line: 157, type: !9298, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9300)
!9298 = !DISubroutineType(types: !9299)
!9299 = !{null, !1133, !103, !103, !103}
!9300 = !{!9301, !9302, !9303, !9304, !9305, !9306, !9307, !9308, !9309, !9310, !9311}
!9301 = !DILocalVariable(name: "dev", arg: 1, scope: !9297, file: !1273, line: 157, type: !1133)
!9302 = !DILocalVariable(name: "pin", arg: 2, scope: !9297, file: !1273, line: 157, type: !103)
!9303 = !DILocalVariable(name: "conf", arg: 3, scope: !9297, file: !1273, line: 158, type: !103)
!9304 = !DILocalVariable(name: "func", arg: 4, scope: !9297, file: !1273, line: 158, type: !103)
!9305 = !DILocalVariable(name: "cfg", scope: !9297, file: !1273, line: 160, type: !8822)
!9306 = !DILocalVariable(name: "gpio", scope: !9297, file: !1273, line: 161, type: !1206)
!9307 = !DILocalVariable(name: "pin_ll", scope: !9297, file: !1273, line: 163, type: !103)
!9308 = !DILocalVariable(name: "mode", scope: !9297, file: !1273, line: 227, type: !32)
!9309 = !DILocalVariable(name: "otype", scope: !9297, file: !1273, line: 227, type: !32)
!9310 = !DILocalVariable(name: "ospeed", scope: !9297, file: !1273, line: 227, type: !32)
!9311 = !DILocalVariable(name: "pupd", scope: !9297, file: !1273, line: 227, type: !32)
!9312 = !DILocation(line: 0, scope: !9297)
!9313 = !DILocation(line: 160, column: 45, scope: !9297)
!9314 = !DILocation(line: 161, column: 44, scope: !9297)
!9315 = !DILocation(line: 163, column: 15, scope: !9297)
!9316 = !DILocation(line: 229, column: 14, scope: !9297)
!9317 = !DILocation(line: 246, column: 47, scope: !9297)
!9318 = !DILocation(line: 246, column: 2, scope: !9297)
!9319 = !DILocation(line: 248, column: 43, scope: !9297)
!9320 = !DILocation(line: 248, column: 2, scope: !9297)
!9321 = !DILocation(line: 250, column: 40, scope: !9297)
!9322 = !DILocation(line: 250, column: 2, scope: !9297)
!9323 = !DILocation(line: 252, column: 11, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9297, file: !1273, line: 252, column: 6)
!9325 = !DILocation(line: 252, column: 6, scope: !9297)
!9326 = !DILocation(line: 253, column: 11, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !1273, line: 253, column: 7)
!9328 = distinct !DILexicalBlock(scope: !9324, file: !1273, line: 252, column: 36)
!9329 = !DILocation(line: 253, column: 7, scope: !9328)
!9330 = !DILocation(line: 254, column: 4, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9327, file: !1273, line: 253, column: 16)
!9332 = !DILocation(line: 255, column: 3, scope: !9331)
!9333 = !DILocation(line: 256, column: 4, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9327, file: !1273, line: 255, column: 10)
!9335 = !DILocation(line: 260, column: 40, scope: !9297)
!9336 = !DILocation(line: 260, column: 2, scope: !9297)
!9337 = !DILocation(line: 265, column: 1, scope: !9297)
!9338 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1273, file: !1273, line: 137, type: !9145, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9339)
!9339 = !{!9340, !9341}
!9340 = !DILocalVariable(name: "pin", arg: 1, scope: !9338, file: !1273, line: 137, type: !103)
!9341 = !DILocalVariable(name: "pinval", scope: !9338, file: !1273, line: 139, type: !121)
!9342 = !DILocation(line: 0, scope: !9338)
!9343 = !DILocation(line: 149, column: 13, scope: !9338)
!9344 = !DILocation(line: 151, column: 2, scope: !9338)
!9345 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9220, file: !9220, line: 342, type: !9346, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9348)
!9346 = !DISubroutineType(types: !9347)
!9347 = !{null, !1206, !121, !121}
!9348 = !{!9349, !9350, !9351}
!9349 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9345, file: !9220, line: 342, type: !1206)
!9350 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9345, file: !9220, line: 342, type: !121)
!9351 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9345, file: !9220, line: 342, type: !121)
!9352 = !DILocation(line: 0, scope: !9345)
!9353 = !DILocation(line: 344, column: 3, scope: !9345)
!9354 = !DILocation(line: 345, column: 1, scope: !9345)
!9355 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9220, file: !9220, line: 413, type: !9346, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9356)
!9356 = !{!9357, !9358, !9359}
!9357 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9355, file: !9220, line: 413, type: !1206)
!9358 = !DILocalVariable(name: "Pin", arg: 2, scope: !9355, file: !9220, line: 413, type: !121)
!9359 = !DILocalVariable(name: "Speed", arg: 3, scope: !9355, file: !9220, line: 413, type: !121)
!9360 = !DILocation(line: 0, scope: !9355)
!9361 = !DILocation(line: 415, column: 3, scope: !9355)
!9362 = !DILocation(line: 0, scope: !9165, inlinedAt: !9363)
!9363 = distinct !DILocation(line: 415, column: 3, scope: !9355)
!9364 = !DILocation(line: 380, column: 4, scope: !9165, inlinedAt: !9363)
!9365 = !DILocation(line: 0, scope: !9173, inlinedAt: !9366)
!9366 = distinct !DILocation(line: 415, column: 3, scope: !9355)
!9367 = !DILocation(line: 414, column: 7, scope: !9173, inlinedAt: !9366)
!9368 = !DILocation(line: 0, scope: !9165, inlinedAt: !9369)
!9369 = distinct !DILocation(line: 415, column: 3, scope: !9355)
!9370 = !DILocation(line: 0, scope: !9173, inlinedAt: !9371)
!9371 = distinct !DILocation(line: 415, column: 3, scope: !9355)
!9372 = !DILocation(line: 417, column: 1, scope: !9355)
!9373 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9220, file: !9220, line: 484, type: !9346, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9374)
!9374 = !{!9375, !9376, !9377}
!9375 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9373, file: !9220, line: 484, type: !1206)
!9376 = !DILocalVariable(name: "Pin", arg: 2, scope: !9373, file: !9220, line: 484, type: !121)
!9377 = !DILocalVariable(name: "Pull", arg: 3, scope: !9373, file: !9220, line: 484, type: !121)
!9378 = !DILocation(line: 0, scope: !9373)
!9379 = !DILocation(line: 486, column: 3, scope: !9373)
!9380 = !DILocation(line: 0, scope: !9165, inlinedAt: !9381)
!9381 = distinct !DILocation(line: 486, column: 3, scope: !9373)
!9382 = !DILocation(line: 380, column: 4, scope: !9165, inlinedAt: !9381)
!9383 = !DILocation(line: 0, scope: !9173, inlinedAt: !9384)
!9384 = distinct !DILocation(line: 486, column: 3, scope: !9373)
!9385 = !DILocation(line: 414, column: 7, scope: !9173, inlinedAt: !9384)
!9386 = !DILocation(line: 0, scope: !9165, inlinedAt: !9387)
!9387 = distinct !DILocation(line: 486, column: 3, scope: !9373)
!9388 = !DILocation(line: 0, scope: !9173, inlinedAt: !9389)
!9389 = distinct !DILocation(line: 486, column: 3, scope: !9373)
!9390 = !DILocation(line: 487, column: 1, scope: !9373)
!9391 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9220, file: !9220, line: 556, type: !9346, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9392)
!9392 = !{!9393, !9394, !9395}
!9393 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9391, file: !9220, line: 556, type: !1206)
!9394 = !DILocalVariable(name: "Pin", arg: 2, scope: !9391, file: !9220, line: 556, type: !121)
!9395 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9391, file: !9220, line: 556, type: !121)
!9396 = !DILocation(line: 0, scope: !9391)
!9397 = !DILocation(line: 558, column: 3, scope: !9391)
!9398 = !DILocation(line: 0, scope: !9165, inlinedAt: !9399)
!9399 = distinct !DILocation(line: 558, column: 3, scope: !9391)
!9400 = !DILocation(line: 380, column: 4, scope: !9165, inlinedAt: !9399)
!9401 = !DILocation(line: 0, scope: !9173, inlinedAt: !9402)
!9402 = distinct !DILocation(line: 558, column: 3, scope: !9391)
!9403 = !DILocation(line: 414, column: 7, scope: !9173, inlinedAt: !9402)
!9404 = !DILocation(line: 0, scope: !9165, inlinedAt: !9405)
!9405 = distinct !DILocation(line: 558, column: 3, scope: !9391)
!9406 = !DILocation(line: 0, scope: !9173, inlinedAt: !9407)
!9407 = distinct !DILocation(line: 558, column: 3, scope: !9391)
!9408 = !DILocation(line: 560, column: 1, scope: !9391)
!9409 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9220, file: !9220, line: 633, type: !9346, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9410)
!9410 = !{!9411, !9412, !9413}
!9411 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9409, file: !9220, line: 633, type: !1206)
!9412 = !DILocalVariable(name: "Pin", arg: 2, scope: !9409, file: !9220, line: 633, type: !121)
!9413 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9409, file: !9220, line: 633, type: !121)
!9414 = !DILocation(line: 0, scope: !9409)
!9415 = !DILocation(line: 635, column: 3, scope: !9409)
!9416 = !DILocation(line: 0, scope: !9165, inlinedAt: !9417)
!9417 = distinct !DILocation(line: 635, column: 3, scope: !9409)
!9418 = !DILocation(line: 380, column: 4, scope: !9165, inlinedAt: !9417)
!9419 = !DILocation(line: 0, scope: !9173, inlinedAt: !9420)
!9420 = distinct !DILocation(line: 635, column: 3, scope: !9409)
!9421 = !DILocation(line: 414, column: 7, scope: !9173, inlinedAt: !9420)
!9422 = !DILocation(line: 0, scope: !9165, inlinedAt: !9423)
!9423 = distinct !DILocation(line: 635, column: 3, scope: !9409)
!9424 = !DILocation(line: 0, scope: !9173, inlinedAt: !9425)
!9425 = distinct !DILocation(line: 635, column: 3, scope: !9409)
!9426 = !DILocation(line: 637, column: 1, scope: !9409)
!9427 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9220, file: !9220, line: 273, type: !9346, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9428)
!9428 = !{!9429, !9430, !9431}
!9429 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9427, file: !9220, line: 273, type: !1206)
!9430 = !DILocalVariable(name: "Pin", arg: 2, scope: !9427, file: !9220, line: 273, type: !121)
!9431 = !DILocalVariable(name: "Mode", arg: 3, scope: !9427, file: !9220, line: 273, type: !121)
!9432 = !DILocation(line: 0, scope: !9427)
!9433 = !DILocation(line: 275, column: 3, scope: !9427)
!9434 = !DILocation(line: 0, scope: !9165, inlinedAt: !9435)
!9435 = distinct !DILocation(line: 275, column: 3, scope: !9427)
!9436 = !DILocation(line: 380, column: 4, scope: !9165, inlinedAt: !9435)
!9437 = !DILocation(line: 0, scope: !9173, inlinedAt: !9438)
!9438 = distinct !DILocation(line: 275, column: 3, scope: !9427)
!9439 = !DILocation(line: 414, column: 7, scope: !9173, inlinedAt: !9438)
!9440 = !DILocation(line: 0, scope: !9165, inlinedAt: !9441)
!9441 = distinct !DILocation(line: 275, column: 3, scope: !9427)
!9442 = !DILocation(line: 0, scope: !9173, inlinedAt: !9443)
!9443 = distinct !DILocation(line: 275, column: 3, scope: !9427)
!9444 = !DILocation(line: 276, column: 1, scope: !9427)
!9445 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1273, file: !1273, line: 698, type: !1286, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9446)
!9446 = !{!9447, !9448, !9449}
!9447 = !DILocalVariable(name: "dev", arg: 1, scope: !9445, file: !1273, line: 698, type: !1133)
!9448 = !DILocalVariable(name: "data", scope: !9445, file: !1273, line: 700, type: !8889)
!9449 = !DILocalVariable(name: "ret", scope: !9445, file: !1273, line: 701, type: !103)
!9450 = !DILocation(line: 0, scope: !9445)
!9451 = !DILocation(line: 700, column: 38, scope: !9445)
!9452 = !DILocation(line: 703, column: 8, scope: !9445)
!9453 = !DILocation(line: 703, column: 12, scope: !9445)
!9454 = !DILocation(line: 705, column: 7, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9445, file: !1273, line: 705, column: 6)
!9456 = !DILocation(line: 705, column: 6, scope: !9445)
!9457 = !DILocation(line: 722, column: 8, scope: !9445)
!9458 = !DILocation(line: 723, column: 10, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9445, file: !1273, line: 723, column: 6)
!9460 = !DILocation(line: 723, column: 6, scope: !9445)
!9461 = !DILocation(line: 731, column: 1, scope: !9445)
!9462 = distinct !DISubprogram(name: "device_is_ready", scope: !8113, file: !8113, line: 47, type: !9463, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9465)
!9463 = !DISubroutineType(types: !9464)
!9464 = !{!157, !1133}
!9465 = !{!9466}
!9466 = !DILocalVariable(name: "dev", arg: 1, scope: !9462, file: !8113, line: 47, type: !1133)
!9467 = !DILocation(line: 0, scope: !9462)
!9468 = !DILocation(line: 55, column: 2, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9462, file: !8113, line: 55, column: 2)
!9470 = !{i64 2154257287}
!9471 = !DILocation(line: 56, column: 9, scope: !9462)
!9472 = !DILocation(line: 56, column: 2, scope: !9462)
!9473 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1273, file: !1273, line: 270, type: !9474, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9476)
!9474 = !DISubroutineType(types: !9475)
!9475 = !{!103, !1133, !157}
!9476 = !{!9477, !9478, !9479, !9480, !9481}
!9477 = !DILocalVariable(name: "dev", arg: 1, scope: !9473, file: !1273, line: 270, type: !1133)
!9478 = !DILocalVariable(name: "on", arg: 2, scope: !9473, file: !1273, line: 270, type: !157)
!9479 = !DILocalVariable(name: "cfg", scope: !9473, file: !1273, line: 272, type: !8822)
!9480 = !DILocalVariable(name: "ret", scope: !9473, file: !1273, line: 273, type: !103)
!9481 = !DILocalVariable(name: "clk", scope: !9473, file: !1273, line: 278, type: !9112)
!9482 = !DILocation(line: 0, scope: !9473)
!9483 = !DILocation(line: 272, column: 45, scope: !9473)
!9484 = !DILocation(line: 282, column: 38, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9486, file: !1273, line: 280, column: 10)
!9486 = distinct !DILexicalBlock(scope: !9473, file: !1273, line: 280, column: 6)
!9487 = !DILocation(line: 282, column: 6, scope: !9485)
!9488 = !DILocation(line: 281, column: 9, scope: !9485)
!9489 = !DILocation(line: 293, column: 1, scope: !9473)
!9490 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9463, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9491)
!9491 = !{!9492}
!9492 = !DILocalVariable(name: "dev", arg: 1, scope: !9490, file: !141, line: 730, type: !1133)
!9493 = !DILocation(line: 0, scope: !9490)
!9494 = !DILocation(line: 732, column: 9, scope: !9490)
!9495 = !DILocation(line: 732, column: 2, scope: !9490)
!9496 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1273, file: !1273, line: 496, type: !9497, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1104, retainedNodes: !9499)
!9497 = !DISubroutineType(types: !9498)
!9498 = !{!103, !1133, !103, !103, !103}
!9499 = !{!9500, !9501, !9502, !9503, !9504, !9505}
!9500 = !DILocalVariable(name: "dev", arg: 1, scope: !9496, file: !1273, line: 496, type: !1133)
!9501 = !DILocalVariable(name: "pin", arg: 2, scope: !9496, file: !1273, line: 496, type: !103)
!9502 = !DILocalVariable(name: "conf", arg: 3, scope: !9496, file: !1273, line: 496, type: !103)
!9503 = !DILocalVariable(name: "func", arg: 4, scope: !9496, file: !1273, line: 496, type: !103)
!9504 = !DILocalVariable(name: "ret", scope: !9496, file: !1273, line: 498, type: !103)
!9505 = !DILocalVariable(name: "gpio_out", scope: !9506, file: !1273, line: 508, type: !121)
!9506 = distinct !DILexicalBlock(scope: !9507, file: !1273, line: 507, column: 27)
!9507 = distinct !DILexicalBlock(scope: !9496, file: !1273, line: 507, column: 6)
!9508 = !DILocation(line: 0, scope: !9496)
!9509 = !DILocation(line: 505, column: 2, scope: !9496)
!9510 = !DILocation(line: 507, column: 11, scope: !9507)
!9511 = !DILocation(line: 507, column: 6, scope: !9496)
!9512 = !DILocation(line: 508, column: 28, scope: !9506)
!9513 = !DILocation(line: 0, scope: !9506)
!9514 = !DILocation(line: 510, column: 16, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9506, file: !1273, line: 510, column: 7)
!9516 = !DILocation(line: 0, scope: !9515)
!9517 = !DILocation(line: 510, column: 7, scope: !9506)
!9518 = !DILocation(line: 511, column: 4, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9515, file: !1273, line: 510, column: 32)
!9520 = !DILocation(line: 512, column: 3, scope: !9519)
!9521 = !DILocation(line: 513, column: 4, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9523, file: !1273, line: 512, column: 39)
!9523 = distinct !DILexicalBlock(scope: !9515, file: !1273, line: 512, column: 14)
!9524 = !DILocation(line: 514, column: 3, scope: !9522)
!9525 = !DILocation(line: 518, column: 1, scope: !9496)
!9526 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1578, file: !1578, line: 526, type: !1449, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9527)
!9527 = !{!9528, !9529, !9530}
!9528 = !DILocalVariable(name: "dev", arg: 1, scope: !9526, file: !1578, line: 526, type: !1451)
!9529 = !DILocalVariable(name: "c", arg: 2, scope: !9526, file: !1578, line: 526, type: !230)
!9530 = !DILocalVariable(name: "config", scope: !9526, file: !1578, line: 528, type: !9531)
!9531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!9532 = !DILocation(line: 0, scope: !9526)
!9533 = !DILocation(line: 528, column: 48, scope: !9526)
!9534 = !DILocation(line: 531, column: 40, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9526, file: !1578, line: 531, column: 6)
!9536 = !DILocation(line: 531, column: 6, scope: !9535)
!9537 = !DILocation(line: 531, column: 6, scope: !9526)
!9538 = !DILocation(line: 532, column: 34, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9535, file: !1578, line: 531, column: 48)
!9540 = !DILocation(line: 532, column: 3, scope: !9539)
!9541 = !DILocation(line: 533, column: 2, scope: !9539)
!9542 = !DILocation(line: 539, column: 42, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9526, file: !1578, line: 539, column: 6)
!9544 = !DILocation(line: 539, column: 7, scope: !9543)
!9545 = !DILocation(line: 539, column: 6, scope: !9526)
!9546 = !DILocation(line: 543, column: 52, scope: !9526)
!9547 = !DILocation(line: 543, column: 22, scope: !9526)
!9548 = !DILocation(line: 543, column: 5, scope: !9526)
!9549 = !DILocation(line: 545, column: 2, scope: !9526)
!9550 = !DILocation(line: 546, column: 1, scope: !9526)
!9551 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1578, file: !1578, line: 548, type: !1468, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9552)
!9552 = !{!9553, !9554, !9555, !9556}
!9553 = !DILocalVariable(name: "dev", arg: 1, scope: !9551, file: !1578, line: 548, type: !1451)
!9554 = !DILocalVariable(name: "c", arg: 2, scope: !9551, file: !1578, line: 549, type: !155)
!9555 = !DILocalVariable(name: "config", scope: !9551, file: !1578, line: 551, type: !9531)
!9556 = !DILocalVariable(name: "key", scope: !9551, file: !1578, line: 555, type: !32)
!9557 = !DILocation(line: 0, scope: !9551)
!9558 = !DILocation(line: 551, column: 48, scope: !9551)
!9559 = !DILocation(line: 562, column: 2, scope: !9551)
!9560 = !DILocation(line: 563, column: 41, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9562, file: !1578, line: 563, column: 7)
!9562 = distinct !DILexicalBlock(scope: !9551, file: !1578, line: 562, column: 12)
!9563 = !DILocation(line: 563, column: 7, scope: !9561)
!9564 = !DILocation(line: 563, column: 7, scope: !9562)
!9565 = !DILocation(line: 55, column: 2, scope: !9566, inlinedAt: !9570)
!9566 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5704, file: !5704, line: 42, type: !5705, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9567)
!9567 = !{!9568, !9569}
!9568 = !DILocalVariable(name: "key", scope: !9566, file: !5704, line: 44, type: !32)
!9569 = !DILocalVariable(name: "tmp", scope: !9566, file: !5704, line: 53, type: !32)
!9570 = distinct !DILocation(line: 564, column: 10, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9561, file: !1578, line: 563, column: 49)
!9572 = !{i64 1997237}
!9573 = !DILocation(line: 0, scope: !9566, inlinedAt: !9570)
!9574 = !DILocation(line: 565, column: 42, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9571, file: !1578, line: 565, column: 8)
!9576 = !DILocation(line: 565, column: 8, scope: !9575)
!9577 = !DILocation(line: 565, column: 8, scope: !9571)
!9578 = !DILocalVariable(name: "key", arg: 1, scope: !9579, file: !5704, line: 84, type: !32)
!9579 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5704, file: !5704, line: 84, type: !5715, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9580)
!9580 = !{!9578}
!9581 = !DILocation(line: 0, scope: !9579, inlinedAt: !9582)
!9582 = distinct !DILocation(line: 568, column: 4, scope: !9571)
!9583 = !DILocation(line: 95, column: 2, scope: !9579, inlinedAt: !9582)
!9584 = !{i64 1998054}
!9585 = !DILocation(line: 569, column: 3, scope: !9571)
!9586 = distinct !{!9586, !9559, !9587}
!9587 = !DILocation(line: 570, column: 2, scope: !9551)
!9588 = !DILocation(line: 592, column: 33, scope: !9551)
!9589 = !DILocation(line: 592, column: 2, scope: !9551)
!9590 = !DILocation(line: 0, scope: !9579, inlinedAt: !9591)
!9591 = distinct !DILocation(line: 593, column: 2, scope: !9551)
!9592 = !DILocation(line: 95, column: 2, scope: !9579, inlinedAt: !9591)
!9593 = !DILocation(line: 594, column: 1, scope: !9551)
!9594 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1578, file: !1578, line: 596, type: !1472, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9595)
!9595 = !{!9596, !9597, !9598}
!9596 = !DILocalVariable(name: "dev", arg: 1, scope: !9594, file: !1578, line: 596, type: !1451)
!9597 = !DILocalVariable(name: "config", scope: !9594, file: !1578, line: 598, type: !9531)
!9598 = !DILocalVariable(name: "err", scope: !9594, file: !1578, line: 599, type: !121)
!9599 = !DILocation(line: 0, scope: !9594)
!9600 = !DILocation(line: 598, column: 48, scope: !9594)
!9601 = !DILocation(line: 606, column: 40, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9594, file: !1578, line: 606, column: 6)
!9603 = !DILocation(line: 606, column: 6, scope: !9602)
!9604 = !DILocation(line: 606, column: 6, scope: !9594)
!9605 = !DILocation(line: 610, column: 39, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9594, file: !1578, line: 610, column: 6)
!9607 = !DILocation(line: 610, column: 6, scope: !9606)
!9608 = !DILocation(line: 610, column: 6, scope: !9594)
!9609 = !DILocation(line: 614, column: 39, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9594, file: !1578, line: 614, column: 6)
!9611 = !DILocation(line: 614, column: 6, scope: !9610)
!9612 = !DILocation(line: 614, column: 6, scope: !9594)
!9613 = !DILocation(line: 619, column: 40, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9594, file: !1578, line: 619, column: 6)
!9615 = !DILocation(line: 619, column: 6, scope: !9614)
!9616 = !DILocation(line: 619, column: 6, scope: !9594)
!9617 = !DILocation(line: 623, column: 10, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9594, file: !1578, line: 623, column: 6)
!9619 = !DILocation(line: 623, column: 6, scope: !9594)
!9620 = !DILocation(line: 624, column: 34, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9618, file: !1578, line: 623, column: 24)
!9622 = !DILocation(line: 624, column: 3, scope: !9621)
!9623 = !DILocation(line: 625, column: 2, scope: !9621)
!9624 = !DILocation(line: 632, column: 10, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9594, file: !1578, line: 632, column: 6)
!9626 = !DILocation(line: 632, column: 6, scope: !9594)
!9627 = !DILocation(line: 633, column: 34, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9625, file: !1578, line: 632, column: 32)
!9629 = !DILocation(line: 633, column: 3, scope: !9628)
!9630 = !DILocation(line: 634, column: 2, scope: !9628)
!9631 = !DILocation(line: 636, column: 10, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9594, file: !1578, line: 636, column: 6)
!9633 = !DILocation(line: 636, column: 6, scope: !9594)
!9634 = !DILocation(line: 637, column: 33, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9632, file: !1578, line: 636, column: 31)
!9636 = !DILocation(line: 637, column: 3, scope: !9635)
!9637 = !DILocation(line: 638, column: 2, scope: !9635)
!9638 = !DILocation(line: 640, column: 10, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9594, file: !1578, line: 640, column: 6)
!9640 = !DILocation(line: 640, column: 6, scope: !9594)
!9641 = !DILocation(line: 641, column: 33, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9639, file: !1578, line: 640, column: 32)
!9643 = !DILocation(line: 641, column: 3, scope: !9642)
!9644 = !DILocation(line: 642, column: 2, scope: !9642)
!9645 = !DILocation(line: 646, column: 32, scope: !9594)
!9646 = !DILocation(line: 646, column: 2, scope: !9594)
!9647 = !DILocation(line: 648, column: 2, scope: !9594)
!9648 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1578, file: !1578, line: 419, type: !1476, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9649)
!9649 = !{!9650, !9651, !9652, !9653, !9655, !9656, !9657, !9658}
!9650 = !DILocalVariable(name: "dev", arg: 1, scope: !9648, file: !1578, line: 419, type: !1451)
!9651 = !DILocalVariable(name: "cfg", arg: 2, scope: !9648, file: !1578, line: 420, type: !1478)
!9652 = !DILocalVariable(name: "config", scope: !9648, file: !1578, line: 422, type: !9531)
!9653 = !DILocalVariable(name: "data", scope: !9648, file: !1578, line: 423, type: !9654)
!9654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32)
!9655 = !DILocalVariable(name: "parity", scope: !9648, file: !1578, line: 424, type: !6187)
!9656 = !DILocalVariable(name: "stopbits", scope: !9648, file: !1578, line: 425, type: !6187)
!9657 = !DILocalVariable(name: "databits", scope: !9648, file: !1578, line: 426, type: !6187)
!9658 = !DILocalVariable(name: "flowctrl", scope: !9648, file: !1578, line: 428, type: !6187)
!9659 = !DILocation(line: 0, scope: !9648)
!9660 = !DILocation(line: 422, column: 48, scope: !9648)
!9661 = !DILocation(line: 423, column: 38, scope: !9648)
!9662 = !DILocation(line: 424, column: 56, scope: !9648)
!9663 = !DILocation(line: 424, column: 51, scope: !9648)
!9664 = !DILocation(line: 424, column: 26, scope: !9648)
!9665 = !DILocation(line: 425, column: 60, scope: !9648)
!9666 = !DILocation(line: 425, column: 55, scope: !9648)
!9667 = !DILocation(line: 425, column: 28, scope: !9648)
!9668 = !DILocation(line: 426, column: 60, scope: !9648)
!9669 = !DILocation(line: 426, column: 55, scope: !9648)
!9670 = !DILocation(line: 426, column: 28, scope: !9648)
!9671 = !DILocation(line: 428, column: 58, scope: !9648)
!9672 = !DILocation(line: 428, column: 53, scope: !9648)
!9673 = !DILocation(line: 428, column: 28, scope: !9648)
!9674 = !DILocation(line: 431, column: 44, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9648, file: !1578, line: 431, column: 6)
!9676 = !DILocation(line: 438, column: 22, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9648, file: !1578, line: 437, column: 6)
!9678 = !DILocation(line: 437, column: 6, scope: !9648)
!9679 = !DILocation(line: 448, column: 6, scope: !9648)
!9680 = !DILocation(line: 465, column: 47, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9648, file: !1578, line: 465, column: 6)
!9682 = !DILocation(line: 475, column: 21, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9648, file: !1578, line: 475, column: 6)
!9684 = !DILocation(line: 475, column: 6, scope: !9648)
!9685 = !DILocation(line: 476, column: 8, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9687, file: !1578, line: 476, column: 7)
!9687 = distinct !DILexicalBlock(scope: !9683, file: !1578, line: 475, column: 49)
!9688 = !DILocation(line: 477, column: 34, scope: !9686)
!9689 = !DILocation(line: 476, column: 7, scope: !9687)
!9690 = !DILocation(line: 482, column: 27, scope: !9648)
!9691 = !DILocation(line: 482, column: 2, scope: !9648)
!9692 = !DILocation(line: 484, column: 16, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9648, file: !1578, line: 484, column: 6)
!9694 = !DILocation(line: 484, column: 13, scope: !9693)
!9695 = !DILocation(line: 484, column: 6, scope: !9648)
!9696 = !DILocation(line: 485, column: 3, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9693, file: !1578, line: 484, column: 44)
!9698 = !DILocation(line: 486, column: 2, scope: !9697)
!9699 = !DILocation(line: 488, column: 18, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9648, file: !1578, line: 488, column: 6)
!9701 = !DILocation(line: 488, column: 15, scope: !9700)
!9702 = !DILocation(line: 488, column: 6, scope: !9648)
!9703 = !DILocation(line: 489, column: 3, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9700, file: !1578, line: 488, column: 48)
!9705 = !DILocation(line: 490, column: 2, scope: !9704)
!9706 = !DILocation(line: 492, column: 18, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9648, file: !1578, line: 492, column: 6)
!9708 = !DILocation(line: 492, column: 15, scope: !9707)
!9709 = !DILocation(line: 492, column: 6, scope: !9648)
!9710 = !DILocation(line: 493, column: 3, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9707, file: !1578, line: 492, column: 48)
!9712 = !DILocation(line: 494, column: 2, scope: !9711)
!9713 = !DILocation(line: 496, column: 18, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9648, file: !1578, line: 496, column: 6)
!9715 = !DILocation(line: 496, column: 15, scope: !9714)
!9716 = !DILocation(line: 496, column: 6, scope: !9648)
!9717 = !DILocation(line: 497, column: 3, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9714, file: !1578, line: 496, column: 46)
!9719 = !DILocation(line: 498, column: 2, scope: !9718)
!9720 = !DILocation(line: 500, column: 11, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9648, file: !1578, line: 500, column: 6)
!9722 = !DILocation(line: 500, column: 29, scope: !9721)
!9723 = !DILocation(line: 500, column: 20, scope: !9721)
!9724 = !DILocation(line: 500, column: 6, scope: !9648)
!9725 = !DILocation(line: 501, column: 3, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9721, file: !1578, line: 500, column: 40)
!9727 = !DILocation(line: 502, column: 26, scope: !9726)
!9728 = !DILocation(line: 502, column: 19, scope: !9726)
!9729 = !DILocation(line: 503, column: 2, scope: !9726)
!9730 = !DILocation(line: 505, column: 26, scope: !9648)
!9731 = !DILocation(line: 505, column: 2, scope: !9648)
!9732 = !DILocation(line: 506, column: 2, scope: !9648)
!9733 = !DILocation(line: 507, column: 1, scope: !9648)
!9734 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1578, file: !1578, line: 509, type: !1489, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9735)
!9735 = !{!9736, !9737, !9738}
!9736 = !DILocalVariable(name: "dev", arg: 1, scope: !9734, file: !1578, line: 509, type: !1451)
!9737 = !DILocalVariable(name: "cfg", arg: 2, scope: !9734, file: !1578, line: 510, type: !1491)
!9738 = !DILocalVariable(name: "data", scope: !9734, file: !1578, line: 512, type: !9654)
!9739 = !DILocation(line: 0, scope: !9734)
!9740 = !DILocation(line: 512, column: 38, scope: !9734)
!9741 = !DILocation(line: 514, column: 24, scope: !9734)
!9742 = !DILocation(line: 514, column: 7, scope: !9734)
!9743 = !DILocation(line: 514, column: 16, scope: !9734)
!9744 = !DILocation(line: 515, column: 41, scope: !9734)
!9745 = !{i32 0, i32 1537}
!9746 = !DILocation(line: 515, column: 16, scope: !9734)
!9747 = !DILocation(line: 515, column: 7, scope: !9734)
!9748 = !DILocation(line: 515, column: 14, scope: !9734)
!9749 = !DILocation(line: 517, column: 3, scope: !9734)
!9750 = !{i32 0, i32 12289}
!9751 = !DILocation(line: 516, column: 19, scope: !9734)
!9752 = !DILocation(line: 516, column: 7, scope: !9734)
!9753 = !DILocation(line: 516, column: 17, scope: !9734)
!9754 = !DILocation(line: 519, column: 3, scope: !9734)
!9755 = !DILocation(line: 519, column: 33, scope: !9734)
!9756 = !DILocation(line: 518, column: 19, scope: !9734)
!9757 = !DILocation(line: 518, column: 7, scope: !9734)
!9758 = !DILocation(line: 518, column: 17, scope: !9734)
!9759 = !DILocation(line: 521, column: 3, scope: !9734)
!9760 = !{i32 0, i32 769}
!9761 = !DILocation(line: 520, column: 19, scope: !9734)
!9762 = !DILocation(line: 520, column: 7, scope: !9734)
!9763 = !DILocation(line: 520, column: 17, scope: !9734)
!9764 = !DILocation(line: 522, column: 2, scope: !9734)
!9765 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1578, file: !1578, line: 661, type: !1494, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9766)
!9766 = !{!9767, !9768, !9769, !9770, !9771, !9772}
!9767 = !DILocalVariable(name: "dev", arg: 1, scope: !9765, file: !1578, line: 661, type: !1451)
!9768 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9765, file: !1578, line: 662, type: !261)
!9769 = !DILocalVariable(name: "size", arg: 3, scope: !9765, file: !1578, line: 663, type: !103)
!9770 = !DILocalVariable(name: "config", scope: !9765, file: !1578, line: 665, type: !9531)
!9771 = !DILocalVariable(name: "num_tx", scope: !9765, file: !1578, line: 666, type: !154)
!9772 = !DILocalVariable(name: "key", scope: !9765, file: !1578, line: 667, type: !32)
!9773 = !DILocation(line: 0, scope: !9765)
!9774 = !DILocation(line: 665, column: 48, scope: !9765)
!9775 = !DILocation(line: 669, column: 41, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9765, file: !1578, line: 669, column: 6)
!9777 = !DILocation(line: 669, column: 7, scope: !9776)
!9778 = !DILocation(line: 669, column: 6, scope: !9765)
!9779 = !DILocation(line: 55, column: 2, scope: !9566, inlinedAt: !9780)
!9780 = distinct !DILocation(line: 674, column: 8, scope: !9765)
!9781 = !DILocation(line: 0, scope: !9566, inlinedAt: !9780)
!9782 = !DILocation(line: 676, column: 24, scope: !9765)
!9783 = !DILocation(line: 676, column: 29, scope: !9765)
!9784 = !DILocation(line: 677, column: 43, scope: !9765)
!9785 = !DILocation(line: 677, column: 9, scope: !9765)
!9786 = !DILocation(line: 676, column: 2, scope: !9765)
!9787 = !DILocation(line: 681, column: 34, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9765, file: !1578, line: 677, column: 51)
!9789 = !DILocation(line: 681, column: 55, scope: !9788)
!9790 = !DILocation(line: 681, column: 41, scope: !9788)
!9791 = !DILocation(line: 681, column: 3, scope: !9788)
!9792 = !DILocation(line: 676, column: 17, scope: !9765)
!9793 = distinct !{!9793, !9786, !9794}
!9794 = !DILocation(line: 682, column: 2, scope: !9765)
!9795 = !DILocation(line: 0, scope: !9579, inlinedAt: !9796)
!9796 = distinct !DILocation(line: 684, column: 2, scope: !9765)
!9797 = !DILocation(line: 95, column: 2, scope: !9579, inlinedAt: !9796)
!9798 = !DILocation(line: 686, column: 2, scope: !9765)
!9799 = !DILocation(line: 687, column: 1, scope: !9765)
!9800 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1578, file: !1578, line: 689, type: !1498, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9801)
!9801 = !{!9802, !9803, !9804, !9805, !9806}
!9802 = !DILocalVariable(name: "dev", arg: 1, scope: !9800, file: !1578, line: 689, type: !1451)
!9803 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9800, file: !1578, line: 689, type: !267)
!9804 = !DILocalVariable(name: "size", arg: 3, scope: !9800, file: !1578, line: 690, type: !268)
!9805 = !DILocalVariable(name: "config", scope: !9800, file: !1578, line: 692, type: !9531)
!9806 = !DILocalVariable(name: "num_rx", scope: !9800, file: !1578, line: 693, type: !154)
!9807 = !DILocation(line: 0, scope: !9800)
!9808 = !DILocation(line: 692, column: 48, scope: !9800)
!9809 = !DILocation(line: 696, column: 44, scope: !9800)
!9810 = !DILocation(line: 695, column: 24, scope: !9800)
!9811 = !DILocation(line: 695, column: 29, scope: !9800)
!9812 = !DILocation(line: 696, column: 9, scope: !9800)
!9813 = !DILocation(line: 695, column: 2, scope: !9800)
!9814 = !DILocation(line: 700, column: 53, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9800, file: !1578, line: 696, column: 52)
!9816 = !DILocation(line: 700, column: 23, scope: !9815)
!9817 = !DILocation(line: 700, column: 17, scope: !9815)
!9818 = !DILocation(line: 700, column: 3, scope: !9815)
!9819 = !DILocation(line: 700, column: 21, scope: !9815)
!9820 = !DILocation(line: 703, column: 41, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9815, file: !1578, line: 703, column: 7)
!9822 = !DILocation(line: 703, column: 7, scope: !9821)
!9823 = !DILocation(line: 703, column: 7, scope: !9815)
!9824 = !DILocation(line: 704, column: 35, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9821, file: !1578, line: 703, column: 49)
!9826 = !DILocation(line: 704, column: 4, scope: !9825)
!9827 = !DILocation(line: 709, column: 3, scope: !9825)
!9828 = !DILocation(line: 695, column: 17, scope: !9800)
!9829 = distinct !{!9829, !9813, !9830}
!9830 = !DILocation(line: 710, column: 2, scope: !9800)
!9831 = !DILocation(line: 712, column: 2, scope: !9800)
!9832 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1578, file: !1578, line: 715, type: !1502, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9833)
!9833 = !{!9834, !9835}
!9834 = !DILocalVariable(name: "dev", arg: 1, scope: !9832, file: !1578, line: 715, type: !1451)
!9835 = !DILocalVariable(name: "config", scope: !9832, file: !1578, line: 717, type: !9531)
!9836 = !DILocation(line: 0, scope: !9832)
!9837 = !DILocation(line: 717, column: 48, scope: !9832)
!9838 = !DILocation(line: 729, column: 31, scope: !9832)
!9839 = !DILocation(line: 729, column: 2, scope: !9832)
!9840 = !DILocation(line: 734, column: 1, scope: !9832)
!9841 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1578, file: !1578, line: 736, type: !1502, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9842)
!9842 = !{!9843, !9844}
!9843 = !DILocalVariable(name: "dev", arg: 1, scope: !9841, file: !1578, line: 736, type: !1451)
!9844 = !DILocalVariable(name: "config", scope: !9841, file: !1578, line: 738, type: !9531)
!9845 = !DILocation(line: 0, scope: !9841)
!9846 = !DILocation(line: 738, column: 48, scope: !9841)
!9847 = !DILocation(line: 746, column: 32, scope: !9841)
!9848 = !DILocation(line: 746, column: 2, scope: !9841)
!9849 = !DILocation(line: 756, column: 1, scope: !9841)
!9850 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1578, file: !1578, line: 758, type: !1472, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9851)
!9851 = !{!9852, !9853}
!9852 = !DILocalVariable(name: "dev", arg: 1, scope: !9850, file: !1578, line: 758, type: !1451)
!9853 = !DILocalVariable(name: "config", scope: !9850, file: !1578, line: 760, type: !9531)
!9854 = !DILocation(line: 0, scope: !9850)
!9855 = !DILocation(line: 760, column: 48, scope: !9850)
!9856 = !DILocation(line: 762, column: 43, scope: !9850)
!9857 = !DILocation(line: 762, column: 9, scope: !9850)
!9858 = !DILocation(line: 762, column: 50, scope: !9850)
!9859 = !DILocation(line: 763, column: 35, scope: !9850)
!9860 = !DILocation(line: 763, column: 3, scope: !9850)
!9861 = !DILocation(line: 762, column: 2, scope: !9850)
!9862 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1578, file: !1578, line: 773, type: !1502, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9863)
!9863 = !{!9864, !9865}
!9864 = !DILocalVariable(name: "dev", arg: 1, scope: !9862, file: !1578, line: 773, type: !1451)
!9865 = !DILocalVariable(name: "config", scope: !9862, file: !1578, line: 775, type: !9531)
!9866 = !DILocation(line: 0, scope: !9862)
!9867 = !DILocation(line: 775, column: 48, scope: !9862)
!9868 = !DILocation(line: 777, column: 33, scope: !9862)
!9869 = !DILocation(line: 777, column: 2, scope: !9862)
!9870 = !DILocation(line: 778, column: 1, scope: !9862)
!9871 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1578, file: !1578, line: 780, type: !1502, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9872)
!9872 = !{!9873, !9874}
!9873 = !DILocalVariable(name: "dev", arg: 1, scope: !9871, file: !1578, line: 780, type: !1451)
!9874 = !DILocalVariable(name: "config", scope: !9871, file: !1578, line: 782, type: !9531)
!9875 = !DILocation(line: 0, scope: !9871)
!9876 = !DILocation(line: 782, column: 48, scope: !9871)
!9877 = !DILocation(line: 784, column: 34, scope: !9871)
!9878 = !DILocation(line: 784, column: 2, scope: !9871)
!9879 = !DILocation(line: 785, column: 1, scope: !9871)
!9880 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1578, file: !1578, line: 766, type: !1472, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9881)
!9881 = !{!9882, !9883}
!9882 = !DILocalVariable(name: "dev", arg: 1, scope: !9880, file: !1578, line: 766, type: !1451)
!9883 = !DILocalVariable(name: "config", scope: !9880, file: !1578, line: 768, type: !9531)
!9884 = !DILocation(line: 0, scope: !9880)
!9885 = !DILocation(line: 768, column: 48, scope: !9880)
!9886 = !DILocation(line: 770, column: 42, scope: !9880)
!9887 = !DILocation(line: 770, column: 9, scope: !9880)
!9888 = !DILocation(line: 770, column: 2, scope: !9880)
!9889 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1578, file: !1578, line: 787, type: !1472, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9890)
!9890 = !{!9891, !9892}
!9891 = !DILocalVariable(name: "dev", arg: 1, scope: !9889, file: !1578, line: 787, type: !1451)
!9892 = !DILocalVariable(name: "config", scope: !9889, file: !1578, line: 789, type: !9531)
!9893 = !DILocation(line: 0, scope: !9889)
!9894 = !DILocation(line: 789, column: 48, scope: !9889)
!9895 = !DILocation(line: 794, column: 44, scope: !9889)
!9896 = !DILocation(line: 794, column: 9, scope: !9889)
!9897 = !DILocation(line: 794, column: 2, scope: !9889)
!9898 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1578, file: !1578, line: 797, type: !1502, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9899)
!9899 = !{!9900, !9901}
!9900 = !DILocalVariable(name: "dev", arg: 1, scope: !9898, file: !1578, line: 797, type: !1451)
!9901 = !DILocalVariable(name: "config", scope: !9898, file: !1578, line: 799, type: !9531)
!9902 = !DILocation(line: 0, scope: !9898)
!9903 = !DILocation(line: 799, column: 48, scope: !9898)
!9904 = !DILocation(line: 802, column: 34, scope: !9898)
!9905 = !DILocation(line: 802, column: 2, scope: !9898)
!9906 = !DILocation(line: 805, column: 6, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9898, file: !1578, line: 805, column: 6)
!9908 = !DILocation(line: 806, column: 3, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9907, file: !1578, line: 805, column: 43)
!9910 = !DILocation(line: 810, column: 31, scope: !9898)
!9911 = !DILocation(line: 807, column: 2, scope: !9909)
!9912 = !DILocation(line: 810, column: 2, scope: !9898)
!9913 = !DILocation(line: 811, column: 1, scope: !9898)
!9914 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1578, file: !1578, line: 813, type: !1502, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9915)
!9915 = !{!9916, !9917}
!9916 = !DILocalVariable(name: "dev", arg: 1, scope: !9914, file: !1578, line: 813, type: !1451)
!9917 = !DILocalVariable(name: "config", scope: !9914, file: !1578, line: 815, type: !9531)
!9918 = !DILocation(line: 0, scope: !9914)
!9919 = !DILocation(line: 815, column: 48, scope: !9914)
!9920 = !DILocation(line: 818, column: 35, scope: !9914)
!9921 = !DILocation(line: 818, column: 2, scope: !9914)
!9922 = !DILocation(line: 821, column: 6, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9914, file: !1578, line: 821, column: 6)
!9924 = !DILocation(line: 822, column: 3, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9923, file: !1578, line: 821, column: 43)
!9926 = !DILocation(line: 826, column: 32, scope: !9914)
!9927 = !DILocation(line: 823, column: 2, scope: !9925)
!9928 = !DILocation(line: 826, column: 2, scope: !9914)
!9929 = !DILocation(line: 827, column: 1, scope: !9914)
!9930 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1578, file: !1578, line: 829, type: !1472, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9931)
!9931 = !{!9932, !9933}
!9932 = !DILocalVariable(name: "dev", arg: 1, scope: !9930, file: !1578, line: 829, type: !1451)
!9933 = !DILocalVariable(name: "config", scope: !9930, file: !1578, line: 831, type: !9531)
!9934 = !DILocation(line: 0, scope: !9930)
!9935 = !DILocation(line: 831, column: 48, scope: !9930)
!9936 = !DILocation(line: 833, column: 46, scope: !9930)
!9937 = !DILocation(line: 833, column: 11, scope: !9930)
!9938 = !DILocation(line: 833, column: 53, scope: !9930)
!9939 = !DILocation(line: 834, column: 38, scope: !9930)
!9940 = !DILocation(line: 834, column: 4, scope: !9930)
!9941 = !DILocation(line: 834, column: 46, scope: !9930)
!9942 = !DILocation(line: 835, column: 37, scope: !9930)
!9943 = !DILocation(line: 835, column: 4, scope: !9930)
!9944 = !DILocation(line: 835, column: 44, scope: !9930)
!9945 = !DILocation(line: 836, column: 36, scope: !9930)
!9946 = !DILocation(line: 836, column: 4, scope: !9930)
!9947 = !DILocation(line: 833, column: 2, scope: !9930)
!9948 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1578, file: !1578, line: 839, type: !1472, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9949)
!9949 = !{!9950}
!9950 = !DILocalVariable(name: "dev", arg: 1, scope: !9948, file: !1578, line: 839, type: !1451)
!9951 = !DILocation(line: 0, scope: !9948)
!9952 = !DILocation(line: 841, column: 2, scope: !9948)
!9953 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1578, file: !1578, line: 844, type: !1516, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9954)
!9954 = !{!9955, !9956, !9957, !9958}
!9955 = !DILocalVariable(name: "dev", arg: 1, scope: !9953, file: !1578, line: 844, type: !1451)
!9956 = !DILocalVariable(name: "cb", arg: 2, scope: !9953, file: !1578, line: 845, type: !1518)
!9957 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9953, file: !1578, line: 846, type: !102)
!9958 = !DILocalVariable(name: "data", scope: !9953, file: !1578, line: 848, type: !9654)
!9959 = !DILocation(line: 0, scope: !9953)
!9960 = !DILocation(line: 848, column: 38, scope: !9953)
!9961 = !DILocation(line: 850, column: 8, scope: !9953)
!9962 = !DILocation(line: 850, column: 16, scope: !9953)
!9963 = !DILocation(line: 851, column: 8, scope: !9953)
!9964 = !DILocation(line: 851, column: 18, scope: !9953)
!9965 = !DILocation(line: 852, column: 1, scope: !9953)
!9966 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9967, file: !9967, line: 1792, type: !9968, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9970)
!9967 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9968 = !DISubroutineType(types: !9969)
!9969 = !{!121, !1522}
!9970 = !{!9971}
!9971 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9966, file: !9967, line: 1792, type: !1522)
!9972 = !DILocation(line: 0, scope: !9966)
!9973 = !DILocation(line: 1794, column: 11, scope: !9966)
!9974 = !DILocation(line: 1794, column: 47, scope: !9966)
!9975 = !DILocation(line: 1794, column: 3, scope: !9966)
!9976 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !9967, file: !9967, line: 2227, type: !9968, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9977)
!9977 = !{!9978}
!9978 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9976, file: !9967, line: 2227, type: !1522)
!9979 = !DILocation(line: 0, scope: !9976)
!9980 = !DILocation(line: 2229, column: 11, scope: !9976)
!9981 = !DILocation(line: 2229, column: 51, scope: !9976)
!9982 = !DILocation(line: 2229, column: 3, scope: !9976)
!9983 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !9967, file: !9967, line: 1803, type: !9968, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9984)
!9984 = !{!9985}
!9985 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9983, file: !9967, line: 1803, type: !1522)
!9986 = !DILocation(line: 0, scope: !9983)
!9987 = !DILocation(line: 1805, column: 11, scope: !9983)
!9988 = !DILocation(line: 1805, column: 45, scope: !9983)
!9989 = !DILocation(line: 1805, column: 3, scope: !9983)
!9990 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !9967, file: !9967, line: 2238, type: !9968, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !9991)
!9991 = !{!9992}
!9992 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9990, file: !9967, line: 2238, type: !1522)
!9993 = !DILocation(line: 0, scope: !9990)
!9994 = !DILocation(line: 2240, column: 11, scope: !9990)
!9995 = !DILocation(line: 2240, column: 49, scope: !9990)
!9996 = !DILocation(line: 2240, column: 3, scope: !9990)
!9997 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !9967, file: !9967, line: 2192, type: !9998, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10000)
!9998 = !DISubroutineType(types: !9999)
!9999 = !{null, !1522}
!10000 = !{!10001, !10002}
!10001 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9997, file: !9967, line: 2192, type: !1522)
!10002 = !DILocalVariable(name: "val", scope: !10003, file: !9967, line: 2194, type: !121)
!10003 = distinct !DILexicalBlock(scope: !9997, file: !9967, line: 2194, column: 3)
!10004 = !DILocation(line: 0, scope: !9997)
!10005 = !DILocation(line: 2194, column: 3, scope: !10003)
!10006 = !DILocalVariable(name: "addr", arg: 1, scope: !10007, file: !5919, line: 476, type: !1574)
!10007 = distinct !DISubprogram(name: "__LDREXW", scope: !5919, file: !5919, line: 476, type: !10008, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10010)
!10008 = !DISubroutineType(types: !10009)
!10009 = !{!121, !1574}
!10010 = !{!10006, !10011}
!10011 = !DILocalVariable(name: "result", scope: !10007, file: !5919, line: 478, type: !121)
!10012 = !DILocation(line: 0, scope: !10007, inlinedAt: !10013)
!10013 = distinct !DILocation(line: 2194, column: 3, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10003, file: !9967, line: 2194, column: 3)
!10015 = !DILocation(line: 480, column: 4, scope: !10007, inlinedAt: !10013)
!10016 = !{i64 2859299}
!10017 = !DILocation(line: 2194, column: 3, scope: !10014)
!10018 = !DILocation(line: 0, scope: !10003)
!10019 = !DILocalVariable(name: "value", arg: 1, scope: !10020, file: !5919, line: 527, type: !121)
!10020 = distinct !DISubprogram(name: "__STREXW", scope: !5919, file: !5919, line: 527, type: !10021, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10023)
!10021 = !DISubroutineType(types: !10022)
!10022 = !{!121, !121, !1574}
!10023 = !{!10019, !10024, !10025}
!10024 = !DILocalVariable(name: "addr", arg: 2, scope: !10020, file: !5919, line: 527, type: !1574)
!10025 = !DILocalVariable(name: "result", scope: !10020, file: !5919, line: 529, type: !121)
!10026 = !DILocation(line: 0, scope: !10020, inlinedAt: !10027)
!10027 = distinct !DILocation(line: 2194, column: 3, scope: !10003)
!10028 = !DILocation(line: 531, column: 4, scope: !10020, inlinedAt: !10027)
!10029 = !{i64 2860735}
!10030 = distinct !{!10030, !10005, !10005}
!10031 = !DILocation(line: 2195, column: 1, scope: !9997)
!10032 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !9967, file: !9967, line: 2177, type: !9998, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10033)
!10033 = !{!10034}
!10034 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10032, file: !9967, line: 2177, type: !1522)
!10035 = !DILocation(line: 0, scope: !10032)
!10036 = !DILocation(line: 2179, column: 3, scope: !10032)
!10037 = !DILocation(line: 2180, column: 1, scope: !10032)
!10038 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !9967, file: !9967, line: 2164, type: !9998, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10039)
!10039 = !{!10040, !10041}
!10040 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10038, file: !9967, line: 2164, type: !1522)
!10041 = !DILocalVariable(name: "val", scope: !10042, file: !9967, line: 2166, type: !121)
!10042 = distinct !DILexicalBlock(scope: !10038, file: !9967, line: 2166, column: 3)
!10043 = !DILocation(line: 0, scope: !10038)
!10044 = !DILocation(line: 2166, column: 3, scope: !10042)
!10045 = !DILocation(line: 0, scope: !10007, inlinedAt: !10046)
!10046 = distinct !DILocation(line: 2166, column: 3, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10042, file: !9967, line: 2166, column: 3)
!10048 = !DILocation(line: 480, column: 4, scope: !10007, inlinedAt: !10046)
!10049 = !DILocation(line: 2166, column: 3, scope: !10047)
!10050 = !DILocation(line: 0, scope: !10042)
!10051 = !DILocation(line: 0, scope: !10020, inlinedAt: !10052)
!10052 = distinct !DILocation(line: 2166, column: 3, scope: !10042)
!10053 = !DILocation(line: 531, column: 4, scope: !10020, inlinedAt: !10052)
!10054 = distinct !{!10054, !10044, !10044}
!10055 = !DILocation(line: 2167, column: 1, scope: !10038)
!10056 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !9967, file: !9967, line: 2096, type: !9998, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10057)
!10057 = !{!10058, !10059}
!10058 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10056, file: !9967, line: 2096, type: !1522)
!10059 = !DILocalVariable(name: "val", scope: !10060, file: !9967, line: 2098, type: !121)
!10060 = distinct !DILexicalBlock(scope: !10056, file: !9967, line: 2098, column: 3)
!10061 = !DILocation(line: 0, scope: !10056)
!10062 = !DILocation(line: 2098, column: 3, scope: !10060)
!10063 = !DILocation(line: 0, scope: !10007, inlinedAt: !10064)
!10064 = distinct !DILocation(line: 2098, column: 3, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10060, file: !9967, line: 2098, column: 3)
!10066 = !DILocation(line: 480, column: 4, scope: !10007, inlinedAt: !10064)
!10067 = !DILocation(line: 2098, column: 3, scope: !10065)
!10068 = !DILocation(line: 0, scope: !10060)
!10069 = !DILocation(line: 0, scope: !10020, inlinedAt: !10070)
!10070 = distinct !DILocation(line: 2098, column: 3, scope: !10060)
!10071 = !DILocation(line: 531, column: 4, scope: !10020, inlinedAt: !10070)
!10072 = distinct !{!10072, !10062, !10062}
!10073 = !DILocation(line: 2099, column: 1, scope: !10056)
!10074 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !9967, file: !9967, line: 2081, type: !9998, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10075)
!10075 = !{!10076}
!10076 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10074, file: !9967, line: 2081, type: !1522)
!10077 = !DILocation(line: 0, scope: !10074)
!10078 = !DILocation(line: 2083, column: 3, scope: !10074)
!10079 = !DILocation(line: 2084, column: 1, scope: !10074)
!10080 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !9967, file: !9967, line: 2068, type: !9998, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10081)
!10081 = !{!10082, !10083}
!10082 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10080, file: !9967, line: 2068, type: !1522)
!10083 = !DILocalVariable(name: "val", scope: !10084, file: !9967, line: 2070, type: !121)
!10084 = distinct !DILexicalBlock(scope: !10080, file: !9967, line: 2070, column: 3)
!10085 = !DILocation(line: 0, scope: !10080)
!10086 = !DILocation(line: 2070, column: 3, scope: !10084)
!10087 = !DILocation(line: 0, scope: !10007, inlinedAt: !10088)
!10088 = distinct !DILocation(line: 2070, column: 3, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10084, file: !9967, line: 2070, column: 3)
!10090 = !DILocation(line: 480, column: 4, scope: !10007, inlinedAt: !10088)
!10091 = !DILocation(line: 2070, column: 3, scope: !10089)
!10092 = !DILocation(line: 0, scope: !10084)
!10093 = !DILocation(line: 0, scope: !10020, inlinedAt: !10094)
!10094 = distinct !DILocation(line: 2070, column: 3, scope: !10084)
!10095 = !DILocation(line: 531, column: 4, scope: !10020, inlinedAt: !10094)
!10096 = distinct !{!10096, !10086, !10086}
!10097 = !DILocation(line: 2071, column: 1, scope: !10080)
!10098 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !9967, file: !9967, line: 2131, type: !9998, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10099)
!10099 = !{!10100, !10101}
!10100 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10098, file: !9967, line: 2131, type: !1522)
!10101 = !DILocalVariable(name: "val", scope: !10102, file: !9967, line: 2133, type: !121)
!10102 = distinct !DILexicalBlock(scope: !10098, file: !9967, line: 2133, column: 3)
!10103 = !DILocation(line: 0, scope: !10098)
!10104 = !DILocation(line: 2133, column: 3, scope: !10102)
!10105 = !DILocation(line: 0, scope: !10007, inlinedAt: !10106)
!10106 = distinct !DILocation(line: 2133, column: 3, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10102, file: !9967, line: 2133, column: 3)
!10108 = !DILocation(line: 480, column: 4, scope: !10007, inlinedAt: !10106)
!10109 = !DILocation(line: 2133, column: 3, scope: !10107)
!10110 = !DILocation(line: 0, scope: !10102)
!10111 = !DILocation(line: 0, scope: !10020, inlinedAt: !10112)
!10112 = distinct !DILocation(line: 2133, column: 3, scope: !10102)
!10113 = !DILocation(line: 531, column: 4, scope: !10020, inlinedAt: !10112)
!10114 = distinct !{!10114, !10104, !10104}
!10115 = !DILocation(line: 2134, column: 1, scope: !10098)
!10116 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !9967, file: !9967, line: 2035, type: !9998, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10117)
!10117 = !{!10118, !10119}
!10118 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10116, file: !9967, line: 2035, type: !1522)
!10119 = !DILocalVariable(name: "val", scope: !10120, file: !9967, line: 2037, type: !121)
!10120 = distinct !DILexicalBlock(scope: !10116, file: !9967, line: 2037, column: 3)
!10121 = !DILocation(line: 0, scope: !10116)
!10122 = !DILocation(line: 2037, column: 3, scope: !10120)
!10123 = !DILocation(line: 0, scope: !10007, inlinedAt: !10124)
!10124 = distinct !DILocation(line: 2037, column: 3, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10120, file: !9967, line: 2037, column: 3)
!10126 = !DILocation(line: 480, column: 4, scope: !10007, inlinedAt: !10124)
!10127 = !DILocation(line: 2037, column: 3, scope: !10125)
!10128 = !DILocation(line: 0, scope: !10120)
!10129 = !DILocation(line: 0, scope: !10020, inlinedAt: !10130)
!10130 = distinct !DILocation(line: 2037, column: 3, scope: !10120)
!10131 = !DILocation(line: 531, column: 4, scope: !10020, inlinedAt: !10130)
!10132 = distinct !{!10132, !10122, !10122}
!10133 = !DILocation(line: 2038, column: 1, scope: !10116)
!10134 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9967, file: !9967, line: 1814, type: !9968, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10135)
!10135 = !{!10136}
!10136 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10134, file: !9967, line: 1814, type: !1522)
!10137 = !DILocation(line: 0, scope: !10134)
!10138 = !DILocation(line: 1816, column: 11, scope: !10134)
!10139 = !DILocation(line: 1816, column: 46, scope: !10134)
!10140 = !DILocation(line: 1816, column: 3, scope: !10134)
!10141 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !9967, file: !9967, line: 2142, type: !9998, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10142)
!10142 = !{!10143, !10144}
!10143 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10141, file: !9967, line: 2142, type: !1522)
!10144 = !DILocalVariable(name: "val", scope: !10145, file: !9967, line: 2144, type: !121)
!10145 = distinct !DILexicalBlock(scope: !10141, file: !9967, line: 2144, column: 3)
!10146 = !DILocation(line: 0, scope: !10141)
!10147 = !DILocation(line: 2144, column: 3, scope: !10145)
!10148 = !DILocation(line: 0, scope: !10007, inlinedAt: !10149)
!10149 = distinct !DILocation(line: 2144, column: 3, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10145, file: !9967, line: 2144, column: 3)
!10151 = !DILocation(line: 480, column: 4, scope: !10007, inlinedAt: !10149)
!10152 = !DILocation(line: 2144, column: 3, scope: !10150)
!10153 = !DILocation(line: 0, scope: !10145)
!10154 = !DILocation(line: 0, scope: !10020, inlinedAt: !10155)
!10155 = distinct !DILocation(line: 2144, column: 3, scope: !10145)
!10156 = !DILocation(line: 531, column: 4, scope: !10020, inlinedAt: !10155)
!10157 = distinct !{!10157, !10147, !10147}
!10158 = !DILocation(line: 2145, column: 1, scope: !10141)
!10159 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !9967, file: !9967, line: 2046, type: !9998, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10160)
!10160 = !{!10161, !10162}
!10161 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10159, file: !9967, line: 2046, type: !1522)
!10162 = !DILocalVariable(name: "val", scope: !10163, file: !9967, line: 2048, type: !121)
!10163 = distinct !DILexicalBlock(scope: !10159, file: !9967, line: 2048, column: 3)
!10164 = !DILocation(line: 0, scope: !10159)
!10165 = !DILocation(line: 2048, column: 3, scope: !10163)
!10166 = !DILocation(line: 0, scope: !10007, inlinedAt: !10167)
!10167 = distinct !DILocation(line: 2048, column: 3, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10163, file: !9967, line: 2048, column: 3)
!10169 = !DILocation(line: 480, column: 4, scope: !10007, inlinedAt: !10167)
!10170 = !DILocation(line: 2048, column: 3, scope: !10168)
!10171 = !DILocation(line: 0, scope: !10163)
!10172 = !DILocation(line: 0, scope: !10020, inlinedAt: !10173)
!10173 = distinct !DILocation(line: 2048, column: 3, scope: !10163)
!10174 = !DILocation(line: 531, column: 4, scope: !10020, inlinedAt: !10173)
!10175 = distinct !{!10175, !10165, !10165}
!10176 = !DILocation(line: 2049, column: 1, scope: !10159)
!10177 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9967, file: !9967, line: 2403, type: !10178, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10180)
!10178 = !DISubroutineType(types: !10179)
!10179 = !{!154, !1522}
!10180 = !{!10181}
!10181 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10177, file: !9967, line: 2403, type: !1522)
!10182 = !DILocation(line: 0, scope: !10177)
!10183 = !DILocation(line: 2405, column: 20, scope: !10177)
!10184 = !DILocation(line: 2405, column: 10, scope: !10177)
!10185 = !DILocation(line: 2405, column: 3, scope: !10177)
!10186 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9967, file: !9967, line: 1770, type: !9968, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10187)
!10187 = !{!10188}
!10188 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10186, file: !9967, line: 1770, type: !1522)
!10189 = !DILocation(line: 0, scope: !10186)
!10190 = !DILocation(line: 1772, column: 11, scope: !10186)
!10191 = !DILocation(line: 1772, column: 46, scope: !10186)
!10192 = !DILocation(line: 1772, column: 3, scope: !10186)
!10193 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9967, file: !9967, line: 1934, type: !9998, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10194)
!10194 = !{!10195, !10196}
!10195 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10193, file: !9967, line: 1934, type: !1522)
!10196 = !DILocalVariable(name: "tmpreg", scope: !10193, file: !9967, line: 1936, type: !120)
!10197 = !DILocation(line: 0, scope: !10193)
!10198 = !DILocation(line: 1936, column: 3, scope: !10193)
!10199 = !DILocation(line: 1936, column: 17, scope: !10193)
!10200 = !DILocation(line: 1937, column: 20, scope: !10193)
!10201 = !DILocation(line: 1937, column: 10, scope: !10193)
!10202 = !DILocation(line: 1938, column: 10, scope: !10193)
!10203 = !DILocation(line: 1939, column: 20, scope: !10193)
!10204 = !DILocation(line: 1939, column: 10, scope: !10193)
!10205 = !DILocation(line: 1940, column: 10, scope: !10193)
!10206 = !DILocation(line: 1941, column: 1, scope: !10193)
!10207 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9967, file: !9967, line: 2426, type: !10208, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10210)
!10208 = !DISubroutineType(types: !10209)
!10209 = !{null, !1522, !154}
!10210 = !{!10211, !10212}
!10211 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10207, file: !9967, line: 2426, type: !1522)
!10212 = !DILocalVariable(name: "Value", arg: 2, scope: !10207, file: !9967, line: 2426, type: !154)
!10213 = !DILocation(line: 0, scope: !10207)
!10214 = !DILocation(line: 2428, column: 16, scope: !10207)
!10215 = !DILocation(line: 2428, column: 11, scope: !10207)
!10216 = !DILocation(line: 2428, column: 14, scope: !10207)
!10217 = !DILocation(line: 2429, column: 1, scope: !10207)
!10218 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1578, file: !1578, line: 205, type: !10219, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10221)
!10219 = !DISubroutineType(types: !10220)
!10220 = !{!121, !1451}
!10221 = !{!10222, !10223}
!10222 = !DILocalVariable(name: "dev", arg: 1, scope: !10218, file: !1578, line: 205, type: !1451)
!10223 = !DILocalVariable(name: "config", scope: !10218, file: !1578, line: 207, type: !9531)
!10224 = !DILocation(line: 0, scope: !10218)
!10225 = !DILocation(line: 207, column: 48, scope: !10218)
!10226 = !DILocation(line: 209, column: 36, scope: !10218)
!10227 = !DILocation(line: 209, column: 9, scope: !10218)
!10228 = !DILocation(line: 209, column: 2, scope: !10218)
!10229 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1578, file: !1578, line: 270, type: !10230, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10232)
!10230 = !DISubroutineType(types: !10231)
!10231 = !{!1417, !121}
!10232 = !{!10233}
!10233 = !DILocalVariable(name: "parity", arg: 1, scope: !10229, file: !1578, line: 270, type: !121)
!10234 = !DILocation(line: 0, scope: !10229)
!10235 = !DILocation(line: 272, column: 2, scope: !10229)
!10236 = !DILocation(line: 281, column: 1, scope: !10229)
!10237 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1578, file: !1578, line: 220, type: !10219, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10238)
!10238 = !{!10239, !10240}
!10239 = !DILocalVariable(name: "dev", arg: 1, scope: !10237, file: !1578, line: 220, type: !1451)
!10240 = !DILocalVariable(name: "config", scope: !10237, file: !1578, line: 222, type: !9531)
!10241 = !DILocation(line: 0, scope: !10237)
!10242 = !DILocation(line: 222, column: 48, scope: !10237)
!10243 = !DILocation(line: 224, column: 44, scope: !10237)
!10244 = !DILocation(line: 224, column: 9, scope: !10237)
!10245 = !DILocation(line: 224, column: 2, scope: !10237)
!10246 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1578, file: !1578, line: 304, type: !10247, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10249)
!10247 = !DISubroutineType(types: !10248)
!10248 = !{!1431, !121}
!10249 = !{!10250}
!10250 = !DILocalVariable(name: "sb", arg: 1, scope: !10246, file: !1578, line: 304, type: !121)
!10251 = !DILocation(line: 0, scope: !10246)
!10252 = !DILocation(line: 306, column: 2, scope: !10246)
!10253 = !DILocation(line: 0, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10246, file: !1578, line: 306, column: 14)
!10255 = !DILocation(line: 323, column: 1, scope: !10246)
!10256 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1578, file: !1578, line: 235, type: !10219, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10257)
!10257 = !{!10258, !10259}
!10258 = !DILocalVariable(name: "dev", arg: 1, scope: !10256, file: !1578, line: 235, type: !1451)
!10259 = !DILocalVariable(name: "config", scope: !10256, file: !1578, line: 237, type: !9531)
!10260 = !DILocation(line: 0, scope: !10256)
!10261 = !DILocation(line: 237, column: 48, scope: !10256)
!10262 = !DILocation(line: 239, column: 39, scope: !10256)
!10263 = !DILocation(line: 239, column: 9, scope: !10256)
!10264 = !DILocation(line: 239, column: 2, scope: !10256)
!10265 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1578, file: !1578, line: 355, type: !10266, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10268)
!10266 = !DISubroutineType(types: !10267)
!10267 = !{!1424, !121, !121}
!10268 = !{!10269, !10270}
!10269 = !DILocalVariable(name: "db", arg: 1, scope: !10265, file: !1578, line: 355, type: !121)
!10270 = !DILocalVariable(name: "p", arg: 2, scope: !10265, file: !1578, line: 356, type: !121)
!10271 = !DILocation(line: 0, scope: !10265)
!10272 = !DILocation(line: 358, column: 2, scope: !10265)
!10273 = !DILocation(line: 384, column: 1, scope: !10265)
!10274 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1578, file: !1578, line: 250, type: !10219, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10275)
!10275 = !{!10276, !10277}
!10276 = !DILocalVariable(name: "dev", arg: 1, scope: !10274, file: !1578, line: 250, type: !1451)
!10277 = !DILocalVariable(name: "config", scope: !10274, file: !1578, line: 252, type: !9531)
!10278 = !DILocation(line: 0, scope: !10274)
!10279 = !DILocation(line: 252, column: 48, scope: !10274)
!10280 = !DILocation(line: 254, column: 40, scope: !10274)
!10281 = !DILocation(line: 254, column: 9, scope: !10274)
!10282 = !DILocation(line: 254, column: 2, scope: !10274)
!10283 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1578, file: !1578, line: 409, type: !10284, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10286)
!10284 = !DISubroutineType(types: !10285)
!10285 = !{!1437, !121}
!10286 = !{!10287}
!10287 = !DILocalVariable(name: "fc", arg: 1, scope: !10283, file: !1578, line: 409, type: !121)
!10288 = !DILocation(line: 0, scope: !10283)
!10289 = !DILocation(line: 411, column: 9, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10283, file: !1578, line: 411, column: 6)
!10291 = !DILocation(line: 416, column: 1, scope: !10283)
!10292 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9967, file: !9967, line: 967, type: !9968, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10293)
!10293 = !{!10294}
!10294 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10292, file: !9967, line: 967, type: !1522)
!10295 = !DILocation(line: 0, scope: !10292)
!10296 = !DILocation(line: 969, column: 21, scope: !10292)
!10297 = !DILocation(line: 969, column: 3, scope: !10292)
!10298 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9967, file: !9967, line: 601, type: !9968, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10299)
!10299 = !{!10300}
!10300 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10298, file: !9967, line: 601, type: !1522)
!10301 = !DILocation(line: 0, scope: !10298)
!10302 = !DILocation(line: 603, column: 21, scope: !10298)
!10303 = !DILocation(line: 603, column: 3, scope: !10298)
!10304 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9967, file: !9967, line: 820, type: !9968, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10305)
!10305 = !{!10306}
!10306 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10304, file: !9967, line: 820, type: !1522)
!10307 = !DILocation(line: 0, scope: !10304)
!10308 = !DILocation(line: 822, column: 21, scope: !10304)
!10309 = !DILocation(line: 822, column: 3, scope: !10304)
!10310 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9967, file: !9967, line: 547, type: !9968, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10311)
!10311 = !{!10312}
!10312 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10310, file: !9967, line: 547, type: !1522)
!10313 = !DILocation(line: 0, scope: !10310)
!10314 = !DILocation(line: 549, column: 21, scope: !10310)
!10315 = !DILocation(line: 549, column: 3, scope: !10310)
!10316 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1578, file: !1578, line: 257, type: !10317, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10319)
!10317 = !DISubroutineType(types: !10318)
!10318 = !{!121, !1417}
!10319 = !{!10320}
!10320 = !DILocalVariable(name: "parity", arg: 1, scope: !10316, file: !1578, line: 257, type: !1417)
!10321 = !DILocation(line: 0, scope: !10316)
!10322 = !DILocation(line: 259, column: 2, scope: !10316)
!10323 = !DILocation(line: 268, column: 1, scope: !10316)
!10324 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1578, file: !1578, line: 283, type: !10325, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10327)
!10325 = !DISubroutineType(types: !10326)
!10326 = !{!121, !1431}
!10327 = !{!10328}
!10328 = !DILocalVariable(name: "sb", arg: 1, scope: !10324, file: !1578, line: 283, type: !1431)
!10329 = !DILocation(line: 0, scope: !10324)
!10330 = !DILocation(line: 285, column: 2, scope: !10324)
!10331 = !DILocation(line: 0, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10324, file: !1578, line: 285, column: 14)
!10333 = !DILocation(line: 302, column: 1, scope: !10324)
!10334 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1578, file: !1578, line: 325, type: !10335, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10337)
!10335 = !DISubroutineType(types: !10336)
!10336 = !{!121, !1424, !1417}
!10337 = !{!10338, !10339}
!10338 = !DILocalVariable(name: "db", arg: 1, scope: !10334, file: !1578, line: 325, type: !1424)
!10339 = !DILocalVariable(name: "p", arg: 2, scope: !10334, file: !1578, line: 326, type: !1417)
!10340 = !DILocation(line: 0, scope: !10334)
!10341 = !DILocation(line: 328, column: 2, scope: !10334)
!10342 = !DILocation(line: 353, column: 1, scope: !10334)
!10343 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1578, file: !1578, line: 393, type: !10344, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10346)
!10344 = !DISubroutineType(types: !10345)
!10345 = !{!121, !1437}
!10346 = !{!10347}
!10347 = !DILocalVariable(name: "fc", arg: 1, scope: !10343, file: !1578, line: 393, type: !1437)
!10348 = !DILocation(line: 0, scope: !10343)
!10349 = !DILocation(line: 395, column: 9, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10343, file: !1578, line: 395, column: 6)
!10351 = !DILocation(line: 400, column: 1, scope: !10343)
!10352 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9967, file: !9967, line: 424, type: !9998, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10353)
!10353 = !{!10354}
!10354 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10352, file: !9967, line: 424, type: !1522)
!10355 = !DILocation(line: 0, scope: !10352)
!10356 = !DILocation(line: 426, column: 3, scope: !10352)
!10357 = !DILocation(line: 427, column: 1, scope: !10352)
!10358 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1578, file: !1578, line: 197, type: !10359, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10361)
!10359 = !DISubroutineType(types: !10360)
!10360 = !{null, !1451, !121}
!10361 = !{!10362, !10363, !10364}
!10362 = !DILocalVariable(name: "dev", arg: 1, scope: !10358, file: !1578, line: 197, type: !1451)
!10363 = !DILocalVariable(name: "parity", arg: 2, scope: !10358, file: !1578, line: 198, type: !121)
!10364 = !DILocalVariable(name: "config", scope: !10358, file: !1578, line: 200, type: !9531)
!10365 = !DILocation(line: 0, scope: !10358)
!10366 = !DILocation(line: 200, column: 48, scope: !10358)
!10367 = !DILocation(line: 202, column: 29, scope: !10358)
!10368 = !DILocation(line: 202, column: 2, scope: !10358)
!10369 = !DILocation(line: 203, column: 1, scope: !10358)
!10370 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1578, file: !1578, line: 212, type: !10359, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10371)
!10371 = !{!10372, !10373, !10374}
!10372 = !DILocalVariable(name: "dev", arg: 1, scope: !10370, file: !1578, line: 212, type: !1451)
!10373 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10370, file: !1578, line: 213, type: !121)
!10374 = !DILocalVariable(name: "config", scope: !10370, file: !1578, line: 215, type: !9531)
!10375 = !DILocation(line: 0, scope: !10370)
!10376 = !DILocation(line: 215, column: 48, scope: !10370)
!10377 = !DILocation(line: 217, column: 37, scope: !10370)
!10378 = !DILocation(line: 217, column: 2, scope: !10370)
!10379 = !DILocation(line: 218, column: 1, scope: !10370)
!10380 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1578, file: !1578, line: 227, type: !10359, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10381)
!10381 = !{!10382, !10383, !10384}
!10382 = !DILocalVariable(name: "dev", arg: 1, scope: !10380, file: !1578, line: 227, type: !1451)
!10383 = !DILocalVariable(name: "databits", arg: 2, scope: !10380, file: !1578, line: 228, type: !121)
!10384 = !DILocalVariable(name: "config", scope: !10380, file: !1578, line: 230, type: !9531)
!10385 = !DILocation(line: 0, scope: !10380)
!10386 = !DILocation(line: 230, column: 48, scope: !10380)
!10387 = !DILocation(line: 232, column: 32, scope: !10380)
!10388 = !DILocation(line: 232, column: 2, scope: !10380)
!10389 = !DILocation(line: 233, column: 1, scope: !10380)
!10390 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1578, file: !1578, line: 242, type: !10359, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10391)
!10391 = !{!10392, !10393, !10394}
!10392 = !DILocalVariable(name: "dev", arg: 1, scope: !10390, file: !1578, line: 242, type: !1451)
!10393 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10390, file: !1578, line: 243, type: !121)
!10394 = !DILocalVariable(name: "config", scope: !10390, file: !1578, line: 245, type: !9531)
!10395 = !DILocation(line: 0, scope: !10390)
!10396 = !DILocation(line: 245, column: 48, scope: !10390)
!10397 = !DILocation(line: 247, column: 33, scope: !10390)
!10398 = !DILocation(line: 247, column: 2, scope: !10390)
!10399 = !DILocation(line: 248, column: 1, scope: !10390)
!10400 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1578, file: !1578, line: 107, type: !10359, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10401)
!10401 = !{!10402, !10403, !10404, !10405, !10406}
!10402 = !DILocalVariable(name: "dev", arg: 1, scope: !10400, file: !1578, line: 107, type: !1451)
!10403 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10400, file: !1578, line: 107, type: !121)
!10404 = !DILocalVariable(name: "config", scope: !10400, file: !1578, line: 109, type: !9531)
!10405 = !DILocalVariable(name: "data", scope: !10400, file: !1578, line: 110, type: !9654)
!10406 = !DILocalVariable(name: "clock_rate", scope: !10400, file: !1578, line: 112, type: !121)
!10407 = !DILocation(line: 0, scope: !10400)
!10408 = !DILocation(line: 109, column: 48, scope: !10400)
!10409 = !DILocation(line: 110, column: 38, scope: !10400)
!10410 = !DILocation(line: 112, column: 2, scope: !10400)
!10411 = !DILocation(line: 123, column: 36, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !1578, line: 123, column: 7)
!10413 = distinct !DILexicalBlock(scope: !10414, file: !1578, line: 122, column: 9)
!10414 = distinct !DILexicalBlock(scope: !10400, file: !1578, line: 115, column: 6)
!10415 = !DILocation(line: 124, column: 42, scope: !10412)
!10416 = !DILocation(line: 123, column: 7, scope: !10412)
!10417 = !DILocation(line: 125, column: 22, scope: !10412)
!10418 = !DILocation(line: 123, column: 7, scope: !10413)
!10419 = !DILocation(line: 176, column: 36, scope: !10400)
!10420 = !DILocation(line: 176, column: 3, scope: !10400)
!10421 = !DILocation(line: 179, column: 32, scope: !10400)
!10422 = !DILocation(line: 180, column: 10, scope: !10400)
!10423 = !DILocation(line: 179, column: 3, scope: !10400)
!10424 = !DILocation(line: 195, column: 1, scope: !10400)
!10425 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9967, file: !9967, line: 410, type: !9998, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10426)
!10426 = !{!10427}
!10427 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10425, file: !9967, line: 410, type: !1522)
!10428 = !DILocation(line: 0, scope: !10425)
!10429 = !DILocation(line: 412, column: 3, scope: !10425)
!10430 = !DILocation(line: 413, column: 1, scope: !10425)
!10431 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !795, file: !795, line: 216, type: !1555, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10432)
!10432 = !{!10433, !10434, !10435, !10436}
!10433 = !DILocalVariable(name: "dev", arg: 1, scope: !10431, file: !795, line: 216, type: !1451)
!10434 = !DILocalVariable(name: "sys", arg: 2, scope: !10431, file: !795, line: 217, type: !890)
!10435 = !DILocalVariable(name: "rate", arg: 3, scope: !10431, file: !795, line: 218, type: !846)
!10436 = !DILocalVariable(name: "api", scope: !10431, file: !795, line: 220, type: !1533)
!10437 = !DILocation(line: 0, scope: !10431)
!10438 = !DILocation(line: 221, column: 49, scope: !10431)
!10439 = !DILocation(line: 223, column: 11, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10431, file: !795, line: 223, column: 6)
!10441 = !DILocation(line: 223, column: 20, scope: !10440)
!10442 = !DILocation(line: 223, column: 6, scope: !10431)
!10443 = !DILocation(line: 227, column: 9, scope: !10431)
!10444 = !DILocation(line: 227, column: 2, scope: !10431)
!10445 = !DILocation(line: 228, column: 1, scope: !10431)
!10446 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9967, file: !9967, line: 615, type: !10447, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10449)
!10447 = !DISubroutineType(types: !10448)
!10448 = !{null, !1522, !121}
!10449 = !{!10450, !10451}
!10450 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10446, file: !9967, line: 615, type: !1522)
!10451 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10446, file: !9967, line: 615, type: !121)
!10452 = !DILocation(line: 0, scope: !10446)
!10453 = !DILocation(line: 617, column: 3, scope: !10446)
!10454 = !DILocation(line: 618, column: 1, scope: !10446)
!10455 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9967, file: !9967, line: 1020, type: !10456, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10458)
!10456 = !DISubroutineType(types: !10457)
!10457 = !{null, !1522, !121, !121, !121}
!10458 = !{!10459, !10460, !10461, !10462}
!10459 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10455, file: !9967, line: 1020, type: !1522)
!10460 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10455, file: !9967, line: 1020, type: !121)
!10461 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10455, file: !9967, line: 1020, type: !121)
!10462 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10455, file: !9967, line: 1021, type: !121)
!10463 = !DILocation(line: 0, scope: !10455)
!10464 = !DILocation(line: 1029, column: 30, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10466, file: !9967, line: 1028, column: 3)
!10466 = distinct !DILexicalBlock(scope: !10455, file: !9967, line: 1023, column: 7)
!10467 = !DILocation(line: 1029, column: 19, scope: !10465)
!10468 = !DILocation(line: 1029, column: 13, scope: !10465)
!10469 = !DILocation(line: 1029, column: 17, scope: !10465)
!10470 = !DILocation(line: 1031, column: 1, scope: !10455)
!10471 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9967, file: !9967, line: 949, type: !10447, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10472)
!10472 = !{!10473, !10474}
!10473 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10471, file: !9967, line: 949, type: !1522)
!10474 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10471, file: !9967, line: 949, type: !121)
!10475 = !DILocation(line: 0, scope: !10471)
!10476 = !DILocation(line: 951, column: 3, scope: !10471)
!10477 = !DILocation(line: 952, column: 1, scope: !10471)
!10478 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9967, file: !9967, line: 588, type: !10447, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10479)
!10479 = !{!10480, !10481}
!10480 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10478, file: !9967, line: 588, type: !1522)
!10481 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10478, file: !9967, line: 588, type: !121)
!10482 = !DILocation(line: 0, scope: !10478)
!10483 = !DILocation(line: 590, column: 3, scope: !10478)
!10484 = !DILocation(line: 591, column: 1, scope: !10478)
!10485 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9967, file: !9967, line: 805, type: !10447, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10486)
!10486 = !{!10487, !10488}
!10487 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10485, file: !9967, line: 805, type: !1522)
!10488 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10485, file: !9967, line: 805, type: !121)
!10489 = !DILocation(line: 0, scope: !10485)
!10490 = !DILocation(line: 807, column: 3, scope: !10485)
!10491 = !DILocation(line: 808, column: 1, scope: !10485)
!10492 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9967, file: !9967, line: 532, type: !10447, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10493)
!10493 = !{!10494, !10495}
!10494 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10492, file: !9967, line: 532, type: !1522)
!10495 = !DILocalVariable(name: "Parity", arg: 2, scope: !10492, file: !9967, line: 532, type: !121)
!10496 = !DILocation(line: 0, scope: !10492)
!10497 = !DILocation(line: 534, column: 3, scope: !10492)
!10498 = !DILocation(line: 535, column: 1, scope: !10492)
!10499 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9967, file: !9967, line: 1737, type: !9968, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10500)
!10500 = !{!10501}
!10501 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10499, file: !9967, line: 1737, type: !1522)
!10502 = !DILocation(line: 0, scope: !10499)
!10503 = !DILocation(line: 1739, column: 11, scope: !10499)
!10504 = !DILocation(line: 1739, column: 3, scope: !10499)
!10505 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9967, file: !9967, line: 1748, type: !9968, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10506)
!10506 = !{!10507}
!10507 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10505, file: !9967, line: 1748, type: !1522)
!10508 = !DILocation(line: 0, scope: !10505)
!10509 = !DILocation(line: 1750, column: 11, scope: !10505)
!10510 = !DILocation(line: 1750, column: 45, scope: !10505)
!10511 = !DILocation(line: 1750, column: 3, scope: !10505)
!10512 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9967, file: !9967, line: 1827, type: !9968, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10513)
!10513 = !{!10514}
!10514 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10512, file: !9967, line: 1827, type: !1522)
!10515 = !DILocation(line: 0, scope: !10512)
!10516 = !DILocation(line: 1829, column: 11, scope: !10512)
!10517 = !DILocation(line: 1829, column: 46, scope: !10512)
!10518 = !DILocation(line: 1829, column: 3, scope: !10512)
!10519 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9967, file: !9967, line: 1992, type: !9998, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10520)
!10520 = !{!10521}
!10521 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10519, file: !9967, line: 1992, type: !1522)
!10522 = !DILocation(line: 0, scope: !10519)
!10523 = !DILocation(line: 1994, column: 3, scope: !10519)
!10524 = !DILocation(line: 1995, column: 1, scope: !10519)
!10525 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9967, file: !9967, line: 1877, type: !9998, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10526)
!10526 = !{!10527, !10528}
!10527 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10525, file: !9967, line: 1877, type: !1522)
!10528 = !DILocalVariable(name: "tmpreg", scope: !10525, file: !9967, line: 1879, type: !120)
!10529 = !DILocation(line: 0, scope: !10525)
!10530 = !DILocation(line: 1879, column: 3, scope: !10525)
!10531 = !DILocation(line: 1879, column: 17, scope: !10525)
!10532 = !DILocation(line: 1880, column: 20, scope: !10525)
!10533 = !DILocation(line: 1880, column: 10, scope: !10525)
!10534 = !DILocation(line: 1881, column: 10, scope: !10525)
!10535 = !DILocation(line: 1882, column: 20, scope: !10525)
!10536 = !DILocation(line: 1882, column: 10, scope: !10525)
!10537 = !DILocation(line: 1883, column: 10, scope: !10525)
!10538 = !DILocation(line: 1884, column: 1, scope: !10525)
!10539 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9967, file: !9967, line: 1896, type: !9998, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10540)
!10540 = !{!10541, !10542}
!10541 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10539, file: !9967, line: 1896, type: !1522)
!10542 = !DILocalVariable(name: "tmpreg", scope: !10539, file: !9967, line: 1898, type: !120)
!10543 = !DILocation(line: 0, scope: !10539)
!10544 = !DILocation(line: 1898, column: 3, scope: !10539)
!10545 = !DILocation(line: 1898, column: 17, scope: !10539)
!10546 = !DILocation(line: 1899, column: 20, scope: !10539)
!10547 = !DILocation(line: 1899, column: 10, scope: !10539)
!10548 = !DILocation(line: 1900, column: 10, scope: !10539)
!10549 = !DILocation(line: 1901, column: 20, scope: !10539)
!10550 = !DILocation(line: 1901, column: 10, scope: !10539)
!10551 = !DILocation(line: 1902, column: 10, scope: !10539)
!10552 = !DILocation(line: 1903, column: 1, scope: !10539)
!10553 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9967, file: !9967, line: 1915, type: !9998, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10554)
!10554 = !{!10555, !10556}
!10555 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10553, file: !9967, line: 1915, type: !1522)
!10556 = !DILocalVariable(name: "tmpreg", scope: !10553, file: !9967, line: 1917, type: !120)
!10557 = !DILocation(line: 0, scope: !10553)
!10558 = !DILocation(line: 1917, column: 3, scope: !10553)
!10559 = !DILocation(line: 1917, column: 17, scope: !10553)
!10560 = !DILocation(line: 1918, column: 20, scope: !10553)
!10561 = !DILocation(line: 1918, column: 10, scope: !10553)
!10562 = !DILocation(line: 1919, column: 10, scope: !10553)
!10563 = !DILocation(line: 1920, column: 20, scope: !10553)
!10564 = !DILocation(line: 1920, column: 10, scope: !10553)
!10565 = !DILocation(line: 1921, column: 10, scope: !10553)
!10566 = !DILocation(line: 1922, column: 1, scope: !10553)
!10567 = !DILocation(line: 0, scope: !1632)
!10568 = !DILocation(line: 1914, column: 1, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !1632, file: !1578, line: 1914, column: 1)
!10570 = !DILocation(line: 1914, column: 1, scope: !1632)
!10571 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1578, file: !1578, line: 987, type: !1502, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10572)
!10572 = !{!10573, !10574}
!10573 = !DILocalVariable(name: "dev", arg: 1, scope: !10571, file: !1578, line: 987, type: !1451)
!10574 = !DILocalVariable(name: "data", scope: !10571, file: !1578, line: 989, type: !9654)
!10575 = !DILocation(line: 0, scope: !10571)
!10576 = !DILocation(line: 989, column: 38, scope: !10571)
!10577 = !DILocation(line: 1014, column: 12, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10571, file: !1578, line: 1014, column: 6)
!10579 = !DILocation(line: 1014, column: 6, scope: !10578)
!10580 = !DILocation(line: 1014, column: 6, scope: !10571)
!10581 = !DILocation(line: 1015, column: 28, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10578, file: !1578, line: 1014, column: 21)
!10583 = !DILocation(line: 1015, column: 3, scope: !10582)
!10584 = !DILocation(line: 1016, column: 2, scope: !10582)
!10585 = !DILocation(line: 1059, column: 1, scope: !10571)
!10586 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1578, file: !1578, line: 1583, type: !1472, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10587)
!10587 = !{!10588, !10589, !10590, !10591, !10592, !10593}
!10588 = !DILocalVariable(name: "dev", arg: 1, scope: !10586, file: !1578, line: 1583, type: !1451)
!10589 = !DILocalVariable(name: "config", scope: !10586, file: !1578, line: 1585, type: !9531)
!10590 = !DILocalVariable(name: "data", scope: !10586, file: !1578, line: 1586, type: !9654)
!10591 = !DILocalVariable(name: "ll_parity", scope: !10586, file: !1578, line: 1587, type: !121)
!10592 = !DILocalVariable(name: "ll_datawidth", scope: !10586, file: !1578, line: 1588, type: !121)
!10593 = !DILocalVariable(name: "err", scope: !10586, file: !1578, line: 1589, type: !103)
!10594 = !DILocation(line: 0, scope: !10586)
!10595 = !DILocation(line: 1585, column: 48, scope: !10586)
!10596 = !DILocation(line: 1586, column: 38, scope: !10586)
!10597 = !DILocation(line: 1591, column: 2, scope: !10586)
!10598 = !DILocation(line: 1593, column: 29, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10586, file: !1578, line: 1593, column: 6)
!10600 = !DILocation(line: 1593, column: 7, scope: !10599)
!10601 = !DILocation(line: 1593, column: 6, scope: !10586)
!10602 = !DILocation(line: 1599, column: 31, scope: !10586)
!10603 = !DILocation(line: 1599, column: 71, scope: !10586)
!10604 = !DILocation(line: 1599, column: 8, scope: !10586)
!10605 = !DILocation(line: 1600, column: 10, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10586, file: !1578, line: 1600, column: 6)
!10607 = !DILocation(line: 1600, column: 6, scope: !10586)
!10608 = !DILocation(line: 1616, column: 36, scope: !10586)
!10609 = !DILocation(line: 1616, column: 8, scope: !10586)
!10610 = !DILocation(line: 1617, column: 10, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10586, file: !1578, line: 1617, column: 6)
!10612 = !DILocation(line: 1617, column: 6, scope: !10586)
!10613 = !DILocation(line: 1621, column: 27, scope: !10586)
!10614 = !DILocation(line: 1621, column: 2, scope: !10586)
!10615 = !DILocation(line: 1624, column: 40, scope: !10586)
!10616 = !DILocation(line: 1624, column: 2, scope: !10586)
!10617 = !DILocation(line: 1630, column: 14, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10586, file: !1578, line: 1630, column: 6)
!10619 = !DILocation(line: 1630, column: 6, scope: !10586)
!10620 = !DILocation(line: 1638, column: 2, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10622, file: !1578, line: 1634, column: 34)
!10622 = distinct !DILexicalBlock(scope: !10618, file: !1578, line: 1634, column: 13)
!10623 = !DILocation(line: 0, scope: !10618)
!10624 = !DILocation(line: 1649, column: 35, scope: !10586)
!10625 = !DILocation(line: 1649, column: 2, scope: !10586)
!10626 = !DILocation(line: 1654, column: 14, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10586, file: !1578, line: 1654, column: 6)
!10628 = !DILocation(line: 1654, column: 6, scope: !10586)
!10629 = !DILocation(line: 1655, column: 3, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10627, file: !1578, line: 1654, column: 31)
!10631 = !DILocation(line: 1656, column: 2, scope: !10630)
!10632 = !DILocation(line: 1659, column: 37, scope: !10586)
!10633 = !DILocation(line: 1659, column: 2, scope: !10586)
!10634 = !DILocation(line: 1662, column: 14, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10586, file: !1578, line: 1662, column: 6)
!10636 = !DILocation(line: 1662, column: 6, scope: !10586)
!10637 = !DILocation(line: 1663, column: 37, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10635, file: !1578, line: 1662, column: 27)
!10639 = !DILocation(line: 1663, column: 3, scope: !10638)
!10640 = !DILocation(line: 1664, column: 2, scope: !10638)
!10641 = !DILocation(line: 1684, column: 26, scope: !10586)
!10642 = !DILocation(line: 1684, column: 2, scope: !10586)
!10643 = !DILocation(line: 1701, column: 10, scope: !10586)
!10644 = !DILocation(line: 1701, column: 2, scope: !10586)
!10645 = !DILocation(line: 1722, column: 2, scope: !10586)
!10646 = !DILocation(line: 1724, column: 1, scope: !10586)
!10647 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1578, file: !1578, line: 651, type: !1502, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10648)
!10648 = !{!10649, !10650, !10651}
!10649 = !DILocalVariable(name: "dev", arg: 1, scope: !10647, file: !1578, line: 651, type: !1451)
!10650 = !DILocalVariable(name: "data", scope: !10647, file: !1578, line: 653, type: !9654)
!10651 = !DILocalVariable(name: "clk", scope: !10647, file: !1578, line: 654, type: !10652)
!10652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1451)
!10653 = !DILocation(line: 0, scope: !10647)
!10654 = !DILocation(line: 653, column: 38, scope: !10647)
!10655 = !DILocation(line: 656, column: 8, scope: !10647)
!10656 = !DILocation(line: 656, column: 14, scope: !10647)
!10657 = !DILocation(line: 657, column: 1, scope: !10647)
!10658 = distinct !DISubprogram(name: "device_is_ready", scope: !8113, file: !8113, line: 47, type: !10659, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10661)
!10659 = !DISubroutineType(types: !10660)
!10660 = !{!157, !1451}
!10661 = !{!10662}
!10662 = !DILocalVariable(name: "dev", arg: 1, scope: !10658, file: !8113, line: 47, type: !1451)
!10663 = !DILocation(line: 0, scope: !10658)
!10664 = !DILocation(line: 55, column: 2, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10658, file: !8113, line: 55, column: 2)
!10666 = !{i64 2154348450}
!10667 = !DILocation(line: 56, column: 9, scope: !10658)
!10668 = !DILocation(line: 56, column: 2, scope: !10658)
!10669 = distinct !DISubprogram(name: "clock_control_on", scope: !795, file: !795, line: 123, type: !1540, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10670)
!10670 = !{!10671, !10672, !10673}
!10671 = !DILocalVariable(name: "dev", arg: 1, scope: !10669, file: !795, line: 123, type: !1451)
!10672 = !DILocalVariable(name: "sys", arg: 2, scope: !10669, file: !795, line: 124, type: !890)
!10673 = !DILocalVariable(name: "api", scope: !10669, file: !795, line: 126, type: !1533)
!10674 = !DILocation(line: 0, scope: !10669)
!10675 = !DILocation(line: 127, column: 49, scope: !10669)
!10676 = !DILocation(line: 129, column: 14, scope: !10669)
!10677 = !DILocation(line: 129, column: 9, scope: !10669)
!10678 = !DILocation(line: 129, column: 2, scope: !10669)
!10679 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1605, file: !1605, line: 342, type: !10680, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10682)
!10680 = !DISubroutineType(types: !10681)
!10681 = !{!103, !1666, !154}
!10682 = !{!10683, !10684, !10685, !10686}
!10683 = !DILocalVariable(name: "config", arg: 1, scope: !10679, file: !1605, line: 342, type: !1666)
!10684 = !DILocalVariable(name: "id", arg: 2, scope: !10679, file: !1605, line: 343, type: !154)
!10685 = !DILocalVariable(name: "ret", scope: !10679, file: !1605, line: 345, type: !103)
!10686 = !DILocalVariable(name: "state", scope: !10679, file: !1605, line: 346, type: !1608)
!10687 = !DILocation(line: 0, scope: !10679)
!10688 = !DILocation(line: 346, column: 2, scope: !10679)
!10689 = !DILocation(line: 348, column: 8, scope: !10679)
!10690 = !DILocation(line: 349, column: 10, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10679, file: !1605, line: 349, column: 6)
!10692 = !DILocation(line: 349, column: 6, scope: !10679)
!10693 = !DILocation(line: 353, column: 44, scope: !10679)
!10694 = !DILocation(line: 353, column: 9, scope: !10679)
!10695 = !DILocation(line: 353, column: 2, scope: !10679)
!10696 = !DILocation(line: 354, column: 1, scope: !10679)
!10697 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9967, file: !9967, line: 497, type: !10447, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10698)
!10698 = !{!10699, !10700, !10701}
!10699 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10697, file: !9967, line: 497, type: !1522)
!10700 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10697, file: !9967, line: 497, type: !121)
!10701 = !DILocalVariable(name: "val", scope: !10702, file: !9967, line: 499, type: !121)
!10702 = distinct !DILexicalBlock(scope: !10697, file: !9967, line: 499, column: 3)
!10703 = !DILocation(line: 0, scope: !10697)
!10704 = !DILocation(line: 499, column: 3, scope: !10702)
!10705 = !DILocation(line: 0, scope: !10007, inlinedAt: !10706)
!10706 = distinct !DILocation(line: 499, column: 3, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10702, file: !9967, line: 499, column: 3)
!10708 = !DILocation(line: 480, column: 4, scope: !10007, inlinedAt: !10706)
!10709 = !DILocation(line: 499, column: 3, scope: !10707)
!10710 = !DILocation(line: 0, scope: !10702)
!10711 = !DILocation(line: 0, scope: !10020, inlinedAt: !10712)
!10712 = distinct !DILocation(line: 499, column: 3, scope: !10702)
!10713 = !DILocation(line: 531, column: 4, scope: !10020, inlinedAt: !10712)
!10714 = distinct !{!10714, !10704, !10704}
!10715 = !DILocation(line: 500, column: 1, scope: !10697)
!10716 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9967, file: !9967, line: 850, type: !10456, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10717)
!10717 = !{!10718, !10719, !10720, !10721}
!10718 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10716, file: !9967, line: 850, type: !1522)
!10719 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10716, file: !9967, line: 850, type: !121)
!10720 = !DILocalVariable(name: "Parity", arg: 3, scope: !10716, file: !9967, line: 850, type: !121)
!10721 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10716, file: !9967, line: 851, type: !121)
!10722 = !DILocation(line: 0, scope: !10716)
!10723 = !DILocation(line: 853, column: 3, scope: !10716)
!10724 = !DILocation(line: 854, column: 3, scope: !10716)
!10725 = !DILocation(line: 855, column: 1, scope: !10716)
!10726 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9967, file: !9967, line: 1337, type: !9998, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10727)
!10727 = !{!10728}
!10728 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10726, file: !9967, line: 1337, type: !1522)
!10729 = !DILocation(line: 0, scope: !10726)
!10730 = !DILocation(line: 1339, column: 3, scope: !10726)
!10731 = !DILocation(line: 1340, column: 1, scope: !10726)
!10732 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1605, file: !1605, line: 316, type: !10733, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10735)
!10733 = !DISubroutineType(types: !10734)
!10734 = !{!103, !1666, !1608}
!10735 = !{!10736, !10737, !10738}
!10736 = !DILocalVariable(name: "config", arg: 1, scope: !10732, file: !1605, line: 317, type: !1666)
!10737 = !DILocalVariable(name: "state", arg: 2, scope: !10732, file: !1605, line: 318, type: !1608)
!10738 = !DILocalVariable(name: "reg", scope: !10732, file: !1605, line: 320, type: !22)
!10739 = !DILocation(line: 0, scope: !10732)
!10740 = !DILocation(line: 329, column: 39, scope: !10732)
!10741 = !DILocation(line: 329, column: 52, scope: !10732)
!10742 = !DILocation(line: 329, column: 9, scope: !10732)
!10743 = !DILocation(line: 329, column: 2, scope: !10732)
!10744 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !10659, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1407, retainedNodes: !10745)
!10745 = !{!10746}
!10746 = !DILocalVariable(name: "dev", arg: 1, scope: !10744, file: !141, line: 730, type: !1451)
!10747 = !DILocation(line: 0, scope: !10744)
!10748 = !DILocation(line: 732, column: 9, scope: !10744)
!10749 = !DILocation(line: 732, column: 2, scope: !10744)
!10750 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1747, file: !1747, line: 270, type: !1753, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10751)
!10751 = !{!10752}
!10752 = !DILocalVariable(name: "dev", arg: 1, scope: !10750, file: !1747, line: 270, type: !1755)
!10753 = !DILocation(line: 0, scope: !10750)
!10754 = !DILocation(line: 274, column: 2, scope: !10750)
!10755 = !DILocation(line: 275, column: 12, scope: !10750)
!10756 = !DILocation(line: 276, column: 15, scope: !10750)
!10757 = !DILocation(line: 277, column: 16, scope: !10750)
!10758 = !DILocation(line: 278, column: 15, scope: !10750)
!10759 = !DILocation(line: 279, column: 16, scope: !10750)
!10760 = !DILocation(line: 282, column: 2, scope: !10750)
!10761 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5953, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10762)
!10762 = !{!10763, !10764}
!10763 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10761, file: !515, line: 1814, type: !751)
!10764 = !DILocalVariable(name: "priority", arg: 2, scope: !10761, file: !515, line: 1814, type: !121)
!10765 = !DILocation(line: 0, scope: !10761)
!10766 = !DILocation(line: 1822, column: 46, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10768, file: !515, line: 1821, column: 3)
!10768 = distinct !DILexicalBlock(scope: !10761, file: !515, line: 1816, column: 7)
!10769 = !DILocation(line: 1824, column: 1, scope: !10761)
!10770 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1747, file: !1747, line: 118, type: !5856, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10771)
!10771 = !{!10772, !10773}
!10772 = !DILocalVariable(name: "arg", arg: 1, scope: !10770, file: !1747, line: 118, type: !102)
!10773 = !DILocalVariable(name: "dticks", scope: !10770, file: !1747, line: 121, type: !121)
!10774 = !DILocation(line: 0, scope: !10770)
!10775 = !DILocation(line: 124, column: 2, scope: !10770)
!10776 = !DILocation(line: 129, column: 17, scope: !10770)
!10777 = !DILocation(line: 129, column: 14, scope: !10770)
!10778 = !DILocation(line: 130, column: 15, scope: !10770)
!10779 = !DILocation(line: 145, column: 27, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10781, file: !1747, line: 132, column: 16)
!10781 = distinct !DILexicalBlock(scope: !10770, file: !1747, line: 132, column: 6)
!10782 = !DILocation(line: 145, column: 25, scope: !10780)
!10783 = !DILocation(line: 145, column: 45, scope: !10780)
!10784 = !DILocation(line: 146, column: 30, scope: !10780)
!10785 = !DILocation(line: 146, column: 20, scope: !10780)
!10786 = !DILocation(line: 147, column: 3, scope: !10780)
!10787 = !DILocation(line: 151, column: 2, scope: !10770)
!10788 = !DILocation(line: 152, column: 1, scope: !10770)
!10789 = distinct !DISubprogram(name: "elapsed", scope: !1747, file: !1747, line: 85, type: !6000, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10790)
!10790 = !{!10791, !10792, !10793}
!10791 = !DILocalVariable(name: "val1", scope: !10789, file: !1747, line: 87, type: !121)
!10792 = !DILocalVariable(name: "ctrl", scope: !10789, file: !1747, line: 88, type: !121)
!10793 = !DILocalVariable(name: "val2", scope: !10789, file: !1747, line: 89, type: !121)
!10794 = !DILocation(line: 87, column: 27, scope: !10789)
!10795 = !DILocation(line: 0, scope: !10789)
!10796 = !DILocation(line: 88, column: 27, scope: !10789)
!10797 = !DILocation(line: 89, column: 27, scope: !10789)
!10798 = !DILocation(line: 105, column: 12, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10789, file: !1747, line: 105, column: 6)
!10800 = !DILocation(line: 106, column: 6, scope: !10799)
!10801 = !DILocation(line: 107, column: 16, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10799, file: !1747, line: 106, column: 24)
!10803 = !DILocation(line: 111, column: 18, scope: !10802)
!10804 = !DILocation(line: 112, column: 2, scope: !10802)
!10805 = !DILocation(line: 114, column: 20, scope: !10789)
!10806 = !DILocation(line: 114, column: 30, scope: !10789)
!10807 = !DILocation(line: 114, column: 28, scope: !10789)
!10808 = !DILocation(line: 114, column: 2, scope: !10789)
!10809 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1747, file: !1747, line: 154, type: !10810, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10812)
!10810 = !DISubroutineType(types: !10811)
!10811 = !{null, !725, !157}
!10812 = !{!10813, !10814, !10815, !10816, !10817, !10818, !10819, !10824, !10825}
!10813 = !DILocalVariable(name: "ticks", arg: 1, scope: !10809, file: !1747, line: 154, type: !725)
!10814 = !DILocalVariable(name: "idle", arg: 2, scope: !10809, file: !1747, line: 154, type: !157)
!10815 = !DILocalVariable(name: "delay", scope: !10809, file: !1747, line: 169, type: !121)
!10816 = !DILocalVariable(name: "val1", scope: !10809, file: !1747, line: 170, type: !121)
!10817 = !DILocalVariable(name: "val2", scope: !10809, file: !1747, line: 170, type: !121)
!10818 = !DILocalVariable(name: "last_load_", scope: !10809, file: !1747, line: 171, type: !121)
!10819 = !DILocalVariable(name: "key", scope: !10809, file: !1747, line: 176, type: !10820)
!10820 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !10821)
!10821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !10822)
!10822 = !{!10823}
!10823 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10821, file: !316, line: 33, baseType: !103, size: 32)
!10824 = !DILocalVariable(name: "pending", scope: !10809, file: !1747, line: 178, type: !121)
!10825 = !DILocalVariable(name: "unannounced", scope: !10809, file: !1747, line: 185, type: !121)
!10826 = !DILocation(line: 0, scope: !10809)
!10827 = !DILocation(line: 162, column: 49, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10809, file: !1747, line: 162, column: 6)
!10829 = !DILocation(line: 163, column: 17, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10828, file: !1747, line: 162, column: 78)
!10831 = !DILocation(line: 164, column: 13, scope: !10830)
!10832 = !DILocation(line: 165, column: 3, scope: !10830)
!10833 = !DILocation(line: 171, column: 24, scope: !10809)
!10834 = !DILocation(line: 173, column: 10, scope: !10809)
!10835 = !DILocation(line: 174, column: 10, scope: !10809)
!10836 = !DILocalVariable(name: "l", arg: 1, scope: !10837, file: !316, line: 136, type: !10840)
!10837 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !10838, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10841)
!10838 = !DISubroutineType(types: !10839)
!10839 = !{!10820, !10840}
!10840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!10841 = !{!10836, !10842}
!10842 = !DILocalVariable(name: "k", scope: !10837, file: !316, line: 139, type: !10820)
!10843 = !DILocation(line: 0, scope: !10837, inlinedAt: !10844)
!10844 = distinct !DILocation(line: 176, column: 25, scope: !10809)
!10845 = !DILocation(line: 55, column: 2, scope: !10846, inlinedAt: !10850)
!10846 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5704, file: !5704, line: 42, type: !5705, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10847)
!10847 = !{!10848, !10849}
!10848 = !DILocalVariable(name: "key", scope: !10846, file: !5704, line: 44, type: !32)
!10849 = !DILocalVariable(name: "tmp", scope: !10846, file: !5704, line: 53, type: !32)
!10850 = distinct !DILocation(line: 145, column: 10, scope: !10837, inlinedAt: !10844)
!10851 = !{i64 1921091}
!10852 = !DILocation(line: 0, scope: !10846, inlinedAt: !10850)
!10853 = !DILocation(line: 178, column: 21, scope: !10809)
!10854 = !DILocation(line: 180, column: 18, scope: !10809)
!10855 = !DILocation(line: 182, column: 14, scope: !10809)
!10856 = !DILocation(line: 183, column: 15, scope: !10809)
!10857 = !DILocation(line: 185, column: 39, scope: !10809)
!10858 = !DILocation(line: 185, column: 37, scope: !10809)
!10859 = !DILocation(line: 187, column: 27, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10809, file: !1747, line: 187, column: 6)
!10861 = !DILocation(line: 187, column: 6, scope: !10809)
!10862 = !DILocation(line: 202, column: 27, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10860, file: !1747, line: 195, column: 9)
!10864 = !DILocation(line: 202, column: 48, scope: !10863)
!10865 = !DILocation(line: 203, column: 9, scope: !10863)
!10866 = !DILocation(line: 204, column: 11, scope: !10863)
!10867 = !DILocation(line: 205, column: 13, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10863, file: !1747, line: 205, column: 7)
!10869 = !DILocation(line: 205, column: 7, scope: !10863)
!10870 = !DILocation(line: 0, scope: !10860)
!10871 = !DILocation(line: 212, column: 18, scope: !10809)
!10872 = !DILocation(line: 214, column: 28, scope: !10809)
!10873 = !DILocation(line: 214, column: 16, scope: !10809)
!10874 = !DILocation(line: 215, column: 15, scope: !10809)
!10875 = !DILocation(line: 227, column: 11, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10809, file: !1747, line: 227, column: 6)
!10877 = !DILocation(line: 227, column: 6, scope: !10809)
!10878 = !DILocation(line: 228, column: 15, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10876, file: !1747, line: 227, column: 19)
!10880 = !DILocation(line: 228, column: 38, scope: !10879)
!10881 = !DILocation(line: 228, column: 24, scope: !10879)
!10882 = !DILocation(line: 229, column: 2, scope: !10879)
!10883 = !DILocation(line: 230, column: 24, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10876, file: !1747, line: 229, column: 9)
!10885 = !DILocation(line: 230, column: 15, scope: !10884)
!10886 = !DILocation(line: 0, scope: !10876)
!10887 = !DILocalVariable(name: "key", arg: 2, scope: !10888, file: !316, line: 190, type: !10820)
!10888 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !10889, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10891)
!10889 = !DISubroutineType(types: !10890)
!10890 = !{null, !10840, !10820}
!10891 = !{!10892, !10887}
!10892 = !DILocalVariable(name: "l", arg: 1, scope: !10888, file: !316, line: 189, type: !10840)
!10893 = !DILocation(line: 0, scope: !10888, inlinedAt: !10894)
!10894 = distinct !DILocation(line: 232, column: 2, scope: !10809)
!10895 = !DILocalVariable(name: "key", arg: 1, scope: !10896, file: !5704, line: 84, type: !32)
!10896 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5704, file: !5704, line: 84, type: !5715, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10897)
!10897 = !{!10895}
!10898 = !DILocation(line: 0, scope: !10896, inlinedAt: !10899)
!10899 = distinct !DILocation(line: 215, column: 2, scope: !10888, inlinedAt: !10894)
!10900 = !DILocation(line: 95, column: 2, scope: !10896, inlinedAt: !10899)
!10901 = !{i64 1921908}
!10902 = !DILocation(line: 234, column: 1, scope: !10809)
!10903 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1747, file: !1747, line: 236, type: !6000, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10904)
!10904 = !{!10905, !10906}
!10905 = !DILocalVariable(name: "key", scope: !10903, file: !1747, line: 242, type: !10820)
!10906 = !DILocalVariable(name: "cyc", scope: !10903, file: !1747, line: 243, type: !121)
!10907 = !DILocation(line: 0, scope: !10837, inlinedAt: !10908)
!10908 = distinct !DILocation(line: 242, column: 25, scope: !10903)
!10909 = !DILocation(line: 55, column: 2, scope: !10846, inlinedAt: !10910)
!10910 = distinct !DILocation(line: 145, column: 10, scope: !10837, inlinedAt: !10908)
!10911 = !DILocation(line: 0, scope: !10846, inlinedAt: !10910)
!10912 = !DILocation(line: 0, scope: !10903)
!10913 = !DILocation(line: 243, column: 17, scope: !10903)
!10914 = !DILocation(line: 243, column: 29, scope: !10903)
!10915 = !DILocation(line: 243, column: 27, scope: !10903)
!10916 = !DILocation(line: 243, column: 43, scope: !10903)
!10917 = !DILocation(line: 243, column: 41, scope: !10903)
!10918 = !DILocation(line: 0, scope: !10888, inlinedAt: !10919)
!10919 = distinct !DILocation(line: 245, column: 2, scope: !10903)
!10920 = !DILocation(line: 0, scope: !10896, inlinedAt: !10921)
!10921 = distinct !DILocation(line: 215, column: 2, scope: !10888, inlinedAt: !10919)
!10922 = !DILocation(line: 95, column: 2, scope: !10896, inlinedAt: !10921)
!10923 = !DILocation(line: 246, column: 13, scope: !10903)
!10924 = !DILocation(line: 246, column: 2, scope: !10903)
!10925 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1747, file: !1747, line: 249, type: !6000, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10926)
!10926 = !{!10927, !10928}
!10927 = !DILocalVariable(name: "key", scope: !10925, file: !1747, line: 251, type: !10820)
!10928 = !DILocalVariable(name: "ret", scope: !10925, file: !1747, line: 252, type: !121)
!10929 = !DILocation(line: 0, scope: !10837, inlinedAt: !10930)
!10930 = distinct !DILocation(line: 251, column: 25, scope: !10925)
!10931 = !DILocation(line: 55, column: 2, scope: !10846, inlinedAt: !10932)
!10932 = distinct !DILocation(line: 145, column: 10, scope: !10837, inlinedAt: !10930)
!10933 = !DILocation(line: 0, scope: !10846, inlinedAt: !10932)
!10934 = !DILocation(line: 0, scope: !10925)
!10935 = !DILocation(line: 252, column: 17, scope: !10925)
!10936 = !DILocation(line: 252, column: 29, scope: !10925)
!10937 = !DILocation(line: 252, column: 27, scope: !10925)
!10938 = !DILocation(line: 0, scope: !10888, inlinedAt: !10939)
!10939 = distinct !DILocation(line: 254, column: 2, scope: !10925)
!10940 = !DILocation(line: 0, scope: !10896, inlinedAt: !10941)
!10941 = distinct !DILocation(line: 215, column: 2, scope: !10888, inlinedAt: !10939)
!10942 = !DILocation(line: 95, column: 2, scope: !10896, inlinedAt: !10941)
!10943 = !DILocation(line: 255, column: 2, scope: !10925)
!10944 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1747, file: !1747, line: 258, type: !3157, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !317)
!10945 = !DILocation(line: 260, column: 6, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10944, file: !1747, line: 260, column: 6)
!10947 = !DILocation(line: 260, column: 16, scope: !10946)
!10948 = !DILocation(line: 260, column: 6, scope: !10944)
!10949 = !DILocation(line: 261, column: 17, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10946, file: !1747, line: 260, column: 34)
!10951 = !DILocation(line: 262, column: 2, scope: !10950)
!10952 = !DILocation(line: 263, column: 1, scope: !10944)
!10953 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1747, file: !1747, line: 265, type: !3157, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !317)
!10954 = !DILocation(line: 267, column: 16, scope: !10953)
!10955 = !DILocation(line: 268, column: 1, scope: !10953)
!10956 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10957, file: !10957, line: 9, type: !10958, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2921, retainedNodes: !10981)
!10957 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10958 = !DISubroutineType(types: !10959)
!10959 = !{!103, !10960, !154, !10980}
!10960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10961, size: 32)
!10961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10962)
!10962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1605, line: 60, size: 64, elements: !10963)
!10963 = !{!10964, !10979}
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10962, file: !1605, line: 69, baseType: !10965, size: 32)
!10965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10966, size: 32)
!10966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10967)
!10967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1605, line: 50, size: 64, elements: !10968)
!10968 = !{!10969, !10977, !10978}
!10969 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10967, file: !1605, line: 52, baseType: !10970, size: 32)
!10970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10971, size: 32)
!10971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10972)
!10972 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1616, line: 37, baseType: !10973)
!10973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1616, line: 32, size: 64, elements: !10974)
!10974 = !{!10975, !10976}
!10975 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10973, file: !1616, line: 34, baseType: !121, size: 32)
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10973, file: !1616, line: 36, baseType: !121, size: 32, offset: 32)
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10967, file: !1605, line: 54, baseType: !154, size: 8, offset: 32)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10967, file: !1605, line: 56, baseType: !154, size: 8, offset: 40)
!10979 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10962, file: !1605, line: 71, baseType: !154, size: 8, offset: 32)
!10980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10965, size: 32)
!10981 = !{!10982, !10983, !10984}
!10982 = !DILocalVariable(name: "config", arg: 1, scope: !10956, file: !10957, line: 9, type: !10960)
!10983 = !DILocalVariable(name: "id", arg: 2, scope: !10956, file: !10957, line: 9, type: !154)
!10984 = !DILocalVariable(name: "state", arg: 3, scope: !10956, file: !10957, line: 10, type: !10980)
!10985 = !DILocation(line: 0, scope: !10956)
!10986 = !DILocation(line: 12, column: 20, scope: !10956)
!10987 = !DILocation(line: 13, column: 27, scope: !10956)
!10988 = !DILocation(line: 13, column: 42, scope: !10956)
!10989 = !DILocation(line: 13, column: 19, scope: !10956)
!10990 = !DILocation(line: 13, column: 16, scope: !10956)
!10991 = !DILocation(line: 13, column: 2, scope: !10956)
!10992 = distinct !{!10992, !10991, !10993}
!10993 = !DILocation(line: 19, column: 2, scope: !10956)
!10994 = !DILocation(line: 14, column: 23, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10996, file: !10957, line: 14, column: 7)
!10996 = distinct !DILexicalBlock(scope: !10956, file: !10957, line: 13, column: 54)
!10997 = !DILocation(line: 14, column: 10, scope: !10995)
!10998 = !DILocation(line: 18, column: 11, scope: !10996)
!10999 = !DILocation(line: 14, column: 7, scope: !10996)
!11000 = !DILocation(line: 22, column: 1, scope: !10956)
!11001 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1864, file: !1864, line: 193, type: !11002, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !11011)
!11002 = !DISubroutineType(types: !11003)
!11003 = !{!103, !11004, !154, !22}
!11004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11005, size: 32)
!11005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11006)
!11006 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1616, line: 37, baseType: !11007)
!11007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1616, line: 32, size: 64, elements: !11008)
!11008 = !{!11009, !11010}
!11009 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11007, file: !1616, line: 34, baseType: !121, size: 32)
!11010 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11007, file: !1616, line: 36, baseType: !121, size: 32, offset: 32)
!11011 = !{!11012, !11013, !11014, !11015, !11016, !11017, !11018, !11019, !11021}
!11012 = !DILocalVariable(name: "pins", arg: 1, scope: !11001, file: !1864, line: 193, type: !11004)
!11013 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11001, file: !1864, line: 193, type: !154)
!11014 = !DILocalVariable(name: "reg", arg: 3, scope: !11001, file: !1864, line: 194, type: !22)
!11015 = !DILocalVariable(name: "pin", scope: !11001, file: !1864, line: 196, type: !121)
!11016 = !DILocalVariable(name: "mux", scope: !11001, file: !1864, line: 196, type: !121)
!11017 = !DILocalVariable(name: "pin_cgf", scope: !11001, file: !1864, line: 197, type: !121)
!11018 = !DILocalVariable(name: "ret", scope: !11001, file: !1864, line: 198, type: !103)
!11019 = !DILocalVariable(name: "i", scope: !11020, file: !1864, line: 209, type: !154)
!11020 = distinct !DILexicalBlock(scope: !11001, file: !1864, line: 209, column: 2)
!11021 = !DILocalVariable(name: "gpio_out", scope: !11022, file: !1864, line: 239, type: !121)
!11022 = distinct !DILexicalBlock(scope: !11023, file: !1864, line: 238, column: 55)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !1864, line: 238, column: 14)
!11024 = distinct !DILexicalBlock(scope: !11025, file: !1864, line: 236, column: 14)
!11025 = distinct !DILexicalBlock(scope: !11026, file: !1864, line: 234, column: 7)
!11026 = distinct !DILexicalBlock(scope: !11027, file: !1864, line: 209, column: 41)
!11027 = distinct !DILexicalBlock(scope: !11020, file: !1864, line: 209, column: 2)
!11028 = !DILocation(line: 0, scope: !11001)
!11029 = !DILocation(line: 0, scope: !11020)
!11030 = !DILocation(line: 209, column: 25, scope: !11027)
!11031 = !DILocation(line: 209, column: 2, scope: !11020)
!11032 = distinct !{!11032, !11031, !11033}
!11033 = !DILocation(line: 259, column: 2, scope: !11020)
!11034 = !DILocation(line: 210, column: 17, scope: !11026)
!11035 = !DILocation(line: 234, column: 7, scope: !11025)
!11036 = !DILocation(line: 234, column: 33, scope: !11025)
!11037 = !DILocation(line: 234, column: 7, scope: !11026)
!11038 = !DILocation(line: 235, column: 22, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11025, file: !1864, line: 234, column: 49)
!11040 = !DILocation(line: 235, column: 29, scope: !11039)
!11041 = !DILocation(line: 236, column: 3, scope: !11039)
!11042 = !DILocation(line: 236, column: 14, scope: !11025)
!11043 = !DILocation(line: 239, column: 32, scope: !11022)
!11044 = !DILocation(line: 0, scope: !11022)
!11045 = !DILocation(line: 241, column: 8, scope: !11022)
!11046 = !DILocation(line: 246, column: 3, scope: !11022)
!11047 = !DILocation(line: 252, column: 9, scope: !11026)
!11048 = !DILocation(line: 255, column: 9, scope: !11026)
!11049 = !DILocation(line: 256, column: 11, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11026, file: !1864, line: 256, column: 7)
!11051 = !DILocation(line: 209, column: 37, scope: !11027)
!11052 = !DILocation(line: 256, column: 7, scope: !11026)
!11053 = !DILocation(line: 262, column: 1, scope: !11001)
!11054 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1864, file: !1864, line: 176, type: !11055, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !11057)
!11055 = !DISubroutineType(types: !11056)
!11056 = !{!103, !121, !121, !121}
!11057 = !{!11058, !11059, !11060, !11061}
!11058 = !DILocalVariable(name: "pin", arg: 1, scope: !11054, file: !1864, line: 176, type: !121)
!11059 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11054, file: !1864, line: 176, type: !121)
!11060 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11054, file: !1864, line: 176, type: !121)
!11061 = !DILocalVariable(name: "port_device", scope: !11054, file: !1864, line: 178, type: !1794)
!11062 = !DILocation(line: 0, scope: !11054)
!11063 = !DILocation(line: 180, column: 22, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11054, file: !1864, line: 180, column: 6)
!11065 = !DILocation(line: 180, column: 6, scope: !11054)
!11066 = !DILocation(line: 180, column: 6, scope: !11064)
!11067 = !DILocation(line: 184, column: 16, scope: !11054)
!11068 = !DILocation(line: 186, column: 19, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11054, file: !1864, line: 186, column: 6)
!11070 = !DILocation(line: 186, column: 28, scope: !11069)
!11071 = !DILocation(line: 186, column: 33, scope: !11069)
!11072 = !DILocation(line: 186, column: 6, scope: !11054)
!11073 = !DILocation(line: 190, column: 43, scope: !11054)
!11074 = !DILocation(line: 190, column: 9, scope: !11054)
!11075 = !DILocation(line: 190, column: 2, scope: !11054)
!11076 = !DILocation(line: 191, column: 1, scope: !11054)
!11077 = distinct !DISubprogram(name: "device_is_ready", scope: !8113, file: !8113, line: 47, type: !11078, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !11080)
!11078 = !DISubroutineType(types: !11079)
!11079 = !{!157, !1794}
!11080 = !{!11081}
!11081 = !DILocalVariable(name: "dev", arg: 1, scope: !11077, file: !8113, line: 47, type: !1794)
!11082 = !DILocation(line: 0, scope: !11077)
!11083 = !DILocation(line: 55, column: 2, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11077, file: !8113, line: 55, column: 2)
!11085 = !{i64 2149155100}
!11086 = !DILocation(line: 56, column: 9, scope: !11077)
!11087 = !DILocation(line: 56, column: 2, scope: !11077)
!11088 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !11078, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !11089)
!11089 = !{!11090}
!11090 = !DILocalVariable(name: "dev", arg: 1, scope: !11088, file: !141, line: 730, type: !1794)
!11091 = !DILocation(line: 0, scope: !11088)
!11092 = !DILocation(line: 732, column: 9, scope: !11088)
!11093 = !DILocation(line: 732, column: 2, scope: !11088)
!11094 = distinct !DISubprogram(name: "SystemInit", scope: !1914, file: !1914, line: 167, type: !3157, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1872, retainedNodes: !317)
!11095 = !DILocation(line: 182, column: 1, scope: !11094)
!11096 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1914, file: !1914, line: 220, type: !3157, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1872, retainedNodes: !11097)
!11097 = !{!11098, !11099, !11100, !11101, !11102}
!11098 = !DILocalVariable(name: "tmp", scope: !11096, file: !1914, line: 222, type: !121)
!11099 = !DILocalVariable(name: "pllvco", scope: !11096, file: !1914, line: 222, type: !121)
!11100 = !DILocalVariable(name: "pllp", scope: !11096, file: !1914, line: 222, type: !121)
!11101 = !DILocalVariable(name: "pllsource", scope: !11096, file: !1914, line: 222, type: !121)
!11102 = !DILocalVariable(name: "pllm", scope: !11096, file: !1914, line: 222, type: !121)
!11103 = !DILocation(line: 0, scope: !11096)
!11104 = !DILocation(line: 225, column: 14, scope: !11096)
!11105 = !DILocation(line: 225, column: 19, scope: !11096)
!11106 = !DILocation(line: 227, column: 3, scope: !11096)
!11107 = !DILocation(line: 234, column: 7, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11096, file: !1914, line: 228, column: 3)
!11109 = !DILocation(line: 240, column: 25, scope: !11108)
!11110 = !DILocation(line: 241, column: 19, scope: !11108)
!11111 = !DILocation(line: 241, column: 27, scope: !11108)
!11112 = !DILocation(line: 243, column: 21, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11108, file: !1914, line: 243, column: 11)
!11114 = !DILocation(line: 0, scope: !11113)
!11115 = !DILocation(line: 254, column: 22, scope: !11108)
!11116 = !DILocation(line: 254, column: 62, scope: !11108)
!11117 = !DILocation(line: 255, column: 31, scope: !11108)
!11118 = !DILocation(line: 256, column: 7, scope: !11108)
!11119 = !DILocation(line: 0, scope: !11108)
!11120 = !DILocation(line: 263, column: 30, scope: !11096)
!11121 = !DILocation(line: 263, column: 52, scope: !11096)
!11122 = !DILocation(line: 263, column: 9, scope: !11096)
!11123 = !DILocation(line: 265, column: 19, scope: !11096)
!11124 = !DILocation(line: 266, column: 1, scope: !11096)
!11125 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11126, file: !11126, line: 200, type: !11127, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !317)
!11126 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11127 = !DISubroutineType(types: !11128)
!11128 = !{!11129}
!11129 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2927, line: 44, baseType: !2926)
!11130 = !DILocation(line: 202, column: 3, scope: !11125)
!11131 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11126, file: !11126, line: 219, type: !11132, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !11156)
!11132 = !DISubroutineType(types: !11133)
!11133 = !{!11129, !11134}
!11134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11135, size: 32)
!11135 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11136, line: 70, baseType: !11137)
!11136 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11136, line: 49, size: 384, elements: !11138)
!11138 = !{!11139, !11140, !11141, !11142, !11143, !11144, !11145}
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11137, file: !11136, line: 51, baseType: !121, size: 32)
!11140 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11137, file: !11136, line: 54, baseType: !121, size: 32, offset: 32)
!11141 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11137, file: !11136, line: 57, baseType: !121, size: 32, offset: 64)
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11137, file: !11136, line: 60, baseType: !121, size: 32, offset: 96)
!11143 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11137, file: !11136, line: 63, baseType: !121, size: 32, offset: 128)
!11144 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11137, file: !11136, line: 66, baseType: !121, size: 32, offset: 160)
!11145 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11137, file: !11136, line: 69, baseType: !11146, size: 192, offset: 192)
!11146 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11147, line: 73, baseType: !11148)
!11147 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11147, line: 45, size: 192, elements: !11149)
!11149 = !{!11150, !11151, !11152, !11153, !11154, !11155}
!11150 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11148, file: !11147, line: 47, baseType: !121, size: 32)
!11151 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11148, file: !11147, line: 50, baseType: !121, size: 32, offset: 32)
!11152 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11148, file: !11147, line: 53, baseType: !121, size: 32, offset: 64)
!11153 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11148, file: !11147, line: 56, baseType: !121, size: 32, offset: 96)
!11154 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11148, file: !11147, line: 60, baseType: !121, size: 32, offset: 128)
!11155 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11148, file: !11147, line: 63, baseType: !121, size: 32, offset: 160)
!11156 = !{!11157, !11158, !11159, !11160, !11164}
!11157 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11131, file: !11126, line: 219, type: !11134)
!11158 = !DILocalVariable(name: "tickstart", scope: !11131, file: !11126, line: 221, type: !121)
!11159 = !DILocalVariable(name: "pll_config", scope: !11131, file: !11126, line: 221, type: !121)
!11160 = !DILocalVariable(name: "pwrclkchanged", scope: !11161, file: !11126, line: 391, type: !11163)
!11161 = distinct !DILexicalBlock(scope: !11162, file: !11126, line: 390, column: 3)
!11162 = distinct !DILexicalBlock(scope: !11131, file: !11126, line: 389, column: 6)
!11163 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !790, line: 188, baseType: !2933)
!11164 = !DILocalVariable(name: "tmpreg", scope: !11165, file: !11126, line: 400, type: !120)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !11126, line: 400, column: 7)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !11126, line: 399, column: 5)
!11167 = distinct !DILexicalBlock(scope: !11161, file: !11126, line: 398, column: 8)
!11168 = !DILocation(line: 0, scope: !11131)
!11169 = !DILocation(line: 224, column: 24, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11131, file: !11126, line: 224, column: 6)
!11171 = !DILocation(line: 224, column: 6, scope: !11131)
!11172 = !DILocation(line: 232, column: 27, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11131, file: !11126, line: 232, column: 6)
!11174 = !DILocation(line: 232, column: 43, scope: !11173)
!11175 = !DILocation(line: 232, column: 69, scope: !11173)
!11176 = !DILocation(line: 232, column: 6, scope: !11131)
!11177 = !DILocation(line: 237, column: 9, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !11126, line: 237, column: 8)
!11179 = distinct !DILexicalBlock(scope: !11173, file: !11126, line: 233, column: 3)
!11180 = !DILocation(line: 237, column: 39, scope: !11178)
!11181 = !DILocation(line: 237, column: 60, scope: !11178)
!11182 = !DILocation(line: 238, column: 9, scope: !11178)
!11183 = !DILocation(line: 238, column: 39, scope: !11178)
!11184 = !DILocation(line: 238, column: 60, scope: !11178)
!11185 = !DILocation(line: 238, column: 70, scope: !11178)
!11186 = !DILocation(line: 238, column: 78, scope: !11178)
!11187 = !DILocation(line: 238, column: 100, scope: !11178)
!11188 = !DILocation(line: 237, column: 8, scope: !11179)
!11189 = !DILocation(line: 240, column: 11, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !11126, line: 240, column: 10)
!11191 = distinct !DILexicalBlock(scope: !11178, file: !11126, line: 239, column: 5)
!11192 = !DILocation(line: 240, column: 57, scope: !11190)
!11193 = !DILocation(line: 240, column: 80, scope: !11190)
!11194 = !DILocation(line: 240, column: 89, scope: !11190)
!11195 = !DILocation(line: 240, column: 10, scope: !11191)
!11196 = !DILocation(line: 248, column: 7, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11198, file: !11126, line: 248, column: 7)
!11198 = distinct !DILexicalBlock(scope: !11199, file: !11126, line: 248, column: 7)
!11199 = distinct !DILexicalBlock(scope: !11178, file: !11126, line: 246, column: 5)
!11200 = !DILocation(line: 248, column: 7, scope: !11198)
!11201 = !DILocation(line: 248, column: 7, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11197, file: !11126, line: 248, column: 7)
!11203 = !DILocation(line: 248, column: 7, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11205, file: !11126, line: 248, column: 7)
!11205 = distinct !DILexicalBlock(scope: !11197, file: !11126, line: 248, column: 7)
!11206 = !DILocation(line: 248, column: 7, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11205, file: !11126, line: 248, column: 7)
!11208 = !DILocation(line: 0, scope: !11197)
!11209 = !DILocation(line: 251, column: 30, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11199, file: !11126, line: 251, column: 10)
!11211 = !DILocation(line: 251, column: 40, scope: !11210)
!11212 = !DILocation(line: 0, scope: !11210)
!11213 = !DILocation(line: 251, column: 10, scope: !11199)
!11214 = !DILocation(line: 257, column: 15, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11210, file: !11126, line: 252, column: 7)
!11216 = !DILocation(line: 257, column: 51, scope: !11215)
!11217 = !DILocation(line: 257, column: 9, scope: !11215)
!11218 = !DILocation(line: 259, column: 15, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !11126, line: 259, column: 14)
!11220 = distinct !DILexicalBlock(scope: !11215, file: !11126, line: 258, column: 9)
!11221 = !DILocation(line: 259, column: 29, scope: !11219)
!11222 = !DILocation(line: 259, column: 43, scope: !11219)
!11223 = !DILocation(line: 259, column: 14, scope: !11220)
!11224 = distinct !{!11224, !11217, !11225}
!11225 = !DILocation(line: 263, column: 9, scope: !11215)
!11226 = !DILocation(line: 271, column: 15, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11210, file: !11126, line: 266, column: 7)
!11228 = !DILocation(line: 271, column: 9, scope: !11227)
!11229 = !DILocation(line: 273, column: 15, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11231, file: !11126, line: 273, column: 14)
!11231 = distinct !DILexicalBlock(scope: !11227, file: !11126, line: 272, column: 9)
!11232 = !DILocation(line: 273, column: 29, scope: !11230)
!11233 = !DILocation(line: 273, column: 43, scope: !11230)
!11234 = !DILocation(line: 273, column: 14, scope: !11231)
!11235 = distinct !{!11235, !11228, !11236}
!11236 = !DILocation(line: 277, column: 9, scope: !11227)
!11237 = !DILocation(line: 282, column: 27, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11131, file: !11126, line: 282, column: 6)
!11239 = !DILocation(line: 282, column: 43, scope: !11238)
!11240 = !DILocation(line: 282, column: 69, scope: !11238)
!11241 = !DILocation(line: 282, column: 6, scope: !11131)
!11242 = !DILocation(line: 289, column: 9, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !11126, line: 289, column: 8)
!11244 = distinct !DILexicalBlock(scope: !11238, file: !11126, line: 283, column: 3)
!11245 = !DILocation(line: 289, column: 39, scope: !11243)
!11246 = !DILocation(line: 289, column: 60, scope: !11243)
!11247 = !DILocation(line: 290, column: 9, scope: !11243)
!11248 = !DILocation(line: 290, column: 39, scope: !11243)
!11249 = !DILocation(line: 290, column: 60, scope: !11243)
!11250 = !DILocation(line: 290, column: 70, scope: !11243)
!11251 = !DILocation(line: 290, column: 78, scope: !11243)
!11252 = !DILocation(line: 290, column: 100, scope: !11243)
!11253 = !DILocation(line: 289, column: 8, scope: !11244)
!11254 = !DILocation(line: 293, column: 11, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11256, file: !11126, line: 293, column: 10)
!11256 = distinct !DILexicalBlock(scope: !11243, file: !11126, line: 291, column: 5)
!11257 = !DILocation(line: 293, column: 57, scope: !11255)
!11258 = !DILocation(line: 293, column: 80, scope: !11255)
!11259 = !DILocation(line: 293, column: 89, scope: !11255)
!11260 = !DILocation(line: 293, column: 10, scope: !11256)
!11261 = !DILocation(line: 307, column: 30, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11263, file: !11126, line: 307, column: 10)
!11263 = distinct !DILexicalBlock(scope: !11243, file: !11126, line: 305, column: 5)
!11264 = !DILocation(line: 307, column: 39, scope: !11262)
!11265 = !DILocation(line: 307, column: 10, scope: !11263)
!11266 = !DILocation(line: 310, column: 9, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11262, file: !11126, line: 308, column: 7)
!11268 = !DILocation(line: 313, column: 21, scope: !11267)
!11269 = !DILocation(line: 316, column: 9, scope: !11267)
!11270 = !DILocation(line: 316, column: 15, scope: !11267)
!11271 = !DILocation(line: 316, column: 51, scope: !11267)
!11272 = !DILocation(line: 318, column: 15, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11274, file: !11126, line: 318, column: 14)
!11274 = distinct !DILexicalBlock(scope: !11267, file: !11126, line: 317, column: 9)
!11275 = !DILocation(line: 318, column: 29, scope: !11273)
!11276 = !DILocation(line: 318, column: 43, scope: !11273)
!11277 = !DILocation(line: 318, column: 14, scope: !11274)
!11278 = distinct !{!11278, !11269, !11279}
!11279 = !DILocation(line: 322, column: 9, scope: !11267)
!11280 = !DILocation(line: 330, column: 9, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11262, file: !11126, line: 328, column: 7)
!11282 = !DILocation(line: 333, column: 21, scope: !11281)
!11283 = !DILocation(line: 336, column: 9, scope: !11281)
!11284 = !DILocation(line: 336, column: 15, scope: !11281)
!11285 = !DILocation(line: 338, column: 15, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !11126, line: 338, column: 14)
!11287 = distinct !DILexicalBlock(scope: !11281, file: !11126, line: 337, column: 9)
!11288 = !DILocation(line: 338, column: 29, scope: !11286)
!11289 = !DILocation(line: 338, column: 43, scope: !11286)
!11290 = !DILocation(line: 338, column: 14, scope: !11287)
!11291 = distinct !{!11291, !11283, !11292}
!11292 = !DILocation(line: 342, column: 9, scope: !11281)
!11293 = !DILocation(line: 0, scope: !11243)
!11294 = !DILocation(line: 347, column: 27, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11131, file: !11126, line: 347, column: 6)
!11296 = !DILocation(line: 347, column: 43, scope: !11295)
!11297 = !DILocation(line: 347, column: 69, scope: !11295)
!11298 = !DILocation(line: 347, column: 6, scope: !11131)
!11299 = !DILocation(line: 353, column: 28, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !11126, line: 353, column: 8)
!11301 = distinct !DILexicalBlock(scope: !11295, file: !11126, line: 348, column: 3)
!11302 = !DILocation(line: 353, column: 37, scope: !11300)
!11303 = !DILocation(line: 353, column: 8, scope: !11301)
!11304 = !DILocation(line: 356, column: 7, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11300, file: !11126, line: 354, column: 5)
!11306 = !DILocation(line: 359, column: 19, scope: !11305)
!11307 = !DILocation(line: 362, column: 7, scope: !11305)
!11308 = !DILocation(line: 362, column: 13, scope: !11305)
!11309 = !DILocation(line: 362, column: 49, scope: !11305)
!11310 = !DILocation(line: 364, column: 13, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11312, file: !11126, line: 364, column: 12)
!11312 = distinct !DILexicalBlock(scope: !11305, file: !11126, line: 363, column: 7)
!11313 = !DILocation(line: 364, column: 27, scope: !11311)
!11314 = !DILocation(line: 364, column: 41, scope: !11311)
!11315 = !DILocation(line: 364, column: 12, scope: !11312)
!11316 = distinct !{!11316, !11307, !11317}
!11317 = !DILocation(line: 368, column: 7, scope: !11305)
!11318 = !DILocation(line: 373, column: 7, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11300, file: !11126, line: 371, column: 5)
!11320 = !DILocation(line: 376, column: 19, scope: !11319)
!11321 = !DILocation(line: 379, column: 7, scope: !11319)
!11322 = !DILocation(line: 379, column: 13, scope: !11319)
!11323 = !DILocation(line: 381, column: 13, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11325, file: !11126, line: 381, column: 12)
!11325 = distinct !DILexicalBlock(scope: !11319, file: !11126, line: 380, column: 7)
!11326 = !DILocation(line: 381, column: 27, scope: !11324)
!11327 = !DILocation(line: 381, column: 41, scope: !11324)
!11328 = !DILocation(line: 381, column: 12, scope: !11325)
!11329 = distinct !{!11329, !11321, !11330}
!11330 = !DILocation(line: 385, column: 7, scope: !11319)
!11331 = !DILocation(line: 389, column: 27, scope: !11162)
!11332 = !DILocation(line: 389, column: 43, scope: !11162)
!11333 = !DILocation(line: 389, column: 69, scope: !11162)
!11334 = !DILocation(line: 389, column: 6, scope: !11131)
!11335 = !DILocation(line: 0, scope: !11161)
!11336 = !DILocation(line: 398, column: 8, scope: !11167)
!11337 = !DILocation(line: 398, column: 8, scope: !11161)
!11338 = !DILocation(line: 400, column: 7, scope: !11165)
!11339 = !DILocation(line: 400, column: 7, scope: !11166)
!11340 = !DILocation(line: 402, column: 5, scope: !11166)
!11341 = !DILocation(line: 404, column: 8, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11161, file: !11126, line: 404, column: 8)
!11343 = !DILocation(line: 404, column: 8, scope: !11161)
!11344 = !DILocation(line: 407, column: 7, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11342, file: !11126, line: 405, column: 5)
!11346 = !DILocation(line: 410, column: 19, scope: !11345)
!11347 = !DILocation(line: 412, column: 7, scope: !11345)
!11348 = !DILocation(line: 412, column: 13, scope: !11345)
!11349 = !DILocation(line: 414, column: 13, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11351, file: !11126, line: 414, column: 12)
!11351 = distinct !DILexicalBlock(scope: !11345, file: !11126, line: 413, column: 7)
!11352 = !DILocation(line: 414, column: 27, scope: !11350)
!11353 = !DILocation(line: 414, column: 40, scope: !11350)
!11354 = !DILocation(line: 414, column: 12, scope: !11351)
!11355 = distinct !{!11355, !11347, !11356}
!11356 = !DILocation(line: 418, column: 7, scope: !11345)
!11357 = !DILocation(line: 422, column: 5, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11359, file: !11126, line: 422, column: 5)
!11359 = distinct !DILexicalBlock(scope: !11161, file: !11126, line: 422, column: 5)
!11360 = !DILocation(line: 422, column: 5, scope: !11359)
!11361 = !DILocation(line: 422, column: 5, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11358, file: !11126, line: 422, column: 5)
!11363 = !DILocation(line: 422, column: 5, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11365, file: !11126, line: 422, column: 5)
!11365 = distinct !DILexicalBlock(scope: !11358, file: !11126, line: 422, column: 5)
!11366 = !DILocation(line: 422, column: 5, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11365, file: !11126, line: 422, column: 5)
!11368 = !DILocation(line: 0, scope: !11358)
!11369 = !DILocation(line: 424, column: 28, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11161, file: !11126, line: 424, column: 8)
!11371 = !DILocation(line: 424, column: 38, scope: !11370)
!11372 = !DILocation(line: 0, scope: !11370)
!11373 = !DILocation(line: 424, column: 8, scope: !11161)
!11374 = !DILocation(line: 430, column: 13, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11370, file: !11126, line: 425, column: 5)
!11376 = !DILocation(line: 430, column: 49, scope: !11375)
!11377 = !DILocation(line: 430, column: 7, scope: !11375)
!11378 = !DILocation(line: 432, column: 13, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11380, file: !11126, line: 432, column: 12)
!11380 = distinct !DILexicalBlock(scope: !11375, file: !11126, line: 431, column: 7)
!11381 = !DILocation(line: 432, column: 27, scope: !11379)
!11382 = !DILocation(line: 432, column: 41, scope: !11379)
!11383 = !DILocation(line: 432, column: 12, scope: !11380)
!11384 = distinct !{!11384, !11377, !11385}
!11385 = !DILocation(line: 436, column: 7, scope: !11375)
!11386 = !DILocation(line: 444, column: 13, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11370, file: !11126, line: 439, column: 5)
!11388 = !DILocation(line: 444, column: 7, scope: !11387)
!11389 = !DILocation(line: 446, column: 13, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11391, file: !11126, line: 446, column: 12)
!11391 = distinct !DILexicalBlock(scope: !11387, file: !11126, line: 445, column: 7)
!11392 = !DILocation(line: 446, column: 27, scope: !11390)
!11393 = !DILocation(line: 446, column: 41, scope: !11390)
!11394 = !DILocation(line: 446, column: 12, scope: !11391)
!11395 = distinct !{!11395, !11388, !11396}
!11396 = !DILocation(line: 450, column: 7, scope: !11387)
!11397 = !DILocation(line: 454, column: 8, scope: !11161)
!11398 = !DILocation(line: 456, column: 7, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !11126, line: 455, column: 5)
!11400 = distinct !DILexicalBlock(scope: !11161, file: !11126, line: 454, column: 8)
!11401 = !DILocation(line: 457, column: 5, scope: !11399)
!11402 = !DILocation(line: 462, column: 31, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11131, file: !11126, line: 462, column: 7)
!11404 = !DILocation(line: 462, column: 41, scope: !11403)
!11405 = !DILocation(line: 462, column: 7, scope: !11131)
!11406 = !DILocation(line: 465, column: 8, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !11126, line: 465, column: 8)
!11408 = distinct !DILexicalBlock(scope: !11403, file: !11126, line: 463, column: 3)
!11409 = !DILocation(line: 465, column: 38, scope: !11407)
!11410 = !DILocation(line: 465, column: 8, scope: !11408)
!11411 = !DILocation(line: 467, column: 44, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11413, file: !11126, line: 467, column: 10)
!11413 = distinct !DILexicalBlock(scope: !11407, file: !11126, line: 466, column: 5)
!11414 = !DILocation(line: 0, scope: !11412)
!11415 = !DILocation(line: 467, column: 10, scope: !11413)
!11416 = !DILocation(line: 483, column: 15, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11412, file: !11126, line: 468, column: 7)
!11418 = !DILocation(line: 483, column: 9, scope: !11417)
!11419 = !DILocation(line: 485, column: 15, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11421, file: !11126, line: 485, column: 14)
!11421 = distinct !DILexicalBlock(scope: !11417, file: !11126, line: 484, column: 9)
!11422 = !DILocation(line: 485, column: 29, scope: !11420)
!11423 = !DILocation(line: 485, column: 43, scope: !11420)
!11424 = !DILocation(line: 485, column: 14, scope: !11421)
!11425 = distinct !{!11425, !11418, !11426}
!11426 = !DILocation(line: 489, column: 9, scope: !11417)
!11427 = !DILocation(line: 492, column: 9, scope: !11417)
!11428 = !DILocation(line: 498, column: 9, scope: !11417)
!11429 = !DILocation(line: 501, column: 21, scope: !11417)
!11430 = !DILocation(line: 504, column: 9, scope: !11417)
!11431 = !DILocation(line: 504, column: 15, scope: !11417)
!11432 = !DILocation(line: 504, column: 51, scope: !11417)
!11433 = !DILocation(line: 506, column: 15, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11435, file: !11126, line: 506, column: 14)
!11435 = distinct !DILexicalBlock(scope: !11417, file: !11126, line: 505, column: 9)
!11436 = !DILocation(line: 506, column: 29, scope: !11434)
!11437 = !DILocation(line: 506, column: 43, scope: !11434)
!11438 = !DILocation(line: 506, column: 14, scope: !11435)
!11439 = distinct !{!11439, !11430, !11440}
!11440 = !DILocation(line: 510, column: 9, scope: !11417)
!11441 = !DILocation(line: 521, column: 15, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11412, file: !11126, line: 513, column: 7)
!11443 = !DILocation(line: 521, column: 9, scope: !11442)
!11444 = !DILocation(line: 523, column: 15, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !11126, line: 523, column: 14)
!11446 = distinct !DILexicalBlock(scope: !11442, file: !11126, line: 522, column: 9)
!11447 = !DILocation(line: 523, column: 29, scope: !11445)
!11448 = !DILocation(line: 523, column: 43, scope: !11445)
!11449 = !DILocation(line: 523, column: 14, scope: !11446)
!11450 = distinct !{!11450, !11443, !11451}
!11451 = !DILocation(line: 527, column: 9, scope: !11442)
!11452 = !DILocation(line: 533, column: 44, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11454, file: !11126, line: 533, column: 10)
!11454 = distinct !DILexicalBlock(scope: !11407, file: !11126, line: 531, column: 5)
!11455 = !DILocation(line: 533, column: 10, scope: !11454)
!11456 = !DILocation(line: 540, column: 27, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11453, file: !11126, line: 538, column: 7)
!11458 = !DILocation(line: 551, column: 14, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11457, file: !11126, line: 550, column: 13)
!11460 = !DILocation(line: 551, column: 81, scope: !11459)
!11461 = !DILocation(line: 551, column: 55, scope: !11459)
!11462 = !DILocation(line: 551, column: 92, scope: !11459)
!11463 = !DILocation(line: 552, column: 14, scope: !11459)
!11464 = !DILocation(line: 552, column: 80, scope: !11459)
!11465 = !DILocation(line: 552, column: 53, scope: !11459)
!11466 = !DILocation(line: 552, column: 111, scope: !11459)
!11467 = !DILocation(line: 553, column: 14, scope: !11459)
!11468 = !DILocation(line: 553, column: 80, scope: !11459)
!11469 = !DILocation(line: 553, column: 86, scope: !11459)
!11470 = !DILocation(line: 553, column: 53, scope: !11459)
!11471 = !DILocation(line: 553, column: 111, scope: !11459)
!11472 = !DILocation(line: 554, column: 14, scope: !11459)
!11473 = !DILocation(line: 554, column: 82, scope: !11459)
!11474 = !DILocation(line: 554, column: 101, scope: !11459)
!11475 = !DILocation(line: 554, column: 53, scope: !11459)
!11476 = !DILocation(line: 554, column: 126, scope: !11459)
!11477 = !DILocation(line: 555, column: 14, scope: !11459)
!11478 = !DILocation(line: 555, column: 80, scope: !11459)
!11479 = !DILocation(line: 555, column: 85, scope: !11459)
!11480 = !DILocation(line: 555, column: 53, scope: !11459)
!11481 = !DILocation(line: 550, column: 13, scope: !11457)
!11482 = !DILocation(line: 563, column: 3, scope: !11131)
!11483 = !DILocation(line: 564, column: 1, scope: !11131)
!11484 = !DISubprogram(name: "HAL_GetTick", scope: !11485, file: !11485, line: 234, type: !6000, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11485 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11486 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11126, file: !11126, line: 591, type: !11487, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !11498)
!11487 = !DISubroutineType(types: !11488)
!11488 = !{!11129, !11489, !121}
!11489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11490, size: 32)
!11490 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11136, line: 92, baseType: !11491)
!11491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11136, line: 75, size: 160, elements: !11492)
!11492 = !{!11493, !11494, !11495, !11496, !11497}
!11493 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11491, file: !11136, line: 77, baseType: !121, size: 32)
!11494 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11491, file: !11136, line: 80, baseType: !121, size: 32, offset: 32)
!11495 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11491, file: !11136, line: 83, baseType: !121, size: 32, offset: 64)
!11496 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11491, file: !11136, line: 86, baseType: !121, size: 32, offset: 96)
!11497 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11491, file: !11136, line: 89, baseType: !121, size: 32, offset: 128)
!11498 = !{!11499, !11500, !11501}
!11499 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11486, file: !11126, line: 591, type: !11489)
!11500 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11486, file: !11126, line: 591, type: !121)
!11501 = !DILocalVariable(name: "tickstart", scope: !11486, file: !11126, line: 593, type: !121)
!11502 = !DILocation(line: 0, scope: !11486)
!11503 = !DILocation(line: 596, column: 24, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11486, file: !11126, line: 596, column: 6)
!11505 = !DILocation(line: 596, column: 6, scope: !11486)
!11506 = !DILocation(line: 610, column: 17, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11486, file: !11126, line: 610, column: 6)
!11508 = !DILocation(line: 610, column: 15, scope: !11507)
!11509 = !DILocation(line: 610, column: 6, scope: !11486)
!11510 = !DILocation(line: 613, column: 5, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11507, file: !11126, line: 611, column: 3)
!11512 = !DILocation(line: 617, column: 8, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11511, file: !11126, line: 617, column: 8)
!11514 = !DILocation(line: 617, column: 34, scope: !11513)
!11515 = !DILocation(line: 617, column: 8, scope: !11511)
!11516 = !DILocation(line: 624, column: 27, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11486, file: !11126, line: 624, column: 6)
!11518 = !DILocation(line: 624, column: 38, scope: !11517)
!11519 = !DILocation(line: 624, column: 60, scope: !11517)
!11520 = !DILocation(line: 624, column: 6, scope: !11486)
!11521 = !DILocation(line: 628, column: 40, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11523, file: !11126, line: 628, column: 8)
!11523 = distinct !DILexicalBlock(scope: !11517, file: !11126, line: 625, column: 3)
!11524 = !DILocation(line: 628, column: 63, scope: !11522)
!11525 = !DILocation(line: 628, column: 8, scope: !11523)
!11526 = !DILocation(line: 630, column: 7, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11522, file: !11126, line: 629, column: 5)
!11528 = !DILocation(line: 633, column: 29, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11523, file: !11126, line: 633, column: 8)
!11530 = !DILocation(line: 631, column: 5, scope: !11527)
!11531 = !DILocation(line: 633, column: 40, scope: !11529)
!11532 = !DILocation(line: 633, column: 63, scope: !11529)
!11533 = !DILocation(line: 633, column: 8, scope: !11523)
!11534 = !DILocation(line: 635, column: 7, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11529, file: !11126, line: 634, column: 5)
!11536 = !DILocation(line: 636, column: 5, scope: !11535)
!11537 = !DILocation(line: 639, column: 5, scope: !11523)
!11538 = !DILocation(line: 643, column: 27, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11486, file: !11126, line: 643, column: 6)
!11540 = !DILocation(line: 640, column: 3, scope: !11523)
!11541 = !DILocation(line: 643, column: 38, scope: !11539)
!11542 = !DILocation(line: 643, column: 62, scope: !11539)
!11543 = !DILocation(line: 643, column: 6, scope: !11486)
!11544 = !DILocation(line: 648, column: 27, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11546, file: !11126, line: 648, column: 8)
!11546 = distinct !DILexicalBlock(scope: !11539, file: !11126, line: 644, column: 3)
!11547 = !DILocation(line: 648, column: 8, scope: !11546)
!11548 = !DILocation(line: 651, column: 10, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11550, file: !11126, line: 651, column: 10)
!11550 = distinct !DILexicalBlock(scope: !11545, file: !11126, line: 649, column: 5)
!11551 = !DILocation(line: 651, column: 46, scope: !11549)
!11552 = !DILocation(line: 651, column: 10, scope: !11550)
!11553 = !DILocation(line: 661, column: 10, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11555, file: !11126, line: 661, column: 10)
!11555 = distinct !DILexicalBlock(scope: !11556, file: !11126, line: 659, column: 5)
!11556 = distinct !DILexicalBlock(scope: !11545, file: !11126, line: 657, column: 13)
!11557 = !DILocation(line: 661, column: 46, scope: !11554)
!11558 = !DILocation(line: 661, column: 10, scope: !11555)
!11559 = !DILocation(line: 670, column: 10, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11561, file: !11126, line: 670, column: 10)
!11561 = distinct !DILexicalBlock(scope: !11556, file: !11126, line: 668, column: 5)
!11562 = !DILocation(line: 670, column: 46, scope: !11560)
!11563 = !DILocation(line: 670, column: 10, scope: !11561)
!11564 = !DILocation(line: 676, column: 5, scope: !11546)
!11565 = !DILocation(line: 679, column: 17, scope: !11546)
!11566 = !DILocation(line: 681, column: 5, scope: !11546)
!11567 = !DILocation(line: 681, column: 12, scope: !11546)
!11568 = !DILocation(line: 681, column: 65, scope: !11546)
!11569 = !DILocation(line: 681, column: 78, scope: !11546)
!11570 = !DILocation(line: 681, column: 42, scope: !11546)
!11571 = !DILocation(line: 683, column: 12, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11573, file: !11126, line: 683, column: 11)
!11573 = distinct !DILexicalBlock(scope: !11546, file: !11126, line: 682, column: 5)
!11574 = !DILocation(line: 683, column: 26, scope: !11572)
!11575 = !DILocation(line: 683, column: 39, scope: !11572)
!11576 = !DILocation(line: 683, column: 11, scope: !11573)
!11577 = distinct !{!11577, !11566, !11578}
!11578 = !DILocation(line: 687, column: 5, scope: !11546)
!11579 = !DILocation(line: 691, column: 17, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11486, file: !11126, line: 691, column: 6)
!11581 = !DILocation(line: 691, column: 15, scope: !11580)
!11582 = !DILocation(line: 691, column: 6, scope: !11486)
!11583 = !DILocation(line: 694, column: 5, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11580, file: !11126, line: 692, column: 3)
!11585 = !DILocation(line: 698, column: 8, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11584, file: !11126, line: 698, column: 8)
!11587 = !DILocation(line: 698, column: 34, scope: !11586)
!11588 = !DILocation(line: 698, column: 8, scope: !11584)
!11589 = !DILocation(line: 705, column: 27, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11486, file: !11126, line: 705, column: 6)
!11591 = !DILocation(line: 705, column: 38, scope: !11590)
!11592 = !DILocation(line: 705, column: 61, scope: !11590)
!11593 = !DILocation(line: 705, column: 6, scope: !11486)
!11594 = !DILocation(line: 708, column: 5, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11590, file: !11126, line: 706, column: 3)
!11596 = !DILocation(line: 712, column: 27, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11486, file: !11126, line: 712, column: 6)
!11598 = !DILocation(line: 709, column: 3, scope: !11595)
!11599 = !DILocation(line: 712, column: 38, scope: !11597)
!11600 = !DILocation(line: 712, column: 61, scope: !11597)
!11601 = !DILocation(line: 712, column: 6, scope: !11486)
!11602 = !DILocation(line: 715, column: 5, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11597, file: !11126, line: 713, column: 3)
!11604 = !DILocation(line: 716, column: 3, scope: !11603)
!11605 = !DILocation(line: 719, column: 21, scope: !11486)
!11606 = !DILocation(line: 719, column: 70, scope: !11486)
!11607 = !DILocation(line: 719, column: 91, scope: !11486)
!11608 = !DILocation(line: 719, column: 50, scope: !11486)
!11609 = !DILocation(line: 719, column: 47, scope: !11486)
!11610 = !DILocation(line: 719, column: 19, scope: !11486)
!11611 = !DILocation(line: 722, column: 17, scope: !11486)
!11612 = !DILocation(line: 722, column: 3, scope: !11486)
!11613 = !DILocation(line: 724, column: 3, scope: !11486)
!11614 = !DILocation(line: 725, column: 1, scope: !11486)
!11615 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11126, file: !11126, line: 885, type: !6000, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !11616)
!11616 = !{!11617, !11618, !11619, !11620}
!11617 = !DILocalVariable(name: "pllm", scope: !11615, file: !11126, line: 887, type: !121)
!11618 = !DILocalVariable(name: "pllvco", scope: !11615, file: !11126, line: 887, type: !121)
!11619 = !DILocalVariable(name: "pllp", scope: !11615, file: !11126, line: 887, type: !121)
!11620 = !DILocalVariable(name: "sysclockfreq", scope: !11615, file: !11126, line: 888, type: !121)
!11621 = !DILocation(line: 0, scope: !11615)
!11622 = !DILocation(line: 891, column: 16, scope: !11615)
!11623 = !DILocation(line: 891, column: 21, scope: !11615)
!11624 = !DILocation(line: 891, column: 3, scope: !11615)
!11625 = !DILocation(line: 901, column: 7, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !11126, line: 899, column: 5)
!11627 = distinct !DILexicalBlock(scope: !11615, file: !11126, line: 892, column: 3)
!11628 = !DILocation(line: 907, column: 19, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11627, file: !11126, line: 904, column: 5)
!11630 = !DILocation(line: 907, column: 27, scope: !11629)
!11631 = !DILocation(line: 908, column: 10, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11629, file: !11126, line: 908, column: 10)
!11633 = !DILocation(line: 908, column: 40, scope: !11632)
!11634 = !DILocation(line: 0, scope: !11632)
!11635 = !DILocation(line: 908, column: 10, scope: !11629)
!11636 = !DILocation(line: 911, column: 53, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11632, file: !11126, line: 909, column: 7)
!11638 = !DILocation(line: 911, column: 130, scope: !11637)
!11639 = !DILocation(line: 912, column: 7, scope: !11637)
!11640 = !DILocation(line: 916, column: 56, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11632, file: !11126, line: 914, column: 7)
!11642 = !DILocation(line: 916, column: 53, scope: !11641)
!11643 = !DILocation(line: 916, column: 132, scope: !11641)
!11644 = !DILocation(line: 916, column: 130, scope: !11641)
!11645 = !DILocation(line: 916, column: 18, scope: !11641)
!11646 = !DILocation(line: 918, column: 23, scope: !11629)
!11647 = !DILocation(line: 918, column: 82, scope: !11629)
!11648 = !DILocation(line: 920, column: 28, scope: !11629)
!11649 = !DILocation(line: 921, column: 7, scope: !11629)
!11650 = !DILocation(line: 0, scope: !11627)
!11651 = !DILocation(line: 929, column: 3, scope: !11615)
!11652 = !DISubprogram(name: "HAL_InitTick", scope: !11485, file: !11485, line: 223, type: !11653, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11653 = !DISubroutineType(types: !11654)
!11654 = !{!11129, !121}
!11655 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11126, file: !11126, line: 775, type: !11656, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !11658)
!11656 = !DISubroutineType(types: !11657)
!11657 = !{null, !121, !121, !121}
!11658 = !{!11659, !11660, !11661, !11662, !11672, !11676}
!11659 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11655, file: !11126, line: 775, type: !121)
!11660 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11655, file: !11126, line: 775, type: !121)
!11661 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11655, file: !11126, line: 775, type: !121)
!11662 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11655, file: !11126, line: 777, type: !11663)
!11663 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11664, line: 62, baseType: !11665)
!11664 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11664, line: 46, size: 160, elements: !11666)
!11666 = !{!11667, !11668, !11669, !11670, !11671}
!11667 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11665, file: !11664, line: 48, baseType: !121, size: 32)
!11668 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11665, file: !11664, line: 51, baseType: !121, size: 32, offset: 32)
!11669 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11665, file: !11664, line: 54, baseType: !121, size: 32, offset: 64)
!11670 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11665, file: !11664, line: 57, baseType: !121, size: 32, offset: 96)
!11671 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11665, file: !11664, line: 60, baseType: !121, size: 32, offset: 128)
!11672 = !DILocalVariable(name: "tmpreg", scope: !11673, file: !11126, line: 787, type: !120)
!11673 = distinct !DILexicalBlock(scope: !11674, file: !11126, line: 787, column: 5)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !11126, line: 783, column: 3)
!11675 = distinct !DILexicalBlock(scope: !11655, file: !11126, line: 782, column: 6)
!11676 = !DILocalVariable(name: "tmpreg", scope: !11677, file: !11126, line: 811, type: !120)
!11677 = distinct !DILexicalBlock(scope: !11678, file: !11126, line: 811, column: 5)
!11678 = distinct !DILexicalBlock(scope: !11675, file: !11126, line: 807, column: 3)
!11679 = !DILocation(line: 0, scope: !11655)
!11680 = !DILocation(line: 777, column: 3, scope: !11655)
!11681 = !DILocation(line: 777, column: 20, scope: !11655)
!11682 = !DILocation(line: 782, column: 15, scope: !11675)
!11683 = !DILocation(line: 782, column: 6, scope: !11655)
!11684 = !DILocation(line: 787, column: 5, scope: !11673)
!11685 = !DILocation(line: 787, column: 5, scope: !11674)
!11686 = !DILocation(line: 790, column: 21, scope: !11674)
!11687 = !DILocation(line: 790, column: 25, scope: !11674)
!11688 = !DILocation(line: 791, column: 21, scope: !11674)
!11689 = !DILocation(line: 791, column: 26, scope: !11674)
!11690 = !DILocation(line: 792, column: 21, scope: !11674)
!11691 = !DILocation(line: 792, column: 27, scope: !11674)
!11692 = !DILocation(line: 793, column: 21, scope: !11674)
!11693 = !DILocation(line: 793, column: 26, scope: !11674)
!11694 = !DILocation(line: 794, column: 21, scope: !11674)
!11695 = !DILocation(line: 794, column: 31, scope: !11674)
!11696 = !DILocation(line: 795, column: 5, scope: !11674)
!11697 = !DILocation(line: 798, column: 5, scope: !11674)
!11698 = !DILocation(line: 804, column: 3, scope: !11674)
!11699 = !DILocation(line: 811, column: 5, scope: !11677)
!11700 = !DILocation(line: 811, column: 5, scope: !11678)
!11701 = !DILocation(line: 814, column: 21, scope: !11678)
!11702 = !DILocation(line: 814, column: 25, scope: !11678)
!11703 = !DILocation(line: 815, column: 21, scope: !11678)
!11704 = !DILocation(line: 815, column: 26, scope: !11678)
!11705 = !DILocation(line: 816, column: 21, scope: !11678)
!11706 = !DILocation(line: 816, column: 27, scope: !11678)
!11707 = !DILocation(line: 817, column: 21, scope: !11678)
!11708 = !DILocation(line: 817, column: 26, scope: !11678)
!11709 = !DILocation(line: 818, column: 21, scope: !11678)
!11710 = !DILocation(line: 818, column: 31, scope: !11678)
!11711 = !DILocation(line: 819, column: 5, scope: !11678)
!11712 = !DILocation(line: 822, column: 5, scope: !11678)
!11713 = !DILocation(line: 0, scope: !11675)
!11714 = !DILocation(line: 830, column: 1, scope: !11655)
!11715 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11664, file: !11664, line: 224, type: !11716, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11716 = !DISubroutineType(types: !11717)
!11717 = !{null, !2996, !11718}
!11718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11663, size: 32)
!11719 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11126, file: !11126, line: 841, type: !3157, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !317)
!11720 = !DILocation(line: 843, column: 38, scope: !11719)
!11721 = !DILocation(line: 844, column: 1, scope: !11719)
!11722 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11126, file: !11126, line: 850, type: !3157, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !317)
!11723 = !DILocation(line: 852, column: 38, scope: !11722)
!11724 = !DILocation(line: 853, column: 1, scope: !11722)
!11725 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11126, file: !11126, line: 941, type: !6000, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !317)
!11726 = !DILocation(line: 943, column: 10, scope: !11725)
!11727 = !DILocation(line: 943, column: 3, scope: !11725)
!11728 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11126, file: !11126, line: 952, type: !6000, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !317)
!11729 = !DILocation(line: 955, column: 11, scope: !11728)
!11730 = !DILocation(line: 955, column: 56, scope: !11728)
!11731 = !DILocation(line: 955, column: 78, scope: !11728)
!11732 = !DILocation(line: 955, column: 36, scope: !11728)
!11733 = !DILocation(line: 955, column: 33, scope: !11728)
!11734 = !DILocation(line: 955, column: 3, scope: !11728)
!11735 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11126, file: !11126, line: 964, type: !6000, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !317)
!11736 = !DILocation(line: 967, column: 11, scope: !11735)
!11737 = !DILocation(line: 967, column: 55, scope: !11735)
!11738 = !DILocation(line: 967, column: 77, scope: !11735)
!11739 = !DILocation(line: 967, column: 35, scope: !11735)
!11740 = !DILocation(line: 967, column: 32, scope: !11735)
!11741 = !DILocation(line: 967, column: 3, scope: !11735)
!11742 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11126, file: !11126, line: 977, type: !11743, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !11745)
!11743 = !DISubroutineType(types: !11744)
!11744 = !{null, !11134}
!11745 = !{!11746}
!11746 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11742, file: !11126, line: 977, type: !11134)
!11747 = !DILocation(line: 0, scope: !11742)
!11748 = !DILocation(line: 980, column: 22, scope: !11742)
!11749 = !DILocation(line: 980, column: 37, scope: !11742)
!11750 = !DILocation(line: 983, column: 12, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11742, file: !11126, line: 983, column: 6)
!11752 = !DILocation(line: 983, column: 15, scope: !11751)
!11753 = !DILocation(line: 983, column: 31, scope: !11751)
!11754 = !DILocation(line: 983, column: 6, scope: !11742)
!11755 = !DILocation(line: 985, column: 24, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11751, file: !11126, line: 984, column: 3)
!11757 = !DILocation(line: 985, column: 33, scope: !11756)
!11758 = !DILocation(line: 986, column: 3, scope: !11756)
!11759 = !DILocation(line: 987, column: 17, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11751, file: !11126, line: 987, column: 11)
!11761 = !DILocation(line: 987, column: 20, scope: !11760)
!11762 = !DILocation(line: 987, column: 35, scope: !11760)
!11763 = !DILocation(line: 0, scope: !11760)
!11764 = !DILocation(line: 987, column: 11, scope: !11751)
!11765 = !DILocation(line: 989, column: 33, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11760, file: !11126, line: 988, column: 3)
!11767 = !DILocation(line: 990, column: 3, scope: !11766)
!11768 = !DILocation(line: 993, column: 33, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11760, file: !11126, line: 992, column: 3)
!11770 = !DILocation(line: 997, column: 12, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11742, file: !11126, line: 997, column: 6)
!11772 = !DILocation(line: 997, column: 15, scope: !11771)
!11773 = !DILocation(line: 1003, column: 24, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11771, file: !11126, line: 1002, column: 3)
!11775 = !DILocation(line: 1003, column: 33, scope: !11774)
!11776 = !DILocation(line: 1006, column: 61, scope: !11742)
!11777 = !DILocation(line: 1006, column: 81, scope: !11742)
!11778 = !DILocation(line: 1006, column: 22, scope: !11742)
!11779 = !DILocation(line: 1006, column: 42, scope: !11742)
!11780 = !DILocation(line: 1009, column: 12, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11742, file: !11126, line: 1009, column: 6)
!11782 = !DILocation(line: 1009, column: 17, scope: !11781)
!11783 = !DILocation(line: 1009, column: 35, scope: !11781)
!11784 = !DILocation(line: 1009, column: 6, scope: !11742)
!11785 = !DILocation(line: 1011, column: 24, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11781, file: !11126, line: 1010, column: 3)
!11787 = !DILocation(line: 1011, column: 33, scope: !11786)
!11788 = !DILocation(line: 1012, column: 3, scope: !11786)
!11789 = !DILocation(line: 1013, column: 17, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11781, file: !11126, line: 1013, column: 11)
!11791 = !DILocation(line: 1013, column: 22, scope: !11790)
!11792 = !DILocation(line: 1013, column: 39, scope: !11790)
!11793 = !DILocation(line: 0, scope: !11790)
!11794 = !DILocation(line: 1013, column: 11, scope: !11781)
!11795 = !DILocation(line: 1015, column: 33, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11790, file: !11126, line: 1014, column: 3)
!11797 = !DILocation(line: 1016, column: 3, scope: !11796)
!11798 = !DILocation(line: 1019, column: 33, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11790, file: !11126, line: 1018, column: 3)
!11800 = !DILocation(line: 1023, column: 12, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11742, file: !11126, line: 1023, column: 6)
!11802 = !DILocation(line: 1023, column: 16, scope: !11801)
!11803 = !DILocation(line: 1029, column: 24, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11801, file: !11126, line: 1028, column: 3)
!11805 = !DILocation(line: 1029, column: 33, scope: !11804)
!11806 = !DILocation(line: 1033, column: 12, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11742, file: !11126, line: 1033, column: 6)
!11808 = !DILocation(line: 1033, column: 15, scope: !11807)
!11809 = !DILocation(line: 1033, column: 30, scope: !11807)
!11810 = !DILocation(line: 1033, column: 6, scope: !11742)
!11811 = !DILocation(line: 1039, column: 28, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11807, file: !11126, line: 1038, column: 3)
!11813 = !DILocation(line: 1039, column: 37, scope: !11812)
!11814 = !DILocation(line: 1041, column: 54, scope: !11742)
!11815 = !DILocation(line: 1041, column: 62, scope: !11742)
!11816 = !DILocation(line: 1041, column: 26, scope: !11742)
!11817 = !DILocation(line: 1041, column: 36, scope: !11742)
!11818 = !DILocation(line: 1042, column: 49, scope: !11742)
!11819 = !DILocation(line: 1042, column: 57, scope: !11742)
!11820 = !DILocation(line: 1042, column: 26, scope: !11742)
!11821 = !DILocation(line: 1042, column: 31, scope: !11742)
!11822 = !DILocation(line: 1043, column: 50, scope: !11742)
!11823 = !DILocation(line: 1043, column: 78, scope: !11742)
!11824 = !DILocation(line: 1043, column: 26, scope: !11742)
!11825 = !DILocation(line: 1043, column: 31, scope: !11742)
!11826 = !DILocation(line: 1044, column: 52, scope: !11742)
!11827 = !DILocation(line: 1044, column: 102, scope: !11742)
!11828 = !DILocation(line: 1044, column: 109, scope: !11742)
!11829 = !DILocation(line: 1044, column: 26, scope: !11742)
!11830 = !DILocation(line: 1044, column: 31, scope: !11742)
!11831 = !DILocation(line: 1045, column: 50, scope: !11742)
!11832 = !DILocation(line: 1045, column: 78, scope: !11742)
!11833 = !DILocation(line: 1045, column: 26, scope: !11742)
!11834 = !DILocation(line: 1045, column: 31, scope: !11742)
!11835 = !DILocation(line: 1046, column: 1, scope: !11742)
!11836 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11126, file: !11126, line: 1056, type: !11837, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !11839)
!11837 = !DISubroutineType(types: !11838)
!11838 = !{null, !11489, !846}
!11839 = !{!11840, !11841}
!11840 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11836, file: !11126, line: 1056, type: !11489)
!11841 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11836, file: !11126, line: 1056, type: !846)
!11842 = !DILocation(line: 0, scope: !11836)
!11843 = !DILocation(line: 1059, column: 22, scope: !11836)
!11844 = !DILocation(line: 1059, column: 32, scope: !11836)
!11845 = !DILocation(line: 1062, column: 53, scope: !11836)
!11846 = !DILocation(line: 1062, column: 58, scope: !11836)
!11847 = !DILocation(line: 1062, column: 22, scope: !11836)
!11848 = !DILocation(line: 1062, column: 35, scope: !11836)
!11849 = !DILocation(line: 1065, column: 54, scope: !11836)
!11850 = !DILocation(line: 1065, column: 59, scope: !11836)
!11851 = !DILocation(line: 1065, column: 22, scope: !11836)
!11852 = !DILocation(line: 1065, column: 36, scope: !11836)
!11853 = !DILocation(line: 1068, column: 55, scope: !11836)
!11854 = !DILocation(line: 1068, column: 60, scope: !11836)
!11855 = !DILocation(line: 1068, column: 22, scope: !11836)
!11856 = !DILocation(line: 1068, column: 37, scope: !11836)
!11857 = !DILocation(line: 1071, column: 56, scope: !11836)
!11858 = !DILocation(line: 1071, column: 79, scope: !11836)
!11859 = !DILocation(line: 1071, column: 22, scope: !11836)
!11860 = !DILocation(line: 1071, column: 37, scope: !11836)
!11861 = !DILocation(line: 1074, column: 34, scope: !11836)
!11862 = !DILocation(line: 1074, column: 38, scope: !11836)
!11863 = !DILocation(line: 1074, column: 14, scope: !11836)
!11864 = !DILocation(line: 1075, column: 1, scope: !11836)
!11865 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11126, file: !11126, line: 1082, type: !3157, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !317)
!11866 = !DILocation(line: 1085, column: 6, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11865, file: !11126, line: 1085, column: 6)
!11868 = !DILocation(line: 1085, column: 6, scope: !11865)
!11869 = !DILocation(line: 1088, column: 5, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11867, file: !11126, line: 1086, column: 3)
!11871 = !DILocation(line: 1091, column: 5, scope: !11870)
!11872 = !DILocation(line: 1092, column: 3, scope: !11870)
!11873 = !DILocation(line: 1093, column: 1, scope: !11865)
!11874 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11126, file: !11126, line: 1099, type: !3157, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !317)
!11875 = !DILocation(line: 1104, column: 1, scope: !11874)
!11876 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11877, file: !11877, line: 257, type: !6010, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !11878)
!11877 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11878 = !{!11879}
!11879 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11876, file: !11877, line: 257, type: !121)
!11880 = !DILocation(line: 0, scope: !11876)
!11881 = !DILocation(line: 260, column: 3, scope: !11876)
!11882 = !DILocation(line: 261, column: 1, scope: !11876)
!11883 = distinct !DISubprogram(name: "LL_InitTick", scope: !11884, file: !11884, line: 260, type: !9157, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !11885)
!11884 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11885 = !{!11886, !11887}
!11886 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11883, file: !11884, line: 260, type: !121)
!11887 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11883, file: !11884, line: 260, type: !121)
!11888 = !DILocation(line: 0, scope: !11883)
!11889 = !DILocation(line: 263, column: 46, scope: !11883)
!11890 = !DILocation(line: 263, column: 55, scope: !11883)
!11891 = !DILocation(line: 263, column: 18, scope: !11883)
!11892 = !DILocation(line: 264, column: 18, scope: !11883)
!11893 = !DILocation(line: 265, column: 18, scope: !11883)
!11894 = !DILocation(line: 267, column: 1, scope: !11883)
!11895 = distinct !DISubprogram(name: "LL_mDelay", scope: !11877, file: !11877, line: 273, type: !6010, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !11896)
!11896 = !{!11897, !11898}
!11897 = !DILocalVariable(name: "Delay", arg: 1, scope: !11895, file: !11877, line: 273, type: !121)
!11898 = !DILocalVariable(name: "tmp", scope: !11895, file: !11877, line: 275, type: !120)
!11899 = !DILocation(line: 0, scope: !11895)
!11900 = !DILocation(line: 275, column: 3, scope: !11895)
!11901 = !DILocation(line: 275, column: 18, scope: !11895)
!11902 = !DILocation(line: 275, column: 33, scope: !11895)
!11903 = !DILocation(line: 277, column: 10, scope: !11895)
!11904 = !DILocation(line: 280, column: 12, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11895, file: !11877, line: 280, column: 6)
!11906 = !DILocation(line: 285, column: 3, scope: !11895)
!11907 = !DILocation(line: 287, column: 18, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11909, file: !11877, line: 287, column: 8)
!11909 = distinct !DILexicalBlock(scope: !11895, file: !11877, line: 286, column: 3)
!11910 = !DILocation(line: 292, column: 1, scope: !11895)
!11911 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11877, file: !11877, line: 323, type: !6010, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !11912)
!11912 = !{!11913}
!11913 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11911, file: !11877, line: 323, type: !121)
!11914 = !DILocation(line: 0, scope: !11911)
!11915 = !DILocation(line: 326, column: 19, scope: !11911)
!11916 = !DILocation(line: 327, column: 1, scope: !11911)
!11917 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11877, file: !11877, line: 338, type: !11918, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !11921)
!11918 = !DISubroutineType(types: !11919)
!11919 = !{!11920, !121}
!11920 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !790, line: 201, baseType: !789)
!11921 = !{!11922, !11923, !11924, !11925, !11926}
!11922 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11917, file: !11877, line: 338, type: !121)
!11923 = !DILocalVariable(name: "timeout", scope: !11917, file: !11877, line: 340, type: !121)
!11924 = !DILocalVariable(name: "getlatency", scope: !11917, file: !11877, line: 341, type: !121)
!11925 = !DILocalVariable(name: "latency", scope: !11917, file: !11877, line: 342, type: !121)
!11926 = !DILocalVariable(name: "status", scope: !11917, file: !11877, line: 343, type: !11920)
!11927 = !DILocation(line: 0, scope: !11917)
!11928 = !DILocation(line: 347, column: 21, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11917, file: !11877, line: 347, column: 6)
!11930 = !DILocation(line: 347, column: 6, scope: !11917)
!11931 = !DILocation(line: 353, column: 8, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11933, file: !11877, line: 353, column: 8)
!11933 = distinct !DILexicalBlock(scope: !11929, file: !11877, line: 352, column: 3)
!11934 = !DILocation(line: 353, column: 40, scope: !11932)
!11935 = !DILocation(line: 353, column: 8, scope: !11933)
!11936 = !DILocation(line: 374, column: 55, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11938, file: !11877, line: 374, column: 10)
!11938 = distinct !DILexicalBlock(scope: !11932, file: !11877, line: 354, column: 5)
!11939 = !DILocation(line: 368, column: 26, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11938, file: !11877, line: 368, column: 10)
!11941 = !DILocation(line: 368, column: 55, scope: !11940)
!11942 = !DILocation(line: 380, column: 57, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11944, file: !11877, line: 380, column: 12)
!11944 = distinct !DILexicalBlock(scope: !11937, file: !11877, line: 379, column: 7)
!11945 = !DILocation(line: 387, column: 8, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11933, file: !11877, line: 387, column: 8)
!11947 = !DILocation(line: 387, column: 40, scope: !11946)
!11948 = !DILocation(line: 387, column: 8, scope: !11933)
!11949 = !DILocation(line: 407, column: 26, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11951, file: !11877, line: 407, column: 10)
!11951 = distinct !DILexicalBlock(scope: !11946, file: !11877, line: 388, column: 5)
!11952 = !DILocation(line: 407, column: 55, scope: !11950)
!11953 = !DILocation(line: 413, column: 28, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11955, file: !11877, line: 413, column: 12)
!11955 = distinct !DILexicalBlock(scope: !11950, file: !11877, line: 412, column: 7)
!11956 = !DILocation(line: 413, column: 57, scope: !11954)
!11957 = !DILocation(line: 0, scope: !11933)
!11958 = !DILocation(line: 420, column: 8, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11933, file: !11877, line: 420, column: 8)
!11960 = !DILocation(line: 420, column: 40, scope: !11959)
!11961 = !DILocation(line: 420, column: 8, scope: !11933)
!11962 = !DILocation(line: 429, column: 26, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11964, file: !11877, line: 429, column: 10)
!11964 = distinct !DILexicalBlock(scope: !11959, file: !11877, line: 421, column: 5)
!11965 = !DILocation(line: 429, column: 55, scope: !11963)
!11966 = !DILocation(line: 435, column: 28, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11968, file: !11877, line: 435, column: 12)
!11968 = distinct !DILexicalBlock(scope: !11963, file: !11877, line: 434, column: 7)
!11969 = !DILocation(line: 435, column: 57, scope: !11967)
!11970 = !DILocation(line: 444, column: 5, scope: !11933)
!11971 = !DILocation(line: 448, column: 5, scope: !11933)
!11972 = !DILocation(line: 451, column: 18, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11933, file: !11877, line: 449, column: 5)
!11974 = !DILocation(line: 452, column: 12, scope: !11973)
!11975 = !DILocation(line: 453, column: 26, scope: !11933)
!11976 = !DILocation(line: 453, column: 38, scope: !11933)
!11977 = !DILocation(line: 453, column: 5, scope: !11973)
!11978 = distinct !{!11978, !11971, !11979}
!11979 = !DILocation(line: 453, column: 54, scope: !11933)
!11980 = !DILocation(line: 0, scope: !11929)
!11981 = !DILocation(line: 464, column: 3, scope: !11917)
!11982 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11983, file: !11983, line: 519, type: !6000, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!11983 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11984 = !DILocation(line: 521, column: 21, scope: !11982)
!11985 = !DILocation(line: 521, column: 3, scope: !11982)
!11986 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5725, file: !5725, line: 1543, type: !6010, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !11987)
!11987 = !{!11988}
!11988 = !DILocalVariable(name: "Latency", arg: 1, scope: !11986, file: !5725, line: 1543, type: !121)
!11989 = !DILocation(line: 0, scope: !11986)
!11990 = !DILocation(line: 1545, column: 3, scope: !11986)
!11991 = !DILocation(line: 1546, column: 1, scope: !11986)
!11992 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5725, file: !5725, line: 1569, type: !6000, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!11993 = !DILocation(line: 1571, column: 21, scope: !11992)
!11994 = !DILocation(line: 1571, column: 3, scope: !11992)
!11995 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11877, file: !11877, line: 483, type: !11996, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !12012)
!11996 = !DISubroutineType(types: !11997)
!11997 = !{!11920, !11998, !12005}
!11998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11999, size: 32)
!11999 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11884, line: 114, baseType: !12000)
!12000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11884, line: 94, size: 96, elements: !12001)
!12001 = !{!12002, !12003, !12004}
!12002 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12000, file: !11884, line: 96, baseType: !121, size: 32)
!12003 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12000, file: !11884, line: 102, baseType: !121, size: 32, offset: 32)
!12004 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12000, file: !11884, line: 109, baseType: !121, size: 32, offset: 64)
!12005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12006, size: 32)
!12006 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11884, line: 139, baseType: !12007)
!12007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11884, line: 119, size: 96, elements: !12008)
!12008 = !{!12009, !12010, !12011}
!12009 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12007, file: !11884, line: 121, baseType: !121, size: 32)
!12010 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12007, file: !11884, line: 127, baseType: !121, size: 32, offset: 32)
!12011 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12007, file: !11884, line: 133, baseType: !121, size: 32, offset: 64)
!12012 = !{!12013, !12014, !12015, !12016}
!12013 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11995, file: !11877, line: 483, type: !11998)
!12014 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11995, file: !11877, line: 484, type: !12005)
!12015 = !DILocalVariable(name: "status", scope: !11995, file: !11877, line: 486, type: !11920)
!12016 = !DILocalVariable(name: "pllfreq", scope: !11995, file: !11877, line: 487, type: !121)
!12017 = !DILocation(line: 0, scope: !11995)
!12018 = !DILocation(line: 490, column: 6, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !11995, file: !11877, line: 490, column: 6)
!12020 = !DILocation(line: 490, column: 25, scope: !12019)
!12021 = !DILocation(line: 490, column: 6, scope: !11995)
!12022 = !DILocation(line: 493, column: 15, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12019, file: !11877, line: 491, column: 3)
!12024 = !DILocation(line: 496, column: 8, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12023, file: !11877, line: 496, column: 8)
!12026 = !DILocation(line: 496, column: 29, scope: !12025)
!12027 = !DILocation(line: 496, column: 8, scope: !12023)
!12028 = !DILocation(line: 498, column: 7, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12025, file: !11877, line: 497, column: 5)
!12030 = !DILocation(line: 499, column: 7, scope: !12029)
!12031 = !DILocation(line: 499, column: 14, scope: !12029)
!12032 = !DILocation(line: 499, column: 35, scope: !12029)
!12033 = distinct !{!12033, !12030, !12034}
!12034 = !DILocation(line: 502, column: 7, scope: !12029)
!12035 = !DILocation(line: 506, column: 76, scope: !12023)
!12036 = !DILocation(line: 506, column: 103, scope: !12023)
!12037 = !DILocation(line: 507, column: 54, scope: !12023)
!12038 = !DILocation(line: 506, column: 5, scope: !12023)
!12039 = !DILocation(line: 510, column: 14, scope: !12023)
!12040 = !DILocation(line: 511, column: 3, scope: !12023)
!12041 = !DILocation(line: 0, scope: !12019)
!12042 = !DILocation(line: 518, column: 3, scope: !11995)
!12043 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11877, file: !11877, line: 642, type: !12044, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !12046)
!12044 = !DISubroutineType(types: !12045)
!12045 = !{!11920}
!12046 = !{!12047}
!12047 = !DILocalVariable(name: "status", scope: !12043, file: !11877, line: 644, type: !11920)
!12048 = !DILocation(line: 0, scope: !12043)
!12049 = !DILocation(line: 647, column: 6, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12043, file: !11877, line: 647, column: 6)
!12051 = !DILocation(line: 647, column: 27, scope: !12050)
!12052 = !DILocation(line: 663, column: 6, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12043, file: !11877, line: 663, column: 6)
!12054 = !DILocation(line: 663, column: 30, scope: !12053)
!12055 = !DILocation(line: 663, column: 6, scope: !12043)
!12056 = !DILocation(line: 669, column: 3, scope: !12043)
!12057 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11877, file: !11877, line: 611, type: !12058, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !12060)
!12058 = !DISubroutineType(types: !12059)
!12059 = !{!121, !121, !11998}
!12060 = !{!12061, !12062, !12063}
!12061 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12057, file: !11877, line: 611, type: !121)
!12062 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12057, file: !11877, line: 611, type: !11998)
!12063 = !DILocalVariable(name: "pllfreq", scope: !12057, file: !11877, line: 613, type: !121)
!12064 = !DILocation(line: 0, scope: !12057)
!12065 = !DILocation(line: 622, column: 56, scope: !12057)
!12066 = !DILocation(line: 622, column: 61, scope: !12057)
!12067 = !DILocation(line: 622, column: 32, scope: !12057)
!12068 = !DILocation(line: 626, column: 45, scope: !12057)
!12069 = !DILocation(line: 626, column: 50, scope: !12057)
!12070 = !DILocation(line: 626, column: 21, scope: !12057)
!12071 = !DILocation(line: 630, column: 47, scope: !12057)
!12072 = !DILocation(line: 630, column: 82, scope: !12057)
!12073 = !DILocation(line: 630, column: 21, scope: !12057)
!12074 = !DILocation(line: 633, column: 3, scope: !12057)
!12075 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7951, file: !7951, line: 3007, type: !6000, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!12076 = !DILocation(line: 3009, column: 11, scope: !12075)
!12077 = !DILocation(line: 3009, column: 44, scope: !12075)
!12078 = !DILocation(line: 3009, column: 3, scope: !12075)
!12079 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7951, file: !7951, line: 2987, type: !3157, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!12080 = !DILocation(line: 2989, column: 3, scope: !12079)
!12081 = !DILocation(line: 2990, column: 1, scope: !12079)
!12082 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7951, file: !7951, line: 4304, type: !8075, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !12083)
!12083 = !{!12084, !12085, !12086, !12087}
!12084 = !DILocalVariable(name: "Source", arg: 1, scope: !12082, file: !7951, line: 4304, type: !121)
!12085 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12082, file: !7951, line: 4304, type: !121)
!12086 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12082, file: !7951, line: 4304, type: !121)
!12087 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12082, file: !7951, line: 4304, type: !121)
!12088 = !DILocation(line: 0, scope: !12082)
!12089 = !DILocation(line: 4306, column: 3, scope: !12082)
!12090 = !DILocation(line: 4308, column: 3, scope: !12082)
!12091 = !DILocation(line: 4312, column: 1, scope: !12082)
!12092 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11877, file: !11877, line: 681, type: !12093, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !12095)
!12093 = !DISubroutineType(types: !12094)
!12094 = !{!11920, !121, !12005}
!12095 = !{!12096, !12097, !12098, !12099}
!12096 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12092, file: !11877, line: 681, type: !121)
!12097 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12092, file: !11877, line: 681, type: !12005)
!12098 = !DILocalVariable(name: "status", scope: !12092, file: !11877, line: 683, type: !11920)
!12099 = !DILocalVariable(name: "hclk_frequency", scope: !12092, file: !11877, line: 684, type: !121)
!12100 = !DILocation(line: 0, scope: !12092)
!12101 = !DILocation(line: 691, column: 20, scope: !12092)
!12102 = !DILocation(line: 694, column: 6, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12092, file: !11877, line: 694, column: 6)
!12104 = !DILocation(line: 694, column: 22, scope: !12103)
!12105 = !DILocation(line: 694, column: 6, scope: !12092)
!12106 = !DILocation(line: 697, column: 14, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12103, file: !11877, line: 695, column: 3)
!12108 = !DILocation(line: 701, column: 13, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12092, file: !11877, line: 701, column: 6)
!12110 = !DILocation(line: 701, column: 6, scope: !12092)
!12111 = !DILocation(line: 704, column: 5, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12109, file: !11877, line: 702, column: 3)
!12113 = !DILocation(line: 705, column: 5, scope: !12112)
!12114 = !DILocation(line: 705, column: 12, scope: !12112)
!12115 = !DILocation(line: 705, column: 33, scope: !12112)
!12116 = distinct !{!12116, !12113, !12117}
!12117 = !DILocation(line: 708, column: 5, scope: !12112)
!12118 = !DILocation(line: 711, column: 49, scope: !12112)
!12119 = !DILocation(line: 711, column: 5, scope: !12112)
!12120 = !DILocation(line: 712, column: 5, scope: !12112)
!12121 = !DILocation(line: 713, column: 5, scope: !12112)
!12122 = !DILocation(line: 713, column: 12, scope: !12112)
!12123 = !DILocation(line: 713, column: 37, scope: !12112)
!12124 = distinct !{!12124, !12121, !12125}
!12125 = !DILocation(line: 716, column: 5, scope: !12112)
!12126 = !DILocation(line: 719, column: 50, scope: !12112)
!12127 = !DILocation(line: 719, column: 5, scope: !12112)
!12128 = !DILocation(line: 720, column: 50, scope: !12112)
!12129 = !DILocation(line: 720, column: 5, scope: !12112)
!12130 = !DILocation(line: 721, column: 3, scope: !12112)
!12131 = !DILocation(line: 724, column: 6, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12092, file: !11877, line: 724, column: 6)
!12133 = !DILocation(line: 724, column: 22, scope: !12132)
!12134 = !DILocation(line: 724, column: 6, scope: !12092)
!12135 = !DILocation(line: 727, column: 14, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12132, file: !11877, line: 725, column: 3)
!12137 = !DILocation(line: 728, column: 3, scope: !12136)
!12138 = !DILocation(line: 731, column: 13, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12092, file: !11877, line: 731, column: 6)
!12140 = !DILocation(line: 731, column: 6, scope: !12092)
!12141 = !DILocation(line: 733, column: 5, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12139, file: !11877, line: 732, column: 3)
!12143 = !DILocation(line: 734, column: 3, scope: !12142)
!12144 = !DILocation(line: 736, column: 3, scope: !12092)
!12145 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7951, file: !7951, line: 4184, type: !3157, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!12146 = !DILocation(line: 4186, column: 3, scope: !12145)
!12147 = !DILocation(line: 4187, column: 1, scope: !12145)
!12148 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7951, file: !7951, line: 4205, type: !6000, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!12149 = !DILocation(line: 4207, column: 11, scope: !12148)
!12150 = !DILocation(line: 4207, column: 44, scope: !12148)
!12151 = !DILocation(line: 4207, column: 3, scope: !12148)
!12152 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7951, file: !7951, line: 3224, type: !6010, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !12153)
!12153 = !{!12154}
!12154 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12152, file: !7951, line: 3224, type: !121)
!12155 = !DILocation(line: 0, scope: !12152)
!12156 = !DILocation(line: 3226, column: 3, scope: !12152)
!12157 = !DILocation(line: 3227, column: 1, scope: !12152)
!12158 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7951, file: !7951, line: 3188, type: !6010, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !12159)
!12159 = !{!12160}
!12160 = !DILocalVariable(name: "Source", arg: 1, scope: !12158, file: !7951, line: 3188, type: !121)
!12161 = !DILocation(line: 0, scope: !12158)
!12162 = !DILocation(line: 3190, column: 3, scope: !12158)
!12163 = !DILocation(line: 3191, column: 1, scope: !12158)
!12164 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7951, file: !7951, line: 3204, type: !6000, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!12165 = !DILocation(line: 3206, column: 21, scope: !12164)
!12166 = !DILocation(line: 3206, column: 3, scope: !12164)
!12167 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7951, file: !7951, line: 3240, type: !6010, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !12168)
!12168 = !{!12169}
!12169 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12167, file: !7951, line: 3240, type: !121)
!12170 = !DILocation(line: 0, scope: !12167)
!12171 = !DILocation(line: 3242, column: 3, scope: !12167)
!12172 = !DILocation(line: 3243, column: 1, scope: !12167)
!12173 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7951, file: !7951, line: 3256, type: !6010, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !12174)
!12174 = !{!12175}
!12175 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12173, file: !7951, line: 3256, type: !121)
!12176 = !DILocation(line: 0, scope: !12173)
!12177 = !DILocation(line: 3258, column: 3, scope: !12173)
!12178 = !DILocation(line: 3259, column: 1, scope: !12173)
!12179 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !7951, file: !7951, line: 5153, type: !6000, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!12180 = !DILocation(line: 5155, column: 11, scope: !12179)
!12181 = !DILocation(line: 5155, column: 47, scope: !12179)
!12182 = !DILocation(line: 5155, column: 3, scope: !12179)
!12183 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11877, file: !11877, line: 540, type: !12184, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !12186)
!12184 = !DISubroutineType(types: !12185)
!12185 = !{!11920, !121, !121, !11998, !12005}
!12186 = !{!12187, !12188, !12189, !12190, !12191, !12192}
!12187 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12183, file: !11877, line: 540, type: !121)
!12188 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12183, file: !11877, line: 540, type: !121)
!12189 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12183, file: !11877, line: 541, type: !11998)
!12190 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12183, file: !11877, line: 541, type: !12005)
!12191 = !DILocalVariable(name: "status", scope: !12183, file: !11877, line: 543, type: !11920)
!12192 = !DILocalVariable(name: "pllfreq", scope: !12183, file: !11877, line: 544, type: !121)
!12193 = !DILocation(line: 0, scope: !12183)
!12194 = !DILocation(line: 551, column: 6, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12183, file: !11877, line: 551, column: 6)
!12196 = !DILocation(line: 551, column: 25, scope: !12195)
!12197 = !DILocation(line: 551, column: 6, scope: !12183)
!12198 = !DILocation(line: 554, column: 15, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12195, file: !11877, line: 552, column: 3)
!12200 = !DILocation(line: 557, column: 8, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12199, file: !11877, line: 557, column: 8)
!12202 = !DILocation(line: 557, column: 29, scope: !12201)
!12203 = !DILocation(line: 557, column: 8, scope: !12199)
!12204 = !DILocation(line: 560, column: 20, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12206, file: !11877, line: 560, column: 10)
!12206 = distinct !DILexicalBlock(scope: !12201, file: !11877, line: 558, column: 5)
!12207 = !DILocation(line: 560, column: 10, scope: !12206)
!12208 = !DILocation(line: 562, column: 9, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12205, file: !11877, line: 561, column: 7)
!12210 = !DILocation(line: 563, column: 7, scope: !12209)
!12211 = !DILocation(line: 566, column: 9, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12205, file: !11877, line: 565, column: 7)
!12213 = !DILocation(line: 570, column: 7, scope: !12206)
!12214 = !DILocation(line: 571, column: 7, scope: !12206)
!12215 = !DILocation(line: 571, column: 14, scope: !12206)
!12216 = !DILocation(line: 571, column: 35, scope: !12206)
!12217 = distinct !{!12217, !12214, !12218}
!12218 = !DILocation(line: 574, column: 7, scope: !12206)
!12219 = !DILocation(line: 578, column: 76, scope: !12199)
!12220 = !DILocation(line: 578, column: 103, scope: !12199)
!12221 = !DILocation(line: 579, column: 54, scope: !12199)
!12222 = !DILocation(line: 578, column: 5, scope: !12199)
!12223 = !DILocation(line: 582, column: 14, scope: !12199)
!12224 = !DILocation(line: 583, column: 3, scope: !12199)
!12225 = !DILocation(line: 0, scope: !12195)
!12226 = !DILocation(line: 590, column: 3, scope: !12183)
!12227 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7951, file: !7951, line: 2969, type: !6000, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!12228 = !DILocation(line: 2971, column: 11, scope: !12227)
!12229 = !DILocation(line: 2971, column: 44, scope: !12227)
!12230 = !DILocation(line: 2971, column: 3, scope: !12227)
!12231 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !7951, file: !7951, line: 2929, type: !3157, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!12232 = !DILocation(line: 2931, column: 3, scope: !12231)
!12233 = !DILocation(line: 2932, column: 1, scope: !12231)
!12234 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7951, file: !7951, line: 2939, type: !3157, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!12235 = !DILocation(line: 2941, column: 3, scope: !12234)
!12236 = !DILocation(line: 2942, column: 1, scope: !12234)
!12237 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7951, file: !7951, line: 2949, type: !3157, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !317)
!12238 = !DILocation(line: 2951, column: 3, scope: !12237)
!12239 = !DILocation(line: 2952, column: 1, scope: !12237)
!12240 = distinct !DISubprogram(name: "z_device_state_init", scope: !12241, file: !12241, line: 23, type: !3157, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12242)
!12241 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12242 = !{!12243}
!12243 = !DILocalVariable(name: "dev", scope: !12240, file: !12241, line: 25, type: !12244)
!12244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12245, size: 32)
!12245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12246)
!12246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !12247)
!12247 = !{!12248, !12249, !12250, !12251, !12257, !12258}
!12248 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12246, file: !141, line: 380, baseType: !144, size: 32)
!12249 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12246, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!12250 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12246, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!12251 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12246, file: !141, line: 386, baseType: !12252, size: 32, offset: 96)
!12252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12253, size: 32)
!12253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !12254)
!12254 = !{!12255, !12256}
!12255 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12253, file: !141, line: 359, baseType: !154, size: 8)
!12256 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12253, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12257 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12246, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!12258 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12246, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!12259 = !DILocation(line: 0, scope: !12240)
!12260 = !DILocation(line: 31, column: 1, scope: !12240)
!12261 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12241, file: !12241, line: 33, type: !12262, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12264)
!12262 = !DISubroutineType(types: !12263)
!12263 = !{!12244, !144}
!12264 = !{!12265, !12266}
!12265 = !DILocalVariable(name: "name", arg: 1, scope: !12261, file: !12241, line: 33, type: !144)
!12266 = !DILocalVariable(name: "dev", scope: !12261, file: !12241, line: 35, type: !12244)
!12267 = !DILocation(line: 0, scope: !12261)
!12268 = !DILocation(line: 40, column: 12, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12261, file: !12241, line: 40, column: 6)
!12270 = !DILocation(line: 40, column: 21, scope: !12269)
!12271 = !DILocation(line: 40, column: 25, scope: !12269)
!12272 = !DILocation(line: 40, column: 33, scope: !12269)
!12273 = !DILocation(line: 40, column: 6, scope: !12261)
!12274 = !DILocation(line: 55, column: 2, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12261, file: !12241, line: 55, column: 2)
!12276 = !DILocation(line: 50, column: 7, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12278, file: !12241, line: 50, column: 7)
!12278 = distinct !DILexicalBlock(scope: !12279, file: !12241, line: 49, column: 57)
!12279 = distinct !DILexicalBlock(scope: !12280, file: !12241, line: 49, column: 2)
!12280 = distinct !DILexicalBlock(scope: !12261, file: !12241, line: 49, column: 2)
!12281 = !DILocation(line: 50, column: 30, scope: !12277)
!12282 = !DILocation(line: 50, column: 39, scope: !12277)
!12283 = !DILocation(line: 50, column: 44, scope: !12277)
!12284 = !DILocation(line: 50, column: 7, scope: !12278)
!12285 = !DILocation(line: 49, column: 53, scope: !12279)
!12286 = !DILocation(line: 49, column: 33, scope: !12279)
!12287 = !DILocation(line: 49, column: 2, scope: !12280)
!12288 = distinct !{!12288, !12287, !12289}
!12289 = !DILocation(line: 53, column: 2, scope: !12280)
!12290 = !DILocation(line: 56, column: 7, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12292, file: !12241, line: 56, column: 7)
!12292 = distinct !DILexicalBlock(scope: !12293, file: !12241, line: 55, column: 57)
!12293 = distinct !DILexicalBlock(scope: !12275, file: !12241, line: 55, column: 2)
!12294 = !DILocation(line: 56, column: 30, scope: !12291)
!12295 = !DILocation(line: 56, column: 52, scope: !12291)
!12296 = !DILocation(line: 56, column: 34, scope: !12291)
!12297 = !DILocation(line: 56, column: 58, scope: !12291)
!12298 = !DILocation(line: 56, column: 7, scope: !12292)
!12299 = !DILocation(line: 55, column: 53, scope: !12293)
!12300 = !DILocation(line: 55, column: 33, scope: !12293)
!12301 = distinct !{!12301, !12274, !12302}
!12302 = !DILocation(line: 59, column: 2, scope: !12275)
!12303 = !DILocation(line: 62, column: 1, scope: !12261)
!12304 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12241, file: !12241, line: 93, type: !12305, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12307)
!12305 = !DISubroutineType(types: !12306)
!12306 = !{!157, !12244}
!12307 = !{!12308}
!12308 = !DILocalVariable(name: "dev", arg: 1, scope: !12304, file: !12241, line: 93, type: !12244)
!12309 = !DILocation(line: 0, scope: !12304)
!12310 = !DILocation(line: 99, column: 10, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12304, file: !12241, line: 99, column: 6)
!12312 = !DILocation(line: 99, column: 6, scope: !12304)
!12313 = !DILocation(line: 103, column: 14, scope: !12304)
!12314 = !DILocation(line: 103, column: 21, scope: !12304)
!12315 = !DILocation(line: 103, column: 33, scope: !12304)
!12316 = !DILocation(line: 103, column: 49, scope: !12304)
!12317 = !DILocation(line: 103, column: 58, scope: !12304)
!12318 = !DILocation(line: 104, column: 1, scope: !12304)
!12319 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12241, file: !12241, line: 87, type: !12320, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12323)
!12320 = !DISubroutineType(types: !12321)
!12321 = !{!204, !12322}
!12322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12244, size: 32)
!12323 = !{!12324}
!12324 = !DILocalVariable(name: "devices", arg: 1, scope: !12319, file: !12241, line: 87, type: !12322)
!12325 = !DILocation(line: 0, scope: !12319)
!12326 = !DILocation(line: 89, column: 11, scope: !12319)
!12327 = !DILocation(line: 90, column: 2, scope: !12319)
!12328 = distinct !DISubprogram(name: "device_required_foreach", scope: !12241, file: !12241, line: 125, type: !12329, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12335)
!12329 = !DISubroutineType(types: !12330)
!12330 = !{!103, !12244, !12331, !102}
!12331 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !12332)
!12332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12333, size: 32)
!12333 = !DISubroutineType(types: !12334)
!12334 = !{!103, !12244, !102}
!12335 = !{!12336, !12337, !12338, !12339, !12340}
!12336 = !DILocalVariable(name: "dev", arg: 1, scope: !12328, file: !12241, line: 125, type: !12244)
!12337 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12328, file: !12241, line: 126, type: !12331)
!12338 = !DILocalVariable(name: "context", arg: 3, scope: !12328, file: !12241, line: 127, type: !102)
!12339 = !DILocalVariable(name: "handle_count", scope: !12328, file: !12241, line: 129, type: !204)
!12340 = !DILocalVariable(name: "handles", scope: !12328, file: !12241, line: 130, type: !160)
!12341 = !DILocation(line: 0, scope: !12328)
!12342 = !DILocation(line: 129, column: 2, scope: !12328)
!12343 = !DILocation(line: 129, column: 9, scope: !12328)
!12344 = !DILocation(line: 130, column: 35, scope: !12328)
!12345 = !DILocation(line: 132, column: 33, scope: !12328)
!12346 = !DILocation(line: 132, column: 9, scope: !12328)
!12347 = !DILocation(line: 133, column: 1, scope: !12328)
!12348 = !DILocation(line: 132, column: 2, scope: !12328)
!12349 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !12350, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12352)
!12350 = !DISubroutineType(types: !12351)
!12351 = !{!160, !12244, !2570}
!12352 = !{!12353, !12354, !12355, !12356}
!12353 = !DILocalVariable(name: "dev", arg: 1, scope: !12349, file: !141, line: 493, type: !12244)
!12354 = !DILocalVariable(name: "count", arg: 2, scope: !12349, file: !141, line: 493, type: !2570)
!12355 = !DILocalVariable(name: "rv", scope: !12349, file: !141, line: 495, type: !160)
!12356 = !DILocalVariable(name: "i", scope: !12357, file: !141, line: 498, type: !204)
!12357 = distinct !DILexicalBlock(scope: !12358, file: !141, line: 497, column: 18)
!12358 = distinct !DILexicalBlock(scope: !12349, file: !141, line: 497, column: 6)
!12359 = !DILocation(line: 0, scope: !12349)
!12360 = !DILocation(line: 495, column: 35, scope: !12349)
!12361 = !DILocation(line: 497, column: 9, scope: !12358)
!12362 = !DILocation(line: 497, column: 6, scope: !12349)
!12363 = !DILocation(line: 0, scope: !12357)
!12364 = !DILocation(line: 500, column: 11, scope: !12357)
!12365 = !DILocation(line: 500, column: 40, scope: !12357)
!12366 = !DILocation(line: 502, column: 4, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12357, file: !141, line: 501, column: 40)
!12368 = distinct !{!12368, !12369, !12370}
!12369 = !DILocation(line: 500, column: 3, scope: !12357)
!12370 = !DILocation(line: 503, column: 3, scope: !12357)
!12371 = !DILocation(line: 504, column: 10, scope: !12357)
!12372 = !DILocation(line: 505, column: 2, scope: !12357)
!12373 = !DILocation(line: 507, column: 2, scope: !12349)
!12374 = distinct !DISubprogram(name: "device_visitor", scope: !12241, file: !12241, line: 106, type: !12375, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12377)
!12375 = !DISubroutineType(types: !12376)
!12376 = !{!103, !160, !204, !12331, !102}
!12377 = !{!12378, !12379, !12380, !12381, !12382, !12384, !12387, !12388}
!12378 = !DILocalVariable(name: "handles", arg: 1, scope: !12374, file: !12241, line: 106, type: !160)
!12379 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12374, file: !12241, line: 107, type: !204)
!12380 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12374, file: !12241, line: 108, type: !12331)
!12381 = !DILocalVariable(name: "context", arg: 4, scope: !12374, file: !12241, line: 109, type: !102)
!12382 = !DILocalVariable(name: "i", scope: !12383, file: !12241, line: 112, type: !204)
!12383 = distinct !DILexicalBlock(scope: !12374, file: !12241, line: 112, column: 2)
!12384 = !DILocalVariable(name: "dh", scope: !12385, file: !12241, line: 113, type: !162)
!12385 = distinct !DILexicalBlock(scope: !12386, file: !12241, line: 112, column: 44)
!12386 = distinct !DILexicalBlock(scope: !12383, file: !12241, line: 112, column: 2)
!12387 = !DILocalVariable(name: "rdev", scope: !12385, file: !12241, line: 114, type: !12244)
!12388 = !DILocalVariable(name: "rc", scope: !12385, file: !12241, line: 115, type: !103)
!12389 = !DILocation(line: 0, scope: !12374)
!12390 = !DILocation(line: 0, scope: !12383)
!12391 = !DILocation(line: 112, column: 23, scope: !12386)
!12392 = !DILocation(line: 112, column: 2, scope: !12383)
!12393 = distinct !{!12393, !12392, !12394}
!12394 = !DILocation(line: 120, column: 2, scope: !12383)
!12395 = !DILocation(line: 113, column: 24, scope: !12385)
!12396 = !DILocation(line: 0, scope: !12385)
!12397 = !DILocation(line: 114, column: 31, scope: !12385)
!12398 = !DILocation(line: 115, column: 12, scope: !12385)
!12399 = !DILocation(line: 117, column: 10, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12385, file: !12241, line: 117, column: 7)
!12401 = !DILocation(line: 112, column: 39, scope: !12386)
!12402 = !DILocation(line: 123, column: 1, scope: !12374)
!12403 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !12404, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12406)
!12404 = !DISubroutineType(types: !12405)
!12405 = !{!12244, !162}
!12406 = !{!12407, !12408, !12409}
!12407 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12403, file: !141, line: 439, type: !162)
!12408 = !DILocalVariable(name: "dev", scope: !12403, file: !141, line: 443, type: !12244)
!12409 = !DILocalVariable(name: "numdev", scope: !12403, file: !141, line: 444, type: !204)
!12410 = !DILocation(line: 0, scope: !12403)
!12411 = !DILocation(line: 446, column: 7, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12403, file: !141, line: 446, column: 6)
!12413 = !DILocation(line: 446, column: 18, scope: !12412)
!12414 = !DILocation(line: 446, column: 23, scope: !12412)
!12415 = !DILocation(line: 450, column: 2, scope: !12403)
!12416 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12241, file: !12241, line: 135, type: !12329, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12417)
!12417 = !{!12418, !12419, !12420, !12421, !12422}
!12418 = !DILocalVariable(name: "dev", arg: 1, scope: !12416, file: !12241, line: 135, type: !12244)
!12419 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12416, file: !12241, line: 136, type: !12331)
!12420 = !DILocalVariable(name: "context", arg: 3, scope: !12416, file: !12241, line: 137, type: !102)
!12421 = !DILocalVariable(name: "handle_count", scope: !12416, file: !12241, line: 139, type: !204)
!12422 = !DILocalVariable(name: "handles", scope: !12416, file: !12241, line: 140, type: !160)
!12423 = !DILocation(line: 0, scope: !12416)
!12424 = !DILocation(line: 139, column: 2, scope: !12416)
!12425 = !DILocation(line: 139, column: 9, scope: !12416)
!12426 = !DILocation(line: 140, column: 35, scope: !12416)
!12427 = !DILocation(line: 142, column: 33, scope: !12416)
!12428 = !DILocation(line: 142, column: 9, scope: !12416)
!12429 = !DILocation(line: 143, column: 1, scope: !12416)
!12430 = !DILocation(line: 142, column: 2, scope: !12416)
!12431 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !12350, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12432)
!12432 = !{!12433, !12434, !12435, !12436, !12437}
!12433 = !DILocalVariable(name: "dev", arg: 1, scope: !12431, file: !141, line: 573, type: !12244)
!12434 = !DILocalVariable(name: "count", arg: 2, scope: !12431, file: !141, line: 573, type: !2570)
!12435 = !DILocalVariable(name: "rv", scope: !12431, file: !141, line: 575, type: !160)
!12436 = !DILocalVariable(name: "region", scope: !12431, file: !141, line: 576, type: !204)
!12437 = !DILocalVariable(name: "i", scope: !12431, file: !141, line: 577, type: !204)
!12438 = !DILocation(line: 0, scope: !12431)
!12439 = !DILocation(line: 575, column: 35, scope: !12431)
!12440 = !DILocation(line: 579, column: 9, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12431, file: !141, line: 579, column: 6)
!12442 = !DILocation(line: 579, column: 6, scope: !12431)
!12443 = !DILocation(line: 582, column: 8, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12445, file: !141, line: 582, column: 8)
!12445 = distinct !DILexicalBlock(scope: !12446, file: !141, line: 581, column: 23)
!12446 = distinct !DILexicalBlock(scope: !12441, file: !141, line: 579, column: 18)
!12447 = !DILocation(line: 582, column: 12, scope: !12444)
!12448 = !DILocation(line: 585, column: 6, scope: !12445)
!12449 = !DILocation(line: 0, scope: !12446)
!12450 = !DILocation(line: 581, column: 17, scope: !12446)
!12451 = !DILocation(line: 581, column: 3, scope: !12446)
!12452 = !DILocation(line: 588, column: 10, scope: !12446)
!12453 = !DILocation(line: 588, column: 16, scope: !12446)
!12454 = !DILocation(line: 589, column: 4, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12446, file: !141, line: 588, column: 39)
!12456 = !DILocation(line: 588, column: 3, scope: !12446)
!12457 = distinct !{!12457, !12456, !12458}
!12458 = !DILocation(line: 590, column: 3, scope: !12446)
!12459 = !DILocation(line: 591, column: 10, scope: !12446)
!12460 = !DILocation(line: 592, column: 2, scope: !12446)
!12461 = !DILocation(line: 575, column: 25, scope: !12431)
!12462 = !DILocation(line: 594, column: 2, scope: !12431)
!12463 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1926, file: !1926, line: 49, type: !12464, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !317)
!12464 = !DISubroutineType(types: !12465)
!12465 = !{!2564}
!12466 = !DILocation(line: 51, column: 10, scope: !12463)
!12467 = !DILocation(line: 51, column: 20, scope: !12463)
!12468 = !DILocation(line: 51, column: 2, scope: !12463)
!12469 = distinct !DISubprogram(name: "coredump", scope: !3081, file: !3081, line: 209, type: !12470, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12616)
!12470 = !DISubroutineType(types: !12471)
!12471 = !{null, !32, !12472, !12516}
!12472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12473, size: 32)
!12473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12474)
!12474 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2695, line: 141, baseType: !12475)
!12475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2695, line: 97, size: 256, elements: !12476)
!12476 = !{!12477}
!12477 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12475, file: !2695, line: 107, baseType: !12478, size: 256)
!12478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2695, line: 98, size: 256, elements: !12479)
!12479 = !{!12480, !12485, !12490, !12495, !12500, !12505, !12510, !12515}
!12480 = !DIDerivedType(tag: DW_TAG_member, scope: !12478, file: !2695, line: 99, baseType: !12481, size: 32)
!12481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12478, file: !2695, line: 99, size: 32, elements: !12482)
!12482 = !{!12483, !12484}
!12483 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12481, file: !2695, line: 99, baseType: !121, size: 32)
!12484 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12481, file: !2695, line: 99, baseType: !121, size: 32)
!12485 = !DIDerivedType(tag: DW_TAG_member, scope: !12478, file: !2695, line: 100, baseType: !12486, size: 32, offset: 32)
!12486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12478, file: !2695, line: 100, size: 32, elements: !12487)
!12487 = !{!12488, !12489}
!12488 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12486, file: !2695, line: 100, baseType: !121, size: 32)
!12489 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12486, file: !2695, line: 100, baseType: !121, size: 32)
!12490 = !DIDerivedType(tag: DW_TAG_member, scope: !12478, file: !2695, line: 101, baseType: !12491, size: 32, offset: 64)
!12491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12478, file: !2695, line: 101, size: 32, elements: !12492)
!12492 = !{!12493, !12494}
!12493 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12491, file: !2695, line: 101, baseType: !121, size: 32)
!12494 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12491, file: !2695, line: 101, baseType: !121, size: 32)
!12495 = !DIDerivedType(tag: DW_TAG_member, scope: !12478, file: !2695, line: 102, baseType: !12496, size: 32, offset: 96)
!12496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12478, file: !2695, line: 102, size: 32, elements: !12497)
!12497 = !{!12498, !12499}
!12498 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12496, file: !2695, line: 102, baseType: !121, size: 32)
!12499 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12496, file: !2695, line: 102, baseType: !121, size: 32)
!12500 = !DIDerivedType(tag: DW_TAG_member, scope: !12478, file: !2695, line: 103, baseType: !12501, size: 32, offset: 128)
!12501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12478, file: !2695, line: 103, size: 32, elements: !12502)
!12502 = !{!12503, !12504}
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12501, file: !2695, line: 103, baseType: !121, size: 32)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12501, file: !2695, line: 103, baseType: !121, size: 32)
!12505 = !DIDerivedType(tag: DW_TAG_member, scope: !12478, file: !2695, line: 104, baseType: !12506, size: 32, offset: 160)
!12506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12478, file: !2695, line: 104, size: 32, elements: !12507)
!12507 = !{!12508, !12509}
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12506, file: !2695, line: 104, baseType: !121, size: 32)
!12509 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12506, file: !2695, line: 104, baseType: !121, size: 32)
!12510 = !DIDerivedType(tag: DW_TAG_member, scope: !12478, file: !2695, line: 105, baseType: !12511, size: 32, offset: 192)
!12511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12478, file: !2695, line: 105, size: 32, elements: !12512)
!12512 = !{!12513, !12514}
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12511, file: !2695, line: 105, baseType: !121, size: 32)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12511, file: !2695, line: 105, baseType: !121, size: 32)
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12478, file: !2695, line: 106, baseType: !121, size: 32, offset: 224)
!12516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12517, size: 32)
!12517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !12518)
!12518 = !{!12519, !12577, !12589, !12590, !12591, !12592, !12598, !12611}
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12517, file: !379, line: 247, baseType: !12520, size: 384)
!12520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !12521)
!12521 = !{!12522, !12546, !12553, !12554, !12555, !12564, !12565, !12566}
!12522 = !DIDerivedType(tag: DW_TAG_member, scope: !12520, file: !379, line: 60, baseType: !12523, size: 64)
!12523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12520, file: !379, line: 60, size: 64, elements: !12524)
!12524 = !{!12525, !12540}
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12523, file: !379, line: 61, baseType: !12526, size: 64)
!12526 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !12527)
!12527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !12528)
!12528 = !{!12529, !12535}
!12529 = !DIDerivedType(tag: DW_TAG_member, scope: !12527, file: !325, line: 38, baseType: !12530, size: 32)
!12530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12527, file: !325, line: 38, size: 32, elements: !12531)
!12531 = !{!12532, !12534}
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12530, file: !325, line: 39, baseType: !12533, size: 32)
!12533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12527, size: 32)
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12530, file: !325, line: 40, baseType: !12533, size: 32)
!12535 = !DIDerivedType(tag: DW_TAG_member, scope: !12527, file: !325, line: 42, baseType: !12536, size: 32, offset: 32)
!12536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12527, file: !325, line: 42, size: 32, elements: !12537)
!12537 = !{!12538, !12539}
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12536, file: !325, line: 43, baseType: !12533, size: 32)
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12536, file: !325, line: 44, baseType: !12533, size: 32)
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12523, file: !379, line: 62, baseType: !12541, size: 64)
!12541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !12542)
!12542 = !{!12543}
!12543 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12541, file: !404, line: 50, baseType: !12544, size: 64)
!12544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12545, size: 64, elements: !363)
!12545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12541, size: 32)
!12546 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12520, file: !379, line: 68, baseType: !12547, size: 32, offset: 64)
!12547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12548, size: 32)
!12548 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !12549)
!12549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !12550)
!12550 = !{!12551}
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12549, file: !320, line: 232, baseType: !12552, size: 64)
!12552 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !12527)
!12553 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12520, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12520, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!12555 = !DIDerivedType(tag: DW_TAG_member, scope: !12520, file: !379, line: 90, baseType: !12556, size: 16, offset: 112)
!12556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12520, file: !379, line: 90, size: 16, elements: !12557)
!12557 = !{!12558, !12563}
!12558 = !DIDerivedType(tag: DW_TAG_member, scope: !12556, file: !379, line: 91, baseType: !12559, size: 16)
!12559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12556, file: !379, line: 91, size: 16, elements: !12560)
!12560 = !{!12561, !12562}
!12561 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12559, file: !379, line: 96, baseType: !425, size: 8)
!12562 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12559, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!12563 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12556, file: !379, line: 100, baseType: !429, size: 16)
!12564 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12520, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!12565 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12520, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!12566 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12520, file: !379, line: 131, baseType: !12567, size: 192, offset: 192)
!12567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !12568)
!12568 = !{!12569, !12570, !12576}
!12569 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12567, file: !320, line: 245, baseType: !12526, size: 64)
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12567, file: !320, line: 246, baseType: !12571, size: 32, offset: 64)
!12571 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !12572)
!12572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12573, size: 32)
!12573 = !DISubroutineType(types: !12574)
!12574 = !{null, !12575}
!12575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12567, size: 32)
!12576 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12567, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!12577 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12517, file: !379, line: 250, baseType: !12578, size: 288, offset: 384)
!12578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !12579)
!12579 = !{!12580, !12581, !12582, !12583, !12584, !12585, !12586, !12587, !12588}
!12580 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12578, file: !446, line: 26, baseType: !121, size: 32)
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12578, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!12582 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12578, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!12583 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12578, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!12584 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12578, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!12585 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12578, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!12586 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12578, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!12587 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12578, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12578, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12517, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12517, file: !379, line: 256, baseType: !12548, size: 64, offset: 704)
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12517, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!12592 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12517, file: !379, line: 300, baseType: !12593, size: 96, offset: 800)
!12593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !12594)
!12594 = !{!12595, !12596, !12597}
!12595 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12593, file: !379, line: 153, baseType: !22, size: 32)
!12596 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12593, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!12597 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12593, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12517, file: !379, line: 325, baseType: !12599, size: 32, offset: 896)
!12599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12600, size: 32)
!12600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !12601)
!12601 = !{!12602, !12608, !12609}
!12602 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12600, file: !296, line: 5074, baseType: !12603, size: 96)
!12603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !12604)
!12604 = !{!12605, !12606, !12607}
!12605 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12603, file: !472, line: 57, baseType: !475, size: 32)
!12606 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12603, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12603, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12600, file: !296, line: 5075, baseType: !12548, size: 64, offset: 96)
!12609 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12600, file: !296, line: 5076, baseType: !12610, offset: 160)
!12610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!12611 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12517, file: !379, line: 343, baseType: !12612, size: 64, offset: 928)
!12612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !12613)
!12613 = !{!12614, !12615}
!12614 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12612, file: !446, line: 63, baseType: !121, size: 32)
!12615 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12612, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!12616 = !{!12617, !12618, !12619}
!12617 = !DILocalVariable(name: "reason", arg: 1, scope: !12469, file: !3081, line: 209, type: !32)
!12618 = !DILocalVariable(name: "esf", arg: 2, scope: !12469, file: !3081, line: 209, type: !12472)
!12619 = !DILocalVariable(name: "thread", arg: 3, scope: !12469, file: !3081, line: 210, type: !12516)
!12620 = !DILocation(line: 0, scope: !12469)
!12621 = !DILocation(line: 212, column: 1, scope: !12469)
!12622 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3081, file: !3081, line: 214, type: !12623, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12625)
!12623 = !DISubroutineType(types: !12624)
!12624 = !{null, !22, !22}
!12625 = !{!12626, !12627}
!12626 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12622, file: !3081, line: 214, type: !22)
!12627 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12622, file: !3081, line: 214, type: !22)
!12628 = !DILocation(line: 0, scope: !12622)
!12629 = !DILocation(line: 216, column: 1, scope: !12622)
!12630 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3081, file: !3081, line: 218, type: !12631, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12633)
!12631 = !DISubroutineType(types: !12632)
!12632 = !{null, !267, !204}
!12633 = !{!12634, !12635}
!12634 = !DILocalVariable(name: "buf", arg: 1, scope: !12630, file: !3081, line: 218, type: !267)
!12635 = !DILocalVariable(name: "buflen", arg: 2, scope: !12630, file: !3081, line: 218, type: !204)
!12636 = !DILocation(line: 0, scope: !12630)
!12637 = !DILocation(line: 220, column: 1, scope: !12630)
!12638 = distinct !DISubprogram(name: "coredump_query", scope: !3081, file: !3081, line: 222, type: !12639, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12641)
!12639 = !DISubroutineType(types: !12640)
!12640 = !{!103, !3080, !102}
!12641 = !{!12642, !12643}
!12642 = !DILocalVariable(name: "query_id", arg: 1, scope: !12638, file: !3081, line: 222, type: !3080)
!12643 = !DILocalVariable(name: "arg", arg: 2, scope: !12638, file: !3081, line: 222, type: !102)
!12644 = !DILocation(line: 0, scope: !12638)
!12645 = !DILocation(line: 224, column: 2, scope: !12638)
!12646 = distinct !DISubprogram(name: "coredump_cmd", scope: !3081, file: !3081, line: 227, type: !12647, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12649)
!12647 = !DISubroutineType(types: !12648)
!12648 = !{!103, !3087, !102}
!12649 = !{!12650, !12651}
!12650 = !DILocalVariable(name: "query_id", arg: 1, scope: !12646, file: !3081, line: 227, type: !3087)
!12651 = !DILocalVariable(name: "arg", arg: 2, scope: !12646, file: !3081, line: 227, type: !102)
!12652 = !DILocation(line: 0, scope: !12646)
!12653 = !DILocation(line: 229, column: 2, scope: !12646)
!12654 = distinct !DISubprogram(name: "arch_system_halt", scope: !12655, file: !12655, line: 23, type: !5715, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12656)
!12655 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12656 = !{!12657}
!12657 = !DILocalVariable(name: "reason", arg: 1, scope: !12654, file: !12655, line: 23, type: !32)
!12658 = !DILocation(line: 0, scope: !12654)
!12659 = !DILocation(line: 55, column: 2, scope: !12660, inlinedAt: !12664)
!12660 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5704, file: !5704, line: 42, type: !5705, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12661)
!12661 = !{!12662, !12663}
!12662 = !DILocalVariable(name: "key", scope: !12660, file: !5704, line: 44, type: !32)
!12663 = !DILocalVariable(name: "tmp", scope: !12660, file: !5704, line: 53, type: !32)
!12664 = distinct !DILocation(line: 31, column: 8, scope: !12654)
!12665 = !{i64 1949797}
!12666 = !DILocation(line: 0, scope: !12660, inlinedAt: !12664)
!12667 = !DILocation(line: 32, column: 2, scope: !12654)
!12668 = !DILocation(line: 32, column: 2, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !12655, line: 32, column: 2)
!12670 = distinct !DILexicalBlock(scope: !12654, file: !12655, line: 32, column: 2)
!12671 = distinct !{!12671, !12672, !12673}
!12672 = !DILocation(line: 32, column: 2, scope: !12670)
!12673 = !DILocation(line: 34, column: 2, scope: !12670)
!12674 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12655, file: !12655, line: 39, type: !12675, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12677)
!12675 = !DISubroutineType(types: !12676)
!12676 = !{null, !32, !12472}
!12677 = !{!12678, !12679}
!12678 = !DILocalVariable(name: "reason", arg: 1, scope: !12674, file: !12655, line: 39, type: !32)
!12679 = !DILocalVariable(name: "esf", arg: 2, scope: !12674, file: !12655, line: 40, type: !12472)
!12680 = !DILocation(line: 0, scope: !12674)
!12681 = !DILocation(line: 46, column: 2, scope: !12674)
!12682 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12655, file: !12655, line: 81, type: !5715, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12683)
!12683 = !{!12684}
!12684 = !DILocalVariable(name: "reason", arg: 1, scope: !12682, file: !12655, line: 81, type: !32)
!12685 = !DILocation(line: 0, scope: !12682)
!12686 = !DILocation(line: 83, column: 2, scope: !12682)
!12687 = distinct !DISubprogram(name: "z_fatal_error", scope: !12655, file: !12655, line: 96, type: !12675, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12688)
!12688 = !{!12689, !12690, !12691, !12692}
!12689 = !DILocalVariable(name: "reason", arg: 1, scope: !12687, file: !12655, line: 96, type: !32)
!12690 = !DILocalVariable(name: "esf", arg: 2, scope: !12687, file: !12655, line: 96, type: !12472)
!12691 = !DILocalVariable(name: "key", scope: !12687, file: !12655, line: 102, type: !32)
!12692 = !DILocalVariable(name: "thread", scope: !12687, file: !12655, line: 103, type: !12516)
!12693 = !DILocation(line: 0, scope: !12687)
!12694 = !DILocation(line: 55, column: 2, scope: !12660, inlinedAt: !12695)
!12695 = distinct !DILocation(line: 102, column: 21, scope: !12687)
!12696 = !DILocation(line: 0, scope: !12660, inlinedAt: !12695)
!12697 = !DILocation(line: 119, column: 11, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12687, file: !12655, line: 119, column: 6)
!12699 = !DILocation(line: 119, column: 20, scope: !12698)
!12700 = !DILocation(line: 131, column: 2, scope: !12687)
!12701 = !DILocation(line: 151, column: 7, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12703, file: !12655, line: 146, column: 32)
!12703 = distinct !DILexicalBlock(scope: !12687, file: !12655, line: 146, column: 6)
!12704 = !DILocation(line: 151, column: 21, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12702, file: !12655, line: 151, column: 7)
!12706 = !DILocation(line: 104, column: 4, scope: !12687)
!12707 = !DILocalVariable(name: "key", arg: 1, scope: !12708, file: !5704, line: 84, type: !32)
!12708 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5704, file: !5704, line: 84, type: !5715, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12709)
!12709 = !{!12707}
!12710 = !DILocation(line: 0, scope: !12708, inlinedAt: !12711)
!12711 = distinct !DILocation(line: 186, column: 2, scope: !12687)
!12712 = !DILocation(line: 95, column: 2, scope: !12708, inlinedAt: !12711)
!12713 = !{i64 1950614}
!12714 = !DILocation(line: 189, column: 3, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12716, file: !12655, line: 188, column: 41)
!12716 = distinct !DILexicalBlock(scope: !12687, file: !12655, line: 188, column: 6)
!12717 = !DILocation(line: 191, column: 1, scope: !12687)
!12718 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !12719, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !317)
!12719 = !DISubroutineType(types: !12720)
!12720 = !{!12721}
!12721 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !12516)
!12722 = !DILocation(line: 535, column: 9, scope: !12718)
!12723 = !DILocation(line: 535, column: 2, scope: !12718)
!12724 = distinct !DISubprogram(name: "k_thread_abort", scope: !3593, file: !3593, line: 188, type: !12725, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !12727)
!12725 = !DISubroutineType(types: !12726)
!12726 = !{null, !12721}
!12727 = !{!12728}
!12728 = !DILocalVariable(name: "thread", arg: 1, scope: !12724, file: !3593, line: 188, type: !12721)
!12729 = !DILocation(line: 0, scope: !12724)
!12730 = !DILocation(line: 197, column: 2, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12724, file: !3593, line: 197, column: 2)
!12732 = !{i64 2154064837}
!12733 = !DILocation(line: 198, column: 2, scope: !12724)
!12734 = !DILocation(line: 199, column: 1, scope: !12724)
!12735 = distinct !DISubprogram(name: "z_current_get", scope: !3593, file: !3593, line: 173, type: !12719, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !317)
!12736 = !DILocation(line: 180, column: 2, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12735, file: !3593, line: 180, column: 2)
!12738 = !{i64 2154064769}
!12739 = !DILocation(line: 181, column: 9, scope: !12735)
!12740 = !DILocation(line: 181, column: 2, scope: !12735)
!12741 = distinct !DISubprogram(name: "z_early_memset", scope: !1933, file: !1933, line: 108, type: !12742, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12744)
!12742 = !DISubroutineType(types: !12743)
!12743 = !{null, !102, !103, !204}
!12744 = !{!12745, !12746, !12747}
!12745 = !DILocalVariable(name: "dst", arg: 1, scope: !12741, file: !1933, line: 108, type: !102)
!12746 = !DILocalVariable(name: "c", arg: 2, scope: !12741, file: !1933, line: 108, type: !103)
!12747 = !DILocalVariable(name: "n", arg: 3, scope: !12741, file: !1933, line: 108, type: !204)
!12748 = !DILocation(line: 0, scope: !12741)
!12749 = !DILocation(line: 110, column: 9, scope: !12741)
!12750 = !DILocation(line: 111, column: 1, scope: !12741)
!12751 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1933, file: !1933, line: 121, type: !12752, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12754)
!12752 = !DISubroutineType(types: !12753)
!12753 = !{null, !102, !13, !204}
!12754 = !{!12755, !12756, !12757}
!12755 = !DILocalVariable(name: "dst", arg: 1, scope: !12751, file: !1933, line: 121, type: !102)
!12756 = !DILocalVariable(name: "src", arg: 2, scope: !12751, file: !1933, line: 121, type: !13)
!12757 = !DILocalVariable(name: "n", arg: 3, scope: !12751, file: !1933, line: 121, type: !204)
!12758 = !DILocation(line: 0, scope: !12751)
!12759 = !DILocation(line: 123, column: 9, scope: !12751)
!12760 = !DILocation(line: 124, column: 1, scope: !12751)
!12761 = distinct !DISubprogram(name: "z_bss_zero", scope: !1933, file: !1933, line: 132, type: !3157, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !317)
!12762 = !DILocation(line: 143, column: 2, scope: !12761)
!12763 = !DILocation(line: 168, column: 1, scope: !12761)
!12764 = distinct !DISubprogram(name: "z_init_cpu", scope: !1933, file: !1933, line: 372, type: !7563, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12765)
!12765 = !{!12766}
!12766 = !DILocalVariable(name: "id", arg: 1, scope: !12764, file: !1933, line: 372, type: !103)
!12767 = !DILocation(line: 0, scope: !12764)
!12768 = !DILocation(line: 374, column: 2, scope: !12764)
!12769 = !DILocation(line: 375, column: 34, scope: !12764)
!12770 = !DILocation(line: 375, column: 19, scope: !12764)
!12771 = !DILocation(line: 375, column: 31, scope: !12764)
!12772 = !DILocation(line: 376, column: 24, scope: !12764)
!12773 = !DILocation(line: 376, column: 19, scope: !12764)
!12774 = !DILocation(line: 376, column: 22, scope: !12764)
!12775 = !DILocation(line: 378, column: 26, scope: !12764)
!12776 = !DILocation(line: 378, column: 4, scope: !12764)
!12777 = !DILocation(line: 378, column: 50, scope: !12764)
!12778 = !DILocation(line: 377, column: 19, scope: !12764)
!12779 = !DILocation(line: 377, column: 29, scope: !12764)
!12780 = !DILocation(line: 384, column: 1, scope: !12764)
!12781 = distinct !DISubprogram(name: "init_idle_thread", scope: !1933, file: !1933, line: 343, type: !7563, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12782)
!12782 = !{!12783, !12784, !12785, !12788}
!12783 = !DILocalVariable(name: "i", arg: 1, scope: !12781, file: !1933, line: 343, type: !103)
!12784 = !DILocalVariable(name: "thread", scope: !12781, file: !1933, line: 345, type: !2025)
!12785 = !DILocalVariable(name: "stack", scope: !12781, file: !1933, line: 346, type: !12786)
!12786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12787, size: 32)
!12787 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3472, line: 44, baseType: !2139)
!12788 = !DILocalVariable(name: "tname", scope: !12781, file: !1933, line: 358, type: !344)
!12789 = !DILocation(line: 0, scope: !12781)
!12790 = !DILocation(line: 345, column: 29, scope: !12781)
!12791 = !DILocation(line: 346, column: 28, scope: !12781)
!12792 = !DILocation(line: 362, column: 37, scope: !12781)
!12793 = !DILocation(line: 362, column: 36, scope: !12781)
!12794 = !DILocation(line: 361, column: 2, scope: !12781)
!12795 = !DILocation(line: 365, column: 2, scope: !12781)
!12796 = !DILocation(line: 370, column: 1, scope: !12781)
!12797 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2140, file: !2140, line: 331, type: !12798, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12800)
!12798 = !DISubroutineType(types: !12799)
!12799 = !{!344, !12786}
!12800 = !{!12801}
!12801 = !DILocalVariable(name: "sym", arg: 1, scope: !12797, file: !2140, line: 331, type: !12786)
!12802 = !DILocation(line: 0, scope: !12797)
!12803 = !DILocation(line: 333, column: 21, scope: !12797)
!12804 = !DILocation(line: 333, column: 2, scope: !12797)
!12805 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12806, file: !12806, line: 155, type: !12807, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12809)
!12806 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12807 = !DISubroutineType(types: !12808)
!12808 = !{null, !2025}
!12809 = !{!12810}
!12810 = !DILocalVariable(name: "thread", arg: 1, scope: !12805, file: !12806, line: 155, type: !2025)
!12811 = !DILocation(line: 0, scope: !12805)
!12812 = !DILocation(line: 157, column: 15, scope: !12805)
!12813 = !DILocation(line: 157, column: 28, scope: !12805)
!12814 = !DILocation(line: 158, column: 1, scope: !12805)
!12815 = distinct !DISubprogram(name: "z_cstart", scope: !1933, file: !1933, line: 501, type: !3157, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12816)
!12816 = !{!12817}
!12817 = !DILocalVariable(name: "dummy_thread", scope: !12815, file: !1933, line: 518, type: !2026)
!12818 = !DILocation(line: 507, column: 2, scope: !12815)
!12819 = !DILocation(line: 43, column: 14, scope: !12820, inlinedAt: !12824)
!12820 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12821, file: !12821, line: 40, type: !3157, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12822)
!12821 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12822 = !{!12823}
!12823 = !DILocalVariable(name: "msp", scope: !12820, file: !12821, line: 42, type: !121)
!12824 = distinct !DILocation(line: 44, column: 2, scope: !12825, inlinedAt: !12827)
!12825 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12826, file: !12826, line: 42, type: !3157, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !317)
!12826 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12827 = distinct !DILocation(line: 510, column: 2, scope: !12815)
!12828 = !DILocation(line: 43, column: 3, scope: !12820, inlinedAt: !12824)
!12829 = !DILocation(line: 43, column: 60, scope: !12820, inlinedAt: !12824)
!12830 = !DILocation(line: 0, scope: !12820, inlinedAt: !12824)
!12831 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12832, file: !5919, line: 1153, type: !121)
!12832 = distinct !DISubprogram(name: "__set_MSP", scope: !5919, file: !5919, line: 1153, type: !6010, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12833)
!12833 = !{!12831}
!12834 = !DILocation(line: 0, scope: !12832, inlinedAt: !12835)
!12835 = distinct !DILocation(line: 46, column: 2, scope: !12820, inlinedAt: !12824)
!12836 = !DILocation(line: 1155, column: 3, scope: !12832, inlinedAt: !12835)
!12837 = !{i64 2847041}
!12838 = !DILocation(line: 62, column: 11, scope: !12820, inlinedAt: !12824)
!12839 = !DILocation(line: 102, column: 2, scope: !12840, inlinedAt: !12841)
!12840 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6713, file: !6713, line: 97, type: !3157, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !317)
!12841 = distinct !DILocation(line: 45, column: 2, scope: !12825, inlinedAt: !12827)
!12842 = !DILocation(line: 108, column: 2, scope: !12840, inlinedAt: !12841)
!12843 = !DILocation(line: 112, column: 2, scope: !12840, inlinedAt: !12841)
!12844 = !DILocation(line: 113, column: 2, scope: !12840, inlinedAt: !12841)
!12845 = !DILocation(line: 114, column: 2, scope: !12840, inlinedAt: !12841)
!12846 = !DILocation(line: 116, column: 2, scope: !12840, inlinedAt: !12841)
!12847 = !DILocation(line: 123, column: 13, scope: !12840, inlinedAt: !12841)
!12848 = !DILocation(line: 46, column: 2, scope: !12825, inlinedAt: !12827)
!12849 = !DILocation(line: 47, column: 2, scope: !12825, inlinedAt: !12827)
!12850 = !DILocation(line: 174, column: 12, scope: !12851, inlinedAt: !12852)
!12851 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6713, file: !6713, line: 169, type: !3157, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !317)
!12852 = distinct !DILocation(line: 48, column: 2, scope: !12825, inlinedAt: !12827)
!12853 = !DILocation(line: 179, column: 12, scope: !12851, inlinedAt: !12852)
!12854 = !DILocation(line: 50, column: 2, scope: !12825, inlinedAt: !12827)
!12855 = !DILocation(line: 57, column: 2, scope: !12825, inlinedAt: !12827)
!12856 = !DILocation(line: 518, column: 2, scope: !12815)
!12857 = !DILocation(line: 518, column: 18, scope: !12815)
!12858 = !DILocation(line: 520, column: 2, scope: !12815)
!12859 = !DILocation(line: 523, column: 2, scope: !12815)
!12860 = !DILocation(line: 526, column: 2, scope: !12815)
!12861 = !DILocation(line: 527, column: 2, scope: !12815)
!12862 = !DILocation(line: 543, column: 24, scope: !12815)
!12863 = !DILocation(line: 543, column: 2, scope: !12815)
!12864 = !DILocation(line: 0, scope: !2159)
!12865 = !DILocation(line: 246, column: 15, scope: !2177)
!12866 = !DILocation(line: 246, column: 36, scope: !2176)
!12867 = !DILocation(line: 246, column: 2, scope: !2177)
!12868 = !DILocation(line: 247, column: 37, scope: !2175)
!12869 = !DILocation(line: 0, scope: !2175)
!12870 = !DILocation(line: 248, column: 19, scope: !2175)
!12871 = !DILocation(line: 248, column: 12, scope: !2175)
!12872 = !DILocation(line: 250, column: 11, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !2175, file: !1933, line: 250, column: 7)
!12874 = !DILocation(line: 250, column: 7, scope: !2175)
!12875 = !DILocation(line: 254, column: 11, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12877, file: !1933, line: 254, column: 8)
!12877 = distinct !DILexicalBlock(scope: !12873, file: !1933, line: 250, column: 20)
!12878 = !DILocation(line: 254, column: 8, scope: !12877)
!12879 = !DILocation(line: 255, column: 9, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12876, file: !1933, line: 254, column: 17)
!12881 = !DILocation(line: 258, column: 9, scope: !12880)
!12882 = !DILocation(line: 261, column: 28, scope: !12880)
!12883 = !DILocation(line: 261, column: 10, scope: !12880)
!12884 = !DILocation(line: 261, column: 17, scope: !12880)
!12885 = !DILocation(line: 261, column: 26, scope: !12880)
!12886 = !DILocation(line: 262, column: 4, scope: !12880)
!12887 = !DILocation(line: 263, column: 9, scope: !12877)
!12888 = !DILocation(line: 263, column: 16, scope: !12877)
!12889 = !DILocation(line: 263, column: 28, scope: !12877)
!12890 = !DILocation(line: 264, column: 3, scope: !12877)
!12891 = !DILocation(line: 246, column: 60, scope: !2176)
!12892 = distinct !{!12892, !12867, !12893}
!12893 = !DILocation(line: 265, column: 2, scope: !2177)
!12894 = !DILocation(line: 266, column: 1, scope: !2159)
!12895 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5953, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12896)
!12896 = !{!12897, !12898}
!12897 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12895, file: !515, line: 1814, type: !751)
!12898 = !DILocalVariable(name: "priority", arg: 2, scope: !12895, file: !515, line: 1814, type: !121)
!12899 = !DILocation(line: 0, scope: !12895)
!12900 = !DILocation(line: 1822, column: 48, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12902, file: !515, line: 1821, column: 3)
!12902 = distinct !DILexicalBlock(scope: !12895, file: !515, line: 1816, column: 7)
!12903 = !DILocation(line: 1822, column: 32, scope: !12901)
!12904 = !DILocation(line: 1822, column: 40, scope: !12901)
!12905 = !DILocation(line: 1822, column: 5, scope: !12901)
!12906 = !DILocation(line: 1822, column: 46, scope: !12901)
!12907 = !DILocation(line: 1824, column: 1, scope: !12895)
!12908 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12826, file: !12826, line: 32, type: !3157, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!12909 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12910, file: !12910, line: 215, type: !12807, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12911)
!12910 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12911 = !{!12912}
!12912 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12909, file: !12910, line: 215, type: !2025)
!12913 = !DILocation(line: 0, scope: !12909)
!12914 = !DILocation(line: 217, column: 21, scope: !12909)
!12915 = !DILocation(line: 217, column: 34, scope: !12909)
!12916 = !DILocation(line: 221, column: 21, scope: !12909)
!12917 = !DILocation(line: 221, column: 34, scope: !12909)
!12918 = !DILocation(line: 223, column: 27, scope: !12909)
!12919 = !DILocation(line: 223, column: 33, scope: !12909)
!12920 = !DILocation(line: 224, column: 27, scope: !12909)
!12921 = !DILocation(line: 224, column: 32, scope: !12909)
!12922 = !DILocation(line: 232, column: 16, scope: !12909)
!12923 = !DILocation(line: 232, column: 30, scope: !12909)
!12924 = !DILocation(line: 239, column: 24, scope: !12909)
!12925 = !DILocation(line: 240, column: 1, scope: !12909)
!12926 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1933, file: !1933, line: 399, type: !342, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12927)
!12927 = !{!12928}
!12928 = !DILocalVariable(name: "stack_ptr", scope: !12926, file: !1933, line: 401, type: !344)
!12929 = !DILocation(line: 404, column: 2, scope: !12926)
!12930 = !DILocation(line: 416, column: 24, scope: !12926)
!12931 = !DILocation(line: 418, column: 14, scope: !12926)
!12932 = !DILocation(line: 0, scope: !12926)
!12933 = !DILocation(line: 423, column: 2, scope: !12926)
!12934 = !DILocation(line: 424, column: 2, scope: !12926)
!12935 = !DILocation(line: 426, column: 2, scope: !12926)
!12936 = !DILocation(line: 428, column: 2, scope: !12926)
!12937 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1933, file: !1933, line: 432, type: !12938, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12940)
!12938 = !DISubroutineType(types: !12939)
!12939 = !{null, !344}
!12940 = !{!12941}
!12941 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12937, file: !1933, line: 432, type: !344)
!12942 = !DILocation(line: 0, scope: !12937)
!12943 = !DILocation(line: 435, column: 2, scope: !12937)
!12944 = !DILocation(line: 445, column: 2, scope: !12937)
!12945 = distinct !DISubprogram(name: "bg_thread_main", scope: !1933, file: !1933, line: 277, type: !3474, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !12946)
!12946 = !{!12947, !12948, !12949}
!12947 = !DILocalVariable(name: "unused1", arg: 1, scope: !12945, file: !1933, line: 277, type: !102)
!12948 = !DILocalVariable(name: "unused2", arg: 2, scope: !12945, file: !1933, line: 277, type: !102)
!12949 = !DILocalVariable(name: "unused3", arg: 3, scope: !12945, file: !1933, line: 277, type: !102)
!12950 = !DILocation(line: 0, scope: !12945)
!12951 = !DILocation(line: 291, column: 20, scope: !12945)
!12952 = !DILocation(line: 293, column: 2, scope: !12945)
!12953 = !DILocation(line: 297, column: 2, scope: !12945)
!12954 = !DILocation(line: 305, column: 2, scope: !12945)
!12955 = !DILocation(line: 307, column: 2, scope: !12945)
!12956 = !DILocation(line: 330, column: 8, scope: !12945)
!12957 = !DILocation(line: 333, column: 34, scope: !12945)
!12958 = !DILocation(line: 339, column: 1, scope: !12945)
!12959 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2188, file: !2188, line: 45, type: !12960, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !12968)
!12960 = !DISubroutineType(types: !12961)
!12961 = !{null, !12962, !102}
!12962 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !296, line: 103, baseType: !12963)
!12963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12964, size: 32)
!12964 = !DISubroutineType(types: !12965)
!12965 = !{null, !12966, !102}
!12966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12967, size: 32)
!12967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2193)
!12968 = !{!12969, !12970}
!12969 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12959, file: !2188, line: 45, type: !12962)
!12970 = !DILocalVariable(name: "user_data", arg: 2, scope: !12959, file: !2188, line: 45, type: !102)
!12971 = !DILocation(line: 0, scope: !12959)
!12972 = !DILocation(line: 71, column: 1, scope: !12959)
!12973 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2188, file: !2188, line: 73, type: !12960, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !12974)
!12974 = !{!12975, !12976}
!12975 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12973, file: !2188, line: 73, type: !12962)
!12976 = !DILocalVariable(name: "user_data", arg: 2, scope: !12973, file: !2188, line: 73, type: !102)
!12977 = !DILocation(line: 0, scope: !12973)
!12978 = !DILocation(line: 95, column: 1, scope: !12973)
!12979 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2188, file: !2188, line: 97, type: !6714, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !317)
!12980 = !DILocation(line: 1031, column: 3, scope: !12981, inlinedAt: !12984)
!12981 = distinct !DISubprogram(name: "__get_IPSR", scope: !5919, file: !5919, line: 1027, type: !6000, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !12982)
!12982 = !{!12983}
!12983 = !DILocalVariable(name: "result", scope: !12981, file: !5919, line: 1029, type: !121)
!12984 = distinct !DILocation(line: 48, column: 10, scope: !12985, inlinedAt: !12986)
!12985 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6713, file: !6713, line: 46, type: !6714, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !317)
!12986 = distinct !DILocation(line: 99, column: 9, scope: !12979)
!12987 = !{i64 2852692}
!12988 = !DILocation(line: 0, scope: !12981, inlinedAt: !12984)
!12989 = !DILocation(line: 48, column: 9, scope: !12985, inlinedAt: !12986)
!12990 = !DILocation(line: 99, column: 2, scope: !12979)
!12991 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2188, file: !2188, line: 106, type: !3157, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !317)
!12992 = !DILocation(line: 108, column: 2, scope: !12991)
!12993 = !DILocation(line: 108, column: 17, scope: !12991)
!12994 = !DILocation(line: 108, column: 30, scope: !12991)
!12995 = !DILocation(line: 109, column: 1, scope: !12991)
!12996 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2188, file: !2188, line: 116, type: !3157, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !317)
!12997 = !DILocation(line: 118, column: 2, scope: !12996)
!12998 = !DILocation(line: 118, column: 17, scope: !12996)
!12999 = !DILocation(line: 118, column: 30, scope: !12996)
!13000 = !DILocation(line: 119, column: 1, scope: !12996)
!13001 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2188, file: !2188, line: 126, type: !6714, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !317)
!13002 = !DILocation(line: 128, column: 10, scope: !13001)
!13003 = !DILocation(line: 128, column: 25, scope: !13001)
!13004 = !DILocation(line: 128, column: 38, scope: !13001)
!13005 = !DILocation(line: 128, column: 53, scope: !13001)
!13006 = !DILocation(line: 128, column: 2, scope: !13001)
!13007 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2188, file: !2188, line: 187, type: !13008, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13010)
!13008 = !DISubroutineType(types: !13009)
!13009 = !{!103, !2192, !144}
!13010 = !{!13011, !13012}
!13011 = !DILocalVariable(name: "thread", arg: 1, scope: !13007, file: !2188, line: 187, type: !2192)
!13012 = !DILocalVariable(name: "value", arg: 2, scope: !13007, file: !2188, line: 187, type: !144)
!13013 = !DILocation(line: 0, scope: !13007)
!13014 = !DILocation(line: 206, column: 2, scope: !13007)
!13015 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2188, file: !2188, line: 238, type: !13016, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13018)
!13016 = !DISubroutineType(types: !13017)
!13017 = !{!144, !2192}
!13018 = !{!13019}
!13019 = !DILocalVariable(name: "thread", arg: 1, scope: !13015, file: !2188, line: 238, type: !2192)
!13020 = !DILocation(line: 0, scope: !13015)
!13021 = !DILocation(line: 244, column: 2, scope: !13015)
!13022 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2188, file: !2188, line: 248, type: !13023, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13025)
!13023 = !DISubroutineType(types: !13024)
!13024 = !{!103, !2191, !344, !204}
!13025 = !{!13026, !13027, !13028}
!13026 = !DILocalVariable(name: "thread", arg: 1, scope: !13022, file: !2188, line: 248, type: !2191)
!13027 = !DILocalVariable(name: "buf", arg: 2, scope: !13022, file: !2188, line: 248, type: !344)
!13028 = !DILocalVariable(name: "size", arg: 3, scope: !13022, file: !2188, line: 248, type: !204)
!13029 = !DILocation(line: 0, scope: !13022)
!13030 = !DILocation(line: 257, column: 2, scope: !13022)
!13031 = !DILocation(line: 0, scope: !2187)
!13032 = !DILocation(line: 281, column: 11, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !2187, file: !2188, line: 281, column: 6)
!13034 = !DILocation(line: 281, column: 20, scope: !13033)
!13035 = !DILocation(line: 275, column: 45, scope: !2187)
!13036 = !DILocation(line: 285, column: 10, scope: !2187)
!13037 = !DILocation(line: 0, scope: !2308)
!13038 = !DILocation(line: 293, column: 39, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !2308, file: !2188, line: 293, column: 2)
!13040 = !DILocation(line: 293, column: 2, scope: !2308)
!13041 = !DILocation(line: 273, column: 14, scope: !2187)
!13042 = !DILocation(line: 309, column: 2, scope: !2187)
!13043 = !DILocation(line: 309, column: 11, scope: !2187)
!13044 = !DILocation(line: 311, column: 2, scope: !2187)
!13045 = !DILocation(line: 293, column: 26, scope: !13039)
!13046 = !DILocation(line: 294, column: 9, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13039, file: !2188, line: 293, column: 54)
!13048 = !DILocation(line: 295, column: 21, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13047, file: !2188, line: 295, column: 7)
!13050 = !DILocation(line: 295, column: 28, scope: !13049)
!13051 = !DILocation(line: 295, column: 7, scope: !13047)
!13052 = !DILocation(line: 299, column: 25, scope: !13047)
!13053 = !DILocation(line: 299, column: 41, scope: !13047)
!13054 = !DILocation(line: 300, column: 7, scope: !13047)
!13055 = !DILocation(line: 300, column: 26, scope: !13047)
!13056 = !DILocation(line: 299, column: 10, scope: !13047)
!13057 = !DILocation(line: 299, column: 7, scope: !13047)
!13058 = !DILocation(line: 302, column: 16, scope: !13047)
!13059 = !DILocation(line: 304, column: 20, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13047, file: !2188, line: 304, column: 7)
!13061 = !DILocation(line: 304, column: 7, scope: !13047)
!13062 = !DILocation(line: 305, column: 26, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13060, file: !2188, line: 304, column: 26)
!13064 = !DILocation(line: 305, column: 42, scope: !13063)
!13065 = !DILocation(line: 305, column: 11, scope: !13063)
!13066 = !DILocation(line: 305, column: 8, scope: !13063)
!13067 = !DILocation(line: 306, column: 3, scope: !13063)
!13068 = !DILocation(line: 293, column: 50, scope: !13039)
!13069 = !DILocation(line: 312, column: 1, scope: !2187)
!13070 = distinct !DISubprogram(name: "copy_bytes", scope: !2188, file: !2188, line: 261, type: !13071, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13073)
!13071 = !DISubroutineType(types: !13072)
!13072 = !{!204, !344, !204, !144, !204}
!13073 = !{!13074, !13075, !13076, !13077, !13078}
!13074 = !DILocalVariable(name: "dest", arg: 1, scope: !13070, file: !2188, line: 261, type: !344)
!13075 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13070, file: !2188, line: 261, type: !204)
!13076 = !DILocalVariable(name: "src", arg: 3, scope: !13070, file: !2188, line: 261, type: !144)
!13077 = !DILocalVariable(name: "src_size", arg: 4, scope: !13070, file: !2188, line: 261, type: !204)
!13078 = !DILocalVariable(name: "bytes_to_copy", scope: !13070, file: !2188, line: 263, type: !204)
!13079 = !DILocation(line: 0, scope: !13070)
!13080 = !DILocation(line: 265, column: 18, scope: !13070)
!13081 = !DILocation(line: 266, column: 2, scope: !13070)
!13082 = !DILocation(line: 268, column: 2, scope: !13070)
!13083 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2188, file: !2188, line: 383, type: !13084, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13086)
!13084 = !DISubroutineType(types: !13085)
!13085 = !{null, !2192}
!13086 = !{!13087}
!13087 = !DILocalVariable(name: "thread", arg: 1, scope: !13083, file: !2188, line: 383, type: !2192)
!13088 = !DILocation(line: 0, scope: !13083)
!13089 = !DILocation(line: 387, column: 2, scope: !13083)
!13090 = !DILocation(line: 388, column: 1, scope: !13083)
!13091 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2188, file: !2188, line: 528, type: !13092, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13099)
!13092 = !DISubroutineType(types: !13093)
!13093 = !{!344, !2192, !13094, !204, !3471, !102, !102, !102, !103, !121, !144}
!13094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13095, size: 32)
!13095 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3472, line: 44, baseType: !13096)
!13096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2140, line: 47, size: 8, elements: !13097)
!13097 = !{!13098}
!13098 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13096, file: !2140, line: 48, baseType: !146, size: 8)
!13099 = !{!13100, !13101, !13102, !13103, !13104, !13105, !13106, !13107, !13108, !13109, !13110}
!13100 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13091, file: !2188, line: 528, type: !2192)
!13101 = !DILocalVariable(name: "stack", arg: 2, scope: !13091, file: !2188, line: 529, type: !13094)
!13102 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13091, file: !2188, line: 529, type: !204)
!13103 = !DILocalVariable(name: "entry", arg: 4, scope: !13091, file: !2188, line: 530, type: !3471)
!13104 = !DILocalVariable(name: "p1", arg: 5, scope: !13091, file: !2188, line: 531, type: !102)
!13105 = !DILocalVariable(name: "p2", arg: 6, scope: !13091, file: !2188, line: 531, type: !102)
!13106 = !DILocalVariable(name: "p3", arg: 7, scope: !13091, file: !2188, line: 531, type: !102)
!13107 = !DILocalVariable(name: "prio", arg: 8, scope: !13091, file: !2188, line: 532, type: !103)
!13108 = !DILocalVariable(name: "options", arg: 9, scope: !13091, file: !2188, line: 532, type: !121)
!13109 = !DILocalVariable(name: "name", arg: 10, scope: !13091, file: !2188, line: 532, type: !144)
!13110 = !DILocalVariable(name: "stack_ptr", scope: !13091, file: !2188, line: 534, type: !344)
!13111 = !DILocation(line: 0, scope: !13091)
!13112 = !DILocation(line: 550, column: 28, scope: !13091)
!13113 = !DILocation(line: 550, column: 2, scope: !13091)
!13114 = !DILocation(line: 553, column: 34, scope: !13091)
!13115 = !DILocation(line: 553, column: 2, scope: !13091)
!13116 = !DILocation(line: 554, column: 14, scope: !13091)
!13117 = !DILocation(line: 564, column: 2, scope: !13091)
!13118 = !DILocation(line: 567, column: 14, scope: !13091)
!13119 = !DILocation(line: 567, column: 24, scope: !13091)
!13120 = !DILocation(line: 612, column: 7, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13091, file: !2188, line: 612, column: 6)
!13122 = !DILocation(line: 612, column: 6, scope: !13091)
!13123 = !DILocation(line: 627, column: 40, scope: !13091)
!13124 = !DILocation(line: 637, column: 2, scope: !13091)
!13125 = !DILocation(line: 613, column: 15, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13121, file: !2188, line: 612, column: 17)
!13127 = !DILocation(line: 613, column: 29, scope: !13126)
!13128 = !DILocation(line: 638, column: 1, scope: !13091)
!13129 = distinct !DISubprogram(name: "z_waitq_init", scope: !13130, file: !13130, line: 47, type: !13131, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13133)
!13130 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13131 = !DISubroutineType(types: !13132)
!13132 = !{null, !2223}
!13133 = !{!13134}
!13134 = !DILocalVariable(name: "w", arg: 1, scope: !13129, file: !13130, line: 47, type: !2223)
!13135 = !DILocation(line: 0, scope: !13129)
!13136 = !DILocation(line: 49, column: 21, scope: !13129)
!13137 = !DILocation(line: 49, column: 2, scope: !13129)
!13138 = !DILocation(line: 50, column: 1, scope: !13129)
!13139 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2188, file: !2188, line: 791, type: !13140, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13143)
!13140 = !DISubroutineType(types: !13141)
!13141 = !{null, !13142, !103, !121, !32}
!13142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 32)
!13143 = !{!13144, !13145, !13146, !13147}
!13144 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13139, file: !2188, line: 791, type: !13142)
!13145 = !DILocalVariable(name: "priority", arg: 2, scope: !13139, file: !2188, line: 791, type: !103)
!13146 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13139, file: !2188, line: 792, type: !121)
!13147 = !DILocalVariable(name: "options", arg: 4, scope: !13139, file: !2188, line: 792, type: !32)
!13148 = !DILocation(line: 0, scope: !13139)
!13149 = !DILocation(line: 795, column: 15, scope: !13139)
!13150 = !DILocation(line: 795, column: 25, scope: !13139)
!13151 = !DILocation(line: 796, column: 30, scope: !13139)
!13152 = !DILocation(line: 796, column: 15, scope: !13139)
!13153 = !DILocation(line: 796, column: 28, scope: !13139)
!13154 = !DILocation(line: 797, column: 30, scope: !13139)
!13155 = !DILocation(line: 797, column: 15, scope: !13139)
!13156 = !DILocation(line: 797, column: 28, scope: !13139)
!13157 = !DILocation(line: 799, column: 22, scope: !13139)
!13158 = !DILocation(line: 799, column: 15, scope: !13139)
!13159 = !DILocation(line: 799, column: 20, scope: !13139)
!13160 = !DILocation(line: 801, column: 15, scope: !13139)
!13161 = !DILocation(line: 801, column: 28, scope: !13139)
!13162 = !DILocation(line: 814, column: 2, scope: !13139)
!13163 = !DILocation(line: 815, column: 1, scope: !13139)
!13164 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2188, file: !2188, line: 449, type: !13165, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13167)
!13165 = !DISubroutineType(types: !13166)
!13166 = !{!344, !2192, !13094, !204}
!13167 = !{!13168, !13169, !13170, !13171, !13172, !13173, !13174, !13175}
!13168 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13164, file: !2188, line: 449, type: !2192)
!13169 = !DILocalVariable(name: "stack", arg: 2, scope: !13164, file: !2188, line: 450, type: !13094)
!13170 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13164, file: !2188, line: 450, type: !204)
!13171 = !DILocalVariable(name: "stack_obj_size", scope: !13164, file: !2188, line: 452, type: !204)
!13172 = !DILocalVariable(name: "stack_buf_size", scope: !13164, file: !2188, line: 452, type: !204)
!13173 = !DILocalVariable(name: "stack_ptr", scope: !13164, file: !2188, line: 453, type: !344)
!13174 = !DILocalVariable(name: "stack_buf_start", scope: !13164, file: !2188, line: 453, type: !344)
!13175 = !DILocalVariable(name: "delta", scope: !13164, file: !2188, line: 454, type: !204)
!13176 = !DILocation(line: 0, scope: !13164)
!13177 = !DILocation(line: 465, column: 20, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13164, file: !2188, line: 463, column: 2)
!13179 = !DILocation(line: 466, column: 21, scope: !13178)
!13180 = !DILocation(line: 473, column: 28, scope: !13164)
!13181 = !DILocation(line: 514, column: 33, scope: !13164)
!13182 = !DILocation(line: 514, column: 25, scope: !13164)
!13183 = !DILocation(line: 514, column: 31, scope: !13164)
!13184 = !DILocation(line: 515, column: 25, scope: !13164)
!13185 = !DILocation(line: 515, column: 30, scope: !13164)
!13186 = !DILocation(line: 516, column: 25, scope: !13164)
!13187 = !DILocation(line: 516, column: 31, scope: !13164)
!13188 = !DILocation(line: 520, column: 2, scope: !13164)
!13189 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2140, file: !2140, line: 331, type: !13190, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13192)
!13190 = !DISubroutineType(types: !13191)
!13191 = !{!344, !13094}
!13192 = !{!13193}
!13193 = !DILocalVariable(name: "sym", arg: 1, scope: !13189, file: !2140, line: 331, type: !13094)
!13194 = !DILocation(line: 0, scope: !13189)
!13195 = !DILocation(line: 333, column: 21, scope: !13189)
!13196 = !DILocation(line: 333, column: 2, scope: !13189)
!13197 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13198, file: !13198, line: 40, type: !13199, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13201)
!13198 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13199 = !DISubroutineType(types: !13200)
!13200 = !{null, !13142}
!13201 = !{!13202}
!13202 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13197, file: !13198, line: 40, type: !13142)
!13203 = !DILocation(line: 0, scope: !13197)
!13204 = !DILocation(line: 42, column: 31, scope: !13197)
!13205 = !DILocation(line: 42, column: 2, scope: !13197)
!13206 = !DILocation(line: 43, column: 1, scope: !13197)
!13207 = distinct !DISubprogram(name: "z_init_timeout", scope: !13198, file: !13198, line: 25, type: !2249, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13208)
!13208 = !{!13209}
!13209 = !DILocalVariable(name: "to", arg: 1, scope: !13207, file: !13198, line: 25, type: !2251)
!13210 = !DILocation(line: 0, scope: !13207)
!13211 = !DILocation(line: 27, column: 22, scope: !13207)
!13212 = !DILocation(line: 27, column: 2, scope: !13207)
!13213 = !DILocation(line: 28, column: 1, scope: !13207)
!13214 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !13215, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13217)
!13215 = !DISubroutineType(types: !13216)
!13216 = !{null, !2295}
!13217 = !{!13218}
!13218 = !DILocalVariable(name: "node", arg: 1, scope: !13214, file: !325, line: 211, type: !2295)
!13219 = !DILocation(line: 0, scope: !13214)
!13220 = !DILocation(line: 213, column: 8, scope: !13214)
!13221 = !DILocation(line: 213, column: 13, scope: !13214)
!13222 = !DILocation(line: 214, column: 8, scope: !13214)
!13223 = !DILocation(line: 214, column: 13, scope: !13214)
!13224 = !DILocation(line: 215, column: 1, scope: !13214)
!13225 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !13226, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13229)
!13226 = !DISubroutineType(types: !13227)
!13227 = !{null, !13228}
!13228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!13229 = !{!13230}
!13230 = !DILocalVariable(name: "list", arg: 1, scope: !13225, file: !325, line: 197, type: !13228)
!13231 = !DILocation(line: 0, scope: !13225)
!13232 = !DILocation(line: 199, column: 8, scope: !13225)
!13233 = !DILocation(line: 199, column: 13, scope: !13225)
!13234 = !DILocation(line: 200, column: 8, scope: !13225)
!13235 = !DILocation(line: 200, column: 13, scope: !13225)
!13236 = !DILocation(line: 201, column: 1, scope: !13225)
!13237 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2188, file: !2188, line: 641, type: !13238, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13244)
!13238 = !DISubroutineType(types: !13239)
!13239 = !{!2191, !2192, !13094, !204, !3471, !102, !102, !102, !103, !121, !13240}
!13240 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !13241)
!13241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !13242)
!13242 = !{!13243}
!13243 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13241, file: !201, line: 66, baseType: !200, size: 64)
!13244 = !{!13245, !13246, !13247, !13248, !13249, !13250, !13251, !13252, !13253, !13254}
!13245 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13237, file: !2188, line: 641, type: !2192)
!13246 = !DILocalVariable(name: "stack", arg: 2, scope: !13237, file: !2188, line: 642, type: !13094)
!13247 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13237, file: !2188, line: 643, type: !204)
!13248 = !DILocalVariable(name: "entry", arg: 4, scope: !13237, file: !2188, line: 643, type: !3471)
!13249 = !DILocalVariable(name: "p1", arg: 5, scope: !13237, file: !2188, line: 644, type: !102)
!13250 = !DILocalVariable(name: "p2", arg: 6, scope: !13237, file: !2188, line: 644, type: !102)
!13251 = !DILocalVariable(name: "p3", arg: 7, scope: !13237, file: !2188, line: 644, type: !102)
!13252 = !DILocalVariable(name: "prio", arg: 8, scope: !13237, file: !2188, line: 645, type: !103)
!13253 = !DILocalVariable(name: "options", arg: 9, scope: !13237, file: !2188, line: 645, type: !121)
!13254 = !DILocalVariable(name: "delay", arg: 10, scope: !13237, file: !2188, line: 645, type: !13240)
!13255 = !DILocation(line: 0, scope: !13237)
!13256 = !DILocation(line: 649, column: 2, scope: !13237)
!13257 = !DILocation(line: 652, column: 7, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13237, file: !2188, line: 652, column: 6)
!13259 = !DILocation(line: 652, column: 6, scope: !13237)
!13260 = !DILocation(line: 653, column: 3, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13258, file: !2188, line: 652, column: 39)
!13262 = !DILocation(line: 654, column: 2, scope: !13261)
!13263 = !DILocation(line: 656, column: 2, scope: !13237)
!13264 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2188, file: !2188, line: 401, type: !13265, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13267)
!13265 = !DISubroutineType(types: !13266)
!13266 = !{null, !2192, !13240}
!13267 = !{!13268, !13269}
!13268 = !DILocalVariable(name: "thread", arg: 1, scope: !13264, file: !2188, line: 401, type: !2192)
!13269 = !DILocalVariable(name: "delay", arg: 2, scope: !13264, file: !2188, line: 401, type: !13240)
!13270 = !DILocation(line: 0, scope: !13264)
!13271 = !DILocation(line: 404, column: 6, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13264, file: !2188, line: 404, column: 6)
!13273 = !DILocation(line: 404, column: 6, scope: !13264)
!13274 = !DILocation(line: 405, column: 3, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13272, file: !2188, line: 404, column: 38)
!13276 = !DILocation(line: 406, column: 2, scope: !13275)
!13277 = !DILocation(line: 407, column: 3, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13272, file: !2188, line: 406, column: 9)
!13279 = !DILocation(line: 413, column: 1, scope: !13264)
!13280 = distinct !DISubprogram(name: "k_thread_start", scope: !3593, file: !3593, line: 205, type: !13281, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13283)
!13281 = !DISubroutineType(types: !13282)
!13282 = !{null, !2191}
!13283 = !{!13284}
!13284 = !DILocalVariable(name: "thread", arg: 1, scope: !13280, file: !3593, line: 205, type: !2191)
!13285 = !DILocation(line: 0, scope: !13280)
!13286 = !DILocation(line: 214, column: 2, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13280, file: !3593, line: 214, column: 2)
!13288 = !{i64 2154090061}
!13289 = !DILocation(line: 215, column: 2, scope: !13280)
!13290 = !DILocation(line: 216, column: 1, scope: !13280)
!13291 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13198, file: !13198, line: 47, type: !13265, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13292)
!13292 = !{!13293, !13294}
!13293 = !DILocalVariable(name: "thread", arg: 1, scope: !13291, file: !13198, line: 47, type: !2192)
!13294 = !DILocalVariable(name: "ticks", arg: 2, scope: !13291, file: !13198, line: 47, type: !13240)
!13295 = !DILocation(line: 0, scope: !13291)
!13296 = !DILocation(line: 49, column: 30, scope: !13291)
!13297 = !DILocation(line: 49, column: 2, scope: !13291)
!13298 = !DILocation(line: 50, column: 1, scope: !13291)
!13299 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2188, file: !2188, line: 748, type: !3157, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13300)
!13300 = !{!13301, !13319}
!13301 = !DILocalVariable(name: "thread_data", scope: !13302, file: !2188, line: 750, type: !13303)
!13302 = distinct !DILexicalBlock(scope: !13299, file: !2188, line: 750, column: 2)
!13303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13304, size: 32)
!13304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !296, line: 620, size: 384, elements: !13305)
!13305 = !{!13306, !13307, !13308, !13309, !13310, !13311, !13312, !13313, !13314, !13315, !13316, !13318}
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13304, file: !296, line: 621, baseType: !2192, size: 32)
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13304, file: !296, line: 622, baseType: !13094, size: 32, offset: 32)
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13304, file: !296, line: 623, baseType: !32, size: 32, offset: 64)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13304, file: !296, line: 624, baseType: !3471, size: 32, offset: 96)
!13310 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13304, file: !296, line: 625, baseType: !102, size: 32, offset: 128)
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13304, file: !296, line: 626, baseType: !102, size: 32, offset: 160)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13304, file: !296, line: 627, baseType: !102, size: 32, offset: 192)
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13304, file: !296, line: 628, baseType: !103, size: 32, offset: 224)
!13314 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13304, file: !296, line: 629, baseType: !121, size: 32, offset: 256)
!13315 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13304, file: !296, line: 630, baseType: !725, size: 32, offset: 288)
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13304, file: !296, line: 631, baseType: !13317, size: 32, offset: 320)
!13317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 32)
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13304, file: !296, line: 632, baseType: !144, size: 32, offset: 352)
!13319 = !DILocalVariable(name: "thread_data", scope: !13320, file: !2188, line: 781, type: !13303)
!13320 = distinct !DILexicalBlock(scope: !13299, file: !2188, line: 781, column: 2)
!13321 = !DILocation(line: 0, scope: !13302)
!13322 = !DILocation(line: 750, column: 2, scope: !13302)
!13323 = !DILocation(line: 780, column: 2, scope: !13299)
!13324 = !DILocation(line: 0, scope: !13320)
!13325 = !DILocation(line: 781, column: 2, scope: !13320)
!13326 = !DILocation(line: 752, column: 17, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13328, file: !2188, line: 750, column: 38)
!13328 = distinct !DILexicalBlock(scope: !13302, file: !2188, line: 750, column: 2)
!13329 = !DILocation(line: 753, column: 17, scope: !13327)
!13330 = !DILocation(line: 754, column: 17, scope: !13327)
!13331 = !DILocation(line: 755, column: 17, scope: !13327)
!13332 = !DILocation(line: 756, column: 17, scope: !13327)
!13333 = !DILocation(line: 757, column: 17, scope: !13327)
!13334 = !DILocation(line: 758, column: 17, scope: !13327)
!13335 = !DILocation(line: 759, column: 17, scope: !13327)
!13336 = !DILocation(line: 760, column: 17, scope: !13327)
!13337 = !DILocation(line: 751, column: 3, scope: !13327)
!13338 = !DILocation(line: 763, column: 16, scope: !13327)
!13339 = !DILocation(line: 763, column: 29, scope: !13327)
!13340 = !DILocation(line: 763, column: 39, scope: !13327)
!13341 = !DILocation(line: 750, column: 2, scope: !13328)
!13342 = !DILocation(line: 750, column: 2, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13328, file: !2188, line: 750, column: 2)
!13344 = distinct !{!13344, !13322, !13345}
!13345 = !DILocation(line: 764, column: 2, scope: !13302)
!13346 = !DILocation(line: 787, column: 2, scope: !13299)
!13347 = !DILocation(line: 788, column: 1, scope: !13299)
!13348 = !DILocation(line: 782, column: 20, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13350, file: !2188, line: 782, column: 7)
!13350 = distinct !DILexicalBlock(scope: !13351, file: !2188, line: 781, column: 38)
!13351 = distinct !DILexicalBlock(scope: !13320, file: !2188, line: 781, column: 2)
!13352 = !DILocation(line: 782, column: 31, scope: !13349)
!13353 = !DILocation(line: 782, column: 7, scope: !13350)
!13354 = !DILocation(line: 783, column: 37, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13349, file: !2188, line: 782, column: 51)
!13356 = !DILocation(line: 784, column: 10, scope: !13355)
!13357 = !DILocation(line: 783, column: 4, scope: !13355)
!13358 = !DILocation(line: 785, column: 3, scope: !13355)
!13359 = !DILocation(line: 781, column: 2, scope: !13351)
!13360 = !DILocation(line: 781, column: 2, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13351, file: !2188, line: 781, column: 2)
!13362 = distinct !{!13362, !13325, !13363}
!13363 = !DILocation(line: 786, column: 2, scope: !13320)
!13364 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13365, file: !13365, line: 403, type: !13366, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13368)
!13365 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13366 = !DISubroutineType(types: !13367)
!13367 = !{!1572, !1572}
!13368 = !{!13369}
!13369 = !DILocalVariable(name: "t", arg: 1, scope: !13364, file: !13365, line: 403, type: !1572)
!13370 = !DILocation(line: 0, scope: !13364)
!13371 = !DILocalVariable(name: "t", arg: 1, scope: !13372, file: !13365, line: 102, type: !1572)
!13372 = distinct !DISubprogram(name: "z_tmcvt", scope: !13365, file: !13365, line: 102, type: !13373, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13375)
!13373 = !DISubroutineType(types: !13374)
!13374 = !{!1572, !1572, !121, !121, !157, !157, !157, !157}
!13375 = !{!13371, !13376, !13377, !13378, !13379, !13380, !13381, !13382, !13383, !13384, !13385}
!13376 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13372, file: !13365, line: 102, type: !121)
!13377 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13372, file: !13365, line: 103, type: !121)
!13378 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13372, file: !13365, line: 103, type: !157)
!13379 = !DILocalVariable(name: "result32", arg: 5, scope: !13372, file: !13365, line: 104, type: !157)
!13380 = !DILocalVariable(name: "round_up", arg: 6, scope: !13372, file: !13365, line: 104, type: !157)
!13381 = !DILocalVariable(name: "round_off", arg: 7, scope: !13372, file: !13365, line: 105, type: !157)
!13382 = !DILocalVariable(name: "mul_ratio", scope: !13372, file: !13365, line: 107, type: !157)
!13383 = !DILocalVariable(name: "div_ratio", scope: !13372, file: !13365, line: 109, type: !157)
!13384 = !DILocalVariable(name: "off", scope: !13372, file: !13365, line: 116, type: !1572)
!13385 = !DILocalVariable(name: "rdivisor", scope: !13386, file: !13365, line: 119, type: !121)
!13386 = distinct !DILexicalBlock(scope: !13387, file: !13365, line: 118, column: 18)
!13387 = distinct !DILexicalBlock(scope: !13372, file: !13365, line: 118, column: 6)
!13388 = !DILocation(line: 0, scope: !13372, inlinedAt: !13389)
!13389 = distinct !DILocation(line: 406, column: 9, scope: !13364)
!13390 = !DILocation(line: 145, column: 13, scope: !13391, inlinedAt: !13389)
!13391 = distinct !DILexicalBlock(scope: !13392, file: !13365, line: 144, column: 10)
!13392 = distinct !DILexicalBlock(scope: !13393, file: !13365, line: 142, column: 7)
!13393 = distinct !DILexicalBlock(scope: !13394, file: !13365, line: 141, column: 24)
!13394 = distinct !DILexicalBlock(scope: !13395, file: !13365, line: 141, column: 13)
!13395 = distinct !DILexicalBlock(scope: !13372, file: !13365, line: 134, column: 6)
!13396 = !DILocation(line: 406, column: 2, scope: !13364)
!13397 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2188, file: !2188, line: 817, type: !3469, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13398)
!13398 = !{!13399, !13400, !13401, !13402}
!13399 = !DILocalVariable(name: "entry", arg: 1, scope: !13397, file: !2188, line: 817, type: !3471)
!13400 = !DILocalVariable(name: "p1", arg: 2, scope: !13397, file: !2188, line: 818, type: !102)
!13401 = !DILocalVariable(name: "p2", arg: 3, scope: !13397, file: !2188, line: 818, type: !102)
!13402 = !DILocalVariable(name: "p3", arg: 4, scope: !13397, file: !2188, line: 818, type: !102)
!13403 = !DILocation(line: 0, scope: !13397)
!13404 = !DILocation(line: 822, column: 2, scope: !13397)
!13405 = !DILocation(line: 822, column: 17, scope: !13397)
!13406 = !DILocation(line: 822, column: 30, scope: !13397)
!13407 = !DILocation(line: 823, column: 2, scope: !13397)
!13408 = !DILocation(line: 845, column: 2, scope: !13397)
!13409 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2188, file: !2188, line: 888, type: !13410, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13412)
!13410 = !DISubroutineType(types: !13411)
!13411 = !{!103, !2192}
!13412 = !{!13413}
!13413 = !DILocalVariable(name: "thread", arg: 1, scope: !13409, file: !2188, line: 888, type: !2192)
!13414 = !DILocation(line: 0, scope: !13409)
!13415 = !DILocation(line: 893, column: 2, scope: !13409)
!13416 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2188, file: !2188, line: 897, type: !13417, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13419)
!13417 = !DISubroutineType(types: !13418)
!13418 = !{!103, !2192, !32}
!13419 = !{!13420, !13421}
!13420 = !DILocalVariable(name: "thread", arg: 1, scope: !13416, file: !2188, line: 897, type: !2192)
!13421 = !DILocalVariable(name: "options", arg: 2, scope: !13416, file: !2188, line: 897, type: !32)
!13422 = !DILocation(line: 0, scope: !13416)
!13423 = !DILocation(line: 902, column: 2, scope: !13416)
!13424 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2188, file: !2188, line: 1072, type: !13425, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13430)
!13425 = !DISubroutineType(types: !13426)
!13426 = !{!103, !2191, !13427}
!13427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13428, size: 32)
!13428 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !379, line: 234, baseType: !13429)
!13429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !379, line: 192, elements: !317)
!13430 = !{!13431, !13432}
!13431 = !DILocalVariable(name: "thread", arg: 1, scope: !13424, file: !2188, line: 1072, type: !2191)
!13432 = !DILocalVariable(name: "stats", arg: 2, scope: !13424, file: !2188, line: 1073, type: !13427)
!13433 = !DILocation(line: 0, scope: !13424)
!13434 = !DILocation(line: 1075, column: 14, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13424, file: !2188, line: 1075, column: 6)
!13436 = !DILocation(line: 1075, column: 23, scope: !13435)
!13437 = !DILocation(line: 1086, column: 1, scope: !13424)
!13438 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2188, file: !2188, line: 1088, type: !13439, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !13441)
!13439 = !DISubroutineType(types: !13440)
!13440 = !{!103, !13427}
!13441 = !{!13442}
!13442 = !DILocalVariable(name: "stats", arg: 1, scope: !13438, file: !2188, line: 1088, type: !13427)
!13443 = !DILocation(line: 0, scope: !13438)
!13444 = !DILocation(line: 1094, column: 12, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13438, file: !2188, line: 1094, column: 6)
!13446 = !DILocation(line: 1120, column: 1, scope: !13438)
!13447 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13448, file: !13448, line: 20, type: !3157, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !317)
!13448 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13449 = !DILocation(line: 30, column: 2, scope: !13447)
!13450 = !DILocation(line: 31, column: 1, scope: !13447)
!13451 = distinct !DISubprogram(name: "idle", scope: !13448, file: !13448, line: 33, type: !3474, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !13452)
!13452 = !{!13453, !13454, !13455}
!13453 = !DILocalVariable(name: "unused1", arg: 1, scope: !13451, file: !13448, line: 33, type: !102)
!13454 = !DILocalVariable(name: "unused2", arg: 2, scope: !13451, file: !13448, line: 33, type: !102)
!13455 = !DILocalVariable(name: "unused3", arg: 3, scope: !13451, file: !13448, line: 33, type: !102)
!13456 = !DILocation(line: 0, scope: !13451)
!13457 = !DILocation(line: 41, column: 2, scope: !13451)
!13458 = !DILocation(line: 55, column: 2, scope: !13459, inlinedAt: !13463)
!13459 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5704, file: !5704, line: 42, type: !5705, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !13460)
!13460 = !{!13461, !13462}
!13461 = !DILocalVariable(name: "key", scope: !13459, file: !5704, line: 44, type: !32)
!13462 = !DILocalVariable(name: "tmp", scope: !13459, file: !5704, line: 53, type: !32)
!13463 = distinct !DILocation(line: 62, column: 10, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13451, file: !13448, line: 41, column: 15)
!13465 = !{i64 1948139}
!13466 = !DILocation(line: 0, scope: !13459, inlinedAt: !13463)
!13467 = !DILocation(line: 86, column: 3, scope: !13464)
!13468 = distinct !{!13468, !13457, !13469}
!13469 = !DILocation(line: 105, column: 2, scope: !13451)
!13470 = distinct !DISubprogram(name: "k_cpu_idle", scope: !296, file: !296, line: 5627, type: !3157, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !317)
!13471 = !DILocation(line: 5629, column: 2, scope: !13470)
!13472 = !DILocation(line: 5630, column: 1, scope: !13470)
!13473 = !DISubprogram(name: "arch_cpu_idle", scope: !3472, file: !3472, line: 167, type: !3157, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!13474 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !3113, file: !3113, line: 30, type: !13475, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13477)
!13475 = !DISubroutineType(types: !13476)
!13476 = !{!102, !3122, !157}
!13477 = !{!13478, !13479, !13480, !13481}
!13478 = !DILocalVariable(name: "node", arg: 1, scope: !13474, file: !3113, line: 30, type: !3122)
!13479 = !DILocalVariable(name: "needs_free", arg: 2, scope: !13474, file: !3113, line: 30, type: !157)
!13480 = !DILocalVariable(name: "ret", scope: !13474, file: !3113, line: 32, type: !102)
!13481 = !DILocalVariable(name: "anode", scope: !13482, file: !3113, line: 40, type: !3111)
!13482 = distinct !DILexicalBlock(scope: !13483, file: !3113, line: 34, column: 68)
!13483 = distinct !DILexicalBlock(scope: !13474, file: !3113, line: 34, column: 6)
!13484 = !DILocation(line: 0, scope: !13474)
!13485 = !DILocation(line: 34, column: 12, scope: !13483)
!13486 = !DILocation(line: 34, column: 21, scope: !13483)
!13487 = !DILocation(line: 34, column: 25, scope: !13483)
!13488 = !DILocation(line: 34, column: 52, scope: !13483)
!13489 = !DILocation(line: 34, column: 6, scope: !13474)
!13490 = !DILocation(line: 0, scope: !13482)
!13491 = !DILocation(line: 43, column: 16, scope: !13482)
!13492 = !DILocation(line: 44, column: 7, scope: !13482)
!13493 = !DILocation(line: 42, column: 11, scope: !13482)
!13494 = !DILocation(line: 45, column: 4, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13496, file: !3113, line: 44, column: 19)
!13496 = distinct !DILexicalBlock(scope: !13482, file: !3113, line: 44, column: 7)
!13497 = !DILocation(line: 46, column: 3, scope: !13495)
!13498 = !DILocation(line: 52, column: 9, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13483, file: !3113, line: 47, column: 9)
!13500 = !DILocation(line: 0, scope: !13483)
!13501 = !DILocation(line: 55, column: 2, scope: !13474)
!13502 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !303, file: !303, line: 270, type: !13503, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13505)
!13503 = !DISubroutineType(types: !13504)
!13504 = !{!154, !3122}
!13505 = !{!13506}
!13506 = !DILocalVariable(name: "node", arg: 1, scope: !13502, file: !303, line: 270, type: !3122)
!13507 = !DILocation(line: 0, scope: !13502)
!13508 = !DILocation(line: 272, column: 15, scope: !13502)
!13509 = !DILocation(line: 272, column: 9, scope: !13502)
!13510 = !DILocation(line: 272, column: 2, scope: !13502)
!13511 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !3113, file: !3113, line: 58, type: !13512, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13531)
!13512 = !DISubroutineType(types: !13513)
!13513 = !{null, !13514}
!13514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13515, size: 32)
!13515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !13516)
!13516 = !{!13517, !13523, !13525}
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !13515, file: !296, line: 1710, baseType: !13518, size: 64)
!13518 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !13519)
!13519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !13520)
!13520 = !{!13521, !13522}
!13521 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13519, file: !303, line: 42, baseType: !3122, size: 32)
!13522 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13519, file: !303, line: 43, baseType: !3122, size: 32, offset: 32)
!13523 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13515, file: !296, line: 1711, baseType: !13524, offset: 64)
!13524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!13525 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13515, file: !296, line: 1712, baseType: !13526, size: 64, offset: 64)
!13526 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !13527)
!13527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !13528)
!13528 = !{!13529}
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13527, file: !320, line: 232, baseType: !13530, size: 64)
!13530 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3125)
!13531 = !{!13532}
!13532 = !DILocalVariable(name: "queue", arg: 1, scope: !13511, file: !3113, line: 58, type: !13514)
!13533 = !DILocation(line: 0, scope: !13511)
!13534 = !DILocation(line: 60, column: 26, scope: !13511)
!13535 = !DILocation(line: 60, column: 2, scope: !13511)
!13536 = !DILocation(line: 62, column: 23, scope: !13511)
!13537 = !DILocation(line: 62, column: 2, scope: !13511)
!13538 = !DILocation(line: 70, column: 1, scope: !13511)
!13539 = distinct !DISubprogram(name: "sys_sflist_init", scope: !303, file: !303, line: 202, type: !13540, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13543)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{null, !13542}
!13542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13518, size: 32)
!13543 = !{!13544}
!13544 = !DILocalVariable(name: "list", arg: 1, scope: !13539, file: !303, line: 202, type: !13542)
!13545 = !DILocation(line: 0, scope: !13539)
!13546 = !DILocation(line: 204, column: 8, scope: !13539)
!13547 = !DILocation(line: 204, column: 13, scope: !13539)
!13548 = !DILocation(line: 205, column: 8, scope: !13539)
!13549 = !DILocation(line: 205, column: 13, scope: !13539)
!13550 = !DILocation(line: 206, column: 1, scope: !13539)
!13551 = distinct !DISubprogram(name: "z_waitq_init", scope: !13130, file: !13130, line: 47, type: !13552, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13555)
!13552 = !DISubroutineType(types: !13553)
!13553 = !{null, !13554}
!13554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13526, size: 32)
!13555 = !{!13556}
!13556 = !DILocalVariable(name: "w", arg: 1, scope: !13551, file: !13130, line: 47, type: !13554)
!13557 = !DILocation(line: 0, scope: !13551)
!13558 = !DILocation(line: 49, column: 21, scope: !13551)
!13559 = !DILocation(line: 49, column: 2, scope: !13551)
!13560 = !DILocation(line: 50, column: 1, scope: !13551)
!13561 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !13562, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13565)
!13562 = !DISubroutineType(types: !13563)
!13563 = !{null, !13564}
!13564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13530, size: 32)
!13565 = !{!13566}
!13566 = !DILocalVariable(name: "list", arg: 1, scope: !13561, file: !325, line: 197, type: !13564)
!13567 = !DILocation(line: 0, scope: !13561)
!13568 = !DILocation(line: 199, column: 8, scope: !13561)
!13569 = !DILocation(line: 199, column: 13, scope: !13561)
!13570 = !DILocation(line: 200, column: 8, scope: !13561)
!13571 = !DILocation(line: 200, column: 13, scope: !13561)
!13572 = !DILocation(line: 201, column: 1, scope: !13561)
!13573 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !3113, file: !3113, line: 94, type: !13512, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13574)
!13574 = !{!13575, !13576, !13581}
!13575 = !DILocalVariable(name: "queue", arg: 1, scope: !13573, file: !3113, line: 94, type: !13514)
!13576 = !DILocalVariable(name: "key", scope: !13573, file: !3113, line: 98, type: !13577)
!13577 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !13578)
!13578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !13579)
!13579 = !{!13580}
!13580 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13578, file: !316, line: 33, baseType: !103, size: 32)
!13581 = !DILocalVariable(name: "first_pending_thread", scope: !13573, file: !3113, line: 99, type: !13582)
!13582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13583, size: 32)
!13583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !13584)
!13584 = !{!13585, !13623, !13635, !13636, !13637, !13638, !13644, !13656}
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13583, file: !379, line: 247, baseType: !13586, size: 384)
!13586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !13587)
!13587 = !{!13588, !13598, !13599, !13600, !13601, !13610, !13611, !13612}
!13588 = !DIDerivedType(tag: DW_TAG_member, scope: !13586, file: !379, line: 60, baseType: !13589, size: 64)
!13589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13586, file: !379, line: 60, size: 64, elements: !13590)
!13590 = !{!13591, !13592}
!13591 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13589, file: !379, line: 61, baseType: !3124, size: 64)
!13592 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13589, file: !379, line: 62, baseType: !13593, size: 64)
!13593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !13594)
!13594 = !{!13595}
!13595 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13593, file: !404, line: 50, baseType: !13596, size: 64)
!13596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13597, size: 64, elements: !363)
!13597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13593, size: 32)
!13598 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13586, file: !379, line: 68, baseType: !13554, size: 32, offset: 64)
!13599 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13586, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!13600 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13586, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!13601 = !DIDerivedType(tag: DW_TAG_member, scope: !13586, file: !379, line: 90, baseType: !13602, size: 16, offset: 112)
!13602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13586, file: !379, line: 90, size: 16, elements: !13603)
!13603 = !{!13604, !13609}
!13604 = !DIDerivedType(tag: DW_TAG_member, scope: !13602, file: !379, line: 91, baseType: !13605, size: 16)
!13605 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13602, file: !379, line: 91, size: 16, elements: !13606)
!13606 = !{!13607, !13608}
!13607 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13605, file: !379, line: 96, baseType: !425, size: 8)
!13608 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13605, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!13609 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13602, file: !379, line: 100, baseType: !429, size: 16)
!13610 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13586, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!13611 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13586, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!13612 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13586, file: !379, line: 131, baseType: !13613, size: 192, offset: 192)
!13613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !13614)
!13614 = !{!13615, !13616, !13622}
!13615 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13613, file: !320, line: 245, baseType: !3124, size: 64)
!13616 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13613, file: !320, line: 246, baseType: !13617, size: 32, offset: 64)
!13617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !13618)
!13618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13619, size: 32)
!13619 = !DISubroutineType(types: !13620)
!13620 = !{null, !13621}
!13621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13613, size: 32)
!13622 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13613, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!13623 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13583, file: !379, line: 250, baseType: !13624, size: 288, offset: 384)
!13624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !13625)
!13625 = !{!13626, !13627, !13628, !13629, !13630, !13631, !13632, !13633, !13634}
!13626 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13624, file: !446, line: 26, baseType: !121, size: 32)
!13627 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13624, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!13628 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13624, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13624, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!13630 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13624, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!13631 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13624, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!13632 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13624, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!13633 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13624, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!13634 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13624, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!13635 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13583, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!13636 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13583, file: !379, line: 256, baseType: !13526, size: 64, offset: 704)
!13637 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13583, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!13638 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13583, file: !379, line: 300, baseType: !13639, size: 96, offset: 800)
!13639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !13640)
!13640 = !{!13641, !13642, !13643}
!13641 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13639, file: !379, line: 153, baseType: !22, size: 32)
!13642 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13639, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!13643 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13639, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!13644 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13583, file: !379, line: 325, baseType: !13645, size: 32, offset: 896)
!13645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13646, size: 32)
!13646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !13647)
!13647 = !{!13648, !13654, !13655}
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13646, file: !296, line: 5074, baseType: !13649, size: 96)
!13649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !13650)
!13650 = !{!13651, !13652, !13653}
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13649, file: !472, line: 57, baseType: !475, size: 32)
!13652 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13649, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!13653 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13649, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13646, file: !296, line: 5075, baseType: !13526, size: 64, offset: 96)
!13655 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13646, file: !296, line: 5076, baseType: !13524, offset: 160)
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13583, file: !379, line: 343, baseType: !13657, size: 64, offset: 928)
!13657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !13658)
!13658 = !{!13659, !13660}
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13657, file: !446, line: 63, baseType: !121, size: 32)
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13657, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!13661 = !DILocation(line: 0, scope: !13573)
!13662 = !DILocalVariable(name: "l", arg: 1, scope: !13663, file: !316, line: 136, type: !13666)
!13663 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !13664, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13667)
!13664 = !DISubroutineType(types: !13665)
!13665 = !{!13577, !13666}
!13666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13524, size: 32)
!13667 = !{!13662, !13668}
!13668 = !DILocalVariable(name: "k", scope: !13663, file: !316, line: 139, type: !13577)
!13669 = !DILocation(line: 0, scope: !13663, inlinedAt: !13670)
!13670 = distinct !DILocation(line: 98, column: 25, scope: !13573)
!13671 = !DILocation(line: 55, column: 2, scope: !13672, inlinedAt: !13676)
!13672 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5704, file: !5704, line: 42, type: !5705, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13673)
!13673 = !{!13674, !13675}
!13674 = !DILocalVariable(name: "key", scope: !13672, file: !5704, line: 44, type: !32)
!13675 = !DILocalVariable(name: "tmp", scope: !13672, file: !5704, line: 53, type: !32)
!13676 = distinct !DILocation(line: 145, column: 10, scope: !13663, inlinedAt: !13670)
!13677 = !{i64 1955880}
!13678 = !DILocation(line: 0, scope: !13672, inlinedAt: !13676)
!13679 = !DILocation(line: 101, column: 55, scope: !13573)
!13680 = !DILocation(line: 101, column: 25, scope: !13573)
!13681 = !DILocation(line: 103, column: 27, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13573, file: !3113, line: 103, column: 6)
!13683 = !DILocation(line: 103, column: 6, scope: !13573)
!13684 = !DILocation(line: 104, column: 3, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13682, file: !3113, line: 103, column: 36)
!13686 = !DILocation(line: 105, column: 2, scope: !13685)
!13687 = !DILocation(line: 98, column: 45, scope: !13573)
!13688 = !DILocation(line: 108, column: 2, scope: !13573)
!13689 = !DILocation(line: 109, column: 1, scope: !13573)
!13690 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !3113, file: !3113, line: 81, type: !13691, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13693)
!13691 = !DISubroutineType(types: !13692)
!13692 = !{null, !13582, !102}
!13693 = !{!13694, !13695}
!13694 = !DILocalVariable(name: "thread", arg: 1, scope: !13690, file: !3113, line: 81, type: !13582)
!13695 = !DILocalVariable(name: "data", arg: 2, scope: !13690, file: !3113, line: 81, type: !102)
!13696 = !DILocation(line: 0, scope: !13690)
!13697 = !DILocalVariable(name: "thread", arg: 1, scope: !13698, file: !13699, line: 134, type: !13582)
!13698 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13699, file: !13699, line: 134, type: !13700, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13702)
!13699 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13700 = !DISubroutineType(types: !13701)
!13701 = !{null, !13582, !32, !102}
!13702 = !{!13697, !13703, !13704}
!13703 = !DILocalVariable(name: "value", arg: 2, scope: !13698, file: !13699, line: 135, type: !32)
!13704 = !DILocalVariable(name: "data", arg: 3, scope: !13698, file: !13699, line: 136, type: !102)
!13705 = !DILocation(line: 0, scope: !13698, inlinedAt: !13706)
!13706 = distinct !DILocation(line: 83, column: 2, scope: !13690)
!13707 = !DILocalVariable(name: "thread", arg: 1, scope: !13708, file: !12826, line: 65, type: !13582)
!13708 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12826, file: !12826, line: 65, type: !13709, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13711)
!13709 = !DISubroutineType(types: !13710)
!13710 = !{null, !13582, !32}
!13711 = !{!13707, !13712}
!13712 = !DILocalVariable(name: "value", arg: 2, scope: !13708, file: !12826, line: 65, type: !32)
!13713 = !DILocation(line: 0, scope: !13708, inlinedAt: !13714)
!13714 = distinct !DILocation(line: 138, column: 2, scope: !13698, inlinedAt: !13706)
!13715 = !DILocation(line: 67, column: 15, scope: !13708, inlinedAt: !13714)
!13716 = !DILocation(line: 67, column: 33, scope: !13708, inlinedAt: !13714)
!13717 = !DILocation(line: 139, column: 15, scope: !13698, inlinedAt: !13706)
!13718 = !DILocation(line: 139, column: 25, scope: !13698, inlinedAt: !13706)
!13719 = !DILocation(line: 84, column: 2, scope: !13690)
!13720 = !DILocation(line: 85, column: 1, scope: !13690)
!13721 = distinct !DISubprogram(name: "k_queue_insert", scope: !3113, file: !3113, line: 175, type: !13722, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13724)
!13722 = !DISubroutineType(types: !13723)
!13723 = !{null, !13514, !102, !102}
!13724 = !{!13725, !13726, !13727}
!13725 = !DILocalVariable(name: "queue", arg: 1, scope: !13721, file: !3113, line: 175, type: !13514)
!13726 = !DILocalVariable(name: "prev", arg: 2, scope: !13721, file: !3113, line: 175, type: !102)
!13727 = !DILocalVariable(name: "data", arg: 3, scope: !13721, file: !3113, line: 175, type: !102)
!13728 = !DILocation(line: 0, scope: !13721)
!13729 = !DILocation(line: 179, column: 8, scope: !13721)
!13730 = !DILocation(line: 182, column: 1, scope: !13721)
!13731 = distinct !DISubprogram(name: "queue_insert", scope: !3113, file: !3113, line: 120, type: !13732, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13734)
!13732 = !DISubroutineType(types: !13733)
!13733 = !{!725, !13514, !102, !102, !157, !157}
!13734 = !{!13735, !13736, !13737, !13738, !13739, !13740, !13741, !13742}
!13735 = !DILocalVariable(name: "queue", arg: 1, scope: !13731, file: !3113, line: 120, type: !13514)
!13736 = !DILocalVariable(name: "prev", arg: 2, scope: !13731, file: !3113, line: 120, type: !102)
!13737 = !DILocalVariable(name: "data", arg: 3, scope: !13731, file: !3113, line: 120, type: !102)
!13738 = !DILocalVariable(name: "alloc", arg: 4, scope: !13731, file: !3113, line: 121, type: !157)
!13739 = !DILocalVariable(name: "is_append", arg: 5, scope: !13731, file: !3113, line: 121, type: !157)
!13740 = !DILocalVariable(name: "first_pending_thread", scope: !13731, file: !3113, line: 123, type: !13582)
!13741 = !DILocalVariable(name: "key", scope: !13731, file: !3113, line: 124, type: !13577)
!13742 = !DILocalVariable(name: "anode", scope: !13743, file: !3113, line: 146, type: !3111)
!13743 = distinct !DILexicalBlock(scope: !13744, file: !3113, line: 145, column: 13)
!13744 = distinct !DILexicalBlock(scope: !13731, file: !3113, line: 145, column: 6)
!13745 = !DILocation(line: 0, scope: !13731)
!13746 = !DILocation(line: 124, column: 45, scope: !13731)
!13747 = !DILocation(line: 0, scope: !13663, inlinedAt: !13748)
!13748 = distinct !DILocation(line: 124, column: 25, scope: !13731)
!13749 = !DILocation(line: 55, column: 2, scope: !13672, inlinedAt: !13750)
!13750 = distinct !DILocation(line: 145, column: 10, scope: !13663, inlinedAt: !13748)
!13751 = !DILocation(line: 0, scope: !13672, inlinedAt: !13750)
!13752 = !DILocation(line: 128, column: 6, scope: !13731)
!13753 = !DILocation(line: 129, column: 39, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13755, file: !3113, line: 128, column: 17)
!13755 = distinct !DILexicalBlock(scope: !13731, file: !3113, line: 128, column: 6)
!13756 = !DILocation(line: 129, column: 10, scope: !13754)
!13757 = !DILocation(line: 130, column: 2, scope: !13754)
!13758 = !DILocation(line: 131, column: 55, scope: !13731)
!13759 = !DILocation(line: 131, column: 25, scope: !13731)
!13760 = !DILocation(line: 133, column: 27, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13731, file: !3113, line: 133, column: 6)
!13762 = !DILocation(line: 133, column: 6, scope: !13731)
!13763 = !DILocation(line: 136, column: 3, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13761, file: !3113, line: 133, column: 36)
!13765 = !DILocation(line: 137, column: 3, scope: !13764)
!13766 = !DILocation(line: 141, column: 3, scope: !13764)
!13767 = !DILocation(line: 145, column: 6, scope: !13731)
!13768 = !DILocation(line: 148, column: 11, scope: !13743)
!13769 = !DILocation(line: 0, scope: !13743)
!13770 = !DILocation(line: 149, column: 13, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13743, file: !3113, line: 149, column: 7)
!13772 = !DILocation(line: 149, column: 7, scope: !13743)
!13773 = !DILocalVariable(name: "key", arg: 2, scope: !13774, file: !316, line: 190, type: !13577)
!13774 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !13775, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13777)
!13775 = !DISubroutineType(types: !13776)
!13776 = !{null, !13666, !13577}
!13777 = !{!13778, !13773}
!13778 = !DILocalVariable(name: "l", arg: 1, scope: !13774, file: !316, line: 189, type: !13666)
!13779 = !DILocation(line: 0, scope: !13774, inlinedAt: !13780)
!13780 = distinct !DILocation(line: 150, column: 4, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13771, file: !3113, line: 149, column: 22)
!13782 = !DILocalVariable(name: "key", arg: 1, scope: !13783, file: !5704, line: 84, type: !32)
!13783 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5704, file: !5704, line: 84, type: !5715, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13784)
!13784 = !{!13782}
!13785 = !DILocation(line: 0, scope: !13783, inlinedAt: !13786)
!13786 = distinct !DILocation(line: 215, column: 2, scope: !13774, inlinedAt: !13780)
!13787 = !DILocation(line: 95, column: 2, scope: !13783, inlinedAt: !13786)
!13788 = !{i64 1956697}
!13789 = !DILocation(line: 157, column: 10, scope: !13743)
!13790 = !DILocation(line: 157, column: 15, scope: !13743)
!13791 = !DILocation(line: 158, column: 27, scope: !13743)
!13792 = !DILocation(line: 158, column: 3, scope: !13743)
!13793 = !DILocation(line: 161, column: 19, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13744, file: !3113, line: 160, column: 9)
!13795 = !DILocation(line: 161, column: 3, scope: !13794)
!13796 = !DILocation(line: 166, column: 42, scope: !13731)
!13797 = !DILocation(line: 166, column: 28, scope: !13731)
!13798 = !DILocation(line: 166, column: 36, scope: !13731)
!13799 = !DILocation(line: 166, column: 2, scope: !13731)
!13800 = !DILocation(line: 168, column: 2, scope: !13731)
!13801 = !DILocation(line: 172, column: 2, scope: !13731)
!13802 = !DILocation(line: 173, column: 1, scope: !13731)
!13803 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !303, file: !303, line: 255, type: !13804, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13806)
!13804 = !DISubroutineType(types: !13805)
!13805 = !{!3122, !13542}
!13806 = !{!13807}
!13807 = !DILocalVariable(name: "list", arg: 1, scope: !13803, file: !303, line: 255, type: !13542)
!13808 = !DILocation(line: 0, scope: !13803)
!13809 = !DILocation(line: 257, column: 15, scope: !13803)
!13810 = !DILocation(line: 257, column: 2, scope: !13803)
!13811 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13699, file: !13699, line: 102, type: !13812, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13813)
!13812 = !DISubroutineType(types: !3076)
!13813 = !{!13814}
!13814 = !DILocalVariable(name: "size", arg: 1, scope: !13811, file: !13699, line: 102, type: !204)
!13815 = !DILocation(line: 0, scope: !13811)
!13816 = !DILocation(line: 104, column: 9, scope: !13811)
!13817 = !DILocation(line: 104, column: 2, scope: !13811)
!13818 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !303, file: !303, line: 288, type: !13819, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13821)
!13819 = !DISubroutineType(types: !13820)
!13820 = !{null, !3122, !154}
!13821 = !{!13822, !13823}
!13822 = !DILocalVariable(name: "node", arg: 1, scope: !13818, file: !303, line: 288, type: !3122)
!13823 = !DILocalVariable(name: "flags", arg: 2, scope: !13818, file: !303, line: 288, type: !154)
!13824 = !DILocation(line: 0, scope: !13818)
!13825 = !DILocation(line: 291, column: 25, scope: !13818)
!13826 = !DILocation(line: 291, column: 8, scope: !13818)
!13827 = !DILocation(line: 291, column: 23, scope: !13818)
!13828 = !DILocation(line: 292, column: 1, scope: !13818)
!13829 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !303, file: !303, line: 420, type: !13830, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13832)
!13830 = !DISubroutineType(types: !13831)
!13831 = !{null, !13542, !3122, !3122}
!13832 = !{!13833, !13834, !13835}
!13833 = !DILocalVariable(name: "list", arg: 1, scope: !13829, file: !303, line: 420, type: !13542)
!13834 = !DILocalVariable(name: "prev", arg: 2, scope: !13829, file: !303, line: 420, type: !3122)
!13835 = !DILocalVariable(name: "node", arg: 3, scope: !13829, file: !303, line: 420, type: !3122)
!13836 = !DILocation(line: 0, scope: !13829)
!13837 = !DILocation(line: 420, column: 1, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13829, file: !303, line: 420, column: 1)
!13839 = !DILocation(line: 420, column: 1, scope: !13829)
!13840 = !DILocation(line: 420, column: 1, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13838, file: !303, line: 420, column: 1)
!13842 = !DILocation(line: 420, column: 1, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13838, file: !303, line: 420, column: 1)
!13844 = !DILocation(line: 420, column: 1, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13843, file: !303, line: 420, column: 1)
!13846 = !DILocation(line: 420, column: 1, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13843, file: !303, line: 420, column: 1)
!13848 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !303, file: !303, line: 360, type: !13849, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13851)
!13849 = !DISubroutineType(types: !13850)
!13850 = !{null, !13542, !3122}
!13851 = !{!13852, !13853}
!13852 = !DILocalVariable(name: "list", arg: 1, scope: !13848, file: !303, line: 360, type: !13542)
!13853 = !DILocalVariable(name: "node", arg: 2, scope: !13848, file: !303, line: 360, type: !3122)
!13854 = !DILocation(line: 0, scope: !13848)
!13855 = !DILocation(line: 360, column: 1, scope: !13848)
!13856 = !DILocation(line: 360, column: 1, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13848, file: !303, line: 360, column: 1)
!13858 = !DILocation(line: 360, column: 1, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13857, file: !303, line: 360, column: 1)
!13860 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !303, file: !303, line: 211, type: !13861, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13863)
!13861 = !DISubroutineType(types: !13862)
!13862 = !{!3122, !3122}
!13863 = !{!13864}
!13864 = !DILocalVariable(name: "node", arg: 1, scope: !13860, file: !303, line: 211, type: !3122)
!13865 = !DILocation(line: 0, scope: !13860)
!13866 = !DILocation(line: 213, column: 32, scope: !13860)
!13867 = !DILocation(line: 213, column: 47, scope: !13860)
!13868 = !DILocation(line: 213, column: 9, scope: !13860)
!13869 = !DILocation(line: 213, column: 2, scope: !13860)
!13870 = distinct !DISubprogram(name: "sys_sflist_append", scope: !303, file: !303, line: 373, type: !13849, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13871)
!13871 = !{!13872, !13873}
!13872 = !DILocalVariable(name: "list", arg: 1, scope: !13870, file: !303, line: 373, type: !13542)
!13873 = !DILocalVariable(name: "node", arg: 2, scope: !13870, file: !303, line: 373, type: !3122)
!13874 = !DILocation(line: 0, scope: !13870)
!13875 = !DILocation(line: 373, column: 1, scope: !13870)
!13876 = !DILocation(line: 373, column: 1, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13870, file: !303, line: 373, column: 1)
!13878 = !DILocation(line: 373, column: 1, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13877, file: !303, line: 373, column: 1)
!13880 = !DILocation(line: 373, column: 1, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13877, file: !303, line: 373, column: 1)
!13882 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !303, file: !303, line: 218, type: !13883, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13885)
!13883 = !DISubroutineType(types: !13884)
!13884 = !{null, !3122, !3122}
!13885 = !{!13886, !13887, !13888}
!13886 = !DILocalVariable(name: "parent", arg: 1, scope: !13882, file: !303, line: 218, type: !3122)
!13887 = !DILocalVariable(name: "child", arg: 2, scope: !13882, file: !303, line: 219, type: !3122)
!13888 = !DILocalVariable(name: "cur_flags", scope: !13882, file: !303, line: 221, type: !154)
!13889 = !DILocation(line: 0, scope: !13882)
!13890 = !DILocation(line: 221, column: 22, scope: !13882)
!13891 = !DILocation(line: 223, column: 27, scope: !13882)
!13892 = !DILocation(line: 223, column: 39, scope: !13882)
!13893 = !DILocation(line: 223, column: 37, scope: !13882)
!13894 = !DILocation(line: 223, column: 10, scope: !13882)
!13895 = !DILocation(line: 223, column: 25, scope: !13882)
!13896 = !DILocation(line: 224, column: 1, scope: !13882)
!13897 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !303, file: !303, line: 231, type: !13849, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13898)
!13898 = !{!13899, !13900}
!13899 = !DILocalVariable(name: "list", arg: 1, scope: !13897, file: !303, line: 231, type: !13542)
!13900 = !DILocalVariable(name: "node", arg: 2, scope: !13897, file: !303, line: 231, type: !3122)
!13901 = !DILocation(line: 0, scope: !13897)
!13902 = !DILocation(line: 233, column: 8, scope: !13897)
!13903 = !DILocation(line: 233, column: 13, scope: !13897)
!13904 = !DILocation(line: 234, column: 1, scope: !13897)
!13905 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !303, file: !303, line: 226, type: !13849, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13906)
!13906 = !{!13907, !13908}
!13907 = !DILocalVariable(name: "list", arg: 1, scope: !13905, file: !303, line: 226, type: !13542)
!13908 = !DILocalVariable(name: "node", arg: 2, scope: !13905, file: !303, line: 226, type: !3122)
!13909 = !DILocation(line: 0, scope: !13905)
!13910 = !DILocation(line: 228, column: 8, scope: !13905)
!13911 = !DILocation(line: 228, column: 13, scope: !13905)
!13912 = !DILocation(line: 229, column: 1, scope: !13905)
!13913 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !303, file: !303, line: 243, type: !13804, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13914)
!13914 = !{!13915}
!13915 = !DILocalVariable(name: "list", arg: 1, scope: !13913, file: !303, line: 243, type: !13542)
!13916 = !DILocation(line: 0, scope: !13913)
!13917 = !DILocation(line: 245, column: 15, scope: !13913)
!13918 = !DILocation(line: 245, column: 2, scope: !13913)
!13919 = distinct !DISubprogram(name: "k_queue_append", scope: !3113, file: !3113, line: 184, type: !13920, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13922)
!13920 = !DISubroutineType(types: !13921)
!13921 = !{null, !13514, !102}
!13922 = !{!13923, !13924}
!13923 = !DILocalVariable(name: "queue", arg: 1, scope: !13919, file: !3113, line: 184, type: !13514)
!13924 = !DILocalVariable(name: "data", arg: 2, scope: !13919, file: !3113, line: 184, type: !102)
!13925 = !DILocation(line: 0, scope: !13919)
!13926 = !DILocation(line: 188, column: 8, scope: !13919)
!13927 = !DILocation(line: 191, column: 1, scope: !13919)
!13928 = distinct !DISubprogram(name: "k_queue_prepend", scope: !3113, file: !3113, line: 193, type: !13920, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13929)
!13929 = !{!13930, !13931}
!13930 = !DILocalVariable(name: "queue", arg: 1, scope: !13928, file: !3113, line: 193, type: !13514)
!13931 = !DILocalVariable(name: "data", arg: 2, scope: !13928, file: !3113, line: 193, type: !102)
!13932 = !DILocation(line: 0, scope: !13928)
!13933 = !DILocation(line: 197, column: 8, scope: !13928)
!13934 = !DILocation(line: 200, column: 1, scope: !13928)
!13935 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !3113, file: !3113, line: 202, type: !13936, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13938)
!13936 = !DISubroutineType(types: !13937)
!13937 = !{!725, !13514, !102}
!13938 = !{!13939, !13940, !13941}
!13939 = !DILocalVariable(name: "queue", arg: 1, scope: !13935, file: !3113, line: 202, type: !13514)
!13940 = !DILocalVariable(name: "data", arg: 2, scope: !13935, file: !3113, line: 202, type: !102)
!13941 = !DILocalVariable(name: "ret", scope: !13935, file: !3113, line: 206, type: !725)
!13942 = !DILocation(line: 0, scope: !13935)
!13943 = !DILocation(line: 206, column: 16, scope: !13935)
!13944 = !DILocation(line: 210, column: 2, scope: !13935)
!13945 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !3113, file: !3113, line: 223, type: !13936, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13946)
!13946 = !{!13947, !13948, !13949}
!13947 = !DILocalVariable(name: "queue", arg: 1, scope: !13945, file: !3113, line: 223, type: !13514)
!13948 = !DILocalVariable(name: "data", arg: 2, scope: !13945, file: !3113, line: 223, type: !102)
!13949 = !DILocalVariable(name: "ret", scope: !13945, file: !3113, line: 227, type: !725)
!13950 = !DILocation(line: 0, scope: !13945)
!13951 = !DILocation(line: 227, column: 16, scope: !13945)
!13952 = !DILocation(line: 231, column: 2, scope: !13945)
!13953 = distinct !DISubprogram(name: "k_queue_append_list", scope: !3113, file: !3113, line: 244, type: !13954, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13956)
!13954 = !DISubroutineType(types: !13955)
!13955 = !{!103, !13514, !102, !102}
!13956 = !{!13957, !13958, !13959, !13960, !13961}
!13957 = !DILocalVariable(name: "queue", arg: 1, scope: !13953, file: !3113, line: 244, type: !13514)
!13958 = !DILocalVariable(name: "head", arg: 2, scope: !13953, file: !3113, line: 244, type: !102)
!13959 = !DILocalVariable(name: "tail", arg: 3, scope: !13953, file: !3113, line: 244, type: !102)
!13960 = !DILocalVariable(name: "key", scope: !13953, file: !3113, line: 255, type: !13577)
!13961 = !DILocalVariable(name: "thread", scope: !13953, file: !3113, line: 256, type: !13582)
!13962 = !DILocation(line: 0, scope: !13953)
!13963 = !DILocation(line: 249, column: 2, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13953, file: !3113, line: 249, column: 2)
!13965 = !DILocation(line: 255, column: 45, scope: !13953)
!13966 = !DILocation(line: 0, scope: !13663, inlinedAt: !13967)
!13967 = distinct !DILocation(line: 255, column: 25, scope: !13953)
!13968 = !DILocation(line: 55, column: 2, scope: !13672, inlinedAt: !13969)
!13969 = distinct !DILocation(line: 145, column: 10, scope: !13663, inlinedAt: !13967)
!13970 = !DILocation(line: 0, scope: !13672, inlinedAt: !13969)
!13971 = !DILocation(line: 259, column: 42, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13973, file: !3113, line: 258, column: 20)
!13973 = distinct !DILexicalBlock(scope: !13953, file: !3113, line: 258, column: 6)
!13974 = !DILocation(line: 259, column: 12, scope: !13972)
!13975 = !DILocation(line: 262, column: 24, scope: !13953)
!13976 = !DILocation(line: 262, column: 2, scope: !13953)
!13977 = !DILocation(line: 263, column: 3, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13953, file: !3113, line: 262, column: 45)
!13979 = !DILocation(line: 264, column: 11, scope: !13978)
!13980 = !DILocation(line: 264, column: 10, scope: !13978)
!13981 = !DILocation(line: 265, column: 12, scope: !13978)
!13982 = !DILocation(line: 262, column: 15, scope: !13953)
!13983 = distinct !{!13983, !13976, !13984}
!13984 = !DILocation(line: 266, column: 2, scope: !13953)
!13985 = !DILocation(line: 268, column: 6, scope: !13953)
!13986 = !DILocation(line: 269, column: 34, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13988, file: !3113, line: 268, column: 20)
!13988 = distinct !DILexicalBlock(scope: !13953, file: !3113, line: 268, column: 6)
!13989 = !DILocation(line: 269, column: 3, scope: !13987)
!13990 = !DILocation(line: 270, column: 2, scope: !13987)
!13991 = !DILocation(line: 275, column: 2, scope: !13953)
!13992 = !DILocation(line: 277, column: 1, scope: !13953)
!13993 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !303, file: !303, line: 391, type: !13994, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13996)
!13994 = !DISubroutineType(types: !13995)
!13995 = !{null, !13542, !102, !102}
!13996 = !{!13997, !13998, !13999}
!13997 = !DILocalVariable(name: "list", arg: 1, scope: !13993, file: !303, line: 391, type: !13542)
!13998 = !DILocalVariable(name: "head", arg: 2, scope: !13993, file: !303, line: 391, type: !102)
!13999 = !DILocalVariable(name: "tail", arg: 3, scope: !13993, file: !303, line: 391, type: !102)
!14000 = !DILocation(line: 0, scope: !13993)
!14001 = !DILocation(line: 391, column: 1, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13993, file: !303, line: 391, column: 1)
!14003 = !DILocation(line: 391, column: 1, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !14005, file: !303, line: 391, column: 1)
!14005 = distinct !DILexicalBlock(scope: !14002, file: !303, line: 391, column: 1)
!14006 = !DILocation(line: 0, scope: !14004)
!14007 = !DILocation(line: 391, column: 1, scope: !14005)
!14008 = !DILocation(line: 391, column: 1, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14004, file: !303, line: 391, column: 1)
!14010 = !DILocation(line: 391, column: 1, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !14004, file: !303, line: 391, column: 1)
!14012 = !DILocation(line: 391, column: 1, scope: !13993)
!14013 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !3113, file: !3113, line: 279, type: !14014, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14028)
!14014 = !DISubroutineType(types: !14015)
!14015 = !{!103, !13514, !14016}
!14016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14017, size: 32)
!14017 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1180, line: 40, baseType: !14018)
!14018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1180, line: 35, size: 64, elements: !14019)
!14019 = !{!14020, !14027}
!14020 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14018, file: !1180, line: 36, baseType: !14021, size: 32)
!14021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14022, size: 32)
!14022 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1180, line: 33, baseType: !14023)
!14023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1180, line: 29, size: 32, elements: !14024)
!14024 = !{!14025}
!14025 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14023, file: !1180, line: 30, baseType: !14026, size: 32)
!14026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14023, size: 32)
!14027 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14018, file: !1180, line: 37, baseType: !14021, size: 32, offset: 32)
!14028 = !{!14029, !14030, !14031}
!14029 = !DILocalVariable(name: "queue", arg: 1, scope: !14013, file: !3113, line: 279, type: !13514)
!14030 = !DILocalVariable(name: "list", arg: 2, scope: !14013, file: !3113, line: 279, type: !14016)
!14031 = !DILocalVariable(name: "ret", scope: !14013, file: !3113, line: 281, type: !103)
!14032 = !DILocation(line: 0, scope: !14013)
!14033 = !DILocation(line: 286, column: 2, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14013, file: !3113, line: 286, column: 2)
!14035 = !DILocation(line: 286, column: 2, scope: !14013)
!14036 = !DILocation(line: 301, column: 41, scope: !14013)
!14037 = !DILocation(line: 301, column: 53, scope: !14013)
!14038 = !DILocation(line: 301, column: 8, scope: !14013)
!14039 = !DILocation(line: 302, column: 2, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14013, file: !3113, line: 302, column: 2)
!14041 = !DILocation(line: 302, column: 2, scope: !14013)
!14042 = !DILocation(line: 307, column: 2, scope: !14013)
!14043 = !DILocation(line: 311, column: 2, scope: !14013)
!14044 = !DILocation(line: 312, column: 1, scope: !14013)
!14045 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1180, file: !1180, line: 261, type: !14046, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14048)
!14046 = !DISubroutineType(types: !14047)
!14047 = !{!157, !14016}
!14048 = !{!14049}
!14049 = !DILocalVariable(name: "list", arg: 1, scope: !14045, file: !1180, line: 261, type: !14016)
!14050 = !DILocation(line: 0, scope: !14045)
!14051 = !DILocation(line: 261, column: 1, scope: !14045)
!14052 = distinct !DISubprogram(name: "sys_slist_init", scope: !1180, file: !1180, line: 196, type: !14053, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14055)
!14053 = !DISubroutineType(types: !14054)
!14054 = !{null, !14016}
!14055 = !{!14056}
!14056 = !DILocalVariable(name: "list", arg: 1, scope: !14052, file: !1180, line: 196, type: !14016)
!14057 = !DILocation(line: 0, scope: !14052)
!14058 = !DILocation(line: 198, column: 8, scope: !14052)
!14059 = !DILocation(line: 198, column: 13, scope: !14052)
!14060 = !DILocation(line: 199, column: 8, scope: !14052)
!14061 = !DILocation(line: 199, column: 13, scope: !14052)
!14062 = !DILocation(line: 200, column: 1, scope: !14052)
!14063 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1180, file: !1180, line: 231, type: !14064, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14066)
!14064 = !DISubroutineType(types: !14065)
!14065 = !{!14021, !14016}
!14066 = !{!14067}
!14067 = !DILocalVariable(name: "list", arg: 1, scope: !14063, file: !1180, line: 231, type: !14016)
!14068 = !DILocation(line: 0, scope: !14063)
!14069 = !DILocation(line: 233, column: 15, scope: !14063)
!14070 = !DILocation(line: 233, column: 2, scope: !14063)
!14071 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !3113, file: !3113, line: 314, type: !14072, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14078)
!14072 = !DISubroutineType(types: !14073)
!14073 = !{!102, !13514, !14074}
!14074 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !14075)
!14075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !14076)
!14076 = !{!14077}
!14077 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14075, file: !201, line: 66, baseType: !200, size: 64)
!14078 = !{!14079, !14080, !14081, !14082, !14083, !14086}
!14079 = !DILocalVariable(name: "queue", arg: 1, scope: !14071, file: !3113, line: 314, type: !13514)
!14080 = !DILocalVariable(name: "timeout", arg: 2, scope: !14071, file: !3113, line: 314, type: !14074)
!14081 = !DILocalVariable(name: "key", scope: !14071, file: !3113, line: 316, type: !13577)
!14082 = !DILocalVariable(name: "data", scope: !14071, file: !3113, line: 317, type: !102)
!14083 = !DILocalVariable(name: "node", scope: !14084, file: !3113, line: 322, type: !3122)
!14084 = distinct !DILexicalBlock(scope: !14085, file: !3113, line: 321, column: 52)
!14085 = distinct !DILexicalBlock(scope: !14071, file: !3113, line: 321, column: 6)
!14086 = !DILocalVariable(name: "ret", scope: !14071, file: !3113, line: 343, type: !103)
!14087 = !DILocation(line: 0, scope: !14071)
!14088 = !DILocation(line: 316, column: 45, scope: !14071)
!14089 = !DILocation(line: 0, scope: !13663, inlinedAt: !14090)
!14090 = distinct !DILocation(line: 316, column: 25, scope: !14071)
!14091 = !DILocation(line: 55, column: 2, scope: !13672, inlinedAt: !14092)
!14092 = distinct !DILocation(line: 145, column: 10, scope: !13663, inlinedAt: !14090)
!14093 = !DILocation(line: 0, scope: !13672, inlinedAt: !14092)
!14094 = !DILocation(line: 321, column: 6, scope: !14085)
!14095 = !DILocation(line: 321, column: 6, scope: !14071)
!14096 = !{!"branch_weights", i32 1, i32 2000}
!14097 = !DILocation(line: 324, column: 10, scope: !14084)
!14098 = !DILocation(line: 0, scope: !14084)
!14099 = !DILocation(line: 325, column: 10, scope: !14084)
!14100 = !DILocation(line: 0, scope: !13774, inlinedAt: !14101)
!14101 = distinct !DILocation(line: 326, column: 3, scope: !14084)
!14102 = !DILocation(line: 0, scope: !13783, inlinedAt: !14103)
!14103 = distinct !DILocation(line: 215, column: 2, scope: !13774, inlinedAt: !14101)
!14104 = !DILocation(line: 95, column: 2, scope: !13783, inlinedAt: !14103)
!14105 = !DILocation(line: 335, column: 6, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14071, file: !3113, line: 335, column: 6)
!14107 = !DILocation(line: 335, column: 6, scope: !14071)
!14108 = !DILocation(line: 0, scope: !13774, inlinedAt: !14109)
!14109 = distinct !DILocation(line: 336, column: 3, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14106, file: !3113, line: 335, column: 40)
!14111 = !DILocation(line: 0, scope: !13783, inlinedAt: !14112)
!14112 = distinct !DILocation(line: 215, column: 2, scope: !13774, inlinedAt: !14109)
!14113 = !DILocation(line: 95, column: 2, scope: !13783, inlinedAt: !14112)
!14114 = !DILocation(line: 340, column: 3, scope: !14110)
!14115 = !DILocation(line: 343, column: 51, scope: !14071)
!14116 = !DILocation(line: 343, column: 12, scope: !14071)
!14117 = !DILocation(line: 348, column: 14, scope: !14071)
!14118 = !DILocation(line: 348, column: 9, scope: !14071)
!14119 = !DILocation(line: 348, column: 29, scope: !14071)
!14120 = !DILocation(line: 348, column: 44, scope: !14071)
!14121 = !DILocation(line: 349, column: 1, scope: !14071)
!14122 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !303, file: !303, line: 323, type: !14123, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14125)
!14123 = !DISubroutineType(types: !14124)
!14124 = !{!157, !13542}
!14125 = !{!14126}
!14126 = !DILocalVariable(name: "list", arg: 1, scope: !14122, file: !303, line: 323, type: !13542)
!14127 = !DILocation(line: 0, scope: !14122)
!14128 = !DILocation(line: 323, column: 1, scope: !14122)
!14129 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !303, file: !303, line: 434, type: !13804, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14130)
!14130 = !{!14131, !14132}
!14131 = !DILocalVariable(name: "list", arg: 1, scope: !14129, file: !303, line: 434, type: !13542)
!14132 = !DILocalVariable(name: "node", scope: !14129, file: !303, line: 434, type: !3122)
!14133 = !DILocation(line: 0, scope: !14129)
!14134 = !DILocation(line: 434, column: 1, scope: !14129)
!14135 = !DILocation(line: 434, column: 1, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14129, file: !303, line: 434, column: 1)
!14137 = !DILocation(line: 434, column: 1, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14136, file: !303, line: 434, column: 1)
!14139 = distinct !DISubprogram(name: "k_queue_remove", scope: !3113, file: !3113, line: 351, type: !14140, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14142)
!14140 = !DISubroutineType(types: !14141)
!14141 = !{!157, !13514, !102}
!14142 = !{!14143, !14144, !14145}
!14143 = !DILocalVariable(name: "queue", arg: 1, scope: !14139, file: !3113, line: 351, type: !13514)
!14144 = !DILocalVariable(name: "data", arg: 2, scope: !14139, file: !3113, line: 351, type: !102)
!14145 = !DILocalVariable(name: "ret", scope: !14139, file: !3113, line: 355, type: !157)
!14146 = !DILocation(line: 0, scope: !14139)
!14147 = !DILocation(line: 355, column: 48, scope: !14139)
!14148 = !DILocation(line: 355, column: 56, scope: !14139)
!14149 = !DILocation(line: 355, column: 13, scope: !14139)
!14150 = !DILocation(line: 359, column: 2, scope: !14139)
!14151 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !303, file: !303, line: 478, type: !14152, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14154)
!14152 = !DISubroutineType(types: !14153)
!14153 = !{!157, !13542, !3122}
!14154 = !{!14155, !14156, !14157, !14158}
!14155 = !DILocalVariable(name: "list", arg: 1, scope: !14151, file: !303, line: 478, type: !13542)
!14156 = !DILocalVariable(name: "node", arg: 2, scope: !14151, file: !303, line: 478, type: !3122)
!14157 = !DILocalVariable(name: "prev", scope: !14151, file: !303, line: 478, type: !3122)
!14158 = !DILocalVariable(name: "test", scope: !14151, file: !303, line: 478, type: !3122)
!14159 = !DILocation(line: 0, scope: !14151)
!14160 = !DILocation(line: 478, column: 1, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14151, file: !303, line: 478, column: 1)
!14162 = !DILocation(line: 478, column: 1, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14161, file: !303, line: 478, column: 1)
!14164 = !DILocation(line: 478, column: 1, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14166, file: !303, line: 478, column: 1)
!14166 = distinct !DILexicalBlock(scope: !14163, file: !303, line: 478, column: 1)
!14167 = !DILocation(line: 478, column: 1, scope: !14166)
!14168 = distinct !{!14168, !14160, !14160}
!14169 = !DILocation(line: 478, column: 1, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14165, file: !303, line: 478, column: 1)
!14171 = !DILocation(line: 478, column: 1, scope: !14151)
!14172 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !303, file: !303, line: 463, type: !13830, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14173)
!14173 = !{!14174, !14175, !14176}
!14174 = !DILocalVariable(name: "list", arg: 1, scope: !14172, file: !303, line: 463, type: !13542)
!14175 = !DILocalVariable(name: "prev_node", arg: 2, scope: !14172, file: !303, line: 463, type: !3122)
!14176 = !DILocalVariable(name: "node", arg: 3, scope: !14172, file: !303, line: 463, type: !3122)
!14177 = !DILocation(line: 0, scope: !14172)
!14178 = !DILocation(line: 463, column: 1, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14172, file: !303, line: 463, column: 1)
!14180 = !DILocation(line: 0, scope: !14179)
!14181 = !DILocation(line: 463, column: 1, scope: !14172)
!14182 = !DILocation(line: 463, column: 1, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14179, file: !303, line: 463, column: 1)
!14184 = !DILocation(line: 463, column: 1, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14183, file: !303, line: 463, column: 1)
!14186 = !DILocation(line: 463, column: 1, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14185, file: !303, line: 463, column: 1)
!14188 = !DILocation(line: 463, column: 1, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14179, file: !303, line: 463, column: 1)
!14190 = !DILocation(line: 463, column: 1, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14189, file: !303, line: 463, column: 1)
!14192 = !DILocation(line: 463, column: 1, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14191, file: !303, line: 463, column: 1)
!14194 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !303, file: !303, line: 347, type: !13861, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14195)
!14195 = !{!14196}
!14196 = !DILocalVariable(name: "node", arg: 1, scope: !14194, file: !303, line: 347, type: !3122)
!14197 = !DILocation(line: 0, scope: !14194)
!14198 = !DILocation(line: 347, column: 1, scope: !14194)
!14199 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !303, file: !303, line: 336, type: !13861, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14200)
!14200 = !{!14201}
!14201 = !DILocalVariable(name: "node", arg: 1, scope: !14199, file: !303, line: 336, type: !3122)
!14202 = !DILocation(line: 0, scope: !14199)
!14203 = !DILocation(line: 336, column: 1, scope: !14199)
!14204 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !3113, file: !3113, line: 362, type: !14140, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14205)
!14205 = !{!14206, !14207, !14208}
!14206 = !DILocalVariable(name: "queue", arg: 1, scope: !14204, file: !3113, line: 362, type: !13514)
!14207 = !DILocalVariable(name: "data", arg: 2, scope: !14204, file: !3113, line: 362, type: !102)
!14208 = !DILocalVariable(name: "test", scope: !14204, file: !3113, line: 366, type: !3122)
!14209 = !DILocation(line: 0, scope: !14204)
!14210 = !DILocation(line: 368, column: 2, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14204, file: !3113, line: 368, column: 2)
!14212 = !DILocation(line: 368, column: 2, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14211, file: !3113, line: 368, column: 2)
!14214 = !DILocation(line: 369, column: 12, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14216, file: !3113, line: 369, column: 7)
!14216 = distinct !DILexicalBlock(scope: !14213, file: !3113, line: 368, column: 49)
!14217 = !DILocation(line: 369, column: 7, scope: !14216)
!14218 = distinct !{!14218, !14210, !14219}
!14219 = !DILocation(line: 374, column: 2, scope: !14211)
!14220 = !DILocation(line: 376, column: 2, scope: !14204)
!14221 = !DILocation(line: 380, column: 2, scope: !14204)
!14222 = !DILocation(line: 381, column: 1, scope: !14204)
!14223 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !3113, file: !3113, line: 383, type: !14224, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14226)
!14224 = !DISubroutineType(types: !14225)
!14225 = !{!102, !13514}
!14226 = !{!14227, !14228}
!14227 = !DILocalVariable(name: "queue", arg: 1, scope: !14223, file: !3113, line: 383, type: !13514)
!14228 = !DILocalVariable(name: "ret", scope: !14223, file: !3113, line: 385, type: !102)
!14229 = !DILocation(line: 0, scope: !14223)
!14230 = !DILocation(line: 385, column: 61, scope: !14223)
!14231 = !DILocation(line: 385, column: 32, scope: !14223)
!14232 = !DILocation(line: 385, column: 14, scope: !14223)
!14233 = !DILocation(line: 389, column: 2, scope: !14223)
!14234 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !3113, file: !3113, line: 392, type: !14224, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !14235)
!14235 = !{!14236, !14237}
!14236 = !DILocalVariable(name: "queue", arg: 1, scope: !14234, file: !3113, line: 392, type: !13514)
!14237 = !DILocalVariable(name: "ret", scope: !14234, file: !3113, line: 394, type: !102)
!14238 = !DILocation(line: 0, scope: !14234)
!14239 = !DILocation(line: 394, column: 61, scope: !14234)
!14240 = !DILocation(line: 394, column: 32, scope: !14234)
!14241 = !DILocation(line: 394, column: 14, scope: !14234)
!14242 = !DILocation(line: 398, column: 2, scope: !14234)
!14243 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2420, file: !2420, line: 93, type: !14244, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14246)
!14244 = !DISubroutineType(types: !14245)
!14245 = !{!725, !2315, !2315}
!14246 = !{!14247, !14248, !14249, !14250}
!14247 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14243, file: !2420, line: 93, type: !2315)
!14248 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14243, file: !2420, line: 94, type: !2315)
!14249 = !DILocalVariable(name: "b1", scope: !14243, file: !2420, line: 97, type: !725)
!14250 = !DILocalVariable(name: "b2", scope: !14243, file: !2420, line: 98, type: !725)
!14251 = !DILocation(line: 0, scope: !14243)
!14252 = !DILocation(line: 97, column: 30, scope: !14243)
!14253 = !DILocation(line: 98, column: 30, scope: !14243)
!14254 = !DILocation(line: 100, column: 9, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14243, file: !2420, line: 100, column: 6)
!14256 = !DILocation(line: 100, column: 6, scope: !14243)
!14257 = !DILocation(line: 125, column: 1, scope: !14243)
!14258 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2420, file: !2420, line: 428, type: !14259, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14261)
!14259 = !DISubroutineType(types: !14260)
!14260 = !{null, !2315}
!14261 = !{!14262}
!14262 = !DILocalVariable(name: "curr", arg: 1, scope: !14258, file: !2420, line: 428, type: !2315)
!14263 = !DILocation(line: 0, scope: !14258)
!14264 = !DILocation(line: 434, column: 6, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14258, file: !2420, line: 434, column: 6)
!14266 = !DILocation(line: 434, column: 23, scope: !14265)
!14267 = !DILocation(line: 434, column: 6, scope: !14258)
!14268 = !DILocation(line: 435, column: 50, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14265, file: !2420, line: 434, column: 29)
!14270 = !DILocation(line: 435, column: 48, scope: !14269)
!14271 = !DILocation(line: 435, column: 29, scope: !14269)
!14272 = !DILocation(line: 436, column: 24, scope: !14269)
!14273 = !DILocation(line: 436, column: 3, scope: !14269)
!14274 = !DILocation(line: 437, column: 2, scope: !14269)
!14275 = !DILocation(line: 438, column: 1, scope: !14258)
!14276 = distinct !DISubprogram(name: "slice_time", scope: !2420, file: !2420, line: 407, type: !14277, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14279)
!14277 = !DISubroutineType(types: !14278)
!14278 = !{!103, !2315}
!14279 = !{!14280, !14281}
!14280 = !DILocalVariable(name: "curr", arg: 1, scope: !14276, file: !2420, line: 407, type: !2315)
!14281 = !DILocalVariable(name: "ret", scope: !14276, file: !2420, line: 409, type: !103)
!14282 = !DILocation(line: 0, scope: !14276)
!14283 = !DILocation(line: 409, column: 12, scope: !14276)
!14284 = !DILocation(line: 416, column: 2, scope: !14276)
!14285 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2420, file: !2420, line: 440, type: !14286, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14288)
!14286 = !DISubroutineType(types: !14287)
!14287 = !{null, !725, !103}
!14288 = !{!14289, !14290, !14291, !14297}
!14289 = !DILocalVariable(name: "slice", arg: 1, scope: !14285, file: !2420, line: 440, type: !725)
!14290 = !DILocalVariable(name: "prio", arg: 2, scope: !14285, file: !2420, line: 440, type: !103)
!14291 = !DILocalVariable(name: "__i", scope: !14292, file: !2420, line: 442, type: !14293)
!14292 = distinct !DILexicalBlock(scope: !14285, file: !2420, line: 442, column: 2)
!14293 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !14294)
!14294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !14295)
!14295 = !{!14296}
!14296 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14294, file: !316, line: 33, baseType: !103, size: 32)
!14297 = !DILocalVariable(name: "__key", scope: !14292, file: !2420, line: 442, type: !14293)
!14298 = !DILocation(line: 0, scope: !14285)
!14299 = !DILocation(line: 0, scope: !14292)
!14300 = !DILocalVariable(name: "l", arg: 1, scope: !14301, file: !316, line: 136, type: !14304)
!14301 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !14302, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14305)
!14302 = !DISubroutineType(types: !14303)
!14303 = !{!14293, !14304}
!14304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!14305 = !{!14300, !14306}
!14306 = !DILocalVariable(name: "k", scope: !14301, file: !316, line: 139, type: !14293)
!14307 = !DILocation(line: 0, scope: !14301, inlinedAt: !14308)
!14308 = distinct !DILocation(line: 442, column: 2, scope: !14292)
!14309 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !14314)
!14310 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5704, file: !5704, line: 42, type: !5705, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14311)
!14311 = !{!14312, !14313}
!14312 = !DILocalVariable(name: "key", scope: !14310, file: !5704, line: 44, type: !32)
!14313 = !DILocalVariable(name: "tmp", scope: !14310, file: !5704, line: 53, type: !32)
!14314 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !14308)
!14315 = !{i64 1992110}
!14316 = !DILocation(line: 0, scope: !14310, inlinedAt: !14314)
!14317 = !DILocation(line: 443, column: 29, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14319, file: !2420, line: 442, column: 26)
!14319 = distinct !DILexicalBlock(scope: !14292, file: !2420, line: 442, column: 2)
!14320 = !DILocation(line: 444, column: 17, scope: !14318)
!14321 = !DILocation(line: 445, column: 51, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14318, file: !2420, line: 445, column: 7)
!14323 = !DILocation(line: 445, column: 7, scope: !14318)
!14324 = !DILocation(line: 0, scope: !14318)
!14325 = !DILocation(line: 451, column: 18, scope: !14318)
!14326 = !DILocation(line: 452, column: 3, scope: !14318)
!14327 = !DILocalVariable(name: "key", arg: 2, scope: !14328, file: !316, line: 190, type: !14293)
!14328 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !14329, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14331)
!14329 = !DISubroutineType(types: !14330)
!14330 = !{null, !14304, !14293}
!14331 = !{!14332, !14327}
!14332 = !DILocalVariable(name: "l", arg: 1, scope: !14328, file: !316, line: 189, type: !14304)
!14333 = !DILocation(line: 0, scope: !14328, inlinedAt: !14334)
!14334 = distinct !DILocation(line: 442, column: 2, scope: !14319)
!14335 = !DILocalVariable(name: "key", arg: 1, scope: !14336, file: !5704, line: 84, type: !32)
!14336 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5704, file: !5704, line: 84, type: !5715, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14337)
!14337 = !{!14335}
!14338 = !DILocation(line: 0, scope: !14336, inlinedAt: !14339)
!14339 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !14334)
!14340 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !14339)
!14341 = !{i64 1992927}
!14342 = !DILocation(line: 454, column: 1, scope: !14285)
!14343 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13365, file: !13365, line: 389, type: !6926, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14344)
!14344 = !{!14345}
!14345 = !DILocalVariable(name: "t", arg: 1, scope: !14343, file: !13365, line: 389, type: !121)
!14346 = !DILocation(line: 0, scope: !14343)
!14347 = !DILocalVariable(name: "t", arg: 1, scope: !14348, file: !13365, line: 102, type: !1572)
!14348 = distinct !DISubprogram(name: "z_tmcvt", scope: !13365, file: !13365, line: 102, type: !13373, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14349)
!14349 = !{!14347, !14350, !14351, !14352, !14353, !14354, !14355, !14356, !14357, !14358, !14359}
!14350 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14348, file: !13365, line: 102, type: !121)
!14351 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14348, file: !13365, line: 103, type: !121)
!14352 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14348, file: !13365, line: 103, type: !157)
!14353 = !DILocalVariable(name: "result32", arg: 5, scope: !14348, file: !13365, line: 104, type: !157)
!14354 = !DILocalVariable(name: "round_up", arg: 6, scope: !14348, file: !13365, line: 104, type: !157)
!14355 = !DILocalVariable(name: "round_off", arg: 7, scope: !14348, file: !13365, line: 105, type: !157)
!14356 = !DILocalVariable(name: "mul_ratio", scope: !14348, file: !13365, line: 107, type: !157)
!14357 = !DILocalVariable(name: "div_ratio", scope: !14348, file: !13365, line: 109, type: !157)
!14358 = !DILocalVariable(name: "off", scope: !14348, file: !13365, line: 116, type: !1572)
!14359 = !DILocalVariable(name: "rdivisor", scope: !14360, file: !13365, line: 119, type: !121)
!14360 = distinct !DILexicalBlock(scope: !14361, file: !13365, line: 118, column: 18)
!14361 = distinct !DILexicalBlock(scope: !14348, file: !13365, line: 118, column: 6)
!14362 = !DILocation(line: 0, scope: !14348, inlinedAt: !14363)
!14363 = distinct !DILocation(line: 392, column: 9, scope: !14343)
!14364 = !DILocation(line: 143, column: 25, scope: !14365, inlinedAt: !14363)
!14365 = distinct !DILexicalBlock(scope: !14366, file: !13365, line: 142, column: 17)
!14366 = distinct !DILexicalBlock(scope: !14367, file: !13365, line: 142, column: 7)
!14367 = distinct !DILexicalBlock(scope: !14368, file: !13365, line: 141, column: 24)
!14368 = distinct !DILexicalBlock(scope: !14369, file: !13365, line: 141, column: 13)
!14369 = distinct !DILexicalBlock(scope: !14348, file: !13365, line: 134, column: 6)
!14370 = !DILocation(line: 392, column: 2, scope: !14343)
!14371 = distinct !DISubprogram(name: "z_time_slice", scope: !2420, file: !2420, line: 502, type: !7563, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14372)
!14372 = !{!14373, !14374}
!14373 = !DILocalVariable(name: "ticks", arg: 1, scope: !14371, file: !2420, line: 502, type: !103)
!14374 = !DILocalVariable(name: "key", scope: !14371, file: !2420, line: 511, type: !14293)
!14375 = !DILocation(line: 0, scope: !14371)
!14376 = !DILocation(line: 0, scope: !14301, inlinedAt: !14377)
!14377 = distinct !DILocation(line: 511, column: 25, scope: !14371)
!14378 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !14379)
!14379 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !14377)
!14380 = !DILocation(line: 0, scope: !14310, inlinedAt: !14379)
!14381 = !DILocation(line: 514, column: 6, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14371, file: !2420, line: 514, column: 6)
!14383 = !DILocation(line: 514, column: 25, scope: !14382)
!14384 = !DILocation(line: 514, column: 22, scope: !14382)
!14385 = !DILocation(line: 514, column: 6, scope: !14371)
!14386 = !DILocation(line: 515, column: 3, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14382, file: !2420, line: 514, column: 35)
!14388 = !DILocation(line: 0, scope: !14328, inlinedAt: !14389)
!14389 = distinct !DILocation(line: 516, column: 3, scope: !14387)
!14390 = !DILocation(line: 0, scope: !14336, inlinedAt: !14391)
!14391 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !14389)
!14392 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !14391)
!14393 = !DILocation(line: 517, column: 3, scope: !14387)
!14394 = !DILocation(line: 519, column: 18, scope: !14371)
!14395 = !DILocation(line: 522, column: 6, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14371, file: !2420, line: 522, column: 6)
!14397 = !DILocation(line: 522, column: 27, scope: !14396)
!14398 = !DILocation(line: 522, column: 30, scope: !14396)
!14399 = !DILocation(line: 522, column: 6, scope: !14371)
!14400 = !DILocation(line: 523, column: 30, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14402, file: !2420, line: 523, column: 7)
!14402 = distinct !DILexicalBlock(scope: !14396, file: !2420, line: 522, column: 51)
!14403 = !DILocation(line: 523, column: 13, scope: !14401)
!14404 = !DILocation(line: 523, column: 7, scope: !14402)
!14405 = !DILocation(line: 530, column: 10, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14401, file: !2420, line: 523, column: 43)
!14407 = !DILocation(line: 531, column: 3, scope: !14406)
!14408 = !DILocation(line: 532, column: 30, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14401, file: !2420, line: 531, column: 10)
!14410 = !DILocation(line: 535, column: 29, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14396, file: !2420, line: 534, column: 9)
!14412 = !DILocation(line: 0, scope: !14328, inlinedAt: !14413)
!14413 = distinct !DILocation(line: 537, column: 2, scope: !14371)
!14414 = !DILocation(line: 0, scope: !14336, inlinedAt: !14415)
!14415 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !14413)
!14416 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !14415)
!14417 = !DILocation(line: 538, column: 1, scope: !14371)
!14418 = distinct !DISubprogram(name: "sliceable", scope: !2420, file: !2420, line: 468, type: !14419, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14421)
!14419 = !DISubroutineType(types: !14420)
!14420 = !{!157, !2315}
!14421 = !{!14422, !14423}
!14422 = !DILocalVariable(name: "thread", arg: 1, scope: !14418, file: !2420, line: 468, type: !2315)
!14423 = !DILocalVariable(name: "ret", scope: !14418, file: !2420, line: 470, type: !157)
!14424 = !DILocation(line: 0, scope: !14418)
!14425 = !DILocation(line: 470, column: 13, scope: !14418)
!14426 = !DILocation(line: 471, column: 3, scope: !14418)
!14427 = !DILocation(line: 471, column: 7, scope: !14418)
!14428 = !DILocation(line: 472, column: 3, scope: !14418)
!14429 = !DILocation(line: 472, column: 37, scope: !14418)
!14430 = !DILocation(line: 472, column: 24, scope: !14418)
!14431 = !DILocation(line: 472, column: 43, scope: !14418)
!14432 = !DILocation(line: 472, column: 7, scope: !14418)
!14433 = !DILocation(line: 473, column: 3, scope: !14418)
!14434 = !DILocation(line: 473, column: 7, scope: !14418)
!14435 = !DILocation(line: 473, column: 6, scope: !14418)
!14436 = !DILocation(line: 479, column: 2, scope: !14418)
!14437 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2420, file: !2420, line: 482, type: !14438, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14440)
!14438 = !DISubroutineType(types: !14439)
!14439 = !{!14293, !14293}
!14440 = !{!14441, !14442}
!14441 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14437, file: !2420, line: 482, type: !14293)
!14442 = !DILocalVariable(name: "curr", scope: !14437, file: !2420, line: 484, type: !2315)
!14443 = !DILocation(line: 0, scope: !14437)
!14444 = !DILocation(line: 484, column: 26, scope: !14437)
!14445 = !DILocation(line: 493, column: 7, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14437, file: !2420, line: 493, column: 6)
!14447 = !DILocation(line: 493, column: 6, scope: !14437)
!14448 = !DILocation(line: 494, column: 3, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14446, file: !2420, line: 493, column: 49)
!14450 = !DILocation(line: 495, column: 2, scope: !14449)
!14451 = !DILocation(line: 496, column: 2, scope: !14437)
!14452 = !DILocation(line: 499, column: 1, scope: !14437)
!14453 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12806, file: !12806, line: 106, type: !14419, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14454)
!14454 = !{!14455, !14456}
!14455 = !DILocalVariable(name: "thread", arg: 1, scope: !14453, file: !12806, line: 106, type: !2315)
!14456 = !DILocalVariable(name: "state", scope: !14453, file: !12806, line: 108, type: !154)
!14457 = !DILocation(line: 0, scope: !14453)
!14458 = !DILocation(line: 108, column: 31, scope: !14453)
!14459 = !DILocation(line: 110, column: 16, scope: !14453)
!14460 = !DILocation(line: 111, column: 41, scope: !14453)
!14461 = !DILocation(line: 110, column: 2, scope: !14453)
!14462 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2420, file: !2420, line: 393, type: !14259, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14463)
!14463 = !{!14464}
!14464 = !DILocalVariable(name: "thread", arg: 1, scope: !14462, file: !2420, line: 393, type: !2315)
!14465 = !DILocation(line: 0, scope: !14462)
!14466 = !DILocation(line: 395, column: 6, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14462, file: !2420, line: 395, column: 6)
!14468 = !DILocation(line: 395, column: 6, scope: !14462)
!14469 = !DILocalVariable(name: "thread", arg: 1, scope: !14470, file: !2420, line: 264, type: !2315)
!14470 = distinct !DISubprogram(name: "dequeue_thread", scope: !2420, file: !2420, line: 264, type: !14259, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14471)
!14471 = !{!14469}
!14472 = !DILocation(line: 0, scope: !14470, inlinedAt: !14473)
!14473 = distinct !DILocation(line: 396, column: 3, scope: !14474)
!14474 = distinct !DILexicalBlock(scope: !14467, file: !2420, line: 395, column: 34)
!14475 = !DILocation(line: 266, column: 15, scope: !14470, inlinedAt: !14473)
!14476 = !DILocation(line: 266, column: 28, scope: !14470, inlinedAt: !14473)
!14477 = !DILocalVariable(name: "thread", arg: 1, scope: !14478, file: !2420, line: 232, type: !2315)
!14478 = distinct !DISubprogram(name: "runq_remove", scope: !2420, file: !2420, line: 232, type: !14259, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14479)
!14479 = !{!14477}
!14480 = !DILocation(line: 0, scope: !14478, inlinedAt: !14481)
!14481 = distinct !DILocation(line: 268, column: 3, scope: !14482, inlinedAt: !14473)
!14482 = distinct !DILexicalBlock(scope: !14483, file: !2420, line: 267, column: 35)
!14483 = distinct !DILexicalBlock(scope: !14470, file: !2420, line: 267, column: 6)
!14484 = !DILocation(line: 234, column: 2, scope: !14478, inlinedAt: !14481)
!14485 = !DILocation(line: 397, column: 2, scope: !14474)
!14486 = !DILocalVariable(name: "thread", arg: 1, scope: !14487, file: !2420, line: 250, type: !2315)
!14487 = distinct !DISubprogram(name: "queue_thread", scope: !2420, file: !2420, line: 250, type: !14259, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14488)
!14488 = !{!14486}
!14489 = !DILocation(line: 0, scope: !14487, inlinedAt: !14490)
!14490 = distinct !DILocation(line: 398, column: 2, scope: !14462)
!14491 = !DILocation(line: 252, column: 15, scope: !14487, inlinedAt: !14490)
!14492 = !DILocation(line: 252, column: 28, scope: !14487, inlinedAt: !14490)
!14493 = !DILocalVariable(name: "thread", arg: 1, scope: !14494, file: !2420, line: 227, type: !2315)
!14494 = distinct !DISubprogram(name: "runq_add", scope: !2420, file: !2420, line: 227, type: !14259, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14495)
!14495 = !{!14493}
!14496 = !DILocation(line: 0, scope: !14494, inlinedAt: !14497)
!14497 = distinct !DILocation(line: 254, column: 3, scope: !14498, inlinedAt: !14490)
!14498 = distinct !DILexicalBlock(scope: !14499, file: !2420, line: 253, column: 35)
!14499 = distinct !DILexicalBlock(scope: !14487, file: !2420, line: 253, column: 6)
!14500 = !DILocalVariable(name: "pq", arg: 1, scope: !14501, file: !2420, line: 181, type: !14504)
!14501 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2420, file: !2420, line: 181, type: !14502, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14505)
!14502 = !DISubroutineType(types: !14503)
!14503 = !{null, !14504, !2315}
!14504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!14505 = !{!14500, !14506, !14507}
!14506 = !DILocalVariable(name: "thread", arg: 2, scope: !14501, file: !2420, line: 182, type: !2315)
!14507 = !DILocalVariable(name: "t", scope: !14501, file: !2420, line: 184, type: !2315)
!14508 = !DILocation(line: 0, scope: !14501, inlinedAt: !14509)
!14509 = distinct !DILocation(line: 229, column: 2, scope: !14494, inlinedAt: !14497)
!14510 = !DILocation(line: 188, column: 2, scope: !14511, inlinedAt: !14509)
!14511 = distinct !DILexicalBlock(scope: !14501, file: !2420, line: 188, column: 2)
!14512 = !DILocation(line: 188, column: 2, scope: !14513, inlinedAt: !14509)
!14513 = distinct !DILexicalBlock(scope: !14511, file: !2420, line: 188, column: 2)
!14514 = !DILocation(line: 0, scope: !14511, inlinedAt: !14509)
!14515 = !DILocation(line: 189, column: 7, scope: !14516, inlinedAt: !14509)
!14516 = distinct !DILexicalBlock(scope: !14517, file: !2420, line: 189, column: 7)
!14517 = distinct !DILexicalBlock(scope: !14513, file: !2420, line: 188, column: 56)
!14518 = !DILocation(line: 189, column: 35, scope: !14516, inlinedAt: !14509)
!14519 = !DILocation(line: 189, column: 7, scope: !14517, inlinedAt: !14509)
!14520 = !DILocation(line: 191, column: 21, scope: !14521, inlinedAt: !14509)
!14521 = distinct !DILexicalBlock(scope: !14516, file: !2420, line: 189, column: 40)
!14522 = !DILocation(line: 190, column: 4, scope: !14521, inlinedAt: !14509)
!14523 = !DILocation(line: 192, column: 4, scope: !14521, inlinedAt: !14509)
!14524 = distinct !{!14524, !14510, !14525}
!14525 = !DILocation(line: 194, column: 2, scope: !14511, inlinedAt: !14509)
!14526 = !DILocation(line: 196, column: 37, scope: !14501, inlinedAt: !14509)
!14527 = !DILocation(line: 196, column: 2, scope: !14501, inlinedAt: !14509)
!14528 = !DILocation(line: 197, column: 1, scope: !14501, inlinedAt: !14509)
!14529 = !DILocation(line: 399, column: 25, scope: !14462)
!14530 = !DILocation(line: 399, column: 22, scope: !14462)
!14531 = !DILocation(line: 399, column: 2, scope: !14462)
!14532 = !DILocation(line: 400, column: 1, scope: !14462)
!14533 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12806, file: !12806, line: 136, type: !14419, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14534)
!14534 = !{!14535}
!14535 = !DILocalVariable(name: "thread", arg: 1, scope: !14533, file: !12806, line: 136, type: !2315)
!14536 = !DILocation(line: 0, scope: !14533)
!14537 = !DILocation(line: 138, column: 9, scope: !14533)
!14538 = !DILocation(line: 138, column: 2, scope: !14533)
!14539 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2420, file: !2420, line: 1137, type: !14502, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14540)
!14540 = !{!14541, !14542}
!14541 = !DILocalVariable(name: "pq", arg: 1, scope: !14539, file: !2420, line: 1137, type: !14504)
!14542 = !DILocalVariable(name: "thread", arg: 2, scope: !14539, file: !2420, line: 1137, type: !2315)
!14543 = !DILocation(line: 0, scope: !14539)
!14544 = !DILocation(line: 1141, column: 33, scope: !14539)
!14545 = !DILocation(line: 1141, column: 2, scope: !14539)
!14546 = !DILocation(line: 1142, column: 1, scope: !14539)
!14547 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !14548, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14550)
!14548 = !DISubroutineType(types: !14549)
!14549 = !{!2416, !14504}
!14550 = !{!14551}
!14551 = !DILocalVariable(name: "list", arg: 1, scope: !14547, file: !325, line: 294, type: !14504)
!14552 = !DILocation(line: 0, scope: !14547)
!14553 = !DILocation(line: 296, column: 9, scope: !14547)
!14554 = !DILocation(line: 296, column: 49, scope: !14547)
!14555 = !DILocation(line: 296, column: 2, scope: !14547)
!14556 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !14557, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14559)
!14557 = !DISubroutineType(types: !14558)
!14558 = !{null, !2416, !2416}
!14559 = !{!14560, !14561, !14562}
!14560 = !DILocalVariable(name: "successor", arg: 1, scope: !14556, file: !325, line: 443, type: !2416)
!14561 = !DILocalVariable(name: "node", arg: 2, scope: !14556, file: !325, line: 443, type: !2416)
!14562 = !DILocalVariable(name: "prev", scope: !14556, file: !325, line: 445, type: !14563)
!14563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2416)
!14564 = !DILocation(line: 0, scope: !14556)
!14565 = !DILocation(line: 445, column: 39, scope: !14556)
!14566 = !DILocation(line: 447, column: 8, scope: !14556)
!14567 = !DILocation(line: 447, column: 13, scope: !14556)
!14568 = !DILocation(line: 448, column: 8, scope: !14556)
!14569 = !DILocation(line: 448, column: 13, scope: !14556)
!14570 = !DILocation(line: 449, column: 8, scope: !14556)
!14571 = !DILocation(line: 449, column: 13, scope: !14556)
!14572 = !DILocation(line: 450, column: 18, scope: !14556)
!14573 = !DILocation(line: 451, column: 1, scope: !14556)
!14574 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !14575, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14577)
!14575 = !DISubroutineType(types: !14576)
!14576 = !{!2416, !14504, !2416}
!14577 = !{!14578, !14579}
!14578 = !DILocalVariable(name: "list", arg: 1, scope: !14574, file: !325, line: 341, type: !14504)
!14579 = !DILocalVariable(name: "node", arg: 2, scope: !14574, file: !325, line: 342, type: !2416)
!14580 = !DILocation(line: 0, scope: !14574)
!14581 = !DILocation(line: 344, column: 15, scope: !14574)
!14582 = !DILocation(line: 344, column: 9, scope: !14574)
!14583 = !DILocation(line: 344, column: 26, scope: !14574)
!14584 = !DILocation(line: 344, column: 2, scope: !14574)
!14585 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !14586, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14588)
!14586 = !DISubroutineType(types: !14587)
!14587 = !{null, !14504, !2416}
!14588 = !{!14589, !14590, !14591}
!14589 = !DILocalVariable(name: "list", arg: 1, scope: !14585, file: !325, line: 404, type: !14504)
!14590 = !DILocalVariable(name: "node", arg: 2, scope: !14585, file: !325, line: 404, type: !2416)
!14591 = !DILocalVariable(name: "tail", scope: !14585, file: !325, line: 406, type: !14563)
!14592 = !DILocation(line: 0, scope: !14585)
!14593 = !DILocation(line: 406, column: 34, scope: !14585)
!14594 = !DILocation(line: 408, column: 8, scope: !14585)
!14595 = !DILocation(line: 408, column: 13, scope: !14585)
!14596 = !DILocation(line: 409, column: 8, scope: !14585)
!14597 = !DILocation(line: 409, column: 13, scope: !14585)
!14598 = !DILocation(line: 411, column: 8, scope: !14585)
!14599 = !DILocation(line: 411, column: 13, scope: !14585)
!14600 = !DILocation(line: 412, column: 13, scope: !14585)
!14601 = !DILocation(line: 413, column: 1, scope: !14585)
!14602 = distinct !DISubprogram(name: "update_cache", scope: !2420, file: !2420, line: 559, type: !7563, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14603)
!14603 = !{!14604, !14605}
!14604 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14602, file: !2420, line: 559, type: !103)
!14605 = !DILocalVariable(name: "thread", scope: !14602, file: !2420, line: 562, type: !2315)
!14606 = !DILocation(line: 0, scope: !14602)
!14607 = !DILocation(line: 239, column: 9, scope: !14608, inlinedAt: !14611)
!14608 = distinct !DISubprogram(name: "runq_best", scope: !2420, file: !2420, line: 237, type: !14609, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!14609 = !DISubroutineType(types: !14610)
!14610 = !{!2315}
!14611 = distinct !DILocation(line: 314, column: 28, scope: !14612, inlinedAt: !14615)
!14612 = distinct !DISubprogram(name: "next_up", scope: !2420, file: !2420, line: 312, type: !14609, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14613)
!14613 = !{!14614}
!14614 = !DILocalVariable(name: "thread", scope: !14612, file: !2420, line: 314, type: !2315)
!14615 = distinct !DILocation(line: 562, column: 28, scope: !14602)
!14616 = !DILocation(line: 0, scope: !14612, inlinedAt: !14615)
!14617 = !DILocation(line: 340, column: 17, scope: !14612, inlinedAt: !14615)
!14618 = !DILocation(line: 340, column: 9, scope: !14612, inlinedAt: !14615)
!14619 = !DILocalVariable(name: "thread", arg: 1, scope: !14620, file: !2420, line: 127, type: !2315)
!14620 = distinct !DISubprogram(name: "should_preempt", scope: !2420, file: !2420, line: 127, type: !14621, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14623)
!14621 = !DISubroutineType(types: !14622)
!14622 = !{!157, !2315, !103}
!14623 = !{!14619, !14624}
!14624 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14620, file: !2420, line: 128, type: !103)
!14625 = !DILocation(line: 0, scope: !14620, inlinedAt: !14626)
!14626 = distinct !DILocation(line: 564, column: 6, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14602, file: !2420, line: 564, column: 6)
!14628 = !DILocation(line: 133, column: 17, scope: !14629, inlinedAt: !14626)
!14629 = distinct !DILexicalBlock(scope: !14620, file: !2420, line: 133, column: 6)
!14630 = !DILocation(line: 0, scope: !14627)
!14631 = !DILocation(line: 133, column: 6, scope: !14620, inlinedAt: !14626)
!14632 = !DILocation(line: 140, column: 6, scope: !14633, inlinedAt: !14626)
!14633 = distinct !DILexicalBlock(scope: !14620, file: !2420, line: 140, column: 6)
!14634 = !DILocation(line: 140, column: 6, scope: !14620, inlinedAt: !14626)
!14635 = !DILocation(line: 150, column: 9, scope: !14636, inlinedAt: !14626)
!14636 = distinct !DILexicalBlock(scope: !14620, file: !2420, line: 149, column: 6)
!14637 = !DILocation(line: 149, column: 6, scope: !14620, inlinedAt: !14626)
!14638 = !DILocation(line: 157, column: 6, scope: !14639, inlinedAt: !14626)
!14639 = distinct !DILexicalBlock(scope: !14620, file: !2420, line: 157, column: 6)
!14640 = !DILocation(line: 564, column: 6, scope: !14602)
!14641 = !DILocation(line: 566, column: 14, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14643, file: !2420, line: 566, column: 7)
!14643 = distinct !DILexicalBlock(scope: !14627, file: !2420, line: 564, column: 42)
!14644 = !DILocation(line: 566, column: 7, scope: !14643)
!14645 = !DILocation(line: 567, column: 4, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14642, file: !2420, line: 566, column: 27)
!14647 = !DILocation(line: 568, column: 3, scope: !14646)
!14648 = !DILocation(line: 585, column: 1, scope: !14602)
!14649 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2420, file: !2420, line: 1144, type: !14650, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14652)
!14650 = !DISubroutineType(types: !14651)
!14651 = !{!2315, !14504}
!14652 = !{!14653, !14654, !14655}
!14653 = !DILocalVariable(name: "pq", arg: 1, scope: !14649, file: !2420, line: 1144, type: !14504)
!14654 = !DILocalVariable(name: "thread", scope: !14649, file: !2420, line: 1146, type: !2315)
!14655 = !DILocalVariable(name: "n", scope: !14649, file: !2420, line: 1147, type: !2416)
!14656 = !DILocation(line: 0, scope: !14649)
!14657 = !DILocation(line: 1147, column: 19, scope: !14649)
!14658 = !DILocation(line: 1152, column: 2, scope: !14649)
!14659 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12806, file: !12806, line: 115, type: !14419, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14660)
!14660 = !{!14661}
!14661 = !DILocalVariable(name: "thread", arg: 1, scope: !14659, file: !12806, line: 115, type: !2315)
!14662 = !DILocation(line: 0, scope: !14659)
!14663 = !DILocation(line: 117, column: 46, scope: !14659)
!14664 = !DILocation(line: 117, column: 10, scope: !14659)
!14665 = !DILocation(line: 117, column: 9, scope: !14659)
!14666 = !DILocation(line: 117, column: 2, scope: !14659)
!14667 = distinct !DISubprogram(name: "is_preempt", scope: !2420, file: !2420, line: 62, type: !14277, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14668)
!14668 = !{!14669}
!14669 = !DILocalVariable(name: "thread", arg: 1, scope: !14667, file: !2420, line: 62, type: !2315)
!14670 = !DILocation(line: 0, scope: !14667)
!14671 = !DILocation(line: 65, column: 22, scope: !14667)
!14672 = !DILocation(line: 65, column: 30, scope: !14667)
!14673 = !DILocation(line: 65, column: 2, scope: !14667)
!14674 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13198, file: !13198, line: 35, type: !14675, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14679)
!14675 = !DISubroutineType(types: !14676)
!14676 = !{!157, !14677}
!14677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14678, size: 32)
!14678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2366)
!14679 = !{!14680}
!14680 = !DILocalVariable(name: "to", arg: 1, scope: !14674, file: !13198, line: 35, type: !14677)
!14681 = !DILocation(line: 0, scope: !14674)
!14682 = !DILocation(line: 37, column: 35, scope: !14674)
!14683 = !DILocation(line: 37, column: 10, scope: !14674)
!14684 = !DILocation(line: 37, column: 9, scope: !14674)
!14685 = !DILocation(line: 37, column: 2, scope: !14674)
!14686 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !14687, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14691)
!14687 = !DISubroutineType(types: !14688)
!14688 = !{!157, !14689}
!14689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14690, size: 32)
!14690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2325)
!14691 = !{!14692}
!14692 = !DILocalVariable(name: "node", arg: 1, scope: !14686, file: !325, line: 225, type: !14689)
!14693 = !DILocation(line: 0, scope: !14686)
!14694 = !DILocation(line: 227, column: 15, scope: !14686)
!14695 = !DILocation(line: 227, column: 20, scope: !14686)
!14696 = !DILocation(line: 227, column: 2, scope: !14686)
!14697 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !14575, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14698)
!14698 = !{!14699, !14700}
!14699 = !DILocalVariable(name: "list", arg: 1, scope: !14697, file: !325, line: 325, type: !14504)
!14700 = !DILocalVariable(name: "node", arg: 2, scope: !14697, file: !325, line: 326, type: !2416)
!14701 = !DILocation(line: 0, scope: !14697)
!14702 = !DILocation(line: 328, column: 24, scope: !14697)
!14703 = !DILocation(line: 328, column: 15, scope: !14697)
!14704 = !DILocation(line: 328, column: 9, scope: !14697)
!14705 = !DILocation(line: 328, column: 45, scope: !14697)
!14706 = !DILocation(line: 328, column: 2, scope: !14697)
!14707 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !14708, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14710)
!14708 = !DISubroutineType(types: !14709)
!14709 = !{!157, !14504}
!14710 = !{!14711}
!14711 = !DILocalVariable(name: "list", arg: 1, scope: !14707, file: !325, line: 266, type: !14504)
!14712 = !DILocation(line: 0, scope: !14707)
!14713 = !DILocation(line: 268, column: 15, scope: !14707)
!14714 = !DILocation(line: 268, column: 20, scope: !14707)
!14715 = !DILocation(line: 268, column: 2, scope: !14707)
!14716 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !14717, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14719)
!14717 = !DISubroutineType(types: !14718)
!14718 = !{null, !2416}
!14719 = !{!14720, !14721, !14722}
!14720 = !DILocalVariable(name: "node", arg: 1, scope: !14716, file: !325, line: 496, type: !2416)
!14721 = !DILocalVariable(name: "prev", scope: !14716, file: !325, line: 498, type: !14563)
!14722 = !DILocalVariable(name: "next", scope: !14716, file: !325, line: 499, type: !14563)
!14723 = !DILocation(line: 0, scope: !14716)
!14724 = !DILocation(line: 498, column: 34, scope: !14716)
!14725 = !DILocation(line: 499, column: 34, scope: !14716)
!14726 = !DILocation(line: 501, column: 8, scope: !14716)
!14727 = !DILocation(line: 501, column: 13, scope: !14716)
!14728 = !DILocation(line: 502, column: 8, scope: !14716)
!14729 = !DILocation(line: 502, column: 13, scope: !14716)
!14730 = !DILocation(line: 503, column: 2, scope: !14716)
!14731 = !DILocation(line: 504, column: 1, scope: !14716)
!14732 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !14717, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14733)
!14733 = !{!14734}
!14734 = !DILocalVariable(name: "node", arg: 1, scope: !14732, file: !325, line: 211, type: !2416)
!14735 = !DILocation(line: 0, scope: !14732)
!14736 = !DILocation(line: 213, column: 8, scope: !14732)
!14737 = !DILocation(line: 213, column: 13, scope: !14732)
!14738 = !DILocation(line: 214, column: 8, scope: !14732)
!14739 = !DILocation(line: 214, column: 13, scope: !14732)
!14740 = !DILocation(line: 215, column: 1, scope: !14732)
!14741 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12806, file: !12806, line: 131, type: !14742, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14744)
!14742 = !DISubroutineType(types: !14743)
!14743 = !{!157, !2315, !121}
!14744 = !{!14745, !14746}
!14745 = !DILocalVariable(name: "thread", arg: 1, scope: !14741, file: !12806, line: 131, type: !2315)
!14746 = !DILocalVariable(name: "state", arg: 2, scope: !14741, file: !12806, line: 131, type: !121)
!14747 = !DILocation(line: 0, scope: !14741)
!14748 = !DILocation(line: 133, column: 23, scope: !14741)
!14749 = !DILocation(line: 133, column: 45, scope: !14741)
!14750 = !DILocation(line: 133, column: 2, scope: !14741)
!14751 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12806, file: !12806, line: 211, type: !14752, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14754)
!14752 = !DISubroutineType(types: !14753)
!14753 = !{!157, !103, !103}
!14754 = !{!14755, !14756}
!14755 = !DILocalVariable(name: "prio", arg: 1, scope: !14751, file: !12806, line: 211, type: !103)
!14756 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14751, file: !12806, line: 211, type: !103)
!14757 = !DILocation(line: 0, scope: !14751)
!14758 = !DILocation(line: 213, column: 9, scope: !14751)
!14759 = !DILocation(line: 213, column: 2, scope: !14751)
!14760 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12806, file: !12806, line: 83, type: !14419, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14761)
!14761 = !{!14762}
!14762 = !DILocalVariable(name: "thread", arg: 1, scope: !14760, file: !12806, line: 83, type: !2315)
!14763 = !DILocation(line: 0, scope: !14760)
!14764 = !DILocation(line: 89, column: 16, scope: !14760)
!14765 = !DILocation(line: 89, column: 2, scope: !14760)
!14766 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12806, file: !12806, line: 206, type: !14752, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14767)
!14767 = !{!14768, !14769}
!14768 = !DILocalVariable(name: "prio1", arg: 1, scope: !14766, file: !12806, line: 206, type: !103)
!14769 = !DILocalVariable(name: "prio2", arg: 2, scope: !14766, file: !12806, line: 206, type: !103)
!14770 = !DILocation(line: 0, scope: !14766)
!14771 = !DILocation(line: 208, column: 15, scope: !14766)
!14772 = !DILocation(line: 208, column: 2, scope: !14766)
!14773 = distinct !DISubprogram(name: "z_ready_thread", scope: !2420, file: !2420, line: 635, type: !14259, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14774)
!14774 = !{!14775, !14776, !14778}
!14775 = !DILocalVariable(name: "thread", arg: 1, scope: !14773, file: !2420, line: 635, type: !2315)
!14776 = !DILocalVariable(name: "__i", scope: !14777, file: !2420, line: 637, type: !14293)
!14777 = distinct !DILexicalBlock(scope: !14773, file: !2420, line: 637, column: 2)
!14778 = !DILocalVariable(name: "__key", scope: !14777, file: !2420, line: 637, type: !14293)
!14779 = !DILocation(line: 0, scope: !14773)
!14780 = !DILocation(line: 0, scope: !14777)
!14781 = !DILocation(line: 0, scope: !14301, inlinedAt: !14782)
!14782 = distinct !DILocation(line: 637, column: 2, scope: !14777)
!14783 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !14784)
!14784 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !14782)
!14785 = !DILocation(line: 0, scope: !14310, inlinedAt: !14784)
!14786 = !DILocation(line: 639, column: 4, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14788, file: !2420, line: 638, column: 41)
!14788 = distinct !DILexicalBlock(scope: !14789, file: !2420, line: 638, column: 7)
!14789 = distinct !DILexicalBlock(scope: !14790, file: !2420, line: 637, column: 26)
!14790 = distinct !DILexicalBlock(scope: !14777, file: !2420, line: 637, column: 2)
!14791 = !DILocation(line: 0, scope: !14328, inlinedAt: !14792)
!14792 = distinct !DILocation(line: 637, column: 2, scope: !14790)
!14793 = !DILocation(line: 0, scope: !14336, inlinedAt: !14794)
!14794 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !14792)
!14795 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !14794)
!14796 = !DILocation(line: 642, column: 1, scope: !14773)
!14797 = distinct !DISubprogram(name: "ready_thread", scope: !2420, file: !2420, line: 617, type: !14259, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14798)
!14798 = !{!14799}
!14799 = !DILocalVariable(name: "thread", arg: 1, scope: !14797, file: !2420, line: 617, type: !2315)
!14800 = !DILocation(line: 0, scope: !14797)
!14801 = !DILocation(line: 626, column: 7, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14797, file: !2420, line: 626, column: 6)
!14803 = !DILocation(line: 626, column: 34, scope: !14802)
!14804 = !DILocation(line: 626, column: 37, scope: !14802)
!14805 = !DILocation(line: 626, column: 6, scope: !14797)
!14806 = !DILocation(line: 0, scope: !14487, inlinedAt: !14807)
!14807 = distinct !DILocation(line: 629, column: 3, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14802, file: !2420, line: 626, column: 64)
!14809 = !DILocation(line: 252, column: 15, scope: !14487, inlinedAt: !14807)
!14810 = !DILocation(line: 252, column: 28, scope: !14487, inlinedAt: !14807)
!14811 = !DILocation(line: 0, scope: !14494, inlinedAt: !14812)
!14812 = distinct !DILocation(line: 254, column: 3, scope: !14498, inlinedAt: !14807)
!14813 = !DILocation(line: 0, scope: !14501, inlinedAt: !14814)
!14814 = distinct !DILocation(line: 229, column: 2, scope: !14494, inlinedAt: !14812)
!14815 = !DILocation(line: 188, column: 2, scope: !14511, inlinedAt: !14814)
!14816 = !DILocation(line: 188, column: 2, scope: !14513, inlinedAt: !14814)
!14817 = !DILocation(line: 0, scope: !14511, inlinedAt: !14814)
!14818 = !DILocation(line: 189, column: 7, scope: !14516, inlinedAt: !14814)
!14819 = !DILocation(line: 189, column: 35, scope: !14516, inlinedAt: !14814)
!14820 = !DILocation(line: 189, column: 7, scope: !14517, inlinedAt: !14814)
!14821 = !DILocation(line: 191, column: 21, scope: !14521, inlinedAt: !14814)
!14822 = !DILocation(line: 190, column: 4, scope: !14521, inlinedAt: !14814)
!14823 = !DILocation(line: 192, column: 4, scope: !14521, inlinedAt: !14814)
!14824 = distinct !{!14824, !14815, !14825}
!14825 = !DILocation(line: 194, column: 2, scope: !14511, inlinedAt: !14814)
!14826 = !DILocation(line: 196, column: 37, scope: !14501, inlinedAt: !14814)
!14827 = !DILocation(line: 196, column: 2, scope: !14501, inlinedAt: !14814)
!14828 = !DILocation(line: 197, column: 1, scope: !14501, inlinedAt: !14814)
!14829 = !DILocation(line: 630, column: 3, scope: !14808)
!14830 = !DILocation(line: 632, column: 2, scope: !14808)
!14831 = !DILocation(line: 633, column: 1, scope: !14797)
!14832 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12806, file: !12806, line: 120, type: !14419, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14833)
!14833 = !{!14834}
!14834 = !DILocalVariable(name: "thread", arg: 1, scope: !14832, file: !12806, line: 120, type: !2315)
!14835 = !DILocation(line: 0, scope: !14832)
!14836 = !DILocation(line: 122, column: 12, scope: !14832)
!14837 = !DILocation(line: 122, column: 62, scope: !14832)
!14838 = !DILocation(line: 123, column: 4, scope: !14832)
!14839 = !DILocation(line: 122, column: 2, scope: !14832)
!14840 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2420, file: !2420, line: 644, type: !14259, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14841)
!14841 = !{!14842, !14843, !14845}
!14842 = !DILocalVariable(name: "thread", arg: 1, scope: !14840, file: !2420, line: 644, type: !2315)
!14843 = !DILocalVariable(name: "__i", scope: !14844, file: !2420, line: 646, type: !14293)
!14844 = distinct !DILexicalBlock(scope: !14840, file: !2420, line: 646, column: 2)
!14845 = !DILocalVariable(name: "__key", scope: !14844, file: !2420, line: 646, type: !14293)
!14846 = !DILocation(line: 0, scope: !14840)
!14847 = !DILocation(line: 0, scope: !14844)
!14848 = !DILocation(line: 0, scope: !14301, inlinedAt: !14849)
!14849 = distinct !DILocation(line: 646, column: 2, scope: !14844)
!14850 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !14851)
!14851 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !14849)
!14852 = !DILocation(line: 0, scope: !14310, inlinedAt: !14851)
!14853 = !DILocation(line: 647, column: 3, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14855, file: !2420, line: 646, column: 26)
!14855 = distinct !DILexicalBlock(scope: !14844, file: !2420, line: 646, column: 2)
!14856 = !DILocation(line: 0, scope: !14328, inlinedAt: !14857)
!14857 = distinct !DILocation(line: 646, column: 2, scope: !14855)
!14858 = !DILocation(line: 0, scope: !14336, inlinedAt: !14859)
!14859 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !14857)
!14860 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !14859)
!14861 = !DILocation(line: 649, column: 1, scope: !14840)
!14862 = distinct !DISubprogram(name: "z_sched_start", scope: !2420, file: !2420, line: 651, type: !14259, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14863)
!14863 = !{!14864, !14865}
!14864 = !DILocalVariable(name: "thread", arg: 1, scope: !14862, file: !2420, line: 651, type: !2315)
!14865 = !DILocalVariable(name: "key", scope: !14862, file: !2420, line: 653, type: !14293)
!14866 = !DILocation(line: 0, scope: !14862)
!14867 = !DILocation(line: 0, scope: !14301, inlinedAt: !14868)
!14868 = distinct !DILocation(line: 653, column: 25, scope: !14862)
!14869 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !14870)
!14870 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !14868)
!14871 = !DILocation(line: 0, scope: !14310, inlinedAt: !14870)
!14872 = !DILocation(line: 655, column: 6, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14862, file: !2420, line: 655, column: 6)
!14874 = !DILocation(line: 655, column: 6, scope: !14862)
!14875 = !DILocation(line: 0, scope: !14328, inlinedAt: !14876)
!14876 = distinct !DILocation(line: 656, column: 3, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14873, file: !2420, line: 655, column: 36)
!14878 = !DILocation(line: 0, scope: !14336, inlinedAt: !14879)
!14879 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !14876)
!14880 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !14879)
!14881 = !DILocation(line: 657, column: 3, scope: !14877)
!14882 = !DILocation(line: 660, column: 2, scope: !14862)
!14883 = !DILocation(line: 661, column: 2, scope: !14862)
!14884 = !DILocation(line: 662, column: 2, scope: !14862)
!14885 = !DILocation(line: 663, column: 1, scope: !14862)
!14886 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12806, file: !12806, line: 126, type: !14419, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14887)
!14887 = !{!14888}
!14888 = !DILocalVariable(name: "thread", arg: 1, scope: !14886, file: !12806, line: 126, type: !2315)
!14889 = !DILocation(line: 0, scope: !14886)
!14890 = !DILocation(line: 128, column: 23, scope: !14886)
!14891 = !DILocation(line: 128, column: 36, scope: !14886)
!14892 = !DILocation(line: 128, column: 56, scope: !14886)
!14893 = !DILocation(line: 128, column: 2, scope: !14886)
!14894 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12806, file: !12806, line: 155, type: !14259, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14895)
!14895 = !{!14896}
!14896 = !DILocalVariable(name: "thread", arg: 1, scope: !14894, file: !12806, line: 155, type: !2315)
!14897 = !DILocation(line: 0, scope: !14894)
!14898 = !DILocation(line: 157, column: 15, scope: !14894)
!14899 = !DILocation(line: 157, column: 28, scope: !14894)
!14900 = !DILocation(line: 158, column: 1, scope: !14894)
!14901 = distinct !DISubprogram(name: "z_reschedule", scope: !2420, file: !2420, line: 967, type: !14329, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14902)
!14902 = !{!14903, !14904}
!14903 = !DILocalVariable(name: "lock", arg: 1, scope: !14901, file: !2420, line: 967, type: !14304)
!14904 = !DILocalVariable(name: "key", arg: 2, scope: !14901, file: !2420, line: 967, type: !14293)
!14905 = !DILocation(line: 0, scope: !14901)
!14906 = !DILocation(line: 969, column: 6, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14901, file: !2420, line: 969, column: 6)
!14908 = !DILocation(line: 969, column: 23, scope: !14907)
!14909 = !DILocation(line: 969, column: 26, scope: !14907)
!14910 = !DILocation(line: 969, column: 6, scope: !14901)
!14911 = !DILocalVariable(name: "key", arg: 2, scope: !14912, file: !12910, line: 193, type: !14293)
!14912 = distinct !DISubprogram(name: "z_swap", scope: !12910, file: !12910, line: 193, type: !14913, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14915)
!14913 = !DISubroutineType(types: !14914)
!14914 = !{!103, !14304, !14293}
!14915 = !{!14916, !14911}
!14916 = !DILocalVariable(name: "lock", arg: 1, scope: !14912, file: !12910, line: 193, type: !14304)
!14917 = !DILocation(line: 0, scope: !14912, inlinedAt: !14918)
!14918 = distinct !DILocation(line: 970, column: 3, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14907, file: !2420, line: 969, column: 39)
!14920 = !DILocation(line: 196, column: 9, scope: !14912, inlinedAt: !14918)
!14921 = !DILocation(line: 971, column: 2, scope: !14919)
!14922 = !DILocation(line: 0, scope: !14328, inlinedAt: !14923)
!14923 = distinct !DILocation(line: 972, column: 3, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14907, file: !2420, line: 971, column: 9)
!14925 = !DILocation(line: 0, scope: !14336, inlinedAt: !14926)
!14926 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !14923)
!14927 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !14926)
!14928 = !DILocation(line: 975, column: 1, scope: !14901)
!14929 = distinct !DISubprogram(name: "resched", scope: !2420, file: !2420, line: 940, type: !14930, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14932)
!14930 = !DISubroutineType(types: !14931)
!14931 = !{!157, !121}
!14932 = !{!14933}
!14933 = !DILocalVariable(name: "key", arg: 1, scope: !14929, file: !2420, line: 940, type: !121)
!14934 = !DILocation(line: 0, scope: !14929)
!14935 = !DILocalVariable(name: "key", arg: 1, scope: !14936, file: !5704, line: 112, type: !32)
!14936 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5704, file: !5704, line: 112, type: !14937, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14939)
!14937 = !DISubroutineType(types: !14938)
!14938 = !{!157, !32}
!14939 = !{!14935}
!14940 = !DILocation(line: 0, scope: !14936, inlinedAt: !14941)
!14941 = distinct !DILocation(line: 946, column: 9, scope: !14929)
!14942 = !DILocation(line: 115, column: 13, scope: !14936, inlinedAt: !14941)
!14943 = !DILocation(line: 946, column: 32, scope: !14929)
!14944 = !DILocation(line: 1031, column: 3, scope: !14945, inlinedAt: !14948)
!14945 = distinct !DISubprogram(name: "__get_IPSR", scope: !5919, file: !5919, line: 1027, type: !6000, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14946)
!14946 = !{!14947}
!14947 = !DILocalVariable(name: "result", scope: !14945, file: !5919, line: 1029, type: !121)
!14948 = distinct !DILocation(line: 48, column: 10, scope: !14949, inlinedAt: !14950)
!14949 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6713, file: !6713, line: 46, type: !6714, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!14950 = distinct !DILocation(line: 946, column: 36, scope: !14929)
!14951 = !{i64 2869849}
!14952 = !DILocation(line: 0, scope: !14945, inlinedAt: !14948)
!14953 = !DILocation(line: 48, column: 9, scope: !14949, inlinedAt: !14950)
!14954 = !DILocation(line: 946, column: 2, scope: !14929)
!14955 = distinct !DISubprogram(name: "need_swap", scope: !2420, file: !2420, line: 953, type: !6714, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14956)
!14956 = !{!14957}
!14957 = !DILocalVariable(name: "new_thread", scope: !14955, file: !2420, line: 959, type: !2315)
!14958 = !DILocation(line: 962, column: 31, scope: !14955)
!14959 = !DILocation(line: 0, scope: !14955)
!14960 = !DILocation(line: 963, column: 23, scope: !14955)
!14961 = !DILocation(line: 963, column: 20, scope: !14955)
!14962 = !DILocation(line: 963, column: 2, scope: !14955)
!14963 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12910, file: !12910, line: 181, type: !5929, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14964)
!14964 = !{!14965, !14966}
!14965 = !DILocalVariable(name: "key", arg: 1, scope: !14963, file: !12910, line: 181, type: !32)
!14966 = !DILocalVariable(name: "ret", scope: !14963, file: !12910, line: 183, type: !103)
!14967 = !DILocation(line: 0, scope: !14963)
!14968 = !DILocation(line: 185, column: 8, scope: !14963)
!14969 = !DILocation(line: 186, column: 2, scope: !14963)
!14970 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2420, file: !2420, line: 665, type: !14259, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14971)
!14971 = !{!14972, !14973, !14975}
!14972 = !DILocalVariable(name: "thread", arg: 1, scope: !14970, file: !2420, line: 665, type: !2315)
!14973 = !DILocalVariable(name: "__i", scope: !14974, file: !2420, line: 671, type: !14293)
!14974 = distinct !DILexicalBlock(scope: !14970, file: !2420, line: 671, column: 2)
!14975 = !DILocalVariable(name: "__key", scope: !14974, file: !2420, line: 671, type: !14293)
!14976 = !DILocation(line: 0, scope: !14970)
!14977 = !DILocation(line: 669, column: 8, scope: !14970)
!14978 = !DILocation(line: 0, scope: !14974)
!14979 = !DILocation(line: 0, scope: !14301, inlinedAt: !14980)
!14980 = distinct !DILocation(line: 671, column: 2, scope: !14974)
!14981 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !14982)
!14982 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !14980)
!14983 = !DILocation(line: 0, scope: !14310, inlinedAt: !14982)
!14984 = !DILocation(line: 672, column: 7, scope: !14985)
!14985 = distinct !DILexicalBlock(scope: !14986, file: !2420, line: 672, column: 7)
!14986 = distinct !DILexicalBlock(scope: !14987, file: !2420, line: 671, column: 26)
!14987 = distinct !DILexicalBlock(scope: !14974, file: !2420, line: 671, column: 2)
!14988 = !DILocation(line: 672, column: 7, scope: !14986)
!14989 = !DILocation(line: 0, scope: !14470, inlinedAt: !14990)
!14990 = distinct !DILocation(line: 673, column: 4, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14985, file: !2420, line: 672, column: 35)
!14992 = !DILocation(line: 266, column: 15, scope: !14470, inlinedAt: !14990)
!14993 = !DILocation(line: 266, column: 28, scope: !14470, inlinedAt: !14990)
!14994 = !DILocation(line: 0, scope: !14478, inlinedAt: !14995)
!14995 = distinct !DILocation(line: 268, column: 3, scope: !14482, inlinedAt: !14990)
!14996 = !DILocation(line: 234, column: 2, scope: !14478, inlinedAt: !14995)
!14997 = !DILocation(line: 674, column: 3, scope: !14991)
!14998 = !DILocation(line: 675, column: 3, scope: !14986)
!14999 = !DILocation(line: 676, column: 26, scope: !14986)
!15000 = !DILocation(line: 676, column: 23, scope: !14986)
!15001 = !DILocation(line: 676, column: 3, scope: !14986)
!15002 = !DILocation(line: 0, scope: !14328, inlinedAt: !15003)
!15003 = distinct !DILocation(line: 671, column: 2, scope: !14987)
!15004 = !DILocation(line: 0, scope: !14336, inlinedAt: !15005)
!15005 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15003)
!15006 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15005)
!15007 = !DILocation(line: 679, column: 16, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !14970, file: !2420, line: 679, column: 6)
!15009 = !DILocation(line: 679, column: 13, scope: !15008)
!15010 = !DILocation(line: 679, column: 6, scope: !14970)
!15011 = !DILocation(line: 680, column: 3, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !15008, file: !2420, line: 679, column: 26)
!15013 = !DILocation(line: 681, column: 2, scope: !15012)
!15014 = !DILocation(line: 684, column: 1, scope: !14970)
!15015 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13198, file: !13198, line: 52, type: !14277, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15016)
!15016 = !{!15017}
!15017 = !DILocalVariable(name: "thread", arg: 1, scope: !15015, file: !13198, line: 52, type: !2315)
!15018 = !DILocation(line: 0, scope: !15015)
!15019 = !DILocation(line: 54, column: 39, scope: !15015)
!15020 = !DILocation(line: 54, column: 9, scope: !15015)
!15021 = !DILocation(line: 54, column: 2, scope: !15015)
!15022 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12806, file: !12806, line: 141, type: !14259, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15023)
!15023 = !{!15024}
!15024 = !DILocalVariable(name: "thread", arg: 1, scope: !15022, file: !12806, line: 141, type: !2315)
!15025 = !DILocation(line: 0, scope: !15022)
!15026 = !DILocation(line: 143, column: 15, scope: !15022)
!15027 = !DILocation(line: 143, column: 28, scope: !15022)
!15028 = !DILocation(line: 146, column: 1, scope: !15022)
!15029 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12806, file: !12806, line: 73, type: !3157, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!15030 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15031)
!15031 = distinct !DILocation(line: 75, column: 30, scope: !15029)
!15032 = !DILocation(line: 0, scope: !14310, inlinedAt: !15031)
!15033 = !DILocation(line: 75, column: 9, scope: !15029)
!15034 = !DILocation(line: 76, column: 1, scope: !15029)
!15035 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2420, file: !2420, line: 977, type: !6010, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15036)
!15036 = !{!15037}
!15037 = !DILocalVariable(name: "key", arg: 1, scope: !15035, file: !2420, line: 977, type: !121)
!15038 = !DILocation(line: 0, scope: !15035)
!15039 = !DILocation(line: 979, column: 6, scope: !15040)
!15040 = distinct !DILexicalBlock(scope: !15035, file: !2420, line: 979, column: 6)
!15041 = !DILocation(line: 979, column: 6, scope: !15035)
!15042 = !DILocation(line: 980, column: 3, scope: !15043)
!15043 = distinct !DILexicalBlock(scope: !15040, file: !2420, line: 979, column: 20)
!15044 = !DILocation(line: 981, column: 2, scope: !15043)
!15045 = !DILocation(line: 0, scope: !14336, inlinedAt: !15046)
!15046 = distinct !DILocation(line: 982, column: 3, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !15040, file: !2420, line: 981, column: 9)
!15048 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15046)
!15049 = !DILocation(line: 985, column: 1, scope: !15035)
!15050 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2420, file: !2420, line: 695, type: !14259, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15051)
!15051 = !{!15052, !15053}
!15052 = !DILocalVariable(name: "thread", arg: 1, scope: !15050, file: !2420, line: 695, type: !2315)
!15053 = !DILocalVariable(name: "key", scope: !15050, file: !2420, line: 699, type: !14293)
!15054 = !DILocation(line: 0, scope: !15050)
!15055 = !DILocation(line: 0, scope: !14301, inlinedAt: !15056)
!15056 = distinct !DILocation(line: 699, column: 25, scope: !15050)
!15057 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15058)
!15058 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15056)
!15059 = !DILocation(line: 0, scope: !14310, inlinedAt: !15058)
!15060 = !DILocation(line: 702, column: 7, scope: !15061)
!15061 = distinct !DILexicalBlock(scope: !15050, file: !2420, line: 702, column: 6)
!15062 = !DILocation(line: 702, column: 6, scope: !15050)
!15063 = !DILocation(line: 0, scope: !14328, inlinedAt: !15064)
!15064 = distinct !DILocation(line: 703, column: 3, scope: !15065)
!15065 = distinct !DILexicalBlock(scope: !15061, file: !2420, line: 702, column: 38)
!15066 = !DILocation(line: 0, scope: !14336, inlinedAt: !15067)
!15067 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15064)
!15068 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15067)
!15069 = !DILocation(line: 704, column: 3, scope: !15065)
!15070 = !DILocation(line: 707, column: 2, scope: !15050)
!15071 = !DILocation(line: 708, column: 2, scope: !15050)
!15072 = !DILocation(line: 710, column: 2, scope: !15050)
!15073 = !DILocation(line: 713, column: 1, scope: !15050)
!15074 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12806, file: !12806, line: 96, type: !14419, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15075)
!15075 = !{!15076}
!15076 = !DILocalVariable(name: "thread", arg: 1, scope: !15074, file: !12806, line: 96, type: !2315)
!15077 = !DILocation(line: 0, scope: !15074)
!15078 = !DILocation(line: 98, column: 23, scope: !15074)
!15079 = !DILocation(line: 98, column: 36, scope: !15074)
!15080 = !DILocation(line: 98, column: 57, scope: !15074)
!15081 = !DILocation(line: 98, column: 2, scope: !15074)
!15082 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12806, file: !12806, line: 148, type: !14259, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15083)
!15083 = !{!15084}
!15084 = !DILocalVariable(name: "thread", arg: 1, scope: !15082, file: !12806, line: 148, type: !2315)
!15085 = !DILocation(line: 0, scope: !15082)
!15086 = !DILocation(line: 150, column: 15, scope: !15082)
!15087 = !DILocation(line: 150, column: 28, scope: !15082)
!15088 = !DILocation(line: 153, column: 1, scope: !15082)
!15089 = distinct !DISubprogram(name: "z_pend_thread", scope: !2420, file: !2420, line: 770, type: !15090, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15096)
!15090 = !DISubroutineType(types: !15091)
!15091 = !{null, !2315, !2346, !15092}
!15092 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !15093)
!15093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !15094)
!15094 = !{!15095}
!15095 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15093, file: !201, line: 66, baseType: !200, size: 64)
!15096 = !{!15097, !15098, !15099, !15100, !15102}
!15097 = !DILocalVariable(name: "thread", arg: 1, scope: !15089, file: !2420, line: 770, type: !2315)
!15098 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15089, file: !2420, line: 770, type: !2346)
!15099 = !DILocalVariable(name: "timeout", arg: 3, scope: !15089, file: !2420, line: 771, type: !15092)
!15100 = !DILocalVariable(name: "__i", scope: !15101, file: !2420, line: 774, type: !14293)
!15101 = distinct !DILexicalBlock(scope: !15089, file: !2420, line: 774, column: 2)
!15102 = !DILocalVariable(name: "__key", scope: !15101, file: !2420, line: 774, type: !14293)
!15103 = !DILocation(line: 0, scope: !15089)
!15104 = !DILocation(line: 0, scope: !15101)
!15105 = !DILocation(line: 0, scope: !14301, inlinedAt: !15106)
!15106 = distinct !DILocation(line: 774, column: 2, scope: !15101)
!15107 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15108)
!15108 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15106)
!15109 = !DILocation(line: 0, scope: !14310, inlinedAt: !15108)
!15110 = !DILocation(line: 775, column: 3, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !15112, file: !2420, line: 774, column: 26)
!15112 = distinct !DILexicalBlock(scope: !15101, file: !2420, line: 774, column: 2)
!15113 = !DILocation(line: 0, scope: !14328, inlinedAt: !15114)
!15114 = distinct !DILocation(line: 774, column: 2, scope: !15112)
!15115 = !DILocation(line: 0, scope: !14336, inlinedAt: !15116)
!15116 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15114)
!15117 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15116)
!15118 = !DILocation(line: 777, column: 1, scope: !15089)
!15119 = distinct !DISubprogram(name: "pend_locked", scope: !2420, file: !2420, line: 760, type: !15090, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15120)
!15120 = !{!15121, !15122, !15123}
!15121 = !DILocalVariable(name: "thread", arg: 1, scope: !15119, file: !2420, line: 760, type: !2315)
!15122 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15119, file: !2420, line: 760, type: !2346)
!15123 = !DILocalVariable(name: "timeout", arg: 3, scope: !15119, file: !2420, line: 761, type: !15092)
!15124 = !DILocation(line: 0, scope: !15119)
!15125 = !DILocation(line: 766, column: 2, scope: !15119)
!15126 = !DILocation(line: 767, column: 2, scope: !15119)
!15127 = !DILocation(line: 768, column: 1, scope: !15119)
!15128 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2420, file: !2420, line: 740, type: !15129, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15131)
!15129 = !DISubroutineType(types: !15130)
!15130 = !{null, !2315, !2346}
!15131 = !{!15132, !15133}
!15132 = !DILocalVariable(name: "thread", arg: 1, scope: !15128, file: !2420, line: 740, type: !2315)
!15133 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15128, file: !2420, line: 740, type: !2346)
!15134 = !DILocation(line: 0, scope: !15128)
!15135 = !DILocation(line: 742, column: 2, scope: !15128)
!15136 = !DILocation(line: 743, column: 2, scope: !15128)
!15137 = !DILocation(line: 747, column: 13, scope: !15138)
!15138 = distinct !DILexicalBlock(scope: !15128, file: !2420, line: 747, column: 6)
!15139 = !DILocation(line: 747, column: 6, scope: !15128)
!15140 = !DILocation(line: 748, column: 16, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15138, file: !2420, line: 747, column: 22)
!15142 = !DILocation(line: 748, column: 26, scope: !15141)
!15143 = !DILocation(line: 749, column: 28, scope: !15141)
!15144 = !DILocation(line: 0, scope: !14501, inlinedAt: !15145)
!15145 = distinct !DILocation(line: 749, column: 3, scope: !15141)
!15146 = !DILocation(line: 188, column: 2, scope: !14511, inlinedAt: !15145)
!15147 = !DILocation(line: 188, column: 2, scope: !14513, inlinedAt: !15145)
!15148 = !DILocation(line: 0, scope: !14511, inlinedAt: !15145)
!15149 = !DILocation(line: 189, column: 7, scope: !14516, inlinedAt: !15145)
!15150 = !DILocation(line: 189, column: 35, scope: !14516, inlinedAt: !15145)
!15151 = !DILocation(line: 189, column: 7, scope: !14517, inlinedAt: !15145)
!15152 = !DILocation(line: 191, column: 21, scope: !14521, inlinedAt: !15145)
!15153 = !DILocation(line: 190, column: 4, scope: !14521, inlinedAt: !15145)
!15154 = !DILocation(line: 192, column: 4, scope: !14521, inlinedAt: !15145)
!15155 = distinct !{!15155, !15146, !15156}
!15156 = !DILocation(line: 194, column: 2, scope: !14511, inlinedAt: !15145)
!15157 = !DILocation(line: 196, column: 37, scope: !14501, inlinedAt: !15145)
!15158 = !DILocation(line: 196, column: 2, scope: !14501, inlinedAt: !15145)
!15159 = !DILocation(line: 197, column: 1, scope: !14501, inlinedAt: !15145)
!15160 = !DILocation(line: 751, column: 1, scope: !15128)
!15161 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2420, file: !2420, line: 753, type: !15162, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15164)
!15162 = !DISubroutineType(types: !15163)
!15163 = !{null, !2315, !15092}
!15164 = !{!15165, !15166}
!15165 = !DILocalVariable(name: "thread", arg: 1, scope: !15161, file: !2420, line: 753, type: !2315)
!15166 = !DILocalVariable(name: "timeout", arg: 2, scope: !15161, file: !2420, line: 753, type: !15092)
!15167 = !DILocation(line: 0, scope: !15161)
!15168 = !DILocation(line: 755, column: 7, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15161, file: !2420, line: 755, column: 6)
!15170 = !DILocation(line: 755, column: 6, scope: !15161)
!15171 = !DILocation(line: 756, column: 3, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15169, file: !2420, line: 755, column: 41)
!15173 = !DILocation(line: 757, column: 2, scope: !15172)
!15174 = !DILocation(line: 758, column: 1, scope: !15161)
!15175 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13198, file: !13198, line: 47, type: !15162, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15176)
!15176 = !{!15177, !15178}
!15177 = !DILocalVariable(name: "thread", arg: 1, scope: !15175, file: !13198, line: 47, type: !2315)
!15178 = !DILocalVariable(name: "ticks", arg: 2, scope: !15175, file: !13198, line: 47, type: !15092)
!15179 = !DILocation(line: 0, scope: !15175)
!15180 = !DILocation(line: 49, column: 30, scope: !15175)
!15181 = !DILocation(line: 49, column: 2, scope: !15175)
!15182 = !DILocation(line: 50, column: 1, scope: !15175)
!15183 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2420, file: !2420, line: 795, type: !2372, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15184)
!15184 = !{!15185, !15186, !15187, !15189, !15190}
!15185 = !DILocalVariable(name: "timeout", arg: 1, scope: !15183, file: !2420, line: 795, type: !2374)
!15186 = !DILocalVariable(name: "thread", scope: !15183, file: !2420, line: 797, type: !2315)
!15187 = !DILocalVariable(name: "__i", scope: !15188, file: !2420, line: 800, type: !14293)
!15188 = distinct !DILexicalBlock(scope: !15183, file: !2420, line: 800, column: 2)
!15189 = !DILocalVariable(name: "__key", scope: !15188, file: !2420, line: 800, type: !14293)
!15190 = !DILocalVariable(name: "killed", scope: !15191, file: !2420, line: 801, type: !157)
!15191 = distinct !DILexicalBlock(scope: !15192, file: !2420, line: 800, column: 26)
!15192 = distinct !DILexicalBlock(scope: !15188, file: !2420, line: 800, column: 2)
!15193 = !DILocation(line: 0, scope: !15183)
!15194 = !DILocation(line: 797, column: 28, scope: !15183)
!15195 = !DILocation(line: 0, scope: !15188)
!15196 = !DILocation(line: 0, scope: !14301, inlinedAt: !15197)
!15197 = distinct !DILocation(line: 800, column: 2, scope: !15188)
!15198 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15199)
!15199 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15197)
!15200 = !DILocation(line: 0, scope: !14310, inlinedAt: !15199)
!15201 = !DILocation(line: 801, column: 27, scope: !15191)
!15202 = !DILocation(line: 801, column: 32, scope: !15191)
!15203 = !DILocation(line: 801, column: 61, scope: !15191)
!15204 = !DILocation(line: 0, scope: !15191)
!15205 = !DILocation(line: 804, column: 7, scope: !15191)
!15206 = !DILocation(line: 805, column: 21, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !15208, file: !2420, line: 805, column: 8)
!15208 = distinct !DILexicalBlock(scope: !15209, file: !2420, line: 804, column: 16)
!15209 = distinct !DILexicalBlock(scope: !15191, file: !2420, line: 804, column: 7)
!15210 = !DILocation(line: 805, column: 31, scope: !15207)
!15211 = !DILocation(line: 805, column: 8, scope: !15208)
!15212 = !DILocation(line: 806, column: 5, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !15207, file: !2420, line: 805, column: 40)
!15214 = !DILocation(line: 807, column: 4, scope: !15213)
!15215 = !DILocation(line: 808, column: 4, scope: !15208)
!15216 = !DILocation(line: 809, column: 4, scope: !15208)
!15217 = !DILocation(line: 810, column: 4, scope: !15208)
!15218 = !DILocation(line: 811, column: 3, scope: !15208)
!15219 = !DILocation(line: 0, scope: !14328, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 800, column: 2, scope: !15192)
!15221 = !DILocation(line: 0, scope: !14336, inlinedAt: !15222)
!15222 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15220)
!15223 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15222)
!15224 = !DILocation(line: 813, column: 1, scope: !15183)
!15225 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2420, file: !2420, line: 779, type: !14259, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15226)
!15226 = !{!15227}
!15227 = !DILocalVariable(name: "thread", arg: 1, scope: !15225, file: !2420, line: 779, type: !2315)
!15228 = !DILocation(line: 0, scope: !15225)
!15229 = !DILocation(line: 781, column: 2, scope: !15225)
!15230 = !DILocation(line: 782, column: 2, scope: !15225)
!15231 = !DILocation(line: 783, column: 15, scope: !15225)
!15232 = !DILocation(line: 783, column: 25, scope: !15225)
!15233 = !DILocation(line: 784, column: 1, scope: !15225)
!15234 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12806, file: !12806, line: 165, type: !14259, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15235)
!15235 = !{!15236}
!15236 = !DILocalVariable(name: "thread", arg: 1, scope: !15234, file: !12806, line: 165, type: !2315)
!15237 = !DILocation(line: 0, scope: !15234)
!15238 = !DILocation(line: 167, column: 15, scope: !15234)
!15239 = !DILocation(line: 167, column: 28, scope: !15234)
!15240 = !DILocation(line: 168, column: 1, scope: !15234)
!15241 = distinct !DISubprogram(name: "unready_thread", scope: !2420, file: !2420, line: 731, type: !14259, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15242)
!15242 = !{!15243}
!15243 = !DILocalVariable(name: "thread", arg: 1, scope: !15241, file: !2420, line: 731, type: !2315)
!15244 = !DILocation(line: 0, scope: !15241)
!15245 = !DILocation(line: 733, column: 6, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !15241, file: !2420, line: 733, column: 6)
!15247 = !DILocation(line: 733, column: 6, scope: !15241)
!15248 = !DILocation(line: 0, scope: !14470, inlinedAt: !15249)
!15249 = distinct !DILocation(line: 734, column: 3, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15246, file: !2420, line: 733, column: 34)
!15251 = !DILocation(line: 266, column: 15, scope: !14470, inlinedAt: !15249)
!15252 = !DILocation(line: 266, column: 28, scope: !14470, inlinedAt: !15249)
!15253 = !DILocation(line: 0, scope: !14478, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 268, column: 3, scope: !14482, inlinedAt: !15249)
!15255 = !DILocation(line: 234, column: 2, scope: !14478, inlinedAt: !15254)
!15256 = !DILocation(line: 735, column: 2, scope: !15250)
!15257 = !DILocation(line: 736, column: 25, scope: !15241)
!15258 = !DILocation(line: 736, column: 22, scope: !15241)
!15259 = !DILocation(line: 736, column: 2, scope: !15241)
!15260 = !DILocation(line: 737, column: 1, scope: !15241)
!15261 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12806, file: !12806, line: 160, type: !14259, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15262)
!15262 = !{!15263}
!15263 = !DILocalVariable(name: "thread", arg: 1, scope: !15261, file: !12806, line: 160, type: !2315)
!15264 = !DILocation(line: 0, scope: !15261)
!15265 = !DILocation(line: 162, column: 15, scope: !15261)
!15266 = !DILocation(line: 162, column: 28, scope: !15261)
!15267 = !DILocation(line: 163, column: 1, scope: !15261)
!15268 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2420, file: !2420, line: 786, type: !14259, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15269)
!15269 = !{!15270, !15271, !15273}
!15270 = !DILocalVariable(name: "thread", arg: 1, scope: !15268, file: !2420, line: 786, type: !2315)
!15271 = !DILocalVariable(name: "__i", scope: !15272, file: !2420, line: 788, type: !14293)
!15272 = distinct !DILexicalBlock(scope: !15268, file: !2420, line: 788, column: 2)
!15273 = !DILocalVariable(name: "__key", scope: !15272, file: !2420, line: 788, type: !14293)
!15274 = !DILocation(line: 0, scope: !15268)
!15275 = !DILocation(line: 0, scope: !15272)
!15276 = !DILocation(line: 0, scope: !14301, inlinedAt: !15277)
!15277 = distinct !DILocation(line: 788, column: 2, scope: !15272)
!15278 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15279)
!15279 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15277)
!15280 = !DILocation(line: 0, scope: !14310, inlinedAt: !15279)
!15281 = !DILocation(line: 789, column: 3, scope: !15282)
!15282 = distinct !DILexicalBlock(scope: !15283, file: !2420, line: 788, column: 26)
!15283 = distinct !DILexicalBlock(scope: !15272, file: !2420, line: 788, column: 2)
!15284 = !DILocation(line: 0, scope: !14328, inlinedAt: !15285)
!15285 = distinct !DILocation(line: 788, column: 2, scope: !15283)
!15286 = !DILocation(line: 0, scope: !14336, inlinedAt: !15287)
!15287 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15285)
!15288 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15287)
!15289 = !DILocation(line: 791, column: 1, scope: !15268)
!15290 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2420, file: !2420, line: 816, type: !15291, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15293)
!15291 = !DISubroutineType(types: !15292)
!15292 = !{!103, !121, !2346, !15092}
!15293 = !{!15294, !15295, !15296, !15297, !15298, !15300}
!15294 = !DILocalVariable(name: "key", arg: 1, scope: !15290, file: !2420, line: 816, type: !121)
!15295 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15290, file: !2420, line: 816, type: !2346)
!15296 = !DILocalVariable(name: "timeout", arg: 3, scope: !15290, file: !2420, line: 816, type: !15092)
!15297 = !DILocalVariable(name: "ret", scope: !15290, file: !2420, line: 828, type: !103)
!15298 = !DILocalVariable(name: "__i", scope: !15299, file: !2420, line: 829, type: !14293)
!15299 = distinct !DILexicalBlock(scope: !15290, file: !2420, line: 829, column: 2)
!15300 = !DILocalVariable(name: "__key", scope: !15299, file: !2420, line: 829, type: !14293)
!15301 = !DILocation(line: 0, scope: !15290)
!15302 = !DILocation(line: 823, column: 14, scope: !15290)
!15303 = !DILocation(line: 823, column: 2, scope: !15290)
!15304 = !DILocation(line: 826, column: 20, scope: !15290)
!15305 = !DILocation(line: 826, column: 18, scope: !15290)
!15306 = !DILocation(line: 828, column: 12, scope: !15290)
!15307 = !DILocation(line: 0, scope: !15299)
!15308 = !DILocation(line: 0, scope: !14301, inlinedAt: !15309)
!15309 = distinct !DILocation(line: 829, column: 2, scope: !15299)
!15310 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15311)
!15311 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15309)
!15312 = !DILocation(line: 0, scope: !14310, inlinedAt: !15311)
!15313 = !DILocation(line: 830, column: 7, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15315, file: !2420, line: 830, column: 7)
!15315 = distinct !DILexicalBlock(scope: !15316, file: !2420, line: 829, column: 26)
!15316 = distinct !DILexicalBlock(scope: !15299, file: !2420, line: 829, column: 2)
!15317 = !DILocation(line: 830, column: 26, scope: !15314)
!15318 = !DILocation(line: 830, column: 23, scope: !15314)
!15319 = !DILocation(line: 830, column: 7, scope: !15315)
!15320 = !DILocation(line: 831, column: 20, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15314, file: !2420, line: 830, column: 36)
!15322 = !DILocation(line: 832, column: 3, scope: !15321)
!15323 = !DILocation(line: 0, scope: !14328, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 829, column: 2, scope: !15316)
!15325 = !DILocation(line: 0, scope: !14336, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15324)
!15327 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15326)
!15328 = !DILocation(line: 834, column: 2, scope: !15290)
!15329 = distinct !DISubprogram(name: "z_pend_curr", scope: !2420, file: !2420, line: 840, type: !15330, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15332)
!15330 = !DISubroutineType(types: !15331)
!15331 = !{!103, !14304, !14293, !2346, !15092}
!15332 = !{!15333, !15334, !15335, !15336}
!15333 = !DILocalVariable(name: "lock", arg: 1, scope: !15329, file: !2420, line: 840, type: !14304)
!15334 = !DILocalVariable(name: "key", arg: 2, scope: !15329, file: !2420, line: 840, type: !14293)
!15335 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15329, file: !2420, line: 841, type: !2346)
!15336 = !DILocalVariable(name: "timeout", arg: 4, scope: !15329, file: !2420, line: 841, type: !15092)
!15337 = !DILocation(line: 0, scope: !15329)
!15338 = !DILocation(line: 844, column: 20, scope: !15329)
!15339 = !DILocation(line: 844, column: 18, scope: !15329)
!15340 = !DILocation(line: 0, scope: !14301, inlinedAt: !15341)
!15341 = distinct !DILocation(line: 856, column: 9, scope: !15329)
!15342 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15343)
!15343 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15341)
!15344 = !DILocation(line: 0, scope: !14310, inlinedAt: !15343)
!15345 = !DILocation(line: 857, column: 14, scope: !15329)
!15346 = !DILocation(line: 857, column: 2, scope: !15329)
!15347 = !DILocation(line: 0, scope: !14912, inlinedAt: !15348)
!15348 = distinct !DILocation(line: 859, column: 9, scope: !15329)
!15349 = !DILocation(line: 196, column: 9, scope: !14912, inlinedAt: !15348)
!15350 = !DILocation(line: 859, column: 2, scope: !15329)
!15351 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2420, file: !2420, line: 862, type: !15352, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15354)
!15352 = !DISubroutineType(types: !15353)
!15353 = !{!2315, !2346}
!15354 = !{!15355, !15356, !15357, !15359}
!15355 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15351, file: !2420, line: 862, type: !2346)
!15356 = !DILocalVariable(name: "thread", scope: !15351, file: !2420, line: 864, type: !2315)
!15357 = !DILocalVariable(name: "__i", scope: !15358, file: !2420, line: 866, type: !14293)
!15358 = distinct !DILexicalBlock(scope: !15351, file: !2420, line: 866, column: 2)
!15359 = !DILocalVariable(name: "__key", scope: !15358, file: !2420, line: 866, type: !14293)
!15360 = !DILocation(line: 0, scope: !15351)
!15361 = !DILocation(line: 0, scope: !15358)
!15362 = !DILocation(line: 0, scope: !14301, inlinedAt: !15363)
!15363 = distinct !DILocation(line: 866, column: 2, scope: !15358)
!15364 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15365)
!15365 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15363)
!15366 = !DILocation(line: 0, scope: !14310, inlinedAt: !15365)
!15367 = !DILocation(line: 867, column: 12, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15369, file: !2420, line: 866, column: 26)
!15369 = distinct !DILexicalBlock(scope: !15358, file: !2420, line: 866, column: 2)
!15370 = !DILocation(line: 869, column: 14, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15368, file: !2420, line: 869, column: 7)
!15372 = !DILocation(line: 869, column: 7, scope: !15368)
!15373 = !DILocation(line: 870, column: 4, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !15371, file: !2420, line: 869, column: 23)
!15375 = !DILocation(line: 871, column: 3, scope: !15374)
!15376 = !DILocation(line: 0, scope: !14328, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 866, column: 2, scope: !15369)
!15378 = !DILocation(line: 0, scope: !14336, inlinedAt: !15379)
!15379 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15377)
!15380 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15379)
!15381 = !DILocation(line: 874, column: 2, scope: !15351)
!15382 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2420, file: !2420, line: 877, type: !15352, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15383)
!15383 = !{!15384, !15385, !15386, !15388}
!15384 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15382, file: !2420, line: 877, type: !2346)
!15385 = !DILocalVariable(name: "thread", scope: !15382, file: !2420, line: 879, type: !2315)
!15386 = !DILocalVariable(name: "__i", scope: !15387, file: !2420, line: 881, type: !14293)
!15387 = distinct !DILexicalBlock(scope: !15382, file: !2420, line: 881, column: 2)
!15388 = !DILocalVariable(name: "__key", scope: !15387, file: !2420, line: 881, type: !14293)
!15389 = !DILocation(line: 0, scope: !15382)
!15390 = !DILocation(line: 0, scope: !15387)
!15391 = !DILocation(line: 0, scope: !14301, inlinedAt: !15392)
!15392 = distinct !DILocation(line: 881, column: 2, scope: !15387)
!15393 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15394)
!15394 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15392)
!15395 = !DILocation(line: 0, scope: !14310, inlinedAt: !15394)
!15396 = !DILocation(line: 882, column: 12, scope: !15397)
!15397 = distinct !DILexicalBlock(scope: !15398, file: !2420, line: 881, column: 26)
!15398 = distinct !DILexicalBlock(scope: !15387, file: !2420, line: 881, column: 2)
!15399 = !DILocation(line: 884, column: 14, scope: !15400)
!15400 = distinct !DILexicalBlock(scope: !15397, file: !2420, line: 884, column: 7)
!15401 = !DILocation(line: 884, column: 7, scope: !15397)
!15402 = !DILocation(line: 885, column: 4, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15400, file: !2420, line: 884, column: 23)
!15404 = !DILocation(line: 886, column: 10, scope: !15403)
!15405 = !DILocation(line: 887, column: 3, scope: !15403)
!15406 = !DILocation(line: 0, scope: !14328, inlinedAt: !15407)
!15407 = distinct !DILocation(line: 881, column: 2, scope: !15398)
!15408 = !DILocation(line: 0, scope: !14336, inlinedAt: !15409)
!15409 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15407)
!15410 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15409)
!15411 = !DILocation(line: 890, column: 2, scope: !15382)
!15412 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2420, file: !2420, line: 893, type: !14259, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15413)
!15413 = !{!15414}
!15414 = !DILocalVariable(name: "thread", arg: 1, scope: !15412, file: !2420, line: 893, type: !2315)
!15415 = !DILocation(line: 0, scope: !15412)
!15416 = !DILocation(line: 0, scope: !15268, inlinedAt: !15417)
!15417 = distinct !DILocation(line: 895, column: 2, scope: !15412)
!15418 = !DILocation(line: 0, scope: !15272, inlinedAt: !15417)
!15419 = !DILocation(line: 0, scope: !14301, inlinedAt: !15420)
!15420 = distinct !DILocation(line: 788, column: 2, scope: !15272, inlinedAt: !15417)
!15421 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15422)
!15422 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15420)
!15423 = !DILocation(line: 0, scope: !14310, inlinedAt: !15422)
!15424 = !DILocation(line: 789, column: 3, scope: !15282, inlinedAt: !15417)
!15425 = !DILocation(line: 0, scope: !14328, inlinedAt: !15426)
!15426 = distinct !DILocation(line: 788, column: 2, scope: !15283, inlinedAt: !15417)
!15427 = !DILocation(line: 0, scope: !14336, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15426)
!15429 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15428)
!15430 = !DILocation(line: 896, column: 8, scope: !15412)
!15431 = !DILocation(line: 897, column: 1, scope: !15412)
!15432 = distinct !DISubprogram(name: "z_set_prio", scope: !2420, file: !2420, line: 902, type: !14621, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15433)
!15433 = !{!15434, !15435, !15436, !15437, !15439}
!15434 = !DILocalVariable(name: "thread", arg: 1, scope: !15432, file: !2420, line: 902, type: !2315)
!15435 = !DILocalVariable(name: "prio", arg: 2, scope: !15432, file: !2420, line: 902, type: !103)
!15436 = !DILocalVariable(name: "need_sched", scope: !15432, file: !2420, line: 904, type: !157)
!15437 = !DILocalVariable(name: "__i", scope: !15438, file: !2420, line: 906, type: !14293)
!15438 = distinct !DILexicalBlock(scope: !15432, file: !2420, line: 906, column: 2)
!15439 = !DILocalVariable(name: "__key", scope: !15438, file: !2420, line: 906, type: !14293)
!15440 = !DILocation(line: 0, scope: !15432)
!15441 = !DILocation(line: 0, scope: !15438)
!15442 = !DILocation(line: 0, scope: !14301, inlinedAt: !15443)
!15443 = distinct !DILocation(line: 906, column: 2, scope: !15438)
!15444 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15445)
!15445 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15443)
!15446 = !DILocation(line: 0, scope: !14310, inlinedAt: !15445)
!15447 = !DILocation(line: 907, column: 16, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15449, file: !2420, line: 906, column: 26)
!15449 = distinct !DILexicalBlock(scope: !15438, file: !2420, line: 906, column: 2)
!15450 = !DILocation(line: 909, column: 7, scope: !15448)
!15451 = !DILocation(line: 0, scope: !14470, inlinedAt: !15452)
!15452 = distinct !DILocation(line: 912, column: 5, scope: !15453)
!15453 = distinct !DILexicalBlock(scope: !15454, file: !2420, line: 911, column: 63)
!15454 = distinct !DILexicalBlock(scope: !15455, file: !2420, line: 911, column: 8)
!15455 = distinct !DILexicalBlock(scope: !15456, file: !2420, line: 909, column: 19)
!15456 = distinct !DILexicalBlock(scope: !15448, file: !2420, line: 909, column: 7)
!15457 = !DILocation(line: 266, column: 28, scope: !14470, inlinedAt: !15452)
!15458 = !DILocation(line: 0, scope: !14478, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 268, column: 3, scope: !14482, inlinedAt: !15452)
!15460 = !DILocation(line: 234, column: 2, scope: !14478, inlinedAt: !15459)
!15461 = !DILocation(line: 913, column: 23, scope: !15453)
!15462 = !DILocation(line: 0, scope: !14487, inlinedAt: !15463)
!15463 = distinct !DILocation(line: 914, column: 5, scope: !15453)
!15464 = !DILocation(line: 252, column: 28, scope: !14487, inlinedAt: !15463)
!15465 = !DILocation(line: 0, scope: !14494, inlinedAt: !15466)
!15466 = distinct !DILocation(line: 254, column: 3, scope: !14498, inlinedAt: !15463)
!15467 = !DILocation(line: 0, scope: !14501, inlinedAt: !15468)
!15468 = distinct !DILocation(line: 229, column: 2, scope: !14494, inlinedAt: !15466)
!15469 = !DILocation(line: 188, column: 2, scope: !14511, inlinedAt: !15468)
!15470 = !DILocation(line: 188, column: 2, scope: !14513, inlinedAt: !15468)
!15471 = !DILocation(line: 0, scope: !14511, inlinedAt: !15468)
!15472 = !DILocation(line: 189, column: 7, scope: !14516, inlinedAt: !15468)
!15473 = !DILocation(line: 189, column: 35, scope: !14516, inlinedAt: !15468)
!15474 = !DILocation(line: 189, column: 7, scope: !14517, inlinedAt: !15468)
!15475 = !DILocation(line: 190, column: 4, scope: !14521, inlinedAt: !15468)
!15476 = !DILocation(line: 192, column: 4, scope: !14521, inlinedAt: !15468)
!15477 = distinct !{!15477, !15469, !15478}
!15478 = !DILocation(line: 194, column: 2, scope: !14511, inlinedAt: !15468)
!15479 = !DILocation(line: 196, column: 2, scope: !14501, inlinedAt: !15468)
!15480 = !DILocation(line: 197, column: 1, scope: !14501, inlinedAt: !15468)
!15481 = !DILocation(line: 918, column: 4, scope: !15455)
!15482 = !DILocation(line: 919, column: 3, scope: !15455)
!15483 = !DILocation(line: 920, column: 22, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !15456, file: !2420, line: 919, column: 10)
!15485 = !DILocation(line: 0, scope: !14328, inlinedAt: !15486)
!15486 = distinct !DILocation(line: 906, column: 2, scope: !15449)
!15487 = !DILocation(line: 0, scope: !14336, inlinedAt: !15488)
!15488 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15486)
!15489 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15488)
!15490 = !DILocation(line: 926, column: 2, scope: !15432)
!15491 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2420, file: !2420, line: 929, type: !15492, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15494)
!15492 = !DISubroutineType(types: !15493)
!15493 = !{null, !2315, !103}
!15494 = !{!15495, !15496, !15497}
!15495 = !DILocalVariable(name: "thread", arg: 1, scope: !15491, file: !2420, line: 929, type: !2315)
!15496 = !DILocalVariable(name: "prio", arg: 2, scope: !15491, file: !2420, line: 929, type: !103)
!15497 = !DILocalVariable(name: "need_sched", scope: !15491, file: !2420, line: 931, type: !157)
!15498 = !DILocation(line: 0, scope: !15491)
!15499 = !DILocation(line: 931, column: 20, scope: !15491)
!15500 = !DILocation(line: 935, column: 17, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15491, file: !2420, line: 935, column: 6)
!15502 = !DILocation(line: 935, column: 20, scope: !15501)
!15503 = !DILocation(line: 935, column: 35, scope: !15501)
!15504 = !DILocation(line: 935, column: 48, scope: !15501)
!15505 = !DILocation(line: 935, column: 6, scope: !15491)
!15506 = !DILocation(line: 936, column: 3, scope: !15507)
!15507 = distinct !DILexicalBlock(scope: !15501, file: !2420, line: 935, column: 55)
!15508 = !DILocation(line: 937, column: 2, scope: !15507)
!15509 = !DILocation(line: 938, column: 1, scope: !15491)
!15510 = distinct !DISubprogram(name: "k_sched_lock", scope: !2420, file: !2420, line: 987, type: !3157, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15511)
!15511 = !{!15512, !15514}
!15512 = !DILocalVariable(name: "__i", scope: !15513, file: !2420, line: 989, type: !14293)
!15513 = distinct !DILexicalBlock(scope: !15510, file: !2420, line: 989, column: 2)
!15514 = !DILocalVariable(name: "__key", scope: !15513, file: !2420, line: 989, type: !14293)
!15515 = !DILocation(line: 0, scope: !15513)
!15516 = !DILocation(line: 0, scope: !14301, inlinedAt: !15517)
!15517 = distinct !DILocation(line: 989, column: 2, scope: !15513)
!15518 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15519)
!15519 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15517)
!15520 = !DILocation(line: 0, scope: !14310, inlinedAt: !15519)
!15521 = !DILocation(line: 992, column: 3, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15523, file: !2420, line: 989, column: 26)
!15523 = distinct !DILexicalBlock(scope: !15513, file: !2420, line: 989, column: 2)
!15524 = !DILocation(line: 0, scope: !14328, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 989, column: 2, scope: !15523)
!15526 = !DILocation(line: 0, scope: !14336, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15525)
!15528 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15527)
!15529 = !DILocation(line: 994, column: 1, scope: !15510)
!15530 = distinct !DISubprogram(name: "z_sched_lock", scope: !12806, file: !12806, line: 251, type: !3157, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!15531 = !DILocation(line: 256, column: 4, scope: !15530)
!15532 = !DILocation(line: 256, column: 19, scope: !15530)
!15533 = !DILocation(line: 256, column: 2, scope: !15530)
!15534 = !DILocation(line: 258, column: 2, scope: !15535)
!15535 = distinct !DILexicalBlock(scope: !15530, file: !12806, line: 258, column: 2)
!15536 = !{i64 2154189237}
!15537 = !DILocation(line: 259, column: 1, scope: !15530)
!15538 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2420, file: !2420, line: 996, type: !3157, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15539)
!15539 = !{!15540, !15542}
!15540 = !DILocalVariable(name: "__i", scope: !15541, file: !2420, line: 998, type: !14293)
!15541 = distinct !DILexicalBlock(scope: !15538, file: !2420, line: 998, column: 2)
!15542 = !DILocalVariable(name: "__key", scope: !15541, file: !2420, line: 998, type: !14293)
!15543 = !DILocation(line: 0, scope: !15541)
!15544 = !DILocation(line: 0, scope: !14301, inlinedAt: !15545)
!15545 = distinct !DILocation(line: 998, column: 2, scope: !15541)
!15546 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15547)
!15547 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15545)
!15548 = !DILocation(line: 0, scope: !14310, inlinedAt: !15547)
!15549 = !DILocation(line: 1002, column: 5, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15551, file: !2420, line: 998, column: 26)
!15551 = distinct !DILexicalBlock(scope: !15541, file: !2420, line: 998, column: 2)
!15552 = !DILocation(line: 1002, column: 20, scope: !15550)
!15553 = !DILocation(line: 1002, column: 3, scope: !15550)
!15554 = !DILocation(line: 1003, column: 3, scope: !15550)
!15555 = !DILocation(line: 0, scope: !14328, inlinedAt: !15556)
!15556 = distinct !DILocation(line: 998, column: 2, scope: !15551)
!15557 = !DILocation(line: 0, scope: !14336, inlinedAt: !15558)
!15558 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !15556)
!15559 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !15558)
!15560 = !DILocation(line: 1011, column: 2, scope: !15538)
!15561 = !DILocation(line: 1012, column: 1, scope: !15538)
!15562 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2420, file: !2420, line: 1014, type: !14609, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!15563 = !DILocation(line: 1028, column: 25, scope: !15562)
!15564 = !DILocation(line: 1028, column: 2, scope: !15562)
!15565 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2420, file: !2420, line: 1155, type: !15566, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15568)
!15566 = !DISubroutineType(types: !15567)
!15567 = !{!157, !2344, !2344}
!15568 = !{!15569, !15570, !15571, !15572, !15573}
!15569 = !DILocalVariable(name: "a", arg: 1, scope: !15565, file: !2420, line: 1155, type: !2344)
!15570 = !DILocalVariable(name: "b", arg: 2, scope: !15565, file: !2420, line: 1155, type: !2344)
!15571 = !DILocalVariable(name: "thread_a", scope: !15565, file: !2420, line: 1157, type: !2315)
!15572 = !DILocalVariable(name: "thread_b", scope: !15565, file: !2420, line: 1157, type: !2315)
!15573 = !DILocalVariable(name: "cmp", scope: !15565, file: !2420, line: 1158, type: !725)
!15574 = !DILocation(line: 0, scope: !15565)
!15575 = !DILocation(line: 1160, column: 13, scope: !15565)
!15576 = !DILocation(line: 1161, column: 13, scope: !15565)
!15577 = !DILocation(line: 1163, column: 8, scope: !15565)
!15578 = !DILocation(line: 1165, column: 10, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15565, file: !2420, line: 1165, column: 6)
!15580 = !DILocation(line: 1165, column: 6, scope: !15565)
!15581 = !DILocation(line: 1167, column: 17, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15579, file: !2420, line: 1167, column: 13)
!15583 = !DILocation(line: 1167, column: 13, scope: !15579)
!15584 = !DILocation(line: 1170, column: 25, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15582, file: !2420, line: 1169, column: 9)
!15586 = !DILocation(line: 1170, column: 52, scope: !15585)
!15587 = !DILocation(line: 1170, column: 35, scope: !15585)
!15588 = !DILocation(line: 1170, column: 3, scope: !15585)
!15589 = !DILocation(line: 0, scope: !15579)
!15590 = !DILocation(line: 1173, column: 1, scope: !15565)
!15591 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2420, file: !2420, line: 1175, type: !15592, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15607)
!15592 = !DISubroutineType(types: !15593)
!15593 = !{null, !15594, !2315}
!15594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15595, size: 32)
!15595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15596, line: 37, size: 128, elements: !15597)
!15596 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15597 = !{!15598, !15606}
!15598 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15595, file: !15596, line: 38, baseType: !15599, size: 96)
!15599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !404, line: 83, size: 96, elements: !15600)
!15600 = !{!15601, !15602, !15605}
!15601 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15599, file: !404, line: 84, baseType: !2344, size: 32)
!15602 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15599, file: !404, line: 85, baseType: !15603, size: 32, offset: 32)
!15603 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !404, line: 81, baseType: !15604)
!15604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15566, size: 32)
!15605 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15599, file: !404, line: 86, baseType: !103, size: 32, offset: 64)
!15606 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15595, file: !15596, line: 39, baseType: !103, size: 32, offset: 96)
!15607 = !{!15608, !15609, !15610, !15611, !15620}
!15608 = !DILocalVariable(name: "pq", arg: 1, scope: !15591, file: !2420, line: 1175, type: !15594)
!15609 = !DILocalVariable(name: "thread", arg: 2, scope: !15591, file: !2420, line: 1175, type: !2315)
!15610 = !DILocalVariable(name: "t", scope: !15591, file: !2420, line: 1177, type: !2315)
!15611 = !DILocalVariable(name: "__f", scope: !15612, file: !2420, line: 1190, type: !15615)
!15612 = distinct !DILexicalBlock(scope: !15613, file: !2420, line: 1190, column: 3)
!15613 = distinct !DILexicalBlock(scope: !15614, file: !2420, line: 1189, column: 27)
!15614 = distinct !DILexicalBlock(scope: !15591, file: !2420, line: 1189, column: 6)
!15615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !404, line: 155, size: 96, elements: !15616)
!15616 = !{!15617, !15618, !15619}
!15617 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15615, file: !404, line: 156, baseType: !2415, size: 32)
!15618 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15615, file: !404, line: 157, baseType: !267, size: 32, offset: 32)
!15619 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15615, file: !404, line: 158, baseType: !725, size: 32, offset: 64)
!15620 = !DILocalVariable(name: "n", scope: !15621, file: !2420, line: 1190, type: !2344)
!15621 = distinct !DILexicalBlock(scope: !15622, file: !2420, line: 1190, column: 3)
!15622 = distinct !DILexicalBlock(scope: !15612, file: !2420, line: 1190, column: 3)
!15623 = !DILocation(line: 0, scope: !15591)
!15624 = !DILocation(line: 1181, column: 31, scope: !15591)
!15625 = !DILocation(line: 1181, column: 45, scope: !15591)
!15626 = !DILocation(line: 1181, column: 15, scope: !15591)
!15627 = !DILocation(line: 1181, column: 25, scope: !15591)
!15628 = !DILocation(line: 1189, column: 11, scope: !15614)
!15629 = !DILocation(line: 1189, column: 7, scope: !15614)
!15630 = !DILocation(line: 1189, column: 6, scope: !15591)
!15631 = !DILocation(line: 1190, column: 3, scope: !15612)
!15632 = !DILocation(line: 1190, column: 3, scope: !15621)
!15633 = !DILocation(line: 0, scope: !15621)
!15634 = !DILocation(line: 1190, column: 3, scope: !15622)
!15635 = !DILocation(line: 1193, column: 2, scope: !15613)
!15636 = !DILocation(line: 1191, column: 42, scope: !15637)
!15637 = distinct !DILexicalBlock(scope: !15622, file: !2420, line: 1190, column: 54)
!15638 = !DILocation(line: 1191, column: 12, scope: !15637)
!15639 = !DILocation(line: 1191, column: 22, scope: !15637)
!15640 = distinct !{!15640, !15631, !15641}
!15641 = !DILocation(line: 1192, column: 3, scope: !15612)
!15642 = !DILocation(line: 1195, column: 17, scope: !15591)
!15643 = !DILocation(line: 1195, column: 37, scope: !15591)
!15644 = !DILocation(line: 1195, column: 2, scope: !15591)
!15645 = !DILocation(line: 1196, column: 1, scope: !15591)
!15646 = !DISubprogram(name: "z_rb_foreach_next", scope: !404, file: !404, line: 176, type: !15647, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15647 = !DISubroutineType(types: !15648)
!15648 = !{!2344, !15649, !15650}
!15649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15599, size: 32)
!15650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15615, size: 32)
!15651 = !DISubprogram(name: "rb_insert", scope: !404, file: !404, line: 105, type: !15652, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15652 = !DISubroutineType(types: !15653)
!15653 = !{null, !15649, !2344}
!15654 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2420, file: !2420, line: 1198, type: !15592, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15655)
!15655 = !{!15656, !15657}
!15656 = !DILocalVariable(name: "pq", arg: 1, scope: !15654, file: !2420, line: 1198, type: !15594)
!15657 = !DILocalVariable(name: "thread", arg: 2, scope: !15654, file: !2420, line: 1198, type: !2315)
!15658 = !DILocation(line: 0, scope: !15654)
!15659 = !DILocation(line: 1202, column: 17, scope: !15654)
!15660 = !DILocation(line: 1202, column: 37, scope: !15654)
!15661 = !DILocation(line: 1202, column: 2, scope: !15654)
!15662 = !DILocation(line: 1204, column: 16, scope: !15663)
!15663 = distinct !DILexicalBlock(scope: !15654, file: !2420, line: 1204, column: 6)
!15664 = !DILocation(line: 1204, column: 7, scope: !15663)
!15665 = !DILocation(line: 1204, column: 6, scope: !15654)
!15666 = !DILocation(line: 1205, column: 7, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15663, file: !2420, line: 1204, column: 22)
!15668 = !DILocation(line: 1205, column: 22, scope: !15667)
!15669 = !DILocation(line: 1206, column: 2, scope: !15667)
!15670 = !DILocation(line: 1207, column: 1, scope: !15654)
!15671 = !DISubprogram(name: "rb_remove", scope: !404, file: !404, line: 110, type: !15652, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15672 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2420, file: !2420, line: 1209, type: !15673, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15675)
!15673 = !DISubroutineType(types: !15674)
!15674 = !{!2315, !15594}
!15675 = !{!15676, !15677, !15678}
!15676 = !DILocalVariable(name: "pq", arg: 1, scope: !15672, file: !2420, line: 1209, type: !15594)
!15677 = !DILocalVariable(name: "thread", scope: !15672, file: !2420, line: 1211, type: !2315)
!15678 = !DILocalVariable(name: "n", scope: !15672, file: !2420, line: 1212, type: !2344)
!15679 = !DILocation(line: 0, scope: !15672)
!15680 = !DILocation(line: 1212, column: 37, scope: !15672)
!15681 = !DILocation(line: 1212, column: 21, scope: !15672)
!15682 = !DILocation(line: 1217, column: 2, scope: !15672)
!15683 = distinct !DISubprogram(name: "rb_get_min", scope: !404, file: !404, line: 115, type: !15684, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15686)
!15684 = !DISubroutineType(types: !15685)
!15685 = !{!2344, !15649}
!15686 = !{!15687}
!15687 = !DILocalVariable(name: "tree", arg: 1, scope: !15683, file: !404, line: 115, type: !15649)
!15688 = !DILocation(line: 0, scope: !15683)
!15689 = !DILocation(line: 117, column: 9, scope: !15683)
!15690 = !DILocation(line: 117, column: 2, scope: !15683)
!15691 = !DISubprogram(name: "z_rb_get_minmax", scope: !404, file: !404, line: 100, type: !15692, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15692 = !DISubroutineType(types: !15693)
!15693 = !{!2344, !15649, !154}
!15694 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2420, file: !2420, line: 1246, type: !15695, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15705)
!15695 = !DISubroutineType(types: !15696)
!15696 = !{!2315, !15697}
!15697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15698, size: 32)
!15698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15596, line: 53, size: 2080, elements: !15699)
!15699 = !{!15700, !15704}
!15700 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15698, file: !15596, line: 54, baseType: !15701, size: 2048)
!15701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2351, size: 2048, elements: !15702)
!15702 = !{!15703}
!15703 = !DISubrange(count: 32)
!15704 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15698, file: !15596, line: 55, baseType: !32, size: 32, offset: 2048)
!15705 = !{!15706, !15707, !15708, !15709}
!15706 = !DILocalVariable(name: "pq", arg: 1, scope: !15694, file: !2420, line: 1246, type: !15697)
!15707 = !DILocalVariable(name: "thread", scope: !15694, file: !2420, line: 1252, type: !2315)
!15708 = !DILocalVariable(name: "l", scope: !15694, file: !2420, line: 1253, type: !14504)
!15709 = !DILocalVariable(name: "n", scope: !15694, file: !2420, line: 1254, type: !2416)
!15710 = !DILocation(line: 0, scope: !15694)
!15711 = !DILocation(line: 1248, column: 11, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15694, file: !2420, line: 1248, column: 6)
!15713 = !DILocation(line: 1248, column: 7, scope: !15712)
!15714 = !DILocation(line: 1248, column: 6, scope: !15694)
!15715 = !DILocation(line: 1253, column: 31, scope: !15694)
!15716 = !DILocation(line: 1253, column: 20, scope: !15694)
!15717 = !DILocation(line: 1254, column: 19, scope: !15694)
!15718 = !DILocation(line: 1260, column: 1, scope: !15694)
!15719 = distinct !DISubprogram(name: "z_unpend_all", scope: !2420, file: !2420, line: 1262, type: !15720, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15722)
!15720 = !DISubroutineType(types: !15721)
!15721 = !{!103, !2346}
!15722 = !{!15723, !15724, !15725}
!15723 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15719, file: !2420, line: 1262, type: !2346)
!15724 = !DILocalVariable(name: "need_sched", scope: !15719, file: !2420, line: 1264, type: !103)
!15725 = !DILocalVariable(name: "thread", scope: !15719, file: !2420, line: 1265, type: !2315)
!15726 = !DILocation(line: 0, scope: !15719)
!15727 = !DILocation(line: 1267, column: 19, scope: !15719)
!15728 = !DILocation(line: 1267, column: 41, scope: !15719)
!15729 = !DILocation(line: 1267, column: 2, scope: !15719)
!15730 = !DILocation(line: 1268, column: 3, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15719, file: !2420, line: 1267, column: 50)
!15732 = !DILocation(line: 1269, column: 3, scope: !15731)
!15733 = distinct !{!15733, !15729, !15734}
!15734 = !DILocation(line: 1271, column: 2, scope: !15719)
!15735 = !DILocation(line: 1273, column: 2, scope: !15719)
!15736 = distinct !DISubprogram(name: "z_waitq_head", scope: !13130, file: !13130, line: 52, type: !15352, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15737)
!15737 = !{!15738}
!15738 = !DILocalVariable(name: "w", arg: 1, scope: !15736, file: !13130, line: 52, type: !2346)
!15739 = !DILocation(line: 0, scope: !15736)
!15740 = !DILocation(line: 54, column: 52, scope: !15736)
!15741 = !DILocation(line: 54, column: 28, scope: !15736)
!15742 = !DILocation(line: 54, column: 9, scope: !15736)
!15743 = !DILocation(line: 54, column: 2, scope: !15736)
!15744 = distinct !DISubprogram(name: "init_ready_q", scope: !2420, file: !2420, line: 1276, type: !15745, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15752)
!15745 = !DISubroutineType(types: !15746)
!15746 = !{null, !15747}
!15747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15748, size: 32)
!15748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !15749)
!15749 = !{!15750, !15751}
!15750 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15748, file: !320, line: 86, baseType: !2315, size: 32)
!15751 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15748, file: !320, line: 90, baseType: !2351, size: 64, offset: 32)
!15752 = !{!15753}
!15753 = !DILocalVariable(name: "rq", arg: 1, scope: !15744, file: !2420, line: 1276, type: !15747)
!15754 = !DILocation(line: 0, scope: !15744)
!15755 = !DILocation(line: 1289, column: 22, scope: !15744)
!15756 = !DILocation(line: 1289, column: 2, scope: !15744)
!15757 = !DILocation(line: 1291, column: 1, scope: !15744)
!15758 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !15759, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15761)
!15759 = !DISubroutineType(types: !15760)
!15760 = !{null, !14504}
!15761 = !{!15762}
!15762 = !DILocalVariable(name: "list", arg: 1, scope: !15758, file: !325, line: 197, type: !14504)
!15763 = !DILocation(line: 0, scope: !15758)
!15764 = !DILocation(line: 199, column: 8, scope: !15758)
!15765 = !DILocation(line: 199, column: 13, scope: !15758)
!15766 = !DILocation(line: 200, column: 8, scope: !15758)
!15767 = !DILocation(line: 200, column: 13, scope: !15758)
!15768 = !DILocation(line: 201, column: 1, scope: !15758)
!15769 = distinct !DISubprogram(name: "z_sched_init", scope: !2420, file: !2420, line: 1293, type: !3157, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!15770 = !DILocation(line: 1302, column: 2, scope: !15769)
!15771 = !DILocation(line: 1306, column: 2, scope: !15769)
!15772 = !DILocation(line: 1309, column: 1, scope: !15769)
!15773 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2420, file: !2420, line: 1311, type: !15774, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15777)
!15774 = !DISubroutineType(types: !15775)
!15775 = !{!103, !15776}
!15776 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2315)
!15777 = !{!15778}
!15778 = !DILocalVariable(name: "thread", arg: 1, scope: !15773, file: !2420, line: 1311, type: !15776)
!15779 = !DILocation(line: 0, scope: !15773)
!15780 = !DILocation(line: 1313, column: 22, scope: !15773)
!15781 = !DILocation(line: 1313, column: 9, scope: !15773)
!15782 = !DILocation(line: 1313, column: 2, scope: !15773)
!15783 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2420, file: !2420, line: 1325, type: !15784, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15786)
!15784 = !DISubroutineType(types: !15785)
!15785 = !{null, !15776, !103}
!15786 = !{!15787, !15788, !15789}
!15787 = !DILocalVariable(name: "thread", arg: 1, scope: !15783, file: !2420, line: 1325, type: !15776)
!15788 = !DILocalVariable(name: "prio", arg: 2, scope: !15783, file: !2420, line: 1325, type: !103)
!15789 = !DILocalVariable(name: "th", scope: !15783, file: !2420, line: 1334, type: !2315)
!15790 = !DILocation(line: 0, scope: !15783)
!15791 = !DILocation(line: 1336, column: 2, scope: !15783)
!15792 = !DILocation(line: 1337, column: 1, scope: !15783)
!15793 = distinct !DISubprogram(name: "k_can_yield", scope: !2420, file: !2420, line: 1384, type: !6714, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!15794 = !DILocation(line: 1386, column: 11, scope: !15793)
!15795 = !DILocation(line: 1386, column: 29, scope: !15793)
!15796 = !DILocation(line: 1386, column: 32, scope: !15793)
!15797 = !DILocation(line: 1386, column: 46, scope: !15793)
!15798 = !DILocation(line: 1387, column: 28, scope: !15793)
!15799 = !DILocation(line: 1387, column: 4, scope: !15793)
!15800 = !DILocation(line: 1386, column: 2, scope: !15793)
!15801 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !296, file: !296, line: 989, type: !6714, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!15802 = !DILocation(line: 993, column: 10, scope: !15801)
!15803 = !DILocation(line: 993, column: 2, scope: !15801)
!15804 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2420, file: !2420, line: 1390, type: !3157, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15805)
!15805 = !{!15806}
!15806 = !DILocalVariable(name: "key", scope: !15804, file: !2420, line: 1396, type: !14293)
!15807 = !DILocation(line: 0, scope: !14301, inlinedAt: !15808)
!15808 = distinct !DILocation(line: 1396, column: 25, scope: !15804)
!15809 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15810)
!15810 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15808)
!15811 = !DILocation(line: 0, scope: !14310, inlinedAt: !15810)
!15812 = !DILocation(line: 0, scope: !15804)
!15813 = !DILocation(line: 1400, column: 18, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15815, file: !2420, line: 1399, column: 36)
!15815 = distinct !DILexicalBlock(scope: !15804, file: !2420, line: 1398, column: 6)
!15816 = !DILocation(line: 0, scope: !14470, inlinedAt: !15817)
!15817 = distinct !DILocation(line: 1400, column: 3, scope: !15814)
!15818 = !DILocation(line: 266, column: 15, scope: !14470, inlinedAt: !15817)
!15819 = !DILocation(line: 266, column: 28, scope: !14470, inlinedAt: !15817)
!15820 = !DILocation(line: 0, scope: !14478, inlinedAt: !15821)
!15821 = distinct !DILocation(line: 268, column: 3, scope: !14482, inlinedAt: !15817)
!15822 = !DILocation(line: 234, column: 2, scope: !14478, inlinedAt: !15821)
!15823 = !DILocation(line: 1402, column: 15, scope: !15804)
!15824 = !DILocation(line: 0, scope: !14487, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 1402, column: 2, scope: !15804)
!15826 = !DILocation(line: 252, column: 15, scope: !14487, inlinedAt: !15825)
!15827 = !DILocation(line: 252, column: 28, scope: !14487, inlinedAt: !15825)
!15828 = !DILocation(line: 0, scope: !14494, inlinedAt: !15829)
!15829 = distinct !DILocation(line: 254, column: 3, scope: !14498, inlinedAt: !15825)
!15830 = !DILocation(line: 0, scope: !14501, inlinedAt: !15831)
!15831 = distinct !DILocation(line: 229, column: 2, scope: !14494, inlinedAt: !15829)
!15832 = !DILocation(line: 188, column: 2, scope: !14511, inlinedAt: !15831)
!15833 = !DILocation(line: 188, column: 2, scope: !14513, inlinedAt: !15831)
!15834 = !DILocation(line: 0, scope: !14511, inlinedAt: !15831)
!15835 = !DILocation(line: 189, column: 7, scope: !14516, inlinedAt: !15831)
!15836 = !DILocation(line: 189, column: 35, scope: !14516, inlinedAt: !15831)
!15837 = !DILocation(line: 189, column: 7, scope: !14517, inlinedAt: !15831)
!15838 = !DILocation(line: 191, column: 21, scope: !14521, inlinedAt: !15831)
!15839 = !DILocation(line: 190, column: 4, scope: !14521, inlinedAt: !15831)
!15840 = !DILocation(line: 192, column: 4, scope: !14521, inlinedAt: !15831)
!15841 = distinct !{!15841, !15832, !15842}
!15842 = !DILocation(line: 194, column: 2, scope: !14511, inlinedAt: !15831)
!15843 = !DILocation(line: 196, column: 37, scope: !14501, inlinedAt: !15831)
!15844 = !DILocation(line: 196, column: 2, scope: !14501, inlinedAt: !15831)
!15845 = !DILocation(line: 197, column: 1, scope: !14501, inlinedAt: !15831)
!15846 = !DILocation(line: 1403, column: 2, scope: !15804)
!15847 = !DILocation(line: 0, scope: !14912, inlinedAt: !15848)
!15848 = distinct !DILocation(line: 1404, column: 2, scope: !15804)
!15849 = !DILocation(line: 196, column: 9, scope: !14912, inlinedAt: !15848)
!15850 = !DILocation(line: 1405, column: 1, scope: !15804)
!15851 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2420, file: !2420, line: 1459, type: !15852, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15854)
!15852 = !DISubroutineType(types: !15853)
!15853 = !{!725, !15092}
!15854 = !{!15855, !15856, !15857}
!15855 = !DILocalVariable(name: "timeout", arg: 1, scope: !15851, file: !2420, line: 1459, type: !15092)
!15856 = !DILocalVariable(name: "ticks", scope: !15851, file: !2420, line: 1461, type: !200)
!15857 = !DILocalVariable(name: "ret", scope: !15851, file: !2420, line: 1480, type: !725)
!15858 = !DILocation(line: 0, scope: !15851)
!15859 = !DILocation(line: 1468, column: 6, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15851, file: !2420, line: 1468, column: 6)
!15861 = !DILocation(line: 1468, column: 6, scope: !15851)
!15862 = !DILocation(line: 1469, column: 20, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15860, file: !2420, line: 1468, column: 40)
!15864 = !DILocation(line: 1469, column: 3, scope: !15863)
!15865 = !DILocation(line: 1473, column: 3, scope: !15863)
!15866 = !DILocation(line: 1478, column: 10, scope: !15851)
!15867 = !DILocation(line: 1480, column: 16, scope: !15851)
!15868 = !DILocation(line: 1485, column: 1, scope: !15851)
!15869 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3593, file: !3593, line: 310, type: !15870, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15872)
!15870 = !DISubroutineType(types: !15871)
!15871 = !{null, !15776}
!15872 = !{!15873}
!15873 = !DILocalVariable(name: "thread", arg: 1, scope: !15869, file: !3593, line: 310, type: !15776)
!15874 = !DILocation(line: 0, scope: !15869)
!15875 = !DILocation(line: 319, column: 2, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15869, file: !3593, line: 319, column: 2)
!15877 = !{i64 2154107626}
!15878 = !DILocation(line: 320, column: 2, scope: !15869)
!15879 = !DILocation(line: 321, column: 1, scope: !15869)
!15880 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2420, file: !2420, line: 1415, type: !15881, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15883)
!15881 = !DISubroutineType(types: !15882)
!15882 = !{!725, !200}
!15883 = !{!15884, !15885, !15886, !15887}
!15884 = !DILocalVariable(name: "ticks", arg: 1, scope: !15880, file: !2420, line: 1415, type: !200)
!15885 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15880, file: !2420, line: 1418, type: !121)
!15886 = !DILocalVariable(name: "timeout", scope: !15880, file: !2420, line: 1430, type: !15092)
!15887 = !DILocalVariable(name: "key", scope: !15880, file: !2420, line: 1437, type: !14293)
!15888 = !DILocation(line: 0, scope: !15880)
!15889 = !DILocation(line: 1425, column: 12, scope: !15890)
!15890 = distinct !DILexicalBlock(scope: !15880, file: !2420, line: 1425, column: 6)
!15891 = !DILocation(line: 1425, column: 6, scope: !15880)
!15892 = !DILocation(line: 1426, column: 3, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15890, file: !2420, line: 1425, column: 18)
!15894 = !DILocation(line: 1427, column: 3, scope: !15893)
!15895 = !DILocation(line: 1431, column: 24, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15880, file: !2420, line: 1431, column: 6)
!15897 = !DILocation(line: 1431, column: 6, scope: !15880)
!15898 = !DILocation(line: 1432, column: 35, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15896, file: !2420, line: 1431, column: 30)
!15900 = !DILocation(line: 1432, column: 27, scope: !15899)
!15901 = !DILocation(line: 1433, column: 2, scope: !15899)
!15902 = !DILocation(line: 1434, column: 27, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15896, file: !2420, line: 1433, column: 9)
!15904 = !DILocation(line: 0, scope: !15896)
!15905 = !DILocation(line: 0, scope: !14301, inlinedAt: !15906)
!15906 = distinct !DILocation(line: 1437, column: 25, scope: !15880)
!15907 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !15906)
!15909 = !DILocation(line: 0, scope: !14310, inlinedAt: !15908)
!15910 = !DILocation(line: 1440, column: 20, scope: !15880)
!15911 = !DILocation(line: 1440, column: 18, scope: !15880)
!15912 = !DILocation(line: 1442, column: 2, scope: !15880)
!15913 = !DILocation(line: 1443, column: 23, scope: !15880)
!15914 = !DILocation(line: 1443, column: 2, scope: !15880)
!15915 = !DILocation(line: 1444, column: 29, scope: !15880)
!15916 = !DILocation(line: 1444, column: 2, scope: !15880)
!15917 = !DILocation(line: 0, scope: !14912, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 1446, column: 8, scope: !15880)
!15919 = !DILocation(line: 196, column: 9, scope: !14912, inlinedAt: !15918)
!15920 = !DILocation(line: 1450, column: 10, scope: !15880)
!15921 = !DILocation(line: 1450, column: 45, scope: !15880)
!15922 = !DILocation(line: 1450, column: 43, scope: !15880)
!15923 = !DILocation(line: 1451, column: 6, scope: !15880)
!15924 = !DILocation(line: 1457, column: 1, scope: !15880)
!15925 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13365, file: !13365, line: 1103, type: !13366, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15926)
!15926 = !{!15927}
!15927 = !DILocalVariable(name: "t", arg: 1, scope: !15925, file: !13365, line: 1103, type: !1572)
!15928 = !DILocation(line: 0, scope: !15925)
!15929 = !DILocation(line: 0, scope: !14348, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 1106, column: 9, scope: !15925)
!15931 = !DILocation(line: 139, column: 13, scope: !15932, inlinedAt: !15930)
!15932 = distinct !DILexicalBlock(scope: !15933, file: !13365, line: 138, column: 10)
!15933 = distinct !DILexicalBlock(scope: !15934, file: !13365, line: 136, column: 7)
!15934 = distinct !DILexicalBlock(scope: !14369, file: !13365, line: 134, column: 17)
!15935 = !DILocation(line: 1106, column: 2, scope: !15925)
!15936 = distinct !DISubprogram(name: "k_yield", scope: !3593, file: !3593, line: 140, type: !3157, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!15937 = !DILocation(line: 148, column: 2, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15936, file: !3593, line: 148, column: 2)
!15939 = !{i64 2154106946}
!15940 = !DILocation(line: 149, column: 2, scope: !15936)
!15941 = !DILocation(line: 150, column: 1, scope: !15936)
!15942 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2420, file: !2420, line: 1495, type: !15943, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15945)
!15943 = !DISubroutineType(types: !15944)
!15944 = !{!725, !103}
!15945 = !{!15946, !15947}
!15946 = !DILocalVariable(name: "us", arg: 1, scope: !15942, file: !2420, line: 1495, type: !103)
!15947 = !DILocalVariable(name: "ticks", scope: !15942, file: !2420, line: 1497, type: !725)
!15948 = !DILocation(line: 0, scope: !15942)
!15949 = !DILocation(line: 1501, column: 31, scope: !15942)
!15950 = !DILocation(line: 1501, column: 10, scope: !15942)
!15951 = !DILocation(line: 1502, column: 23, scope: !15942)
!15952 = !DILocation(line: 1502, column: 10, scope: !15942)
!15953 = !DILocation(line: 1506, column: 31, scope: !15942)
!15954 = !DILocation(line: 1506, column: 9, scope: !15942)
!15955 = !DILocation(line: 1506, column: 2, scope: !15942)
!15956 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13365, file: !13365, line: 571, type: !13366, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15957)
!15957 = !{!15958}
!15958 = !DILocalVariable(name: "t", arg: 1, scope: !15956, file: !13365, line: 571, type: !1572)
!15959 = !DILocation(line: 0, scope: !15956)
!15960 = !DILocation(line: 0, scope: !14348, inlinedAt: !15961)
!15961 = distinct !DILocation(line: 574, column: 9, scope: !15956)
!15962 = !DILocation(line: 135, column: 5, scope: !15934, inlinedAt: !15961)
!15963 = !DILocation(line: 139, column: 13, scope: !15932, inlinedAt: !15961)
!15964 = !DILocation(line: 574, column: 2, scope: !15956)
!15965 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13365, file: !13365, line: 1187, type: !13366, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15966)
!15966 = !{!15967}
!15967 = !DILocalVariable(name: "t", arg: 1, scope: !15965, file: !13365, line: 1187, type: !1572)
!15968 = !DILocation(line: 0, scope: !15965)
!15969 = !DILocation(line: 0, scope: !14348, inlinedAt: !15970)
!15970 = distinct !DILocation(line: 1190, column: 9, scope: !15965)
!15971 = !DILocation(line: 145, column: 13, scope: !15972, inlinedAt: !15970)
!15972 = distinct !DILexicalBlock(scope: !14366, file: !13365, line: 144, column: 10)
!15973 = !DILocation(line: 1190, column: 2, scope: !15965)
!15974 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2420, file: !2420, line: 1517, type: !15870, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !15975)
!15975 = !{!15976}
!15976 = !DILocalVariable(name: "thread", arg: 1, scope: !15974, file: !2420, line: 1517, type: !15776)
!15977 = !DILocation(line: 0, scope: !15974)
!15978 = !DILocation(line: 1521, column: 6, scope: !15979)
!15979 = distinct !DILexicalBlock(scope: !15974, file: !2420, line: 1521, column: 6)
!15980 = !DILocation(line: 1521, column: 6, scope: !15974)
!15981 = !DILocation(line: 1525, column: 6, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15974, file: !2420, line: 1525, column: 6)
!15983 = !DILocation(line: 1525, column: 37, scope: !15982)
!15984 = !DILocation(line: 1525, column: 6, scope: !15974)
!15985 = !DILocation(line: 1527, column: 20, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15987, file: !2420, line: 1527, column: 7)
!15987 = distinct !DILexicalBlock(scope: !15982, file: !2420, line: 1525, column: 42)
!15988 = !DILocation(line: 1527, column: 33, scope: !15986)
!15989 = !DILocation(line: 1527, column: 7, scope: !15987)
!15990 = !DILocation(line: 1532, column: 2, scope: !15974)
!15991 = !DILocation(line: 1533, column: 2, scope: !15974)
!15992 = !DILocation(line: 1031, column: 3, scope: !14945, inlinedAt: !15993)
!15993 = distinct !DILocation(line: 48, column: 10, scope: !14949, inlinedAt: !15994)
!15994 = distinct !DILocation(line: 1537, column: 7, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15974, file: !2420, line: 1537, column: 6)
!15996 = !DILocation(line: 0, scope: !14945, inlinedAt: !15993)
!15997 = !DILocation(line: 48, column: 9, scope: !14949, inlinedAt: !15994)
!15998 = !DILocation(line: 1537, column: 6, scope: !15974)
!15999 = !DILocation(line: 1538, column: 3, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15995, file: !2420, line: 1537, column: 25)
!16001 = !DILocation(line: 1539, column: 2, scope: !16000)
!16002 = !DILocation(line: 1540, column: 1, scope: !15974)
!16003 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12806, file: !12806, line: 101, type: !14419, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !16004)
!16004 = !{!16005}
!16005 = !DILocalVariable(name: "thread", arg: 1, scope: !16003, file: !12806, line: 101, type: !2315)
!16006 = !DILocation(line: 0, scope: !16003)
!16007 = !DILocation(line: 103, column: 23, scope: !16003)
!16008 = !DILocation(line: 103, column: 36, scope: !16003)
!16009 = !DILocation(line: 103, column: 55, scope: !16003)
!16010 = !DILocation(line: 103, column: 2, scope: !16003)
!16011 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2420, file: !2420, line: 1567, type: !16012, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !16014)
!16012 = !DISubroutineType(types: !16013)
!16013 = !{!15776}
!16014 = !{!16015}
!16015 = !DILocalVariable(name: "ret", scope: !16011, file: !2420, line: 1577, type: !15776)
!16016 = !DILocation(line: 1577, column: 30, scope: !16011)
!16017 = !DILocation(line: 0, scope: !16011)
!16018 = !DILocation(line: 1582, column: 2, scope: !16011)
!16019 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2420, file: !2420, line: 1593, type: !6988, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!16020 = !DILocation(line: 1031, column: 3, scope: !14945, inlinedAt: !16021)
!16021 = distinct !DILocation(line: 48, column: 10, scope: !14949, inlinedAt: !16022)
!16022 = distinct !DILocation(line: 1595, column: 10, scope: !16019)
!16023 = !DILocation(line: 0, scope: !14945, inlinedAt: !16021)
!16024 = !DILocation(line: 48, column: 9, scope: !14949, inlinedAt: !16022)
!16025 = !DILocation(line: 1595, column: 27, scope: !16019)
!16026 = !DILocation(line: 1595, column: 41, scope: !16019)
!16027 = !DILocation(line: 1595, column: 30, scope: !16019)
!16028 = !DILocation(line: 1595, column: 2, scope: !16019)
!16029 = distinct !DISubprogram(name: "z_thread_abort", scope: !2420, file: !2420, line: 1725, type: !14259, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !16030)
!16030 = !{!16031, !16032}
!16031 = !DILocalVariable(name: "thread", arg: 1, scope: !16029, file: !2420, line: 1725, type: !2315)
!16032 = !DILocalVariable(name: "key", scope: !16029, file: !2420, line: 1727, type: !14293)
!16033 = !DILocation(line: 0, scope: !16029)
!16034 = !DILocation(line: 0, scope: !14301, inlinedAt: !16035)
!16035 = distinct !DILocation(line: 1727, column: 25, scope: !16029)
!16036 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !16037)
!16037 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !16035)
!16038 = !DILocation(line: 0, scope: !14310, inlinedAt: !16037)
!16039 = !DILocation(line: 1729, column: 20, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16029, file: !2420, line: 1729, column: 6)
!16041 = !DILocation(line: 1729, column: 33, scope: !16040)
!16042 = !DILocation(line: 1729, column: 48, scope: !16040)
!16043 = !DILocation(line: 1729, column: 6, scope: !16029)
!16044 = !DILocation(line: 0, scope: !14328, inlinedAt: !16045)
!16045 = distinct !DILocation(line: 1730, column: 3, scope: !16046)
!16046 = distinct !DILexicalBlock(scope: !16040, file: !2420, line: 1729, column: 54)
!16047 = !DILocation(line: 0, scope: !14336, inlinedAt: !16048)
!16048 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !16045)
!16049 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !16048)
!16050 = !DILocation(line: 1732, column: 3, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16046, file: !2420, line: 1732, column: 3)
!16052 = !{i64 2154844356, i64 2154844372, i64 2154844398, i64 2154844426, i64 2154844446}
!16053 = !DILocation(line: 1733, column: 3, scope: !16046)
!16054 = !DILocation(line: 1736, column: 20, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16029, file: !2420, line: 1736, column: 6)
!16056 = !DILocation(line: 1736, column: 33, scope: !16055)
!16057 = !DILocation(line: 1736, column: 49, scope: !16055)
!16058 = !DILocation(line: 1736, column: 6, scope: !16029)
!16059 = !DILocation(line: 0, scope: !14328, inlinedAt: !16060)
!16060 = distinct !DILocation(line: 1737, column: 3, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16055, file: !2420, line: 1736, column: 56)
!16062 = !DILocation(line: 0, scope: !14336, inlinedAt: !16063)
!16063 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !16060)
!16064 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !16063)
!16065 = !DILocation(line: 1738, column: 3, scope: !16061)
!16066 = !DILocation(line: 1775, column: 2, scope: !16029)
!16067 = !DILocation(line: 1776, column: 16, scope: !16068)
!16068 = distinct !DILexicalBlock(scope: !16029, file: !2420, line: 1776, column: 6)
!16069 = !DILocation(line: 1776, column: 13, scope: !16068)
!16070 = !DILocation(line: 1776, column: 25, scope: !16068)
!16071 = !DILocation(line: 1031, column: 3, scope: !14945, inlinedAt: !16072)
!16072 = distinct !DILocation(line: 48, column: 10, scope: !14949, inlinedAt: !16073)
!16073 = distinct !DILocation(line: 1776, column: 29, scope: !16068)
!16074 = !DILocation(line: 0, scope: !14945, inlinedAt: !16072)
!16075 = !DILocation(line: 48, column: 9, scope: !14949, inlinedAt: !16073)
!16076 = !DILocation(line: 1776, column: 6, scope: !16029)
!16077 = !DILocation(line: 0, scope: !14912, inlinedAt: !16078)
!16078 = distinct !DILocation(line: 1777, column: 3, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16068, file: !2420, line: 1776, column: 47)
!16080 = !DILocation(line: 196, column: 9, scope: !14912, inlinedAt: !16078)
!16081 = !DILocation(line: 1779, column: 2, scope: !16079)
!16082 = !DILocation(line: 0, scope: !14328, inlinedAt: !16083)
!16083 = distinct !DILocation(line: 1780, column: 2, scope: !16029)
!16084 = !DILocation(line: 0, scope: !14336, inlinedAt: !16085)
!16085 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !16083)
!16086 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !16085)
!16087 = !DILocation(line: 1781, column: 1, scope: !16029)
!16088 = distinct !DISubprogram(name: "end_thread", scope: !2420, file: !2420, line: 1690, type: !14259, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !16089)
!16089 = !{!16090}
!16090 = !DILocalVariable(name: "thread", arg: 1, scope: !16088, file: !2420, line: 1690, type: !2315)
!16091 = !DILocation(line: 0, scope: !16088)
!16092 = !DILocation(line: 1695, column: 20, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16088, file: !2420, line: 1695, column: 6)
!16094 = !DILocation(line: 1695, column: 33, scope: !16093)
!16095 = !DILocation(line: 1695, column: 49, scope: !16093)
!16096 = !DILocation(line: 1695, column: 6, scope: !16088)
!16097 = !DILocation(line: 1697, column: 29, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16093, file: !2420, line: 1695, column: 56)
!16099 = !DILocation(line: 1698, column: 7, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16098, file: !2420, line: 1698, column: 7)
!16101 = !DILocation(line: 1698, column: 7, scope: !16098)
!16102 = !DILocation(line: 0, scope: !14470, inlinedAt: !16103)
!16103 = distinct !DILocation(line: 1699, column: 4, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16100, file: !2420, line: 1698, column: 35)
!16105 = !DILocation(line: 266, column: 28, scope: !14470, inlinedAt: !16103)
!16106 = !DILocation(line: 0, scope: !14478, inlinedAt: !16107)
!16107 = distinct !DILocation(line: 268, column: 3, scope: !14482, inlinedAt: !16103)
!16108 = !DILocation(line: 234, column: 2, scope: !14478, inlinedAt: !16107)
!16109 = !DILocation(line: 1700, column: 3, scope: !16104)
!16110 = !DILocation(line: 1701, column: 20, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16098, file: !2420, line: 1701, column: 7)
!16112 = !DILocation(line: 1701, column: 30, scope: !16111)
!16113 = !DILocation(line: 1701, column: 7, scope: !16098)
!16114 = !DILocation(line: 1702, column: 4, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !16111, file: !2420, line: 1701, column: 39)
!16116 = !DILocation(line: 1703, column: 3, scope: !16115)
!16117 = !DILocation(line: 1704, column: 9, scope: !16098)
!16118 = !DILocation(line: 1705, column: 23, scope: !16098)
!16119 = !DILocation(line: 1705, column: 3, scope: !16098)
!16120 = !DILocation(line: 1706, column: 3, scope: !16098)
!16121 = !DILocation(line: 1722, column: 2, scope: !16098)
!16122 = !DILocation(line: 1723, column: 1, scope: !16088)
!16123 = distinct !DISubprogram(name: "unpend_all", scope: !2420, file: !2420, line: 1674, type: !16124, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !16126)
!16124 = !DISubroutineType(types: !16125)
!16125 = !{null, !2346}
!16126 = !{!16127, !16128}
!16127 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16123, file: !2420, line: 1674, type: !2346)
!16128 = !DILocalVariable(name: "thread", scope: !16123, file: !2420, line: 1676, type: !2315)
!16129 = !DILocation(line: 0, scope: !16123)
!16130 = !DILocation(line: 1678, column: 19, scope: !16123)
!16131 = !DILocation(line: 1678, column: 41, scope: !16123)
!16132 = !DILocation(line: 1678, column: 2, scope: !16123)
!16133 = !DILocation(line: 1679, column: 3, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16123, file: !2420, line: 1678, column: 50)
!16135 = !DILocation(line: 1680, column: 9, scope: !16134)
!16136 = !DILocalVariable(name: "thread", arg: 1, scope: !16137, file: !12826, line: 65, type: !2315)
!16137 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12826, file: !12826, line: 65, type: !16138, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !16140)
!16138 = !DISubroutineType(types: !16139)
!16139 = !{null, !2315, !32}
!16140 = !{!16136, !16141}
!16141 = !DILocalVariable(name: "value", arg: 2, scope: !16137, file: !12826, line: 65, type: !32)
!16142 = !DILocation(line: 0, scope: !16137, inlinedAt: !16143)
!16143 = distinct !DILocation(line: 1681, column: 3, scope: !16134)
!16144 = !DILocation(line: 67, column: 15, scope: !16137, inlinedAt: !16143)
!16145 = !DILocation(line: 67, column: 33, scope: !16137, inlinedAt: !16143)
!16146 = !DILocation(line: 1682, column: 3, scope: !16134)
!16147 = distinct !{!16147, !16132, !16148}
!16148 = !DILocation(line: 1683, column: 2, scope: !16123)
!16149 = !DILocation(line: 1684, column: 1, scope: !16123)
!16150 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2420, file: !2420, line: 1794, type: !16151, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !16153)
!16151 = !DISubroutineType(types: !16152)
!16152 = !{!103, !2315, !15092}
!16153 = !{!16154, !16155, !16156, !16157}
!16154 = !DILocalVariable(name: "thread", arg: 1, scope: !16150, file: !2420, line: 1794, type: !2315)
!16155 = !DILocalVariable(name: "timeout", arg: 2, scope: !16150, file: !2420, line: 1794, type: !15092)
!16156 = !DILocalVariable(name: "key", scope: !16150, file: !2420, line: 1796, type: !14293)
!16157 = !DILocalVariable(name: "ret", scope: !16150, file: !2420, line: 1797, type: !103)
!16158 = !DILocation(line: 0, scope: !16150)
!16159 = !DILocation(line: 0, scope: !14301, inlinedAt: !16160)
!16160 = distinct !DILocation(line: 1796, column: 25, scope: !16150)
!16161 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !16162)
!16162 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !16160)
!16163 = !DILocation(line: 0, scope: !14310, inlinedAt: !16162)
!16164 = !DILocation(line: 1801, column: 20, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16150, file: !2420, line: 1801, column: 6)
!16166 = !DILocation(line: 1801, column: 33, scope: !16165)
!16167 = !DILocation(line: 1801, column: 49, scope: !16165)
!16168 = !DILocation(line: 1801, column: 6, scope: !16150)
!16169 = !DILocation(line: 1803, column: 13, scope: !16170)
!16170 = distinct !DILexicalBlock(scope: !16165, file: !2420, line: 1803, column: 13)
!16171 = !DILocation(line: 1803, column: 13, scope: !16165)
!16172 = !DILocation(line: 1805, column: 24, scope: !16173)
!16173 = distinct !DILexicalBlock(scope: !16170, file: !2420, line: 1805, column: 13)
!16174 = !DILocation(line: 1805, column: 21, scope: !16173)
!16175 = !DILocation(line: 1805, column: 34, scope: !16173)
!16176 = !DILocation(line: 1806, column: 20, scope: !16173)
!16177 = !DILocation(line: 1806, column: 44, scope: !16173)
!16178 = !DILocation(line: 1806, column: 30, scope: !16173)
!16179 = !DILocation(line: 1805, column: 13, scope: !16170)
!16180 = !DILocation(line: 1810, column: 42, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16173, file: !2420, line: 1808, column: 9)
!16182 = !DILocation(line: 1810, column: 3, scope: !16181)
!16183 = !DILocation(line: 1811, column: 22, scope: !16181)
!16184 = !DILocation(line: 1811, column: 3, scope: !16181)
!16185 = !DILocation(line: 0, scope: !14912, inlinedAt: !16186)
!16186 = distinct !DILocation(line: 1814, column: 9, scope: !16181)
!16187 = !DILocation(line: 196, column: 9, scope: !14912, inlinedAt: !16186)
!16188 = !DILocation(line: 1817, column: 3, scope: !16181)
!16189 = !DILocation(line: 0, scope: !16165)
!16190 = !DILocation(line: 0, scope: !14328, inlinedAt: !16191)
!16191 = distinct !DILocation(line: 1822, column: 2, scope: !16150)
!16192 = !DILocation(line: 0, scope: !14336, inlinedAt: !16193)
!16193 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !16191)
!16194 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !16193)
!16195 = !DILocation(line: 1823, column: 2, scope: !16150)
!16196 = !DILocation(line: 1824, column: 1, scope: !16150)
!16197 = distinct !DISubprogram(name: "z_sched_wake", scope: !2420, file: !2420, line: 1882, type: !16198, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !16200)
!16198 = !DISubroutineType(types: !16199)
!16199 = !{!157, !2346, !103, !102}
!16200 = !{!16201, !16202, !16203, !16204, !16205, !16206, !16208}
!16201 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16197, file: !2420, line: 1882, type: !2346)
!16202 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16197, file: !2420, line: 1882, type: !103)
!16203 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16197, file: !2420, line: 1882, type: !102)
!16204 = !DILocalVariable(name: "thread", scope: !16197, file: !2420, line: 1884, type: !2315)
!16205 = !DILocalVariable(name: "ret", scope: !16197, file: !2420, line: 1885, type: !157)
!16206 = !DILocalVariable(name: "__i", scope: !16207, file: !2420, line: 1887, type: !14293)
!16207 = distinct !DILexicalBlock(scope: !16197, file: !2420, line: 1887, column: 2)
!16208 = !DILocalVariable(name: "__key", scope: !16207, file: !2420, line: 1887, type: !14293)
!16209 = !DILocation(line: 0, scope: !16197)
!16210 = !DILocation(line: 0, scope: !16207)
!16211 = !DILocation(line: 0, scope: !14301, inlinedAt: !16212)
!16212 = distinct !DILocation(line: 1887, column: 2, scope: !16207)
!16213 = !DILocation(line: 55, column: 2, scope: !14310, inlinedAt: !16214)
!16214 = distinct !DILocation(line: 145, column: 10, scope: !14301, inlinedAt: !16212)
!16215 = !DILocation(line: 0, scope: !14310, inlinedAt: !16214)
!16216 = !DILocation(line: 1888, column: 12, scope: !16217)
!16217 = distinct !DILexicalBlock(scope: !16218, file: !2420, line: 1887, column: 26)
!16218 = distinct !DILexicalBlock(scope: !16207, file: !2420, line: 1887, column: 2)
!16219 = !DILocation(line: 1890, column: 14, scope: !16220)
!16220 = distinct !DILexicalBlock(scope: !16217, file: !2420, line: 1890, column: 7)
!16221 = !DILocation(line: 1890, column: 7, scope: !16217)
!16222 = !DILocalVariable(name: "thread", arg: 1, scope: !16223, file: !13699, line: 134, type: !2315)
!16223 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13699, file: !13699, line: 134, type: !16224, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !16226)
!16224 = !DISubroutineType(types: !16225)
!16225 = !{null, !2315, !32, !102}
!16226 = !{!16222, !16227, !16228}
!16227 = !DILocalVariable(name: "value", arg: 2, scope: !16223, file: !13699, line: 135, type: !32)
!16228 = !DILocalVariable(name: "data", arg: 3, scope: !16223, file: !13699, line: 136, type: !102)
!16229 = !DILocation(line: 0, scope: !16223, inlinedAt: !16230)
!16230 = distinct !DILocation(line: 1891, column: 4, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16220, file: !2420, line: 1890, column: 23)
!16232 = !DILocation(line: 0, scope: !16137, inlinedAt: !16233)
!16233 = distinct !DILocation(line: 138, column: 2, scope: !16223, inlinedAt: !16230)
!16234 = !DILocation(line: 67, column: 15, scope: !16137, inlinedAt: !16233)
!16235 = !DILocation(line: 67, column: 33, scope: !16137, inlinedAt: !16233)
!16236 = !DILocation(line: 139, column: 15, scope: !16223, inlinedAt: !16230)
!16237 = !DILocation(line: 139, column: 25, scope: !16223, inlinedAt: !16230)
!16238 = !DILocation(line: 1894, column: 4, scope: !16231)
!16239 = !DILocation(line: 1895, column: 10, scope: !16231)
!16240 = !DILocation(line: 1896, column: 4, scope: !16231)
!16241 = !DILocation(line: 1898, column: 3, scope: !16231)
!16242 = !DILocation(line: 0, scope: !14328, inlinedAt: !16243)
!16243 = distinct !DILocation(line: 1887, column: 2, scope: !16218)
!16244 = !DILocation(line: 0, scope: !14336, inlinedAt: !16245)
!16245 = distinct !DILocation(line: 215, column: 2, scope: !14328, inlinedAt: !16243)
!16246 = !DILocation(line: 95, column: 2, scope: !14336, inlinedAt: !16245)
!16247 = !DILocation(line: 1901, column: 2, scope: !16197)
!16248 = distinct !DISubprogram(name: "z_sched_wait", scope: !2420, file: !2420, line: 1904, type: !16249, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !16251)
!16249 = !DISubroutineType(types: !16250)
!16250 = !{!103, !14304, !14293, !2346, !15092, !3121}
!16251 = !{!16252, !16253, !16254, !16255, !16256, !16257}
!16252 = !DILocalVariable(name: "lock", arg: 1, scope: !16248, file: !2420, line: 1904, type: !14304)
!16253 = !DILocalVariable(name: "key", arg: 2, scope: !16248, file: !2420, line: 1904, type: !14293)
!16254 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16248, file: !2420, line: 1905, type: !2346)
!16255 = !DILocalVariable(name: "timeout", arg: 4, scope: !16248, file: !2420, line: 1905, type: !15092)
!16256 = !DILocalVariable(name: "data", arg: 5, scope: !16248, file: !2420, line: 1905, type: !3121)
!16257 = !DILocalVariable(name: "ret", scope: !16248, file: !2420, line: 1907, type: !103)
!16258 = !DILocation(line: 0, scope: !16248)
!16259 = !DILocation(line: 1907, column: 12, scope: !16248)
!16260 = !DILocation(line: 1909, column: 11, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16248, file: !2420, line: 1909, column: 6)
!16262 = !DILocation(line: 1909, column: 6, scope: !16248)
!16263 = !DILocation(line: 1910, column: 11, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16261, file: !2420, line: 1909, column: 20)
!16265 = !DILocation(line: 1910, column: 26, scope: !16264)
!16266 = !DILocation(line: 1910, column: 9, scope: !16264)
!16267 = !DILocation(line: 1911, column: 2, scope: !16264)
!16268 = !DILocation(line: 1912, column: 2, scope: !16248)
!16269 = distinct !DISubprogram(name: "z_data_copy", scope: !16270, file: !16270, line: 22, type: !3157, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !317)
!16270 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16271 = !DILocation(line: 24, column: 2, scope: !16269)
!16272 = !DILocation(line: 27, column: 2, scope: !16269)
!16273 = !DILocation(line: 71, column: 1, scope: !16269)
!16274 = distinct !DISubprogram(name: "z_add_timeout", scope: !2457, file: !2457, line: 88, type: !16275, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16281)
!16275 = !DISubroutineType(types: !16276)
!16276 = !{null, !2430, !2449, !16277}
!16277 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !16278)
!16278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !16279)
!16279 = !{!16280}
!16280 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16278, file: !201, line: 66, baseType: !200, size: 64)
!16281 = !{!16282, !16283, !16284, !16285, !16291, !16292, !16295, !16298}
!16282 = !DILocalVariable(name: "to", arg: 1, scope: !16274, file: !2457, line: 88, type: !2430)
!16283 = !DILocalVariable(name: "fn", arg: 2, scope: !16274, file: !2457, line: 88, type: !2449)
!16284 = !DILocalVariable(name: "timeout", arg: 3, scope: !16274, file: !2457, line: 89, type: !16277)
!16285 = !DILocalVariable(name: "__i", scope: !16286, file: !2457, line: 102, type: !16287)
!16286 = distinct !DILexicalBlock(scope: !16274, file: !2457, line: 102, column: 2)
!16287 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !16288)
!16288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !16289)
!16289 = !{!16290}
!16290 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16288, file: !316, line: 33, baseType: !103, size: 32)
!16291 = !DILocalVariable(name: "__key", scope: !16286, file: !2457, line: 102, type: !16287)
!16292 = !DILocalVariable(name: "t", scope: !16293, file: !2457, line: 103, type: !2430)
!16293 = distinct !DILexicalBlock(scope: !16294, file: !2457, line: 102, column: 24)
!16294 = distinct !DILexicalBlock(scope: !16286, file: !2457, line: 102, column: 2)
!16295 = !DILocalVariable(name: "ticks", scope: !16296, file: !2457, line: 107, type: !200)
!16296 = distinct !DILexicalBlock(scope: !16297, file: !2457, line: 106, column: 39)
!16297 = distinct !DILexicalBlock(scope: !16293, file: !2457, line: 105, column: 7)
!16298 = !DILocalVariable(name: "next_time", scope: !16299, file: !2457, line: 137, type: !725)
!16299 = distinct !DILexicalBlock(scope: !16300, file: !2457, line: 127, column: 22)
!16300 = distinct !DILexicalBlock(scope: !16293, file: !2457, line: 127, column: 7)
!16301 = !DILocation(line: 0, scope: !16274)
!16302 = !DILocation(line: 91, column: 6, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16274, file: !2457, line: 91, column: 6)
!16304 = !DILocation(line: 91, column: 6, scope: !16274)
!16305 = !DILocation(line: 100, column: 6, scope: !16274)
!16306 = !DILocation(line: 100, column: 9, scope: !16274)
!16307 = !DILocation(line: 0, scope: !16286)
!16308 = !DILocalVariable(name: "l", arg: 1, scope: !16309, file: !316, line: 136, type: !16312)
!16309 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !16310, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16313)
!16310 = !DISubroutineType(types: !16311)
!16311 = !{!16287, !16312}
!16312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 32)
!16313 = !{!16308, !16314}
!16314 = !DILocalVariable(name: "k", scope: !16309, file: !316, line: 139, type: !16287)
!16315 = !DILocation(line: 0, scope: !16309, inlinedAt: !16316)
!16316 = distinct !DILocation(line: 102, column: 2, scope: !16286)
!16317 = !DILocation(line: 55, column: 2, scope: !16318, inlinedAt: !16322)
!16318 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5704, file: !5704, line: 42, type: !5705, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16319)
!16319 = !{!16320, !16321}
!16320 = !DILocalVariable(name: "key", scope: !16318, file: !5704, line: 44, type: !32)
!16321 = !DILocalVariable(name: "tmp", scope: !16318, file: !5704, line: 53, type: !32)
!16322 = distinct !DILocation(line: 145, column: 10, scope: !16309, inlinedAt: !16316)
!16323 = !{i64 1953652}
!16324 = !DILocation(line: 0, scope: !16318, inlinedAt: !16322)
!16325 = !DILocation(line: 106, column: 33, scope: !16297)
!16326 = !DILocation(line: 105, column: 7, scope: !16293)
!16327 = !DILocation(line: 107, column: 50, scope: !16296)
!16328 = !DILocation(line: 107, column: 48, scope: !16296)
!16329 = !DILocation(line: 0, scope: !16296)
!16330 = !DILocation(line: 109, column: 17, scope: !16296)
!16331 = !DILocation(line: 110, column: 3, scope: !16296)
!16332 = !DILocation(line: 111, column: 31, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16297, file: !2457, line: 110, column: 10)
!16334 = !DILocation(line: 111, column: 37, scope: !16333)
!16335 = !DILocation(line: 111, column: 35, scope: !16333)
!16336 = !DILocation(line: 0, scope: !16297)
!16337 = !DILocation(line: 109, column: 8, scope: !16296)
!16338 = !DILocation(line: 109, column: 15, scope: !16296)
!16339 = !DILocation(line: 114, column: 12, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16293, file: !2457, line: 114, column: 3)
!16341 = !DILocation(line: 0, scope: !16293)
!16342 = !DILocation(line: 114, column: 3, scope: !16340)
!16343 = !DILocation(line: 115, column: 24, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16345, file: !2457, line: 115, column: 8)
!16345 = distinct !DILexicalBlock(scope: !16346, file: !2457, line: 114, column: 45)
!16346 = distinct !DILexicalBlock(scope: !16340, file: !2457, line: 114, column: 3)
!16347 = !DILocation(line: 115, column: 11, scope: !16344)
!16348 = !DILocation(line: 115, column: 18, scope: !16344)
!16349 = !DILocation(line: 115, column: 8, scope: !16345)
!16350 = !DILocation(line: 116, column: 15, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16344, file: !2457, line: 115, column: 32)
!16352 = !DILocation(line: 117, column: 26, scope: !16351)
!16353 = !DILocation(line: 117, column: 37, scope: !16351)
!16354 = !DILocation(line: 117, column: 5, scope: !16351)
!16355 = !DILocation(line: 123, column: 7, scope: !16293)
!16356 = !DILocation(line: 120, column: 15, scope: !16345)
!16357 = !DILocation(line: 114, column: 36, scope: !16346)
!16358 = distinct !{!16358, !16342, !16359}
!16359 = !DILocation(line: 121, column: 3, scope: !16340)
!16360 = !DILocation(line: 124, column: 41, scope: !16361)
!16361 = distinct !DILexicalBlock(scope: !16362, file: !2457, line: 123, column: 18)
!16362 = distinct !DILexicalBlock(scope: !16293, file: !2457, line: 123, column: 7)
!16363 = !DILocation(line: 124, column: 4, scope: !16361)
!16364 = !DILocation(line: 125, column: 3, scope: !16361)
!16365 = !DILocation(line: 127, column: 13, scope: !16300)
!16366 = !DILocation(line: 127, column: 10, scope: !16300)
!16367 = !DILocation(line: 127, column: 7, scope: !16293)
!16368 = !DILocation(line: 137, column: 24, scope: !16299)
!16369 = !DILocation(line: 0, scope: !16299)
!16370 = !DILocation(line: 139, column: 18, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16299, file: !2457, line: 139, column: 8)
!16372 = !DILocation(line: 139, column: 23, scope: !16371)
!16373 = !DILocation(line: 141, column: 5, scope: !16374)
!16374 = distinct !DILexicalBlock(scope: !16371, file: !2457, line: 140, column: 48)
!16375 = !DILocation(line: 142, column: 4, scope: !16374)
!16376 = !DILocalVariable(name: "key", arg: 2, scope: !16377, file: !316, line: 190, type: !16287)
!16377 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !16378, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16380)
!16378 = !DISubroutineType(types: !16379)
!16379 = !{null, !16312, !16287}
!16380 = !{!16381, !16376}
!16381 = !DILocalVariable(name: "l", arg: 1, scope: !16377, file: !316, line: 189, type: !16312)
!16382 = !DILocation(line: 0, scope: !16377, inlinedAt: !16383)
!16383 = distinct !DILocation(line: 102, column: 2, scope: !16294)
!16384 = !DILocalVariable(name: "key", arg: 1, scope: !16385, file: !5704, line: 84, type: !32)
!16385 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5704, file: !5704, line: 84, type: !5715, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16386)
!16386 = !{!16384}
!16387 = !DILocation(line: 0, scope: !16385, inlinedAt: !16388)
!16388 = distinct !DILocation(line: 215, column: 2, scope: !16377, inlinedAt: !16383)
!16389 = !DILocation(line: 95, column: 2, scope: !16385, inlinedAt: !16388)
!16390 = !{i64 1954469}
!16391 = !DILocation(line: 148, column: 1, scope: !16274)
!16392 = distinct !DISubprogram(name: "elapsed", scope: !2457, file: !2457, line: 62, type: !16393, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !317)
!16393 = !DISubroutineType(types: !16394)
!16394 = !{!725}
!16395 = !DILocation(line: 64, column: 9, scope: !16392)
!16396 = !DILocation(line: 64, column: 28, scope: !16392)
!16397 = !DILocation(line: 64, column: 35, scope: !16392)
!16398 = !DILocation(line: 64, column: 2, scope: !16392)
!16399 = distinct !DISubprogram(name: "first", scope: !2457, file: !2457, line: 39, type: !16400, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16402)
!16400 = !DISubroutineType(types: !16401)
!16401 = !{!2430}
!16402 = !{!16403}
!16403 = !DILocalVariable(name: "t", scope: !16399, file: !2457, line: 41, type: !16404)
!16404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 32)
!16405 = !DILocation(line: 41, column: 19, scope: !16399)
!16406 = !DILocation(line: 0, scope: !16399)
!16407 = !DILocation(line: 43, column: 9, scope: !16399)
!16408 = !DILocation(line: 43, column: 2, scope: !16399)
!16409 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !16410, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16412)
!16410 = !DISubroutineType(types: !16411)
!16411 = !{null, !16404, !16404}
!16412 = !{!16413, !16414, !16415}
!16413 = !DILocalVariable(name: "successor", arg: 1, scope: !16409, file: !325, line: 443, type: !16404)
!16414 = !DILocalVariable(name: "node", arg: 2, scope: !16409, file: !325, line: 443, type: !16404)
!16415 = !DILocalVariable(name: "prev", scope: !16409, file: !325, line: 445, type: !16416)
!16416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16404)
!16417 = !DILocation(line: 0, scope: !16409)
!16418 = !DILocation(line: 445, column: 39, scope: !16409)
!16419 = !DILocation(line: 447, column: 8, scope: !16409)
!16420 = !DILocation(line: 447, column: 13, scope: !16409)
!16421 = !DILocation(line: 448, column: 8, scope: !16409)
!16422 = !DILocation(line: 448, column: 13, scope: !16409)
!16423 = !DILocation(line: 449, column: 8, scope: !16409)
!16424 = !DILocation(line: 449, column: 13, scope: !16409)
!16425 = !DILocation(line: 450, column: 18, scope: !16409)
!16426 = !DILocation(line: 451, column: 1, scope: !16409)
!16427 = distinct !DISubprogram(name: "next", scope: !2457, file: !2457, line: 46, type: !16428, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16430)
!16428 = !DISubroutineType(types: !16429)
!16429 = !{!2430, !2430}
!16430 = !{!16431, !16432}
!16431 = !DILocalVariable(name: "t", arg: 1, scope: !16427, file: !2457, line: 46, type: !2430)
!16432 = !DILocalVariable(name: "n", scope: !16427, file: !2457, line: 48, type: !16404)
!16433 = !DILocation(line: 0, scope: !16427)
!16434 = !DILocation(line: 48, column: 58, scope: !16427)
!16435 = !DILocation(line: 48, column: 19, scope: !16427)
!16436 = !DILocation(line: 50, column: 9, scope: !16427)
!16437 = !DILocation(line: 50, column: 2, scope: !16427)
!16438 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !16439, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16442)
!16439 = !DISubroutineType(types: !16440)
!16440 = !{null, !16441, !16404}
!16441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 32)
!16442 = !{!16443, !16444, !16445}
!16443 = !DILocalVariable(name: "list", arg: 1, scope: !16438, file: !325, line: 404, type: !16441)
!16444 = !DILocalVariable(name: "node", arg: 2, scope: !16438, file: !325, line: 404, type: !16404)
!16445 = !DILocalVariable(name: "tail", scope: !16438, file: !325, line: 406, type: !16416)
!16446 = !DILocation(line: 0, scope: !16438)
!16447 = !DILocation(line: 406, column: 34, scope: !16438)
!16448 = !DILocation(line: 408, column: 8, scope: !16438)
!16449 = !DILocation(line: 408, column: 13, scope: !16438)
!16450 = !DILocation(line: 409, column: 8, scope: !16438)
!16451 = !DILocation(line: 409, column: 13, scope: !16438)
!16452 = !DILocation(line: 411, column: 8, scope: !16438)
!16453 = !DILocation(line: 411, column: 13, scope: !16438)
!16454 = !DILocation(line: 412, column: 13, scope: !16438)
!16455 = !DILocation(line: 413, column: 1, scope: !16438)
!16456 = distinct !DISubprogram(name: "next_timeout", scope: !2457, file: !2457, line: 67, type: !16393, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16457)
!16457 = !{!16458, !16459, !16460}
!16458 = !DILocalVariable(name: "to", scope: !16456, file: !2457, line: 69, type: !2430)
!16459 = !DILocalVariable(name: "ticks_elapsed", scope: !16456, file: !2457, line: 70, type: !725)
!16460 = !DILocalVariable(name: "ret", scope: !16456, file: !2457, line: 71, type: !725)
!16461 = !DILocation(line: 69, column: 24, scope: !16456)
!16462 = !DILocation(line: 0, scope: !16456)
!16463 = !DILocation(line: 70, column: 26, scope: !16456)
!16464 = !DILocation(line: 73, column: 10, scope: !16465)
!16465 = distinct !DILexicalBlock(scope: !16456, file: !2457, line: 73, column: 6)
!16466 = !DILocation(line: 73, column: 19, scope: !16465)
!16467 = !DILocation(line: 74, column: 21, scope: !16465)
!16468 = !DILocation(line: 74, column: 30, scope: !16465)
!16469 = !DILocation(line: 74, column: 28, scope: !16465)
!16470 = !DILocation(line: 74, column: 45, scope: !16465)
!16471 = !DILocation(line: 73, column: 6, scope: !16456)
!16472 = !DILocation(line: 77, column: 9, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16465, file: !2457, line: 76, column: 9)
!16474 = !DILocation(line: 0, scope: !16465)
!16475 = !DILocation(line: 81, column: 20, scope: !16476)
!16476 = distinct !DILexicalBlock(scope: !16456, file: !2457, line: 81, column: 6)
!16477 = !DILocation(line: 81, column: 6, scope: !16476)
!16478 = !DILocation(line: 81, column: 32, scope: !16476)
!16479 = !DILocation(line: 85, column: 2, scope: !16456)
!16480 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !16481, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16483)
!16481 = !DISubroutineType(types: !16482)
!16482 = !{!16404, !16441, !16404}
!16483 = !{!16484, !16485}
!16484 = !DILocalVariable(name: "list", arg: 1, scope: !16480, file: !325, line: 341, type: !16441)
!16485 = !DILocalVariable(name: "node", arg: 2, scope: !16480, file: !325, line: 342, type: !16404)
!16486 = !DILocation(line: 0, scope: !16480)
!16487 = !DILocation(line: 344, column: 15, scope: !16480)
!16488 = !DILocation(line: 344, column: 9, scope: !16480)
!16489 = !DILocation(line: 344, column: 26, scope: !16480)
!16490 = !DILocation(line: 344, column: 2, scope: !16480)
!16491 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !16481, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16492)
!16492 = !{!16493, !16494}
!16493 = !DILocalVariable(name: "list", arg: 1, scope: !16491, file: !325, line: 325, type: !16441)
!16494 = !DILocalVariable(name: "node", arg: 2, scope: !16491, file: !325, line: 326, type: !16404)
!16495 = !DILocation(line: 0, scope: !16491)
!16496 = !DILocation(line: 328, column: 24, scope: !16491)
!16497 = !DILocation(line: 328, column: 15, scope: !16491)
!16498 = !DILocation(line: 328, column: 9, scope: !16491)
!16499 = !DILocation(line: 328, column: 45, scope: !16491)
!16500 = !DILocation(line: 328, column: 2, scope: !16491)
!16501 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !16502, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16504)
!16502 = !DISubroutineType(types: !16503)
!16503 = !{!16404, !16441}
!16504 = !{!16505}
!16505 = !DILocalVariable(name: "list", arg: 1, scope: !16501, file: !325, line: 294, type: !16441)
!16506 = !DILocation(line: 0, scope: !16501)
!16507 = !DILocation(line: 296, column: 9, scope: !16501)
!16508 = !DILocation(line: 296, column: 2, scope: !16501)
!16509 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !16510, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16512)
!16510 = !DISubroutineType(types: !16511)
!16511 = !{!157, !16441}
!16512 = !{!16513}
!16513 = !DILocalVariable(name: "list", arg: 1, scope: !16509, file: !325, line: 266, type: !16441)
!16514 = !DILocation(line: 0, scope: !16509)
!16515 = !DILocation(line: 268, column: 15, scope: !16509)
!16516 = !DILocation(line: 268, column: 20, scope: !16509)
!16517 = !DILocation(line: 268, column: 2, scope: !16509)
!16518 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2457, file: !2457, line: 150, type: !16519, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16521)
!16519 = !DISubroutineType(types: !16520)
!16520 = !{!103, !2430}
!16521 = !{!16522, !16523, !16524, !16526}
!16522 = !DILocalVariable(name: "to", arg: 1, scope: !16518, file: !2457, line: 150, type: !2430)
!16523 = !DILocalVariable(name: "ret", scope: !16518, file: !2457, line: 152, type: !103)
!16524 = !DILocalVariable(name: "__i", scope: !16525, file: !2457, line: 154, type: !16287)
!16525 = distinct !DILexicalBlock(scope: !16518, file: !2457, line: 154, column: 2)
!16526 = !DILocalVariable(name: "__key", scope: !16525, file: !2457, line: 154, type: !16287)
!16527 = !DILocation(line: 0, scope: !16518)
!16528 = !DILocation(line: 0, scope: !16525)
!16529 = !DILocation(line: 0, scope: !16309, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 154, column: 2, scope: !16525)
!16531 = !DILocation(line: 55, column: 2, scope: !16318, inlinedAt: !16532)
!16532 = distinct !DILocation(line: 145, column: 10, scope: !16309, inlinedAt: !16530)
!16533 = !DILocation(line: 0, scope: !16318, inlinedAt: !16532)
!16534 = !DILocation(line: 155, column: 7, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16536, file: !2457, line: 155, column: 7)
!16536 = distinct !DILexicalBlock(scope: !16537, file: !2457, line: 154, column: 24)
!16537 = distinct !DILexicalBlock(scope: !16525, file: !2457, line: 154, column: 2)
!16538 = !DILocation(line: 155, column: 7, scope: !16536)
!16539 = !DILocation(line: 156, column: 4, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16535, file: !2457, line: 155, column: 39)
!16541 = !DILocation(line: 158, column: 3, scope: !16540)
!16542 = !DILocation(line: 0, scope: !16377, inlinedAt: !16543)
!16543 = distinct !DILocation(line: 154, column: 2, scope: !16537)
!16544 = !DILocation(line: 0, scope: !16385, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 215, column: 2, scope: !16377, inlinedAt: !16543)
!16546 = !DILocation(line: 95, column: 2, scope: !16385, inlinedAt: !16545)
!16547 = !DILocation(line: 161, column: 2, scope: !16518)
!16548 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !16549, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16553)
!16549 = !DISubroutineType(types: !16550)
!16550 = !{!157, !16551}
!16551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16552, size: 32)
!16552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2434)
!16553 = !{!16554}
!16554 = !DILocalVariable(name: "node", arg: 1, scope: !16548, file: !325, line: 225, type: !16551)
!16555 = !DILocation(line: 0, scope: !16548)
!16556 = !DILocation(line: 227, column: 15, scope: !16548)
!16557 = !DILocation(line: 227, column: 20, scope: !16548)
!16558 = !DILocation(line: 227, column: 2, scope: !16548)
!16559 = distinct !DISubprogram(name: "remove_timeout", scope: !2457, file: !2457, line: 53, type: !2451, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16560)
!16560 = !{!16561}
!16561 = !DILocalVariable(name: "t", arg: 1, scope: !16559, file: !2457, line: 53, type: !2430)
!16562 = !DILocation(line: 0, scope: !16559)
!16563 = !DILocation(line: 55, column: 6, scope: !16564)
!16564 = distinct !DILexicalBlock(scope: !16559, file: !2457, line: 55, column: 6)
!16565 = !DILocation(line: 55, column: 14, scope: !16564)
!16566 = !DILocation(line: 55, column: 6, scope: !16559)
!16567 = !DILocation(line: 56, column: 25, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16564, file: !2457, line: 55, column: 23)
!16569 = !DILocation(line: 56, column: 12, scope: !16568)
!16570 = !DILocation(line: 56, column: 19, scope: !16568)
!16571 = !DILocation(line: 57, column: 2, scope: !16568)
!16572 = !DILocation(line: 59, column: 23, scope: !16559)
!16573 = !DILocation(line: 59, column: 2, scope: !16559)
!16574 = !DILocation(line: 60, column: 1, scope: !16559)
!16575 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !16576, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16578)
!16576 = !DISubroutineType(types: !16577)
!16577 = !{null, !16404}
!16578 = !{!16579, !16580, !16581}
!16579 = !DILocalVariable(name: "node", arg: 1, scope: !16575, file: !325, line: 496, type: !16404)
!16580 = !DILocalVariable(name: "prev", scope: !16575, file: !325, line: 498, type: !16416)
!16581 = !DILocalVariable(name: "next", scope: !16575, file: !325, line: 499, type: !16416)
!16582 = !DILocation(line: 0, scope: !16575)
!16583 = !DILocation(line: 498, column: 34, scope: !16575)
!16584 = !DILocation(line: 499, column: 34, scope: !16575)
!16585 = !DILocation(line: 501, column: 8, scope: !16575)
!16586 = !DILocation(line: 501, column: 13, scope: !16575)
!16587 = !DILocation(line: 502, column: 8, scope: !16575)
!16588 = !DILocation(line: 502, column: 13, scope: !16575)
!16589 = !DILocation(line: 503, column: 2, scope: !16575)
!16590 = !DILocation(line: 504, column: 1, scope: !16575)
!16591 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !16576, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16592)
!16592 = !{!16593}
!16593 = !DILocalVariable(name: "node", arg: 1, scope: !16591, file: !325, line: 211, type: !16404)
!16594 = !DILocation(line: 0, scope: !16591)
!16595 = !DILocation(line: 213, column: 8, scope: !16591)
!16596 = !DILocation(line: 213, column: 13, scope: !16591)
!16597 = !DILocation(line: 214, column: 8, scope: !16591)
!16598 = !DILocation(line: 214, column: 13, scope: !16591)
!16599 = !DILocation(line: 215, column: 1, scope: !16591)
!16600 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2457, file: !2457, line: 183, type: !16601, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16605)
!16601 = !DISubroutineType(types: !16602)
!16602 = !{!200, !16603}
!16603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16604, size: 32)
!16604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2431)
!16605 = !{!16606, !16607, !16608, !16610}
!16606 = !DILocalVariable(name: "timeout", arg: 1, scope: !16600, file: !2457, line: 183, type: !16603)
!16607 = !DILocalVariable(name: "ticks", scope: !16600, file: !2457, line: 185, type: !200)
!16608 = !DILocalVariable(name: "__i", scope: !16609, file: !2457, line: 187, type: !16287)
!16609 = distinct !DILexicalBlock(scope: !16600, file: !2457, line: 187, column: 2)
!16610 = !DILocalVariable(name: "__key", scope: !16609, file: !2457, line: 187, type: !16287)
!16611 = !DILocation(line: 0, scope: !16600)
!16612 = !DILocation(line: 0, scope: !16609)
!16613 = !DILocation(line: 0, scope: !16309, inlinedAt: !16614)
!16614 = distinct !DILocation(line: 187, column: 2, scope: !16609)
!16615 = !DILocation(line: 55, column: 2, scope: !16318, inlinedAt: !16616)
!16616 = distinct !DILocation(line: 145, column: 10, scope: !16309, inlinedAt: !16614)
!16617 = !DILocation(line: 0, scope: !16318, inlinedAt: !16616)
!16618 = !DILocation(line: 188, column: 11, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16620, file: !2457, line: 187, column: 24)
!16620 = distinct !DILexicalBlock(scope: !16609, file: !2457, line: 187, column: 2)
!16621 = !DILocation(line: 0, scope: !16377, inlinedAt: !16622)
!16622 = distinct !DILocation(line: 187, column: 2, scope: !16620)
!16623 = !DILocation(line: 0, scope: !16385, inlinedAt: !16624)
!16624 = distinct !DILocation(line: 215, column: 2, scope: !16377, inlinedAt: !16622)
!16625 = !DILocation(line: 95, column: 2, scope: !16385, inlinedAt: !16624)
!16626 = !DILocation(line: 191, column: 2, scope: !16600)
!16627 = distinct !DISubprogram(name: "timeout_rem", scope: !2457, file: !2457, line: 165, type: !16601, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16628)
!16628 = !{!16629, !16630, !16631}
!16629 = !DILocalVariable(name: "timeout", arg: 1, scope: !16627, file: !2457, line: 165, type: !16603)
!16630 = !DILocalVariable(name: "ticks", scope: !16627, file: !2457, line: 167, type: !200)
!16631 = !DILocalVariable(name: "t", scope: !16632, file: !2457, line: 173, type: !2430)
!16632 = distinct !DILexicalBlock(scope: !16627, file: !2457, line: 173, column: 2)
!16633 = !DILocation(line: 0, scope: !16627)
!16634 = !DILocation(line: 169, column: 6, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16627, file: !2457, line: 169, column: 6)
!16636 = !DILocation(line: 169, column: 6, scope: !16627)
!16637 = !DILocation(line: 173, column: 28, scope: !16632)
!16638 = !DILocation(line: 0, scope: !16632)
!16639 = !DILocation(line: 173, column: 39, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16632, file: !2457, line: 173, column: 2)
!16641 = !DILocation(line: 173, column: 2, scope: !16632)
!16642 = !DILocation(line: 174, column: 15, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16640, file: !2457, line: 173, column: 61)
!16644 = !DILocation(line: 174, column: 9, scope: !16643)
!16645 = !DILocation(line: 175, column: 15, scope: !16646)
!16646 = distinct !DILexicalBlock(scope: !16643, file: !2457, line: 175, column: 7)
!16647 = !DILocation(line: 175, column: 7, scope: !16643)
!16648 = !DILocation(line: 173, column: 52, scope: !16640)
!16649 = distinct !{!16649, !16641, !16650}
!16650 = !DILocation(line: 178, column: 2, scope: !16632)
!16651 = !DILocation(line: 180, column: 17, scope: !16627)
!16652 = !DILocation(line: 180, column: 15, scope: !16627)
!16653 = !DILocation(line: 180, column: 2, scope: !16627)
!16654 = !DILocation(line: 181, column: 1, scope: !16627)
!16655 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13198, file: !13198, line: 35, type: !16656, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16658)
!16656 = !DISubroutineType(types: !16657)
!16657 = !{!157, !16603}
!16658 = !{!16659}
!16659 = !DILocalVariable(name: "to", arg: 1, scope: !16655, file: !13198, line: 35, type: !16603)
!16660 = !DILocation(line: 0, scope: !16655)
!16661 = !DILocation(line: 37, column: 35, scope: !16655)
!16662 = !DILocation(line: 37, column: 10, scope: !16655)
!16663 = !DILocation(line: 37, column: 9, scope: !16655)
!16664 = !DILocation(line: 37, column: 2, scope: !16655)
!16665 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2457, file: !2457, line: 194, type: !16601, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16666)
!16666 = !{!16667, !16668, !16669, !16671}
!16667 = !DILocalVariable(name: "timeout", arg: 1, scope: !16665, file: !2457, line: 194, type: !16603)
!16668 = !DILocalVariable(name: "ticks", scope: !16665, file: !2457, line: 196, type: !200)
!16669 = !DILocalVariable(name: "__i", scope: !16670, file: !2457, line: 198, type: !16287)
!16670 = distinct !DILexicalBlock(scope: !16665, file: !2457, line: 198, column: 2)
!16671 = !DILocalVariable(name: "__key", scope: !16670, file: !2457, line: 198, type: !16287)
!16672 = !DILocation(line: 0, scope: !16665)
!16673 = !DILocation(line: 0, scope: !16670)
!16674 = !DILocation(line: 0, scope: !16309, inlinedAt: !16675)
!16675 = distinct !DILocation(line: 198, column: 2, scope: !16670)
!16676 = !DILocation(line: 55, column: 2, scope: !16318, inlinedAt: !16677)
!16677 = distinct !DILocation(line: 145, column: 10, scope: !16309, inlinedAt: !16675)
!16678 = !DILocation(line: 0, scope: !16318, inlinedAt: !16677)
!16679 = !DILocation(line: 199, column: 11, scope: !16680)
!16680 = distinct !DILexicalBlock(scope: !16681, file: !2457, line: 198, column: 24)
!16681 = distinct !DILexicalBlock(scope: !16670, file: !2457, line: 198, column: 2)
!16682 = !DILocation(line: 199, column: 23, scope: !16680)
!16683 = !DILocation(line: 0, scope: !16377, inlinedAt: !16684)
!16684 = distinct !DILocation(line: 198, column: 2, scope: !16681)
!16685 = !DILocation(line: 0, scope: !16385, inlinedAt: !16686)
!16686 = distinct !DILocation(line: 215, column: 2, scope: !16377, inlinedAt: !16684)
!16687 = !DILocation(line: 95, column: 2, scope: !16385, inlinedAt: !16686)
!16688 = !DILocation(line: 199, column: 21, scope: !16680)
!16689 = !DILocation(line: 202, column: 2, scope: !16665)
!16690 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2457, file: !2457, line: 205, type: !16393, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16691)
!16691 = !{!16692, !16693, !16695}
!16692 = !DILocalVariable(name: "ret", scope: !16690, file: !2457, line: 207, type: !725)
!16693 = !DILocalVariable(name: "__i", scope: !16694, file: !2457, line: 209, type: !16287)
!16694 = distinct !DILexicalBlock(scope: !16690, file: !2457, line: 209, column: 2)
!16695 = !DILocalVariable(name: "__key", scope: !16694, file: !2457, line: 209, type: !16287)
!16696 = !DILocation(line: 0, scope: !16690)
!16697 = !DILocation(line: 0, scope: !16694)
!16698 = !DILocation(line: 0, scope: !16309, inlinedAt: !16699)
!16699 = distinct !DILocation(line: 209, column: 2, scope: !16694)
!16700 = !DILocation(line: 55, column: 2, scope: !16318, inlinedAt: !16701)
!16701 = distinct !DILocation(line: 145, column: 10, scope: !16309, inlinedAt: !16699)
!16702 = !DILocation(line: 0, scope: !16318, inlinedAt: !16701)
!16703 = !DILocation(line: 210, column: 9, scope: !16704)
!16704 = distinct !DILexicalBlock(scope: !16705, file: !2457, line: 209, column: 24)
!16705 = distinct !DILexicalBlock(scope: !16694, file: !2457, line: 209, column: 2)
!16706 = !DILocation(line: 0, scope: !16377, inlinedAt: !16707)
!16707 = distinct !DILocation(line: 209, column: 2, scope: !16705)
!16708 = !DILocation(line: 0, scope: !16385, inlinedAt: !16709)
!16709 = distinct !DILocation(line: 215, column: 2, scope: !16377, inlinedAt: !16707)
!16710 = !DILocation(line: 95, column: 2, scope: !16385, inlinedAt: !16709)
!16711 = !DILocation(line: 212, column: 2, scope: !16690)
!16712 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2457, file: !2457, line: 215, type: !10810, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16713)
!16713 = !{!16714, !16715, !16716, !16718, !16719, !16722, !16723}
!16714 = !DILocalVariable(name: "ticks", arg: 1, scope: !16712, file: !2457, line: 215, type: !725)
!16715 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16712, file: !2457, line: 215, type: !157)
!16716 = !DILocalVariable(name: "__i", scope: !16717, file: !2457, line: 217, type: !16287)
!16717 = distinct !DILexicalBlock(scope: !16712, file: !2457, line: 217, column: 2)
!16718 = !DILocalVariable(name: "__key", scope: !16717, file: !2457, line: 217, type: !16287)
!16719 = !DILocalVariable(name: "next_to", scope: !16720, file: !2457, line: 218, type: !103)
!16720 = distinct !DILexicalBlock(scope: !16721, file: !2457, line: 217, column: 24)
!16721 = distinct !DILexicalBlock(scope: !16717, file: !2457, line: 217, column: 2)
!16722 = !DILocalVariable(name: "sooner", scope: !16720, file: !2457, line: 219, type: !157)
!16723 = !DILocalVariable(name: "imminent", scope: !16720, file: !2457, line: 221, type: !157)
!16724 = !DILocation(line: 0, scope: !16712)
!16725 = !DILocation(line: 0, scope: !16717)
!16726 = !DILocation(line: 0, scope: !16309, inlinedAt: !16727)
!16727 = distinct !DILocation(line: 217, column: 2, scope: !16717)
!16728 = !DILocation(line: 55, column: 2, scope: !16318, inlinedAt: !16729)
!16729 = distinct !DILocation(line: 145, column: 10, scope: !16309, inlinedAt: !16727)
!16730 = !DILocation(line: 0, scope: !16318, inlinedAt: !16729)
!16731 = !DILocation(line: 218, column: 17, scope: !16720)
!16732 = !DILocation(line: 0, scope: !16720)
!16733 = !DILocation(line: 221, column: 27, scope: !16720)
!16734 = !DILocation(line: 233, column: 17, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16720, file: !2457, line: 233, column: 7)
!16736 = !DILocation(line: 234, column: 26, scope: !16737)
!16737 = distinct !DILexicalBlock(scope: !16735, file: !2457, line: 233, column: 56)
!16738 = !DILocation(line: 234, column: 4, scope: !16737)
!16739 = !DILocation(line: 235, column: 3, scope: !16737)
!16740 = !DILocation(line: 0, scope: !16377, inlinedAt: !16741)
!16741 = distinct !DILocation(line: 217, column: 2, scope: !16721)
!16742 = !DILocation(line: 0, scope: !16385, inlinedAt: !16743)
!16743 = distinct !DILocation(line: 215, column: 2, scope: !16377, inlinedAt: !16741)
!16744 = !DILocation(line: 95, column: 2, scope: !16385, inlinedAt: !16743)
!16745 = !DILocation(line: 237, column: 1, scope: !16712)
!16746 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2457, file: !2457, line: 239, type: !16747, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16749)
!16747 = !DISubroutineType(types: !16748)
!16748 = !{null, !725}
!16749 = !{!16750, !16751, !16752, !16754}
!16750 = !DILocalVariable(name: "ticks", arg: 1, scope: !16746, file: !2457, line: 239, type: !725)
!16751 = !DILocalVariable(name: "key", scope: !16746, file: !2457, line: 245, type: !16287)
!16752 = !DILocalVariable(name: "t", scope: !16753, file: !2457, line: 262, type: !2430)
!16753 = distinct !DILexicalBlock(scope: !16746, file: !2457, line: 261, column: 67)
!16754 = !DILocalVariable(name: "dt", scope: !16753, file: !2457, line: 263, type: !103)
!16755 = !DILocation(line: 0, scope: !16746)
!16756 = !DILocation(line: 242, column: 2, scope: !16746)
!16757 = !DILocation(line: 0, scope: !16309, inlinedAt: !16758)
!16758 = distinct !DILocation(line: 245, column: 25, scope: !16746)
!16759 = !DILocation(line: 55, column: 2, scope: !16318, inlinedAt: !16760)
!16760 = distinct !DILocation(line: 145, column: 10, scope: !16309, inlinedAt: !16758)
!16761 = !DILocation(line: 0, scope: !16318, inlinedAt: !16760)
!16762 = !DILocation(line: 261, column: 9, scope: !16746)
!16763 = !DILocation(line: 261, column: 17, scope: !16746)
!16764 = !DILocation(line: 261, column: 25, scope: !16746)
!16765 = !DILocation(line: 261, column: 37, scope: !16746)
!16766 = !DILocation(line: 261, column: 47, scope: !16746)
!16767 = !DILocation(line: 261, column: 44, scope: !16746)
!16768 = !DILocation(line: 261, column: 2, scope: !16746)
!16769 = !DILocation(line: 0, scope: !16753)
!16770 = !DILocation(line: 263, column: 12, scope: !16753)
!16771 = !DILocation(line: 265, column: 16, scope: !16753)
!16772 = !DILocation(line: 265, column: 13, scope: !16753)
!16773 = !DILocation(line: 266, column: 13, scope: !16753)
!16774 = !DILocation(line: 267, column: 3, scope: !16753)
!16775 = !DILocation(line: 0, scope: !16377, inlinedAt: !16776)
!16776 = distinct !DILocation(line: 269, column: 3, scope: !16753)
!16777 = !DILocation(line: 0, scope: !16385, inlinedAt: !16778)
!16778 = distinct !DILocation(line: 215, column: 2, scope: !16377, inlinedAt: !16776)
!16779 = !DILocation(line: 95, column: 2, scope: !16385, inlinedAt: !16778)
!16780 = !DILocation(line: 270, column: 6, scope: !16753)
!16781 = !DILocation(line: 270, column: 3, scope: !16753)
!16782 = !DILocation(line: 0, scope: !16309, inlinedAt: !16783)
!16783 = distinct !DILocation(line: 271, column: 9, scope: !16753)
!16784 = !DILocation(line: 55, column: 2, scope: !16318, inlinedAt: !16785)
!16785 = distinct !DILocation(line: 145, column: 10, scope: !16309, inlinedAt: !16783)
!16786 = !DILocation(line: 0, scope: !16318, inlinedAt: !16785)
!16787 = !DILocation(line: 272, column: 22, scope: !16753)
!16788 = distinct !{!16788, !16768, !16789}
!16789 = !DILocation(line: 273, column: 2, scope: !16746)
!16790 = !DILocation(line: 276, column: 19, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16792, file: !2457, line: 275, column: 23)
!16792 = distinct !DILexicalBlock(scope: !16746, file: !2457, line: 275, column: 6)
!16793 = !DILocation(line: 277, column: 2, scope: !16791)
!16794 = !DILocation(line: 279, column: 15, scope: !16746)
!16795 = !DILocation(line: 279, column: 12, scope: !16746)
!16796 = !DILocation(line: 280, column: 21, scope: !16746)
!16797 = !DILocation(line: 282, column: 24, scope: !16746)
!16798 = !DILocation(line: 282, column: 2, scope: !16746)
!16799 = !DILocation(line: 0, scope: !16377, inlinedAt: !16800)
!16800 = distinct !DILocation(line: 284, column: 2, scope: !16746)
!16801 = !DILocation(line: 0, scope: !16385, inlinedAt: !16802)
!16802 = distinct !DILocation(line: 215, column: 2, scope: !16377, inlinedAt: !16800)
!16803 = !DILocation(line: 95, column: 2, scope: !16385, inlinedAt: !16802)
!16804 = !DILocation(line: 285, column: 1, scope: !16746)
!16805 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2457, file: !2457, line: 287, type: !16806, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16808)
!16806 = !DISubroutineType(types: !16807)
!16807 = !{!202}
!16808 = !{!16809, !16810, !16812}
!16809 = !DILocalVariable(name: "t", scope: !16805, file: !2457, line: 289, type: !1572)
!16810 = !DILocalVariable(name: "__i", scope: !16811, file: !2457, line: 291, type: !16287)
!16811 = distinct !DILexicalBlock(scope: !16805, file: !2457, line: 291, column: 2)
!16812 = !DILocalVariable(name: "__key", scope: !16811, file: !2457, line: 291, type: !16287)
!16813 = !DILocation(line: 0, scope: !16805)
!16814 = !DILocation(line: 0, scope: !16811)
!16815 = !DILocation(line: 0, scope: !16309, inlinedAt: !16816)
!16816 = distinct !DILocation(line: 291, column: 2, scope: !16811)
!16817 = !DILocation(line: 55, column: 2, scope: !16318, inlinedAt: !16818)
!16818 = distinct !DILocation(line: 145, column: 10, scope: !16309, inlinedAt: !16816)
!16819 = !DILocation(line: 0, scope: !16318, inlinedAt: !16818)
!16820 = !DILocation(line: 292, column: 7, scope: !16821)
!16821 = distinct !DILexicalBlock(scope: !16822, file: !2457, line: 291, column: 24)
!16822 = distinct !DILexicalBlock(scope: !16811, file: !2457, line: 291, column: 2)
!16823 = !DILocation(line: 292, column: 19, scope: !16821)
!16824 = !DILocation(line: 0, scope: !16377, inlinedAt: !16825)
!16825 = distinct !DILocation(line: 291, column: 2, scope: !16822)
!16826 = !DILocation(line: 0, scope: !16385, inlinedAt: !16827)
!16827 = distinct !DILocation(line: 215, column: 2, scope: !16377, inlinedAt: !16825)
!16828 = !DILocation(line: 95, column: 2, scope: !16385, inlinedAt: !16827)
!16829 = !DILocation(line: 292, column: 17, scope: !16821)
!16830 = !DILocation(line: 294, column: 2, scope: !16805)
!16831 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2457, file: !2457, line: 297, type: !6000, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !317)
!16832 = !DILocation(line: 300, column: 19, scope: !16831)
!16833 = !DILocation(line: 300, column: 9, scope: !16831)
!16834 = !DILocation(line: 300, column: 2, scope: !16831)
!16835 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2457, file: !2457, line: 306, type: !16806, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !317)
!16836 = !DILocation(line: 308, column: 9, scope: !16835)
!16837 = !DILocation(line: 308, column: 2, scope: !16835)
!16838 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2457, file: !2457, line: 319, type: !6010, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16839)
!16839 = !{!16840, !16841, !16842, !16843}
!16840 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16838, file: !2457, line: 319, type: !121)
!16841 = !DILocalVariable(name: "start_cycles", scope: !16838, file: !2457, line: 328, type: !121)
!16842 = !DILocalVariable(name: "cycles_to_wait", scope: !16838, file: !2457, line: 331, type: !121)
!16843 = !DILocalVariable(name: "current_cycles", scope: !16844, file: !2457, line: 338, type: !121)
!16844 = distinct !DILexicalBlock(scope: !16845, file: !2457, line: 337, column: 11)
!16845 = distinct !DILexicalBlock(scope: !16846, file: !2457, line: 337, column: 2)
!16846 = distinct !DILexicalBlock(scope: !16838, file: !2457, line: 337, column: 2)
!16847 = !DILocation(line: 0, scope: !16838)
!16848 = !DILocation(line: 322, column: 19, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16838, file: !2457, line: 322, column: 6)
!16850 = !DILocation(line: 322, column: 6, scope: !16838)
!16851 = !DILocation(line: 328, column: 26, scope: !16838)
!16852 = !DILocation(line: 333, column: 43, scope: !16838)
!16853 = !DILocation(line: 337, column: 2, scope: !16838)
!16854 = !DILocation(line: 338, column: 29, scope: !16844)
!16855 = !DILocation(line: 0, scope: !16844)
!16856 = !DILocation(line: 341, column: 23, scope: !16857)
!16857 = distinct !DILexicalBlock(scope: !16844, file: !2457, line: 341, column: 7)
!16858 = !DILocation(line: 341, column: 39, scope: !16857)
!16859 = !DILocation(line: 349, column: 1, scope: !16838)
!16860 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !296, file: !296, line: 1675, type: !6000, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !317)
!16861 = !DILocation(line: 1677, column: 9, scope: !16860)
!16862 = !DILocation(line: 1677, column: 2, scope: !16860)
!16863 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16864, file: !16864, line: 24, type: !6000, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !317)
!16864 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16865 = !DILocation(line: 26, column: 9, scope: !16863)
!16866 = !DILocation(line: 26, column: 2, scope: !16863)
!16867 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2457, file: !2457, line: 364, type: !16868, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !16870)
!16868 = !DISubroutineType(types: !16869)
!16869 = !{!1572, !16277}
!16870 = !{!16871, !16872}
!16871 = !DILocalVariable(name: "timeout", arg: 1, scope: !16867, file: !2457, line: 364, type: !16277)
!16872 = !DILocalVariable(name: "dt", scope: !16867, file: !2457, line: 366, type: !200)
!16873 = !DILocation(line: 0, scope: !16867)
!16874 = !DILocation(line: 368, column: 6, scope: !16867)
!16875 = !DILocation(line: 371, column: 10, scope: !16876)
!16876 = distinct !DILexicalBlock(scope: !16877, file: !2457, line: 370, column: 47)
!16877 = distinct !DILexicalBlock(scope: !16878, file: !2457, line: 370, column: 13)
!16878 = distinct !DILexicalBlock(scope: !16867, file: !2457, line: 368, column: 6)
!16879 = !DILocation(line: 371, column: 3, scope: !16876)
!16880 = !DILocation(line: 376, column: 58, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16882, file: !2457, line: 376, column: 7)
!16882 = distinct !DILexicalBlock(scope: !16877, file: !2457, line: 372, column: 9)
!16883 = !DILocation(line: 376, column: 7, scope: !16882)
!16884 = !DILocation(line: 376, column: 43, scope: !16881)
!16885 = !DILocation(line: 377, column: 4, scope: !16886)
!16886 = distinct !DILexicalBlock(scope: !16881, file: !2457, line: 376, column: 64)
!16887 = !DILocation(line: 379, column: 10, scope: !16882)
!16888 = !DILocation(line: 379, column: 33, scope: !16882)
!16889 = !DILocation(line: 379, column: 31, scope: !16882)
!16890 = !DILocation(line: 379, column: 3, scope: !16882)
!16891 = !DILocation(line: 0, scope: !16878)
!16892 = !DILocation(line: 381, column: 1, scope: !16867)
!16893 = distinct !DISubprogram(name: "k_free", scope: !16894, file: !16894, line: 43, type: !5856, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !16895)
!16894 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16895 = !{!16896, !16897}
!16896 = !DILocalVariable(name: "ptr", arg: 1, scope: !16893, file: !16894, line: 43, type: !102)
!16897 = !DILocalVariable(name: "heap_ref", scope: !16893, file: !16894, line: 45, type: !16898)
!16898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16899, size: 32)
!16899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16900, size: 32)
!16900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !16901)
!16901 = !{!16902, !16908, !16927}
!16902 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16900, file: !296, line: 5074, baseType: !16903, size: 96)
!16903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !16904)
!16904 = !{!16905, !16906, !16907}
!16905 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16903, file: !472, line: 57, baseType: !475, size: 32)
!16906 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16903, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!16907 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16903, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!16908 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16900, file: !296, line: 5075, baseType: !16909, size: 64, offset: 96)
!16909 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !16910)
!16910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !16911)
!16911 = !{!16912}
!16912 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16910, file: !320, line: 232, baseType: !16913, size: 64)
!16913 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !16914)
!16914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !16915)
!16915 = !{!16916, !16922}
!16916 = !DIDerivedType(tag: DW_TAG_member, scope: !16914, file: !325, line: 38, baseType: !16917, size: 32)
!16917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16914, file: !325, line: 38, size: 32, elements: !16918)
!16918 = !{!16919, !16921}
!16919 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !16917, file: !325, line: 39, baseType: !16920, size: 32)
!16920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16914, size: 32)
!16921 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !16917, file: !325, line: 40, baseType: !16920, size: 32)
!16922 = !DIDerivedType(tag: DW_TAG_member, scope: !16914, file: !325, line: 42, baseType: !16923, size: 32, offset: 32)
!16923 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16914, file: !325, line: 42, size: 32, elements: !16924)
!16924 = !{!16925, !16926}
!16925 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !16923, file: !325, line: 43, baseType: !16920, size: 32)
!16926 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !16923, file: !325, line: 44, baseType: !16920, size: 32)
!16927 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16900, file: !296, line: 5076, baseType: !16928, offset: 160)
!16928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!16929 = !DILocation(line: 0, scope: !16893)
!16930 = !DILocation(line: 47, column: 10, scope: !16931)
!16931 = distinct !DILexicalBlock(scope: !16893, file: !16894, line: 47, column: 6)
!16932 = !DILocation(line: 47, column: 6, scope: !16893)
!16933 = !DILocation(line: 49, column: 9, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16931, file: !16894, line: 47, column: 19)
!16935 = !DILocation(line: 53, column: 15, scope: !16934)
!16936 = !DILocation(line: 53, column: 3, scope: !16934)
!16937 = !DILocation(line: 56, column: 2, scope: !16934)
!16938 = !DILocation(line: 57, column: 1, scope: !16893)
!16939 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !16894, file: !16894, line: 124, type: !16940, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !16942)
!16940 = !DISubroutineType(types: !16941)
!16941 = !{!102, !204, !204}
!16942 = !{!16943, !16944, !16945, !16946}
!16943 = !DILocalVariable(name: "align", arg: 1, scope: !16939, file: !16894, line: 124, type: !204)
!16944 = !DILocalVariable(name: "size", arg: 2, scope: !16939, file: !16894, line: 124, type: !204)
!16945 = !DILocalVariable(name: "ret", scope: !16939, file: !16894, line: 126, type: !102)
!16946 = !DILocalVariable(name: "heap", scope: !16939, file: !16894, line: 127, type: !16899)
!16947 = !DILocation(line: 0, scope: !16939)
!16948 = !DILocation(line: 129, column: 6, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16939, file: !16894, line: 129, column: 6)
!16950 = !DILocation(line: 129, column: 6, scope: !16939)
!16951 = !DILocation(line: 132, column: 10, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16949, file: !16894, line: 131, column: 9)
!16953 = !DILocation(line: 132, column: 20, scope: !16952)
!16954 = !DILocation(line: 135, column: 11, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16939, file: !16894, line: 135, column: 6)
!16956 = !DILocation(line: 135, column: 6, scope: !16939)
!16957 = !DILocation(line: 136, column: 9, scope: !16958)
!16958 = distinct !DILexicalBlock(scope: !16955, file: !16894, line: 135, column: 20)
!16959 = !DILocation(line: 137, column: 2, scope: !16958)
!16960 = !DILocation(line: 0, scope: !16955)
!16961 = !DILocation(line: 141, column: 2, scope: !16939)
!16962 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !16894, file: !16894, line: 12, type: !16963, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !16965)
!16963 = !DISubroutineType(types: !16964)
!16964 = !{!102, !16899, !204, !204}
!16965 = !{!16966, !16967, !16968, !16969, !16970, !16971}
!16966 = !DILocalVariable(name: "heap", arg: 1, scope: !16962, file: !16894, line: 12, type: !16899)
!16967 = !DILocalVariable(name: "align", arg: 2, scope: !16962, file: !16894, line: 12, type: !204)
!16968 = !DILocalVariable(name: "size", arg: 3, scope: !16962, file: !16894, line: 12, type: !204)
!16969 = !DILocalVariable(name: "mem", scope: !16962, file: !16894, line: 14, type: !102)
!16970 = !DILocalVariable(name: "heap_ref", scope: !16962, file: !16894, line: 15, type: !16898)
!16971 = !DILocalVariable(name: "__align", scope: !16962, file: !16894, line: 16, type: !204)
!16972 = !DILocation(line: 0, scope: !16962)
!16973 = !DILocation(line: 24, column: 6, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !16962, file: !16894, line: 24, column: 6)
!16975 = !DILocation(line: 24, column: 6, scope: !16962)
!16976 = !DILocation(line: 27, column: 18, scope: !16962)
!16977 = !DILocation(line: 29, column: 44, scope: !16962)
!16978 = !DILocation(line: 29, column: 8, scope: !16962)
!16979 = !DILocation(line: 30, column: 10, scope: !16980)
!16980 = distinct !DILexicalBlock(scope: !16962, file: !16894, line: 30, column: 6)
!16981 = !DILocation(line: 30, column: 6, scope: !16962)
!16982 = !DILocation(line: 34, column: 13, scope: !16962)
!16983 = !DILocation(line: 35, column: 12, scope: !16962)
!16984 = !DILocation(line: 36, column: 8, scope: !16962)
!16985 = !DILocation(line: 40, column: 2, scope: !16962)
!16986 = !DILocation(line: 41, column: 1, scope: !16962)
!16987 = distinct !DISubprogram(name: "size_add_overflow", scope: !16988, file: !16988, line: 47, type: !16989, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !16991)
!16988 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16989 = !DISubroutineType(types: !16990)
!16990 = !{!157, !204, !204, !2570}
!16991 = !{!16992, !16993, !16994}
!16992 = !DILocalVariable(name: "a", arg: 1, scope: !16987, file: !16988, line: 47, type: !204)
!16993 = !DILocalVariable(name: "b", arg: 2, scope: !16987, file: !16988, line: 47, type: !204)
!16994 = !DILocalVariable(name: "result", arg: 3, scope: !16987, file: !16988, line: 47, type: !2570)
!16995 = !DILocation(line: 0, scope: !16987)
!16996 = !DILocation(line: 49, column: 9, scope: !16987)
!16997 = !DILocation(line: 49, column: 2, scope: !16987)
!16998 = distinct !DISubprogram(name: "boot_banner", scope: !16999, file: !16999, line: 26, type: !3157, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !317)
!16999 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17000 = !DILocation(line: 34, column: 2, scope: !16998)
!17001 = !DILocation(line: 36, column: 1, scope: !16998)
!17002 = distinct !DISubprogram(name: "statics_init", scope: !2485, file: !2485, line: 21, type: !2491, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17003)
!17003 = !{!17004, !17005}
!17004 = !DILocalVariable(name: "unused", arg: 1, scope: !17002, file: !2485, line: 21, type: !2493)
!17005 = !DILocalVariable(name: "h", scope: !17006, file: !2485, line: 24, type: !17007)
!17006 = distinct !DILexicalBlock(scope: !17002, file: !2485, line: 24, column: 2)
!17007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17008, size: 32)
!17008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !17009)
!17009 = !{!17010, !17016, !17022}
!17010 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17008, file: !296, line: 5074, baseType: !17011, size: 96)
!17011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !17012)
!17012 = !{!17013, !17014, !17015}
!17013 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17011, file: !472, line: 57, baseType: !475, size: 32)
!17014 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17011, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!17015 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17011, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!17016 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17008, file: !296, line: 5075, baseType: !17017, size: 64, offset: 96)
!17017 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !17018)
!17018 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !17019)
!17019 = !{!17020}
!17020 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17018, file: !320, line: 232, baseType: !17021, size: 64)
!17021 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2471)
!17022 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17008, file: !296, line: 5076, baseType: !17023, offset: 160)
!17023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!17024 = !DILocation(line: 0, scope: !17002)
!17025 = !DILocation(line: 0, scope: !17006)
!17026 = !DILocation(line: 24, column: 2, scope: !17006)
!17027 = !DILocation(line: 52, column: 2, scope: !17002)
!17028 = !DILocation(line: 49, column: 27, scope: !17029)
!17029 = distinct !DILexicalBlock(scope: !17030, file: !2485, line: 48, column: 3)
!17030 = distinct !DILexicalBlock(scope: !17031, file: !2485, line: 24, column: 36)
!17031 = distinct !DILexicalBlock(scope: !17006, file: !2485, line: 24, column: 2)
!17032 = !DILocation(line: 49, column: 45, scope: !17029)
!17033 = !DILocation(line: 49, column: 4, scope: !17029)
!17034 = !DILocation(line: 24, column: 2, scope: !17031)
!17035 = !DILocation(line: 24, column: 2, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17031, file: !2485, line: 24, column: 2)
!17037 = distinct !{!17037, !17026, !17038}
!17038 = !DILocation(line: 51, column: 2, scope: !17006)
!17039 = distinct !DISubprogram(name: "k_heap_init", scope: !2485, file: !2485, line: 13, type: !17040, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17042)
!17040 = !DISubroutineType(types: !17041)
!17041 = !{null, !17007, !102, !204}
!17042 = !{!17043, !17044, !17045}
!17043 = !DILocalVariable(name: "h", arg: 1, scope: !17039, file: !2485, line: 13, type: !17007)
!17044 = !DILocalVariable(name: "mem", arg: 2, scope: !17039, file: !2485, line: 13, type: !102)
!17045 = !DILocalVariable(name: "bytes", arg: 3, scope: !17039, file: !2485, line: 13, type: !204)
!17046 = !DILocation(line: 0, scope: !17039)
!17047 = !DILocation(line: 15, column: 19, scope: !17039)
!17048 = !DILocation(line: 15, column: 2, scope: !17039)
!17049 = !DILocation(line: 16, column: 20, scope: !17039)
!17050 = !DILocation(line: 16, column: 2, scope: !17039)
!17051 = !DILocation(line: 19, column: 1, scope: !17039)
!17052 = distinct !DISubprogram(name: "z_waitq_init", scope: !13130, file: !13130, line: 47, type: !17053, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17056)
!17053 = !DISubroutineType(types: !17054)
!17054 = !{null, !17055}
!17055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17017, size: 32)
!17056 = !{!17057}
!17057 = !DILocalVariable(name: "w", arg: 1, scope: !17052, file: !13130, line: 47, type: !17055)
!17058 = !DILocation(line: 0, scope: !17052)
!17059 = !DILocation(line: 49, column: 21, scope: !17052)
!17060 = !DILocation(line: 49, column: 2, scope: !17052)
!17061 = !DILocation(line: 50, column: 1, scope: !17052)
!17062 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !17063, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17066)
!17063 = !DISubroutineType(types: !17064)
!17064 = !{null, !17065}
!17065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17021, size: 32)
!17066 = !{!17067}
!17067 = !DILocalVariable(name: "list", arg: 1, scope: !17062, file: !325, line: 197, type: !17065)
!17068 = !DILocation(line: 0, scope: !17062)
!17069 = !DILocation(line: 199, column: 8, scope: !17062)
!17070 = !DILocation(line: 199, column: 13, scope: !17062)
!17071 = !DILocation(line: 200, column: 8, scope: !17062)
!17072 = !DILocation(line: 200, column: 13, scope: !17062)
!17073 = !DILocation(line: 201, column: 1, scope: !17062)
!17074 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2485, file: !2485, line: 64, type: !17075, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17081)
!17075 = !DISubroutineType(types: !17076)
!17076 = !{!102, !17007, !204, !204, !17077}
!17077 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !17078)
!17078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !17079)
!17079 = !{!17080}
!17080 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17078, file: !201, line: 66, baseType: !200, size: 64)
!17081 = !{!17082, !17083, !17084, !17085, !17086, !17087, !17088, !17089, !17094}
!17082 = !DILocalVariable(name: "h", arg: 1, scope: !17074, file: !2485, line: 64, type: !17007)
!17083 = !DILocalVariable(name: "align", arg: 2, scope: !17074, file: !2485, line: 64, type: !204)
!17084 = !DILocalVariable(name: "bytes", arg: 3, scope: !17074, file: !2485, line: 64, type: !204)
!17085 = !DILocalVariable(name: "timeout", arg: 4, scope: !17074, file: !2485, line: 65, type: !17077)
!17086 = !DILocalVariable(name: "now", scope: !17074, file: !2485, line: 67, type: !202)
!17087 = !DILocalVariable(name: "end", scope: !17074, file: !2485, line: 67, type: !202)
!17088 = !DILocalVariable(name: "ret", scope: !17074, file: !2485, line: 68, type: !102)
!17089 = !DILocalVariable(name: "key", scope: !17074, file: !2485, line: 72, type: !17090)
!17090 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !17091)
!17091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !17092)
!17092 = !{!17093}
!17093 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17091, file: !316, line: 33, baseType: !103, size: 32)
!17094 = !DILocalVariable(name: "blocked_alloc", scope: !17074, file: !2485, line: 78, type: !157)
!17095 = !DILocation(line: 0, scope: !17074)
!17096 = !DILocation(line: 67, column: 21, scope: !17074)
!17097 = !DILocation(line: 70, column: 8, scope: !17074)
!17098 = !DILocation(line: 72, column: 41, scope: !17074)
!17099 = !DILocalVariable(name: "l", arg: 1, scope: !17100, file: !316, line: 136, type: !17103)
!17100 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !17101, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17104)
!17101 = !DISubroutineType(types: !17102)
!17102 = !{!17090, !17103}
!17103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17023, size: 32)
!17104 = !{!17099, !17105}
!17105 = !DILocalVariable(name: "k", scope: !17100, file: !316, line: 139, type: !17090)
!17106 = !DILocation(line: 0, scope: !17100, inlinedAt: !17107)
!17107 = distinct !DILocation(line: 72, column: 25, scope: !17074)
!17108 = !DILocation(line: 55, column: 2, scope: !17109, inlinedAt: !17113)
!17109 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5704, file: !5704, line: 42, type: !5705, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17110)
!17110 = !{!17111, !17112}
!17111 = !DILocalVariable(name: "key", scope: !17109, file: !5704, line: 44, type: !32)
!17112 = !DILocalVariable(name: "tmp", scope: !17109, file: !5704, line: 53, type: !32)
!17113 = distinct !DILocation(line: 145, column: 10, scope: !17100, inlinedAt: !17107)
!17114 = !{i64 1948706}
!17115 = !DILocation(line: 0, scope: !17109, inlinedAt: !17113)
!17116 = !DILocation(line: 81, column: 9, scope: !17117)
!17117 = distinct !DILexicalBlock(scope: !17074, file: !2485, line: 80, column: 22)
!17118 = !DILocation(line: 83, column: 9, scope: !17117)
!17119 = !DILocation(line: 85, column: 12, scope: !17120)
!17120 = distinct !DILexicalBlock(scope: !17117, file: !2485, line: 84, column: 7)
!17121 = !DILocation(line: 85, column: 21, scope: !17120)
!17122 = !DILocation(line: 85, column: 30, scope: !17120)
!17123 = !DILocation(line: 85, column: 37, scope: !17120)
!17124 = !DILocation(line: 84, column: 7, scope: !17117)
!17125 = !DILocation(line: 99, column: 10, scope: !17117)
!17126 = !DILocation(line: 0, scope: !17100, inlinedAt: !17127)
!17127 = distinct !DILocation(line: 101, column: 9, scope: !17117)
!17128 = !DILocation(line: 55, column: 2, scope: !17109, inlinedAt: !17129)
!17129 = distinct !DILocation(line: 145, column: 10, scope: !17100, inlinedAt: !17127)
!17130 = !DILocation(line: 0, scope: !17109, inlinedAt: !17129)
!17131 = distinct !{!17131, !17132, !17133}
!17132 = !DILocation(line: 80, column: 2, scope: !17074)
!17133 = !DILocation(line: 102, column: 2, scope: !17074)
!17134 = !DILocalVariable(name: "key", arg: 2, scope: !17135, file: !316, line: 190, type: !17090)
!17135 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !17136, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17138)
!17136 = !DISubroutineType(types: !17137)
!17137 = !{null, !17103, !17090}
!17138 = !{!17139, !17134}
!17139 = !DILocalVariable(name: "l", arg: 1, scope: !17135, file: !316, line: 189, type: !17103)
!17140 = !DILocation(line: 0, scope: !17135, inlinedAt: !17141)
!17141 = distinct !DILocation(line: 106, column: 2, scope: !17074)
!17142 = !DILocalVariable(name: "key", arg: 1, scope: !17143, file: !5704, line: 84, type: !32)
!17143 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5704, file: !5704, line: 84, type: !5715, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17144)
!17144 = !{!17142}
!17145 = !DILocation(line: 0, scope: !17143, inlinedAt: !17146)
!17146 = distinct !DILocation(line: 215, column: 2, scope: !17135, inlinedAt: !17141)
!17147 = !DILocation(line: 95, column: 2, scope: !17143, inlinedAt: !17146)
!17148 = !{i64 1949523}
!17149 = !DILocation(line: 107, column: 2, scope: !17074)
!17150 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2485, file: !2485, line: 110, type: !17151, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17153)
!17151 = !DISubroutineType(types: !17152)
!17152 = !{!102, !17007, !204, !17077}
!17153 = !{!17154, !17155, !17156, !17157}
!17154 = !DILocalVariable(name: "h", arg: 1, scope: !17150, file: !2485, line: 110, type: !17007)
!17155 = !DILocalVariable(name: "bytes", arg: 2, scope: !17150, file: !2485, line: 110, type: !204)
!17156 = !DILocalVariable(name: "timeout", arg: 3, scope: !17150, file: !2485, line: 110, type: !17077)
!17157 = !DILocalVariable(name: "ret", scope: !17150, file: !2485, line: 114, type: !102)
!17158 = !DILocation(line: 0, scope: !17150)
!17159 = !DILocation(line: 114, column: 14, scope: !17150)
!17160 = !DILocation(line: 118, column: 2, scope: !17150)
!17161 = distinct !DISubprogram(name: "k_heap_free", scope: !2485, file: !2485, line: 121, type: !17162, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17164)
!17162 = !DISubroutineType(types: !17163)
!17163 = !{null, !17007, !102}
!17164 = !{!17165, !17166, !17167}
!17165 = !DILocalVariable(name: "h", arg: 1, scope: !17161, file: !2485, line: 121, type: !17007)
!17166 = !DILocalVariable(name: "mem", arg: 2, scope: !17161, file: !2485, line: 121, type: !102)
!17167 = !DILocalVariable(name: "key", scope: !17161, file: !2485, line: 123, type: !17090)
!17168 = !DILocation(line: 0, scope: !17161)
!17169 = !DILocation(line: 0, scope: !17100, inlinedAt: !17170)
!17170 = distinct !DILocation(line: 123, column: 25, scope: !17161)
!17171 = !DILocation(line: 55, column: 2, scope: !17109, inlinedAt: !17172)
!17172 = distinct !DILocation(line: 145, column: 10, scope: !17100, inlinedAt: !17170)
!17173 = !DILocation(line: 0, scope: !17109, inlinedAt: !17172)
!17174 = !DILocation(line: 125, column: 20, scope: !17161)
!17175 = !DILocation(line: 125, column: 2, scope: !17161)
!17176 = !DILocation(line: 128, column: 60, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17161, file: !2485, line: 128, column: 6)
!17178 = !DILocation(line: 128, column: 43, scope: !17177)
!17179 = !DILocation(line: 128, column: 68, scope: !17177)
!17180 = !DILocation(line: 128, column: 6, scope: !17161)
!17181 = !DILocation(line: 123, column: 41, scope: !17161)
!17182 = !DILocation(line: 129, column: 3, scope: !17183)
!17183 = distinct !DILexicalBlock(scope: !17177, file: !2485, line: 128, column: 74)
!17184 = !DILocation(line: 130, column: 2, scope: !17183)
!17185 = !DILocation(line: 0, scope: !17135, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 131, column: 3, scope: !17187)
!17187 = distinct !DILexicalBlock(scope: !17177, file: !2485, line: 130, column: 9)
!17188 = !DILocation(line: 0, scope: !17143, inlinedAt: !17189)
!17189 = distinct !DILocation(line: 215, column: 2, scope: !17135, inlinedAt: !17186)
!17190 = !DILocation(line: 95, column: 2, scope: !17143, inlinedAt: !17189)
!17191 = !DILocation(line: 133, column: 1, scope: !17161)
