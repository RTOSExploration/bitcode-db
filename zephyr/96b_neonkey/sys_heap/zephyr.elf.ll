; ModuleID = 'build/96b_neonkey/sys_heap/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, i32, i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.sys_memory_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.sys_memory_stats = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.z_heap_stress_result = type { i32, i32, i32, i64 }
%struct.z_heap_stress_rec = type { i8* (i8*, i32)*, void (i8*, i8*)*, i8*, i32, %struct.z_heap_stress_block*, i32, i32, i32, i32 }
%struct.z_heap_stress_block = type { i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231352 to i8*), void (i8*)* inttoptr (i32 134229507 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231352 to i8*), void (i8*)* inttoptr (i32 134229487 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231352 to i8*), void (i8*)* inttoptr (i32 134229477 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231352 to i8*), void (i8*)* inttoptr (i32 134229577 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231352 to i8*), void (i8*)* inttoptr (i32 134229567 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231352 to i8*), void (i8*)* inttoptr (i32 134229557 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231352 to i8*), void (i8*)* inttoptr (i32 134229547 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231352 to i8*), void (i8*)* inttoptr (i32 134229537 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231352 to i8*), void (i8*)* inttoptr (i32 134229527 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231352 to i8*), void (i8*)* inttoptr (i32 134229517 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231352 to i8*), void (i8*)* inttoptr (i32 134229497 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [21 x i8] c"System heap sample\0A\0A\00", align 1
@heap = internal global %struct.sys_heap zeroinitializer, align 4, !dbg !25
@heap_mem = internal global [256 x i8] zeroinitializer, align 1, !dbg !105
@.str.1 = private unnamed_addr constant [58 x i8] c"allocated %zu, free %zu, max allocated %zu, heap size %u\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !122
@.str.24 = private unnamed_addr constant [45 x i8] c"Heap at %p contains %d units in %d buckets\0A\0A\00", align 1
@.str.1.25 = private unnamed_addr constant [187 x i8] c"  bucket#    min units        total      largest      largest\0A             threshold       chunks      (units)      (bytes)\0A  -----------------------------------------------------------\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"%9d %12d %12d %12d %12zd\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"\0AChunk dump:\0A\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"chunk %4d: [%c] size=%-4d left=%-4d right=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [72 x i8] c"\0A%zd free bytes, %zd allocated bytes, overhead = %zd bytes (%zd.%zd%%)\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 123456789, align 8, !dbg !131
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [37 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !165
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !220
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !249
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !255
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !395
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !431
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.52, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !441
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !446
@.str.51 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.52 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !466
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !639
@.str.53 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !600
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !583
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !556
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !572
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !602
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !616
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !618
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !620
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !622
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !624
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !626
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !628
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !630
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !632
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !634
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !644
@.str.55 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !671
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !767
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !756
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !808
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !664
@.str.64 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !874
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1151
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1121
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1107
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1052
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !662
@.str.1.65 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1153
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1125
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1123
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1069
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !660
@.str.2.66 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1166
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1129
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1127
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1075
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !658
@.str.3.67 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1168
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1133
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1131
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1081
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !656
@.str.4.68 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1170
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1137
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1135
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1087
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !654
@.str.5.69 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1172
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1141
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1139
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1093
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !652
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1174
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1145
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1143
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1099
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !650
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1176
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1149
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1147
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1105
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !666
@.str.75 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1178
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1369
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1330
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1371
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1321
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1323
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1332
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1340
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1363
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1366
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !740
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1393
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1502
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1504
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1500
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1471
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1506
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1050
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.65, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1067
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.66, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1073
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1079
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.68, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1085
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.69, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1091
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1097
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1103
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1596
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1638
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1641
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1648
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1655
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1865
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1874
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1881
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1886
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.122 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.125, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.126, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.127, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.128, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.129, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.123, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.130, i32 0, i32 0)], align 4, !dbg !1914
@.str.124 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.125 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.126 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.127 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.128 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.129 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.123 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.130 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2026
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2039
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2147
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2150
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2152
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1879
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1876
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2154
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2190
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1743
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2188
@.str.183 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2800 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !2804, !srcloc !2805
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !2806, !srcloc !2807
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !2808, !srcloc !2809
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !2810, !srcloc !2811
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2812, !srcloc !2813
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !2814, !srcloc !2815
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !2816, !srcloc !2817
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !2818, !srcloc !2819
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !2820, !srcloc !2821
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !2822, !srcloc !2823
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !2824, !srcloc !2825
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !2826, !srcloc !2827
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !2828, !srcloc !2829
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !2830, !srcloc !2831
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !2832, !srcloc !2833
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !2834, !srcloc !2835
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !2836, !srcloc !2837
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !2838, !srcloc !2839
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2840, !srcloc !2841
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !2842, !srcloc !2843
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !2844, !srcloc !2845
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2846, !srcloc !2847
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !2848, !srcloc !2849
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2850, !srcloc !2851
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !2852, !srcloc !2853
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !2854, !srcloc !2855
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !2856, !srcloc !2857
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !2858, !srcloc !2861
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !2862, !srcloc !2863
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2864, !srcloc !2865
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2866, !srcloc !2867
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2868, !srcloc !2869
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2870, !srcloc !2871
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !2872, !srcloc !2873
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !2874, !srcloc !2875
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !2876, !srcloc !2877
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !2878, !srcloc !2879
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2880, !srcloc !2881
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2882, !srcloc !2883
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2884, !srcloc !2885
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2886, !srcloc !2887
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2888, !srcloc !2889
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2890, !srcloc !2891
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !2892, !srcloc !2893
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !2894, !srcloc !2895
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !2896, !srcloc !2897
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !2898, !srcloc !2899
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !2900, !srcloc !2901
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !2902, !srcloc !2903
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2904, !srcloc !2905
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !2906, !srcloc !2907
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2908, !srcloc !2909
  ret void, !dbg !2910
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2913 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0)) #25, !dbg !2916
  tail call void @sys_heap_init(%struct.sys_heap* noundef nonnull @heap, i8* noundef getelementptr inbounds ([256 x i8], [256 x i8]* @heap_mem, i32 0, i32 0), i32 noundef 256) #25, !dbg !2917
  tail call void @print_sys_memory_stats() #26, !dbg !2918
  %1 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull @heap, i32 noundef 150) #25, !dbg !2919
  call void @llvm.dbg.value(metadata i8* %1, metadata !2915, metadata !DIExpression()), !dbg !2920
  tail call void @print_sys_memory_stats() #26, !dbg !2921
  %2 = tail call i8* @sys_heap_aligned_realloc(%struct.sys_heap* noundef nonnull @heap, i8* noundef %1, i32 noundef 0, i32 noundef 100) #25, !dbg !2922
  call void @llvm.dbg.value(metadata i8* %2, metadata !2915, metadata !DIExpression()), !dbg !2920
  tail call void @print_sys_memory_stats() #26, !dbg !2923
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull @heap, i8* noundef %2) #25, !dbg !2924
  tail call void @print_sys_memory_stats() #26, !dbg !2925
  ret void, !dbg !2926
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_sys_memory_stats() local_unnamed_addr #1 !dbg !2927 {
  %1 = alloca %struct.sys_memory_stats, align 4
  %2 = bitcast %struct.sys_memory_stats* %1 to i8*, !dbg !2936
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #24, !dbg !2936
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %1, metadata !2929, metadata !DIExpression()), !dbg !2937
  %3 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef nonnull @heap, %struct.sys_memory_stats* noundef nonnull %1) #25, !dbg !2938
  %4 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !2939
  %5 = load i32, i32* %4, align 4, !dbg !2939
  %6 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !2940
  %7 = load i32, i32* %6, align 4, !dbg !2940
  %8 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !2941
  %9 = load i32, i32* %8, align 4, !dbg !2941
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef 256) #25, !dbg !2942
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %2) #24, !dbg !2943
  ret void, !dbg !2943
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2944 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2946, metadata !DIExpression()), !dbg !2947
  ret i32 0, !dbg !2948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !2949 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2953, metadata !DIExpression()), !dbg !2954
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2955
  ret void, !dbg !2956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !2957 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2960
  ret i8* %1, !dbg !2961
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2962 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2974, metadata !DIExpression()), !dbg !2983
  call void @llvm.dbg.value(metadata i8* %0, metadata !2973, metadata !DIExpression()), !dbg !2983
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !2984
  ret void, !dbg !2986
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !2987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2991, metadata !DIExpression()), !dbg !2993
  call void @llvm.dbg.value(metadata i8* %1, metadata !2992, metadata !DIExpression()), !dbg !2993
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2994
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !2994
  ret i32 %4, !dbg !2995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !2996 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3008, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3005, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i8* %1, metadata !3006, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i8* %2, metadata !3007, metadata !DIExpression()), !dbg !3009
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3010
  ret void, !dbg !3011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3012 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3016, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata i32 %1, metadata !3017, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata i32 0, metadata !3018, metadata !DIExpression()), !dbg !3019
  %3 = icmp eq i32 %1, 0, !dbg !3020
  br i1 %3, label %13, label %4, !dbg !3023

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3018, metadata !DIExpression()), !dbg !3019
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3024
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3026
  %8 = load i8, i8* %7, align 1, !dbg !3026
  %9 = zext i8 %8 to i32, !dbg !3026
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3024
  %11 = add nuw i32 %5, 1, !dbg !3027
  call void @llvm.dbg.value(metadata i32 %11, metadata !3018, metadata !DIExpression()), !dbg !3019
  %12 = icmp eq i32 %11, %1, !dbg !3020
  br i1 %12, label %13, label %4, !dbg !3023, !llvm.loop !3028

13:                                               ; preds = %4, %2
  ret void, !dbg !3030
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3031 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3035, metadata !DIExpression()), !dbg !3037
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3038
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3038
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3036, metadata !DIExpression()), !dbg !3039
  call void @llvm.va_start(i8* nonnull %3), !dbg !3040
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3041
  %5 = load i32, i32* %4, align 4, !dbg !3041
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3041
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3041
  call void @llvm.va_end(i8* nonnull %3), !dbg !3042
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3043
  ret void, !dbg !3043
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3044 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3048, metadata !DIExpression()), !dbg !3053
  call void @llvm.dbg.value(metadata i32 %1, metadata !3049, metadata !DIExpression()), !dbg !3053
  call void @llvm.dbg.value(metadata i8* %2, metadata !3050, metadata !DIExpression()), !dbg !3053
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3054
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3054
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3051, metadata !DIExpression()), !dbg !3055
  call void @llvm.va_start(i8* nonnull %5), !dbg !3056
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3057
  %7 = load i32, i32* %6, align 4, !dbg !3057
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3057
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3057
  call void @llvm.dbg.value(metadata i32 %9, metadata !3052, metadata !DIExpression()), !dbg !3053
  call void @llvm.va_end(i8* nonnull %5), !dbg !3058
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3059
  ret i32 %9, !dbg !3060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3061 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3068, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i8* %0, metadata !3065, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 %1, metadata !3066, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i8* %2, metadata !3067, metadata !DIExpression()), !dbg !3075
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3076
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3076
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3069, metadata !DIExpression()), !dbg !3077
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3078
  store i8* %0, i8** %7, align 4, !dbg !3078
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3078
  store i32 %1, i32* %8, align 4, !dbg !3078
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3078
  store i32 0, i32* %9, align 4, !dbg !3078
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3079
  %10 = load i32, i32* %9, align 4, !dbg !3080
  %11 = load i32, i32* %8, align 4, !dbg !3082
  %12 = icmp slt i32 %10, %11, !dbg !3083
  br i1 %12, label %13, label %15, !dbg !3084

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3085
  store i8 0, i8* %14, align 1, !dbg !3087
  br label %15, !dbg !3088

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3089
  ret i32 %10, !dbg !3090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3096, metadata !DIExpression()), !dbg !3098
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3097, metadata !DIExpression()), !dbg !3098
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3099
  %4 = load i8*, i8** %3, align 4, !dbg !3099
  %5 = icmp eq i8* %4, null, !dbg !3101
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3102
  br i1 %5, label %12, label %8, !dbg !3103

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3104
  %10 = load i32, i32* %9, align 4, !dbg !3104
  %11 = icmp slt i32 %7, %10, !dbg !3105
  br i1 %11, label %15, label %12, !dbg !3106

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3107
  %14 = add nsw i32 %7, 1, !dbg !3109
  store i32 %14, i32* %13, align 4, !dbg !3109
  br label %25, !dbg !3110

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3111
  %17 = icmp eq i32 %7, %16, !dbg !3113
  br i1 %17, label %18, label %21, !dbg !3114

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3115
  store i32 %19, i32* %6, align 4, !dbg !3115
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3117
  store i8 0, i8* %20, align 1, !dbg !3118
  br label %25, !dbg !3119

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3120
  %23 = add nsw i32 %7, 1, !dbg !3122
  store i32 %23, i32* %6, align 4, !dbg !3122
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3123
  store i8 %22, i8* %24, align 1, !dbg !3124
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3125
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3126 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3136, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.value(metadata i8* %1, metadata !3137, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.value(metadata i8* %2, metadata !3138, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.value(metadata i8* %3, metadata !3139, metadata !DIExpression()), !dbg !3140
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3141
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3142
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3143
  unreachable, !dbg !3144
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3145 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3249
  ret %struct.k_thread* %1, !dbg !3250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3251 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3256, metadata !DIExpression()), !dbg !3257
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3258, !srcloc !3260
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3261
  ret void, !dbg !3262
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3263 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3264, !srcloc !3266
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3267
  ret %struct.k_thread* %1, !dbg !3268
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3269 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3280, metadata !DIExpression()), !dbg !3284
  call void @llvm.dbg.value(metadata i8* %1, metadata !3281, metadata !DIExpression()), !dbg !3284
  %3 = icmp eq i8* %1, null, !dbg !3285
  br i1 %3, label %13, label %4, !dbg !3287

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3288
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3288
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3282, metadata !DIExpression()), !dbg !3284
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3289, !range !3290
  call void @llvm.dbg.value(metadata i32 %7, metadata !3283, metadata !DIExpression()), !dbg !3284
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3291
  %8 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3292, !range !3293
  %9 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %8) #26, !dbg !3294
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3295
  %11 = load i32, i32* %10, align 4, !dbg !3296
  %12 = sub i32 %11, %9, !dbg !3296
  store i32 %12, i32* %10, align 4, !dbg !3296
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3297
  br label %13

13:                                               ; preds = %2, %4
  ret void, !dbg !3298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3299 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3303, metadata !DIExpression()), !dbg !3307
  call void @llvm.dbg.value(metadata i8* %1, metadata !3304, metadata !DIExpression()), !dbg !3307
  call void @llvm.dbg.value(metadata i8* %1, metadata !3305, metadata !DIExpression()), !dbg !3307
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3308
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3306, metadata !DIExpression()), !dbg !3307
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3309
  %5 = ptrtoint i8* %4 to i32, !dbg !3310
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3310
  %7 = sub i32 %5, %6, !dbg !3310
  %8 = lshr i32 %7, 3, !dbg !3311
  ret i32 %8, !dbg !3312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3313 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3317, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.value(metadata i32 %1, metadata !3318, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.value(metadata i1 %2, metadata !3319, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3322
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3323
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3320, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3321, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3322
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3324
  %6 = bitcast i8* %5 to i16*, !dbg !3324
  %7 = load i16, i16* %6, align 2, !dbg !3324
  %8 = and i16 %7, -2, !dbg !3328
  %9 = zext i1 %2 to i16, !dbg !3328
  %10 = or i16 %8, %9, !dbg !3328
  store i16 %10, i16* %6, align 2, !dbg !3324
  ret void, !dbg !3329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3330 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3335, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i32 %1, metadata !3336, metadata !DIExpression()), !dbg !3337
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3338
  %4 = lshr i32 %3, 1, !dbg !3339
  ret i32 %4, !dbg !3340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3341 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3345, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i32 %1, metadata !3346, metadata !DIExpression()), !dbg !3347
  %3 = shl i32 %1, 3, !dbg !3348
  %4 = add i32 %3, -4, !dbg !3349
  ret i32 %4, !dbg !3350
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3351 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3355, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i32 %1, metadata !3356, metadata !DIExpression()), !dbg !3357
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3358
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3360
  br i1 %4, label %7, label %5, !dbg !3361

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3362
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3364
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3365
  br label %7, !dbg !3366

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3367, !range !3369
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3370
  br i1 %9, label %13, label %10, !dbg !3371

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3372
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3374, !range !3369
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3375
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3376
  call void @llvm.dbg.value(metadata i32 %12, metadata !3356, metadata !DIExpression()), !dbg !3357
  br label %13, !dbg !3377

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3356, metadata !DIExpression()), !dbg !3357
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3378
  ret void, !dbg !3379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3380 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3384, metadata !DIExpression()), !dbg !3386
  call void @llvm.dbg.value(metadata i32 %1, metadata !3385, metadata !DIExpression()), !dbg !3386
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3387
  %4 = add i32 %3, %1, !dbg !3388
  ret i32 %4, !dbg !3389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3390 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3394, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i32 %1, metadata !3395, metadata !DIExpression()), !dbg !3396
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3397
  %4 = and i32 %3, 1, !dbg !3398
  %5 = icmp ne i32 %4, 0, !dbg !3397
  ret i1 %5, !dbg !3399
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3400 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3402, metadata !DIExpression()), !dbg !3407
  call void @llvm.dbg.value(metadata i32 %1, metadata !3403, metadata !DIExpression()), !dbg !3407
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3408, !range !3293
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3409
  call void @llvm.dbg.value(metadata i32 %4, metadata !3404, metadata !DIExpression()), !dbg !3410
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3411
  ret void, !dbg !3412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3413 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3417, metadata !DIExpression()), !dbg !3421
  call void @llvm.dbg.value(metadata i32 %1, metadata !3418, metadata !DIExpression()), !dbg !3421
  call void @llvm.dbg.value(metadata i32 %2, metadata !3419, metadata !DIExpression()), !dbg !3421
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3422
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3423
  %6 = add i32 %5, %4, !dbg !3424
  call void @llvm.dbg.value(metadata i32 %6, metadata !3420, metadata !DIExpression()), !dbg !3421
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3425
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3426
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3427
  ret void, !dbg !3428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3429 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3431, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata i32 %1, metadata !3432, metadata !DIExpression()), !dbg !3433
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3434
  %4 = sub i32 %1, %3, !dbg !3435
  ret i32 %4, !dbg !3436
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3437 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3439, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.value(metadata i32 %1, metadata !3440, metadata !DIExpression()), !dbg !3444
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3445, !range !3293
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3446
  call void @llvm.dbg.value(metadata i32 %4, metadata !3441, metadata !DIExpression()), !dbg !3447
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3448
  ret void, !dbg !3449
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3450 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3454, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i32 %1, metadata !3455, metadata !DIExpression()), !dbg !3457
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3458
  %4 = add i32 %1, 1, !dbg !3459
  %5 = sub i32 %4, %3, !dbg !3460
  call void @llvm.dbg.value(metadata i32 %5, metadata !3456, metadata !DIExpression()), !dbg !3457
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3461, !range !3462
  %7 = sub nsw i32 31, %6, !dbg !3463
  ret i32 %7, !dbg !3464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3465 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3469, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.value(metadata i32 %1, metadata !3470, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.value(metadata i32 %2, metadata !3471, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3472, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3478
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, i32 0, !dbg !3479
  %5 = load i32, i32* %4, align 4, !dbg !3479
  %6 = icmp eq i32 %5, 0, !dbg !3480
  br i1 %6, label %7, label %12, !dbg !3481

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3482
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3484
  %10 = load i32, i32* %9, align 4, !dbg !3485
  %11 = or i32 %10, %8, !dbg !3485
  store i32 %11, i32* %9, align 4, !dbg !3485
  store i32 %1, i32* %4, align 4, !dbg !3486
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3487
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3488
  br label %14, !dbg !3489

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3474, metadata !DIExpression()), !dbg !3490
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3491, !range !3492
  call void @llvm.dbg.value(metadata i32 %13, metadata !3477, metadata !DIExpression()), !dbg !3490
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3493
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3494
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3495
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3496
  br label %14

14:                                               ; preds = %12, %7
  %15 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3497, !range !3293
  %16 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %15) #26, !dbg !3498
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3499
  %18 = load i32, i32* %17, align 4, !dbg !3500
  %19 = add i32 %18, %16, !dbg !3500
  store i32 %19, i32* %17, align 4, !dbg !3500
  ret void, !dbg !3501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3502 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3504, metadata !DIExpression()), !dbg !3507
  call void @llvm.dbg.value(metadata i32 %1, metadata !3505, metadata !DIExpression()), !dbg !3507
  call void @llvm.dbg.value(metadata i32 %2, metadata !3506, metadata !DIExpression()), !dbg !3507
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3508
  ret void, !dbg !3509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3510 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3512, metadata !DIExpression()), !dbg !3515
  call void @llvm.dbg.value(metadata i32 %1, metadata !3513, metadata !DIExpression()), !dbg !3515
  call void @llvm.dbg.value(metadata i32 %2, metadata !3514, metadata !DIExpression()), !dbg !3515
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3516
  ret void, !dbg !3517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3518 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3520, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.value(metadata i32 %1, metadata !3521, metadata !DIExpression()), !dbg !3522
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3523
  ret i32 %3, !dbg !3524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3525 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3529, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.value(metadata i32 %1, metadata !3530, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.value(metadata i32 %2, metadata !3531, metadata !DIExpression()), !dbg !3534
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3535
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3532, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3534
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3534
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3536
  call void @llvm.dbg.value(metadata i8* %5, metadata !3533, metadata !DIExpression()), !dbg !3534
  %6 = bitcast i8* %5 to i16*, !dbg !3537
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3540
  %8 = load i16, i16* %7, align 2, !dbg !3540
  %9 = zext i16 %8 to i32, !dbg !3540
  ret i32 %9, !dbg !3541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3542 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3546, metadata !DIExpression()), !dbg !3547
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3548
  ret %struct.chunk_unit_t* %2, !dbg !3549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3550 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3554, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.value(metadata i32 %1, metadata !3555, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.value(metadata i32 %2, metadata !3556, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.value(metadata i32 %3, metadata !3557, metadata !DIExpression()), !dbg !3560
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3561
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3558, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3560
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3562
  call void @llvm.dbg.value(metadata i8* %6, metadata !3559, metadata !DIExpression()), !dbg !3560
  %7 = trunc i32 %3 to i16, !dbg !3563
  %8 = bitcast i8* %6 to i16*, !dbg !3566
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3567
  store i16 %7, i16* %9, align 2, !dbg !3568
  ret void, !dbg !3569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3570 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3574, metadata !DIExpression()), !dbg !3575
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3576
  ret i32 %2, !dbg !3577
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3578 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3582, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i32 %1, metadata !3583, metadata !DIExpression()), !dbg !3584
  %3 = add i32 %1, 4, !dbg !3585
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3586
  ret i32 %4, !dbg !3587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3592, metadata !DIExpression()), !dbg !3593
  %2 = add i32 %0, 7, !dbg !3594
  %3 = lshr i32 %2, 3, !dbg !3595
  ret i32 %3, !dbg !3596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3597 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3601, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i32 %1, metadata !3602, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i32 %2, metadata !3603, metadata !DIExpression()), !dbg !3604
  %4 = shl i32 %2, 1, !dbg !3605
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !3606
  ret void, !dbg !3607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3608 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3610, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata i32 %1, metadata !3611, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata i32 %2, metadata !3612, metadata !DIExpression()), !dbg !3613
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !3614
  ret void, !dbg !3615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3616 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3618, metadata !DIExpression()), !dbg !3626
  call void @llvm.dbg.value(metadata i32 %1, metadata !3619, metadata !DIExpression()), !dbg !3626
  call void @llvm.dbg.value(metadata i32 %2, metadata !3620, metadata !DIExpression()), !dbg !3626
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, !dbg !3627
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3621, metadata !DIExpression()), !dbg !3626
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3628
  %6 = icmp eq i32 %5, %1, !dbg !3629
  br i1 %6, label %7, label %14, !dbg !3630

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3631
  %9 = xor i32 %8, -1, !dbg !3633
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3634
  %11 = load i32, i32* %10, align 4, !dbg !3635
  %12 = and i32 %11, %9, !dbg !3635
  store i32 %12, i32* %10, align 4, !dbg !3635
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3636
  store i32 0, i32* %13, align 4, !dbg !3637
  br label %17, !dbg !3638

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3639
  call void @llvm.dbg.value(metadata i32 %15, metadata !3622, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %5, metadata !3625, metadata !DIExpression()), !dbg !3640
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3641
  store i32 %5, i32* %16, align 4, !dbg !3642
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !3643
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !3644
  br label %17

17:                                               ; preds = %14, %7
  %18 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3645, !range !3293
  %19 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %18) #26, !dbg !3646
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3647
  %21 = load i32, i32* %20, align 4, !dbg !3648
  %22 = sub i32 %21, %19, !dbg !3648
  store i32 %22, i32* %20, align 4, !dbg !3648
  ret void, !dbg !3649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3650 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3652, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata i32 %1, metadata !3653, metadata !DIExpression()), !dbg !3654
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !3655
  ret i32 %3, !dbg !3656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3657 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3661, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata i8* %1, metadata !3662, metadata !DIExpression()), !dbg !3668
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3669
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3669
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3663, metadata !DIExpression()), !dbg !3668
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !3670
  call void @llvm.dbg.value(metadata i32 %5, metadata !3664, metadata !DIExpression()), !dbg !3668
  %6 = ptrtoint i8* %1 to i32, !dbg !3671
  call void @llvm.dbg.value(metadata i32 %6, metadata !3665, metadata !DIExpression()), !dbg !3668
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !3672
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3672
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %9, metadata !3666, metadata !DIExpression()), !dbg !3668
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !3674
  %11 = shl i32 %10, 3, !dbg !3675
  call void @llvm.dbg.value(metadata i32 %11, metadata !3667, metadata !DIExpression()), !dbg !3668
  %12 = sub i32 %9, %6, !dbg !3676
  %13 = add i32 %12, %11, !dbg !3677
  ret i32 %13, !dbg !3678
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3679 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3683, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.value(metadata i32 %1, metadata !3684, metadata !DIExpression()), !dbg !3689
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3690
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3690
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3685, metadata !DIExpression()), !dbg !3689
  %5 = icmp eq i32 %1, 0, !dbg !3691
  br i1 %5, label %21, label %6, !dbg !3693

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3694
  br i1 %7, label %21, label %8, !dbg !3695

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3696, !range !3290
  call void @llvm.dbg.value(metadata i32 %9, metadata !3687, metadata !DIExpression()), !dbg !3689
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %10, metadata !3688, metadata !DIExpression()), !dbg !3689
  %11 = icmp eq i32 %10, 0, !dbg !3698
  br i1 %11, label %21, label %12, !dbg !3700

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3701
  %14 = icmp ugt i32 %13, %9, !dbg !3703
  br i1 %14, label %15, label %17, !dbg !3704

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !3705
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !3707
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !3708
  br label %17, !dbg !3709

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !3710
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3711
  call void @llvm.dbg.value(metadata i8* %18, metadata !3686, metadata !DIExpression()), !dbg !3689
  %19 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3712, !range !3293
  %20 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %4, i32 noundef %19) #26, !dbg !3713, !range !3714
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %4, i32 noundef %20) #26, !dbg !3715
  br label %21, !dbg !3716

21:                                               ; preds = %17, %8, %2, %6
  %22 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !3689
  ret i8* %22, !dbg !3717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3718 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3722, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %1, metadata !3723, metadata !DIExpression()), !dbg !3724
  %3 = lshr i32 %1, 3, !dbg !3725
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3726
  %5 = load i32, i32* %4, align 4, !dbg !3726
  %6 = icmp uge i32 %3, %5, !dbg !3727
  ret i1 %6, !dbg !3728
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3729 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3733, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata i32 %1, metadata !3734, metadata !DIExpression()), !dbg !3748
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3749
  call void @llvm.dbg.value(metadata i32 %3, metadata !3735, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3736, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3748
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %3, i32 0, !dbg !3750
  %5 = load i32, i32* %4, align 4, !dbg !3750
  %6 = icmp eq i32 %5, 0, !dbg !3751
  br i1 %6, label %19, label %7, !dbg !3752

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3753
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3754
  call void @llvm.dbg.value(metadata i32 %9, metadata !3740, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i32 %8, metadata !3741, metadata !DIExpression()), !dbg !3755
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3756
  %11 = icmp ult i32 %10, %1, !dbg !3758
  br i1 %11, label %13, label %12, !dbg !3759

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !3760
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3762
  store i32 %14, i32* %4, align 4, !dbg !3763
  %15 = add nsw i32 %9, -1, !dbg !3764
  call void @llvm.dbg.value(metadata i32 %15, metadata !3740, metadata !DIExpression()), !dbg !3754
  %16 = icmp eq i32 %15, 0, !dbg !3764
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3765
  br i1 %18, label %19, label %7, !dbg !3765, !llvm.loop !3766

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3769
  %21 = load i32, i32* %20, align 4, !dbg !3769
  %22 = add nsw i32 %3, 1, !dbg !3770
  %23 = shl nsw i32 -1, %22, !dbg !3770
  %24 = and i32 %21, %23, !dbg !3771
  call void @llvm.dbg.value(metadata i32 %24, metadata !3743, metadata !DIExpression()), !dbg !3748
  %25 = icmp eq i32 %24, 0, !dbg !3772
  br i1 %25, label %30, label %26, !dbg !3773

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3774, !range !3462
  call void @llvm.dbg.value(metadata i32 %27, metadata !3744, metadata !DIExpression()), !dbg !3775
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %27, i32 0, !dbg !3776
  %29 = load i32, i32* %28, align 4, !dbg !3776
  call void @llvm.dbg.value(metadata i32 %29, metadata !3747, metadata !DIExpression()), !dbg !3775
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !3777
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3748
  ret i32 %31, !dbg !3778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3779 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3781, metadata !DIExpression()), !dbg !3787
  call void @llvm.dbg.value(metadata i32 %1, metadata !3782, metadata !DIExpression()), !dbg !3787
  call void @llvm.dbg.value(metadata i32 %2, metadata !3783, metadata !DIExpression()), !dbg !3787
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3788
  call void @llvm.dbg.value(metadata i32 %4, metadata !3784, metadata !DIExpression()), !dbg !3787
  %5 = sub i32 %2, %1, !dbg !3789
  call void @llvm.dbg.value(metadata i32 %5, metadata !3785, metadata !DIExpression()), !dbg !3787
  %6 = sub i32 %4, %5, !dbg !3790
  call void @llvm.dbg.value(metadata i32 %6, metadata !3786, metadata !DIExpression()), !dbg !3787
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3791
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !3792
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !3793
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3794
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3795
  ret void, !dbg !3796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3797 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3801, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.value(metadata i32 %1, metadata !3802, metadata !DIExpression()), !dbg !3805
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3806
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3803, metadata !DIExpression()), !dbg !3805
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3807
  call void @llvm.dbg.value(metadata i8* %4, metadata !3804, metadata !DIExpression()), !dbg !3805
  ret i8* %4, !dbg !3808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @increase_allocated_bytes(%struct.z_heap* nocapture noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3809 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3813, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 %1, metadata !3814, metadata !DIExpression()), !dbg !3815
  %3 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 4, !dbg !3816
  %4 = load i32, i32* %3, align 4, !dbg !3817
  %5 = add i32 %4, %1, !dbg !3817
  store i32 %5, i32* %3, align 4, !dbg !3817
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 5, !dbg !3818
  %7 = load i32, i32* %6, align 4, !dbg !3818
  %8 = icmp ugt i32 %7, %5, !dbg !3818
  %9 = select i1 %8, i32 %7, i32 %5, !dbg !3818
  store i32 %9, i32* %6, align 4, !dbg !3819
  ret void, !dbg !3820
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3821 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3825, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i32 %1, metadata !3826, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i32 %2, metadata !3827, metadata !DIExpression()), !dbg !3837
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3838
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !3838
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3828, metadata !DIExpression()), !dbg !3837
  %6 = sub i32 0, %1, !dbg !3839
  %7 = and i32 %6, %1, !dbg !3840
  call void @llvm.dbg.value(metadata i32 %7, metadata !3830, metadata !DIExpression()), !dbg !3837
  %8 = icmp eq i32 %7, %1, !dbg !3841
  br i1 %8, label %13, label %9, !dbg !3843

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !3844
  call void @llvm.dbg.value(metadata i32 %10, metadata !3826, metadata !DIExpression()), !dbg !3837
  %11 = icmp ult i32 %7, 4, !dbg !3846
  %12 = select i1 %11, i32 %7, i32 4, !dbg !3846
  br label %17, !dbg !3846

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !3847
  br i1 %14, label %15, label %17, !dbg !3850

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !3851
  br label %59, !dbg !3853

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3837
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !3854
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3826, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i32 %19, metadata !3829, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i32 %18, metadata !3830, metadata !DIExpression()), !dbg !3837
  %21 = icmp eq i32 %2, 0, !dbg !3855
  br i1 %21, label %59, label %22, !dbg !3857

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !3858
  br i1 %23, label %59, label %24, !dbg !3859

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !3860
  %26 = add i32 %25, %20, !dbg !3861
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !3862, !range !3290
  call void @llvm.dbg.value(metadata i32 %27, metadata !3831, metadata !DIExpression()), !dbg !3837
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !3863
  call void @llvm.dbg.value(metadata i32 %28, metadata !3832, metadata !DIExpression()), !dbg !3837
  %29 = icmp eq i32 %28, 0, !dbg !3864
  br i1 %29, label %59, label %30, !dbg !3866

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3867
  call void @llvm.dbg.value(metadata i8* %31, metadata !3833, metadata !DIExpression()), !dbg !3837
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !3868
  %33 = ptrtoint i8* %32 to i32, !dbg !3868
  %34 = add i32 %20, -1, !dbg !3868
  %35 = add i32 %34, %33, !dbg !3868
  %36 = sub i32 0, %20, !dbg !3868
  %37 = and i32 %35, %36, !dbg !3868
  %38 = inttoptr i32 %37 to i8*, !dbg !3869
  %39 = sub i32 0, %18, !dbg !3870
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !3870
  call void @llvm.dbg.value(metadata i8* %40, metadata !3833, metadata !DIExpression()), !dbg !3837
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !3871
  %42 = ptrtoint i8* %41 to i32, !dbg !3871
  %43 = add i32 %42, 7, !dbg !3871
  %44 = and i32 %43, -8, !dbg !3871
  call void @llvm.dbg.value(metadata i32 %44, metadata !3834, metadata !DIExpression()), !dbg !3837
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %45, metadata !3835, metadata !DIExpression()), !dbg !3837
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !3873
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !3874
  %48 = sub i32 %44, %47, !dbg !3874
  %49 = ashr exact i32 %48, 3, !dbg !3874
  call void @llvm.dbg.value(metadata i32 %49, metadata !3836, metadata !DIExpression()), !dbg !3837
  %50 = icmp ugt i32 %45, %28, !dbg !3875
  br i1 %50, label %51, label %52, !dbg !3877

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !3878
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3880
  br label %52, !dbg !3881

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3882
  %54 = icmp ugt i32 %53, %49, !dbg !3884
  br i1 %54, label %55, label %56, !dbg !3885

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !3886
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !3888
  br label %56, !dbg !3889

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !3890
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3891, !range !3293
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %5, i32 noundef %57) #26, !dbg !3892, !range !3714
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %5, i32 noundef %58) #26, !dbg !3893
  br label %59

59:                                               ; preds = %56, %24, %17, %22, %15
  %60 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3837
  ret i8* %60, !dbg !3894
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !3895 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3899, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i8* %1, metadata !3900, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i32 %2, metadata !3901, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i32 %3, metadata !3902, metadata !DIExpression()), !dbg !3918
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3919
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3919
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3903, metadata !DIExpression()), !dbg !3918
  %7 = icmp eq i8* %1, null, !dbg !3920
  br i1 %7, label %8, label %10, !dbg !3922

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !3923
  br label %65, !dbg !3925

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !3926
  br i1 %11, label %12, label %13, !dbg !3928

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !3929
  br label %65, !dbg !3931

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !3932
  br i1 %14, label %65, label %15, !dbg !3934

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3935, !range !3290
  call void @llvm.dbg.value(metadata i32 %16, metadata !3904, metadata !DIExpression()), !dbg !3918
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3936
  call void @llvm.dbg.value(metadata i32 %17, metadata !3905, metadata !DIExpression()), !dbg !3918
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3937
  %19 = ptrtoint i8* %1 to i32, !dbg !3938
  %20 = ptrtoint i8* %18 to i32, !dbg !3938
  %21 = sub i32 %19, %20, !dbg !3938
  call void @llvm.dbg.value(metadata i32 %21, metadata !3906, metadata !DIExpression()), !dbg !3918
  %22 = add i32 %21, %3, !dbg !3939
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !3940
  call void @llvm.dbg.value(metadata i32 %23, metadata !3907, metadata !DIExpression()), !dbg !3918
  %24 = icmp eq i32 %2, 0, !dbg !3941
  br i1 %24, label %29, label %25, !dbg !3942

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !3943
  %27 = and i32 %26, %19, !dbg !3944
  %28 = icmp eq i32 %27, 0, !dbg !3944
  br i1 %28, label %29, label %55, !dbg !3945

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3946
  %31 = icmp eq i32 %23, %30, !dbg !3947
  br i1 %31, label %65, label %32, !dbg !3948

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !3949
  br i1 %33, label %34, label %41, !dbg !3950

34:                                               ; preds = %32
  %35 = sub i32 %23, %30, !dbg !3951
  %36 = shl i32 %35, 3, !dbg !3953
  %37 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3954
  %38 = load i32, i32* %37, align 4, !dbg !3955
  %39 = add i32 %38, %36, !dbg !3955
  store i32 %39, i32* %37, align 4, !dbg !3955
  %40 = add i32 %23, %16, !dbg !3956
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %40) #26, !dbg !3957
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !3958
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %40) #26, !dbg !3959
  br label %65, !dbg !3960

41:                                               ; preds = %32
  %42 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3961
  br i1 %42, label %55, label %43, !dbg !3962

43:                                               ; preds = %41
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3963
  %45 = add i32 %44, %30, !dbg !3964
  %46 = icmp ult i32 %45, %23, !dbg !3965
  br i1 %46, label %55, label %47, !dbg !3966

47:                                               ; preds = %43
  %48 = sub i32 %23, %30, !dbg !3967
  call void @llvm.dbg.value(metadata i32 %48, metadata !3908, metadata !DIExpression()), !dbg !3968
  %49 = shl i32 %48, 3, !dbg !3969
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %6, i32 noundef %49) #26, !dbg !3970
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3971
  %50 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3972
  %51 = icmp ult i32 %48, %50, !dbg !3974
  br i1 %51, label %52, label %54, !dbg !3975

52:                                               ; preds = %47
  %53 = add i32 %48, %17, !dbg !3976
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %53) #26, !dbg !3978
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !3979
  br label %54, !dbg !3980

54:                                               ; preds = %52, %47
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !3981
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !3982
  br label %65

55:                                               ; preds = %43, %41, %25
  %56 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !3983
  call void @llvm.dbg.value(metadata i8* %56, metadata !3914, metadata !DIExpression()), !dbg !3918
  %57 = icmp eq i8* %56, null, !dbg !3984
  br i1 %57, label %65, label %58, !dbg !3985

58:                                               ; preds = %55
  %59 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3986, !range !3293
  %60 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %59) #26, !dbg !3987
  %61 = sub i32 %60, %21, !dbg !3988
  call void @llvm.dbg.value(metadata i32 %61, metadata !3915, metadata !DIExpression()), !dbg !3989
  %62 = icmp ult i32 %61, %3, !dbg !3990
  %63 = select i1 %62, i32 %61, i32 %3, !dbg !3990
  %64 = tail call i8* @memcpy(i8* noundef nonnull %56, i8* noundef nonnull %1, i32 noundef %63) #25, !dbg !3991
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !3992
  br label %65, !dbg !3993

65:                                               ; preds = %34, %54, %29, %58, %55, %13, %12, %8
  %66 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %54 ], [ %1, %29 ], [ %56, %58 ], [ null, %55 ], !dbg !3918
  ret i8* %66, !dbg !3994
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3995 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3999, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i8* %1, metadata !4000, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i32 %2, metadata !4001, metadata !DIExpression()), !dbg !4010
  %4 = add i32 %2, -4, !dbg !4011
  call void @llvm.dbg.value(metadata i32 %4, metadata !4001, metadata !DIExpression()), !dbg !4010
  %5 = ptrtoint i8* %1 to i32, !dbg !4012
  %6 = add i32 %5, 7, !dbg !4012
  %7 = and i32 %6, -8, !dbg !4012
  call void @llvm.dbg.value(metadata i32 %7, metadata !4002, metadata !DIExpression()), !dbg !4010
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4013
  %9 = ptrtoint i8* %8 to i32, !dbg !4013
  %10 = and i32 %9, -8, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %10, metadata !4003, metadata !DIExpression()), !dbg !4010
  %11 = sub i32 %10, %7, !dbg !4014
  %12 = lshr exact i32 %11, 3, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %12, metadata !4004, metadata !DIExpression()), !dbg !4010
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4016
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4005, metadata !DIExpression()), !dbg !4010
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4017
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4018
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4019
  store i32 %12, i32* %15, align 8, !dbg !4020
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4021
  store i32 0, i32* %16, align 4, !dbg !4022
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, !dbg !4023
  store i32 0, i32* %17, align 8, !dbg !4024
  %18 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 4, !dbg !4025
  store i32 0, i32* %18, align 4, !dbg !4026
  %19 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 5, !dbg !4027
  store i32 0, i32* %19, align 8, !dbg !4028
  %20 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4029
  call void @llvm.dbg.value(metadata i32 %20, metadata !4006, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4010
  %21 = shl i32 %20, 2, !dbg !4030
  %22 = add i32 %21, 32, !dbg !4031
  %23 = tail call fastcc i32 @chunksz(i32 noundef %22) #26, !dbg !4032
  call void @llvm.dbg.value(metadata i32 %23, metadata !4007, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i32 0, metadata !4008, metadata !DIExpression()), !dbg !4033
  %24 = icmp slt i32 %20, 0, !dbg !4034
  br i1 %24, label %25, label %27, !dbg !4036

25:                                               ; preds = %27, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %23) #26, !dbg !4037
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4038
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4039
  %26 = sub i32 %12, %23, !dbg !4040
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %26) #26, !dbg !4041
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %23) #26, !dbg !4042
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4043
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %26) #26, !dbg !4044
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4045
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %23) #26, !dbg !4046
  ret void, !dbg !4047

27:                                               ; preds = %3, %27
  %28 = phi i32 [ %30, %27 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !4008, metadata !DIExpression()), !dbg !4033
  %29 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 6, i32 %28, i32 0, !dbg !4048
  store i32 0, i32* %29, align 4, !dbg !4050
  %30 = add nuw i32 %28, 1, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %30, metadata !4008, metadata !DIExpression()), !dbg !4033
  %31 = icmp eq i32 %28, %20, !dbg !4034
  br i1 %31, label %25, label %27, !dbg !4036, !llvm.loop !4052
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local zeroext i1 @sys_heap_validate(%struct.sys_heap* noundef %0) local_unnamed_addr #12 !dbg !4054 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.sys_memory_stats, align 4
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4078, metadata !DIExpression()), !dbg !4104
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4105
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4105
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4079, metadata !DIExpression()), !dbg !4104
  %7 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef 0) #26, !dbg !4106
  call void @llvm.dbg.value(metadata i32 %7, metadata !4080, metadata !DIExpression()), !dbg !4104
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  call void @llvm.dbg.value(metadata i32 %7, metadata !4080, metadata !DIExpression()), !dbg !4104
  %10 = icmp ult i32 %7, %9, !dbg !4108
  br i1 %10, label %11, label %17, !dbg !4110

11:                                               ; preds = %1, %14
  %12 = phi i32 [ %15, %14 ], [ %7, %1 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !4080, metadata !DIExpression()), !dbg !4104
  %13 = tail call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef nonnull %6, i32 noundef %12) #26, !dbg !4111
  br i1 %13, label %14, label %138, !dbg !4114

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %12) #26, !dbg !4115
  call void @llvm.dbg.value(metadata i32 %15, metadata !4080, metadata !DIExpression()), !dbg !4104
  %16 = icmp ult i32 %15, %9, !dbg !4108
  br i1 %16, label %11, label %17, !dbg !4110, !llvm.loop !4116

17:                                               ; preds = %14, %1
  %18 = phi i32 [ %7, %1 ], [ %15, %14 ], !dbg !4118
  %19 = icmp eq i32 %18, %9, !dbg !4119
  br i1 %19, label %20, label %138, !dbg !4121

20:                                               ; preds = %17
  %21 = bitcast i32* %2 to i8*, !dbg !4122
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4122
  %22 = bitcast i32* %3 to i8*, !dbg !4122
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4122
  %23 = bitcast %struct.sys_memory_stats* %4 to i8*, !dbg !4123
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4123
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %4, metadata !4083, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i32* %2, metadata !4081, metadata !DIExpression(DW_OP_deref)), !dbg !4104
  call void @llvm.dbg.value(metadata i32* %3, metadata !4082, metadata !DIExpression(DW_OP_deref)), !dbg !4104
  call fastcc void @get_alloc_info(%struct.z_heap* noundef nonnull %6, i32* noundef nonnull %2, i32* noundef nonnull %3) #26, !dbg !4125
  %24 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef %0, %struct.sys_memory_stats* noundef nonnull %4) #26, !dbg !4126
  %25 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 1, !dbg !4127
  %26 = load i32, i32* %25, align 4, !dbg !4127
  %27 = load i32, i32* %2, align 4, !dbg !4129
  call void @llvm.dbg.value(metadata i32 %27, metadata !4081, metadata !DIExpression()), !dbg !4104
  %28 = icmp eq i32 %26, %27, !dbg !4130
  br i1 %28, label %29, label %136, !dbg !4131

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 0, !dbg !4132
  %31 = load i32, i32* %30, align 4, !dbg !4132
  %32 = load i32, i32* %3, align 4, !dbg !4133
  call void @llvm.dbg.value(metadata i32 %32, metadata !4082, metadata !DIExpression()), !dbg !4104
  %33 = icmp eq i32 %31, %32, !dbg !4134
  br i1 %33, label %34, label %136, !dbg !4135

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 0, metadata !4089, metadata !DIExpression()), !dbg !4136
  %35 = load i32, i32* %8, align 4, !dbg !4137
  %36 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %35) #26, !dbg !4138
  %37 = icmp slt i32 %36, 0, !dbg !4139
  br i1 %37, label %84, label %38, !dbg !4140

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 2
  br label %40, !dbg !4140

40:                                               ; preds = %38, %79
  %41 = phi i32 [ 0, %38 ], [ %80, %79 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !4089, metadata !DIExpression()), !dbg !4136
  %42 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %41, i32 0, !dbg !4141
  %43 = load i32, i32* %42, align 4, !dbg !4141
  call void @llvm.dbg.value(metadata i32 %43, metadata !4091, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.value(metadata i32 0, metadata !4094, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.value(metadata i32 %43, metadata !4080, metadata !DIExpression()), !dbg !4104
  %44 = icmp eq i32 %43, 0, !dbg !4143
  br i1 %44, label %45, label %50, !dbg !4146

45:                                               ; preds = %40
  %46 = load i32, i32* %39, align 4, !dbg !4147
  %47 = shl nuw i32 1, %41, !dbg !4148
  %48 = and i32 %46, %47, !dbg !4149
  %49 = icmp eq i32 %48, 0, !dbg !4150
  call void @llvm.dbg.value(metadata i1 %71, metadata !4095, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4142
  call void @llvm.dbg.value(metadata i1 %72, metadata !4096, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4142
  br i1 %49, label %76, label %136, !dbg !4151

50:                                               ; preds = %40, %63
  %51 = phi i32 [ %65, %63 ], [ %43, %40 ]
  %52 = phi i32 [ %64, %63 ], [ 0, %40 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4080, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %52, metadata !4094, metadata !DIExpression()), !dbg !4142
  %53 = icmp eq i32 %52, 0, !dbg !4152
  %54 = icmp ne i32 %51, %43, !dbg !4153
  %55 = select i1 %53, i1 true, i1 %54, !dbg !4153
  br i1 %55, label %61, label %56, !dbg !4154

56:                                               ; preds = %50
  %57 = load i32, i32* %39, align 4, !dbg !4147
  %58 = shl nuw i32 1, %41, !dbg !4148
  %59 = and i32 %57, %58, !dbg !4149
  %60 = icmp eq i32 %59, 0, !dbg !4150
  call void @llvm.dbg.value(metadata i1 %71, metadata !4095, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4142
  call void @llvm.dbg.value(metadata i1 %72, metadata !4096, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4142
  br i1 %60, label %136, label %74, !dbg !4151

61:                                               ; preds = %50
  %62 = call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4155
  br i1 %62, label %63, label %136, !dbg !4158

63:                                               ; preds = %61
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %51, i1 noundef zeroext true) #26, !dbg !4159
  %64 = add i32 %52, 1, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %64, metadata !4094, metadata !DIExpression()), !dbg !4142
  %65 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4161
  call void @llvm.dbg.value(metadata i32 %65, metadata !4080, metadata !DIExpression()), !dbg !4104
  %66 = icmp eq i32 %65, 0, !dbg !4143
  br i1 %66, label %67, label %50, !dbg !4146, !llvm.loop !4162

67:                                               ; preds = %63
  %68 = load i32, i32* %39, align 4, !dbg !4147
  %69 = shl nuw i32 1, %41, !dbg !4148
  %70 = and i32 %68, %69, !dbg !4149
  %71 = icmp eq i32 %70, 0, !dbg !4150
  call void @llvm.dbg.value(metadata i1 %71, metadata !4095, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4142
  %72 = icmp ne i32 %64, 0, !dbg !4164
  call void @llvm.dbg.value(metadata i1 %72, metadata !4096, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4142
  %73 = xor i1 %72, %71, !dbg !4165
  br i1 %73, label %74, label %136, !dbg !4151

74:                                               ; preds = %56, %67
  %75 = phi i1 [ %71, %67 ], [ %60, %56 ]
  br i1 %75, label %76, label %79, !dbg !4167

76:                                               ; preds = %45, %74
  %77 = load i32, i32* %42, align 4, !dbg !4169
  %78 = icmp eq i32 %77, 0, !dbg !4170
  br i1 %78, label %79, label %136, !dbg !4171

79:                                               ; preds = %76, %74
  %80 = add nuw nsw i32 %41, 1, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %80, metadata !4089, metadata !DIExpression()), !dbg !4136
  %81 = load i32, i32* %8, align 4, !dbg !4137
  %82 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %81) #26, !dbg !4138
  %83 = icmp slt i32 %41, %82, !dbg !4139
  br i1 %83, label %40, label %84, !dbg !4140, !llvm.loop !4173

84:                                               ; preds = %79, %34
  %85 = phi i32 [ %35, %34 ], [ %81, %79 ], !dbg !4175
  call void @llvm.dbg.value(metadata i32 0, metadata !4097, metadata !DIExpression()), !dbg !4104
  %86 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4178
  call void @llvm.dbg.value(metadata i32 %86, metadata !4080, metadata !DIExpression()), !dbg !4104
  %87 = icmp ult i32 %86, %85, !dbg !4179
  br i1 %87, label %88, label %99, !dbg !4180

88:                                               ; preds = %84, %95
  %89 = phi i32 [ %90, %95 ], [ 0, %84 ]
  %90 = phi i32 [ %96, %95 ], [ %86, %84 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !4097, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %90, metadata !4080, metadata !DIExpression()), !dbg !4104
  %91 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4181
  br i1 %91, label %92, label %136, !dbg !4184

92:                                               ; preds = %88
  %93 = call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4185
  %94 = icmp eq i32 %93, %89, !dbg !4187
  br i1 %94, label %95, label %136, !dbg !4188

95:                                               ; preds = %92
  call void @llvm.dbg.value(metadata i32 %90, metadata !4097, metadata !DIExpression()), !dbg !4104
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %90, i1 noundef zeroext false) #26, !dbg !4189
  %96 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %90) #26, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %96, metadata !4080, metadata !DIExpression()), !dbg !4104
  %97 = load i32, i32* %8, align 4, !dbg !4175
  %98 = icmp ult i32 %96, %97, !dbg !4179
  br i1 %98, label %88, label %99, !dbg !4180, !llvm.loop !4191

99:                                               ; preds = %95, %84
  %100 = phi i32 [ %86, %84 ], [ %96, %95 ], !dbg !4193
  %101 = phi i32 [ %85, %84 ], [ %97, %95 ], !dbg !4175
  %102 = icmp eq i32 %100, %101, !dbg !4194
  br i1 %102, label %103, label %136, !dbg !4196

103:                                              ; preds = %99
  call void @llvm.dbg.value(metadata i32 0, metadata !4098, metadata !DIExpression()), !dbg !4197
  %104 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %100) #26, !dbg !4198
  %105 = icmp slt i32 %104, 0, !dbg !4199
  br i1 %105, label %125, label %106, !dbg !4200

106:                                              ; preds = %103, %120
  %107 = phi i32 [ %121, %120 ], [ %100, %103 ]
  %108 = phi i32 [ %122, %120 ], [ 0, %103 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !4098, metadata !DIExpression()), !dbg !4197
  %109 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %108, i32 0, !dbg !4201
  %110 = load i32, i32* %109, align 4, !dbg !4201
  call void @llvm.dbg.value(metadata i32 %110, metadata !4100, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata i32 0, metadata !4103, metadata !DIExpression()), !dbg !4202
  %111 = icmp eq i32 %110, 0, !dbg !4203
  br i1 %111, label %120, label %112, !dbg !4205

112:                                              ; preds = %106, %115
  %113 = phi i32 [ %116, %115 ], [ %110, %106 ]
  call void @llvm.dbg.value(metadata i32 poison, metadata !4103, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata i32 %113, metadata !4080, metadata !DIExpression()), !dbg !4104
  %114 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4206
  br i1 %114, label %136, label %115, !dbg !4211

115:                                              ; preds = %112
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %113, i1 noundef zeroext true) #26, !dbg !4212
  call void @llvm.dbg.value(metadata i32 poison, metadata !4103, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4202
  %116 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4213
  call void @llvm.dbg.value(metadata i32 %116, metadata !4080, metadata !DIExpression()), !dbg !4104
  %117 = icmp eq i32 %116, %110, !dbg !4214
  br i1 %117, label %118, label %112, !dbg !4215, !llvm.loop !4216

118:                                              ; preds = %115
  %119 = load i32, i32* %8, align 4, !dbg !4218
  br label %120, !dbg !4219

120:                                              ; preds = %118, %106
  %121 = phi i32 [ %119, %118 ], [ %107, %106 ], !dbg !4218
  %122 = add nuw nsw i32 %108, 1, !dbg !4219
  call void @llvm.dbg.value(metadata i32 %122, metadata !4098, metadata !DIExpression()), !dbg !4197
  %123 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %121) #26, !dbg !4198
  %124 = icmp slt i32 %108, %123, !dbg !4199
  br i1 %124, label %106, label %125, !dbg !4200, !llvm.loop !4220

125:                                              ; preds = %120, %103
  %126 = phi i32 [ %100, %103 ], [ %121, %120 ], !dbg !4222
  %127 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4225
  call void @llvm.dbg.value(metadata i32 %127, metadata !4080, metadata !DIExpression()), !dbg !4104
  %128 = icmp ult i32 %127, %126, !dbg !4226
  br i1 %128, label %129, label %136, !dbg !4227

129:                                              ; preds = %125, %129
  %130 = phi i32 [ %133, %129 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i32 %130, metadata !4080, metadata !DIExpression()), !dbg !4104
  %131 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4228
  %132 = xor i1 %131, true, !dbg !4230
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef nonnull %6, i32 noundef %130, i1 noundef zeroext %132) #26, !dbg !4231
  %133 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4232
  call void @llvm.dbg.value(metadata i32 %133, metadata !4080, metadata !DIExpression()), !dbg !4104
  %134 = load i32, i32* %8, align 4, !dbg !4222
  %135 = icmp ult i32 %133, %134, !dbg !4226
  br i1 %135, label %129, label %136, !dbg !4227, !llvm.loop !4233

136:                                              ; preds = %76, %67, %45, %56, %61, %88, %92, %112, %129, %125, %99, %20, %29
  %137 = phi i1 [ false, %29 ], [ false, %20 ], [ false, %99 ], [ true, %125 ], [ true, %129 ], [ false, %112 ], [ false, %92 ], [ false, %88 ], [ false, %61 ], [ false, %56 ], [ false, %45 ], [ false, %67 ], [ false, %76 ], !dbg !4104
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4235
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4235
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4235
  br label %138

138:                                              ; preds = %11, %17, %136
  %139 = phi i1 [ %137, %136 ], [ false, %17 ], [ false, %11 ], !dbg !4104
  ret i1 %139, !dbg !4235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4236 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4240, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i32 %1, metadata !4241, metadata !DIExpression()), !dbg !4242
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4243
  %4 = add i32 %3, %1, !dbg !4244
  ret i32 %4, !dbg !4245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4246 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4250, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.value(metadata i32 %1, metadata !4251, metadata !DIExpression()), !dbg !4252
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4253
  %4 = icmp eq i32 %3, 0, !dbg !4253
  br i1 %4, label %33, label %5, !dbg !4256

5:                                                ; preds = %2
  %6 = add i32 %3, %1, !dbg !4257
  %7 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4257
  %8 = load i32, i32* %7, align 4, !dbg !4257
  %9 = icmp ugt i32 %6, %8, !dbg !4257
  br i1 %9, label %33, label %10, !dbg !4260

10:                                               ; preds = %5
  %11 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4261
  br i1 %11, label %12, label %33, !dbg !4264

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4265
  %14 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4265
  %15 = icmp eq i32 %14, %1, !dbg !4265
  br i1 %15, label %16, label %33, !dbg !4268

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4269
  %18 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4269
  %19 = icmp eq i32 %18, %1, !dbg !4269
  br i1 %19, label %20, label %33, !dbg !4272

20:                                               ; preds = %16
  %21 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4273
  br i1 %21, label %32, label %22, !dbg !4275

22:                                               ; preds = %20
  %23 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4276
  br i1 %23, label %24, label %33, !dbg !4280

24:                                               ; preds = %22
  %25 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4281
  br i1 %25, label %26, label %33, !dbg !4284

26:                                               ; preds = %24
  %27 = tail call fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4285, !range !3492
  %28 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %27) #26, !dbg !4285
  br i1 %28, label %29, label %33, !dbg !4290

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4291, !range !3492
  %31 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %30) #26, !dbg !4291
  br i1 %31, label %32, label %33, !dbg !4294

32:                                               ; preds = %20, %29
  br label %33, !dbg !4295

33:                                               ; preds = %29, %26, %24, %22, %16, %12, %10, %5, %2, %32
  %34 = phi i1 [ true, %32 ], [ false, %2 ], [ false, %5 ], [ false, %10 ], [ false, %12 ], [ false, %16 ], [ false, %22 ], [ false, %24 ], [ false, %26 ], [ false, %29 ], !dbg !4252
  ret i1 %34, !dbg !4296
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* nocapture noundef %1, i32* nocapture noundef %2) unnamed_addr #13 !dbg !4297 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4301, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.value(metadata i32* %1, metadata !4302, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.value(metadata i32* %2, metadata !4303, metadata !DIExpression()), !dbg !4305
  store i32 0, i32* %1, align 4, !dbg !4306
  store i32 0, i32* %2, align 4, !dbg !4307
  %4 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4308
  call void @llvm.dbg.value(metadata i32 %4, metadata !4304, metadata !DIExpression()), !dbg !4305
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !4304, metadata !DIExpression()), !dbg !4305
  %6 = load i32, i32* %5, align 4, !dbg !4310
  %7 = icmp ult i32 %4, %6, !dbg !4312
  br i1 %7, label %8, label %19, !dbg !4313

8:                                                ; preds = %3, %8
  %9 = phi i32 [ %16, %8 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4304, metadata !DIExpression()), !dbg !4305
  %10 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4314
  %11 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4317, !range !3293
  %12 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef nonnull %0, i32 noundef %11) #26, !dbg !4317
  %13 = select i1 %10, i32* %1, i32* %2, !dbg !4317
  %14 = load i32, i32* %13, align 4, !dbg !4317
  %15 = add i32 %14, %12, !dbg !4317
  store i32 %15, i32* %13, align 4, !dbg !4317
  %16 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %9) #26, !dbg !4318
  call void @llvm.dbg.value(metadata i32 %16, metadata !4304, metadata !DIExpression()), !dbg !4305
  %17 = load i32, i32* %5, align 4, !dbg !4310
  %18 = icmp ult i32 %16, %17, !dbg !4312
  br i1 %18, label %8, label %19, !dbg !4313, !llvm.loop !4319

19:                                               ; preds = %8, %3
  ret void, !dbg !4321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef readonly %0, %struct.sys_memory_stats* noundef writeonly %1) local_unnamed_addr #7 !dbg !4322 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4327, metadata !DIExpression()), !dbg !4329
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !4328, metadata !DIExpression()), !dbg !4329
  %3 = icmp eq %struct.sys_heap* %0, null, !dbg !4330
  %4 = icmp eq %struct.sys_memory_stats* %1, null
  %5 = or i1 %3, %4, !dbg !4332
  br i1 %5, label %20, label %6, !dbg !4332

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4333
  %8 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4333
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %8, i32 0, i32 3, !dbg !4334
  %10 = load i32, i32* %9, align 4, !dbg !4334
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !4335
  store i32 %10, i32* %11, align 4, !dbg !4336
  %12 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4337
  %13 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %12, i32 0, i32 4, !dbg !4338
  %14 = load i32, i32* %13, align 4, !dbg !4338
  %15 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !4339
  store i32 %14, i32* %15, align 4, !dbg !4340
  %16 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4341
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %16, i32 0, i32 5, !dbg !4342
  %18 = load i32, i32* %17, align 4, !dbg !4342
  %19 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !4343
  store i32 %18, i32* %19, align 4, !dbg !4344
  br label %20, !dbg !4345

20:                                               ; preds = %2, %6
  %21 = phi i32 [ 0, %6 ], [ -22, %2 ], !dbg !4329
  ret i32 %21, !dbg !4346
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx.14(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !4347 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4351, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %1, metadata !4352, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %1, metadata !4353, metadata !DIExpression()), !dbg !4354
  %3 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4355, !range !3462
  %4 = sub nsw i32 31, %3, !dbg !4356
  ret i32 %4, !dbg !4357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used.15(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !4358 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4362, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.value(metadata i32 %1, metadata !4363, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.value(metadata i1 %2, metadata !4364, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4367
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4368
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4365, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4366, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4367
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4369
  %6 = bitcast i8* %5 to i16*, !dbg !4369
  %7 = load i16, i16* %6, align 2, !dbg !4369
  %8 = and i16 %7, -2, !dbg !4373
  %9 = zext i1 %2 to i16, !dbg !4373
  %10 = or i16 %8, %9, !dbg !4373
  store i16 %10, i16* %6, align 2, !dbg !4369
  ret void, !dbg !4374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4375 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4377, metadata !DIExpression()), !dbg !4379
  call void @llvm.dbg.value(metadata i32 %1, metadata !4378, metadata !DIExpression()), !dbg !4379
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4380
  ret i32 %3, !dbg !4381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4382 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4384, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i32 %1, metadata !4385, metadata !DIExpression()), !dbg !4386
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4387
  %4 = and i32 %3, 1, !dbg !4388
  %5 = icmp ne i32 %4, 0, !dbg !4387
  ret i1 %5, !dbg !4389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4390 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4392, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i32 %1, metadata !4393, metadata !DIExpression()), !dbg !4394
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4395
  %4 = sub i32 %1, %3, !dbg !4396
  ret i32 %4, !dbg !4397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field.19(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4398 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4402, metadata !DIExpression()), !dbg !4407
  call void @llvm.dbg.value(metadata i32 %1, metadata !4403, metadata !DIExpression()), !dbg !4407
  call void @llvm.dbg.value(metadata i32 %2, metadata !4404, metadata !DIExpression()), !dbg !4407
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4408
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4405, metadata !DIExpression()), !dbg !4407
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4406, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4407
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4406, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4407
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4409
  call void @llvm.dbg.value(metadata i8* %5, metadata !4406, metadata !DIExpression()), !dbg !4407
  %6 = bitcast i8* %5 to i16*, !dbg !4410
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4413
  %8 = load i16, i16* %7, align 2, !dbg !4413
  %9 = zext i16 %8 to i32, !dbg !4413
  ret i32 %9, !dbg !4414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4415 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4419, metadata !DIExpression()), !dbg !4420
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4421
  ret %struct.chunk_unit_t* %2, !dbg !4422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4423 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4427, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata i32 %1, metadata !4428, metadata !DIExpression()), !dbg !4429
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4430
  %4 = lshr i32 %3, 1, !dbg !4431
  ret i32 %4, !dbg !4432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4433 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4437, metadata !DIExpression()), !dbg !4439
  call void @llvm.dbg.value(metadata i32 %1, metadata !4438, metadata !DIExpression()), !dbg !4439
  %3 = shl i32 %1, 3, !dbg !4440
  %4 = add i32 %3, -4, !dbg !4441
  ret i32 %4, !dbg !4442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4443 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4445, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %1, metadata !4446, metadata !DIExpression()), !dbg !4447
  %3 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4448
  %4 = icmp ugt i32 %3, %1, !dbg !4448
  br i1 %4, label %12, label %5, !dbg !4451

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4452
  %7 = load i32, i32* %6, align 4, !dbg !4452
  %8 = icmp ugt i32 %7, %1, !dbg !4452
  br i1 %8, label %9, label %12, !dbg !4455

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4456
  %11 = icmp ult i32 %10, %7, !dbg !4456
  br label %12, !dbg !4447

12:                                               ; preds = %9, %5, %2
  %13 = phi i1 [ false, %2 ], [ false, %5 ], [ %11, %9 ], !dbg !4447
  ret i1 %13, !dbg !4459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4460 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4462, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.value(metadata i32 %1, metadata !4463, metadata !DIExpression()), !dbg !4464
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4465
  ret i32 %3, !dbg !4466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_stress(i8* (i8*, i32)* noundef %0, void (i8*, i8*)* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4, i8* noundef %5, i32 noundef %6, i32 noundef %7, %struct.z_heap_stress_result* nocapture noundef %8) local_unnamed_addr #1 !dbg !4467 {
  %10 = alloca %struct.z_heap_stress_rec, align 4
  call void @llvm.dbg.value(metadata i8* (i8*, i32)* %0, metadata !4484, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %1, metadata !4485, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i8* %2, metadata !4486, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i32 %3, metadata !4487, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i32 %4, metadata !4488, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i8* %5, metadata !4489, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i32 %6, metadata !4490, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i32 %7, metadata !4491, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_result* %8, metadata !4492, metadata !DIExpression()), !dbg !4522
  %11 = bitcast %struct.z_heap_stress_rec* %10 to i8*, !dbg !4523
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4523
  call void @llvm.dbg.declare(metadata %struct.z_heap_stress_rec* %10, metadata !4493, metadata !DIExpression()), !dbg !4524
  %12 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 0, !dbg !4525
  store i8* (i8*, i32)* %0, i8* (i8*, i32)** %12, align 4, !dbg !4525
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 1, !dbg !4525
  store void (i8*, i8*)* %1, void (i8*, i8*)** %13, align 4, !dbg !4525
  %14 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 2, !dbg !4525
  store i8* %2, i8** %14, align 4, !dbg !4525
  %15 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 3, !dbg !4525
  store i32 %3, i32* %15, align 4, !dbg !4525
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 4, !dbg !4525
  %17 = bitcast %struct.z_heap_stress_block** %16 to i8**, !dbg !4525
  store i8* %5, i8** %17, align 4, !dbg !4525
  %18 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 5, !dbg !4525
  %19 = lshr i32 %6, 3, !dbg !4526
  store i32 %19, i32* %18, align 4, !dbg !4525
  %20 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 6, !dbg !4525
  store i32 0, i32* %20, align 4, !dbg !4525
  %21 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 7, !dbg !4525
  store i32 0, i32* %21, align 4, !dbg !4525
  %22 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 8, !dbg !4525
  store i32 %7, i32* %22, align 4, !dbg !4525
  %23 = bitcast %struct.z_heap_stress_result* %8 to i8*, !dbg !4527
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i32 24, i1 false), !dbg !4527
  call void @llvm.dbg.value(metadata i32 0, metadata !4510, metadata !DIExpression()), !dbg !4528
  %24 = icmp eq i32 %4, 0, !dbg !4529
  %25 = bitcast i8* %5 to %struct.z_heap_stress_block*, !dbg !4530
  br i1 %24, label %31, label %26, !dbg !4530

26:                                               ; preds = %9
  %27 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 2
  %28 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 0
  %29 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 1
  %30 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 3
  br label %32, !dbg !4530

31:                                               ; preds = %65, %9
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4531
  ret void, !dbg !4531

32:                                               ; preds = %26, %65
  %33 = phi i32 [ 0, %26 ], [ %66, %65 ]
  %34 = phi i32 [ 0, %26 ], [ %67, %65 ]
  %35 = phi i32 [ 0, %26 ], [ %71, %65 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !4510, metadata !DIExpression()), !dbg !4528
  %36 = call fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4532
  br i1 %36, label %37, label %50, !dbg !4533

37:                                               ; preds = %32
  %38 = tail call fastcc i32 @rand_alloc_size() #26, !dbg !4534
  call void @llvm.dbg.value(metadata i32 %38, metadata !4512, metadata !DIExpression()), !dbg !4535
  %39 = tail call i8* %0(i8* noundef %2, i32 noundef %38) #25, !dbg !4536
  call void @llvm.dbg.value(metadata i8* %39, metadata !4517, metadata !DIExpression()), !dbg !4535
  %40 = load i32, i32* %28, align 8, !dbg !4537
  %41 = add i32 %40, 1, !dbg !4537
  store i32 %41, i32* %28, align 8, !dbg !4537
  %42 = icmp eq i8* %39, null, !dbg !4538
  br i1 %42, label %65, label %43, !dbg !4540

43:                                               ; preds = %37
  %44 = load i32, i32* %29, align 4, !dbg !4541
  %45 = add i32 %44, 1, !dbg !4541
  store i32 %45, i32* %29, align 4, !dbg !4541
  %46 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 0, !dbg !4543
  store i8* %39, i8** %46, align 4, !dbg !4544
  %47 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 1, !dbg !4545
  store i32 %38, i32* %47, align 4, !dbg !4546
  %48 = add i32 %34, 1, !dbg !4547
  store i32 %48, i32* %20, align 4, !dbg !4547
  %49 = add i32 %33, %38, !dbg !4548
  store i32 %49, i32* %21, align 4, !dbg !4548
  br label %65, !dbg !4549

50:                                               ; preds = %32
  %51 = call fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4550
  call void @llvm.dbg.value(metadata i32 %51, metadata !4518, metadata !DIExpression()), !dbg !4551
  %52 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 0, !dbg !4552
  %53 = load i8*, i8** %52, align 4, !dbg !4552
  call void @llvm.dbg.value(metadata i8* %53, metadata !4520, metadata !DIExpression()), !dbg !4551
  %54 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 1, !dbg !4553
  %55 = load i32, i32* %54, align 4, !dbg !4553
  call void @llvm.dbg.value(metadata i32 %55, metadata !4521, metadata !DIExpression()), !dbg !4551
  %56 = load i32, i32* %27, align 8, !dbg !4554
  %57 = add i32 %56, 1, !dbg !4554
  store i32 %57, i32* %27, align 8, !dbg !4554
  %58 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, !dbg !4555
  %59 = add i32 %34, -1, !dbg !4556
  %60 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %59, !dbg !4557
  %61 = bitcast %struct.z_heap_stress_block* %60 to i64*, !dbg !4557
  %62 = bitcast %struct.z_heap_stress_block* %58 to i64*, !dbg !4557
  %63 = load i64, i64* %61, align 4, !dbg !4557
  store i64 %63, i64* %62, align 4, !dbg !4557
  store i32 %59, i32* %20, align 4, !dbg !4558
  %64 = sub i32 %33, %55, !dbg !4559
  store i32 %64, i32* %21, align 4, !dbg !4559
  tail call void %1(i8* noundef %2, i8* noundef %53) #25, !dbg !4560
  br label %65

65:                                               ; preds = %37, %43, %50
  %66 = phi i32 [ %33, %37 ], [ %49, %43 ], [ %64, %50 ], !dbg !4561
  %67 = phi i32 [ %34, %37 ], [ %48, %43 ], [ %59, %50 ]
  %68 = zext i32 %66 to i64, !dbg !4562
  %69 = load i64, i64* %30, align 8, !dbg !4563
  %70 = add i64 %69, %68, !dbg !4563
  store i64 %70, i64* %30, align 8, !dbg !4563
  %71 = add nuw i32 %35, 1, !dbg !4564
  call void @llvm.dbg.value(metadata i32 %71, metadata !4510, metadata !DIExpression()), !dbg !4528
  %72 = icmp eq i32 %71, %4, !dbg !4529
  br i1 %72, label %31, label %32, !dbg !4530, !llvm.loop !4565
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4567 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4572, metadata !DIExpression()), !dbg !4579
  %2 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4580
  %3 = load i32, i32* %2, align 4, !dbg !4580
  %4 = icmp eq i32 %3, 0, !dbg !4581
  br i1 %4, label %26, label %5, !dbg !4582

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 5, !dbg !4583
  %7 = load i32, i32* %6, align 4, !dbg !4583
  %8 = icmp ult i32 %3, %7, !dbg !4584
  br i1 %8, label %9, label %26, !dbg !4585

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 7, !dbg !4586
  %11 = load i32, i32* %10, align 4, !dbg !4586
  %12 = mul i32 %11, 100, !dbg !4587
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 3, !dbg !4588
  %14 = load i32, i32* %13, align 4, !dbg !4588
  %15 = udiv i32 %12, %14, !dbg !4589
  call void @llvm.dbg.value(metadata i32 %15, metadata !4573, metadata !DIExpression()), !dbg !4590
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 8, !dbg !4591
  %17 = load i32, i32* %16, align 4, !dbg !4591
  call void @llvm.dbg.value(metadata i32 undef, metadata !4577, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 -1, metadata !4578, metadata !DIExpression()), !dbg !4590
  %18 = icmp ult i32 %15, %17, !dbg !4592
  br i1 %18, label %19, label %22, !dbg !4594

19:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %17, metadata !4577, metadata !DIExpression()), !dbg !4590
  %20 = udiv i32 -2147483648, %17, !dbg !4595
  %21 = mul i32 %20, %15, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %21, metadata !4578, metadata !DIExpression()), !dbg !4590
  br label %22, !dbg !4598

22:                                               ; preds = %19, %9
  %23 = phi i32 [ %21, %19 ], [ -1, %9 ], !dbg !4590
  call void @llvm.dbg.value(metadata i32 %23, metadata !4578, metadata !DIExpression()), !dbg !4590
  %24 = tail call fastcc i32 @rand32() #26, !dbg !4599
  %25 = icmp ugt i32 %24, %23, !dbg !4600
  br label %26

26:                                               ; preds = %5, %1, %22
  %27 = phi i1 [ %25, %22 ], [ true, %1 ], [ false, %5 ], !dbg !4601
  ret i1 %27, !dbg !4602
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc i32 @rand_alloc_size() unnamed_addr #10 !dbg !4603 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* undef, metadata !4607, metadata !DIExpression()), !dbg !4609
  %1 = tail call fastcc i32 @rand32() #26, !dbg !4610
  %2 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4611, !range !3462
  call void @llvm.dbg.value(metadata i32 %2, metadata !4608, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !4609
  %3 = tail call fastcc i32 @rand32() #26, !dbg !4612
  %4 = shl i32 16, %2, !dbg !4613
  %5 = add i32 %4, -1, !dbg !4613
  %6 = and i32 %5, %3, !dbg !4614
  ret i32 %6, !dbg !4615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4616 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4618, metadata !DIExpression()), !dbg !4619
  %2 = tail call fastcc i32 @rand32() #26, !dbg !4620
  %3 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4621
  %4 = load i32, i32* %3, align 4, !dbg !4621
  %5 = urem i32 %2, %4, !dbg !4622
  ret i32 %5, !dbg !4623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand32() unnamed_addr #7 !dbg !133 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !4624
  %2 = mul i64 %1, 2862933555777941757, !dbg !4625
  %3 = add i64 %2, 3037000493, !dbg !4626
  store i64 %3, i64* @rand32.state, align 8, !dbg !4627
  %4 = lshr i64 %3, 32, !dbg !4628
  %5 = trunc i64 %4 to i32, !dbg !4629
  ret i32 %5, !dbg !4630
}

; Function Attrs: noinline nounwind optsize
define dso_local void @heap_print_info(%struct.z_heap* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4631 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4635, metadata !DIExpression()), !dbg !4656
  call void @llvm.dbg.value(metadata i1 %1, metadata !4636, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4656
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4657
  %6 = load i32, i32* %5, align 4, !dbg !4657
  %7 = tail call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef %0, i32 noundef %6) #26, !dbg !4658
  %8 = add i32 %7, 1, !dbg !4659
  call void @llvm.dbg.value(metadata i32 %8, metadata !4638, metadata !DIExpression()), !dbg !4656
  %9 = bitcast i32* %3 to i8*, !dbg !4660
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4660
  %10 = bitcast i32* %4 to i8*, !dbg !4660
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4660
  %11 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4661
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i32 0, i32 0), %struct.chunk_unit_t* noundef %11, i32 noundef %6, i32 noundef %8) #25, !dbg !4662
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([187 x i8], [187 x i8]* @.str.1.25, i32 0, i32 0)) #25, !dbg !4663
  call void @llvm.dbg.value(metadata i32 0, metadata !4637, metadata !DIExpression()), !dbg !4656
  %12 = icmp slt i32 %7, 0, !dbg !4664
  br i1 %12, label %34, label %13, !dbg !4665

13:                                               ; preds = %2, %31
  %14 = phi i32 [ %32, %31 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4637, metadata !DIExpression()), !dbg !4656
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %14, i32 0, !dbg !4666
  %16 = load i32, i32* %15, align 4, !dbg !4666
  call void @llvm.dbg.value(metadata i32 %16, metadata !4643, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 0, metadata !4647, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 0, metadata !4648, metadata !DIExpression()), !dbg !4667
  %17 = icmp eq i32 %16, 0, !dbg !4668
  br i1 %17, label %31, label %18, !dbg !4669

18:                                               ; preds = %13, %18
  %19 = phi i32 [ %25, %18 ], [ 0, %13 ], !dbg !4667
  %20 = phi i32 [ %22, %18 ], [ 0, %13 ], !dbg !4667
  %21 = phi i32 [ %26, %18 ], [ %16, %13 ], !dbg !4670
  call void @llvm.dbg.value(metadata i32 %21, metadata !4649, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 %20, metadata !4648, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 %19, metadata !4647, metadata !DIExpression()), !dbg !4667
  %22 = add nuw nsw i32 %20, 1, !dbg !4671
  call void @llvm.dbg.value(metadata i32 %22, metadata !4648, metadata !DIExpression()), !dbg !4667
  %23 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4673
  %24 = icmp ugt i32 %19, %23, !dbg !4673
  %25 = select i1 %24, i32 %19, i32 %23, !dbg !4673
  call void @llvm.dbg.value(metadata i32 %25, metadata !4647, metadata !DIExpression()), !dbg !4667
  %26 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %26, metadata !4649, metadata !DIExpression()), !dbg !4670
  %27 = icmp eq i32 %26, %16, !dbg !4675
  br i1 %27, label %28, label %18, !dbg !4676, !llvm.loop !4677

28:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %22, metadata !4648, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 %25, metadata !4647, metadata !DIExpression()), !dbg !4667
  %29 = shl nuw i32 1, %14, !dbg !4680
  %30 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef %0, i32 noundef %25) #26, !dbg !4683, !range !3714
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32 noundef %14, i32 noundef %29, i32 noundef %22, i32 noundef %25, i32 noundef %30) #25, !dbg !4684
  br label %31, !dbg !4685

31:                                               ; preds = %13, %28
  %32 = add nuw i32 %14, 1, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %32, metadata !4637, metadata !DIExpression()), !dbg !4656
  %33 = icmp eq i32 %14, %7, !dbg !4664
  br i1 %33, label %34, label %13, !dbg !4665, !llvm.loop !4687

34:                                               ; preds = %31, %2
  br i1 %1, label %35, label %47, !dbg !4689

35:                                               ; preds = %34
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !4690
  call void @llvm.dbg.value(metadata i32 0, metadata !4652, metadata !DIExpression()), !dbg !4691
  br label %36, !dbg !4692

36:                                               ; preds = %45, %35
  %37 = phi i32 [ 0, %35 ], [ %46, %45 ], !dbg !4691
  call void @llvm.dbg.value(metadata i32 %37, metadata !4652, metadata !DIExpression()), !dbg !4691
  %38 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4693
  %39 = select i1 %38, i32 42, i32 45, !dbg !4693
  %40 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4696
  %41 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4697
  %42 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4698
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i32 noundef %37, i32 noundef %39, i32 noundef %40, i32 noundef %41, i32 noundef %42) #25, !dbg !4699
  %43 = load i32, i32* %5, align 4, !dbg !4700
  %44 = icmp eq i32 %37, %43, !dbg !4702
  br i1 %44, label %47, label %45, !dbg !4703

45:                                               ; preds = %36
  %46 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %37) #26, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %46, metadata !4652, metadata !DIExpression()), !dbg !4691
  br label %36, !dbg !4705, !llvm.loop !4706

47:                                               ; preds = %36, %34
  call void @llvm.dbg.value(metadata i32* %3, metadata !4639, metadata !DIExpression(DW_OP_deref)), !dbg !4656
  call void @llvm.dbg.value(metadata i32* %4, metadata !4640, metadata !DIExpression(DW_OP_deref)), !dbg !4656
  call fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* noundef nonnull %4, i32* noundef nonnull %3) #26, !dbg !4709
  %48 = load i32, i32* %5, align 4, !dbg !4710
  %49 = shl i32 %48, 3, !dbg !4711
  %50 = or i32 %49, 4, !dbg !4712
  call void @llvm.dbg.value(metadata i32 %50, metadata !4641, metadata !DIExpression()), !dbg !4656
  %51 = load i32, i32* %3, align 4, !dbg !4713
  call void @llvm.dbg.value(metadata i32 %51, metadata !4639, metadata !DIExpression()), !dbg !4656
  %52 = load i32, i32* %4, align 4, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %52, metadata !4640, metadata !DIExpression()), !dbg !4656
  %53 = add i32 %52, %51, !dbg !4715
  %54 = sub i32 %50, %53, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %54, metadata !4642, metadata !DIExpression()), !dbg !4656
  %55 = mul i32 %54, 1000, !dbg !4716
  %56 = lshr exact i32 %50, 1, !dbg !4717
  %57 = add i32 %55, %56, !dbg !4718
  %58 = udiv i32 %57, %50, !dbg !4719
  %59 = freeze i32 %58
  %60 = udiv i32 %59, 10, !dbg !4720
  %61 = mul i32 %60, 10
  %62 = sub i32 %59, %61
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i32 0, i32 0), i32 noundef %51, i32 noundef %52, i32 noundef %54, i32 noundef %60, i32 noundef %62) #25, !dbg !4721
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4722
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4722
  ret void, !dbg !4722
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_print_info(%struct.sys_heap* nocapture noundef readonly %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4723 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4727, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i1 %1, metadata !4728, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4729
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4730
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4730
  tail call void @heap_print_info(%struct.z_heap* noundef %4, i1 noundef zeroext %1) #26, !dbg !4731
  ret void, !dbg !4732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_reset_max(%struct.sys_heap* noundef readonly %0) local_unnamed_addr #7 !dbg !4733 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4737, metadata !DIExpression()), !dbg !4738
  %2 = icmp eq %struct.sys_heap* %0, null, !dbg !4739
  br i1 %2, label %9, label %3, !dbg !4741

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4742
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4742
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 4, !dbg !4743
  %7 = load i32, i32* %6, align 4, !dbg !4743
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 5, !dbg !4744
  store i32 %7, i32* %8, align 4, !dbg !4745
  br label %9, !dbg !4746

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -22, %1 ], !dbg !4738
  ret i32 %10, !dbg !4747
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4748 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4761, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4758, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8* %1, metadata !4759, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8* %2, metadata !4760, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 %4, metadata !4762, metadata !DIExpression()), !dbg !4889
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4890
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4890
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4763, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 0, metadata !4767, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i1 undef, metadata !4769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4889
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4892

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4892

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4893
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4761, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8* %30, metadata !4760, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 %29, metadata !4767, metadata !DIExpression()), !dbg !4889
  %31 = load i8, i8* %30, align 1, !dbg !4894
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4892

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4894
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4895
  call void @llvm.dbg.value(metadata i8* %34, metadata !4760, metadata !DIExpression()), !dbg !4889
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %35, metadata !4771, metadata !DIExpression()), !dbg !4896
  %36 = icmp slt i32 %35, 0, !dbg !4897
  %37 = add i32 %29, 1, !dbg !4895
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression()), !dbg !4889
  br i1 %36, label %365, label %28, !llvm.loop !4899

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4901
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4776, metadata !DIExpression()), !dbg !4902
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4902
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4821, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4824, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8* %30, metadata !4827, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i32 -1, metadata !4828, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i32 -1, metadata !4829, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8* null, metadata !4830, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8* %14, metadata !4831, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8 0, metadata !4832, metadata !DIExpression()), !dbg !4903
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4904
  call void @llvm.dbg.value(metadata i8* %39, metadata !4760, metadata !DIExpression()), !dbg !4889
  %40 = load i24, i24* %15, align 8, !dbg !4905
  %41 = and i24 %40, 256, !dbg !4905
  %42 = icmp eq i24 %41, 0, !dbg !4905
  br i1 %42, label %51, label %43, !dbg !4907

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4908
  call void @llvm.dbg.value(metadata i8* %44, metadata !4761, metadata !DIExpression()), !dbg !4889
  %45 = bitcast i8* %27 to i32*, !dbg !4908
  %46 = load i32, i32* %45, align 4, !dbg !4908
  call void @llvm.dbg.value(metadata i32 %46, metadata !4828, metadata !DIExpression()), !dbg !4903
  %47 = icmp slt i32 %46, 0, !dbg !4910
  br i1 %47, label %48, label %56, !dbg !4912

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4913
  store i24 %49, i24* %15, align 8, !dbg !4913
  %50 = sub nsw i32 0, %46, !dbg !4915
  call void @llvm.dbg.value(metadata i32 %50, metadata !4828, metadata !DIExpression()), !dbg !4903
  br label %56, !dbg !4916

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4917
  %53 = icmp eq i24 %52, 0, !dbg !4917
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4919
  br label %56, !dbg !4919

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4920
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4903
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4761, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 %58, metadata !4828, metadata !DIExpression()), !dbg !4903
  %60 = and i24 %57, 1024, !dbg !4920
  %61 = icmp eq i24 %60, 0, !dbg !4920
  br i1 %61, label %69, label %62, !dbg !4921

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4922
  call void @llvm.dbg.value(metadata i8* %63, metadata !4761, metadata !DIExpression()), !dbg !4889
  %64 = bitcast i8* %59 to i32*, !dbg !4922
  %65 = load i32, i32* %64, align 4, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %65, metadata !4833, metadata !DIExpression()), !dbg !4923
  %66 = icmp slt i32 %65, 0, !dbg !4924
  br i1 %66, label %67, label %74, !dbg !4926

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4927
  store i24 %68, i24* %15, align 8, !dbg !4927
  br label %74, !dbg !4929

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4930
  %71 = icmp eq i24 %70, 0, !dbg !4930
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4932
  br label %74, !dbg !4932

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4933
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4903
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4903
  call void @llvm.dbg.value(metadata i8* %77, metadata !4761, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 %76, metadata !4829, metadata !DIExpression()), !dbg !4903
  store i32 0, i32* %16, align 4, !dbg !4934
  store i32 0, i32* %17, align 8, !dbg !4935
  %78 = lshr i24 %75, 16, !dbg !4933
  call void @llvm.dbg.value(metadata i24 %78, metadata !4836, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4903
  %79 = lshr i24 %75, 11, !dbg !4936
  %80 = and i24 %79, 15, !dbg !4936
  %81 = zext i24 %80 to i32, !dbg !4936
  call void @llvm.dbg.value(metadata i32 %81, metadata !4837, metadata !DIExpression()), !dbg !4903
  %82 = trunc i24 %78 to i3, !dbg !4937
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4937

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4938

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4941
  call void @llvm.dbg.value(metadata i8* %85, metadata !4761, metadata !DIExpression()), !dbg !4889
  %86 = bitcast i8* %77 to i32*, !dbg !4941
  %87 = load i32, i32* %86, align 4, !dbg !4941
  %88 = sext i32 %87 to i64, !dbg !4941
  store i64 %88, i64* %20, align 8, !dbg !4943
  br label %115, !dbg !4944

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4945
  call void @llvm.dbg.value(metadata i8* %90, metadata !4761, metadata !DIExpression()), !dbg !4889
  %91 = bitcast i8* %77 to i32*, !dbg !4945
  %92 = load i32, i32* %91, align 4, !dbg !4945
  %93 = sext i32 %92 to i64, !dbg !4945
  store i64 %93, i64* %20, align 8, !dbg !4948
  br label %115, !dbg !4949

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4950
  %96 = add i32 %95, 7, !dbg !4950
  %97 = and i32 %96, -8, !dbg !4950
  %98 = inttoptr i32 %97 to i8*, !dbg !4950
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4950
  call void @llvm.dbg.value(metadata i8* %99, metadata !4761, metadata !DIExpression()), !dbg !4889
  %100 = inttoptr i32 %97 to i64*, !dbg !4950
  %101 = load i64, i64* %100, align 8, !dbg !4950
  store i64 %101, i64* %20, align 8, !dbg !4951
  br label %115, !dbg !4952

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4953
  %104 = add i32 %103, 7, !dbg !4953
  %105 = and i32 %104, -8, !dbg !4953
  %106 = inttoptr i32 %105 to i8*, !dbg !4953
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4953
  call void @llvm.dbg.value(metadata i8* %107, metadata !4761, metadata !DIExpression()), !dbg !4889
  %108 = inttoptr i32 %105 to i64*, !dbg !4953
  %109 = load i64, i64* %108, align 8, !dbg !4953
  store i64 %109, i64* %20, align 8, !dbg !4954
  br label %115, !dbg !4955

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4956
  call void @llvm.dbg.value(metadata i8* %111, metadata !4761, metadata !DIExpression()), !dbg !4889
  %112 = bitcast i8* %77 to i32*, !dbg !4956
  %113 = load i32, i32* %112, align 4, !dbg !4956
  %114 = sext i32 %113 to i64, !dbg !4957
  store i64 %114, i64* %20, align 8, !dbg !4958
  br label %115, !dbg !4959

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4960
  call void @llvm.dbg.value(metadata i8* %117, metadata !4761, metadata !DIExpression()), !dbg !4889
  %118 = trunc i24 %79 to i4, !dbg !4961
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4961

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4962
  %121 = ashr exact i64 %120, 56, !dbg !4962
  store i64 %121, i64* %20, align 8, !dbg !4965
  br label %177, !dbg !4966

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4967
  %124 = ashr exact i64 %123, 48, !dbg !4967
  store i64 %124, i64* %20, align 8, !dbg !4970
  br label %177, !dbg !4971

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4972

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4975
  call void @llvm.dbg.value(metadata i8* %127, metadata !4761, metadata !DIExpression()), !dbg !4889
  %128 = bitcast i8* %77 to i32*, !dbg !4975
  %129 = load i32, i32* %128, align 4, !dbg !4975
  %130 = zext i32 %129 to i64, !dbg !4975
  store i64 %130, i64* %20, align 8, !dbg !4977
  br label %157, !dbg !4978

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4979
  call void @llvm.dbg.value(metadata i8* %132, metadata !4761, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8* %132, metadata !4761, metadata !DIExpression()), !dbg !4889
  %133 = bitcast i8* %77 to i32*, !dbg !4979
  %134 = load i32, i32* %133, align 4, !dbg !4979
  %135 = zext i32 %134 to i64, !dbg !4979
  store i64 %135, i64* %20, align 8, !dbg !4979
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4981
  %138 = add i32 %137, 7, !dbg !4981
  %139 = and i32 %138, -8, !dbg !4981
  %140 = inttoptr i32 %139 to i8*, !dbg !4981
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4981
  call void @llvm.dbg.value(metadata i8* %141, metadata !4761, metadata !DIExpression()), !dbg !4889
  %142 = inttoptr i32 %139 to i64*, !dbg !4981
  %143 = load i64, i64* %142, align 8, !dbg !4981
  store i64 %143, i64* %20, align 8, !dbg !4982
  br label %157, !dbg !4983

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4984
  %146 = add i32 %145, 7, !dbg !4984
  %147 = and i32 %146, -8, !dbg !4984
  %148 = inttoptr i32 %147 to i8*, !dbg !4984
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4984
  call void @llvm.dbg.value(metadata i8* %149, metadata !4761, metadata !DIExpression()), !dbg !4889
  %150 = inttoptr i32 %147 to i64*, !dbg !4984
  %151 = load i64, i64* %150, align 8, !dbg !4984
  store i64 %151, i64* %20, align 8, !dbg !4985
  br label %157, !dbg !4986

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4987
  call void @llvm.dbg.value(metadata i8* %153, metadata !4761, metadata !DIExpression()), !dbg !4889
  %154 = bitcast i8* %77 to i32*, !dbg !4987
  %155 = load i32, i32* %154, align 4, !dbg !4987
  %156 = zext i32 %155 to i64, !dbg !4988
  store i64 %156, i64* %20, align 8, !dbg !4989
  br label %157, !dbg !4990

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4991
  call void @llvm.dbg.value(metadata i8* %159, metadata !4761, metadata !DIExpression()), !dbg !4889
  %160 = trunc i24 %79 to i4, !dbg !4992
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4992

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4993
  store i64 %162, i64* %20, align 8, !dbg !4996
  br label %177, !dbg !4997

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4998
  store i64 %164, i64* %20, align 8, !dbg !5001
  br label %177, !dbg !5002

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5003
  %167 = add i32 %166, 7, !dbg !5003
  %168 = and i32 %167, -8, !dbg !5003
  %169 = inttoptr i32 %168 to i8*, !dbg !5003
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5003
  call void @llvm.dbg.value(metadata i8* %170, metadata !4761, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8* %170, metadata !4761, metadata !DIExpression()), !dbg !4889
  %171 = inttoptr i32 %168 to double*, !dbg !5003
  %172 = load double, double* %171, align 8, !dbg !5003
  store double %172, double* %19, align 8, !dbg !5003
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5007
  call void @llvm.dbg.value(metadata i8* %174, metadata !4761, metadata !DIExpression()), !dbg !4889
  %175 = bitcast i8* %77 to i8**, !dbg !5007
  %176 = load i8*, i8** %175, align 4, !dbg !5007
  store i8* %176, i8** %18, align 8, !dbg !5010
  br label %177, !dbg !5011

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4903
  call void @llvm.dbg.value(metadata i8* %178, metadata !4761, metadata !DIExpression()), !dbg !4889
  %179 = and i24 %75, 3, !dbg !5012
  %180 = icmp eq i24 %179, 0, !dbg !5012
  br i1 %180, label %185, label %181, !dbg !5012

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5013
  call void @llvm.dbg.value(metadata i32 %182, metadata !4838, metadata !DIExpression()), !dbg !5014
  %183 = icmp slt i32 %182, 0, !dbg !5015
  %184 = add i32 %182, %29, !dbg !5013
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression()), !dbg !4889
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5017
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5018

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %188, metadata !4842, metadata !DIExpression()), !dbg !5020
  %189 = icmp slt i32 %188, 0, !dbg !5021
  %190 = add i32 %29, 1, !dbg !5019
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression()), !dbg !4889
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5023
  call void @llvm.dbg.value(metadata i8* %192, metadata !4830, metadata !DIExpression()), !dbg !4903
  %193 = icmp sgt i32 %76, -1, !dbg !5024
  br i1 %193, label %194, label %196, !dbg !5026

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5027
  call void @llvm.dbg.value(metadata i32 %195, metadata !4845, metadata !DIExpression()), !dbg !5029
  br label %241, !dbg !5030

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5031
  call void @llvm.dbg.value(metadata i32 %197, metadata !4845, metadata !DIExpression()), !dbg !5029
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4830, metadata !DIExpression()), !dbg !4903
  %199 = load i64, i64* %20, align 8, !dbg !5033
  %200 = trunc i64 %199 to i8, !dbg !5034
  store i8 %200, i8* %10, align 1, !dbg !5035
  call void @llvm.dbg.value(metadata i8* %23, metadata !4831, metadata !DIExpression()), !dbg !4903
  br label %245, !dbg !5036

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5037
  %203 = icmp eq i24 %202, 0, !dbg !5037
  %204 = trunc i24 %75 to i8, !dbg !5039
  %205 = shl i8 %204, 1, !dbg !5039
  %206 = and i8 %205, 32, !dbg !5039
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5039
  call void @llvm.dbg.value(metadata i8 %207, metadata !4832, metadata !DIExpression()), !dbg !4903
  %208 = load i64, i64* %20, align 8, !dbg !5040
  call void @llvm.dbg.value(metadata i64 %208, metadata !4768, metadata !DIExpression()), !dbg !4889
  %209 = icmp slt i64 %208, 0, !dbg !5041
  br i1 %209, label %210, label %212, !dbg !5043

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4832, metadata !DIExpression()), !dbg !4903
  %211 = sub nsw i64 0, %208, !dbg !5044
  store i64 %211, i64* %20, align 8, !dbg !5046
  br label %212, !dbg !5047

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4903
  call void @llvm.dbg.value(metadata i8 %213, metadata !4832, metadata !DIExpression()), !dbg !4903
  %214 = load i64, i64* %20, align 8, !dbg !5048
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5049
  call void @llvm.dbg.value(metadata i8* %215, metadata !4830, metadata !DIExpression()), !dbg !4903
  br label %216, !dbg !5050

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5051
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5052
  call void @llvm.dbg.value(metadata i8* %218, metadata !4830, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8 %217, metadata !4832, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.label(metadata !4888), !dbg !5053
  %219 = icmp sgt i32 %76, -1, !dbg !5054
  br i1 %219, label %222, label %220, !dbg !5055

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5056
  br label %245, !dbg !5055

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5058
  %224 = sub i32 %22, %223, !dbg !5058
  call void @llvm.dbg.value(metadata i32 %224, metadata !4847, metadata !DIExpression()), !dbg !5059
  %225 = load i24, i24* %15, align 8, !dbg !5060
  %226 = and i24 %225, -65, !dbg !5060
  store i24 %226, i24* %15, align 8, !dbg !5060
  %227 = icmp ugt i32 %76, %224, !dbg !5061
  br i1 %227, label %228, label %245, !dbg !5063

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5064
  store i32 %229, i32* %16, align 4, !dbg !5066
  br label %245, !dbg !5067

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5068
  %232 = icmp eq i8* %231, null, !dbg !5070
  br i1 %232, label %245, label %233, !dbg !5071

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5072
  %235 = zext i32 %234 to i64, !dbg !5072
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5074
  call void @llvm.dbg.value(metadata i8* %236, metadata !4830, metadata !DIExpression()), !dbg !4903
  %237 = load i24, i24* %15, align 8, !dbg !5075
  %238 = or i24 %237, 1048576, !dbg !5075
  store i24 %238, i24* %15, align 8, !dbg !5075
  store i8 120, i8* %21, align 1, !dbg !5076
  br label %216, !dbg !5077

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5078
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5081
  br label %363, !dbg !5082

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5083
  call void @llvm.dbg.value(metadata i32 %242, metadata !4845, metadata !DIExpression()), !dbg !5029
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5084
  call void @llvm.dbg.value(metadata i32 -1, metadata !4829, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i32 %29, metadata !4767, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8* %192, metadata !4830, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8* %243, metadata !4831, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8 0, metadata !4832, metadata !DIExpression()), !dbg !4903
  %244 = icmp eq i8* %192, null, !dbg !5085
  br i1 %244, label %363, label %245, !dbg !5087, !llvm.loop !4899

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5056
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4850, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4903
  call void @llvm.dbg.value(metadata i32 0, metadata !4851, metadata !DIExpression()), !dbg !4903
  %250 = zext i8 %249 to i32, !dbg !5088
  %251 = icmp eq i8 %249, 0, !dbg !5090
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4850, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4903
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4850, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4903
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4903
  %252 = icmp sgt i32 %58, 0, !dbg !5091
  br i1 %252, label %253, label %302, !dbg !5092

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5056
  %255 = icmp eq i24 %254, 0, !dbg !5056
  %256 = ptrtoint i8* %248 to i32, !dbg !5093
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4850, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4903
  %257 = ptrtoint i8* %247 to i32, !dbg !5093
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4850, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4903
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4850, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4903
  %258 = xor i1 %251, true, !dbg !5094
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4850, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4903
  %259 = sext i1 %258 to i32, !dbg !5094
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4850, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4903
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4850, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4903
  %260 = lshr i24 %246, 19, !dbg !5095
  %261 = and i24 %260, 1, !dbg !5095
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5095
  %263 = zext i24 %262 to i32, !dbg !5095
  %264 = add i32 %257, %259, !dbg !5095
  %265 = add i32 %256, %263, !dbg !5095
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4850, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4903
  %266 = and i24 %246, 4194304, !dbg !5096
  %267 = icmp eq i24 %266, 0, !dbg !5096
  %268 = load i32, i32* %16, align 4, !dbg !5098
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4850, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4903
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4903
  %269 = load i32, i32* %17, align 8, !dbg !5099
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5099
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4903
  %271 = add i32 %264, %58, !dbg !5099
  %272 = add i32 %265, %268, !dbg !5099
  %273 = add i32 %272, %270, !dbg !5100
  %274 = sub i32 %271, %273, !dbg !5100
  call void @llvm.dbg.value(metadata i32 %274, metadata !4828, metadata !DIExpression()), !dbg !4903
  %275 = and i24 %246, 4, !dbg !5101
  %276 = icmp eq i24 %275, 0, !dbg !5101
  br i1 %276, label %277, label %302, !dbg !5102

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4852, metadata !DIExpression()), !dbg !5103
  %278 = and i24 %246, 64, !dbg !5104
  %279 = icmp eq i24 %278, 0, !dbg !5104
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5105
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5105
  %282 = select i1 %279, i32 32, i32 48, !dbg !5105
  br i1 %280, label %287, label %283, !dbg !5105

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5106
  call void @llvm.dbg.value(metadata i32 %284, metadata !4857, metadata !DIExpression()), !dbg !5107
  %285 = icmp slt i32 %284, 0, !dbg !5108
  %286 = add i32 %29, 1, !dbg !5106
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression()), !dbg !4889
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4903
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4893
  call void @llvm.dbg.value(metadata i32 %290, metadata !4767, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8 undef, metadata !4852, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata i8 %288, metadata !4832, metadata !DIExpression()), !dbg !4903
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5110
  %292 = add i32 %291, -1, !dbg !5110
  br label %293, !dbg !5110

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5111
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4893
  call void @llvm.dbg.value(metadata i32 %295, metadata !4767, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 %294, metadata !4828, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i32 %294, metadata !4828, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4903
  %296 = icmp sgt i32 %294, 0, !dbg !5112
  br i1 %296, label %297, label %302, !dbg !5110

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5113
  call void @llvm.dbg.value(metadata i32 %298, metadata !4828, metadata !DIExpression()), !dbg !4903
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5114
  call void @llvm.dbg.value(metadata i32 %299, metadata !4863, metadata !DIExpression()), !dbg !5115
  %300 = icmp slt i32 %299, 0, !dbg !5116
  %301 = add i32 %295, 1, !dbg !5114
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression()), !dbg !4889
  br i1 %300, label %361, label %293, !llvm.loop !5118

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4903
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4903
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4893
  call void @llvm.dbg.value(metadata i32 %305, metadata !4767, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 %304, metadata !4828, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8 %303, metadata !4832, metadata !DIExpression()), !dbg !4903
  %306 = icmp eq i8 %303, 0, !dbg !5120
  br i1 %306, label %312, label %307, !dbg !5121

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5122
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5123
  call void @llvm.dbg.value(metadata i32 %309, metadata !4866, metadata !DIExpression()), !dbg !5124
  %310 = icmp slt i32 %309, 0, !dbg !5125
  %311 = add i32 %305, 1, !dbg !5123
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression()), !dbg !4889
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4893
  call void @llvm.dbg.value(metadata i32 %313, metadata !4767, metadata !DIExpression()), !dbg !4889
  %314 = lshr i24 %246, 20, !dbg !5127
  %315 = lshr i24 %246, 19, !dbg !5128
  %316 = or i24 %314, %315, !dbg !5129
  %317 = and i24 %316, 1, !dbg !5129
  %318 = icmp eq i24 %317, 0, !dbg !5129
  br i1 %318, label %323, label %319, !dbg !5130

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5131
  call void @llvm.dbg.value(metadata i32 %320, metadata !4870, metadata !DIExpression()), !dbg !5132
  %321 = icmp slt i32 %320, 0, !dbg !5133
  %322 = add i32 %313, 1, !dbg !5131
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression()), !dbg !4889
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4893
  call void @llvm.dbg.value(metadata i32 %324, metadata !4767, metadata !DIExpression()), !dbg !4889
  %325 = and i24 %246, 1048576, !dbg !5135
  %326 = icmp eq i24 %325, 0, !dbg !5135
  br i1 %326, label %333, label %327, !dbg !5136

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5137
  %329 = zext i8 %328 to i32, !dbg !5137
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5137
  call void @llvm.dbg.value(metadata i32 %330, metadata !4876, metadata !DIExpression()), !dbg !5138
  %331 = icmp slt i32 %330, 0, !dbg !5139
  %332 = add i32 %324, 1, !dbg !5137
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression()), !dbg !4889
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4893
  call void @llvm.dbg.value(metadata i32 %334, metadata !4767, metadata !DIExpression()), !dbg !4889
  %335 = load i32, i32* %16, align 4, !dbg !5141
  call void @llvm.dbg.value(metadata i32 %335, metadata !4851, metadata !DIExpression()), !dbg !4903
  br label %336, !dbg !5142

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5143
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4893
  call void @llvm.dbg.value(metadata i32 %338, metadata !4767, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 %337, metadata !4851, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4903
  %339 = icmp sgt i32 %337, 0, !dbg !5144
  br i1 %339, label %340, label %345, !dbg !5142

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5145
  call void @llvm.dbg.value(metadata i32 %341, metadata !4851, metadata !DIExpression()), !dbg !4903
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %342, metadata !4880, metadata !DIExpression()), !dbg !5147
  %343 = icmp slt i32 %342, 0, !dbg !5148
  %344 = add i32 %338, 1, !dbg !5146
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression()), !dbg !4889
  br i1 %343, label %361, label %336, !llvm.loop !5150

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5152
  call void @llvm.dbg.value(metadata i32 %346, metadata !4883, metadata !DIExpression()), !dbg !5153
  %347 = icmp slt i32 %346, 0, !dbg !5154
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression()), !dbg !4889
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5152
  call void @llvm.dbg.value(metadata i32 %349, metadata !4767, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 %304, metadata !4828, metadata !DIExpression()), !dbg !4903
  %350 = icmp sgt i32 %304, 0, !dbg !5156
  br i1 %350, label %351, label %363, !dbg !5157

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5157
  %353 = add i32 %352, %338, !dbg !5157
  br label %354, !dbg !5157

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 %355, metadata !4828, metadata !DIExpression()), !dbg !4903
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5158
  call void @llvm.dbg.value(metadata i32 %356, metadata !4885, metadata !DIExpression()), !dbg !5159
  %357 = icmp slt i32 %356, 0, !dbg !5160
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5162
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4889
  call void @llvm.dbg.value(metadata i32 %359, metadata !4828, metadata !DIExpression()), !dbg !4903
  %360 = icmp sgt i32 %355, 1, !dbg !5156
  br i1 %360, label %354, label %363, !dbg !5157, !llvm.loop !5163

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4767, metadata !DIExpression()), !dbg !4889
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4900
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4893
  call void @llvm.dbg.value(metadata i32 %364, metadata !4767, metadata !DIExpression()), !dbg !4889
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4900
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4889
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !5165
  ret i32 %366, !dbg !5165
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5166 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5170, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8* %1, metadata !5171, metadata !DIExpression()), !dbg !5172
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5173
  store i24 0, i24* %3, align 4, !dbg !5173
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5173
  store i8 0, i8* %4, align 1, !dbg !5173
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5173
  store i32 0, i32* %5, align 4, !dbg !5173
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5173
  store i32 0, i32* %6, align 4, !dbg !5173
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5174
  call void @llvm.dbg.value(metadata i8* %7, metadata !5171, metadata !DIExpression()), !dbg !5172
  %8 = load i8, i8* %7, align 1, !dbg !5175
  %9 = icmp eq i8 %8, 37, !dbg !5177
  br i1 %9, label %10, label %12, !dbg !5178

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5179
  call void @llvm.dbg.value(metadata i8* %11, metadata !5171, metadata !DIExpression()), !dbg !5172
  store i8 37, i8* %4, align 1, !dbg !5181
  br label %18, !dbg !5182

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5183
  call void @llvm.dbg.value(metadata i8* %13, metadata !5171, metadata !DIExpression()), !dbg !5172
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5184
  call void @llvm.dbg.value(metadata i8* %14, metadata !5171, metadata !DIExpression()), !dbg !5172
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5185
  call void @llvm.dbg.value(metadata i8* %15, metadata !5171, metadata !DIExpression()), !dbg !5172
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5186
  call void @llvm.dbg.value(metadata i8* %16, metadata !5171, metadata !DIExpression()), !dbg !5172
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5187
  call void @llvm.dbg.value(metadata i8* %17, metadata !5171, metadata !DIExpression()), !dbg !5172
  br label %18, !dbg !5188

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5172
  ret i8* %19, !dbg !5189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5190 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5194, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i8* %1, metadata !5195, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i8* %2, metadata !5196, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i8* %3, metadata !5197, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i32 0, metadata !5198, metadata !DIExpression()), !dbg !5201
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5202

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5203
  call void @llvm.dbg.value(metadata i32 %9, metadata !5198, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i8* %8, metadata !5196, metadata !DIExpression()), !dbg !5201
  %10 = icmp ult i8* %8, %3, !dbg !5204
  br i1 %10, label %11, label %13, !dbg !5205

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5206
  br label %17, !dbg !5205

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5207

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5208
  %16 = icmp eq i8 %15, 0, !dbg !5207
  br i1 %16, label %24, label %17, !dbg !5202

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5206
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5209
  call void @llvm.dbg.value(metadata i8* %19, metadata !5196, metadata !DIExpression()), !dbg !5201
  %20 = zext i8 %18 to i32, !dbg !5210
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5211
  call void @llvm.dbg.value(metadata i32 %21, metadata !5199, metadata !DIExpression()), !dbg !5212
  %22 = icmp slt i32 %21, 0, !dbg !5213
  %23 = add i32 %9, 1, !dbg !5215
  call void @llvm.dbg.value(metadata i32 undef, metadata !5198, metadata !DIExpression()), !dbg !5201
  br i1 %22, label %24, label %7, !llvm.loop !5216

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5201
  ret i32 %25, !dbg !5218
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5219 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5223, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5224, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata i8* %2, metadata !5225, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata i8* %3, metadata !5226, metadata !DIExpression()), !dbg !5233
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5234
  %6 = load i8, i8* %5, align 1, !dbg !5234
  %7 = zext i8 %6 to i32, !dbg !5235
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5236
  %9 = icmp eq i32 %8, 0, !dbg !5236
  call void @llvm.dbg.value(metadata i1 %9, metadata !5227, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5233
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5237
  call void @llvm.dbg.value(metadata i32 %10, metadata !5228, metadata !DIExpression()), !dbg !5233
  %11 = ptrtoint i8* %3 to i32, !dbg !5238
  %12 = ptrtoint i8* %2 to i32, !dbg !5238
  %13 = sub i32 %11, %12, !dbg !5238
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5239
  call void @llvm.dbg.value(metadata i8* %14, metadata !5230, metadata !DIExpression()), !dbg !5233
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5240

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5233
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5223, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata i8* %18, metadata !5230, metadata !DIExpression()), !dbg !5233
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5241
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5242
  call void @llvm.dbg.value(metadata i32 %25, metadata !5231, metadata !DIExpression()), !dbg !5243
  %26 = icmp ult i32 %25, 10, !dbg !5244
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5245
  %28 = add i32 %27, %25, !dbg !5243
  %29 = trunc i32 %28 to i8, !dbg !5245
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5246
  call void @llvm.dbg.value(metadata i8* %30, metadata !5230, metadata !DIExpression()), !dbg !5233
  store i8 %29, i8* %30, align 1, !dbg !5247
  call void @llvm.dbg.value(metadata i64 %22, metadata !5223, metadata !DIExpression()), !dbg !5233
  %31 = icmp uge i64 %19, %15, !dbg !5248
  %32 = icmp ugt i8* %30, %2, !dbg !5249
  %33 = and i1 %31, %32, !dbg !5249
  br i1 %33, label %17, label %34, !dbg !5250, !llvm.loop !5251

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5253
  %36 = load i24, i24* %35, align 4, !dbg !5253
  %37 = and i24 %36, 32, !dbg !5253
  %38 = icmp eq i24 %37, 0, !dbg !5253
  br i1 %38, label %44, label %39, !dbg !5255

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5256

40:                                               ; preds = %39
  br label %41, !dbg !5258

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5262
  store i24 %43, i24* %35, align 4, !dbg !5262
  br label %44, !dbg !5263

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5263
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5264 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5270, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.value(metadata i8* %1, metadata !5271, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.value(metadata i32 %2, metadata !5272, metadata !DIExpression()), !dbg !5273
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5274
  %5 = load i24, i24* %4, align 4, !dbg !5274
  %6 = lshr i24 %5, 11, !dbg !5274
  %7 = and i24 %6, 15, !dbg !5274
  %8 = zext i24 %7 to i32, !dbg !5274
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5275

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5276
  store i32 %2, i32* %10, align 4, !dbg !5278
  br label %28, !dbg !5279

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5280
  store i8 %12, i8* %1, align 1, !dbg !5281
  br label %28, !dbg !5282

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5283
  %15 = bitcast i8* %1 to i16*, !dbg !5284
  store i16 %14, i16* %15, align 2, !dbg !5285
  br label %28, !dbg !5286

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5287
  store i32 %2, i32* %17, align 4, !dbg !5288
  br label %28, !dbg !5289

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5290
  %20 = bitcast i8* %1 to i64*, !dbg !5291
  store i64 %19, i64* %20, align 8, !dbg !5292
  br label %28, !dbg !5293

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5294
  %23 = bitcast i8* %1 to i64*, !dbg !5295
  store i64 %22, i64* %23, align 8, !dbg !5296
  br label %28, !dbg !5297

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5298
  store i32 %2, i32* %25, align 4, !dbg !5299
  br label %28, !dbg !5300

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5301
  store i32 %2, i32* %27, align 4, !dbg !5302
  br label %28, !dbg !5303

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5304
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5308, metadata !DIExpression()), !dbg !5309
  %2 = add i32 %0, -65, !dbg !5310
  %3 = icmp ult i32 %2, 26, !dbg !5311
  %4 = zext i1 %3 to i32, !dbg !5311
  ret i32 %4, !dbg !5312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5313 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5317, metadata !DIExpression()), !dbg !5318
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5319

2:                                                ; preds = %1
  br label %4, !dbg !5320

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5322

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5323
  ret i32 %5, !dbg !5324
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5325 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5327, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.value(metadata i8* %1, metadata !5328, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.value(metadata i8 1, metadata !5329, metadata !DIExpression()), !dbg !5330
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5331

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5329, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.value(metadata i8* %5, metadata !5328, metadata !DIExpression()), !dbg !5330
  %6 = load i8, i8* %5, align 1, !dbg !5332
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5334

7:                                                ; preds = %4
  br label %11, !dbg !5335

8:                                                ; preds = %4
  br label %11, !dbg !5337

9:                                                ; preds = %4
  br label %11, !dbg !5338

10:                                               ; preds = %4
  br label %11, !dbg !5339

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5340
  %14 = or i24 %13, %12, !dbg !5340
  store i24 %14, i24* %3, align 4, !dbg !5340
  call void @llvm.dbg.value(metadata i8 poison, metadata !5329, metadata !DIExpression()), !dbg !5330
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5328, metadata !DIExpression()), !dbg !5330
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5329, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.value(metadata i8* %15, metadata !5328, metadata !DIExpression()), !dbg !5330
  %17 = load i24, i24* %3, align 4, !dbg !5341
  %18 = and i24 %17, 68, !dbg !5343
  %19 = icmp eq i24 %18, 68, !dbg !5343
  br i1 %19, label %20, label %22, !dbg !5343

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5344
  store i24 %21, i24* %3, align 4, !dbg !5344
  br label %22, !dbg !5346

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5347
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5348 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5350, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.value(metadata i8* %1, metadata !5351, metadata !DIExpression()), !dbg !5354
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5355
  %5 = load i24, i24* %4, align 4, !dbg !5356
  %6 = or i24 %5, 128, !dbg !5356
  store i24 %6, i24* %4, align 4, !dbg !5356
  call void @llvm.dbg.value(metadata i8* %1, metadata !5351, metadata !DIExpression()), !dbg !5354
  %7 = load i8, i8* %1, align 1, !dbg !5357
  %8 = icmp eq i8 %7, 42, !dbg !5359
  br i1 %8, label %9, label %12, !dbg !5360

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5361
  store i24 %10, i24* %4, align 4, !dbg !5361
  call void @llvm.dbg.value(metadata i8* %1, metadata !5351, metadata !DIExpression()), !dbg !5354
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5363
  call void @llvm.dbg.value(metadata i8* %11, metadata !5351, metadata !DIExpression()), !dbg !5354
  store i8* %11, i8** %3, align 4, !dbg !5363
  br label %29, !dbg !5364

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5352, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.value(metadata i8** %3, metadata !5351, metadata !DIExpression(DW_OP_deref)), !dbg !5354
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5365
  call void @llvm.dbg.value(metadata i32 %13, metadata !5353, metadata !DIExpression()), !dbg !5354
  %14 = load i8*, i8** %3, align 4, !dbg !5366
  call void @llvm.dbg.value(metadata i8* %14, metadata !5351, metadata !DIExpression()), !dbg !5354
  %15 = icmp eq i8* %14, %1, !dbg !5368
  br i1 %15, label %29, label %16, !dbg !5369

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5370
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5372
  store i32 %13, i32* %18, align 4, !dbg !5373
  %19 = lshr i32 %13, 31, !dbg !5374
  %20 = lshr i24 %17, 1, !dbg !5375
  %21 = and i24 %20, 1, !dbg !5375
  %22 = zext i24 %21 to i32, !dbg !5375
  %23 = or i32 %19, %22, !dbg !5375
  %24 = trunc i32 %23 to i24, !dbg !5375
  %25 = shl nuw nsw i24 %24, 1, !dbg !5375
  %26 = and i24 %17, -131, !dbg !5375
  %27 = or i24 %26, 128, !dbg !5375
  %28 = or i24 %25, %27, !dbg !5375
  store i24 %28, i24* %4, align 4, !dbg !5375
  br label %29, !dbg !5376

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5354
  ret i8* %30, !dbg !5377
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5378 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5380, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.value(metadata i8* %1, metadata !5381, metadata !DIExpression()), !dbg !5383
  %4 = load i8, i8* %1, align 1, !dbg !5384
  %5 = icmp eq i8 %4, 46, !dbg !5385
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5386
  %7 = load i24, i24* %6, align 4, !dbg !5387
  %8 = select i1 %5, i24 512, i24 0, !dbg !5387
  %9 = and i24 %7, -513, !dbg !5387
  %10 = or i24 %9, %8, !dbg !5387
  store i24 %10, i24* %6, align 4, !dbg !5387
  br i1 %5, label %11, label %32, !dbg !5388

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5381, metadata !DIExpression()), !dbg !5383
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5389
  call void @llvm.dbg.value(metadata i8* %12, metadata !5381, metadata !DIExpression()), !dbg !5383
  store i8* %12, i8** %3, align 4, !dbg !5389
  %13 = load i8, i8* %12, align 1, !dbg !5390
  %14 = icmp eq i8 %13, 42, !dbg !5392
  br i1 %14, label %15, label %18, !dbg !5393

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5394
  store i24 %16, i24* %6, align 4, !dbg !5394
  call void @llvm.dbg.value(metadata i8* %12, metadata !5381, metadata !DIExpression()), !dbg !5383
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5396
  call void @llvm.dbg.value(metadata i8* %17, metadata !5381, metadata !DIExpression()), !dbg !5383
  store i8* %17, i8** %3, align 4, !dbg !5396
  br label %32, !dbg !5397

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5381, metadata !DIExpression(DW_OP_deref)), !dbg !5383
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5398
  call void @llvm.dbg.value(metadata i32 %19, metadata !5382, metadata !DIExpression()), !dbg !5383
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5399
  store i32 %19, i32* %20, align 4, !dbg !5400
  %21 = lshr i32 %19, 31, !dbg !5401
  %22 = load i24, i24* %6, align 4, !dbg !5402
  %23 = lshr i24 %22, 1, !dbg !5402
  %24 = and i24 %23, 1, !dbg !5402
  %25 = zext i24 %24 to i32, !dbg !5402
  %26 = or i32 %21, %25, !dbg !5402
  %27 = trunc i32 %26 to i24, !dbg !5402
  %28 = shl nuw nsw i24 %27, 1, !dbg !5402
  %29 = and i24 %22, -3, !dbg !5402
  %30 = or i24 %28, %29, !dbg !5402
  store i24 %30, i24* %6, align 4, !dbg !5402
  %31 = load i8*, i8** %3, align 4, !dbg !5403
  call void @llvm.dbg.value(metadata i8* %31, metadata !5381, metadata !DIExpression()), !dbg !5383
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5383
  ret i8* %33, !dbg !5404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5405 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5407, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.value(metadata i8* %1, metadata !5408, metadata !DIExpression()), !dbg !5409
  %3 = load i8, i8* %1, align 1, !dbg !5410
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5411

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5412
  call void @llvm.dbg.value(metadata i8* %5, metadata !5408, metadata !DIExpression()), !dbg !5409
  %6 = load i8, i8* %5, align 1, !dbg !5415
  %7 = icmp eq i8 %6, 104, !dbg !5416
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5417
  %9 = load i24, i24* %8, align 4, !dbg !5417
  %10 = and i24 %9, -30721, !dbg !5417
  br i1 %7, label %11, label %14, !dbg !5418

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5419
  store i24 %12, i24* %8, align 4, !dbg !5419
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5421
  call void @llvm.dbg.value(metadata i8* %13, metadata !5408, metadata !DIExpression()), !dbg !5409
  br label %56, !dbg !5422

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5423
  store i24 %15, i24* %8, align 4, !dbg !5423
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5425
  call void @llvm.dbg.value(metadata i8* %17, metadata !5408, metadata !DIExpression()), !dbg !5409
  %18 = load i8, i8* %17, align 1, !dbg !5427
  %19 = icmp eq i8 %18, 108, !dbg !5428
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5429
  %21 = load i24, i24* %20, align 4, !dbg !5429
  %22 = and i24 %21, -30721, !dbg !5429
  br i1 %19, label %23, label %26, !dbg !5430

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5431
  store i24 %24, i24* %20, align 4, !dbg !5431
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5433
  call void @llvm.dbg.value(metadata i8* %25, metadata !5408, metadata !DIExpression()), !dbg !5409
  br label %56, !dbg !5434

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5435
  store i24 %27, i24* %20, align 4, !dbg !5435
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5437
  %30 = load i24, i24* %29, align 4, !dbg !5438
  %31 = and i24 %30, -30721, !dbg !5438
  %32 = or i24 %31, 10240, !dbg !5438
  store i24 %32, i24* %29, align 4, !dbg !5438
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5439
  call void @llvm.dbg.value(metadata i8* %33, metadata !5408, metadata !DIExpression()), !dbg !5409
  br label %56, !dbg !5440

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5441
  %36 = load i24, i24* %35, align 4, !dbg !5442
  %37 = and i24 %36, -30721, !dbg !5442
  %38 = or i24 %37, 12288, !dbg !5442
  store i24 %38, i24* %35, align 4, !dbg !5442
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5443
  call void @llvm.dbg.value(metadata i8* %39, metadata !5408, metadata !DIExpression()), !dbg !5409
  br label %56, !dbg !5444

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5445
  %42 = load i24, i24* %41, align 4, !dbg !5446
  %43 = and i24 %42, -30721, !dbg !5446
  %44 = or i24 %43, 14336, !dbg !5446
  store i24 %44, i24* %41, align 4, !dbg !5446
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5447
  call void @llvm.dbg.value(metadata i8* %45, metadata !5408, metadata !DIExpression()), !dbg !5409
  br label %56, !dbg !5448

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5449
  %48 = load i24, i24* %47, align 4, !dbg !5450
  %49 = and i24 %48, -30723, !dbg !5450
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5451
  call void @llvm.dbg.value(metadata i8* %50, metadata !5408, metadata !DIExpression()), !dbg !5409
  %51 = or i24 %49, 16386, !dbg !5452
  store i24 %51, i24* %47, align 4, !dbg !5452
  br label %56, !dbg !5453

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5454
  %54 = load i24, i24* %53, align 4, !dbg !5455
  %55 = and i24 %54, -30721, !dbg !5455
  store i24 %55, i24* %53, align 4, !dbg !5455
  br label %56, !dbg !5456

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5408, metadata !DIExpression()), !dbg !5409
  ret i8* %57, !dbg !5457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5458 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5460, metadata !DIExpression()), !dbg !5465
  call void @llvm.dbg.value(metadata i8* %1, metadata !5461, metadata !DIExpression()), !dbg !5465
  call void @llvm.dbg.value(metadata i8 0, metadata !5462, metadata !DIExpression()), !dbg !5465
  call void @llvm.dbg.value(metadata i8* %1, metadata !5461, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5465
  %3 = load i8, i8* %1, align 1, !dbg !5466
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5467
  store i8 %3, i8* %4, align 1, !dbg !5468
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5469

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5470

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5471
  %9 = load i24, i24* %8, align 4, !dbg !5471
  %10 = and i24 %9, -458753, !dbg !5471
  %11 = or i24 %10, %7, !dbg !5471
  call void @llvm.dbg.label(metadata !5463), !dbg !5472
  %12 = and i24 %9, 30720, !dbg !5473
  %13 = icmp eq i24 %12, 16384, !dbg !5473
  %14 = zext i1 %13 to i24, !dbg !5475
  %15 = or i24 %11, %14, !dbg !5475
  %16 = icmp eq i8 %3, 99, !dbg !5476
  br i1 %16, label %17, label %43, !dbg !5478

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5479
  %19 = icmp ne i24 %18, 0, !dbg !5479
  call void @llvm.dbg.value(metadata i1 %19, metadata !5462, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5465
  br label %43, !dbg !5481

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5482
  %22 = load i24, i24* %21, align 4, !dbg !5483
  %23 = and i24 %22, -458753, !dbg !5483
  %24 = or i24 %23, 262144, !dbg !5483
  call void @llvm.dbg.value(metadata i8 1, metadata !5462, metadata !DIExpression()), !dbg !5465
  br label %43, !dbg !5484

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5487
  %27 = load i24, i24* %26, align 4, !dbg !5488
  %28 = and i24 %27, -458753, !dbg !5488
  %29 = or i24 %28, 196608, !dbg !5488
  %30 = and i24 %27, 30720, !dbg !5489
  %31 = icmp eq i24 %30, 16384, !dbg !5489
  br label %43, !dbg !5491

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5492
  %34 = load i24, i24* %33, align 4, !dbg !5493
  %35 = and i24 %34, -458753, !dbg !5493
  %36 = or i24 %35, 196608, !dbg !5493
  %37 = and i24 %34, 30720, !dbg !5494
  %38 = icmp ne i24 %37, 0, !dbg !5494
  br label %43, !dbg !5496

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5497
  %41 = load i24, i24* %40, align 4, !dbg !5498
  %42 = or i24 %41, 1, !dbg !5498
  br label %43, !dbg !5499

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5500
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5501
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5502
  call void @llvm.dbg.value(metadata i8* %48, metadata !5461, metadata !DIExpression()), !dbg !5465
  call void @llvm.dbg.value(metadata i8 poison, metadata !5462, metadata !DIExpression()), !dbg !5465
  %49 = lshr i24 %44, 1, !dbg !5500
  %50 = and i24 %49, 1, !dbg !5500
  %51 = zext i24 %50 to i32, !dbg !5500
  %52 = or i32 %51, %47, !dbg !5500
  %53 = trunc i32 %52 to i24, !dbg !5500
  %54 = shl nuw nsw i24 %53, 1, !dbg !5500
  %55 = and i24 %44, -3, !dbg !5500
  %56 = or i24 %54, %55, !dbg !5500
  store i24 %56, i24* %46, align 4, !dbg !5500
  ret i8* %48, !dbg !5503
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5504 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5509, metadata !DIExpression()), !dbg !5512
  %2 = load i8*, i8** %0, align 4, !dbg !5513
  call void @llvm.dbg.value(metadata i8* %2, metadata !5510, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata i32 0, metadata !5511, metadata !DIExpression()), !dbg !5512
  %3 = load i8, i8* %2, align 1, !dbg !5514
  %4 = zext i8 %3 to i32, !dbg !5515
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5516
  %6 = icmp eq i32 %5, 0, !dbg !5517
  br i1 %6, label %19, label %7, !dbg !5517

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5511, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata i8* %10, metadata !5510, metadata !DIExpression()), !dbg !5512
  %11 = mul i32 %9, 10, !dbg !5518
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5520
  call void @llvm.dbg.value(metadata i8* %12, metadata !5510, metadata !DIExpression()), !dbg !5512
  %13 = add i32 %11, -48, !dbg !5521
  %14 = add i32 %13, %8, !dbg !5522
  call void @llvm.dbg.value(metadata i32 %14, metadata !5511, metadata !DIExpression()), !dbg !5512
  %15 = load i8, i8* %12, align 1, !dbg !5514
  %16 = zext i8 %15 to i32, !dbg !5515
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5516
  %18 = icmp eq i32 %17, 0, !dbg !5517
  br i1 %18, label %19, label %7, !dbg !5517, !llvm.loop !5523

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5512
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5512
  store i8* %20, i8** %0, align 4, !dbg !5525
  ret i32 %21, !dbg !5526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5529, metadata !DIExpression()), !dbg !5530
  %2 = add i32 %0, -48, !dbg !5531
  %3 = icmp ult i32 %2, 10, !dbg !5532
  %4 = zext i1 %3 to i32, !dbg !5532
  ret i32 %4, !dbg !5533
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5534 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #24, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #24, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #24, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #24, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_RUNTIME_STATS\0A\09.equ\09CONFIG_SYS_HEAP_RUNTIME_STATS,1\0A\09.type\09CONFIG_SYS_HEAP_RUNTIME_STATS,%object", ""() #24, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !6054, !srcloc !6055
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !6056, !srcloc !6057
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !6058, !srcloc !6059
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !6060, !srcloc !6061
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !6062, !srcloc !6063
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !6064, !srcloc !6065
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !6066, !srcloc !6067
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !6068, !srcloc !6069
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !6070, !srcloc !6071
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !6072, !srcloc !6073
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !6074, !srcloc !6075
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !6076, !srcloc !6077
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !6082, !srcloc !6083
  ret void, !dbg !6084
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6087, metadata !DIExpression()), !dbg !6089
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6090
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6091
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6092, !srcloc !6101
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6092
  call void @llvm.dbg.value(metadata i32 %3, metadata !6098, metadata !DIExpression()) #24, !dbg !6102
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()) #24, !dbg !6102
  call void @llvm.dbg.value(metadata i32 %3, metadata !6088, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i32 %3, metadata !6103, metadata !DIExpression()) #24, !dbg !6108
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !6110, !srcloc !6111
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6112
  ret i32 0, !dbg !6113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6114 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6116
  %2 = or i32 %1, 512, !dbg !6116
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6116
  ret void, !dbg !6117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6118 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6119
  %2 = or i32 %1, 1024, !dbg !6119
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6119
  ret void, !dbg !6120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !6121 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6123, metadata !DIExpression()), !dbg !6124
  ret i32 0, !dbg !6125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6175, metadata !DIExpression()), !dbg !6177
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6176, metadata !DIExpression()), !dbg !6177
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6178
  ret void, !dbg !6179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6180 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6197, metadata !DIExpression()), !dbg !6200
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6198, metadata !DIExpression()), !dbg !6200
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6201
  %4 = load i32, i32* %3, align 4, !dbg !6201
  call void @llvm.dbg.value(metadata i32 %4, metadata !6199, metadata !DIExpression()), !dbg !6200
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6202
  ret void, !dbg !6203
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6204 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6208, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.value(metadata i8* %0, metadata !6209, metadata !DIExpression()), !dbg !6211
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6212
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6212
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6210, metadata !DIExpression()), !dbg !6213
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6213
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6214
  %5 = bitcast i8* %4 to i32*, !dbg !6214
  %6 = load i32, i32* %5, align 4, !dbg !6214
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6215
  store i32 %6, i32* %7, align 4, !dbg !6216
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6217
  unreachable, !dbg !6218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6222, metadata !DIExpression()), !dbg !6223
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6224
  ret void, !dbg !6225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6230, metadata !DIExpression()), !dbg !6231
  %2 = icmp sgt i32 %0, -1, !dbg !6232
  br i1 %2, label %3, label %8, !dbg !6234

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6235, !srcloc !6237
  %4 = and i32 %0, 31, !dbg !6238
  %5 = shl nuw i32 1, %4, !dbg !6239
  %6 = lshr i32 %0, 5, !dbg !6240
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6241
  store volatile i32 %5, i32* %7, align 4, !dbg !6242
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6243, !srcloc !6244
  br label %8, !dbg !6245

8:                                                ; preds = %3, %1
  ret void, !dbg !6246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6249, metadata !DIExpression()), !dbg !6250
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6251
  ret void, !dbg !6252
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6255, metadata !DIExpression()), !dbg !6256
  %2 = icmp sgt i32 %0, -1, !dbg !6257
  br i1 %2, label %3, label %8, !dbg !6259

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6260
  %5 = shl nuw i32 1, %4, !dbg !6262
  %6 = lshr i32 %0, 5, !dbg !6263
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6264
  store volatile i32 %5, i32* %7, align 4, !dbg !6265
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6266, !srcloc !6270
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6271, !srcloc !6274
  br label %8, !dbg !6275

8:                                                ; preds = %3, %1
  ret void, !dbg !6276
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6281, metadata !DIExpression()), !dbg !6282
  %2 = lshr i32 %0, 5, !dbg !6283
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6284
  %4 = load volatile i32, i32* %3, align 4, !dbg !6284
  %5 = and i32 %0, 31, !dbg !6285
  %6 = shl nuw i32 1, %5, !dbg !6285
  %7 = and i32 %4, %6, !dbg !6286
  ret i32 %7, !dbg !6287
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6292, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata i32 %1, metadata !6293, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata i32 %2, metadata !6294, metadata !DIExpression()), !dbg !6295
  %4 = add i32 %1, 1, !dbg !6296
  call void @llvm.dbg.value(metadata i32 %4, metadata !6293, metadata !DIExpression()), !dbg !6295
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6299
  ret void, !dbg !6300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6305, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.value(metadata i32 %1, metadata !6306, metadata !DIExpression()), !dbg !6307
  %3 = trunc i32 %1 to i8, !dbg !6308
  %4 = shl i8 %3, 4, !dbg !6308
  %5 = and i32 %0, 15, !dbg !6310
  %6 = add nsw i32 %5, -4, !dbg !6310
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6310
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6310
  %9 = icmp slt i32 %0, 0, !dbg !6310
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6310
  store volatile i8 %4, i8* %10, align 1, !dbg !6308
  ret void, !dbg !6311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6312 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6314, metadata !DIExpression()), !dbg !6315
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6316
  ret void, !dbg !6317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6318 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6320
  tail call void @z_arm_int_exit() #25, !dbg !6321
  ret void, !dbg !6322
}

; Function Attrs: optsize
declare !dbg !6323 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6324 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6326 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6328
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6329
  tail call void @z_bss_zero() #25, !dbg !6330
  tail call void @z_data_copy() #25, !dbg !6331
  tail call void @z_arm_interrupt_init() #25, !dbg !6332
  tail call void @z_cstart() #28, !dbg !6333
  unreachable, !dbg !6333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6334 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6335
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6336, !srcloc !6339
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6340, !srcloc !6343
  ret void, !dbg !6344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6345 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6346
  %2 = and i32 %1, -15728641, !dbg !6346
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6346
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6347, !srcloc !6352
  call void @llvm.dbg.value(metadata i32 %3, metadata !6350, metadata !DIExpression()) #24, !dbg !6353
  %4 = and i32 %3, -5, !dbg !6354
  call void @llvm.dbg.value(metadata i32 %4, metadata !6355, metadata !DIExpression()) #24, !dbg !6360
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6364, !srcloc !6343
  ret void, !dbg !6366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6370, metadata !DIExpression()), !dbg !6371
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6372
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6373
  store i32 %0, i32* %3, align 4, !dbg !6374
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6375
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6376
  store i32 %4, i32* %5, align 4, !dbg !6377
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6378
  %7 = or i32 %6, 268435456, !dbg !6378
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6378
  call void @llvm.dbg.value(metadata i32 0, metadata !6379, metadata !DIExpression()) #24, !dbg !6382
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6384, !srcloc !6385
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6386
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6387
  %10 = load i32, i32* %9, align 4, !dbg !6387
  ret i32 %10, !dbg !6388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6389 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6499, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6500, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i8* %2, metadata !6501, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6502, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i8* %4, metadata !6503, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i8* %5, metadata !6504, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i8* %6, metadata !6505, metadata !DIExpression()), !dbg !6507
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6508
  call void @llvm.dbg.value(metadata i8* %8, metadata !6506, metadata !DIExpression()), !dbg !6507
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6509
  %10 = bitcast i8* %9 to i32*, !dbg !6509
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6510
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6511
  %12 = bitcast i8* %8 to i32*, !dbg !6512
  store i32 %11, i32* %12, align 4, !dbg !6513
  %13 = ptrtoint i8* %4 to i32, !dbg !6514
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6515
  %15 = bitcast i8* %14 to i32*, !dbg !6515
  store i32 %13, i32* %15, align 4, !dbg !6516
  %16 = ptrtoint i8* %5 to i32, !dbg !6517
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6518
  %18 = bitcast i8* %17 to i32*, !dbg !6518
  store i32 %16, i32* %18, align 4, !dbg !6519
  %19 = ptrtoint i8* %6 to i32, !dbg !6520
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6521
  %21 = bitcast i8* %20 to i32*, !dbg !6521
  store i32 %19, i32* %21, align 4, !dbg !6522
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6523
  %23 = bitcast i8* %22 to i32*, !dbg !6523
  store i32 16777216, i32* %23, align 4, !dbg !6524
  %24 = ptrtoint i8* %8 to i32, !dbg !6525
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6526
  store i32 %24, i32* %25, align 8, !dbg !6527
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6528
  store i32 0, i32* %26, align 4, !dbg !6529
  ret void, !dbg !6530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6536, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata i32 %1, metadata !6537, metadata !DIExpression()), !dbg !6542
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6543
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6538, metadata !DIExpression()), !dbg !6542
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6544
  br i1 %4, label %19, label %5, !dbg !6546

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6541, metadata !DIExpression()), !dbg !6542
  %6 = icmp eq i32 %0, -22, !dbg !6547
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6547
  %8 = load i32, i32* %7, align 4, !dbg !6547
  br i1 %6, label %16, label %9, !dbg !6549

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6547
  %11 = icmp ule i32 %10, %0, !dbg !6547
  %12 = icmp ugt i32 %8, %0, !dbg !6547
  %13 = and i1 %12, %11, !dbg !6547
  %14 = icmp ugt i32 %8, %1, !dbg !6547
  %15 = and i1 %14, %13, !dbg !6547
  br i1 %15, label %18, label %19, !dbg !6547

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6547
  br i1 %17, label %18, label %19, !dbg !6549

18:                                               ; preds = %9, %16
  br label %19, !dbg !6550

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6542
  ret i32 %20, !dbg !6552
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6557, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i8* %1, metadata !6558, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6559, metadata !DIExpression()), !dbg !6560
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6561
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6562
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !6563, !srcloc !6564
  unreachable, !dbg !6565
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6566 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6584, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i32 %1, metadata !6585, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i32 %2, metadata !6586, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6587, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i32 0, metadata !6588, metadata !DIExpression()), !dbg !6594
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6595
  %9 = and i32 %8, 511, !dbg !6596
  call void @llvm.dbg.value(metadata i32 %9, metadata !6589, metadata !DIExpression()), !dbg !6594
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6597
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6597
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6598
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6598
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6593, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.value(metadata i32 0, metadata !6600, metadata !DIExpression()) #24, !dbg !6603
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6605, !srcloc !6606
  call void @llvm.dbg.value(metadata i8* %6, metadata !6591, metadata !DIExpression(DW_OP_deref)), !dbg !6594
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6607
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6592, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i8* %5, metadata !6590, metadata !DIExpression(DW_OP_deref)), !dbg !6594
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6608
  call void @llvm.dbg.value(metadata i32 %12, metadata !6588, metadata !DIExpression()), !dbg !6594
  %13 = load i8, i8* %5, align 1, !dbg !6609, !range !6611
  call void @llvm.dbg.value(metadata i8 %13, metadata !6590, metadata !DIExpression()), !dbg !6594
  %14 = icmp eq i8 %13, 0, !dbg !6609
  br i1 %14, label %15, label %32, !dbg !6612

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6613
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !6614
  %18 = load i8, i8* %6, align 1, !dbg !6615, !range !6611
  call void @llvm.dbg.value(metadata i8 %18, metadata !6591, metadata !DIExpression()), !dbg !6594
  %19 = icmp eq i8 %18, 0, !dbg !6615
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6617
  %21 = load i32, i32* %20, align 4, !dbg !6617
  br i1 %19, label %27, label %22, !dbg !6618

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6619
  %24 = icmp eq i32 %23, 0, !dbg !6622
  br i1 %24, label %25, label %31, !dbg !6623

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6624
  br label %29, !dbg !6626

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6627
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6617
  br label %31, !dbg !6629

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !6629
  br label %32, !dbg !6630

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6630
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6630
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6630
  ret void, !dbg !6630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6636, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.value(metadata i32 %1, metadata !6637, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.value(metadata i32 %2, metadata !6638, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.value(metadata i8* %3, metadata !6639, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.value(metadata i8 0, metadata !6640, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6641, metadata !DIExpression()), !dbg !6642
  store i8 0, i8* %3, align 1, !dbg !6643
  %5 = icmp ult i32 %2, -16777216, !dbg !6644
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6646
  br i1 %8, label %16, label %9, !dbg !6646

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6647
  %11 = icmp eq i32 %10, 0, !dbg !6647
  br i1 %11, label %12, label %13, !dbg !6649

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6641, metadata !DIExpression()), !dbg !6642
  store i8 1, i8* %3, align 1, !dbg !6652
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6642
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6641, metadata !DIExpression()), !dbg !6642
  br label %16, !dbg !6655

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6642
  ret %struct.__esf* %17, !dbg !6656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6657 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6661, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.value(metadata i32 %1, metadata !6662, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.value(metadata i8* %2, metadata !6663, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.value(metadata i32 0, metadata !6664, metadata !DIExpression()), !dbg !6665
  store i8 0, i8* %2, align 1, !dbg !6666
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6667

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6668
  call void @llvm.dbg.value(metadata i32 %5, metadata !6664, metadata !DIExpression()), !dbg !6665
  br label %11, !dbg !6670

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6671
  call void @llvm.dbg.value(metadata i32 %7, metadata !6664, metadata !DIExpression()), !dbg !6665
  br label %11, !dbg !6672

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6673
  call void @llvm.dbg.value(metadata i32 0, metadata !6664, metadata !DIExpression()), !dbg !6665
  br label %11, !dbg !6674

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6675
  call void @llvm.dbg.value(metadata i32 0, metadata !6664, metadata !DIExpression()), !dbg !6665
  br label %11, !dbg !6676

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6677
  br label %11, !dbg !6678

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6679
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6680 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6684, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata i8* %1, metadata !6685, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata i32 0, metadata !6686, metadata !DIExpression()), !dbg !6687
  store i8 0, i8* %1, align 1, !dbg !6688
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6689
  %4 = and i32 %3, 2, !dbg !6691
  %5 = icmp eq i32 %4, 0, !dbg !6692
  br i1 %5, label %6, label %33, !dbg !6693

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6694
  %8 = icmp sgt i32 %7, -1, !dbg !6696
  br i1 %8, label %9, label %33, !dbg !6697

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6698
  %11 = and i32 %10, 1073741824, !dbg !6700
  %12 = icmp eq i32 %11, 0, !dbg !6701
  br i1 %12, label %33, label %13, !dbg !6702

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6703
  br i1 %14, label %15, label %18, !dbg !6706

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6707
  %17 = load i32, i32* %16, align 4, !dbg !6707
  call void @llvm.dbg.value(metadata i32 %17, metadata !6686, metadata !DIExpression()), !dbg !6687
  br label %33, !dbg !6709

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6710
  %20 = and i32 %19, 255, !dbg !6712
  %21 = icmp eq i32 %20, 0, !dbg !6713
  br i1 %21, label %24, label %22, !dbg !6714

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6715
  call void @llvm.dbg.value(metadata i32 %23, metadata !6686, metadata !DIExpression()), !dbg !6687
  br label %33, !dbg !6717

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6718
  %26 = and i32 %25, 65280, !dbg !6720
  %27 = icmp eq i32 %26, 0, !dbg !6721
  br i1 %27, label %29, label %28, !dbg !6722

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6723
  call void @llvm.dbg.value(metadata i32 0, metadata !6686, metadata !DIExpression()), !dbg !6687
  br label %33, !dbg !6725

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6726
  %31 = icmp ult i32 %30, 65536, !dbg !6728
  br i1 %31, label %33, label %32, !dbg !6729

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6730
  call void @llvm.dbg.value(metadata i32 0, metadata !6686, metadata !DIExpression()), !dbg !6687
  br label %33, !dbg !6732

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6687
  call void @llvm.dbg.value(metadata i32 %34, metadata !6686, metadata !DIExpression()), !dbg !6687
  ret i32 %34, !dbg !6733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6734 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6736, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata i32 %1, metadata !6737, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata i8* %2, metadata !6738, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata i32 0, metadata !6739, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata i32 -22, metadata !6740, metadata !DIExpression()), !dbg !6749
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6750
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6752
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6754
  %7 = and i32 %6, 2, !dbg !6755
  %8 = icmp eq i32 %7, 0, !dbg !6756
  br i1 %8, label %19, label %9, !dbg !6757

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6758
  call void @llvm.dbg.value(metadata i32 %10, metadata !6741, metadata !DIExpression()), !dbg !6759
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6760
  %12 = and i32 %11, 128, !dbg !6762
  %13 = icmp eq i32 %12, 0, !dbg !6763
  br i1 %13, label %19, label %14, !dbg !6764

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6740, metadata !DIExpression()), !dbg !6749
  %15 = icmp eq i32 %1, 0, !dbg !6765
  br i1 %15, label %19, label %16, !dbg !6768

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6769
  %18 = and i32 %17, -129, !dbg !6769
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6769
  br label %19, !dbg !6771

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6749
  call void @llvm.dbg.value(metadata i32 %20, metadata !6740, metadata !DIExpression()), !dbg !6749
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6772
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6774
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6776
  %24 = and i32 %23, 16, !dbg !6777
  %25 = icmp eq i32 %24, 0, !dbg !6777
  br i1 %25, label %26, label %30, !dbg !6778

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6779
  %28 = and i32 %27, 2, !dbg !6780
  %29 = icmp eq i32 %28, 0, !dbg !6780
  br i1 %29, label %39, label %30, !dbg !6781

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6782
  %32 = and i32 %31, 2048, !dbg !6783
  %33 = icmp eq i32 %32, 0, !dbg !6783
  br i1 %33, label %39, label %34, !dbg !6784

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6785
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !6786
  call void @llvm.dbg.value(metadata i32 %36, metadata !6744, metadata !DIExpression()), !dbg !6787
  %37 = icmp eq i32 %36, 0, !dbg !6788
  br i1 %37, label %39, label %38, !dbg !6790

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6791, metadata !DIExpression()) #24, !dbg !6794
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !6797, !srcloc !6798
  call void @llvm.dbg.value(metadata i32 2, metadata !6739, metadata !DIExpression()), !dbg !6749
  br label %39, !dbg !6799

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6749
  call void @llvm.dbg.value(metadata i32 %40, metadata !6739, metadata !DIExpression()), !dbg !6749
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6800
  %42 = and i32 %41, 32, !dbg !6802
  %43 = icmp eq i32 %42, 0, !dbg !6803
  br i1 %43, label %47, label %44, !dbg !6804

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6805
  %46 = and i32 %45, -8193, !dbg !6805
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6805
  br label %47, !dbg !6807

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6808
  %49 = or i32 %48, 255, !dbg !6808
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6808
  store i8 0, i8* %2, align 1, !dbg !6809
  ret i32 %40, !dbg !6810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6811 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6815, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i32 %0, metadata !6816, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i8* %1, metadata !6817, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i32 0, metadata !6818, metadata !DIExpression()), !dbg !6822
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6823
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6825
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6827
  %6 = and i32 %5, 512, !dbg !6828
  %7 = icmp eq i32 %6, 0, !dbg !6828
  br i1 %7, label %18, label %8, !dbg !6829

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6830
  call void @llvm.dbg.value(metadata i32 %9, metadata !6819, metadata !DIExpression()), !dbg !6831
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6832
  %11 = and i32 %10, 32768, !dbg !6834
  %12 = icmp ne i32 %11, 0, !dbg !6835
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6836
  br i1 %14, label %15, label %18, !dbg !6836

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6837
  %17 = and i32 %16, -32769, !dbg !6837
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6837
  br label %18, !dbg !6841

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6842
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6844
  %21 = and i32 %20, 256, !dbg !6846
  %22 = icmp eq i32 %21, 0, !dbg !6847
  br i1 %22, label %23, label %25, !dbg !6848

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6849
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6851
  %27 = or i32 %26, 65280, !dbg !6851
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6851
  store i8 0, i8* %1, align 1, !dbg !6852
  ret void, !dbg !6853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6854 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6860, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.value(metadata i32 0, metadata !6861, metadata !DIExpression()), !dbg !6862
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6863
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6865
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6867
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6869
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6871
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6873
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6875
  %8 = or i32 %7, -65536, !dbg !6875
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6875
  ret void, !dbg !6876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6877 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6881, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.value(metadata i8* %0, metadata !6882, metadata !DIExpression()), !dbg !6883
  store i8 0, i8* %0, align 1, !dbg !6884
  ret void, !dbg !6885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6886 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6890, metadata !DIExpression()), !dbg !6893
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6894
  %3 = load i32, i32* %2, align 4, !dbg !6894
  %4 = inttoptr i32 %3 to i16*, !dbg !6895
  call void @llvm.dbg.value(metadata i16* %4, metadata !6891, metadata !DIExpression()), !dbg !6893
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6896
  %6 = or i32 %5, 256, !dbg !6896
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6896
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6897, !srcloc !6900
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6901, !srcloc !6904
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6905
  %8 = load i16, i16* %7, align 2, !dbg !6906
  call void @llvm.dbg.value(metadata i16 %8, metadata !6892, metadata !DIExpression()), !dbg !6893
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6907
  %10 = and i32 %9, -257, !dbg !6907
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6907
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6908, !srcloc !6900
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6910, !srcloc !6904
  %11 = icmp eq i16 %8, -8446, !dbg !6912
  ret i1 %11, !dbg !6914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6915 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6916
  %2 = or i32 %1, 16, !dbg !6916
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6916
  ret void, !dbg !6917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6918 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6921, metadata !DIExpression()), !dbg !6922
  br label %1, !dbg !6923

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6921, metadata !DIExpression()), !dbg !6922
  tail call fastcc void @__NVIC_SetPriority.34(i32 noundef %2) #26, !dbg !6925
  %3 = add nuw nsw i32 %2, 1, !dbg !6928
  call void @llvm.dbg.value(metadata i32 %3, metadata !6921, metadata !DIExpression()), !dbg !6922
  %4 = icmp eq i32 %3, 86, !dbg !6929
  br i1 %4, label %5, label %1, !dbg !6923, !llvm.loop !6930

5:                                                ; preds = %1
  ret void, !dbg !6932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.34(i32 noundef %0) unnamed_addr #15 !dbg !6933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6935, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.value(metadata i32 1, metadata !6936, metadata !DIExpression()), !dbg !6937
  %2 = and i32 %0, 15, !dbg !6938
  %3 = add nsw i32 %2, -4, !dbg !6938
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6938
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6938
  %6 = icmp slt i32 %0, 0, !dbg !6938
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6938
  store volatile i8 16, i8* %7, align 1, !dbg !6939
  ret void, !dbg !6941
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6942 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7048, metadata !DIExpression()), !dbg !7049
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7050
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7052
  br i1 %3, label %4, label %12, !dbg !7053

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7054, !srcloc !7066
  call void @llvm.dbg.value(metadata i32 %5, metadata !7057, metadata !DIExpression()) #24, !dbg !7067
  %6 = icmp eq i32 %5, 0, !dbg !7068
  br i1 %6, label %12, label %7, !dbg !7069

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7070
  %9 = or i32 %8, 268435456, !dbg !7070
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7070
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7072
  %11 = and i32 %10, -32769, !dbg !7072
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7072
  br label %12, !dbg !7073

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7074
  ret void, !dbg !7075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7076 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7077
  ret void, !dbg !7078
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !375, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata i8 0, metadata !376, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata i32 64, metadata !378, metadata !DIExpression()), !dbg !7079
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7080
  %3 = load i32, i32* %2, align 4, !dbg !7080
  %4 = add i32 %3, -64, !dbg !7082
  call void @llvm.dbg.value(metadata i32 %4, metadata !377, metadata !DIExpression()), !dbg !7079
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7083
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7084
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7085
  call void @llvm.dbg.value(metadata i8 1, metadata !376, metadata !DIExpression()), !dbg !7079
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7086
  ret void, !dbg !7087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7088 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7089
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7090, !srcloc !7093
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7094, !srcloc !7097
  ret void, !dbg !7098
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7099 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7100, !srcloc !7103
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7104
  ret void, !dbg !7105
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7106 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7121, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i8 %1, metadata !7122, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 %2, metadata !7123, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 %3, metadata !7124, metadata !DIExpression()), !dbg !7125
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7126
  ret void, !dbg !7128
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7129 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7134, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.value(metadata i8 %1, metadata !7135, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.value(metadata i32 undef, metadata !7136, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.value(metadata i32 undef, metadata !7137, metadata !DIExpression()), !dbg !7139
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7140
  call void @llvm.dbg.value(metadata i8 %3, metadata !7138, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7139
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7141
  call void @llvm.dbg.value(metadata i32 %4, metadata !7138, metadata !DIExpression()), !dbg !7139
  %5 = trunc i32 %4 to i8, !dbg !7142
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7143
  ret void, !dbg !7144
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7145 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7149, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i8 %1, metadata !7150, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i8 %2, metadata !7151, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i1 %3, metadata !7152, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7155
  %5 = zext i8 %2 to i32, !dbg !7156
  call void @llvm.dbg.value(metadata i32 %5, metadata !7154, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i32 0, metadata !7153, metadata !DIExpression()), !dbg !7155
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7154, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i32 0, metadata !7153, metadata !DIExpression()), !dbg !7155
  %7 = icmp eq i8 %1, 0, !dbg !7157
  br i1 %7, label %29, label %8, !dbg !7160

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7154, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i32 %10, metadata !7153, metadata !DIExpression()), !dbg !7155
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7161
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7164
  %13 = load i32, i32* %12, align 4, !dbg !7164
  %14 = icmp eq i32 %13, 0, !dbg !7165
  br i1 %14, label %25, label %15, !dbg !7166

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7167

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7169
  %18 = icmp eq i32 %17, 0, !dbg !7169
  br i1 %18, label %29, label %19, !dbg !7170

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7171
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7172
  call void @llvm.dbg.value(metadata i32 %21, metadata !7154, metadata !DIExpression()), !dbg !7155
  %22 = icmp eq i32 %21, -22, !dbg !7173
  br i1 %22, label %29, label %23, !dbg !7175

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7176
  call void @llvm.dbg.value(metadata i32 %24, metadata !7154, metadata !DIExpression()), !dbg !7155
  br label %25, !dbg !7177

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7155
  call void @llvm.dbg.value(metadata i32 %26, metadata !7154, metadata !DIExpression()), !dbg !7155
  %27 = add nuw nsw i32 %10, 1, !dbg !7178
  call void @llvm.dbg.value(metadata i32 %27, metadata !7153, metadata !DIExpression()), !dbg !7155
  %28 = icmp eq i32 %27, %6, !dbg !7157
  br i1 %28, label %29, label %8, !dbg !7160, !llvm.loop !7179

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7155
  ret i32 %30, !dbg !7181
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7182 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7186, metadata !DIExpression()), !dbg !7188
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7189
  %3 = load i32, i32* %2, align 4, !dbg !7189
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7190, !range !3462
  %5 = icmp ult i32 %4, 2, !dbg !7190
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7191
  br i1 %7, label %8, label %15, !dbg !7191

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7192
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7193
  %11 = load i32, i32* %10, align 4, !dbg !7193
  %12 = and i32 %11, %9, !dbg !7194
  %13 = icmp eq i32 %12, 0, !dbg !7195
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7187, metadata !DIExpression()), !dbg !7188
  ret i32 %16, !dbg !7196
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7197 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7201, metadata !DIExpression()), !dbg !7204
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7202, metadata !DIExpression()), !dbg !7204
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7205
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7205
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7203, metadata !DIExpression()), !dbg !7206
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7207
  %6 = load i32, i32* %5, align 4, !dbg !7207
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7208
  store i32 %6, i32* %7, align 4, !dbg !7209
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7210
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7211
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7212
  %11 = load i32, i32* %10, align 4, !dbg !7212
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7213
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7214
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7215
  ret i32 %12, !dbg !7216
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7217 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7224, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7225, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i32 undef, metadata !7226, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i32 %2, metadata !7227, metadata !DIExpression()), !dbg !7228
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7229
  %5 = load i32, i32* %4, align 4, !dbg !7229
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7230
  %7 = or i32 %6, %5, !dbg !7231
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7232
  store i32 %7, i32* %8, align 4, !dbg !7233
  ret void, !dbg !7234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7235 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7239, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7240, metadata !DIExpression()), !dbg !7241
  %3 = zext i8 %0 to i32, !dbg !7242
  %4 = icmp ugt i8 %0, 7, !dbg !7244
  br i1 %4, label %6, label %5, !dbg !7245

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7246
  br label %6, !dbg !7247

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7241
  ret i32 %7, !dbg !7248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7253, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7254, metadata !DIExpression()), !dbg !7255
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7256
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7257
  %4 = load i32, i32* %3, align 4, !dbg !7257
  %5 = and i32 %4, -32, !dbg !7258
  %6 = or i32 %5, %0, !dbg !7259
  %7 = or i32 %6, 16, !dbg !7259
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7260
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7261
  %9 = load i32, i32* %8, align 4, !dbg !7261
  %10 = or i32 %9, 1, !dbg !7262
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7263
  ret void, !dbg !7264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7268, metadata !DIExpression()), !dbg !7269
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7270
  ret void, !dbg !7271
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7276, metadata !DIExpression()), !dbg !7277
  %2 = icmp ult i32 %0, 33, !dbg !7278
  br i1 %2, label %11, label %3, !dbg !7280

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7281
  br i1 %4, label %11, label %5, !dbg !7283

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7284
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7285, !range !3462
  %8 = mul nsw i32 %7, -2, !dbg !7286
  %9 = add nsw i32 %8, 62, !dbg !7286
  %10 = and i32 %9, 62, !dbg !7287
  br label %11, !dbg !7288

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7277
  ret i32 %12, !dbg !7289
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7290 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7294, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8 %1, metadata !7295, metadata !DIExpression()), !dbg !7296
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7297
  ret void, !dbg !7299
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7300 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7304, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.value(metadata i8 %1, metadata !7305, metadata !DIExpression()), !dbg !7311
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7312
  call void @llvm.dbg.value(metadata i8 %3, metadata !7306, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7311
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7313
  call void @llvm.dbg.value(metadata i32 %4, metadata !7306, metadata !DIExpression()), !dbg !7311
  %5 = icmp ne i32 %4, -22, !dbg !7314
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7315
  call void @llvm.dbg.value(metadata i32 %4, metadata !7307, metadata !DIExpression()), !dbg !7316
  br i1 %7, label %8, label %12, !dbg !7315

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7307, metadata !DIExpression()), !dbg !7316
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7317
  %10 = add i32 %9, 1, !dbg !7320
  call void @llvm.dbg.value(metadata i32 %10, metadata !7307, metadata !DIExpression()), !dbg !7316
  %11 = icmp eq i32 %10, 8, !dbg !7321
  br i1 %11, label %12, label %8, !dbg !7322, !llvm.loop !7323

12:                                               ; preds = %8, %2
  ret void, !dbg !7325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7329, metadata !DIExpression()), !dbg !7330
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7331
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7332
  ret void, !dbg !7333
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7334 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7339
  %2 = icmp ugt i32 %1, 8, !dbg !7341
  br i1 %2, label %14, label %3, !dbg !7342

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7343
  call void @llvm.dbg.value(metadata i32 0, metadata !7338, metadata !DIExpression()), !dbg !7344
  %4 = icmp eq i32 %1, 0, !dbg !7345
  br i1 %4, label %12, label %5, !dbg !7348

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7348

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7338, metadata !DIExpression()), !dbg !7344
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7349
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7351
  %10 = add nuw i32 %8, 1, !dbg !7352
  call void @llvm.dbg.value(metadata i32 %10, metadata !7338, metadata !DIExpression()), !dbg !7344
  %11 = icmp eq i32 %10, %1, !dbg !7345
  br i1 %11, label %12, label %7, !dbg !7348, !llvm.loop !7353

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7355
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7356
  tail call void @arm_core_mpu_enable() #26, !dbg !7357
  br label %14, !dbg !7358

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7344
  ret i32 %15, !dbg !7359
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7360 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7367, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.value(metadata i8* %1, metadata !7368, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.value(metadata i8* %0, metadata !7369, metadata !DIExpression()), !dbg !7370
  %3 = load i8, i8* %1, align 1, !dbg !7371
  %4 = icmp eq i8 %3, 0, !dbg !7372
  br i1 %4, label %13, label %5, !dbg !7373

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7367, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.value(metadata i8* %8, metadata !7368, metadata !DIExpression()), !dbg !7370
  store i8 %6, i8* %7, align 1, !dbg !7374
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7376
  call void @llvm.dbg.value(metadata i8* %9, metadata !7367, metadata !DIExpression()), !dbg !7370
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7377
  call void @llvm.dbg.value(metadata i8* %10, metadata !7368, metadata !DIExpression()), !dbg !7370
  %11 = load i8, i8* %10, align 1, !dbg !7371
  %12 = icmp eq i8 %11, 0, !dbg !7372
  br i1 %12, label %13, label %5, !dbg !7373, !llvm.loop !7378

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7380
  ret i8* %0, !dbg !7381
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7382 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7386, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i8* %1, metadata !7387, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i32 %2, metadata !7388, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i8* %0, metadata !7389, metadata !DIExpression()), !dbg !7390
  %4 = icmp eq i32 %2, 0, !dbg !7391
  br i1 %4, label %22, label %5, !dbg !7392

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7386, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i32 %7, metadata !7388, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i8* %8, metadata !7387, metadata !DIExpression()), !dbg !7390
  %9 = load i8, i8* %8, align 1, !dbg !7393
  %10 = icmp eq i8 %9, 0, !dbg !7394
  br i1 %10, label %16, label %11, !dbg !7395

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7396
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7398
  call void @llvm.dbg.value(metadata i8* %12, metadata !7387, metadata !DIExpression()), !dbg !7390
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7399
  call void @llvm.dbg.value(metadata i8* %13, metadata !7386, metadata !DIExpression()), !dbg !7390
  %14 = add i32 %7, -1, !dbg !7400
  call void @llvm.dbg.value(metadata i32 %14, metadata !7388, metadata !DIExpression()), !dbg !7390
  %15 = icmp eq i32 %14, 0, !dbg !7391
  br i1 %15, label %22, label %5, !dbg !7392, !llvm.loop !7401

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7386, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i32 %18, metadata !7388, metadata !DIExpression()), !dbg !7390
  store i8 0, i8* %17, align 1, !dbg !7403
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7405
  call void @llvm.dbg.value(metadata i8* %19, metadata !7386, metadata !DIExpression()), !dbg !7390
  %20 = add i32 %18, -1, !dbg !7406
  call void @llvm.dbg.value(metadata i32 %20, metadata !7388, metadata !DIExpression()), !dbg !7390
  %21 = icmp eq i32 %20, 0, !dbg !7407
  br i1 %21, label %22, label %16, !dbg !7408, !llvm.loop !7409

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7411
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7412 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7416, metadata !DIExpression()), !dbg !7419
  call void @llvm.dbg.value(metadata i32 %1, metadata !7417, metadata !DIExpression()), !dbg !7419
  call void @llvm.dbg.value(metadata i32 %1, metadata !7418, metadata !DIExpression()), !dbg !7419
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7420

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7416, metadata !DIExpression()), !dbg !7419
  %6 = load i8, i8* %5, align 1, !dbg !7421
  %7 = icmp eq i8 %6, %3, !dbg !7422
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7423
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7424
  call void @llvm.dbg.value(metadata i8* %10, metadata !7416, metadata !DIExpression()), !dbg !7419
  br i1 %9, label %11, label %4, !dbg !7423, !llvm.loop !7426

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7428
  ret i8* %12, !dbg !7429
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7430 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7432, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.value(metadata i32 %1, metadata !7433, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.value(metadata i8* null, metadata !7434, metadata !DIExpression()), !dbg !7435
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7436

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7435
  call void @llvm.dbg.value(metadata i8* %6, metadata !7434, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.value(metadata i8* %5, metadata !7432, metadata !DIExpression()), !dbg !7435
  %7 = load i8, i8* %5, align 1, !dbg !7437
  %8 = icmp eq i8 %7, %3, !dbg !7440
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7441
  call void @llvm.dbg.value(metadata i8* %9, metadata !7434, metadata !DIExpression()), !dbg !7435
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7442
  call void @llvm.dbg.value(metadata i8* %10, metadata !7432, metadata !DIExpression()), !dbg !7435
  %11 = icmp eq i8 %7, 0, !dbg !7443
  br i1 %11, label %12, label %4, !dbg !7443, !llvm.loop !7444

12:                                               ; preds = %4
  ret i8* %9, !dbg !7446
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7447 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7451, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata i32 0, metadata !7452, metadata !DIExpression()), !dbg !7453
  %2 = load i8, i8* %0, align 1, !dbg !7454
  %3 = icmp eq i8 %2, 0, !dbg !7455
  br i1 %3, label %11, label %4, !dbg !7456

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7452, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata i8* %6, metadata !7451, metadata !DIExpression()), !dbg !7453
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7457
  call void @llvm.dbg.value(metadata i8* %7, metadata !7451, metadata !DIExpression()), !dbg !7453
  %8 = add i32 %5, 1, !dbg !7459
  call void @llvm.dbg.value(metadata i32 %8, metadata !7452, metadata !DIExpression()), !dbg !7453
  %9 = load i8, i8* %7, align 1, !dbg !7454
  %10 = icmp eq i8 %9, 0, !dbg !7455
  br i1 %10, label %11, label %4, !dbg !7456, !llvm.loop !7460

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7453
  ret i32 %12, !dbg !7462
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7463 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7467, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 %1, metadata !7468, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 0, metadata !7469, metadata !DIExpression()), !dbg !7470
  %3 = load i8, i8* %0, align 1, !dbg !7471
  %4 = icmp ne i8 %3, 0, !dbg !7472
  %5 = icmp ne i32 %1, 0, !dbg !7473
  %6 = and i1 %4, %5, !dbg !7473
  br i1 %6, label %7, label %16, !dbg !7474

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7469, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i8* %9, metadata !7467, metadata !DIExpression()), !dbg !7470
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7475
  call void @llvm.dbg.value(metadata i8* %10, metadata !7467, metadata !DIExpression()), !dbg !7470
  %11 = add nuw i32 %8, 1, !dbg !7477
  call void @llvm.dbg.value(metadata i32 %11, metadata !7469, metadata !DIExpression()), !dbg !7470
  %12 = load i8, i8* %10, align 1, !dbg !7471
  %13 = icmp ne i8 %12, 0, !dbg !7472
  %14 = icmp ult i32 %11, %1, !dbg !7473
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7473
  br i1 %15, label %7, label %16, !dbg !7474, !llvm.loop !7478

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7470
  ret i32 %17, !dbg !7480
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7481 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7485, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.value(metadata i8* %1, metadata !7486, metadata !DIExpression()), !dbg !7487
  %3 = load i8, i8* %0, align 1, !dbg !7488
  %4 = load i8, i8* %1, align 1, !dbg !7489
  %5 = icmp ne i8 %3, %4, !dbg !7490
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7491
  br i1 %7, label %18, label %8, !dbg !7491

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7486, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.value(metadata i8* %10, metadata !7485, metadata !DIExpression()), !dbg !7487
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7492
  call void @llvm.dbg.value(metadata i8* %11, metadata !7485, metadata !DIExpression()), !dbg !7487
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7494
  call void @llvm.dbg.value(metadata i8* %12, metadata !7486, metadata !DIExpression()), !dbg !7487
  %13 = load i8, i8* %11, align 1, !dbg !7488
  %14 = load i8, i8* %12, align 1, !dbg !7489
  %15 = icmp ne i8 %13, %14, !dbg !7490
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7491
  br i1 %17, label %18, label %8, !dbg !7491, !llvm.loop !7495

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7488
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7489
  %21 = zext i8 %19 to i32, !dbg !7498
  %22 = zext i8 %20 to i32, !dbg !7499
  %23 = sub nsw i32 %21, %22, !dbg !7500
  ret i32 %23, !dbg !7501
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7502 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7506, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i8* %1, metadata !7507, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i32 %2, metadata !7508, metadata !DIExpression()), !dbg !7509
  %4 = icmp eq i32 %2, 0, !dbg !7510
  br i1 %4, label %23, label %5, !dbg !7510

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7508, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i8* %7, metadata !7507, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i8* %8, metadata !7506, metadata !DIExpression()), !dbg !7509
  %9 = load i8, i8* %8, align 1, !dbg !7511
  %10 = load i8, i8* %7, align 1, !dbg !7512
  %11 = icmp ne i8 %9, %10, !dbg !7513
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7514
  br i1 %13, label %19, label %14, !dbg !7514

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7515
  call void @llvm.dbg.value(metadata i8* %15, metadata !7506, metadata !DIExpression()), !dbg !7509
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7517
  call void @llvm.dbg.value(metadata i8* %16, metadata !7507, metadata !DIExpression()), !dbg !7509
  %17 = add i32 %6, -1, !dbg !7518
  call void @llvm.dbg.value(metadata i32 %17, metadata !7508, metadata !DIExpression()), !dbg !7509
  %18 = icmp eq i32 %17, 0, !dbg !7510
  br i1 %18, label %23, label %5, !dbg !7510, !llvm.loop !7519

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7522
  %21 = zext i8 %10 to i32, !dbg !7523
  %22 = sub nsw i32 %20, %21, !dbg !7524
  br label %23, !dbg !7525

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7525
  ret i32 %24, !dbg !7526
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7527 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7532, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i8* %1, metadata !7533, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i8** %2, metadata !7534, metadata !DIExpression()), !dbg !7537
  %4 = icmp eq i8* %0, null, !dbg !7538
  br i1 %4, label %5, label %7, !dbg !7538

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7539
  br label %7, !dbg !7538

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7538
  call void @llvm.dbg.value(metadata i8* %8, metadata !7535, metadata !DIExpression()), !dbg !7537
  %9 = load i8, i8* %8, align 1, !dbg !7540
  %10 = icmp eq i8 %9, 0, !dbg !7540
  br i1 %10, label %33, label %11, !dbg !7541

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7535, metadata !DIExpression()), !dbg !7537
  %14 = zext i8 %12 to i32, !dbg !7540
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7542
  %16 = icmp eq i8* %15, null, !dbg !7541
  br i1 %16, label %21, label %17, !dbg !7543

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7544
  call void @llvm.dbg.value(metadata i8* %18, metadata !7535, metadata !DIExpression()), !dbg !7537
  %19 = load i8, i8* %18, align 1, !dbg !7540
  %20 = icmp eq i8 %19, 0, !dbg !7540
  br i1 %20, label %33, label %11, !dbg !7541, !llvm.loop !7546

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7536, metadata !DIExpression()), !dbg !7537
  %24 = zext i8 %22 to i32, !dbg !7548
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7549
  %26 = icmp eq i8* %25, null, !dbg !7550
  br i1 %26, label %27, label %31, !dbg !7551

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7552
  call void @llvm.dbg.value(metadata i8* %28, metadata !7536, metadata !DIExpression()), !dbg !7537
  %29 = load i8, i8* %28, align 1, !dbg !7548
  %30 = icmp eq i8 %29, 0, !dbg !7548
  br i1 %30, label %33, label %21, !dbg !7554, !llvm.loop !7555

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7557
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7560
  br label %33, !dbg !7561

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7537
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7537
  store i8* %34, i8** %2, align 4, !dbg !7537
  ret i8* %35, !dbg !7562
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7563 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7565, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata i8* %1, metadata !7566, metadata !DIExpression()), !dbg !7567
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7568
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7569
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7570
  ret i8* %0, !dbg !7571
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7572 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7574, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i8* %1, metadata !7575, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i32 %2, metadata !7576, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i8* %0, metadata !7577, metadata !DIExpression()), !dbg !7579
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7580
  call void @llvm.dbg.value(metadata i32 %4, metadata !7578, metadata !DIExpression()), !dbg !7579
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7581
  call void @llvm.dbg.value(metadata i8* %5, metadata !7574, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i8* %1, metadata !7575, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i32 %2, metadata !7576, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i32 %2, metadata !7576, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7579
  %6 = icmp eq i32 %2, 0, !dbg !7582
  br i1 %6, label %18, label %7, !dbg !7583

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7584
  call void @llvm.dbg.value(metadata i8* %9, metadata !7574, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i8* %10, metadata !7575, metadata !DIExpression()), !dbg !7579
  %12 = load i8, i8* %10, align 1, !dbg !7585
  %13 = icmp eq i8 %12, 0, !dbg !7586
  br i1 %13, label %18, label %14, !dbg !7587

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7588
  call void @llvm.dbg.value(metadata i8* %15, metadata !7575, metadata !DIExpression()), !dbg !7579
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7590
  call void @llvm.dbg.value(metadata i8* %16, metadata !7574, metadata !DIExpression()), !dbg !7579
  store i8 %12, i8* %9, align 1, !dbg !7591
  call void @llvm.dbg.value(metadata i32 %11, metadata !7576, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i32 %11, metadata !7576, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7579
  %17 = icmp eq i32 %11, 0, !dbg !7582
  br i1 %17, label %18, label %7, !dbg !7583, !llvm.loop !7592

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7579
  store i8 0, i8* %19, align 1, !dbg !7594
  ret i8* %0, !dbg !7595
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7596 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7600, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i8* %1, metadata !7601, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i32 %2, metadata !7602, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i8* %0, metadata !7603, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i8* %1, metadata !7604, metadata !DIExpression()), !dbg !7605
  %4 = icmp eq i32 %2, 0, !dbg !7606
  br i1 %4, label %31, label %5, !dbg !7608

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7604, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i8* %0, metadata !7603, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i32 %2, metadata !7602, metadata !DIExpression()), !dbg !7605
  %6 = add i32 %2, -1, !dbg !7609
  call void @llvm.dbg.value(metadata i32 %6, metadata !7602, metadata !DIExpression()), !dbg !7605
  %7 = icmp eq i32 %6, 0, !dbg !7610
  br i1 %7, label %23, label %8, !dbg !7611

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7612
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7612
  br label %11, !dbg !7612

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7604, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i8* %14, metadata !7603, metadata !DIExpression()), !dbg !7605
  %15 = load i8, i8* %14, align 1, !dbg !7613
  %16 = load i8, i8* %13, align 1, !dbg !7614
  %17 = icmp eq i8 %15, %16, !dbg !7615
  br i1 %17, label %18, label %23, !dbg !7612

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7616
  call void @llvm.dbg.value(metadata i8* %19, metadata !7603, metadata !DIExpression()), !dbg !7605
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7618
  call void @llvm.dbg.value(metadata i8* %20, metadata !7604, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i32 %12, metadata !7602, metadata !DIExpression()), !dbg !7605
  %21 = add i32 %12, -1, !dbg !7609
  call void @llvm.dbg.value(metadata i32 %21, metadata !7602, metadata !DIExpression()), !dbg !7605
  %22 = icmp eq i32 %21, 0, !dbg !7610
  br i1 %22, label %23, label %11, !dbg !7611, !llvm.loop !7619

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7605
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7605
  %26 = load i8, i8* %24, align 1, !dbg !7621
  %27 = zext i8 %26 to i32, !dbg !7621
  %28 = load i8, i8* %25, align 1, !dbg !7622
  %29 = zext i8 %28 to i32, !dbg !7622
  %30 = sub nsw i32 %27, %29, !dbg !7623
  br label %31, !dbg !7624

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7605
  ret i32 %32, !dbg !7625
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7626 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7630, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i8* %1, metadata !7631, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %2, metadata !7632, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i8* %0, metadata !7633, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i8* %1, metadata !7634, metadata !DIExpression()), !dbg !7635
  %4 = ptrtoint i8* %0 to i32, !dbg !7636
  %5 = ptrtoint i8* %1 to i32, !dbg !7636
  %6 = sub i32 %4, %5, !dbg !7636
  %7 = icmp ult i32 %6, %2, !dbg !7638
  br i1 %7, label %10, label %8, !dbg !7639

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7634, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i8* %0, metadata !7633, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %2, metadata !7632, metadata !DIExpression()), !dbg !7635
  %9 = icmp eq i32 %2, 0, !dbg !7640
  br i1 %9, label %26, label %17, !dbg !7642

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7632, metadata !DIExpression()), !dbg !7635
  %12 = add i32 %11, -1, !dbg !7643
  call void @llvm.dbg.value(metadata i32 %12, metadata !7632, metadata !DIExpression()), !dbg !7635
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7646
  %14 = load i8, i8* %13, align 1, !dbg !7646
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7647
  store i8 %14, i8* %15, align 1, !dbg !7648
  %16 = icmp eq i32 %12, 0, !dbg !7649
  br i1 %16, label %26, label %10, !dbg !7650, !llvm.loop !7651

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7634, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i8* %19, metadata !7633, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %20, metadata !7632, metadata !DIExpression()), !dbg !7635
  %21 = load i8, i8* %18, align 1, !dbg !7653
  store i8 %21, i8* %19, align 1, !dbg !7655
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7656
  call void @llvm.dbg.value(metadata i8* %22, metadata !7633, metadata !DIExpression()), !dbg !7635
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7657
  call void @llvm.dbg.value(metadata i8* %23, metadata !7634, metadata !DIExpression()), !dbg !7635
  %24 = add i32 %20, -1, !dbg !7658
  call void @llvm.dbg.value(metadata i32 %24, metadata !7632, metadata !DIExpression()), !dbg !7635
  %25 = icmp eq i32 %24, 0, !dbg !7640
  br i1 %25, label %26, label %17, !dbg !7642, !llvm.loop !7659

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7662 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7668, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.value(metadata i8* %1, metadata !7669, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.value(metadata i32 %2, metadata !7670, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.value(metadata i8* %0, metadata !7671, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.value(metadata i8* %1, metadata !7672, metadata !DIExpression()), !dbg !7673
  %4 = icmp eq i32 %2, 0, !dbg !7674
  br i1 %4, label %14, label %5, !dbg !7675

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7672, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.value(metadata i8* %7, metadata !7671, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.value(metadata i32 %8, metadata !7670, metadata !DIExpression()), !dbg !7673
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7676
  call void @llvm.dbg.value(metadata i8* %9, metadata !7672, metadata !DIExpression()), !dbg !7673
  %10 = load i8, i8* %6, align 1, !dbg !7678
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7679
  call void @llvm.dbg.value(metadata i8* %11, metadata !7671, metadata !DIExpression()), !dbg !7673
  store i8 %10, i8* %7, align 1, !dbg !7680
  %12 = add i32 %8, -1, !dbg !7681
  call void @llvm.dbg.value(metadata i32 %12, metadata !7670, metadata !DIExpression()), !dbg !7673
  %13 = icmp eq i32 %12, 0, !dbg !7674
  br i1 %13, label %14, label %5, !dbg !7675, !llvm.loop !7682

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7684
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7685 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7689, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i32 %1, metadata !7690, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i32 %2, metadata !7691, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i8* %0, metadata !7692, metadata !DIExpression()), !dbg !7694
  %4 = trunc i32 %1 to i8, !dbg !7695
  call void @llvm.dbg.value(metadata i8 %4, metadata !7693, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i32 %2, metadata !7691, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i8* %0, metadata !7692, metadata !DIExpression()), !dbg !7694
  %5 = icmp eq i32 %2, 0, !dbg !7696
  br i1 %5, label %12, label %6, !dbg !7697

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7691, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i8* %8, metadata !7692, metadata !DIExpression()), !dbg !7694
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7698
  call void @llvm.dbg.value(metadata i8* %9, metadata !7692, metadata !DIExpression()), !dbg !7694
  store i8 %4, i8* %8, align 1, !dbg !7700
  %10 = add i32 %7, -1, !dbg !7701
  call void @llvm.dbg.value(metadata i32 %10, metadata !7691, metadata !DIExpression()), !dbg !7694
  %11 = icmp eq i32 %10, 0, !dbg !7696
  br i1 %11, label %12, label %6, !dbg !7697, !llvm.loop !7702

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7704
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7705 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7709, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i32 %1, metadata !7710, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i32 %2, metadata !7711, metadata !DIExpression()), !dbg !7715
  %4 = icmp eq i32 %2, 0, !dbg !7716
  br i1 %4, label %17, label %5, !dbg !7717

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7718

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7719
  call void @llvm.dbg.value(metadata i8* %9, metadata !7712, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i32 %8, metadata !7711, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i8* %9, metadata !7712, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7719
  %10 = load i8, i8* %9, align 1, !dbg !7720
  %11 = icmp eq i8 %10, %6, !dbg !7723
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7724
  call void @llvm.dbg.value(metadata i8* %12, metadata !7712, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i32 %13, metadata !7711, metadata !DIExpression()), !dbg !7715
  br i1 %15, label %16, label %7, !dbg !7724, !llvm.loop !7725

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7727

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7715
  ret i8* %19, !dbg !7728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7729 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7731, metadata !DIExpression()), !dbg !7732
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7733
  ret void, !dbg !7734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7737, metadata !DIExpression()), !dbg !7738
  ret i32 -1, !dbg !7739
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7744, metadata !DIExpression()), !dbg !7746
  call void @llvm.dbg.value(metadata i32* %1, metadata !7745, metadata !DIExpression()), !dbg !7746
  %3 = ptrtoint i32* %1 to i32, !dbg !7747
  %4 = and i32 %3, -2, !dbg !7747
  %5 = icmp eq i32 %4, 2, !dbg !7747
  br i1 %5, label %6, label %9, !dbg !7747

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7748
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !7748
  br label %9, !dbg !7749

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7749
  ret i32 %10, !dbg !7750
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7753, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.value(metadata i32* %1, metadata !7754, metadata !DIExpression()), !dbg !7755
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7756
  ret i32 %3, !dbg !7757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7761, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata i32* %1, metadata !7762, metadata !DIExpression()), !dbg !7763
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7764, !srcloc !7766
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7767
  ret i32 %3, !dbg !7768
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7769 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7774, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32* %1, metadata !7775, metadata !DIExpression()), !dbg !7778
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7779
  call void @llvm.dbg.value(metadata i32 %3, metadata !7776, metadata !DIExpression()), !dbg !7778
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7780
  call void @llvm.dbg.value(metadata i32 %4, metadata !7777, metadata !DIExpression()), !dbg !7778
  %5 = icmp ne i32 %3, %4, !dbg !7781
  %6 = sext i1 %5 to i32, !dbg !7782
  ret i32 %6, !dbg !7783
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7784 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7788, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.value(metadata i32 %1, metadata !7789, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.value(metadata i32 %2, metadata !7790, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.value(metadata i32* %3, metadata !7791, metadata !DIExpression()), !dbg !7792
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7793
  ret i32 %5, !dbg !7794
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7795 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7797, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata i32 %1, metadata !7798, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata i32 %2, metadata !7799, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata i32* %3, metadata !7800, metadata !DIExpression()), !dbg !7801
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7802, !srcloc !7804
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7805
  ret i32 %5, !dbg !7806
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7807 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7809, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 %1, metadata !7810, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 %2, metadata !7811, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32* %3, metadata !7812, metadata !DIExpression()), !dbg !7817
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7818
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7820
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7820
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7820
  br i1 %11, label %33, label %12, !dbg !7820

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7817
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7817
  call void @llvm.dbg.value(metadata i8* %14, metadata !7815, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 %13, metadata !7813, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 %1, metadata !7814, metadata !DIExpression()), !dbg !7817
  br label %15, !dbg !7821

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7823
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7817
  call void @llvm.dbg.value(metadata i8* %17, metadata !7815, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 %16, metadata !7814, metadata !DIExpression()), !dbg !7817
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7824
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7827
  call void @llvm.dbg.value(metadata i8* %19, metadata !7815, metadata !DIExpression()), !dbg !7817
  %20 = load i8, i8* %17, align 1, !dbg !7828
  %21 = zext i8 %20 to i32, !dbg !7829
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !7824
  %23 = icmp eq i32 %22, -1, !dbg !7830
  br i1 %23, label %30, label %24, !dbg !7831

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7832
  call void @llvm.dbg.value(metadata i32 %25, metadata !7814, metadata !DIExpression()), !dbg !7817
  %26 = icmp eq i32 %25, 0, !dbg !7833
  br i1 %26, label %27, label %15, !dbg !7834, !llvm.loop !7835

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7837
  call void @llvm.dbg.value(metadata i32 %28, metadata !7813, metadata !DIExpression()), !dbg !7817
  %29 = icmp eq i32 %28, 0, !dbg !7838
  br i1 %29, label %30, label %12, !dbg !7839, !llvm.loop !7840

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7817
  call void @llvm.dbg.value(metadata i32 %31, metadata !7813, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.label(metadata !7816), !dbg !7843
  %32 = sub i32 %2, %31, !dbg !7844
  br label %33, !dbg !7845

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7817
  ret i32 %34, !dbg !7846
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7847 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7851, metadata !DIExpression()), !dbg !7852
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7853
  %3 = icmp eq i32 %2, -1, !dbg !7855
  br i1 %3, label %8, label %4, !dbg !7856

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7857
  %6 = icmp eq i32 %5, -1, !dbg !7858
  %7 = sext i1 %6 to i32, !dbg !7857
  br label %8, !dbg !7859

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7852
  ret i32 %9, !dbg !7860
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7861 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7863, metadata !DIExpression()), !dbg !7864
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7865
  ret void, !dbg !7866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7871, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.value(metadata i32 %1, metadata !7872, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7873, metadata !DIExpression()), !dbg !7877
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7878
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7878
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7878
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7874, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.value(metadata i32 %0, metadata !7876, metadata !DIExpression()), !dbg !7877
  %7 = icmp slt i32 %0, %1, !dbg !7879
  br i1 %7, label %8, label %22, !dbg !7882

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7876, metadata !DIExpression()), !dbg !7877
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7883
  %11 = icmp eq i32 %10, 0, !dbg !7883
  br i1 %11, label %19, label %12, !dbg !7886

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7887
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7889
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7889
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7891
  br i1 %15, label %19, label %16, !dbg !7892

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7893
  %18 = load i8*, i8** %17, align 4, !dbg !7893
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !7894
  br label %19, !dbg !7895

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7896
  call void @llvm.dbg.value(metadata i32 %20, metadata !7876, metadata !DIExpression()), !dbg !7877
  %21 = icmp eq i32 %20, %1, !dbg !7879
  br i1 %21, label %22, label %8, !dbg !7882, !llvm.loop !7897

22:                                               ; preds = %19, %3
  ret void, !dbg !7899
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7902, metadata !DIExpression()), !dbg !7903
  %2 = shl nuw i32 1, %0, !dbg !7904
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !7907
  ret i32 %3, !dbg !7908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7913, metadata !DIExpression()), !dbg !7914
  %2 = shl nuw i32 1, %0, !dbg !7915
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !7918
  ret void, !dbg !7919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7923, metadata !DIExpression()), !dbg !7924
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7925
  ret void, !dbg !7926
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7929, metadata !DIExpression()), !dbg !7930
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7931
  %3 = and i32 %2, %0, !dbg !7931
  %4 = icmp eq i32 %3, %0, !dbg !7932
  %5 = zext i1 %4 to i32, !dbg !7932
  ret i32 %5, !dbg !7933
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7934 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7936, metadata !DIExpression()), !dbg !7937
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !7938
  ret void, !dbg !7939
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7940 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7942, metadata !DIExpression()), !dbg !7943
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !7944
  ret void, !dbg !7945
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7946 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7948, metadata !DIExpression()), !dbg !7949
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !7950
  ret void, !dbg !7951
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7952 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7954, metadata !DIExpression()), !dbg !7955
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !7956
  ret void, !dbg !7957
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7958 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7960, metadata !DIExpression()), !dbg !7961
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !7962
  ret void, !dbg !7963
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7964 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7966, metadata !DIExpression()), !dbg !7967
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !7968
  ret void, !dbg !7969
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7970 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7972, metadata !DIExpression()), !dbg !7973
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !7974
  ret void, !dbg !7975
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7978, metadata !DIExpression()), !dbg !7979
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !7980
  ret void, !dbg !7981
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7982 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7984, metadata !DIExpression()), !dbg !7985
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !7986
  ret void, !dbg !7987
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7990, metadata !DIExpression()), !dbg !7991
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !7992
  ret void, !dbg !7993
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7994 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7996, metadata !DIExpression()), !dbg !7997
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !7998
  ret i32 0, !dbg !7999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !604 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !608, metadata !DIExpression()), !dbg !8000
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8001
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8003
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8005
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8007
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8009
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8011
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8013
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8015
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8017
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8019
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8021
  ret void, !dbg !8023
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8026, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i32 0, metadata !8027, metadata !DIExpression()), !dbg !8028
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8029
  %3 = load i32, i32* %2, align 4, !dbg !8029
  call void @llvm.dbg.value(metadata i32 %3, metadata !8027, metadata !DIExpression()), !dbg !8028
  %4 = shl nuw i32 1, %0, !dbg !8030
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8031
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8032
  ret void, !dbg !8033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8036, metadata !DIExpression()), !dbg !8037
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8038
  %3 = or i32 %2, %0, !dbg !8038
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8038
  ret void, !dbg !8039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8042, metadata !DIExpression()), !dbg !8043
  %2 = icmp slt i32 %0, 32, !dbg !8044
  br i1 %2, label %3, label %5, !dbg !8046

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8047
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8049
  br label %5, !dbg !8050

5:                                                ; preds = %1, %3
  ret void, !dbg !8051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8054, metadata !DIExpression()), !dbg !8055
  %2 = xor i32 %0, -1, !dbg !8056
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8056
  %4 = and i32 %3, %2, !dbg !8056
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8056
  ret void, !dbg !8057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8062, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.value(metadata i32 %1, metadata !8063, metadata !DIExpression()), !dbg !8064
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8065

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8066
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8068
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8069
  br label %11, !dbg !8070

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8071
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8072
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8073
  br label %11, !dbg !8074

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8075
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8076
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8077
  br label %11, !dbg !8078

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8079
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8080
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8081
  br label %11, !dbg !8082

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8086, metadata !DIExpression()), !dbg !8087
  %2 = xor i32 %0, -1, !dbg !8088
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8088
  %4 = and i32 %3, %2, !dbg !8088
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8088
  ret void, !dbg !8089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8092, metadata !DIExpression()), !dbg !8093
  %2 = xor i32 %0, -1, !dbg !8094
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8094
  %4 = and i32 %3, %2, !dbg !8094
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8094
  ret void, !dbg !8095
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8098, metadata !DIExpression()), !dbg !8099
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8100
  %3 = or i32 %2, %0, !dbg !8100
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8100
  ret void, !dbg !8101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8104, metadata !DIExpression()), !dbg !8105
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8106
  %3 = or i32 %2, %0, !dbg !8106
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8106
  ret void, !dbg !8107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !8108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8112, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8113, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8* %2, metadata !8114, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8115, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8117, metadata !DIExpression()), !dbg !8118
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8119
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8119
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8121
  br i1 %6, label %7, label %9, !dbg !8122

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8123
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8124
  store i8* %2, i8** %8, align 4, !dbg !8125
  br label %9, !dbg !8126

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8118
  ret i32 %10, !dbg !8127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8130, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8131, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8132, metadata !DIExpression()), !dbg !8133
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8134
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8135
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8136
  store i8* null, i8** %3, align 4, !dbg !8137
  ret void, !dbg !8138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8139 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8141, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %1, metadata !8142, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %1, metadata !8143, metadata !DIExpression()), !dbg !8146
  %3 = bitcast i8* %1 to i32*, !dbg !8147
  %4 = load i32, i32* %3, align 4, !dbg !8147
  %5 = add i32 %4, -169, !dbg !8147
  %6 = icmp ult i32 %5, -121, !dbg !8147
  br i1 %6, label %15, label %7, !dbg !8149

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8150
  %9 = inttoptr i32 %8 to i32*, !dbg !8151
  call void @llvm.dbg.value(metadata i32* %9, metadata !8144, metadata !DIExpression()), !dbg !8146
  %10 = load volatile i32, i32* %9, align 4, !dbg !8152
  call void @llvm.dbg.value(metadata i32 %10, metadata !8145, metadata !DIExpression()), !dbg !8146
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8153
  %12 = bitcast i8* %11 to i32*, !dbg !8153
  %13 = load i32, i32* %12, align 4, !dbg !8153
  %14 = or i32 %13, %10, !dbg !8154
  call void @llvm.dbg.value(metadata i32 %14, metadata !8145, metadata !DIExpression()), !dbg !8146
  store volatile i32 %14, i32* %9, align 4, !dbg !8155
  br label %15, !dbg !8156

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8146
  ret i32 %16, !dbg !8157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8158 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8160, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i8* %1, metadata !8161, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i8* %1, metadata !8162, metadata !DIExpression()), !dbg !8165
  %3 = bitcast i8* %1 to i32*, !dbg !8166
  %4 = load i32, i32* %3, align 4, !dbg !8166
  %5 = add i32 %4, -169, !dbg !8166
  %6 = icmp ult i32 %5, -121, !dbg !8166
  br i1 %6, label %16, label %7, !dbg !8168

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8169
  %9 = inttoptr i32 %8 to i32*, !dbg !8170
  call void @llvm.dbg.value(metadata i32* %9, metadata !8163, metadata !DIExpression()), !dbg !8165
  %10 = load volatile i32, i32* %9, align 4, !dbg !8171
  call void @llvm.dbg.value(metadata i32 %10, metadata !8164, metadata !DIExpression()), !dbg !8165
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8172
  %12 = bitcast i8* %11 to i32*, !dbg !8172
  %13 = load i32, i32* %12, align 4, !dbg !8172
  %14 = xor i32 %13, -1, !dbg !8173
  %15 = and i32 %10, %14, !dbg !8174
  call void @llvm.dbg.value(metadata i32 %15, metadata !8164, metadata !DIExpression()), !dbg !8165
  store volatile i32 %15, i32* %9, align 4, !dbg !8175
  br label %16, !dbg !8176

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8165
  ret i32 %17, !dbg !8177
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8178 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8180, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata i8* %1, metadata !8181, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata i32* %2, metadata !8182, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata i8* %1, metadata !8183, metadata !DIExpression()), !dbg !8188
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8189
  call void @llvm.dbg.value(metadata i32 %4, metadata !8184, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata i32 undef, metadata !8185, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata i32 undef, metadata !8186, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata i32 %4, metadata !8187, metadata !DIExpression()), !dbg !8188
  %5 = bitcast i8* %1 to i32*, !dbg !8190
  %6 = load i32, i32* %5, align 4, !dbg !8190
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !8191

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8192
  call void @llvm.dbg.value(metadata i32 %8, metadata !8185, metadata !DIExpression()), !dbg !8188
  br label %16, !dbg !8193

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8195
  call void @llvm.dbg.value(metadata i32 %10, metadata !8186, metadata !DIExpression()), !dbg !8188
  br label %16, !dbg !8196

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8197
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #26, !dbg !8198
  br label %16, !dbg !8199

14:                                               ; preds = %3
  br label %16, !dbg !8200

15:                                               ; preds = %3
  br label %16, !dbg !8201

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !8202
  br label %18, !dbg !8203

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !8188
  ret i32 %19, !dbg !8203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8204 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8206, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i8* %1, metadata !8207, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i8* %2, metadata !8208, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i8* %1, metadata !8209, metadata !DIExpression()), !dbg !8214
  %4 = bitcast i8* %1 to i32*, !dbg !8215
  %5 = load i32, i32* %4, align 4, !dbg !8215
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8216
  call void @llvm.dbg.value(metadata i32 %6, metadata !8213, metadata !DIExpression()), !dbg !8214
  %7 = icmp slt i32 %6, 0, !dbg !8217
  br i1 %7, label %22, label %8, !dbg !8219

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8209, metadata !DIExpression()), !dbg !8214
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8220
  %10 = bitcast i8* %9 to i32*, !dbg !8220
  %11 = load i32, i32* %10, align 4, !dbg !8220
  %12 = lshr i32 %11, 16, !dbg !8220
  %13 = and i32 %12, 7, !dbg !8220
  %14 = lshr i32 %11, 8, !dbg !8221
  %15 = and i32 %14, 31, !dbg !8221
  %16 = shl i32 %13, %15, !dbg !8222
  call void @llvm.dbg.value(metadata i32 %16, metadata !8212, metadata !DIExpression()), !dbg !8214
  %17 = and i32 %11, 255, !dbg !8223
  %18 = or i32 %17, 1073887232, !dbg !8224
  %19 = inttoptr i32 %18 to i32*, !dbg !8225
  call void @llvm.dbg.value(metadata i32* %19, metadata !8210, metadata !DIExpression()), !dbg !8214
  %20 = load volatile i32, i32* %19, align 4, !dbg !8226
  call void @llvm.dbg.value(metadata i32 %20, metadata !8211, metadata !DIExpression()), !dbg !8214
  %21 = or i32 %16, %20, !dbg !8227
  call void @llvm.dbg.value(metadata i32 %21, metadata !8211, metadata !DIExpression()), !dbg !8214
  store volatile i32 %21, i32* %19, align 4, !dbg !8228
  br label %22, !dbg !8229

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8214
  ret i32 %23, !dbg !8230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8235, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i32 0, metadata !8236, metadata !DIExpression()), !dbg !8237
  %2 = add i32 %0, -1, !dbg !8238
  %3 = icmp ult i32 %2, 6, !dbg !8238
  br i1 %3, label %4, label %7, !dbg !8238

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8238
  %6 = load i32, i32* %5, align 4, !dbg !8238
  call void @llvm.dbg.value(metadata i32 %6, metadata !8236, metadata !DIExpression()), !dbg !8237
  br label %7, !dbg !8239

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8237
  ret i32 %8, !dbg !8240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8245, metadata !DIExpression()), !dbg !8247
  call void @llvm.dbg.value(metadata i32 %1, metadata !8246, metadata !DIExpression()), !dbg !8247
  %3 = udiv i32 %0, %1, !dbg !8248
  ret i32 %3, !dbg !8249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #11 !dbg !8250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8254, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32 16, metadata !8255, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32 336, metadata !8256, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32 4, metadata !8257, metadata !DIExpression()), !dbg !8258
  %2 = mul i32 %0, 336, !dbg !8259
  %3 = lshr i32 %2, 6, !dbg !8260
  ret i32 %3, !dbg !8261
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8262 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8264, metadata !DIExpression()), !dbg !8267
  tail call void @config_enable_default_clocks() #25, !dbg !8268
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8269
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8269
  %4 = lshr i32 %3, 4, !dbg !8269
  %5 = and i32 %4, 15, !dbg !8269
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8269
  %7 = load i8, i8* %6, align 1, !dbg !8269
  %8 = zext i8 %7 to i32, !dbg !8269
  %9 = lshr i32 %2, %8, !dbg !8269
  call void @llvm.dbg.value(metadata i32 %9, metadata !8265, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8266, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8267
  %10 = icmp ult i32 %9, 84000000, !dbg !8270
  br i1 %10, label %11, label %13, !dbg !8272

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8273
  br label %13, !dbg !8275

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8276
  tail call fastcc void @set_up_plls() #26, !dbg !8277
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8278
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8281
  br label %14, !dbg !8282

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8283
  %16 = icmp eq i32 %15, 8, !dbg !8284
  br i1 %16, label %17, label %14, !dbg !8282, !llvm.loop !8285

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8287
  br i1 %18, label %19, label %21, !dbg !8289

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8290
  br label %21, !dbg !8292

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8293
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8294
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8295
  ret i32 0, !dbg !8296
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8297 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8299
  %2 = and i32 %1, 240, !dbg !8299
  ret i32 %2, !dbg !8300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8301 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8302
  %2 = icmp eq i32 %1, 1, !dbg !8306
  br i1 %2, label %7, label %3, !dbg !8307

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8308
  br label %4, !dbg !8310

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8311
  %6 = icmp eq i32 %5, 1, !dbg !8312
  br i1 %6, label %7, label %4, !dbg !8310, !llvm.loop !8313

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8315
  br label %8, !dbg !8318

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8319
  %10 = icmp eq i32 %9, 1, !dbg !8320
  br i1 %10, label %11, label %8, !dbg !8318, !llvm.loop !8321

11:                                               ; preds = %8
  ret void, !dbg !8323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8324 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8325
  %2 = icmp eq i32 %1, 8, !dbg !8327
  br i1 %2, label %3, label %4, !dbg !8328

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8329
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8331
  br label %4, !dbg !8332

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8333
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8334
  %6 = and i32 %5, -196609, !dbg !8334
  %7 = or i32 %6, 65536, !dbg !8334
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8334
  tail call void @config_pll_sysclock() #25, !dbg !8335
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8336
  br label %8, !dbg !8337

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8338
  %10 = icmp eq i32 %9, 1, !dbg !8339
  br i1 %10, label %11, label %8, !dbg !8337, !llvm.loop !8340

11:                                               ; preds = %8
  ret void, !dbg !8342
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8343 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8345, metadata !DIExpression()), !dbg !8346
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8347
  %2 = and i32 %1, -241, !dbg !8347
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8347
  ret void, !dbg !8348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8351, metadata !DIExpression()), !dbg !8352
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8353
  %3 = and i32 %2, -4, !dbg !8353
  %4 = or i32 %3, %0, !dbg !8353
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8353
  ret void, !dbg !8354
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8355 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8356
  %2 = and i32 %1, 12, !dbg !8356
  ret i32 %2, !dbg !8357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8358 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8360, metadata !DIExpression()), !dbg !8361
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8362
  %2 = and i32 %1, -7169, !dbg !8362
  %3 = or i32 %2, 4096, !dbg !8362
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8362
  ret void, !dbg !8363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8364 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8366, metadata !DIExpression()), !dbg !8367
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8368
  %2 = and i32 %1, -57345, !dbg !8368
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8368
  ret void, !dbg !8369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8370 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8371
  %2 = icmp eq i32 %1, 1, !dbg !8373
  br i1 %2, label %7, label %3, !dbg !8374

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8375
  br label %4, !dbg !8377

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8378
  %6 = icmp eq i32 %5, 1, !dbg !8379
  br i1 %6, label %7, label %4, !dbg !8377, !llvm.loop !8380

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8382
  br label %8, !dbg !8383

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8384
  %10 = icmp eq i32 %9, 0, !dbg !8385
  br i1 %10, label %11, label %8, !dbg !8383, !llvm.loop !8386

11:                                               ; preds = %8
  ret void, !dbg !8388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8389 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8390
  %2 = and i32 %1, -16777217, !dbg !8390
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8390
  ret void, !dbg !8391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8392 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8393
  %2 = or i32 %1, 16777216, !dbg !8393
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8393
  ret void, !dbg !8394
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8395 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8396
  %2 = lshr i32 %1, 25, !dbg !8397
  %3 = and i32 %2, 1, !dbg !8397
  ret i32 %3, !dbg !8398
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8399 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8400
  %2 = lshr i32 %1, 1, !dbg !8401
  %3 = and i32 %2, 1, !dbg !8401
  ret i32 %3, !dbg !8402
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8403 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8404
  %2 = or i32 %1, 1, !dbg !8404
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8404
  ret void, !dbg !8405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8406 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8407
  %2 = or i32 %1, 1, !dbg !8407
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8407
  ret void, !dbg !8408
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8409 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8410
  %2 = lshr i32 %1, 1, !dbg !8411
  %3 = and i32 %2, 1, !dbg !8411
  ret i32 %3, !dbg !8412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8413 {
  ret i32 16000000, !dbg !8415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8418 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8419
  ret void, !dbg !8420
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8421 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8425, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata i32 16, metadata !8426, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata i32 336, metadata !8427, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata i32 65536, metadata !8428, metadata !DIExpression()), !dbg !8429
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8430
  %2 = and i32 %1, -4227072, !dbg !8430
  %3 = or i32 %2, 21520, !dbg !8430
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8430
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8431
  %5 = and i32 %4, -196609, !dbg !8431
  %6 = or i32 %5, 65536, !dbg !8431
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8431
  ret void, !dbg !8432
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8433 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8434
  ret void, !dbg !8435
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8436 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8439, metadata !DIExpression()), !dbg !8441
  %2 = bitcast i32* %1 to i8*, !dbg !8442
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8442
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8440, metadata !DIExpression()), !dbg !8443
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8444
  %4 = or i32 %3, 268435456, !dbg !8444
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8444
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8445
  %6 = and i32 %5, 268435456, !dbg !8445
  store volatile i32 %6, i32* %1, align 4, !dbg !8446
  %7 = load volatile i32, i32* %1, align 4, !dbg !8447
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8448
  ret void, !dbg !8448
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8449 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8451, metadata !DIExpression()), !dbg !8452
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !8453
  br i1 %2, label %3, label %4, !dbg !8455

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8456
  br label %4, !dbg !8457

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8452
  ret i32 %5, !dbg !8458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8459 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8464, metadata !DIExpression()), !dbg !8465
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8466, !srcloc !8468
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !8469
  ret i1 %1, !dbg !8470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8471 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8472
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8473
  ret void, !dbg !8474
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8477, metadata !DIExpression()), !dbg !8478
  %2 = icmp eq i32 %0, 10, !dbg !8479
  br i1 %2, label %3, label %4, !dbg !8481

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !8482
  br label %4, !dbg !8484

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8485
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !8486
  ret i32 %0, !dbg !8487
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8488 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8491, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.value(metadata i8 %0, metadata !8492, metadata !DIExpression()), !dbg !8493
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8494, !srcloc !8496
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !8497
  ret void, !dbg !8498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8499 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8501, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata i8 %0, metadata !8502, metadata !DIExpression()), !dbg !8504
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8505
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8503, metadata !DIExpression()), !dbg !8504
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8506
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8506
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !8507
  ret void, !dbg !8508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8509 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8511, metadata !DIExpression()), !dbg !8512
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !8513
  ret i1 %1, !dbg !8514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8515 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8562, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8563, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8564, metadata !DIExpression()), !dbg !8565
  ret void, !dbg !8566
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8567 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8569, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata i8 %1, metadata !8570, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata i32 %2, metadata !8571, metadata !DIExpression()), !dbg !8574
  %5 = bitcast i32* %4 to i8*, !dbg !8575
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8575
  call void @llvm.dbg.value(metadata i32* %4, metadata !8573, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8576
  call void @llvm.dbg.value(metadata i32 %6, metadata !8572, metadata !DIExpression()), !dbg !8574
  %7 = icmp eq i32 %6, 0, !dbg !8577
  br i1 %7, label %8, label %31, !dbg !8579

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8572, metadata !DIExpression()), !dbg !8574
  %9 = and i32 %2, 131072, !dbg !8580
  %10 = icmp eq i32 %9, 0, !dbg !8582
  br i1 %10, label %28, label %11, !dbg !8583

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8584
  %13 = icmp eq i32 %12, 0, !dbg !8587
  br i1 %13, label %18, label %14, !dbg !8588

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8589
  %16 = shl nuw i32 1, %15, !dbg !8589
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8591
  br label %25, !dbg !8592

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8593
  %20 = icmp eq i32 %19, 0, !dbg !8595
  %21 = zext i8 %1 to i32, !dbg !8574
  br i1 %20, label %25, label %22, !dbg !8596

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8597
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8599
  br label %25, !dbg !8600

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8601
  %27 = load i32, i32* %4, align 4, !dbg !8602
  call void @llvm.dbg.value(metadata i32 %30, metadata !8573, metadata !DIExpression()), !dbg !8574
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8603
  br label %31, !dbg !8604

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8601
  %30 = load i32, i32* %4, align 4, !dbg !8602
  call void @llvm.dbg.value(metadata i32 %30, metadata !8573, metadata !DIExpression()), !dbg !8574
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8603
  call void @llvm.dbg.value(metadata i32 0, metadata !8572, metadata !DIExpression()), !dbg !8574
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8605
  ret i32 %6, !dbg !8605
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8606 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8610, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i32* %1, metadata !8611, metadata !DIExpression()), !dbg !8615
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8616
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8616
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8616
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8612, metadata !DIExpression()), !dbg !8615
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8617
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8617
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8617
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8614, metadata !DIExpression()), !dbg !8615
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8618
  store i32 %9, i32* %1, align 4, !dbg !8619
  ret i32 0, !dbg !8620
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8621 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8623, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i32 %1, metadata !8624, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i32 %2, metadata !8625, metadata !DIExpression()), !dbg !8629
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8630
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8630
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8630
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8626, metadata !DIExpression()), !dbg !8629
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8631
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8631
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8631
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8627, metadata !DIExpression()), !dbg !8629
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8632
  call void @llvm.dbg.value(metadata i32 %10, metadata !8628, metadata !DIExpression()), !dbg !8629
  %11 = xor i32 %1, -1, !dbg !8633
  %12 = and i32 %10, %11, !dbg !8634
  %13 = and i32 %2, %1, !dbg !8635
  %14 = or i32 %12, %13, !dbg !8636
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8637
  ret i32 0, !dbg !8638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8641, metadata !DIExpression()), !dbg !8645
  call void @llvm.dbg.value(metadata i32 %1, metadata !8642, metadata !DIExpression()), !dbg !8645
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8646
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8646
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8646
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8643, metadata !DIExpression()), !dbg !8645
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8647
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8647
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8647
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8644, metadata !DIExpression()), !dbg !8645
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8648
  store volatile i32 %1, i32* %9, align 4, !dbg !8648
  ret i32 0, !dbg !8649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8650 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8652, metadata !DIExpression()), !dbg !8656
  call void @llvm.dbg.value(metadata i32 %1, metadata !8653, metadata !DIExpression()), !dbg !8656
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8657
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8657
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8657
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8654, metadata !DIExpression()), !dbg !8656
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8658
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8658
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8658
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8655, metadata !DIExpression()), !dbg !8656
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8659
  ret i32 0, !dbg !8660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8661 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8663, metadata !DIExpression()), !dbg !8667
  call void @llvm.dbg.value(metadata i32 %1, metadata !8664, metadata !DIExpression()), !dbg !8667
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8668
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8668
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8668
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8665, metadata !DIExpression()), !dbg !8667
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8669
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8669
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8669
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8666, metadata !DIExpression()), !dbg !8667
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8670
  %10 = load volatile i32, i32* %9, align 4, !dbg !8670
  %11 = xor i32 %10, %1, !dbg !8670
  store volatile i32 %11, i32* %9, align 4, !dbg !8670
  ret i32 0, !dbg !8671
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8672 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8674, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i8 %1, metadata !8675, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i32 %2, metadata !8676, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i32 %3, metadata !8677, metadata !DIExpression()), !dbg !8684
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8685
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8685
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8685
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8678, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i8* undef, metadata !8679, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i32 0, metadata !8681, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i32 0, metadata !8682, metadata !DIExpression()), !dbg !8684
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8686

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8687
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8691
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8692
  %12 = load i32, i32* %11, align 4, !dbg !8692
  %13 = icmp eq i32 %10, %12, !dbg !8693
  br i1 %13, label %14, label %29, !dbg !8694

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !8695
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !8697
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !8698
  br label %29, !dbg !8699

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8700
  %17 = load i8*, i8** %16, align 4, !dbg !8700
  call void @llvm.dbg.value(metadata i8* %17, metadata !8679, metadata !DIExpression()), !dbg !8684
  %18 = zext i8 %1 to i32, !dbg !8701
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !8703
  %20 = icmp eq i32 %19, 0, !dbg !8704
  br i1 %20, label %21, label %29, !dbg !8705

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8706
  %23 = load i32, i32* %22, align 4, !dbg !8706
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8707
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8708

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8681, metadata !DIExpression()), !dbg !8684
  br label %27, !dbg !8709

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8681, metadata !DIExpression()), !dbg !8684
  br label %27, !dbg !8711

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8681, metadata !DIExpression()), !dbg !8684
  br label %27, !dbg !8712

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8684
  call void @llvm.dbg.value(metadata i32 %28, metadata !8681, metadata !DIExpression()), !dbg !8684
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !8713
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !8714
  br label %29, !dbg !8714

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8684
  call void @llvm.dbg.value(metadata i32 %30, metadata !8682, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.label(metadata !8683), !dbg !8715
  ret i32 %30, !dbg !8716
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #13 !dbg !8717 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8719, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8720, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i1 %2, metadata !8721, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8723
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8724
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8724
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8724
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8722, metadata !DIExpression()), !dbg !8723
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8725
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8726
  ret i32 %8, !dbg !8727
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #13 !dbg !8728 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8734, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8735, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i1 %2, metadata !8736, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8737
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8738
  br i1 %4, label %10, label %5, !dbg !8740

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8741
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8744
  %8 = or i1 %7, %2, !dbg !8745
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8745
  br i1 %2, label %11, label %13, !dbg !8745

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8746

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8747
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8750
  br label %13, !dbg !8751

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8737
  ret i32 %14, !dbg !8752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8753 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8757, metadata !DIExpression()), !dbg !8758
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8759
  %3 = icmp eq %struct._snode* %2, null, !dbg !8759
  ret i1 %3, !dbg !8759
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !8760 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8764, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8765, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8766, metadata !DIExpression()), !dbg !8768
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8769
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8767, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8766, metadata !DIExpression()), !dbg !8768
  %4 = icmp eq %struct._snode* %3, null, !dbg !8771
  br i1 %4, label %15, label %5, !dbg !8769

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8767, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8766, metadata !DIExpression()), !dbg !8768
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8773
  br i1 %6, label %9, label %11, !dbg !8776

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8767, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8766, metadata !DIExpression()), !dbg !8768
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8773
  br i1 %8, label %9, label %11, !dbg !8776, !llvm.loop !8777

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8778
  br label %15, !dbg !8778

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8767, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8766, metadata !DIExpression()), !dbg !8768
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8771
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8767, metadata !DIExpression()), !dbg !8768
  %14 = icmp eq %struct._snode* %13, null, !dbg !8771
  br i1 %14, label %15, label %7, !dbg !8769, !llvm.loop !8777

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8781 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8785, metadata !DIExpression()), !dbg !8787
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8786, metadata !DIExpression()), !dbg !8787
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8788
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8788
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8788
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8789
  %5 = icmp eq %struct._snode* %4, null, !dbg !8789
  br i1 %5, label %6, label %8, !dbg !8788

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8791
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8791
  br label %8, !dbg !8791

8:                                                ; preds = %6, %2
  ret void, !dbg !8788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8793 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8797, metadata !DIExpression()), !dbg !8798
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8799
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8799
  ret %struct._snode* %3, !dbg !8800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8801 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8805, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8806, metadata !DIExpression()), !dbg !8807
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8808
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8809
  ret void, !dbg !8810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8811 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8813, metadata !DIExpression()), !dbg !8815
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8814, metadata !DIExpression()), !dbg !8815
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8816
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8817
  ret void, !dbg !8818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8819 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8821, metadata !DIExpression()), !dbg !8822
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8823
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8823
  ret %struct._snode* %3, !dbg !8824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8825 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8827, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8828, metadata !DIExpression()), !dbg !8829
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8830
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8831
  ret void, !dbg !8832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8833 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8837, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8838, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8839, metadata !DIExpression()), !dbg !8840
  %4 = icmp eq %struct._snode* %1, null, !dbg !8841
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8843
  br i1 %4, label %6, label %11, !dbg !8844

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8845
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8847
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8847
  br i1 %8, label %9, label %15, !dbg !8845

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8849
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8849
  br label %15, !dbg !8849

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8851
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8853
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8853
  br i1 %13, label %14, label %15, !dbg !8851

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8855
  br label %15, !dbg !8855

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8844
  ret void, !dbg !8844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8857 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8861, metadata !DIExpression()), !dbg !8862
  %2 = icmp eq %struct._snode* %0, null, !dbg !8863
  br i1 %2, label %5, label %3, !dbg !8863

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8863
  br label %5, !dbg !8863

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8863
  ret %struct._snode* %6, !dbg !8863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8864 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8866, metadata !DIExpression()), !dbg !8867
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8868
  ret %struct._snode* %2, !dbg !8868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8869 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8871, metadata !DIExpression()), !dbg !8872
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8873
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8873
  ret %struct._snode* %3, !dbg !8874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8877, metadata !DIExpression()), !dbg !8880
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8881, !range !8882
  call void @llvm.dbg.value(metadata i32 %2, metadata !8878, metadata !DIExpression()), !dbg !8880
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8883
  call void @llvm.dbg.value(metadata i32 %3, metadata !8879, metadata !DIExpression()), !dbg !8880
  ret i32 %3, !dbg !8884
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8887, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.value(metadata i8* %1, metadata !8888, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.value(metadata i8* %1, metadata !8889, metadata !DIExpression()), !dbg !8890
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8891
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8891
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8892
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8892
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8892
  %8 = shl nuw i32 1, %0, !dbg !8893
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !8894
  ret void, !dbg !8895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8896 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8900, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata i32 %1, metadata !8901, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8902, metadata !DIExpression()), !dbg !8906
  %4 = bitcast i64* %3 to i8*, !dbg !8907
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !8907
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8904, metadata !DIExpression()), !dbg !8906
  store i64 70368744177732, i64* %3, align 8, !dbg !8908
  call void @llvm.dbg.value(metadata i64* %3, metadata !8904, metadata !DIExpression(DW_OP_deref)), !dbg !8906
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !8909
  call void @llvm.dbg.value(metadata i32 %5, metadata !8905, metadata !DIExpression()), !dbg !8906
  %6 = icmp eq i32 %5, 0, !dbg !8910
  br i1 %6, label %7, label %8, !dbg !8912

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !8913
  br label %8, !dbg !8914

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !8915
  ret void, !dbg !8915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8916 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8918, metadata !DIExpression()), !dbg !8921
  call void @llvm.dbg.value(metadata i8* %0, metadata !8919, metadata !DIExpression()), !dbg !8921
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8922
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8920, metadata !DIExpression()), !dbg !8921
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8923
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8923
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !8924
  ret i32 %5, !dbg !8925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8928, metadata !DIExpression()), !dbg !8931
  call void @llvm.dbg.value(metadata i32 %1, metadata !8929, metadata !DIExpression()), !dbg !8931
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !8932
  call void @llvm.dbg.value(metadata i32 %3, metadata !8930, metadata !DIExpression()), !dbg !8931
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !8933
  ret void, !dbg !8934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !8935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8939, metadata !DIExpression()), !dbg !8940
  %2 = sdiv i32 %0, 4, !dbg !8941
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8942
  %6 = add nsw i32 %5, 16, !dbg !8943
  %7 = shl i32 15, %6, !dbg !8944
  %8 = or i32 %7, %2, !dbg !8945
  ret i32 %8, !dbg !8946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8951, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.value(metadata i32 %1, metadata !8952, metadata !DIExpression()), !dbg !8953
  %3 = and i32 %1, 255, !dbg !8954
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8954
  %5 = load volatile i32, i32* %4, align 4, !dbg !8954
  %6 = lshr i32 %1, 16, !dbg !8954
  %7 = xor i32 %6, -1, !dbg !8954
  %8 = and i32 %5, %7, !dbg !8954
  call void @llvm.dbg.value(metadata i32 %6, metadata !8955, metadata !DIExpression()) #24, !dbg !8959
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !8961, !srcloc !8962
  call void @llvm.dbg.value(metadata i32 %9, metadata !8958, metadata !DIExpression()) #24, !dbg !8959
  call void @llvm.dbg.value(metadata i32 %9, metadata !8963, metadata !DIExpression()) #24, !dbg !8968
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !8970, !range !3462
  %11 = shl i32 %0, %10, !dbg !8954
  %12 = or i32 %11, %8, !dbg !8954
  store volatile i32 %12, i32* %4, align 4, !dbg !8954
  ret void, !dbg !8971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8972 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8976, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8977, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i32 %2, metadata !8978, metadata !DIExpression()), !dbg !8981
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8982
  %5 = icmp eq %struct._snode* %4, null, !dbg !8982
  br i1 %5, label %21, label %6, !dbg !8982

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !8984
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8980, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8979, metadata !DIExpression()), !dbg !8981
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8985
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8985
  %11 = load i32, i32* %10, align 4, !dbg !8985
  %12 = and i32 %11, %2, !dbg !8989
  %13 = icmp eq i32 %12, 0, !dbg !8989
  br i1 %13, label %19, label %14, !dbg !8990

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8979, metadata !DIExpression()), !dbg !8981
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8991
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8991
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8991
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !8993
  br label %19, !dbg !8994

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8979, metadata !DIExpression()), !dbg !8981
  %20 = icmp eq %struct._snode* %8, null, !dbg !8995
  br i1 %20, label %21, label %6, !dbg !8995

21:                                               ; preds = %19, %3
  ret void, !dbg !8996
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8999, metadata !DIExpression()), !dbg !9000
  %2 = and i32 %0, 255, !dbg !9001
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9001
  %4 = load volatile i32, i32* %3, align 4, !dbg !9001
  %5 = lshr i32 %0, 16, !dbg !9001
  %6 = and i32 %4, %5, !dbg !9001
  call void @llvm.dbg.value(metadata i32 %5, metadata !8955, metadata !DIExpression()) #24, !dbg !9002
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !9004, !srcloc !8962
  call void @llvm.dbg.value(metadata i32 %7, metadata !8958, metadata !DIExpression()) #24, !dbg !9002
  call void @llvm.dbg.value(metadata i32 %7, metadata !8963, metadata !DIExpression()) #24, !dbg !9005
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9007, !range !3462
  %9 = lshr i32 %6, %8, !dbg !9008
  ret i32 %9, !dbg !9009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9010 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9015, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i32 %1, metadata !9016, metadata !DIExpression()), !dbg !9017
  %3 = shl i32 %1, 16, !dbg !9018
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9018
  store volatile i32 %3, i32* %4, align 4, !dbg !9018
  ret void, !dbg !9019
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9020 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9024, metadata !DIExpression()), !dbg !9025
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9026
  %3 = load volatile i32, i32* %2, align 4, !dbg !9026
  ret i32 %3, !dbg !9027
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9028 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9030, metadata !DIExpression()), !dbg !9032
  call void @llvm.dbg.value(metadata i32 %1, metadata !9031, metadata !DIExpression()), !dbg !9032
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9033
  store volatile i32 %1, i32* %3, align 4, !dbg !9033
  ret void, !dbg !9034
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9035 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9037, metadata !DIExpression()), !dbg !9038
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9039
  %3 = load volatile i32, i32* %2, align 4, !dbg !9039
  ret i32 %3, !dbg !9040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !9041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9045, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.value(metadata i32* %1, metadata !9046, metadata !DIExpression()), !dbg !9047
  %3 = and i32 %0, 131072, !dbg !9048
  %4 = icmp eq i32 %3, 0, !dbg !9050
  br i1 %4, label %22, label %5, !dbg !9051

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9052
  %6 = and i32 %0, 2, !dbg !9054
  %7 = icmp eq i32 %6, 0, !dbg !9056
  br i1 %7, label %11, label %8, !dbg !9057

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9058
  %10 = icmp eq i32 %9, 0, !dbg !9058
  br i1 %10, label %33, label %11, !dbg !9061

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9062
  store i32 %12, i32* %1, align 4, !dbg !9062
  %13 = and i32 %0, 16, !dbg !9063
  %14 = icmp eq i32 %13, 0, !dbg !9065
  br i1 %14, label %17, label %15, !dbg !9066

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9067
  br label %31, !dbg !9069

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9070
  %19 = icmp eq i32 %18, 0, !dbg !9072
  br i1 %19, label %33, label %20, !dbg !9073

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9074
  br label %31, !dbg !9076

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9077
  %24 = icmp eq i32 %23, 0, !dbg !9079
  br i1 %24, label %31, label %25, !dbg !9080

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9081
  %27 = icmp eq i32 %26, 0, !dbg !9084
  br i1 %27, label %28, label %31, !dbg !9085

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9086
  br label %33, !dbg !9087

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9047
  ret i32 %34, !dbg !9087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9088 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9092, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %1, metadata !9093, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %2, metadata !9094, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %3, metadata !9095, metadata !DIExpression()), !dbg !9103
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9104
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9104
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9104
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9096, metadata !DIExpression()), !dbg !9103
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9105
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9105
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9105
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9097, metadata !DIExpression()), !dbg !9103
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9106
  call void @llvm.dbg.value(metadata i32 %11, metadata !9098, metadata !DIExpression()), !dbg !9103
  %12 = and i32 %2, 48, !dbg !9107
  call void @llvm.dbg.value(metadata i32 %12, metadata !9099, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %2, metadata !9100, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %2, metadata !9101, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %2, metadata !9102, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9103
  %13 = lshr i32 %2, 6, !dbg !9108
  %14 = and i32 %13, 1, !dbg !9108
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9109
  %15 = lshr i32 %2, 7, !dbg !9110
  %16 = and i32 %15, 3, !dbg !9110
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9111
  %17 = lshr i32 %2, 9, !dbg !9112
  %18 = and i32 %17, 3, !dbg !9112
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9113
  %19 = icmp eq i32 %12, 32, !dbg !9114
  br i1 %19, label %20, label %24, !dbg !9116

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9117
  br i1 %21, label %22, label %23, !dbg !9120

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9121
  br label %24, !dbg !9123

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9124
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9126
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9127
  ret void, !dbg !9128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9131, metadata !DIExpression()), !dbg !9133
  %2 = shl nuw i32 1, %0, !dbg !9134
  call void @llvm.dbg.value(metadata i32 %2, metadata !9132, metadata !DIExpression()), !dbg !9133
  ret i32 %2, !dbg !9135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9140, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 %1, metadata !9141, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 %2, metadata !9142, metadata !DIExpression()), !dbg !9143
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9144
  %5 = load volatile i32, i32* %4, align 4, !dbg !9144
  %6 = xor i32 %1, -1, !dbg !9144
  %7 = and i32 %5, %6, !dbg !9144
  %8 = mul i32 %2, %1, !dbg !9144
  %9 = or i32 %7, %8, !dbg !9144
  store volatile i32 %9, i32* %4, align 4, !dbg !9144
  ret void, !dbg !9145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9146 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9148, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %1, metadata !9149, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %2, metadata !9150, metadata !DIExpression()), !dbg !9151
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9152
  %5 = load volatile i32, i32* %4, align 4, !dbg !9152
  call void @llvm.dbg.value(metadata i32 %1, metadata !8955, metadata !DIExpression()) #24, !dbg !9153
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9155, !srcloc !8962
  call void @llvm.dbg.value(metadata i32 %6, metadata !8958, metadata !DIExpression()) #24, !dbg !9153
  call void @llvm.dbg.value(metadata i32 %6, metadata !8963, metadata !DIExpression()) #24, !dbg !9156
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9158, !range !3462
  %8 = shl nuw nsw i32 %7, 1, !dbg !9152
  %9 = shl i32 3, %8, !dbg !9152
  %10 = xor i32 %9, -1, !dbg !9152
  %11 = and i32 %5, %10, !dbg !9152
  call void @llvm.dbg.value(metadata i32 %1, metadata !8955, metadata !DIExpression()) #24, !dbg !9159
  call void @llvm.dbg.value(metadata i32 %6, metadata !8958, metadata !DIExpression()) #24, !dbg !9159
  call void @llvm.dbg.value(metadata i32 %6, metadata !8963, metadata !DIExpression()) #24, !dbg !9161
  %12 = shl i32 %2, %8, !dbg !9152
  %13 = or i32 %11, %12, !dbg !9152
  store volatile i32 %13, i32* %4, align 4, !dbg !9152
  ret void, !dbg !9163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9164 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9166, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata i32 %1, metadata !9167, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata i32 %2, metadata !9168, metadata !DIExpression()), !dbg !9169
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9170
  %5 = load volatile i32, i32* %4, align 4, !dbg !9170
  call void @llvm.dbg.value(metadata i32 %1, metadata !8955, metadata !DIExpression()) #24, !dbg !9171
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9173, !srcloc !8962
  call void @llvm.dbg.value(metadata i32 %6, metadata !8958, metadata !DIExpression()) #24, !dbg !9171
  call void @llvm.dbg.value(metadata i32 %6, metadata !8963, metadata !DIExpression()) #24, !dbg !9174
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9176, !range !3462
  %8 = shl nuw nsw i32 %7, 1, !dbg !9170
  %9 = shl i32 3, %8, !dbg !9170
  %10 = xor i32 %9, -1, !dbg !9170
  %11 = and i32 %5, %10, !dbg !9170
  call void @llvm.dbg.value(metadata i32 %1, metadata !8955, metadata !DIExpression()) #24, !dbg !9177
  call void @llvm.dbg.value(metadata i32 %6, metadata !8958, metadata !DIExpression()) #24, !dbg !9177
  call void @llvm.dbg.value(metadata i32 %6, metadata !8963, metadata !DIExpression()) #24, !dbg !9179
  %12 = shl i32 %2, %8, !dbg !9170
  %13 = or i32 %11, %12, !dbg !9170
  store volatile i32 %13, i32* %4, align 4, !dbg !9170
  ret void, !dbg !9181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9182 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9184, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata i32 %1, metadata !9185, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata i32 %2, metadata !9186, metadata !DIExpression()), !dbg !9187
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9188
  %5 = load volatile i32, i32* %4, align 4, !dbg !9188
  call void @llvm.dbg.value(metadata i32 %1, metadata !8955, metadata !DIExpression()) #24, !dbg !9189
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9191, !srcloc !8962
  call void @llvm.dbg.value(metadata i32 %6, metadata !8958, metadata !DIExpression()) #24, !dbg !9189
  call void @llvm.dbg.value(metadata i32 %6, metadata !8963, metadata !DIExpression()) #24, !dbg !9192
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9194, !range !3462
  %8 = shl nuw nsw i32 %7, 2, !dbg !9188
  %9 = shl i32 15, %8, !dbg !9188
  %10 = xor i32 %9, -1, !dbg !9188
  %11 = and i32 %5, %10, !dbg !9188
  call void @llvm.dbg.value(metadata i32 %1, metadata !8955, metadata !DIExpression()) #24, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %6, metadata !8958, metadata !DIExpression()) #24, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %6, metadata !8963, metadata !DIExpression()) #24, !dbg !9197
  %12 = shl i32 %2, %8, !dbg !9188
  %13 = or i32 %11, %12, !dbg !9188
  store volatile i32 %13, i32* %4, align 4, !dbg !9188
  ret void, !dbg !9199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9200 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9202, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i32 %1, metadata !9203, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i32 %2, metadata !9204, metadata !DIExpression()), !dbg !9205
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9206
  %5 = load volatile i32, i32* %4, align 4, !dbg !9206
  %6 = lshr i32 %1, 8, !dbg !9206
  call void @llvm.dbg.value(metadata i32 %6, metadata !8955, metadata !DIExpression()) #24, !dbg !9207
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9209, !srcloc !8962
  call void @llvm.dbg.value(metadata i32 %7, metadata !8958, metadata !DIExpression()) #24, !dbg !9207
  call void @llvm.dbg.value(metadata i32 %7, metadata !8963, metadata !DIExpression()) #24, !dbg !9210
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9212, !range !3462
  %9 = shl nuw nsw i32 %8, 2, !dbg !9206
  %10 = shl i32 15, %9, !dbg !9206
  %11 = xor i32 %10, -1, !dbg !9206
  %12 = and i32 %5, %11, !dbg !9206
  call void @llvm.dbg.value(metadata i32 %6, metadata !8955, metadata !DIExpression()) #24, !dbg !9213
  call void @llvm.dbg.value(metadata i32 %7, metadata !8958, metadata !DIExpression()) #24, !dbg !9213
  call void @llvm.dbg.value(metadata i32 %7, metadata !8963, metadata !DIExpression()) #24, !dbg !9215
  %13 = shl i32 %2, %9, !dbg !9206
  %14 = or i32 %12, %13, !dbg !9206
  store volatile i32 %14, i32* %4, align 4, !dbg !9206
  ret void, !dbg !9217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9218 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9220, metadata !DIExpression()), !dbg !9223
  call void @llvm.dbg.value(metadata i32 %1, metadata !9221, metadata !DIExpression()), !dbg !9223
  call void @llvm.dbg.value(metadata i32 %2, metadata !9222, metadata !DIExpression()), !dbg !9223
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9224
  %5 = load volatile i32, i32* %4, align 4, !dbg !9224
  call void @llvm.dbg.value(metadata i32 %1, metadata !8955, metadata !DIExpression()) #24, !dbg !9225
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9227, !srcloc !8962
  call void @llvm.dbg.value(metadata i32 %6, metadata !8958, metadata !DIExpression()) #24, !dbg !9225
  call void @llvm.dbg.value(metadata i32 %6, metadata !8963, metadata !DIExpression()) #24, !dbg !9228
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9230, !range !3462
  %8 = shl nuw nsw i32 %7, 1, !dbg !9224
  %9 = shl i32 3, %8, !dbg !9224
  %10 = xor i32 %9, -1, !dbg !9224
  %11 = and i32 %5, %10, !dbg !9224
  call void @llvm.dbg.value(metadata i32 %1, metadata !8955, metadata !DIExpression()) #24, !dbg !9231
  call void @llvm.dbg.value(metadata i32 %6, metadata !8958, metadata !DIExpression()) #24, !dbg !9231
  call void @llvm.dbg.value(metadata i32 %6, metadata !8963, metadata !DIExpression()) #24, !dbg !9233
  %12 = shl i32 %2, %8, !dbg !9224
  %13 = or i32 %11, %12, !dbg !9224
  store volatile i32 %13, i32* %4, align 4, !dbg !9224
  ret void, !dbg !9235
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9236 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9238, metadata !DIExpression()), !dbg !9241
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9242
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9242
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9242
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9239, metadata !DIExpression()), !dbg !9241
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9243
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9244
  %6 = tail call fastcc zeroext i1 @device_is_ready.71() #26, !dbg !9245
  br i1 %6, label %7, label %11, !dbg !9247

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9248
  call void @llvm.dbg.value(metadata i32 %8, metadata !9240, metadata !DIExpression()), !dbg !9241
  %9 = icmp slt i32 %8, 0, !dbg !9249
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9251
  br label %11, !dbg !9251

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9241
  ret i32 %12, !dbg !9252
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.71() unnamed_addr #1 !dbg !9253 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9257, metadata !DIExpression()), !dbg !9258
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9259, !srcloc !9261
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.72() #26, !dbg !9262
  ret i1 %1, !dbg !9263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9264 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9268, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata i8 1, metadata !9269, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9270, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata i32 0, metadata !9271, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9272, metadata !DIExpression()), !dbg !9273
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9274
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9274
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9274
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9270, metadata !DIExpression()), !dbg !9273
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9275
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9278
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9279
  call void @llvm.dbg.value(metadata i32 %7, metadata !9271, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata i32 %7, metadata !9271, metadata !DIExpression()), !dbg !9273
  ret i32 %7, !dbg !9280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.72() unnamed_addr #1 !dbg !9281 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9283, metadata !DIExpression()), !dbg !9284
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !9285
  ret i1 %1, !dbg !9286
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9287 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9291, metadata !DIExpression()), !dbg !9299
  call void @llvm.dbg.value(metadata i32 %1, metadata !9292, metadata !DIExpression()), !dbg !9299
  call void @llvm.dbg.value(metadata i32 %2, metadata !9293, metadata !DIExpression()), !dbg !9299
  call void @llvm.dbg.value(metadata i32 %3, metadata !9294, metadata !DIExpression()), !dbg !9299
  call void @llvm.dbg.value(metadata i32 0, metadata !9295, metadata !DIExpression()), !dbg !9299
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9300
  %5 = icmp eq i32 %3, 17, !dbg !9301
  br i1 %5, label %6, label %14, !dbg !9302

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9303
  call void @llvm.dbg.value(metadata i32 %7, metadata !9296, metadata !DIExpression()), !dbg !9304
  %8 = icmp eq i32 %7, 0, !dbg !9305
  %9 = shl nuw i32 1, %1, !dbg !9307
  br i1 %8, label %12, label %10, !dbg !9308

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9309
  br label %14, !dbg !9311

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9312
  br label %14, !dbg !9315

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9316
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9317 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9319, metadata !DIExpression()), !dbg !9323
  call void @llvm.dbg.value(metadata i8* %1, metadata !9320, metadata !DIExpression()), !dbg !9323
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9324
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9324
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9324
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9321, metadata !DIExpression()), !dbg !9323
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9325
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9325
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9327
  %9 = icmp eq i32 %8, 0, !dbg !9327
  br i1 %9, label %12, label %10, !dbg !9328

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9329
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9331
  br label %12, !dbg !9332

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9333
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9335
  %15 = icmp eq i32 %14, 0, !dbg !9335
  br i1 %15, label %19, label %16, !dbg !9336

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9337
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9338
  store i8 %18, i8* %1, align 1, !dbg !9339
  br label %19, !dbg !9340

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9323
  ret i32 %20, !dbg !9341
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9342 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9344, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i8 %1, metadata !9345, metadata !DIExpression()), !dbg !9348
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9349
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9349
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9349
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9346, metadata !DIExpression()), !dbg !9348
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9350

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9351
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9354
  %10 = icmp eq i32 %9, 0, !dbg !9354
  br i1 %10, label %18, label %11, !dbg !9355

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9356, !srcloc !9363
  call void @llvm.dbg.value(metadata i32 undef, metadata !9359, metadata !DIExpression()) #24, !dbg !9364
  call void @llvm.dbg.value(metadata i32 undef, metadata !9360, metadata !DIExpression()) #24, !dbg !9364
  call void @llvm.dbg.value(metadata i32 undef, metadata !9347, metadata !DIExpression()), !dbg !9348
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9365
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9367
  %15 = icmp eq i32 %14, 0, !dbg !9367
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9356
  br i1 %15, label %17, label %19, !dbg !9368

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9359, metadata !DIExpression()) #24, !dbg !9364
  call void @llvm.dbg.value(metadata i32 %16, metadata !9347, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i32 undef, metadata !9369, metadata !DIExpression()) #24, !dbg !9372
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !9374, !srcloc !9375
  br label %18, !dbg !9376

18:                                               ; preds = %17, %7
  br label %7, !dbg !9351, !llvm.loop !9377

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9356
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9379
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %20, metadata !9369, metadata !DIExpression()) #24, !dbg !9381
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !9383, !srcloc !9375
  ret void, !dbg !9384
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9385 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9387, metadata !DIExpression()), !dbg !9390
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9391
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9391
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9391
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9388, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.value(metadata i32 0, metadata !9389, metadata !DIExpression()), !dbg !9390
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9392
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9392
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9394
  %8 = icmp ne i32 %7, 0, !dbg !9394
  %9 = zext i1 %8 to i32, !dbg !9395
  call void @llvm.dbg.value(metadata i32 %9, metadata !9389, metadata !DIExpression()), !dbg !9390
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9396
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9398
  %12 = icmp eq i32 %11, 0, !dbg !9398
  %13 = or i32 %9, 2, !dbg !9399
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9399
  call void @llvm.dbg.value(metadata i32 %14, metadata !9389, metadata !DIExpression()), !dbg !9390
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9400
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9402
  %17 = icmp eq i32 %16, 0, !dbg !9402
  %18 = or i32 %14, 4, !dbg !9403
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9403
  call void @llvm.dbg.value(metadata i32 %19, metadata !9389, metadata !DIExpression()), !dbg !9390
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9404
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9406
  %22 = icmp eq i32 %21, 0, !dbg !9406
  %23 = or i32 %19, 8, !dbg !9407
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9407
  call void @llvm.dbg.value(metadata i32 %24, metadata !9389, metadata !DIExpression()), !dbg !9390
  %25 = and i32 %24, 8, !dbg !9408
  %26 = icmp eq i32 %25, 0, !dbg !9408
  br i1 %26, label %29, label %27, !dbg !9410

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9411
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9413
  br label %29, !dbg !9414

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9415
  %31 = icmp eq i32 %30, 0, !dbg !9415
  br i1 %31, label %34, label %32, !dbg !9417

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9418
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9420
  br label %34, !dbg !9421

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9422
  %36 = icmp eq i32 %35, 0, !dbg !9422
  br i1 %36, label %39, label %37, !dbg !9424

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9425
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9427
  br label %39, !dbg !9428

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9429
  %41 = icmp eq i32 %40, 0, !dbg !9429
  br i1 %41, label %44, label %42, !dbg !9431

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9432
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9434
  br label %44, !dbg !9435

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9436
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9437
  ret i32 %24, !dbg !9438
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9441, metadata !DIExpression()), !dbg !9450
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9442, metadata !DIExpression()), !dbg !9450
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9451
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9451
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9451
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9443, metadata !DIExpression()), !dbg !9450
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9452
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9452
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9452
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9444, metadata !DIExpression()), !dbg !9450
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9453
  %10 = load i8, i8* %9, align 4, !dbg !9453
  %11 = zext i8 %10 to i32, !dbg !9454
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9455
  call void @llvm.dbg.value(metadata i32 %12, metadata !9446, metadata !DIExpression()), !dbg !9450
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9456
  %14 = load i8, i8* %13, align 1, !dbg !9456
  %15 = zext i8 %14 to i32, !dbg !9457
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %16, metadata !9447, metadata !DIExpression()), !dbg !9450
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9459
  %18 = load i8, i8* %17, align 2, !dbg !9459
  %19 = zext i8 %18 to i32, !dbg !9460
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9461
  call void @llvm.dbg.value(metadata i32 %20, metadata !9448, metadata !DIExpression()), !dbg !9450
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9462
  %22 = load i8, i8* %21, align 1, !dbg !9462
  %23 = zext i8 %22 to i32, !dbg !9463
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %24, metadata !9449, metadata !DIExpression()), !dbg !9450
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9465

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9467
  br i1 %26, label %69, label %27, !dbg !9469

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9470

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9471
  br i1 %29, label %65, label %30, !dbg !9471

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9473
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9450
  br i1 %31, label %38, label %34, !dbg !9475

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9476
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9476

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9479
  br i1 %37, label %38, label %69, !dbg !9480

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9481
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9482
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9483
  %41 = icmp eq i32 %12, %40, !dbg !9485
  br i1 %41, label %43, label %42, !dbg !9486

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9487
  br label %43, !dbg !9489

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9490
  %45 = icmp eq i32 %16, %44, !dbg !9492
  br i1 %45, label %47, label %46, !dbg !9493

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9494
  br label %47, !dbg !9496

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9497
  %49 = icmp eq i32 %20, %48, !dbg !9499
  br i1 %49, label %51, label %50, !dbg !9500

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9501
  br label %51, !dbg !9503

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9504
  %53 = icmp eq i32 %24, %52, !dbg !9506
  br i1 %53, label %55, label %54, !dbg !9507

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9508
  br label %55, !dbg !9510

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9511
  %57 = load i32, i32* %56, align 4, !dbg !9511
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9513
  %59 = load i32, i32* %58, align 4, !dbg !9513
  %60 = icmp eq i32 %57, %59, !dbg !9514
  br i1 %60, label %63, label %61, !dbg !9515

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9516
  %62 = load i32, i32* %56, align 4, !dbg !9518
  store i32 %62, i32* %58, align 4, !dbg !9519
  br label %63, !dbg !9520

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9521
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9522
  br label %69, !dbg !9523

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9471
  %67 = and i8 %66, 1, !dbg !9471
  %68 = icmp eq i8 %67, 0, !dbg !9471
  br i1 %68, label %30, label %69, !dbg !9471

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9450
  ret i32 %70, !dbg !9524
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9525 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9527, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9528, metadata !DIExpression()), !dbg !9530
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9531
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9531
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9531
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9529, metadata !DIExpression()), !dbg !9530
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9532
  %7 = load i32, i32* %6, align 4, !dbg !9532
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9533
  store i32 %7, i32* %8, align 4, !dbg !9534
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9535, !range !9536
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9537
  %11 = trunc i32 %10 to i8, !dbg !9537
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9538
  store i8 %11, i8* %12, align 4, !dbg !9539
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9540, !range !9541
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9542
  %15 = trunc i32 %14 to i8, !dbg !9542
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9543
  store i8 %15, i8* %16, align 1, !dbg !9544
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9545
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9546, !range !9536
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9547
  %20 = trunc i32 %19 to i8, !dbg !9547
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9548
  store i8 %20, i8* %21, align 2, !dbg !9549
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9550, !range !9551
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9552
  %24 = trunc i32 %23 to i8, !dbg !9552
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9553
  store i8 %24, i8* %25, align 1, !dbg !9554
  ret i32 0, !dbg !9555
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9560, metadata !DIExpression()), !dbg !9562
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9563
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9563
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9563
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9561, metadata !DIExpression()), !dbg !9562
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9564
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9564
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9565
  ret i32 %7, !dbg !9566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9571, metadata !DIExpression()), !dbg !9572
  %2 = icmp eq i32 %0, 1024, !dbg !9573
  %3 = select i1 %2, i32 2, i32 0, !dbg !9573
  %4 = icmp eq i32 %0, 1536, !dbg !9573
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9573
  ret i32 %5, !dbg !9574
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9575 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9577, metadata !DIExpression()), !dbg !9579
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9580
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9580
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9580
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9578, metadata !DIExpression()), !dbg !9579
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9581
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9581
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9582
  ret i32 %7, !dbg !9583
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9588, metadata !DIExpression()), !dbg !9589
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9590
  %3 = icmp ult i32 %2, 4, !dbg !9590
  br i1 %3, label %4, label %7, !dbg !9590

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9590
  %6 = load i32, i32* %5, align 4, !dbg !9590
  br label %7, !dbg !9590

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9591
  ret i32 %8, !dbg !9593
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9594 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9596, metadata !DIExpression()), !dbg !9598
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9599
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9599
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9599
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9597, metadata !DIExpression()), !dbg !9598
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9600
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9600
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9601
  ret i32 %7, !dbg !9602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9607, metadata !DIExpression()), !dbg !9609
  call void @llvm.dbg.value(metadata i32 %1, metadata !9608, metadata !DIExpression()), !dbg !9609
  %3 = icmp eq i32 %0, 4096, !dbg !9610
  %4 = icmp eq i32 %1, 0, !dbg !9610
  %5 = select i1 %4, i32 4, i32 3, !dbg !9610
  %6 = select i1 %4, i32 3, i32 2, !dbg !9610
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9610
  ret i32 %7, !dbg !9611
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9612 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9614, metadata !DIExpression()), !dbg !9616
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9617
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9617
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9617
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9615, metadata !DIExpression()), !dbg !9616
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9618
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9618
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9619
  ret i32 %7, !dbg !9620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9625, metadata !DIExpression()), !dbg !9626
  %2 = icmp eq i32 %0, 768, !dbg !9627
  %3 = zext i1 %2 to i32, !dbg !9626
  ret i32 %3, !dbg !9629
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9630 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9635, metadata !DIExpression()), !dbg !9636
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9637
  %3 = load volatile i32, i32* %2, align 4, !dbg !9637
  %4 = and i32 %3, 768, !dbg !9637
  ret i32 %4, !dbg !9638
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9639 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9641, metadata !DIExpression()), !dbg !9642
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9643
  %3 = load volatile i32, i32* %2, align 4, !dbg !9643
  %4 = and i32 %3, 4096, !dbg !9643
  ret i32 %4, !dbg !9644
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9645 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9647, metadata !DIExpression()), !dbg !9648
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9649
  %3 = load volatile i32, i32* %2, align 4, !dbg !9649
  %4 = and i32 %3, 12288, !dbg !9649
  ret i32 %4, !dbg !9650
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9651 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9653, metadata !DIExpression()), !dbg !9654
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9655
  %3 = load volatile i32, i32* %2, align 4, !dbg !9655
  %4 = and i32 %3, 1536, !dbg !9655
  ret i32 %4, !dbg !9656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9657 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9661, metadata !DIExpression()), !dbg !9662
  %2 = icmp eq i32 %0, 2, !dbg !9663
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9663
  %4 = icmp eq i32 %0, 1, !dbg !9663
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9663
  ret i32 %5, !dbg !9664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9669, metadata !DIExpression()), !dbg !9670
  %2 = icmp ult i32 %0, 3, !dbg !9671
  br i1 %2, label %3, label %6, !dbg !9671

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9671
  %5 = load i32, i32* %4, align 4, !dbg !9671
  br label %6, !dbg !9671

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9672
  ret i32 %7, !dbg !9674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9679, metadata !DIExpression()), !dbg !9681
  call void @llvm.dbg.value(metadata i32 %1, metadata !9680, metadata !DIExpression()), !dbg !9681
  %3 = icmp eq i32 %0, 4, !dbg !9682
  %4 = icmp eq i32 %1, 0, !dbg !9682
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9682
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9682
  ret i32 %6, !dbg !9683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9688, metadata !DIExpression()), !dbg !9689
  %2 = icmp eq i32 %0, 1, !dbg !9690
  %3 = select i1 %2, i32 768, i32 0, !dbg !9689
  ret i32 %3, !dbg !9692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9693 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9697, metadata !DIExpression()), !dbg !9698
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9699
  %3 = load volatile i32, i32* %2, align 4, !dbg !9699
  %4 = and i32 %3, -8193, !dbg !9699
  store volatile i32 %4, i32* %2, align 4, !dbg !9699
  ret void, !dbg !9700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9701 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9705, metadata !DIExpression()), !dbg !9708
  call void @llvm.dbg.value(metadata i32 %1, metadata !9706, metadata !DIExpression()), !dbg !9708
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9709
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9709
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9709
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9707, metadata !DIExpression()), !dbg !9708
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9710
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9710
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9711
  ret void, !dbg !9712
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9713 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9715, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i32 %1, metadata !9716, metadata !DIExpression()), !dbg !9718
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9719
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9719
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9719
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9717, metadata !DIExpression()), !dbg !9718
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9720
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9720
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9721
  ret void, !dbg !9722
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9723 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9725, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.value(metadata i32 %1, metadata !9726, metadata !DIExpression()), !dbg !9728
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9729
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9729
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9729
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9727, metadata !DIExpression()), !dbg !9728
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9730
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9730
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9731
  ret void, !dbg !9732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9733 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9735, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.value(metadata i32 %1, metadata !9736, metadata !DIExpression()), !dbg !9738
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9739
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9739
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9739
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9737, metadata !DIExpression()), !dbg !9738
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9740
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9740
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9741
  ret void, !dbg !9742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9743 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9745, metadata !DIExpression()), !dbg !9750
  call void @llvm.dbg.value(metadata i32 %1, metadata !9746, metadata !DIExpression()), !dbg !9750
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9751
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9751
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9751
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9747, metadata !DIExpression()), !dbg !9750
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9752
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9752
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9752
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9748, metadata !DIExpression()), !dbg !9750
  %10 = bitcast i32* %3 to i8*, !dbg !9753
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9753
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9754
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9754
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9758
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9758
  %15 = load i8*, i8** %14, align 4, !dbg !9758
  call void @llvm.dbg.value(metadata i32* %3, metadata !9749, metadata !DIExpression(DW_OP_deref)), !dbg !9750
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9759
  %17 = icmp slt i32 %16, 0, !dbg !9760
  br i1 %17, label %23, label %18, !dbg !9761

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9762
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9762
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9763
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9764
  %22 = load i32, i32* %3, align 4, !dbg !9765
  call void @llvm.dbg.value(metadata i32 %22, metadata !9749, metadata !DIExpression()), !dbg !9750
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9766
  br label %23, !dbg !9767

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9767
  ret void, !dbg !9767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9768 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9770, metadata !DIExpression()), !dbg !9771
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9772
  %3 = load volatile i32, i32* %2, align 4, !dbg !9772
  %4 = or i32 %3, 8192, !dbg !9772
  store volatile i32 %4, i32* %2, align 4, !dbg !9772
  ret void, !dbg !9773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9774 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9776, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i8* %1, metadata !9777, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32* %2, metadata !9778, metadata !DIExpression()), !dbg !9780
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9781
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9781
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9781
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9779, metadata !DIExpression()), !dbg !9780
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9782
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9782
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9784
  br i1 %9, label %12, label %10, !dbg !9785

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !9786
  br label %12, !dbg !9787

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9780
  ret i32 %13, !dbg !9788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9789 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9793, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.value(metadata i32 0, metadata !9794, metadata !DIExpression()), !dbg !9795
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9796
  %3 = load volatile i32, i32* %2, align 4, !dbg !9796
  %4 = and i32 %3, -32769, !dbg !9796
  store volatile i32 %4, i32* %2, align 4, !dbg !9796
  ret void, !dbg !9797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9798 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9802, metadata !DIExpression()), !dbg !9806
  call void @llvm.dbg.value(metadata i32 %1, metadata !9803, metadata !DIExpression()), !dbg !9806
  call void @llvm.dbg.value(metadata i32 0, metadata !9804, metadata !DIExpression()), !dbg !9806
  call void @llvm.dbg.value(metadata i32 %2, metadata !9805, metadata !DIExpression()), !dbg !9806
  %4 = zext i32 %1 to i64, !dbg !9807
  %5 = mul nuw nsw i64 %4, 25, !dbg !9807
  %6 = zext i32 %2 to i64, !dbg !9807
  %7 = shl nuw nsw i64 %6, 2, !dbg !9807
  %8 = udiv i64 %5, %7, !dbg !9807
  %9 = trunc i64 %8 to i32, !dbg !9807
  %10 = udiv i32 %9, 100, !dbg !9807
  %11 = shl nuw nsw i32 %10, 4, !dbg !9807
  %12 = mul i32 %10, -100, !dbg !9807
  %13 = add i32 %12, %9, !dbg !9807
  %14 = shl i32 %13, 4, !dbg !9807
  %15 = add i32 %14, 50, !dbg !9807
  %16 = udiv i32 %15, 100, !dbg !9807
  %17 = and i32 %16, 240, !dbg !9807
  %18 = add nuw nsw i32 %17, %11, !dbg !9807
  %19 = and i32 %16, 15, !dbg !9807
  %20 = and i32 %18, 65520, !dbg !9810
  %21 = or i32 %20, %19, !dbg !9810
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9811
  store volatile i32 %21, i32* %22, align 4, !dbg !9812
  ret void, !dbg !9813
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9814 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9816, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata i32 %1, metadata !9817, metadata !DIExpression()), !dbg !9818
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9819
  %4 = load volatile i32, i32* %3, align 4, !dbg !9819
  %5 = and i32 %4, -769, !dbg !9819
  %6 = or i32 %5, %1, !dbg !9819
  store volatile i32 %6, i32* %3, align 4, !dbg !9819
  ret void, !dbg !9820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9821 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9823, metadata !DIExpression()), !dbg !9825
  call void @llvm.dbg.value(metadata i32 %1, metadata !9824, metadata !DIExpression()), !dbg !9825
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9826
  %4 = load volatile i32, i32* %3, align 4, !dbg !9826
  %5 = and i32 %4, -4097, !dbg !9826
  %6 = or i32 %5, %1, !dbg !9826
  store volatile i32 %6, i32* %3, align 4, !dbg !9826
  ret void, !dbg !9827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9828 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9830, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i32 %1, metadata !9831, metadata !DIExpression()), !dbg !9832
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9833
  %4 = load volatile i32, i32* %3, align 4, !dbg !9833
  %5 = and i32 %4, -12289, !dbg !9833
  %6 = or i32 %5, %1, !dbg !9833
  store volatile i32 %6, i32* %3, align 4, !dbg !9833
  ret void, !dbg !9834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9835 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9837, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i32 %1, metadata !9838, metadata !DIExpression()), !dbg !9839
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9840
  %4 = load volatile i32, i32* %3, align 4, !dbg !9840
  %5 = and i32 %4, -1537, !dbg !9840
  %6 = or i32 %5, %1, !dbg !9840
  store volatile i32 %6, i32* %3, align 4, !dbg !9840
  ret void, !dbg !9841
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9842 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9844, metadata !DIExpression()), !dbg !9845
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9846
  %3 = load volatile i32, i32* %2, align 4, !dbg !9846
  %4 = lshr i32 %3, 3, !dbg !9847
  %5 = and i32 %4, 1, !dbg !9847
  ret i32 %5, !dbg !9848
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9849 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9851, metadata !DIExpression()), !dbg !9852
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9853
  %3 = load volatile i32, i32* %2, align 4, !dbg !9853
  %4 = and i32 %3, 1, !dbg !9853
  ret i32 %4, !dbg !9854
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9855 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9857, metadata !DIExpression()), !dbg !9858
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9859
  %3 = load volatile i32, i32* %2, align 4, !dbg !9859
  %4 = lshr i32 %3, 1, !dbg !9860
  %5 = and i32 %4, 1, !dbg !9860
  ret i32 %5, !dbg !9861
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9862 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9864, metadata !DIExpression()), !dbg !9865
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9866
  %3 = load volatile i32, i32* %2, align 4, !dbg !9866
  %4 = lshr i32 %3, 8, !dbg !9867
  %5 = and i32 %4, 1, !dbg !9867
  ret i32 %5, !dbg !9868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9869 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9871, metadata !DIExpression()), !dbg !9872
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9873
  store volatile i32 -257, i32* %2, align 4, !dbg !9873
  ret void, !dbg !9874
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9875 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9877, metadata !DIExpression()), !dbg !9879
  %3 = bitcast i32* %2 to i8*, !dbg !9880
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9880
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9878, metadata !DIExpression()), !dbg !9881
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9882
  %5 = load volatile i32, i32* %4, align 4, !dbg !9882
  store volatile i32 %5, i32* %2, align 4, !dbg !9883
  %6 = load volatile i32, i32* %2, align 4, !dbg !9884
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9885
  %8 = load volatile i32, i32* %7, align 4, !dbg !9885
  store volatile i32 %8, i32* %2, align 4, !dbg !9886
  %9 = load volatile i32, i32* %2, align 4, !dbg !9887
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9888
  ret void, !dbg !9888
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9889 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9891, metadata !DIExpression()), !dbg !9893
  %3 = bitcast i32* %2 to i8*, !dbg !9894
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9894
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9892, metadata !DIExpression()), !dbg !9895
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9896
  %5 = load volatile i32, i32* %4, align 4, !dbg !9896
  store volatile i32 %5, i32* %2, align 4, !dbg !9897
  %6 = load volatile i32, i32* %2, align 4, !dbg !9898
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9899
  %8 = load volatile i32, i32* %7, align 4, !dbg !9899
  store volatile i32 %8, i32* %2, align 4, !dbg !9900
  %9 = load volatile i32, i32* %2, align 4, !dbg !9901
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9902
  ret void, !dbg !9902
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9903 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9905, metadata !DIExpression()), !dbg !9907
  %3 = bitcast i32* %2 to i8*, !dbg !9908
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9908
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9906, metadata !DIExpression()), !dbg !9909
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9910
  %5 = load volatile i32, i32* %4, align 4, !dbg !9910
  store volatile i32 %5, i32* %2, align 4, !dbg !9911
  %6 = load volatile i32, i32* %2, align 4, !dbg !9912
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9913
  %8 = load volatile i32, i32* %7, align 4, !dbg !9913
  store volatile i32 %8, i32* %2, align 4, !dbg !9914
  %9 = load volatile i32, i32* %2, align 4, !dbg !9915
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9916
  ret void, !dbg !9916
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9917 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9919, metadata !DIExpression()), !dbg !9921
  %3 = bitcast i32* %2 to i8*, !dbg !9922
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9922
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9920, metadata !DIExpression()), !dbg !9923
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9924
  %5 = load volatile i32, i32* %4, align 4, !dbg !9924
  store volatile i32 %5, i32* %2, align 4, !dbg !9925
  %6 = load volatile i32, i32* %2, align 4, !dbg !9926
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9927
  %8 = load volatile i32, i32* %7, align 4, !dbg !9927
  store volatile i32 %8, i32* %2, align 4, !dbg !9928
  %9 = load volatile i32, i32* %2, align 4, !dbg !9929
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9930
  ret void, !dbg !9930
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9931 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9933, metadata !DIExpression()), !dbg !9934
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9935
  %3 = load volatile i32, i32* %2, align 4, !dbg !9935
  %4 = lshr i32 %3, 7, !dbg !9936
  %5 = and i32 %4, 1, !dbg !9936
  ret i32 %5, !dbg !9937
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !9938 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9942, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i8 %1, metadata !9943, metadata !DIExpression()), !dbg !9944
  %3 = zext i8 %1 to i32, !dbg !9945
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9946
  store volatile i32 %3, i32* %4, align 4, !dbg !9947
  ret void, !dbg !9948
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9949 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9951, metadata !DIExpression()), !dbg !9952
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9953
  %3 = load volatile i32, i32* %2, align 4, !dbg !9953
  %4 = lshr i32 %3, 5, !dbg !9954
  %5 = and i32 %4, 1, !dbg !9954
  ret i32 %5, !dbg !9955
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9956 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9960, metadata !DIExpression()), !dbg !9961
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9962
  %3 = load volatile i32, i32* %2, align 4, !dbg !9962
  %4 = trunc i32 %3 to i8, !dbg !9963
  ret i8 %4, !dbg !9964
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9965 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9967, metadata !DIExpression()), !dbg !9973
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9974
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9974
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9974
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9968, metadata !DIExpression()), !dbg !9973
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9975
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !9975
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !9975
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !9969, metadata !DIExpression()), !dbg !9973
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !9976
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !9977
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !9977
  %10 = tail call fastcc zeroext i1 @device_is_ready.77(%struct.device* noundef %9) #26, !dbg !9979
  br i1 %10, label %11, label %49, !dbg !9980

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !9981
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !9982
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9982
  %15 = load i8*, i8** %14, align 4, !dbg !9982
  %16 = tail call fastcc i32 @clock_control_on.78(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !9983
  call void @llvm.dbg.value(metadata i32 %16, metadata !9972, metadata !DIExpression()), !dbg !9973
  %17 = icmp eq i32 %16, 0, !dbg !9984
  br i1 %17, label %18, label %49, !dbg !9986

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !9987
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !9987
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !9988
  call void @llvm.dbg.value(metadata i32 %21, metadata !9972, metadata !DIExpression()), !dbg !9973
  %22 = icmp slt i32 %21, 0, !dbg !9989
  br i1 %22, label %49, label %23, !dbg !9991

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9992
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9992
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !9993
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9994
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !9995
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !9996
  %28 = load i32, i32* %27, align 4, !dbg !9996
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !9998

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !9970, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata i32 4096, metadata !9971, metadata !DIExpression()), !dbg !9973
  br label %31, !dbg !9999

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !9970, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata i32 0, metadata !9971, metadata !DIExpression()), !dbg !9973
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10002
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10002
  call void @llvm.dbg.value(metadata i32 %33, metadata !9971, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata i32 %32, metadata !9970, metadata !DIExpression()), !dbg !9973
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10003
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10004
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10005
  %36 = load i8, i8* %35, align 4, !dbg !10005, !range !6611
  %37 = icmp eq i8 %36, 0, !dbg !10005
  br i1 %37, label %39, label %38, !dbg !10007

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10008
  br label %39, !dbg !10010

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10011
  %41 = load i32, i32* %40, align 4, !dbg !10011
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10012
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10013
  %43 = load i8, i8* %42, align 4, !dbg !10013, !range !6611
  %44 = icmp eq i8 %43, 0, !dbg !10013
  br i1 %44, label %47, label %45, !dbg !10015

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10016
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10018
  br label %47, !dbg !10019

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10020
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10021
  br label %49, !dbg !10022

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !9973
  ret i32 %50, !dbg !10023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10028, metadata !DIExpression()), !dbg !10032
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10033
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10033
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10033
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10029, metadata !DIExpression()), !dbg !10032
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10030, metadata !DIExpression()), !dbg !10032
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10034
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10035
  ret void, !dbg !10036
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.77(%struct.device* noundef %0) unnamed_addr #1 !dbg !10037 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10041, metadata !DIExpression()), !dbg !10042
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10043, !srcloc !10045
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.79(%struct.device* noundef %0) #26, !dbg !10046
  ret i1 %2, !dbg !10047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.78(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10048 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10050, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.value(metadata i8* %1, metadata !10051, metadata !DIExpression()), !dbg !10053
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10054
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10054
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10054
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10052, metadata !DIExpression()), !dbg !10053
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10055
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10055
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10056
  ret i32 %8, !dbg !10057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10058 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10062, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.value(metadata i8 0, metadata !10063, metadata !DIExpression()), !dbg !10066
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10067
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10067
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10065, metadata !DIExpression(DW_OP_deref)), !dbg !10066
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10068
  call void @llvm.dbg.value(metadata i32 %4, metadata !10064, metadata !DIExpression()), !dbg !10066
  %5 = icmp slt i32 %4, 0, !dbg !10069
  br i1 %5, label %9, label %6, !dbg !10071

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10072
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10065, metadata !DIExpression()), !dbg !10066
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10073
  br label %9, !dbg !10074

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10066
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10075
  ret i32 %10, !dbg !10075
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10076 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10078, metadata !DIExpression()), !dbg !10082
  call void @llvm.dbg.value(metadata i32 12, metadata !10079, metadata !DIExpression()), !dbg !10082
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10083

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10084, metadata !DIExpression()) #24, !dbg !10090
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10093, !srcloc !10094
  call void @llvm.dbg.value(metadata i32 %4, metadata !10089, metadata !DIExpression()) #24, !dbg !10090
  %5 = or i32 %4, 12, !dbg !10095
  call void @llvm.dbg.value(metadata i32 %5, metadata !10080, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata i32 %5, metadata !10097, metadata !DIExpression()) #24, !dbg !10104
  call void @llvm.dbg.value(metadata i32* %2, metadata !10102, metadata !DIExpression()) #24, !dbg !10104
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10106, !srcloc !10107
  call void @llvm.dbg.value(metadata i32 %6, metadata !10103, metadata !DIExpression()) #24, !dbg !10104
  %7 = icmp eq i32 %6, 0, !dbg !10083
  br i1 %7, label %8, label %3, !dbg !10095, !llvm.loop !10108

8:                                                ; preds = %3
  ret void, !dbg !10109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10110 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10112, metadata !DIExpression()), !dbg !10116
  call void @llvm.dbg.value(metadata i32 %1, metadata !10113, metadata !DIExpression()), !dbg !10116
  call void @llvm.dbg.value(metadata i32 %2, metadata !10114, metadata !DIExpression()), !dbg !10116
  call void @llvm.dbg.value(metadata i32 0, metadata !10115, metadata !DIExpression()), !dbg !10116
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10117
  %5 = load volatile i32, i32* %4, align 4, !dbg !10117
  %6 = and i32 %5, -5633, !dbg !10117
  %7 = or i32 %2, %1, !dbg !10117
  %8 = or i32 %7, %6, !dbg !10117
  store volatile i32 %8, i32* %4, align 4, !dbg !10117
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10118
  %10 = load volatile i32, i32* %9, align 4, !dbg !10118
  %11 = and i32 %10, -12289, !dbg !10118
  store volatile i32 %11, i32* %9, align 4, !dbg !10118
  ret void, !dbg !10119
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10120 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10122, metadata !DIExpression()), !dbg !10123
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10124
  %3 = load volatile i32, i32* %2, align 4, !dbg !10124
  %4 = or i32 %3, 8, !dbg !10124
  store volatile i32 %4, i32* %2, align 4, !dbg !10124
  ret void, !dbg !10125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10126 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10130, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10131, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata i32 0, metadata !10132, metadata !DIExpression()), !dbg !10133
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10134
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10134
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10135
  %5 = load i8, i8* %4, align 4, !dbg !10135
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10136
  ret i32 %6, !dbg !10137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.79(%struct.device* noundef %0) unnamed_addr #1 !dbg !10138 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10140, metadata !DIExpression()), !dbg !10141
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10142
  ret i1 %2, !dbg !10143
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10146, metadata !DIExpression()), !dbg !10147
  tail call fastcc void @__NVIC_SetPriority.81() #26, !dbg !10148
  store i32 8399, i32* @last_load, align 4, !dbg !10149
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10150
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10151
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10152
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10153
  %3 = or i32 %2, 7, !dbg !10153
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10153
  ret i32 0, !dbg !10154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.81() unnamed_addr #15 !dbg !10155 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10157, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.value(metadata i32 1, metadata !10158, metadata !DIExpression()), !dbg !10159
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10160
  ret void, !dbg !10163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10164 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10166, metadata !DIExpression()), !dbg !10168
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10169
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10170
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10171
  %5 = add i32 %4, %3, !dbg !10171
  store i32 %5, i32* @cycle_count, align 4, !dbg !10171
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10172
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10173
  %7 = sub i32 %5, %6, !dbg !10176
  %8 = udiv i32 %7, 8400, !dbg !10177
  call void @llvm.dbg.value(metadata i32 %8, metadata !10167, metadata !DIExpression()), !dbg !10168
  %9 = mul nuw i32 %8, 8400, !dbg !10178
  %10 = add i32 %9, %6, !dbg !10179
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10179
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10180
  tail call void @z_arm_int_exit() #25, !dbg !10181
  ret void, !dbg !10182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10183 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10188
  call void @llvm.dbg.value(metadata i32 %1, metadata !10185, metadata !DIExpression()), !dbg !10189
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10190
  call void @llvm.dbg.value(metadata i32 %2, metadata !10186, metadata !DIExpression()), !dbg !10189
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10191
  call void @llvm.dbg.value(metadata i32 %3, metadata !10187, metadata !DIExpression()), !dbg !10189
  %4 = and i32 %2, 65536, !dbg !10192
  %5 = icmp ne i32 %4, 0, !dbg !10192
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10194
  %8 = load i32, i32* @last_load, align 4, !dbg !10189
  br i1 %7, label %9, label %13, !dbg !10194

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10195
  %11 = add i32 %10, %8, !dbg !10195
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10195
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10197
  br label %13, !dbg !10198

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10199
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10200
  %16 = add i32 %14, %15, !dbg !10201
  ret i32 %16, !dbg !10202
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10207, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.value(metadata i1 %1, metadata !10208, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10220
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10221
  br i1 %4, label %5, label %8, !dbg !10221

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10223
  %7 = and i32 %6, -2, !dbg !10223
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10223
  store i32 -16777216, i32* @last_load, align 4, !dbg !10225
  br label %54, !dbg !10226

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10227
  call void @llvm.dbg.value(metadata i32 %9, metadata !10212, metadata !DIExpression()), !dbg !10220
  br i1 %3, label %18, label %10, !dbg !10228

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10228
  call void @llvm.dbg.value(metadata i32 undef, metadata !10207, metadata !DIExpression()), !dbg !10220
  %12 = icmp slt i32 %11, 1, !dbg !10229
  br i1 %12, label %18, label %13, !dbg !10229

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10229
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10229
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10229
  %17 = add nuw nsw i32 %16, 8399, !dbg !10229
  br label %18, !dbg !10229

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10207, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10230, metadata !DIExpression()) #24, !dbg !10237
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10239, !srcloc !10245
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10239
  call void @llvm.dbg.value(metadata i32 %21, metadata !10242, metadata !DIExpression()) #24, !dbg !10246
  call void @llvm.dbg.value(metadata i32 undef, metadata !10243, metadata !DIExpression()) #24, !dbg !10246
  call void @llvm.dbg.value(metadata i32 %21, metadata !10236, metadata !DIExpression()) #24, !dbg !10237
  call void @llvm.dbg.value(metadata i32 %21, metadata !10213, metadata !DIExpression()), !dbg !10220
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10247
  call void @llvm.dbg.value(metadata i32 %22, metadata !10218, metadata !DIExpression()), !dbg !10220
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10248
  call void @llvm.dbg.value(metadata i32 %23, metadata !10210, metadata !DIExpression()), !dbg !10220
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10249
  %25 = add i32 %24, %22, !dbg !10249
  store i32 %25, i32* @cycle_count, align 4, !dbg !10249
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10250
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10251
  %27 = sub i32 %25, %26, !dbg !10252
  call void @llvm.dbg.value(metadata i32 %27, metadata !10219, metadata !DIExpression()), !dbg !10220
  %28 = icmp slt i32 %27, 0, !dbg !10253
  br i1 %28, label %38, label %29, !dbg !10255

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10209, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.value(metadata i32 undef, metadata !10209, metadata !DIExpression()), !dbg !10220
  %30 = add nuw i32 %19, %27, !dbg !10256
  %31 = urem i32 %30, 8400, !dbg !10258
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10209, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10220
  %32 = sub nuw nsw i32 %19, %31, !dbg !10259
  call void @llvm.dbg.value(metadata i32 %32, metadata !10209, metadata !DIExpression()), !dbg !10220
  %33 = icmp ugt i32 %32, 1024, !dbg !10260
  br i1 %33, label %34, label %36, !dbg !10260

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10209, metadata !DIExpression()), !dbg !10220
  %35 = icmp ugt i32 %32, 16766400, !dbg !10261
  br i1 %35, label %38, label %36, !dbg !10263

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10264
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10265
  call void @llvm.dbg.value(metadata i32 %40, metadata !10211, metadata !DIExpression()), !dbg !10220
  %41 = add nsw i32 %39, -1, !dbg !10266
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10267
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10268
  %42 = icmp ult i32 %23, %40, !dbg !10269
  br i1 %42, label %43, label %48, !dbg !10271

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10272
  %45 = add i32 %23, %9, !dbg !10274
  %46 = sub i32 %45, %40, !dbg !10275
  %47 = add i32 %46, %44, !dbg !10272
  br label %52, !dbg !10276

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10277
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10279
  %51 = add i32 %49, %50, !dbg !10279
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10280
  store i32 %53, i32* @cycle_count, align 4, !dbg !10280
  call void @llvm.dbg.value(metadata i32 %21, metadata !10281, metadata !DIExpression()) #24, !dbg !10287
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10286, metadata !DIExpression()) #24, !dbg !10287
  call void @llvm.dbg.value(metadata i32 %21, metadata !10289, metadata !DIExpression()) #24, !dbg !10292
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !10294, !srcloc !10295
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10296
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10297 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10230, metadata !DIExpression()) #24, !dbg !10301
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10303, !srcloc !10245
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10303
  call void @llvm.dbg.value(metadata i32 %2, metadata !10242, metadata !DIExpression()) #24, !dbg !10305
  call void @llvm.dbg.value(metadata i32 undef, metadata !10243, metadata !DIExpression()) #24, !dbg !10305
  call void @llvm.dbg.value(metadata i32 %2, metadata !10236, metadata !DIExpression()) #24, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %2, metadata !10299, metadata !DIExpression()), !dbg !10306
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10307
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10308
  %5 = add i32 %4, %3, !dbg !10309
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10310
  %7 = sub i32 %5, %6, !dbg !10311
  call void @llvm.dbg.value(metadata i32 %7, metadata !10300, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i32 %2, metadata !10281, metadata !DIExpression()) #24, !dbg !10312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10286, metadata !DIExpression()) #24, !dbg !10312
  call void @llvm.dbg.value(metadata i32 %2, metadata !10289, metadata !DIExpression()) #24, !dbg !10314
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10316, !srcloc !10295
  %8 = udiv i32 %7, 8400, !dbg !10317
  ret i32 %8, !dbg !10318
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10319 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10230, metadata !DIExpression()) #24, !dbg !10323
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10325, !srcloc !10245
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10325
  call void @llvm.dbg.value(metadata i32 %2, metadata !10242, metadata !DIExpression()) #24, !dbg !10327
  call void @llvm.dbg.value(metadata i32 undef, metadata !10243, metadata !DIExpression()) #24, !dbg !10327
  call void @llvm.dbg.value(metadata i32 %2, metadata !10236, metadata !DIExpression()) #24, !dbg !10323
  call void @llvm.dbg.value(metadata i32 %2, metadata !10321, metadata !DIExpression()), !dbg !10328
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10329
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10330
  %5 = add i32 %4, %3, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %5, metadata !10322, metadata !DIExpression()), !dbg !10328
  call void @llvm.dbg.value(metadata i32 %2, metadata !10281, metadata !DIExpression()) #24, !dbg !10332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10286, metadata !DIExpression()) #24, !dbg !10332
  call void @llvm.dbg.value(metadata i32 %2, metadata !10289, metadata !DIExpression()) #24, !dbg !10334
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10336, !srcloc !10295
  ret i32 %5, !dbg !10337
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10338 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10339
  %2 = icmp eq i32 %1, -16777216, !dbg !10341
  br i1 %2, label %3, label %6, !dbg !10342

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10343
  %5 = or i32 %4, 1, !dbg !10343
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10343
  br label %6, !dbg !10345

6:                                                ; preds = %3, %0
  ret void, !dbg !10346
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10347 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10348
  %2 = and i32 %1, -2, !dbg !10348
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10348
  ret void, !dbg !10349
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10350 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10376, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.value(metadata i8 %1, metadata !10377, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10378, metadata !DIExpression()), !dbg !10379
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10380
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10380
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10379
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10381
  %8 = load i8, i8* %6, align 4, !dbg !10382
  %9 = zext i8 %8 to i32, !dbg !10383
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10383
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10384
  br i1 %11, label %18, label %24, !dbg !10385

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10379
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10381
  %14 = load i8, i8* %6, align 4, !dbg !10382
  %15 = zext i8 %14 to i32, !dbg !10383
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10383
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10384
  br i1 %17, label %18, label %24, !dbg !10385, !llvm.loop !10386

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10388
  %21 = load i8, i8* %20, align 1, !dbg !10388
  %22 = icmp eq i8 %21, %1, !dbg !10391
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10392
  br i1 %22, label %24, label %12, !dbg !10393

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10379
  ret i32 %25, !dbg !10394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10395 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10406, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i8 %1, metadata !10407, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i32 %2, metadata !10408, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i32 0, metadata !10411, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i32 0, metadata !10412, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i8 0, metadata !10413, metadata !DIExpression()), !dbg !10423
  %4 = icmp eq i8 %1, 0, !dbg !10424
  br i1 %4, label %35, label %5, !dbg !10425

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10424
  br label %9, !dbg !10425

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10413, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i32 %29, metadata !10411, metadata !DIExpression()), !dbg !10422
  %8 = icmp eq i32 %34, %6, !dbg !10424
  br i1 %8, label %35, label %9, !dbg !10425, !llvm.loop !10426

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10413, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i32 %11, metadata !10411, metadata !DIExpression()), !dbg !10422
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10428
  %13 = load i32, i32* %12, align 4, !dbg !10428
  call void @llvm.dbg.value(metadata i32 %13, metadata !10410, metadata !DIExpression()), !dbg !10422
  %14 = and i32 %13, 31, !dbg !10429
  %15 = icmp ult i32 %14, 16, !dbg !10430
  br i1 %15, label %16, label %20, !dbg !10431

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10432
  %18 = load i32, i32* %17, align 4, !dbg !10432
  %19 = or i32 %18, 32, !dbg !10434
  call void @llvm.dbg.value(metadata i32 %19, metadata !10411, metadata !DIExpression()), !dbg !10422
  br label %28, !dbg !10435

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10436

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10437
  %23 = load i32, i32* %22, align 4, !dbg !10437
  call void @llvm.dbg.value(metadata i32 %23, metadata !10415, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10438
  %24 = lshr i32 %23, 7, !dbg !10439
  %25 = and i32 %24, 16, !dbg !10439
  %26 = or i32 %25, %23, !dbg !10439
  call void @llvm.dbg.value(metadata i32 %26, metadata !10411, metadata !DIExpression()), !dbg !10422
  br label %28, !dbg !10440

27:                                               ; preds = %20
  br label %28, !dbg !10441

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10422
  call void @llvm.dbg.value(metadata i32 %29, metadata !10411, metadata !DIExpression()), !dbg !10422
  %30 = lshr i32 %13, 5, !dbg !10441
  %31 = and i32 %30, 255, !dbg !10441
  call void @llvm.dbg.value(metadata i32 %31, metadata !10409, metadata !DIExpression()), !dbg !10422
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10442
  call void @llvm.dbg.value(metadata i32 %32, metadata !10412, metadata !DIExpression()), !dbg !10422
  %33 = icmp slt i32 %32, 0, !dbg !10443
  %34 = add nuw nsw i32 %10, 1, !dbg !10445
  call void @llvm.dbg.value(metadata i32 %34, metadata !10413, metadata !DIExpression()), !dbg !10423
  br i1 %33, label %35, label %7, !dbg !10446

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10452, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 %1, metadata !10453, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 %2, metadata !10454, metadata !DIExpression()), !dbg !10456
  %4 = icmp ugt i32 %0, 175, !dbg !10457
  br i1 %4, label %16, label %5, !dbg !10459

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10460
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10461
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10461
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10455, metadata !DIExpression()), !dbg !10456
  %9 = add nsw i32 %6, -8, !dbg !10462
  %10 = icmp ult i32 %9, 3, !dbg !10462
  br i1 %10, label %16, label %11, !dbg !10464

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.86(%struct.device* noundef %8) #26, !dbg !10465
  br i1 %12, label %13, label %16, !dbg !10466

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10467
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !10468
  br label %16, !dbg !10469

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10456
  ret i32 %17, !dbg !10470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.86(%struct.device* noundef %0) unnamed_addr #1 !dbg !10471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10475, metadata !DIExpression()), !dbg !10476
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10477, !srcloc !10479
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.87(%struct.device* noundef %0) #26, !dbg !10480
  ret i1 %2, !dbg !10481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.87(%struct.device* noundef %0) unnamed_addr #1 !dbg !10482 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10484, metadata !DIExpression()), !dbg !10485
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10486
  ret i1 %2, !dbg !10487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10488 {
  ret void, !dbg !10489
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10490 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10492, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 0, metadata !10493, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 2, metadata !10494, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 0, metadata !10495, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 2, metadata !10496, metadata !DIExpression()), !dbg !10497
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10498
  %2 = and i32 %1, 12, !dbg !10499
  call void @llvm.dbg.value(metadata i32 %2, metadata !10492, metadata !DIExpression()), !dbg !10497
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !10500

3:                                                ; preds = %0
  br label %21, !dbg !10501

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10503
  call void @llvm.dbg.value(metadata i32 %5, metadata !10495, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10497
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10504
  %7 = and i32 %6, 63, !dbg !10505
  call void @llvm.dbg.value(metadata i32 %7, metadata !10496, metadata !DIExpression()), !dbg !10497
  %8 = and i32 %5, 4194304, !dbg !10506
  %9 = icmp eq i32 %8, 0, !dbg !10506
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !10508
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10508
  %13 = lshr i32 %12, 6, !dbg !10508
  %14 = and i32 %13, 511, !dbg !10508
  %15 = mul i32 %14, %11, !dbg !10508
  call void @llvm.dbg.value(metadata i32 %15, metadata !10493, metadata !DIExpression()), !dbg !10497
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10509
  %17 = lshr i32 %16, 15, !dbg !10510
  %18 = and i32 %17, 6, !dbg !10510
  %19 = add nuw nsw i32 %18, 2, !dbg !10510
  call void @llvm.dbg.value(metadata i32 %19, metadata !10494, metadata !DIExpression()), !dbg !10497
  %20 = udiv i32 %15, %19, !dbg !10511
  br label %21, !dbg !10512

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !10513
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10514
  %24 = lshr i32 %23, 4, !dbg !10515
  %25 = and i32 %24, 15, !dbg !10515
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !10516
  %27 = load i8, i8* %26, align 1, !dbg !10516
  %28 = zext i8 %27 to i32, !dbg !10516
  call void @llvm.dbg.value(metadata i32 %28, metadata !10492, metadata !DIExpression()), !dbg !10497
  %29 = lshr i32 %22, %28, !dbg !10517
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !10517
  ret void, !dbg !10518
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10519 {
  ret i32 0, !dbg !10524
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10525 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10551, metadata !DIExpression()), !dbg !10562
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10563
  br i1 %3, label %311, label %4, !dbg !10565

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10566
  %6 = load i32, i32* %5, align 4, !dbg !10566
  %7 = and i32 %6, 1, !dbg !10568
  %8 = icmp eq i32 %7, 0, !dbg !10569
  br i1 %8, label %66, label %9, !dbg !10570

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10571
  %11 = and i32 %10, 12, !dbg !10571
  %12 = icmp eq i32 %11, 4, !dbg !10574
  br i1 %12, label %21, label %13, !dbg !10575

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10576
  %15 = and i32 %14, 12, !dbg !10576
  %16 = icmp eq i32 %15, 8, !dbg !10577
  br i1 %16, label %17, label %29, !dbg !10578

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10579
  %19 = and i32 %18, 4194304, !dbg !10580
  %20 = icmp eq i32 %19, 0, !dbg !10581
  br i1 %20, label %29, label %21, !dbg !10582

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10583
  %23 = and i32 %22, 131072, !dbg !10583
  %24 = icmp eq i32 %23, 0, !dbg !10583
  br i1 %24, label %66, label %25, !dbg !10586

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10587
  %27 = load i32, i32* %26, align 4, !dbg !10587
  %28 = icmp eq i32 %27, 0, !dbg !10588
  br i1 %28, label %311, label %66, !dbg !10589

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10590
  %31 = load i32, i32* %30, align 4, !dbg !10590
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10594

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10595
  %34 = or i32 %33, 65536, !dbg !10595
  br label %45, !dbg !10595

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10597
  %37 = or i32 %36, 262144, !dbg !10597
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10597
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10597
  %39 = or i32 %38, 65536, !dbg !10597
  br label %45, !dbg !10597

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10600
  %42 = and i32 %41, -65537, !dbg !10600
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10600
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10600
  %44 = and i32 %43, -262145, !dbg !10600
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10602
  %47 = load i32, i32* %30, align 4, !dbg !10603
  %48 = icmp eq i32 %47, 0, !dbg !10605
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !10606
  call void @llvm.dbg.value(metadata i32 %49, metadata !10552, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 %49, metadata !10552, metadata !DIExpression()), !dbg !10562
  br i1 %48, label %58, label %50, !dbg !10607

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10608
  %52 = and i32 %51, 131072, !dbg !10610
  %53 = icmp eq i32 %52, 0, !dbg !10610
  br i1 %53, label %54, label %66, !dbg !10611

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !10612
  %56 = sub i32 %55, %49, !dbg !10615
  %57 = icmp ugt i32 %56, 100, !dbg !10616
  br i1 %57, label %311, label %50, !dbg !10617, !llvm.loop !10618

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10620
  %60 = and i32 %59, 131072, !dbg !10620
  %61 = icmp eq i32 %60, 0, !dbg !10620
  br i1 %61, label %66, label %62, !dbg !10622

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !10623
  %64 = sub i32 %63, %49, !dbg !10626
  %65 = icmp ugt i32 %64, 100, !dbg !10627
  br i1 %65, label %311, label %58, !dbg !10628, !llvm.loop !10629

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10631
  %68 = and i32 %67, 2, !dbg !10633
  %69 = icmp eq i32 %68, 0, !dbg !10634
  br i1 %69, label %121, label %70, !dbg !10635

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10636
  %72 = and i32 %71, 12, !dbg !10636
  %73 = icmp eq i32 %72, 0, !dbg !10639
  br i1 %73, label %82, label %74, !dbg !10640

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10641
  %76 = and i32 %75, 12, !dbg !10641
  %77 = icmp eq i32 %76, 8, !dbg !10642
  br i1 %77, label %78, label %90, !dbg !10643

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10644
  %80 = and i32 %79, 4194304, !dbg !10645
  %81 = icmp eq i32 %80, 0, !dbg !10646
  br i1 %81, label %82, label %90, !dbg !10647

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10648
  %84 = and i32 %83, 2, !dbg !10648
  %85 = icmp eq i32 %84, 0, !dbg !10648
  br i1 %85, label %114, label %86, !dbg !10651

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10652
  %88 = load i32, i32* %87, align 4, !dbg !10652
  %89 = icmp eq i32 %88, 1, !dbg !10653
  br i1 %89, label %114, label %311, !dbg !10654

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10655
  %92 = load i32, i32* %91, align 4, !dbg !10655
  %93 = icmp eq i32 %92, 0, !dbg !10658
  br i1 %93, label %104, label %94, !dbg !10659

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10660
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !10662
  call void @llvm.dbg.value(metadata i32 %95, metadata !10552, metadata !DIExpression()), !dbg !10562
  br label %96, !dbg !10663

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10664
  %98 = and i32 %97, 2, !dbg !10665
  %99 = icmp eq i32 %98, 0, !dbg !10665
  br i1 %99, label %100, label %114, !dbg !10663

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !10666
  %102 = sub i32 %101, %95, !dbg !10669
  %103 = icmp ugt i32 %102, 2, !dbg !10670
  br i1 %103, label %311, label %96, !dbg !10671, !llvm.loop !10672

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10674
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !10676
  call void @llvm.dbg.value(metadata i32 %105, metadata !10552, metadata !DIExpression()), !dbg !10562
  br label %106, !dbg !10677

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10678
  %108 = and i32 %107, 2, !dbg !10678
  %109 = icmp eq i32 %108, 0, !dbg !10678
  br i1 %109, label %121, label %110, !dbg !10677

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !10679
  %112 = sub i32 %111, %105, !dbg !10682
  %113 = icmp ugt i32 %112, 2, !dbg !10683
  br i1 %113, label %311, label %106, !dbg !10684, !llvm.loop !10685

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10687
  %116 = and i32 %115, -249, !dbg !10687
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10687
  %118 = load i32, i32* %117, align 4, !dbg !10687
  %119 = shl i32 %118, 3, !dbg !10687
  %120 = or i32 %119, %116, !dbg !10687
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10687
  br label %121, !dbg !10688

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10688
  %123 = and i32 %122, 8, !dbg !10690
  %124 = icmp eq i32 %123, 0, !dbg !10691
  br i1 %124, label %149, label %125, !dbg !10692

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10693
  %127 = load i32, i32* %126, align 4, !dbg !10693
  %128 = icmp eq i32 %127, 0, !dbg !10696
  br i1 %128, label %139, label %129, !dbg !10697

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10698
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !10700
  call void @llvm.dbg.value(metadata i32 %130, metadata !10552, metadata !DIExpression()), !dbg !10562
  br label %131, !dbg !10701

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10702
  %133 = and i32 %132, 2, !dbg !10703
  %134 = icmp eq i32 %133, 0, !dbg !10703
  br i1 %134, label %135, label %149, !dbg !10701

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !10704
  %137 = sub i32 %136, %130, !dbg !10707
  %138 = icmp ugt i32 %137, 2, !dbg !10708
  br i1 %138, label %311, label %131, !dbg !10709, !llvm.loop !10710

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10712
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !10714
  call void @llvm.dbg.value(metadata i32 %140, metadata !10552, metadata !DIExpression()), !dbg !10562
  br label %141, !dbg !10715

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10716
  %143 = and i32 %142, 2, !dbg !10716
  %144 = icmp eq i32 %143, 0, !dbg !10716
  br i1 %144, label %149, label %145, !dbg !10715

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !10717
  %147 = sub i32 %146, %140, !dbg !10720
  %148 = icmp ugt i32 %147, 2, !dbg !10721
  br i1 %148, label %311, label %141, !dbg !10722, !llvm.loop !10723

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10725
  %151 = and i32 %150, 4, !dbg !10726
  %152 = icmp eq i32 %151, 0, !dbg !10727
  br i1 %152, label %221, label %153, !dbg !10728

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10554, metadata !DIExpression()), !dbg !10729
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10730
  %155 = and i32 %154, 268435456, !dbg !10730
  %156 = icmp eq i32 %155, 0, !dbg !10730
  br i1 %156, label %157, label %164, !dbg !10731

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10732
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10732
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10558, metadata !DIExpression()), !dbg !10732
  store volatile i32 0, i32* %2, align 4, !dbg !10732
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10732
  %160 = or i32 %159, 268435456, !dbg !10732
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10732
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10732
  %162 = and i32 %161, 268435456, !dbg !10732
  store volatile i32 %162, i32* %2, align 4, !dbg !10732
  %163 = load volatile i32, i32* %2, align 4, !dbg !10732
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10733
  call void @llvm.dbg.value(metadata i32 1, metadata !10554, metadata !DIExpression()), !dbg !10729
  br label %164, !dbg !10734

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10554, metadata !DIExpression()), !dbg !10729
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10735
  %166 = and i32 %165, 256, !dbg !10735
  %167 = icmp eq i32 %166, 0, !dbg !10735
  br i1 %167, label %168, label %180, !dbg !10737

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10738
  %170 = or i32 %169, 256, !dbg !10738
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10738
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !10740
  call void @llvm.dbg.value(metadata i32 %171, metadata !10552, metadata !DIExpression()), !dbg !10562
  br label %172, !dbg !10741

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10742
  %174 = and i32 %173, 256, !dbg !10742
  %175 = icmp eq i32 %174, 0, !dbg !10742
  br i1 %175, label %176, label %180, !dbg !10741

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !10743
  %178 = sub i32 %177, %171, !dbg !10746
  %179 = icmp ugt i32 %178, 2, !dbg !10747
  br i1 %179, label %311, label %172, !dbg !10748, !llvm.loop !10749

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10751
  %182 = load i32, i32* %181, align 4, !dbg !10751
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10754

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10755
  %185 = or i32 %184, 1, !dbg !10755
  br label %196, !dbg !10755

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10757
  %188 = or i32 %187, 4, !dbg !10757
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10757
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10757
  %190 = or i32 %189, 1, !dbg !10757
  br label %196, !dbg !10757

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10760
  %193 = and i32 %192, -2, !dbg !10760
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10760
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10760
  %195 = and i32 %194, -5, !dbg !10760
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10762
  %198 = load i32, i32* %181, align 4, !dbg !10763
  %199 = icmp eq i32 %198, 0, !dbg !10765
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %200, metadata !10552, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 %200, metadata !10552, metadata !DIExpression()), !dbg !10562
  br i1 %199, label %209, label %201, !dbg !10767

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10768
  %203 = and i32 %202, 2, !dbg !10770
  %204 = icmp eq i32 %203, 0, !dbg !10770
  br i1 %204, label %205, label %217, !dbg !10771

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !10772
  %207 = sub i32 %206, %200, !dbg !10775
  %208 = icmp ugt i32 %207, 5000, !dbg !10776
  br i1 %208, label %311, label %201, !dbg !10777, !llvm.loop !10778

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10780
  %211 = and i32 %210, 2, !dbg !10780
  %212 = icmp eq i32 %211, 0, !dbg !10780
  br i1 %212, label %217, label %213, !dbg !10782

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !10783
  %215 = sub i32 %214, %200, !dbg !10786
  %216 = icmp ugt i32 %215, 5000, !dbg !10787
  br i1 %216, label %311, label %209, !dbg !10788, !llvm.loop !10789

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10791

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10792
  %220 = and i32 %219, -268435457, !dbg !10792
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10792
  br label %221, !dbg !10795

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10796
  %223 = load i32, i32* %222, align 4, !dbg !10796
  %224 = icmp eq i32 %223, 0, !dbg !10798
  br i1 %224, label %310, label %225, !dbg !10799

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10800
  %227 = and i32 %226, 12, !dbg !10800
  %228 = icmp eq i32 %227, 8, !dbg !10803
  br i1 %228, label %277, label %229, !dbg !10804

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !10805
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10808
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !10808
  call void @llvm.dbg.value(metadata i32 %231, metadata !10552, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 %231, metadata !10552, metadata !DIExpression()), !dbg !10562
  br i1 %230, label %232, label %269, !dbg !10809

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10810
  %234 = and i32 %233, 33554432, !dbg !10810
  %235 = icmp eq i32 %234, 0, !dbg !10810
  br i1 %235, label %240, label %236, !dbg !10812

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !10813
  %238 = sub i32 %237, %231, !dbg !10816
  %239 = icmp ugt i32 %238, 2, !dbg !10817
  br i1 %239, label %311, label %232, !dbg !10818, !llvm.loop !10819

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10821
  %242 = load i32, i32* %241, align 4, !dbg !10821
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10821
  %244 = load i32, i32* %243, align 4, !dbg !10821
  %245 = or i32 %244, %242, !dbg !10821
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10821
  %247 = load i32, i32* %246, align 4, !dbg !10821
  %248 = shl i32 %247, 6, !dbg !10821
  %249 = or i32 %245, %248, !dbg !10821
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10821
  %251 = load i32, i32* %250, align 4, !dbg !10821
  %252 = shl i32 %251, 15, !dbg !10821
  %253 = add i32 %252, -65536, !dbg !10821
  %254 = and i32 %253, -65536, !dbg !10821
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10821
  %256 = load i32, i32* %255, align 4, !dbg !10821
  %257 = shl i32 %256, 24, !dbg !10821
  %258 = or i32 %249, %257, !dbg !10821
  %259 = or i32 %258, %254, !dbg !10821
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10821
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10822
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !10823
  call void @llvm.dbg.value(metadata i32 %260, metadata !10552, metadata !DIExpression()), !dbg !10562
  br label %261, !dbg !10824

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10825
  %263 = and i32 %262, 33554432, !dbg !10826
  %264 = icmp eq i32 %263, 0, !dbg !10826
  br i1 %264, label %265, label %310, !dbg !10824

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !10827
  %267 = sub i32 %266, %260, !dbg !10830
  %268 = icmp ugt i32 %267, 2, !dbg !10831
  br i1 %268, label %311, label %261, !dbg !10832, !llvm.loop !10833

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10835
  %271 = and i32 %270, 33554432, !dbg !10835
  %272 = icmp eq i32 %271, 0, !dbg !10835
  br i1 %272, label %310, label %273, !dbg !10837

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !10838
  %275 = sub i32 %274, %231, !dbg !10841
  %276 = icmp ugt i32 %275, 2, !dbg !10842
  br i1 %276, label %311, label %269, !dbg !10843, !llvm.loop !10844

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !10846
  br i1 %278, label %311, label %279, !dbg !10849

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10850
  call void @llvm.dbg.value(metadata i32 %280, metadata !10553, metadata !DIExpression()), !dbg !10562
  %281 = and i32 %280, 4194304, !dbg !10852
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10854
  %283 = load i32, i32* %282, align 4, !dbg !10854
  %284 = icmp eq i32 %281, %283, !dbg !10855
  br i1 %284, label %285, label %311, !dbg !10856

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !10857
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10858
  %288 = load i32, i32* %287, align 4, !dbg !10858
  %289 = icmp eq i32 %286, %288, !dbg !10859
  br i1 %289, label %290, label %311, !dbg !10860

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !10861
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10862
  %293 = load i32, i32* %292, align 4, !dbg !10862
  %294 = shl i32 %293, 6, !dbg !10863
  %295 = icmp eq i32 %291, %294, !dbg !10864
  br i1 %295, label %296, label %311, !dbg !10865

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !10866
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10867
  %299 = load i32, i32* %298, align 4, !dbg !10867
  %300 = shl i32 %299, 15, !dbg !10868
  %301 = add i32 %300, -65536, !dbg !10868
  %302 = and i32 %301, -65536, !dbg !10868
  %303 = icmp eq i32 %297, %302, !dbg !10869
  br i1 %303, label %304, label %311, !dbg !10870

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !10871
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10872
  %307 = load i32, i32* %306, align 4, !dbg !10872
  %308 = shl i32 %307, 24, !dbg !10873
  %309 = icmp eq i32 %305, %308, !dbg !10874
  br i1 %309, label %310, label %311, !dbg !10875

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !10876

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10562
  ret i32 %312, !dbg !10877
}

; Function Attrs: optsize
declare !dbg !10878 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10880 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10893, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 %1, metadata !10894, metadata !DIExpression()), !dbg !10896
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !10897
  br i1 %3, label %115, label %4, !dbg !10899

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10900
  %6 = and i32 %5, 7, !dbg !10900
  %7 = icmp ult i32 %6, %1, !dbg !10902
  br i1 %7, label %8, label %13, !dbg !10903

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !10904
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10904
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10906
  %11 = and i32 %10, 7, !dbg !10906
  %12 = icmp eq i32 %11, %1, !dbg !10908
  br i1 %12, label %13, label %115, !dbg !10909

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10910
  %15 = load i32, i32* %14, align 4, !dbg !10910
  %16 = and i32 %15, 2, !dbg !10912
  %17 = icmp eq i32 %16, 0, !dbg !10913
  br i1 %17, label %39, label %18, !dbg !10914

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !10915
  %20 = icmp eq i32 %19, 0, !dbg !10918
  br i1 %20, label %25, label %21, !dbg !10919

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10920
  %23 = or i32 %22, 7168, !dbg !10920
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10920
  %24 = load i32, i32* %14, align 4, !dbg !10922
  br label %25, !dbg !10924

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !10922
  %27 = and i32 %26, 8, !dbg !10925
  %28 = icmp eq i32 %27, 0, !dbg !10926
  br i1 %28, label %32, label %29, !dbg !10927

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10928
  %31 = or i32 %30, 57344, !dbg !10928
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10928
  br label %32, !dbg !10930

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10931
  %34 = and i32 %33, -241, !dbg !10931
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10931
  %36 = load i32, i32* %35, align 4, !dbg !10931
  %37 = or i32 %34, %36, !dbg !10931
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10931
  %38 = load i32, i32* %14, align 4, !dbg !10932
  br label %39, !dbg !10934

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !10932
  %41 = and i32 %40, 1, !dbg !10935
  %42 = icmp eq i32 %41, 0, !dbg !10936
  br i1 %42, label %73, label %43, !dbg !10937

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10938
  %45 = load i32, i32* %44, align 4, !dbg !10938
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !10941

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10942
  %48 = and i32 %47, 131072, !dbg !10945
  %49 = icmp eq i32 %48, 0, !dbg !10945
  br i1 %49, label %115, label %58, !dbg !10946

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10947
  %52 = and i32 %51, 33554432, !dbg !10951
  %53 = icmp eq i32 %52, 0, !dbg !10951
  br i1 %53, label %115, label %58, !dbg !10952

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10953
  %56 = and i32 %55, 2, !dbg !10956
  %57 = icmp eq i32 %56, 0, !dbg !10956
  br i1 %57, label %115, label %58, !dbg !10957

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10958
  %60 = and i32 %59, -4, !dbg !10958
  %61 = or i32 %60, %45, !dbg !10958
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10958
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !10959
  call void @llvm.dbg.value(metadata i32 %62, metadata !10895, metadata !DIExpression()), !dbg !10896
  br label %63, !dbg !10960

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10961
  %65 = and i32 %64, 12, !dbg !10961
  %66 = load i32, i32* %44, align 4, !dbg !10962
  %67 = shl i32 %66, 2, !dbg !10963
  %68 = icmp eq i32 %65, %67, !dbg !10964
  br i1 %68, label %73, label %69, !dbg !10960

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !10965
  %71 = sub i32 %70, %62, !dbg !10968
  %72 = icmp ugt i32 %71, 5000, !dbg !10969
  br i1 %72, label %115, label %63, !dbg !10970, !llvm.loop !10971

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10973
  %75 = and i32 %74, 7, !dbg !10973
  %76 = icmp ugt i32 %75, %1, !dbg !10975
  br i1 %76, label %77, label %82, !dbg !10976

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !10977
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10977
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10979
  %80 = and i32 %79, 7, !dbg !10979
  %81 = icmp eq i32 %80, %1, !dbg !10981
  br i1 %81, label %82, label %115, !dbg !10982

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !10983
  %84 = and i32 %83, 4, !dbg !10985
  %85 = icmp eq i32 %84, 0, !dbg !10986
  br i1 %85, label %93, label %86, !dbg !10987

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10988
  %88 = and i32 %87, -7169, !dbg !10988
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !10988
  %90 = load i32, i32* %89, align 4, !dbg !10988
  %91 = or i32 %88, %90, !dbg !10988
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10988
  %92 = load i32, i32* %14, align 4, !dbg !10990
  br label %93, !dbg !10992

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !10990
  %95 = and i32 %94, 8, !dbg !10993
  %96 = icmp eq i32 %95, 0, !dbg !10994
  br i1 %96, label %104, label %97, !dbg !10995

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10996
  %99 = and i32 %98, -57345, !dbg !10996
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !10996
  %101 = load i32, i32* %100, align 4, !dbg !10996
  %102 = shl i32 %101, 3, !dbg !10996
  %103 = or i32 %102, %99, !dbg !10996
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10996
  br label %104, !dbg !10998

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !10999
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11000
  %107 = lshr i32 %106, 4, !dbg !11001
  %108 = and i32 %107, 15, !dbg !11001
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11002
  %110 = load i8, i8* %109, align 1, !dbg !11002
  %111 = zext i8 %110 to i32, !dbg !11002
  %112 = lshr i32 %105, %111, !dbg !11003
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11004
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11005
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11006
  br label %115, !dbg !11007

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !10896
  ret i32 %116, !dbg !11008
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11009 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11011, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i32 0, metadata !11012, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i32 0, metadata !11013, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i32 0, metadata !11014, metadata !DIExpression()), !dbg !11015
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11016
  %2 = and i32 %1, 12, !dbg !11017
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11018

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11014, metadata !DIExpression()), !dbg !11015
  br label %29, !dbg !11019

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11022
  %6 = and i32 %5, 63, !dbg !11024
  call void @llvm.dbg.value(metadata i32 %6, metadata !11011, metadata !DIExpression()), !dbg !11015
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11025
  %8 = and i32 %7, 4194304, !dbg !11025
  %9 = icmp eq i32 %8, 0, !dbg !11027
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11028
  %11 = lshr i32 %10, 6, !dbg !11028
  %12 = and i32 %11, 511, !dbg !11028
  br i1 %9, label %16, label %13, !dbg !11029

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !11030
  %15 = udiv i32 %14, %6, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %15, metadata !11012, metadata !DIExpression()), !dbg !11015
  br label %22, !dbg !11033

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !11034
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !11036
  %19 = zext i32 %6 to i64, !dbg !11037
  %20 = udiv i64 %18, %19, !dbg !11038
  %21 = trunc i64 %20 to i32, !dbg !11039
  call void @llvm.dbg.value(metadata i32 %21, metadata !11012, metadata !DIExpression()), !dbg !11015
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !11028
  call void @llvm.dbg.value(metadata i32 %23, metadata !11012, metadata !DIExpression()), !dbg !11015
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11040
  %25 = lshr i32 %24, 15, !dbg !11041
  %26 = and i32 %25, 6, !dbg !11041
  %27 = add nuw nsw i32 %26, 2, !dbg !11041
  call void @llvm.dbg.value(metadata i32 %27, metadata !11013, metadata !DIExpression()), !dbg !11015
  %28 = udiv i32 %23, %27, !dbg !11042
  call void @llvm.dbg.value(metadata i32 %28, metadata !11014, metadata !DIExpression()), !dbg !11015
  br label %29, !dbg !11043

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !11044
  call void @llvm.dbg.value(metadata i32 %30, metadata !11014, metadata !DIExpression()), !dbg !11015
  ret i32 %30, !dbg !11045
}

; Function Attrs: optsize
declare !dbg !11046 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11049 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11053, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.value(metadata i32 %1, metadata !11054, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.value(metadata i32 %2, metadata !11055, metadata !DIExpression()), !dbg !11073
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11074
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !11074
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11056, metadata !DIExpression()), !dbg !11075
  %8 = icmp eq i32 %0, 0, !dbg !11076
  br i1 %8, label %9, label %23, !dbg !11077

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11078
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11078
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11066, metadata !DIExpression()), !dbg !11078
  store volatile i32 0, i32* %5, align 4, !dbg !11078
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11078
  %12 = or i32 %11, 1, !dbg !11078
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11078
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11078
  %14 = and i32 %13, 1, !dbg !11078
  store volatile i32 %14, i32* %5, align 4, !dbg !11078
  %15 = load volatile i32, i32* %5, align 4, !dbg !11078
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11079
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11080
  store i32 256, i32* %16, align 4, !dbg !11081
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11082
  store i32 2, i32* %17, align 4, !dbg !11083
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11084
  store i32 3, i32* %18, align 4, !dbg !11085
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11086
  store i32 0, i32* %19, align 4, !dbg !11087
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11088
  store i32 0, i32* %20, align 4, !dbg !11089
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11090
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11091
  %22 = and i32 %21, -123731969, !dbg !11091
  br label %38, !dbg !11092

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11093
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11093
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11070, metadata !DIExpression()), !dbg !11093
  store volatile i32 0, i32* %6, align 4, !dbg !11093
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11093
  %26 = or i32 %25, 4, !dbg !11093
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11093
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11093
  %28 = and i32 %27, 4, !dbg !11093
  store volatile i32 %28, i32* %6, align 4, !dbg !11093
  %29 = load volatile i32, i32* %6, align 4, !dbg !11093
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11094
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11095
  store i32 512, i32* %30, align 4, !dbg !11096
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11097
  store i32 2, i32* %31, align 4, !dbg !11098
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11099
  store i32 3, i32* %32, align 4, !dbg !11100
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11101
  store i32 0, i32* %33, align 4, !dbg !11102
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11103
  store i32 0, i32* %34, align 4, !dbg !11104
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11105
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11106
  %36 = and i32 %35, 134217727, !dbg !11106
  %37 = shl i32 %2, 3, !dbg !11106
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11107
  %42 = or i32 %41, %40, !dbg !11107
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11107
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #24, !dbg !11108
  ret void, !dbg !11108
}

; Function Attrs: optsize
declare !dbg !11109 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11113 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11114
  ret void, !dbg !11115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11116 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11117
  ret void, !dbg !11118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11119 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11120
  ret i32 %1, !dbg !11121
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11122 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11123
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11124
  %3 = lshr i32 %2, 10, !dbg !11125
  %4 = and i32 %3, 7, !dbg !11125
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11126
  %6 = load i8, i8* %5, align 1, !dbg !11126
  %7 = zext i8 %6 to i32, !dbg !11126
  %8 = lshr i32 %1, %7, !dbg !11127
  ret i32 %8, !dbg !11128
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11129 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11130
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11131
  %3 = lshr i32 %2, 13, !dbg !11132
  %4 = and i32 %3, 7, !dbg !11132
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11133
  %6 = load i8, i8* %5, align 1, !dbg !11133
  %7 = zext i8 %6 to i32, !dbg !11133
  %8 = lshr i32 %1, %7, !dbg !11134
  ret i32 %8, !dbg !11135
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11136 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11140, metadata !DIExpression()), !dbg !11141
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11142
  store i32 15, i32* %2, align 4, !dbg !11143
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11144
  %4 = and i32 %3, 262144, !dbg !11146
  %5 = icmp eq i32 %4, 0, !dbg !11147
  br i1 %5, label %8, label %6, !dbg !11148

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11149
  store i32 327680, i32* %7, align 4, !dbg !11151
  br label %15, !dbg !11152

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11153
  %10 = and i32 %9, 65536, !dbg !11155
  %11 = icmp eq i32 %10, 0, !dbg !11156
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11157
  br i1 %11, label %14, label %13, !dbg !11158

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11159
  br label %15, !dbg !11161

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11162
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11164
  %17 = and i32 %16, 1, !dbg !11166
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11167
  store i32 %17, i32* %18, align 4, !dbg !11169
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11170
  %20 = lshr i32 %19, 3, !dbg !11171
  %21 = and i32 %20, 31, !dbg !11171
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11172
  store i32 %21, i32* %22, align 4, !dbg !11173
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11174
  %24 = and i32 %23, 4, !dbg !11176
  %25 = icmp eq i32 %24, 0, !dbg !11177
  br i1 %25, label %28, label %26, !dbg !11178

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11179
  store i32 5, i32* %27, align 4, !dbg !11181
  br label %35, !dbg !11182

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11183
  %30 = and i32 %29, 1, !dbg !11185
  %31 = icmp eq i32 %30, 0, !dbg !11186
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11187
  br i1 %31, label %34, label %33, !dbg !11188

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11189
  br label %35, !dbg !11191

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11192
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11194
  %37 = and i32 %36, 1, !dbg !11196
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11197
  store i32 %37, i32* %38, align 4, !dbg !11199
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11200
  %40 = and i32 %39, 16777216, !dbg !11202
  %41 = icmp eq i32 %40, 0, !dbg !11203
  %42 = select i1 %41, i32 1, i32 2, !dbg !11204
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11205
  store i32 %42, i32* %43, align 4, !dbg !11207
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11208
  %45 = and i32 %44, 4194304, !dbg !11209
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11210
  store i32 %45, i32* %46, align 4, !dbg !11211
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11212
  %48 = and i32 %47, 63, !dbg !11213
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11214
  store i32 %48, i32* %49, align 4, !dbg !11215
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11216
  %51 = lshr i32 %50, 6, !dbg !11217
  %52 = and i32 %51, 511, !dbg !11217
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11218
  store i32 %52, i32* %53, align 4, !dbg !11219
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11220
  %55 = shl i32 %54, 1, !dbg !11221
  %56 = and i32 %55, 393216, !dbg !11221
  %57 = add nuw nsw i32 %56, 131072, !dbg !11221
  %58 = lshr exact i32 %57, 16, !dbg !11222
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11223
  store i32 %58, i32* %59, align 4, !dbg !11224
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11225
  %61 = lshr i32 %60, 24, !dbg !11226
  %62 = and i32 %61, 15, !dbg !11226
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11227
  store i32 %62, i32* %63, align 4, !dbg !11228
  ret void, !dbg !11229
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11230 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11234, metadata !DIExpression()), !dbg !11236
  call void @llvm.dbg.value(metadata i32* %1, metadata !11235, metadata !DIExpression()), !dbg !11236
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11237
  store i32 15, i32* %3, align 4, !dbg !11238
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11239
  %5 = and i32 %4, 3, !dbg !11240
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11241
  store i32 %5, i32* %6, align 4, !dbg !11242
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11243
  %8 = and i32 %7, 240, !dbg !11244
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11245
  store i32 %8, i32* %9, align 4, !dbg !11246
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11247
  %11 = and i32 %10, 7168, !dbg !11248
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11249
  store i32 %11, i32* %12, align 4, !dbg !11250
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11251
  %14 = lshr i32 %13, 3, !dbg !11252
  %15 = and i32 %14, 7168, !dbg !11252
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11253
  store i32 %15, i32* %16, align 4, !dbg !11254
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11255
  %18 = and i32 %17, 7, !dbg !11256
  store i32 %18, i32* %1, align 4, !dbg !11257
  ret void, !dbg !11258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11259 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11260
  %2 = and i32 %1, 128, !dbg !11260
  %3 = icmp eq i32 %2, 0, !dbg !11260
  br i1 %3, label %5, label %4, !dbg !11262

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11263
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11265
  br label %5, !dbg !11266

5:                                                ; preds = %4, %0
  ret void, !dbg !11267
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11268 {
  ret void, !dbg !11269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11273, metadata !DIExpression()), !dbg !11274
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11275
  ret void, !dbg !11276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11280, metadata !DIExpression()), !dbg !11282
  call void @llvm.dbg.value(metadata i32 1000, metadata !11281, metadata !DIExpression()), !dbg !11282
  %2 = udiv i32 %0, 1000, !dbg !11283
  %3 = add nsw i32 %2, -1, !dbg !11284
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11285
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11286
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11287
  ret void, !dbg !11288
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11289 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11291, metadata !DIExpression()), !dbg !11293
  %3 = bitcast i32* %2 to i8*, !dbg !11294
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11294
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11292, metadata !DIExpression()), !dbg !11295
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11296
  store volatile i32 %4, i32* %2, align 4, !dbg !11295
  %5 = load volatile i32, i32* %2, align 4, !dbg !11297
  %6 = icmp eq i32 %0, -1, !dbg !11298
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11291, metadata !DIExpression()), !dbg !11293
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11293
  call void @llvm.dbg.value(metadata i32 %8, metadata !11291, metadata !DIExpression()), !dbg !11293
  br label %9, !dbg !11300

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11291, metadata !DIExpression()), !dbg !11293
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11301
  call void @llvm.dbg.value(metadata i32 undef, metadata !11291, metadata !DIExpression()), !dbg !11293
  %12 = shl i32 %11, 15, !dbg !11293
  %13 = ashr i32 %12, 31, !dbg !11293
  %14 = add i32 %13, %10, !dbg !11293
  call void @llvm.dbg.value(metadata i32 %14, metadata !11291, metadata !DIExpression()), !dbg !11293
  %15 = icmp eq i32 %14, 0, !dbg !11300
  br i1 %15, label %16, label %9, !dbg !11300

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11304
  ret void, !dbg !11304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11307, metadata !DIExpression()), !dbg !11308
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11309
  ret void, !dbg !11310
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11316, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata i32 0, metadata !11319, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata i32 0, metadata !11320, metadata !DIExpression()), !dbg !11321
  %2 = icmp eq i32 %0, 0, !dbg !11322
  br i1 %2, label %50, label %3, !dbg !11324

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11325
  %5 = icmp eq i32 %4, 49152, !dbg !11328
  br i1 %5, label %6, label %15, !dbg !11329

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11319, metadata !DIExpression()), !dbg !11321
  %7 = add i32 %0, -64000001, !dbg !11330
  %8 = icmp ult i32 %7, 26000000, !dbg !11330
  br i1 %8, label %15, label %9, !dbg !11330

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11333
  %11 = select i1 %10, i32 0, i32 3, !dbg !11335
  call void @llvm.dbg.value(metadata i32 %11, metadata !11319, metadata !DIExpression()), !dbg !11321
  %12 = add i32 %0, -30000001, !dbg !11336
  %13 = icmp ult i32 %12, 60000000, !dbg !11336
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11336
  call void @llvm.dbg.value(metadata i32 %14, metadata !11319, metadata !DIExpression()), !dbg !11321
  br label %15, !dbg !11336

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11321
  call void @llvm.dbg.value(metadata i32 %16, metadata !11319, metadata !DIExpression()), !dbg !11321
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11339
  %18 = icmp eq i32 %17, 32768, !dbg !11341
  br i1 %18, label %19, label %27, !dbg !11342

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11343
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11346
  br i1 %22, label %27, label %23, !dbg !11346

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11347
  %25 = and i1 %24, %21, !dbg !11350
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11350
  call void @llvm.dbg.value(metadata i32 %26, metadata !11319, metadata !DIExpression()), !dbg !11321
  br label %27, !dbg !11350

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11351
  call void @llvm.dbg.value(metadata i32 %28, metadata !11319, metadata !DIExpression()), !dbg !11321
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11352
  %30 = icmp eq i32 %29, 16384, !dbg !11354
  br i1 %30, label %31, label %39, !dbg !11355

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11356
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11359
  br i1 %34, label %39, label %35, !dbg !11359

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11360
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11363
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11363
  call void @llvm.dbg.value(metadata i32 %38, metadata !11319, metadata !DIExpression()), !dbg !11321
  br label %39, !dbg !11363

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11351
  call void @llvm.dbg.value(metadata i32 %40, metadata !11319, metadata !DIExpression()), !dbg !11321
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !11364
  call void @llvm.dbg.value(metadata i32 2, metadata !11317, metadata !DIExpression()), !dbg !11321
  br label %41, !dbg !11365

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11351
  call void @llvm.dbg.value(metadata i32 %42, metadata !11317, metadata !DIExpression()), !dbg !11321
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11366
  call void @llvm.dbg.value(metadata i32 %43, metadata !11318, metadata !DIExpression()), !dbg !11321
  %44 = add nsw i32 %42, -1, !dbg !11368
  call void @llvm.dbg.value(metadata i32 %44, metadata !11317, metadata !DIExpression()), !dbg !11321
  %45 = icmp ne i32 %43, %40, !dbg !11369
  %46 = icmp ne i32 %44, 0, !dbg !11370
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11370
  br i1 %47, label %41, label %48, !dbg !11371, !llvm.loop !11372

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11374
  call void @llvm.dbg.value(metadata i32 %51, metadata !11320, metadata !DIExpression()), !dbg !11321
  ret i32 %51, !dbg !11375
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11376 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11378
  %2 = and i32 %1, 49152, !dbg !11378
  ret i32 %2, !dbg !11379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11382, metadata !DIExpression()), !dbg !11383
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11384
  %3 = and i32 %2, -8, !dbg !11384
  %4 = or i32 %3, %0, !dbg !11384
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11384
  ret void, !dbg !11385
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11386 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11387
  %2 = and i32 %1, 7, !dbg !11387
  ret i32 %2, !dbg !11388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.sys_memory_stats* nocapture noundef readonly %0, %struct.sys_memory_stats* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11389 {
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %0, metadata !11407, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11408, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32 0, metadata !11409, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32 0, metadata !11410, metadata !DIExpression()), !dbg !11411
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11412
  %4 = icmp eq i32 %3, 0, !dbg !11414
  br i1 %4, label %5, label %21, !dbg !11415

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.sys_memory_stats* noundef %0) #26, !dbg !11416
  call void @llvm.dbg.value(metadata i32 %6, metadata !11410, metadata !DIExpression()), !dbg !11411
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.96() #26, !dbg !11418
  %8 = icmp eq i32 %7, 1, !dbg !11420
  br i1 %8, label %13, label %9, !dbg !11421

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.97() #26, !dbg !11422
  br label %10, !dbg !11424

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.96() #26, !dbg !11425
  %12 = icmp eq i32 %11, 1, !dbg !11426
  br i1 %12, label %13, label %10, !dbg !11424, !llvm.loop !11427

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 0, !dbg !11429
  %15 = load i32, i32* %14, align 4, !dbg !11429
  %16 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 1, !dbg !11430
  %17 = load i32, i32* %16, align 4, !dbg !11430
  %18 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 2, !dbg !11431
  %19 = load i32, i32* %18, align 4, !dbg !11431
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.98(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11432
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.sys_memory_stats* noundef %1) #26, !dbg !11433
  call void @llvm.dbg.value(metadata i32 %20, metadata !11409, metadata !DIExpression()), !dbg !11411
  br label %21, !dbg !11434

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11435
  call void @llvm.dbg.value(metadata i32 %22, metadata !11409, metadata !DIExpression()), !dbg !11411
  ret i32 %22, !dbg !11436
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11437 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11441, metadata !DIExpression()), !dbg !11442
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.100() #26, !dbg !11443
  %2 = icmp ne i32 %1, 0, !dbg !11445
  call void @llvm.dbg.value(metadata i1 %2, metadata !11441, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11442
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11446
  %4 = icmp ne i32 %3, 0, !dbg !11448
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11449
  %6 = zext i1 %5 to i32, !dbg !11449
  call void @llvm.dbg.value(metadata i32 %6, metadata !11441, metadata !DIExpression()), !dbg !11442
  ret i32 %6, !dbg !11450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11455, metadata !DIExpression()), !dbg !11458
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11456, metadata !DIExpression()), !dbg !11458
  call void @llvm.dbg.value(metadata i32 0, metadata !11457, metadata !DIExpression()), !dbg !11458
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !11459
  %4 = load i32, i32* %3, align 4, !dbg !11459
  %5 = and i32 %4, 63, !dbg !11460
  %6 = udiv i32 %0, %5, !dbg !11461
  call void @llvm.dbg.value(metadata i32 %6, metadata !11457, metadata !DIExpression()), !dbg !11458
  %7 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !11462
  %8 = load i32, i32* %7, align 4, !dbg !11462
  %9 = and i32 %8, 511, !dbg !11463
  %10 = mul i32 %9, %6, !dbg !11464
  call void @llvm.dbg.value(metadata i32 %10, metadata !11457, metadata !DIExpression()), !dbg !11458
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !11465
  %12 = load i32, i32* %11, align 4, !dbg !11465
  %13 = lshr i32 %12, 15, !dbg !11466
  %14 = and i32 %13, 131070, !dbg !11466
  %15 = add nuw nsw i32 %14, 2, !dbg !11466
  %16 = udiv i32 %10, %15, !dbg !11467
  call void @llvm.dbg.value(metadata i32 %16, metadata !11457, metadata !DIExpression()), !dbg !11458
  ret i32 %16, !dbg !11468
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.96() unnamed_addr #16 !dbg !11469 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11470
  %2 = lshr i32 %1, 1, !dbg !11471
  %3 = and i32 %2, 1, !dbg !11471
  ret i32 %3, !dbg !11472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.97() unnamed_addr #15 !dbg !11473 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11474
  %2 = or i32 %1, 1, !dbg !11474
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11474
  ret void, !dbg !11475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.98(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11478, metadata !DIExpression()), !dbg !11482
  call void @llvm.dbg.value(metadata i32 %1, metadata !11479, metadata !DIExpression()), !dbg !11482
  call void @llvm.dbg.value(metadata i32 %2, metadata !11480, metadata !DIExpression()), !dbg !11482
  call void @llvm.dbg.value(metadata i32 %3, metadata !11481, metadata !DIExpression()), !dbg !11482
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11483
  %6 = and i32 %5, -4227072, !dbg !11483
  %7 = or i32 %1, %0, !dbg !11483
  %8 = shl i32 %2, 6, !dbg !11483
  %9 = or i32 %7, %8, !dbg !11483
  %10 = or i32 %9, %6, !dbg !11483
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11483
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11484
  %12 = and i32 %11, -196609, !dbg !11484
  %13 = or i32 %12, %3, !dbg !11484
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11484
  ret void, !dbg !11485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11490, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11491, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i32 0, metadata !11492, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i32 0, metadata !11493, metadata !DIExpression()), !dbg !11494
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !11495
  %4 = load i32, i32* %3, align 4, !dbg !11495
  %5 = lshr i32 %4, 4, !dbg !11495
  %6 = and i32 %5, 15, !dbg !11495
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11495
  %8 = load i8, i8* %7, align 1, !dbg !11495
  %9 = zext i8 %8 to i32, !dbg !11495
  %10 = lshr i32 %0, %9, !dbg !11495
  call void @llvm.dbg.value(metadata i32 %10, metadata !11493, metadata !DIExpression()), !dbg !11494
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11496
  %12 = icmp ult i32 %11, %10, !dbg !11498
  br i1 %12, label %13, label %16, !dbg !11499

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11500
  call void @llvm.dbg.value(metadata i32 %14, metadata !11492, metadata !DIExpression()), !dbg !11494
  %15 = icmp eq i32 %14, 0, !dbg !11502
  br i1 %15, label %16, label %30, !dbg !11504

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.99() #26, !dbg !11505
  br label %17, !dbg !11507

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.100() #26, !dbg !11508
  %19 = icmp eq i32 %18, 1, !dbg !11509
  br i1 %19, label %20, label %17, !dbg !11507, !llvm.loop !11510

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11512
  tail call fastcc void @LL_RCC_SetAHBPrescaler.101(i32 noundef %21) #26, !dbg !11513
  tail call fastcc void @LL_RCC_SetSysClkSource.102() #26, !dbg !11514
  br label %22, !dbg !11515

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.103() #26, !dbg !11516
  %24 = icmp eq i32 %23, 8, !dbg !11517
  br i1 %24, label %25, label %22, !dbg !11515, !llvm.loop !11518

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !11520
  %27 = load i32, i32* %26, align 4, !dbg !11520
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.104(i32 noundef %27) #26, !dbg !11521
  %28 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !11522
  %29 = load i32, i32* %28, align 4, !dbg !11522
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.105(i32 noundef %29) #26, !dbg !11523
  br label %30, !dbg !11524

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11525
  %33 = icmp ugt i32 %32, %10, !dbg !11527
  br i1 %33, label %34, label %36, !dbg !11528

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11529
  call void @llvm.dbg.value(metadata i32 %35, metadata !11492, metadata !DIExpression()), !dbg !11494
  br label %36, !dbg !11531

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11494
  call void @llvm.dbg.value(metadata i32 %37, metadata !11492, metadata !DIExpression()), !dbg !11494
  %38 = icmp eq i32 %37, 0, !dbg !11532
  br i1 %38, label %39, label %40, !dbg !11534

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11535
  br label %40, !dbg !11537

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.99() unnamed_addr #15 !dbg !11539 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11540
  %2 = or i32 %1, 16777216, !dbg !11540
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11540
  ret void, !dbg !11541
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.100() unnamed_addr #16 !dbg !11542 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11543
  %2 = lshr i32 %1, 25, !dbg !11544
  %3 = and i32 %2, 1, !dbg !11544
  ret i32 %3, !dbg !11545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.101(i32 noundef %0) unnamed_addr #15 !dbg !11546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11548, metadata !DIExpression()), !dbg !11549
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11550
  %3 = and i32 %2, -241, !dbg !11550
  %4 = or i32 %3, %0, !dbg !11550
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11550
  ret void, !dbg !11551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.102() unnamed_addr #15 !dbg !11552 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11554, metadata !DIExpression()), !dbg !11555
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11556
  %2 = and i32 %1, -4, !dbg !11556
  %3 = or i32 %2, 2, !dbg !11556
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11556
  ret void, !dbg !11557
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.103() unnamed_addr #16 !dbg !11558 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11559
  %2 = and i32 %1, 12, !dbg !11559
  ret i32 %2, !dbg !11560
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.104(i32 noundef %0) unnamed_addr #15 !dbg !11561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11563, metadata !DIExpression()), !dbg !11564
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11565
  %3 = and i32 %2, -7169, !dbg !11565
  %4 = or i32 %3, %0, !dbg !11565
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11565
  ret void, !dbg !11566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.105(i32 noundef %0) unnamed_addr #15 !dbg !11567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11569, metadata !DIExpression()), !dbg !11570
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11571
  %3 = and i32 %2, -57345, !dbg !11571
  %4 = or i32 %3, %0, !dbg !11571
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11571
  ret void, !dbg !11572
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11573 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11574
  %2 = lshr i32 %1, 27, !dbg !11575
  %3 = and i32 %2, 1, !dbg !11575
  ret i32 %3, !dbg !11576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.sys_memory_stats* nocapture noundef readonly %2, %struct.sys_memory_stats* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11581, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i32 %1, metadata !11582, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %2, metadata !11583, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %3, metadata !11584, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i32 0, metadata !11585, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i32 0, metadata !11586, metadata !DIExpression()), !dbg !11587
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11588
  %6 = icmp eq i32 %5, 0, !dbg !11590
  br i1 %6, label %7, label %27, !dbg !11591

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* noundef %2) #26, !dbg !11592
  call void @llvm.dbg.value(metadata i32 %8, metadata !11586, metadata !DIExpression()), !dbg !11587
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !11594
  %10 = icmp eq i32 %9, 1, !dbg !11596
  br i1 %10, label %19, label %11, !dbg !11597

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11598
  br i1 %12, label %13, label %14, !dbg !11601

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11602
  br label %15, !dbg !11604

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !11605
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !11607
  br label %16, !dbg !11608

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !11609
  %18 = icmp eq i32 %17, 1, !dbg !11610
  br i1 %18, label %19, label %16, !dbg !11608, !llvm.loop !11611

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 0, !dbg !11613
  %21 = load i32, i32* %20, align 4, !dbg !11613
  %22 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 1, !dbg !11614
  %23 = load i32, i32* %22, align 4, !dbg !11614
  %24 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 2, !dbg !11615
  %25 = load i32, i32* %24, align 4, !dbg !11615
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.98(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11616
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.sys_memory_stats* noundef %3) #26, !dbg !11617
  call void @llvm.dbg.value(metadata i32 %26, metadata !11585, metadata !DIExpression()), !dbg !11587
  br label %27, !dbg !11618

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11619
  call void @llvm.dbg.value(metadata i32 %28, metadata !11585, metadata !DIExpression()), !dbg !11587
  ret i32 %28, !dbg !11620
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !11621 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11622
  %2 = lshr i32 %1, 17, !dbg !11623
  %3 = and i32 %2, 1, !dbg !11623
  ret i32 %3, !dbg !11624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11625 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11626
  %2 = or i32 %1, 262144, !dbg !11626
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11626
  ret void, !dbg !11627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !11628 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11629
  %2 = and i32 %1, -262145, !dbg !11629
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11629
  ret void, !dbg !11630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !11631 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11632
  %2 = or i32 %1, 65536, !dbg !11632
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11632
  ret void, !dbg !11633
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11634 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11637, metadata !DIExpression()), !dbg !11653
  call void @llvm.dbg.value(metadata i32 undef, metadata !11637, metadata !DIExpression()), !dbg !11653
  call void @llvm.dbg.value(metadata i32 undef, metadata !11637, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11653
  ret void, !dbg !11654
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11655 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11659, metadata !DIExpression()), !dbg !11661
  %2 = icmp eq i8* %0, null, !dbg !11662
  br i1 %2, label %29, label %3, !dbg !11664

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11665
  %5 = icmp eq i8 %4, 0, !dbg !11666
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11667
  br i1 %6, label %29, label %8, !dbg !11667

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11660, metadata !DIExpression()), !dbg !11661
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11668

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11660, metadata !DIExpression()), !dbg !11661
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11670
  br i1 %10, label %11, label %15, !dbg !11675

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11676
  %13 = load i8*, i8** %12, align 4, !dbg !11676
  %14 = icmp eq i8* %13, %0, !dbg !11677
  br i1 %14, label %29, label %15, !dbg !11678

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11679
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11660, metadata !DIExpression()), !dbg !11661
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11680
  br i1 %17, label %7, label %8, !dbg !11681, !llvm.loop !11682

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11660, metadata !DIExpression()), !dbg !11661
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11684
  br i1 %20, label %21, label %26, !dbg !11688

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11689
  %23 = load i8*, i8** %22, align 4, !dbg !11689
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !11690
  %25 = icmp eq i32 %24, 0, !dbg !11691
  br i1 %25, label %29, label %26, !dbg !11692

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11693
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11660, metadata !DIExpression()), !dbg !11661
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11694
  br i1 %28, label %29, label %18, !dbg !11668, !llvm.loop !11695

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11661
  ret %struct.device* %30, !dbg !11697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11698 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11702, metadata !DIExpression()), !dbg !11703
  %2 = icmp eq %struct.device* %0, null, !dbg !11704
  br i1 %2, label %14, label %3, !dbg !11706

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11707
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11707
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11708
  %7 = load i8, i8* %6, align 1, !dbg !11708
  %8 = and i8 %7, 1, !dbg !11708
  %9 = icmp eq i8 %8, 0, !dbg !11708
  br i1 %9, label %14, label %10, !dbg !11709

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11710
  %12 = load i8, i8* %11, align 1, !dbg !11710
  %13 = icmp eq i8 %12, 0, !dbg !11711
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11703
  ret i1 %15, !dbg !11712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !11713 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11718, metadata !DIExpression()), !dbg !11719
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11720
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11721
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11722 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11730, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11731, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i8* %2, metadata !11732, metadata !DIExpression()), !dbg !11735
  %5 = bitcast i32* %4 to i8*, !dbg !11736
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11736
  call void @llvm.dbg.value(metadata i32 0, metadata !11733, metadata !DIExpression()), !dbg !11735
  store i32 0, i32* %4, align 4, !dbg !11737
  call void @llvm.dbg.value(metadata i32* %4, metadata !11733, metadata !DIExpression(DW_OP_deref)), !dbg !11735
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11738
  call void @llvm.dbg.value(metadata i16* %6, metadata !11734, metadata !DIExpression()), !dbg !11735
  %7 = load i32, i32* %4, align 4, !dbg !11739
  call void @llvm.dbg.value(metadata i32 %7, metadata !11733, metadata !DIExpression()), !dbg !11735
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11740
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11741
  ret i32 %8, !dbg !11742
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11743 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11747, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i32* %1, metadata !11748, metadata !DIExpression()), !dbg !11753
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11754
  %4 = load i16*, i16** %3, align 4, !dbg !11754
  call void @llvm.dbg.value(metadata i16* %4, metadata !11749, metadata !DIExpression()), !dbg !11753
  %5 = icmp eq i16* %4, null, !dbg !11755
  br i1 %5, label %14, label %6, !dbg !11756

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11757
  call void @llvm.dbg.value(metadata i32 %7, metadata !11750, metadata !DIExpression()), !dbg !11757
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11758
  %9 = load i16, i16* %8, align 2, !dbg !11758
  %10 = add i16 %9, -32767, !dbg !11759
  %11 = icmp ult i16 %10, 2, !dbg !11759
  %12 = add i32 %7, 1, !dbg !11760
  call void @llvm.dbg.value(metadata i32 %12, metadata !11750, metadata !DIExpression()), !dbg !11757
  br i1 %11, label %13, label %6, !dbg !11759, !llvm.loop !11762

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11765
  br label %14, !dbg !11766

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11768 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11772, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %1, metadata !11773, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11774, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %3, metadata !11775, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 0, metadata !11776, metadata !DIExpression()), !dbg !11784
  %5 = icmp eq i32 %1, 0, !dbg !11785
  br i1 %5, label %16, label %8, !dbg !11786

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11776, metadata !DIExpression()), !dbg !11784
  %7 = icmp eq i32 %15, %1, !dbg !11785
  br i1 %7, label %16, label %8, !dbg !11786, !llvm.loop !11787

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11776, metadata !DIExpression()), !dbg !11784
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11789
  %11 = load i16, i16* %10, align 2, !dbg !11789
  call void @llvm.dbg.value(metadata i16 %11, metadata !11778, metadata !DIExpression()), !dbg !11790
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11791
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11781, metadata !DIExpression()), !dbg !11790
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !11792
  call void @llvm.dbg.value(metadata i32 %13, metadata !11782, metadata !DIExpression()), !dbg !11790
  %14 = icmp slt i32 %13, 0, !dbg !11793
  %15 = add nuw i32 %9, 1, !dbg !11795
  call void @llvm.dbg.value(metadata i32 %15, metadata !11776, metadata !DIExpression()), !dbg !11784
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !11797 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11801, metadata !DIExpression()), !dbg !11804
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11802, metadata !DIExpression()), !dbg !11804
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11803, metadata !DIExpression()), !dbg !11804
  %2 = sext i16 %0 to i32, !dbg !11805
  %3 = icmp slt i16 %0, 1, !dbg !11807
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11808
  %6 = add nsw i32 %2, -1, !dbg !11808
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11808
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11808
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11802, metadata !DIExpression()), !dbg !11804
  ret %struct.device* %8, !dbg !11809
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11810 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11812, metadata !DIExpression()), !dbg !11817
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11813, metadata !DIExpression()), !dbg !11817
  call void @llvm.dbg.value(metadata i8* %2, metadata !11814, metadata !DIExpression()), !dbg !11817
  %5 = bitcast i32* %4 to i8*, !dbg !11818
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11818
  call void @llvm.dbg.value(metadata i32 0, metadata !11815, metadata !DIExpression()), !dbg !11817
  store i32 0, i32* %4, align 4, !dbg !11819
  call void @llvm.dbg.value(metadata i32* %4, metadata !11815, metadata !DIExpression(DW_OP_deref)), !dbg !11817
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11820
  call void @llvm.dbg.value(metadata i16* %6, metadata !11816, metadata !DIExpression()), !dbg !11817
  %7 = load i32, i32* %4, align 4, !dbg !11821
  call void @llvm.dbg.value(metadata i32 %7, metadata !11815, metadata !DIExpression()), !dbg !11817
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11822
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11823
  ret i32 %8, !dbg !11824
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11825 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11827, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata i32* %1, metadata !11828, metadata !DIExpression()), !dbg !11832
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11833
  %4 = load i16*, i16** %3, align 4, !dbg !11833
  call void @llvm.dbg.value(metadata i16* %4, metadata !11829, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata i32 0, metadata !11830, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata i32 0, metadata !11831, metadata !DIExpression()), !dbg !11832
  %5 = icmp eq i16* %4, null, !dbg !11834
  br i1 %5, label %22, label %6, !dbg !11836

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11830, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata i16* %8, metadata !11829, metadata !DIExpression()), !dbg !11832
  %9 = load i16, i16* %8, align 2, !dbg !11837
  %10 = icmp eq i16 %9, -32768, !dbg !11841
  call void @llvm.dbg.value(metadata i32 undef, metadata !11830, metadata !DIExpression()), !dbg !11832
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11842
  call void @llvm.dbg.value(metadata i16* %11, metadata !11829, metadata !DIExpression()), !dbg !11832
  %12 = zext i1 %10 to i32, !dbg !11843
  %13 = add i32 %7, %12, !dbg !11843
  call void @llvm.dbg.value(metadata i32 %13, metadata !11830, metadata !DIExpression()), !dbg !11832
  %14 = icmp eq i32 %13, 2, !dbg !11844
  br i1 %14, label %15, label %6, !dbg !11845

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11832
  call void @llvm.dbg.value(metadata i32 %16, metadata !11831, metadata !DIExpression()), !dbg !11832
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11846
  %18 = load i16, i16* %17, align 2, !dbg !11846
  %19 = icmp eq i16 %18, 32767, !dbg !11847
  %20 = add i32 %16, 1, !dbg !11848
  call void @llvm.dbg.value(metadata i32 %20, metadata !11831, metadata !DIExpression()), !dbg !11832
  br i1 %19, label %21, label %15, !dbg !11850, !llvm.loop !11851

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11853
  br label %22, !dbg !11854

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11855
  call void @llvm.dbg.value(metadata i16* %23, metadata !11829, metadata !DIExpression()), !dbg !11832
  ret i16* %23, !dbg !11856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !11857 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11860
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11861
  ret i32* %2, !dbg !11862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !11863 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12011, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12012, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12013, metadata !DIExpression()), !dbg !12014
  ret void, !dbg !12015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12020, metadata !DIExpression()), !dbg !12022
  call void @llvm.dbg.value(metadata i32 %1, metadata !12021, metadata !DIExpression()), !dbg !12022
  ret void, !dbg !12023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12024 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12028, metadata !DIExpression()), !dbg !12030
  call void @llvm.dbg.value(metadata i32 %1, metadata !12029, metadata !DIExpression()), !dbg !12030
  ret void, !dbg !12031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12036, metadata !DIExpression()), !dbg !12038
  call void @llvm.dbg.value(metadata i8* %1, metadata !12037, metadata !DIExpression()), !dbg !12038
  ret i32 -134, !dbg !12039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12044, metadata !DIExpression()), !dbg !12046
  call void @llvm.dbg.value(metadata i8* %1, metadata !12045, metadata !DIExpression()), !dbg !12046
  ret i32 -134, !dbg !12047
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12051, metadata !DIExpression()), !dbg !12052
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12053, !srcloc !12059
  call void @llvm.dbg.value(metadata i32 undef, metadata !12056, metadata !DIExpression()) #24, !dbg !12060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12057, metadata !DIExpression()) #24, !dbg !12060
  br label %3, !dbg !12061

3:                                                ; preds = %3, %1
  br label %3, !dbg !12062, !llvm.loop !12065
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12072, metadata !DIExpression()), !dbg !12074
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12073, metadata !DIExpression()), !dbg !12074
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12075
  unreachable, !dbg !12075
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12078, metadata !DIExpression()), !dbg !12079
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12080
  unreachable, !dbg !12080
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12083, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12084, metadata !DIExpression()), !dbg !12087
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12088, !srcloc !12059
  call void @llvm.dbg.value(metadata i32 undef, metadata !12056, metadata !DIExpression()) #24, !dbg !12090
  call void @llvm.dbg.value(metadata i32 undef, metadata !12057, metadata !DIExpression()) #24, !dbg !12090
  call void @llvm.dbg.value(metadata i32 undef, metadata !12085, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12086, metadata !DIExpression()), !dbg !12087
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12091
  br i1 %4, label %6, label %5, !dbg !12093

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12094
  br label %7, !dbg !12095

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12094
  br label %7, !dbg !12098

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12088
  call void @llvm.dbg.value(metadata i32 %8, metadata !12056, metadata !DIExpression()) #24, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %8, metadata !12085, metadata !DIExpression()), !dbg !12087
  %9 = tail call fastcc %struct.k_thread* @k_current_get.112() #27, !dbg !12100
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12086, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 undef, metadata !12101, metadata !DIExpression()) #24, !dbg !12104
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !12106, !srcloc !12107
  tail call fastcc void @k_thread_abort.113(%struct.k_thread* noundef %9) #26, !dbg !12108
  ret void, !dbg !12111
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.112() unnamed_addr #9 !dbg !12112 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.114() #27, !dbg !12116
  ret %struct.k_thread* %1, !dbg !12117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.113(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12118 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12122, metadata !DIExpression()), !dbg !12123
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12124, !srcloc !12126
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12127
  ret void, !dbg !12128
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.114() unnamed_addr #9 !dbg !12129 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12130, !srcloc !12132
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12133
  ret %struct.k_thread* %1, !dbg !12134
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12135 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12139, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i32 %1, metadata !12140, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i32 %2, metadata !12141, metadata !DIExpression()), !dbg !12142
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12143
  ret void, !dbg !12144
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12145 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12149, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.value(metadata i8* %1, metadata !12150, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.value(metadata i32 %2, metadata !12151, metadata !DIExpression()), !dbg !12152
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12153
  ret void, !dbg !12154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12155 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12156
  ret void, !dbg !12157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12160, metadata !DIExpression()), !dbg !12161
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12162
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12163
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12164
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12165
  %4 = trunc i32 %0 to i8, !dbg !12166
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12167
  store i8 %4, i8* %5, align 4, !dbg !12168
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12169
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12170
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12171
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12172
  store i8* %8, i8** %9, align 4, !dbg !12173
  ret void, !dbg !12174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12177, metadata !DIExpression()), !dbg !12183
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12184
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12178, metadata !DIExpression()), !dbg !12183
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12185
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12179, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i8* null, metadata !12182, metadata !DIExpression()), !dbg !12183
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12186
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12187
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !12188
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12189
  ret void, !dbg !12190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12191 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12195, metadata !DIExpression()), !dbg !12196
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12197
  ret i8* %2, !dbg !12198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12199 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12204, metadata !DIExpression()), !dbg !12205
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12206
  %3 = load i8, i8* %2, align 1, !dbg !12207
  %4 = and i8 %3, -5, !dbg !12207
  store i8 %4, i8* %2, align 1, !dbg !12207
  ret void, !dbg !12208
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12209 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12212
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12213
  %3 = ptrtoint i8* %2 to i32, !dbg !12222
  %4 = add i32 %3, 2048, !dbg !12223
  call void @llvm.dbg.value(metadata i32 %4, metadata !12217, metadata !DIExpression()) #24, !dbg !12224
  call void @llvm.dbg.value(metadata i32 %4, metadata !12225, metadata !DIExpression()) #24, !dbg !12228
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !12230, !srcloc !12231
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12232
  %6 = or i32 %5, 512, !dbg !12232
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12232
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -2, i32 noundef 255) #25, !dbg !12233
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -5, i32 noundef 0) #25, !dbg !12236
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -12, i32 noundef 0) #25, !dbg !12237
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -11, i32 noundef 0) #25, !dbg !12238
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -10, i32 noundef 0) #25, !dbg !12239
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -4, i32 noundef 0) #25, !dbg !12240
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12241
  %8 = or i32 %7, 458752, !dbg !12241
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12241
  tail call void @z_arm_fault_init() #25, !dbg !12242
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12243
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12244
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12247
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12248
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12249
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12250
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !12250
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12211, metadata !DIExpression()), !dbg !12251
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12252
  call void @z_device_state_init() #25, !dbg !12253
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12254
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12255
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12256
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !12257
  unreachable, !dbg !12257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1892, metadata !DIExpression()), !dbg !12258
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12259
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12259
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1893, metadata !DIExpression()), !dbg !12258
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1893, metadata !DIExpression()), !dbg !12258
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12260
  br i1 %7, label %8, label %35, !dbg !12261

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1893, metadata !DIExpression()), !dbg !12258
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12262
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12262
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1903, metadata !DIExpression()), !dbg !12263
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12264
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12264
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12265
  call void @llvm.dbg.value(metadata i32 %14, metadata !1907, metadata !DIExpression()), !dbg !12263
  %15 = icmp eq %struct.device* %11, null, !dbg !12266
  br i1 %15, label %32, label %16, !dbg !12268

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12269
  br i1 %17, label %26, label %18, !dbg !12272

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12273
  call void @llvm.dbg.value(metadata i32 %19, metadata !1907, metadata !DIExpression()), !dbg !12263
  %20 = icmp ult i32 %19, 255, !dbg !12275
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %21, metadata !1907, metadata !DIExpression()), !dbg !12263
  %22 = trunc i32 %21 to i8, !dbg !12276
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12277
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12277
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12278
  store i8 %22, i8* %25, align 1, !dbg !12279
  br label %26, !dbg !12280

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12281
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12281
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12282
  %30 = load i8, i8* %29, align 1, !dbg !12283
  %31 = or i8 %30, 1, !dbg !12283
  store i8 %31, i8* %29, align 1, !dbg !12283
  br label %32, !dbg !12284

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12285
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1893, metadata !DIExpression()), !dbg !12258
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12260
  br i1 %34, label %8, label %35, !dbg !12261, !llvm.loop !12286

35:                                               ; preds = %32, %1
  ret void, !dbg !12288
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.121(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12291, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32 %1, metadata !12292, metadata !DIExpression()), !dbg !12293
  %3 = trunc i32 %1 to i8, !dbg !12294
  %4 = shl i8 %3, 4, !dbg !12294
  %5 = and i32 %0, 15, !dbg !12297
  %6 = add nsw i32 %5, -4, !dbg !12298
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12299
  store volatile i8 %4, i8* %7, align 1, !dbg !12300
  ret void, !dbg !12301
}

; Function Attrs: optsize
declare !dbg !12302 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12306, metadata !DIExpression()), !dbg !12307
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12308
  store i8 1, i8* %2, align 1, !dbg !12309
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12310
  store i8 1, i8* %3, align 4, !dbg !12311
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12312
  store i32 0, i32* %4, align 4, !dbg !12313
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12314
  store i32 0, i32* %5, align 4, !dbg !12315
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12316
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12317
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12318
  ret void, !dbg !12319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12320 {
  tail call void @z_sched_init() #25, !dbg !12325
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12326
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0)) #25, !dbg !12327
  call void @llvm.dbg.value(metadata i8* %1, metadata !12324, metadata !DIExpression()), !dbg !12328
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12329
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12330
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12331
  ret i8* %1, !dbg !12332
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12333 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12337, metadata !DIExpression()), !dbg !12338
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12339
  unreachable, !dbg !12340
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12341 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12343, metadata !DIExpression()), !dbg !12346
  call void @llvm.dbg.value(metadata i8* %1, metadata !12344, metadata !DIExpression()), !dbg !12346
  call void @llvm.dbg.value(metadata i8* %2, metadata !12345, metadata !DIExpression()), !dbg !12346
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12347
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12348
  tail call void @boot_banner() #25, !dbg !12349
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12350
  tail call void @z_init_static_threads() #25, !dbg !12351
  tail call void @main() #25, !dbg !12352
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12353
  %5 = and i8 %4, -2, !dbg !12353
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12353
  ret void, !dbg !12354
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12355 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12365, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.value(metadata i8* %1, metadata !12366, metadata !DIExpression()), !dbg !12367
  ret void, !dbg !12368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12369 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12371, metadata !DIExpression()), !dbg !12373
  call void @llvm.dbg.value(metadata i8* %1, metadata !12372, metadata !DIExpression()), !dbg !12373
  ret void, !dbg !12374
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12375 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12376, !srcloc !12383
  call void @llvm.dbg.value(metadata i32 %1, metadata !12379, metadata !DIExpression()) #24, !dbg !12384
  %2 = icmp ne i32 %1, 0, !dbg !12385
  ret i1 %2, !dbg !12386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12387 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12388
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12389
  %3 = load i8, i8* %2, align 4, !dbg !12390
  %4 = or i8 %3, 1, !dbg !12390
  store i8 %4, i8* %2, align 4, !dbg !12390
  ret void, !dbg !12391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12392 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12393
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12394
  %3 = load i8, i8* %2, align 4, !dbg !12395
  %4 = and i8 %3, -2, !dbg !12395
  store i8 %4, i8* %2, align 4, !dbg !12395
  ret void, !dbg !12396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12397 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12398
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12399
  %3 = load i8, i8* %2, align 4, !dbg !12399
  %4 = and i8 %3, 1, !dbg !12400
  %5 = icmp ne i8 %4, 0, !dbg !12401
  ret i1 %5, !dbg !12402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12403 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12407, metadata !DIExpression()), !dbg !12409
  call void @llvm.dbg.value(metadata i8* %1, metadata !12408, metadata !DIExpression()), !dbg !12409
  ret i32 -88, !dbg !12410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12411 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12415, metadata !DIExpression()), !dbg !12416
  ret i8* null, !dbg !12417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !12418 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12422, metadata !DIExpression()), !dbg !12425
  call void @llvm.dbg.value(metadata i8* %1, metadata !12423, metadata !DIExpression()), !dbg !12425
  call void @llvm.dbg.value(metadata i32 %2, metadata !12424, metadata !DIExpression()), !dbg !12425
  ret i32 -88, !dbg !12426
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1916 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2030, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i8* %1, metadata !2031, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 %2, metadata !2032, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 0, metadata !2033, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i8 undef, metadata !2035, metadata !DIExpression()), !dbg !12427
  %4 = icmp eq i8* %1, null, !dbg !12428
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12430
  br i1 %6, label %46, label %7, !dbg !12430

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12431
  %9 = load i8, i8* %8, align 1, !dbg !12431
  call void @llvm.dbg.value(metadata i8 %9, metadata !2035, metadata !DIExpression()), !dbg !12427
  %10 = add i32 %2, -1, !dbg !12432
  call void @llvm.dbg.value(metadata i32 %10, metadata !2032, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i8 0, metadata !2036, metadata !DIExpression()), !dbg !12433
  call void @llvm.dbg.value(metadata i8 %9, metadata !2035, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 0, metadata !2033, metadata !DIExpression()), !dbg !12427
  %11 = icmp eq i8 %9, 0, !dbg !12434
  br i1 %11, label %12, label %15, !dbg !12436

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12437
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12438
  store i8 0, i8* %14, align 1, !dbg !12439
  br label %46, !dbg !12440

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2036, metadata !DIExpression()), !dbg !12433
  call void @llvm.dbg.value(metadata i8 %17, metadata !2035, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 %18, metadata !2033, metadata !DIExpression()), !dbg !12427
  %19 = zext i8 %17 to i32, !dbg !12441
  %20 = zext i8 %16 to i32, !dbg !12442
  %21 = shl nuw i32 1, %20, !dbg !12442
  call void @llvm.dbg.value(metadata i32 %21, metadata !2034, metadata !DIExpression()), !dbg !12427
  %22 = and i32 %21, %19, !dbg !12444
  %23 = icmp eq i32 %22, 0, !dbg !12446
  br i1 %23, label %42, label %24, !dbg !12447

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12448
  %26 = sub i32 %10, %18, !dbg !12449
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12450
  %28 = load i8*, i8** %27, align 4, !dbg !12450
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12451
  %30 = load i32, i32* %29, align 4, !dbg !12451
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12452
  %32 = add i32 %31, %18, !dbg !12453
  call void @llvm.dbg.value(metadata i32 %32, metadata !2033, metadata !DIExpression()), !dbg !12427
  %33 = trunc i32 %21 to i8, !dbg !12454
  %34 = xor i8 %33, -1, !dbg !12454
  %35 = and i8 %17, %34, !dbg !12454
  call void @llvm.dbg.value(metadata i8 %35, metadata !2035, metadata !DIExpression()), !dbg !12427
  %36 = icmp eq i8 %35, 0, !dbg !12455
  br i1 %36, label %12, label %37, !dbg !12457

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12458
  %39 = sub i32 %10, %32, !dbg !12460
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !12461
  %41 = add i32 %40, %32, !dbg !12462
  call void @llvm.dbg.value(metadata i32 %41, metadata !2033, metadata !DIExpression()), !dbg !12427
  br label %42, !dbg !12463

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12427
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12427
  call void @llvm.dbg.value(metadata i8 %44, metadata !2035, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 %43, metadata !2033, metadata !DIExpression()), !dbg !12427
  %45 = add i8 %16, 1, !dbg !12464
  call void @llvm.dbg.value(metadata i8 %45, metadata !2036, metadata !DIExpression()), !dbg !12433
  br label %15, !dbg !12436

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.123, i32 0, i32 0), %3 ], !dbg !12427
  ret i8* %47, !dbg !12465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12466 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12470, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.value(metadata i32 %1, metadata !12471, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.value(metadata i8* %2, metadata !12472, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.value(metadata i32 %3, metadata !12473, metadata !DIExpression()), !dbg !12475
  %5 = icmp ult i32 %1, %3, !dbg !12476
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12476
  call void @llvm.dbg.value(metadata i32 %6, metadata !12474, metadata !DIExpression()), !dbg !12475
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !12477
  ret i32 %6, !dbg !12478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12479 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12483, metadata !DIExpression()), !dbg !12484
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !12485
  ret void, !dbg !12486
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12487 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12496, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12497, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata i32 %2, metadata !12498, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12499, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata i8* %4, metadata !12500, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata i8* %5, metadata !12501, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata i8* %6, metadata !12502, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata i32 %7, metadata !12503, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata i32 %8, metadata !12504, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata i8* undef, metadata !12505, metadata !DIExpression()), !dbg !12507
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12508
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !12509
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12510
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12511
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12512
  call void @llvm.dbg.value(metadata i8* %13, metadata !12506, metadata !DIExpression()), !dbg !12507
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !12513
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12514
  store i8* null, i8** %14, align 4, !dbg !12515
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12516
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12516
  br i1 %16, label %20, label %17, !dbg !12518

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12519
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12519
  br label %20, !dbg !12520

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12507
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12521
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12523
  ret i8* %13, !dbg !12524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !12525 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12530, metadata !DIExpression()), !dbg !12531
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12532
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12533
  ret void, !dbg !12534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12535 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12540, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata i32 %1, metadata !12541, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata i32 %2, metadata !12542, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata i32 %3, metadata !12543, metadata !DIExpression()), !dbg !12544
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12545
  store %union.anon* null, %union.anon** %5, align 8, !dbg !12546
  %6 = trunc i32 %3 to i8, !dbg !12547
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12548
  store i8 %6, i8* %7, align 4, !dbg !12549
  %8 = trunc i32 %2 to i8, !dbg !12550
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12551
  store i8 %8, i8* %9, align 1, !dbg !12552
  %10 = trunc i32 %1 to i8, !dbg !12553
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12554
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12554
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12554
  store i8 %10, i8* %13, align 2, !dbg !12555
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12556
  store i8 0, i8* %14, align 1, !dbg !12557
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12558
  ret void, !dbg !12559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12564, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12565, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 %2, metadata !12566, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 0, metadata !12571, metadata !DIExpression()), !dbg !12572
  %4 = add i32 %2, 7, !dbg !12573
  %5 = and i32 %4, -8, !dbg !12573
  %6 = add i32 %5, 64, !dbg !12573
  call void @llvm.dbg.value(metadata i32 %6, metadata !12567, metadata !DIExpression()), !dbg !12572
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.133(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12575
  call void @llvm.dbg.value(metadata i8* %7, metadata !12570, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 %5, metadata !12568, metadata !DIExpression()), !dbg !12572
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12576
  call void @llvm.dbg.value(metadata i8* %8, metadata !12569, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 0, metadata !12571, metadata !DIExpression()), !dbg !12572
  %9 = ptrtoint i8* %7 to i32, !dbg !12577
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12578
  store i32 %9, i32* %10, align 4, !dbg !12579
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12580
  store i32 %5, i32* %11, align 4, !dbg !12581
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12582
  store i32 0, i32* %12, align 4, !dbg !12583
  call void @llvm.dbg.value(metadata i8* %8, metadata !12569, metadata !DIExpression()), !dbg !12572
  ret i8* %8, !dbg !12584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.133(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12585 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12589, metadata !DIExpression()), !dbg !12590
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12591
  ret i8* %2, !dbg !12592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12593 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12598, metadata !DIExpression()), !dbg !12599
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12600
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12601
  ret void, !dbg !12602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12603 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12605, metadata !DIExpression()), !dbg !12606
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12607
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12608
  ret void, !dbg !12609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12610 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12614, metadata !DIExpression()), !dbg !12615
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12616
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12617
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12618
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12619
  ret void, !dbg !12620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12621 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12626, metadata !DIExpression()), !dbg !12627
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12628
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12629
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12630
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12631
  ret void, !dbg !12632
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12633 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12650, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12641, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12642, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata i32 %2, metadata !12643, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12644, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata i8* %4, metadata !12645, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata i8* %5, metadata !12646, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata i8* %6, metadata !12647, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata i32 %7, metadata !12648, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata i32 %8, metadata !12649, metadata !DIExpression()), !dbg !12651
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12652
  %13 = icmp eq i64 %11, -1, !dbg !12653
  br i1 %13, label %15, label %14, !dbg !12655

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12656
  br label %15, !dbg !12658

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12659
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12660 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12665, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12664, metadata !DIExpression()), !dbg !12666
  %4 = icmp eq i64 %3, 0, !dbg !12667
  br i1 %4, label %5, label %6, !dbg !12669

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12670
  br label %7, !dbg !12672

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12673
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12676 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12680, metadata !DIExpression()), !dbg !12681
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12682, !srcloc !12684
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12685
  ret void, !dbg !12686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12687 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12690, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12689, metadata !DIExpression()), !dbg !12691
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12692
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12693
  ret void, !dbg !12694
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12695 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12697, metadata !DIExpression()), !dbg !12717
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12718

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !12719
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12715, metadata !DIExpression()), !dbg !12720
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12721

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12697, metadata !DIExpression()), !dbg !12717
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12722
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12722
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12725
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12725
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12726
  %9 = load i32, i32* %8, align 4, !dbg !12726
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12727
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12727
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12728
  %13 = load i8*, i8** %12, align 4, !dbg !12728
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12729
  %15 = load i8*, i8** %14, align 4, !dbg !12729
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12730
  %17 = load i8*, i8** %16, align 4, !dbg !12730
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12731
  %19 = load i32, i32* %18, align 4, !dbg !12731
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12732
  %21 = load i32, i32* %20, align 4, !dbg !12732
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !12733
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12734
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12735
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12736
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12736
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12737
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12697, metadata !DIExpression()), !dbg !12717
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12738
  br i1 %27, label %2, label %1, !dbg !12718, !llvm.loop !12740

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !12719
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12715, metadata !DIExpression()), !dbg !12720
  br label %29, !dbg !12721

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !12742
  ret void, !dbg !12743

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12715, metadata !DIExpression()), !dbg !12720
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12744
  %33 = load i32, i32* %32, align 4, !dbg !12744
  %34 = icmp eq i32 %33, -1, !dbg !12748
  br i1 %34, label %43, label %35, !dbg !12749

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12750
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12750
  %38 = icmp sgt i32 %33, 0, !dbg !12752
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12752
  %40 = zext i32 %39 to i64, !dbg !12752
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !12752
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12753
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !12753
  br label %43, !dbg !12754

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12755
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12715, metadata !DIExpression()), !dbg !12720
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12756
  br i1 %45, label %30, label %29, !dbg !12721, !llvm.loop !12758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12760 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12765, metadata !DIExpression()), !dbg !12766
  call void @llvm.dbg.value(metadata i64 %0, metadata !12767, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i32 1000, metadata !12772, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i32 10000, metadata !12773, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i8 1, metadata !12774, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i8 0, metadata !12775, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i8 1, metadata !12776, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i8 0, metadata !12777, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i8 1, metadata !12778, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i8 0, metadata !12779, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i64 0, metadata !12780, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i64 0, metadata !12780, metadata !DIExpression()), !dbg !12784
  %2 = mul i64 %0, 10, !dbg !12786
  ret i64 %2, !dbg !12792
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12793 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12795, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.value(metadata i8* %1, metadata !12796, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.value(metadata i8* %2, metadata !12797, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.value(metadata i8* %3, metadata !12798, metadata !DIExpression()), !dbg !12799
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12800
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12801
  %7 = load i8, i8* %6, align 4, !dbg !12802
  %8 = or i8 %7, 4, !dbg !12802
  store i8 %8, i8* %6, align 4, !dbg !12802
  tail call void @z_thread_essential_clear() #26, !dbg !12803
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !12804
  unreachable, !dbg !12804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12805 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12809, metadata !DIExpression()), !dbg !12810
  ret i32 -134, !dbg !12811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12812 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12816, metadata !DIExpression()), !dbg !12818
  call void @llvm.dbg.value(metadata i32 %1, metadata !12817, metadata !DIExpression()), !dbg !12818
  ret i32 -134, !dbg !12819
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !12820 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12827, metadata !DIExpression()), !dbg !12829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12828, metadata !DIExpression()), !dbg !12829
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12830
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12832
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12829
  ret i32 %6, !dbg !12833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !12834 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12838, metadata !DIExpression()), !dbg !12839
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12840
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12839
  ret i32 %3, !dbg !12842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12843 {
  tail call void @sys_clock_idle_exit() #25, !dbg !12845
  ret void, !dbg !12846
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !12847 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12849, metadata !DIExpression()), !dbg !12852
  call void @llvm.dbg.value(metadata i8* %1, metadata !12850, metadata !DIExpression()), !dbg !12852
  call void @llvm.dbg.value(metadata i8* %2, metadata !12851, metadata !DIExpression()), !dbg !12852
  br label %4, !dbg !12853

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12854, !srcloc !12861
  call void @llvm.dbg.value(metadata i32 undef, metadata !12857, metadata !DIExpression()) #24, !dbg !12862
  call void @llvm.dbg.value(metadata i32 undef, metadata !12858, metadata !DIExpression()) #24, !dbg !12862
  tail call fastcc void @k_cpu_idle() #26, !dbg !12863
  br label %4, !dbg !12853, !llvm.loop !12864
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12866 {
  tail call void @arch_cpu_idle() #25, !dbg !12867
  ret void, !dbg !12868
}

; Function Attrs: optsize
declare !dbg !12869 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !12870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12874, metadata !DIExpression()), !dbg !12878
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12875, metadata !DIExpression()), !dbg !12878
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12879
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12879
  %5 = load i8, i8* %4, align 2, !dbg !12879
  call void @llvm.dbg.value(metadata i8 %5, metadata !12876, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12878
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12880
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12880
  %8 = load i8, i8* %7, align 2, !dbg !12880
  call void @llvm.dbg.value(metadata i8 %8, metadata !12877, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12878
  %9 = icmp eq i8 %8, %5, !dbg !12881
  %10 = sext i8 %5 to i32, !dbg !12883
  %11 = sext i8 %8 to i32, !dbg !12883
  %12 = sub nsw i32 %11, %10, !dbg !12883
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12883
  ret i32 %13, !dbg !12884
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12889, metadata !DIExpression()), !dbg !12890
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !12891
  %3 = icmp eq i32 %2, 0, !dbg !12893
  br i1 %3, label %8, label %4, !dbg !12894

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !12895
  %6 = add i32 %5, %2, !dbg !12897
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12898
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !12899
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !12900
  br label %8, !dbg !12901

8:                                                ; preds = %4, %1
  ret void, !dbg !12902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !12903 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12907, metadata !DIExpression()), !dbg !12909
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12910
  call void @llvm.dbg.value(metadata i32 %1, metadata !12908, metadata !DIExpression()), !dbg !12909
  ret i32 %1, !dbg !12911
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12912 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12916, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.value(metadata i32 %1, metadata !12917, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.value(metadata i32 0, metadata !12918, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !12934
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12936, !srcloc !12942
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12936
  call void @llvm.dbg.value(metadata i32 %4, metadata !12939, metadata !DIExpression()) #24, !dbg !12943
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !12943
  call void @llvm.dbg.value(metadata i32 %4, metadata !12933, metadata !DIExpression()) #24, !dbg !12934
  call void @llvm.dbg.value(metadata i32 %4, metadata !12924, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.value(metadata i32 undef, metadata !12918, metadata !DIExpression()), !dbg !12926
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12944
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !12947
  %6 = icmp sgt i32 %0, 0, !dbg !12948
  %7 = icmp sgt i32 %5, 2, !dbg !12950
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12950
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12950
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12951
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12952
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !12953
  call void @llvm.dbg.value(metadata i32 %4, metadata !12954, metadata !DIExpression()) #24, !dbg !12960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !12960
  call void @llvm.dbg.value(metadata i32 %4, metadata !12962, metadata !DIExpression()) #24, !dbg !12965
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !12967, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 1, metadata !12918, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.value(metadata i32 undef, metadata !12918, metadata !DIExpression()), !dbg !12926
  ret void, !dbg !12969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !12970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12972, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i32 %0, metadata !12974, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12989
  call void @llvm.dbg.value(metadata i32 1000, metadata !12977, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i32 10000, metadata !12978, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i8 1, metadata !12979, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i1 true, metadata !12980, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12989
  call void @llvm.dbg.value(metadata i1 true, metadata !12981, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12989
  call void @llvm.dbg.value(metadata i8 0, metadata !12982, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i1 true, metadata !12983, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12989
  call void @llvm.dbg.value(metadata i1 false, metadata !12984, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12989
  call void @llvm.dbg.value(metadata i64 0, metadata !12985, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i64 0, metadata !12985, metadata !DIExpression()), !dbg !12989
  %2 = mul i32 %0, 10, !dbg !12991
  ret i32 %2, !dbg !12997
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13000, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13003
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13005, !srcloc !12942
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13005
  call void @llvm.dbg.value(metadata i32 %3, metadata !12939, metadata !DIExpression()) #24, !dbg !13007
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13007
  call void @llvm.dbg.value(metadata i32 %3, metadata !12933, metadata !DIExpression()) #24, !dbg !13003
  call void @llvm.dbg.value(metadata i32 %3, metadata !13001, metadata !DIExpression()), !dbg !13002
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13008
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13010
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13011
  br i1 %6, label %7, label %8, !dbg !13012

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13013
  call void @llvm.dbg.value(metadata i32 %3, metadata !12954, metadata !DIExpression()) #24, !dbg !13015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13015
  call void @llvm.dbg.value(metadata i32 %3, metadata !12962, metadata !DIExpression()) #24, !dbg !13017
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13019, !srcloc !12968
  br label %24, !dbg !13020

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13021
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13022
  %10 = icmp eq i32 %9, 0, !dbg !13022
  br i1 %10, label %21, label %11, !dbg !13024

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13025
  br i1 %12, label %13, label %21, !dbg !13026

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13027
  %15 = icmp sgt i32 %14, %0, !dbg !13030
  br i1 %15, label %19, label %16, !dbg !13031

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13032
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13032
  call void @llvm.dbg.value(metadata i32 %18, metadata !13001, metadata !DIExpression()), !dbg !13002
  br label %22, !dbg !13034

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13035
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13035
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13037
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13002
  call void @llvm.dbg.value(metadata i32 %23, metadata !13001, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i32 %23, metadata !12954, metadata !DIExpression()) #24, !dbg !13039
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13039
  call void @llvm.dbg.value(metadata i32 %23, metadata !12962, metadata !DIExpression()) #24, !dbg !13041
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !13043, !srcloc !12968
  br label %24, !dbg !13044

24:                                               ; preds = %22, %7
  ret void, !dbg !13044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13049, metadata !DIExpression()), !dbg !13051
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13052
  %3 = icmp eq i32 %2, 0, !dbg !13052
  br i1 %3, label %16, label %4, !dbg !13053

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13054
  br i1 %5, label %16, label %6, !dbg !13055

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13056
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13056
  %9 = load i8, i8* %8, align 2, !dbg !13056
  %10 = sext i8 %9 to i32, !dbg !13057
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13058
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13059
  br i1 %12, label %16, label %13, !dbg !13060

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13061
  %15 = xor i1 %14, true, !dbg !13062
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13051
  call void @llvm.dbg.value(metadata i1 %17, metadata !13050, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13051
  ret i1 %17, !dbg !13063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13064 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13068, metadata !DIExpression()), !dbg !13070
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13071
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13069, metadata !DIExpression()), !dbg !13070
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13072
  br i1 %3, label %5, label %4, !dbg !13074

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13075
  br label %5, !dbg !13077

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13068, metadata !DIExpression()), !dbg !13070
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13078
  ret i32 %6, !dbg !13079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13082, metadata !DIExpression()), !dbg !13084
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13085
  %3 = load i8, i8* %2, align 1, !dbg !13085
  call void @llvm.dbg.value(metadata i8 %3, metadata !13083, metadata !DIExpression()), !dbg !13084
  %4 = and i8 %3, 31, !dbg !13086
  %5 = icmp ne i8 %4, 0, !dbg !13087
  ret i1 %5, !dbg !13088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13089 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13091, metadata !DIExpression()), !dbg !13092
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13093
  br i1 %2, label %3, label %7, !dbg !13095

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13096, metadata !DIExpression()) #24, !dbg !13099
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13102
  %5 = load i8, i8* %4, align 1, !dbg !13103
  %6 = and i8 %5, 127, !dbg !13103
  store i8 %6, i8* %4, align 1, !dbg !13103
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13104, metadata !DIExpression()) #24, !dbg !13107
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13111
  br label %7, !dbg !13112

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13113, metadata !DIExpression()) #24, !dbg !13116
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13118
  %9 = load i8, i8* %8, align 1, !dbg !13119
  %10 = or i8 %9, -128, !dbg !13119
  store i8 %10, i8* %8, align 1, !dbg !13119
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13120, metadata !DIExpression()) #24, !dbg !13123
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13127, metadata !DIExpression()) #24, !dbg !13135
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13133, metadata !DIExpression()) #24, !dbg !13135
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13137
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13134, metadata !DIExpression()) #24, !dbg !13135
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13139
  br i1 %12, label %23, label %13, !dbg !13137

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13134, metadata !DIExpression()) #24, !dbg !13135
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13141
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13134, metadata !DIExpression()) #24, !dbg !13135
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !13142
  %17 = icmp sgt i32 %16, 0, !dbg !13145
  br i1 %17, label %18, label %20, !dbg !13146

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13147
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !13149
  br label %25, !dbg !13150

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !13139
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13134, metadata !DIExpression()) #24, !dbg !13135
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13139
  br i1 %22, label %23, label %13, !dbg !13137, !llvm.loop !13151

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13153
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !13154
  br label %25, !dbg !13155

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13156
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13157
  %28 = zext i1 %27 to i32, !dbg !13157
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13158
  ret void, !dbg !13159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13160 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13162, metadata !DIExpression()), !dbg !13163
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13164
  ret i1 %2, !dbg !13165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13166 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13168, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13169, metadata !DIExpression()), !dbg !13170
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13171
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13172
  ret void, !dbg !13173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13174 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13178, metadata !DIExpression()), !dbg !13179
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13180
  br i1 %2, label %6, label %3, !dbg !13180

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13181
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13181
  br label %6, !dbg !13180

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13180
  ret %struct._dnode* %7, !dbg !13182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13183 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13187, metadata !DIExpression()), !dbg !13191
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13188, metadata !DIExpression()), !dbg !13191
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13192
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13192
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13189, metadata !DIExpression()), !dbg !13191
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13193
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13194
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13195
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13196
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13197
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13198
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13199
  ret void, !dbg !13200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13201 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13205, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13206, metadata !DIExpression()), !dbg !13207
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13208
  br i1 %3, label %6, label %4, !dbg !13209

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13210
  br label %6, !dbg !13209

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13209
  ret %struct._dnode* %7, !dbg !13211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13212 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13216, metadata !DIExpression()), !dbg !13219
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13217, metadata !DIExpression()), !dbg !13219
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13220
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13220
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13218, metadata !DIExpression()), !dbg !13219
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13221
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13222
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13223
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13224
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13225
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13226
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13227
  ret void, !dbg !13228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13231, metadata !DIExpression()), !dbg !13233
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13234
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13241, metadata !DIExpression()) #24, !dbg !13243
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13244
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13245
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13245
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13232, metadata !DIExpression()), !dbg !13233
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13246, metadata !DIExpression()) #24, !dbg !13252
  call void @llvm.dbg.value(metadata i32 %0, metadata !13251, metadata !DIExpression()) #24, !dbg !13252
  %6 = icmp eq i32 %0, 0, !dbg !13255
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13257
  br i1 %6, label %8, label %15, !dbg !13258

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !13259
  br i1 %9, label %15, label %10, !dbg !13261

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !13262
  br i1 %11, label %15, label %12, !dbg !13264

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !13265
  %14 = icmp eq i32 %13, 0, !dbg !13265
  br i1 %14, label %18, label %15, !dbg !13267

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13268
  br i1 %16, label %18, label %17, !dbg !13271

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13272
  br label %18, !dbg !13274

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13257
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13257
  ret void, !dbg !13275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13276 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13280, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13281, metadata !DIExpression()), !dbg !13283
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !13284
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13282, metadata !DIExpression()), !dbg !13283
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13281, metadata !DIExpression()), !dbg !13283
  ret %struct.k_thread* %3, !dbg !13285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13286 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13288, metadata !DIExpression()), !dbg !13289
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13290
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13291
  %4 = xor i1 %3, true, !dbg !13292
  ret i1 %4, !dbg !13293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13294 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13296, metadata !DIExpression()), !dbg !13297
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13298
  %3 = load i16, i16* %2, align 2, !dbg !13298
  %4 = icmp ult i16 %3, 128, !dbg !13299
  %5 = zext i1 %4 to i32, !dbg !13299
  ret i32 %5, !dbg !13300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13301 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13307, metadata !DIExpression()), !dbg !13308
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13309
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !13310
  %4 = xor i1 %3, true, !dbg !13311
  ret i1 %4, !dbg !13312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13313 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13319, metadata !DIExpression()), !dbg !13320
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13321
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13321
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13322
  ret i1 %4, !dbg !13323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13324 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13326, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13327, metadata !DIExpression()), !dbg !13328
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13329
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13329
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13330
  br i1 %5, label %9, label %6, !dbg !13331

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13332
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13332
  br label %9, !dbg !13331

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13331
  ret %struct._dnode* %10, !dbg !13333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13334 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13338, metadata !DIExpression()), !dbg !13339
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13340
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13340
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13341
  ret i1 %4, !dbg !13342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13343 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13347, metadata !DIExpression()), !dbg !13350
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13351
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13351
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13348, metadata !DIExpression()), !dbg !13350
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13352
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13352
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13349, metadata !DIExpression()), !dbg !13350
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13353
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13354
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13355
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13356
  tail call fastcc void @sys_dnode_init.138(%struct._dnode* noundef %0) #26, !dbg !13357
  ret void, !dbg !13358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.138(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13359 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13361, metadata !DIExpression()), !dbg !13362
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13363
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13364
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13365
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13366
  ret void, !dbg !13367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13368 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13372, metadata !DIExpression()), !dbg !13374
  call void @llvm.dbg.value(metadata i32 128, metadata !13373, metadata !DIExpression()), !dbg !13374
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13375
  %3 = load i8, i8* %2, align 1, !dbg !13375
  %4 = icmp slt i8 %3, 0, !dbg !13376
  ret i1 %4, !dbg !13377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13382, metadata !DIExpression()), !dbg !13384
  call void @llvm.dbg.value(metadata i32 %1, metadata !13383, metadata !DIExpression()), !dbg !13384
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !13385
  ret i1 %3, !dbg !13386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !13387 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13389, metadata !DIExpression()), !dbg !13390
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13391
  ret i1 %2, !dbg !13392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13395, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i32 %1, metadata !13396, metadata !DIExpression()), !dbg !13397
  %3 = icmp slt i32 %0, %1, !dbg !13398
  ret i1 %3, !dbg !13399
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13400 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13402, metadata !DIExpression()), !dbg !13406
  call void @llvm.dbg.value(metadata i32 0, metadata !13403, metadata !DIExpression()), !dbg !13407
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13408
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13410, !srcloc !12942
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13410
  call void @llvm.dbg.value(metadata i32 %3, metadata !12939, metadata !DIExpression()) #24, !dbg !13412
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13412
  call void @llvm.dbg.value(metadata i32 %3, metadata !12933, metadata !DIExpression()) #24, !dbg !13408
  call void @llvm.dbg.value(metadata i32 %3, metadata !13405, metadata !DIExpression()), !dbg !13407
  call void @llvm.dbg.value(metadata i32 undef, metadata !13403, metadata !DIExpression()), !dbg !13407
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13413
  call void @llvm.dbg.value(metadata i32 %3, metadata !12954, metadata !DIExpression()) #24, !dbg !13418
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13418
  call void @llvm.dbg.value(metadata i32 %3, metadata !12962, metadata !DIExpression()) #24, !dbg !13420
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13422, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 1, metadata !13403, metadata !DIExpression()), !dbg !13407
  call void @llvm.dbg.value(metadata i32 undef, metadata !13403, metadata !DIExpression()), !dbg !13407
  ret void, !dbg !13423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13426, metadata !DIExpression()), !dbg !13427
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13428
  br i1 %2, label %24, label %3, !dbg !13430

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !13431
  br i1 %4, label %5, label %24, !dbg !13432

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13113, metadata !DIExpression()) #24, !dbg !13433
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13436
  %7 = load i8, i8* %6, align 1, !dbg !13437
  %8 = or i8 %7, -128, !dbg !13437
  store i8 %8, i8* %6, align 1, !dbg !13437
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13120, metadata !DIExpression()) #24, !dbg !13438
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13127, metadata !DIExpression()) #24, !dbg !13440
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13133, metadata !DIExpression()) #24, !dbg !13440
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13442
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13134, metadata !DIExpression()) #24, !dbg !13440
  %10 = icmp eq %struct._dnode* %9, null, !dbg !13443
  br i1 %10, label %21, label %11, !dbg !13442

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13134, metadata !DIExpression()) #24, !dbg !13440
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !13444
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13134, metadata !DIExpression()) #24, !dbg !13440
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !13445
  %15 = icmp sgt i32 %14, 0, !dbg !13446
  br i1 %15, label %16, label %18, !dbg !13447

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13448
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !13449
  br label %23, !dbg !13450

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !13443
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13134, metadata !DIExpression()) #24, !dbg !13440
  %20 = icmp eq %struct._dnode* %19, null, !dbg !13443
  br i1 %20, label %21, label %11, !dbg !13442, !llvm.loop !13451

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13453
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !13454
  br label %23, !dbg !13455

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !13456
  br label %24, !dbg !13457

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !13458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13459 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13461, metadata !DIExpression()), !dbg !13462
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13463
  br i1 %2, label %6, label %3, !dbg !13464

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !13465
  %5 = xor i1 %4, true, !dbg !13464
  br label %6, !dbg !13464

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !13466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13467 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13469, metadata !DIExpression()), !dbg !13473
  call void @llvm.dbg.value(metadata i32 0, metadata !13470, metadata !DIExpression()), !dbg !13474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13475
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13477, !srcloc !12942
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13477
  call void @llvm.dbg.value(metadata i32 %3, metadata !12939, metadata !DIExpression()) #24, !dbg !13479
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13479
  call void @llvm.dbg.value(metadata i32 %3, metadata !12933, metadata !DIExpression()) #24, !dbg !13475
  call void @llvm.dbg.value(metadata i32 %3, metadata !13472, metadata !DIExpression()), !dbg !13474
  call void @llvm.dbg.value(metadata i32 undef, metadata !13470, metadata !DIExpression()), !dbg !13474
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !13480
  call void @llvm.dbg.value(metadata i32 %3, metadata !12954, metadata !DIExpression()) #24, !dbg !13483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13483
  call void @llvm.dbg.value(metadata i32 %3, metadata !12962, metadata !DIExpression()) #24, !dbg !13485
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13487, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 1, metadata !13470, metadata !DIExpression()), !dbg !13474
  call void @llvm.dbg.value(metadata i32 undef, metadata !13470, metadata !DIExpression()), !dbg !13474
  ret void, !dbg !13488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13489 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13491, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13494
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13496, !srcloc !12942
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13496
  call void @llvm.dbg.value(metadata i32 %3, metadata !12939, metadata !DIExpression()) #24, !dbg !13498
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13498
  call void @llvm.dbg.value(metadata i32 %3, metadata !12933, metadata !DIExpression()) #24, !dbg !13494
  call void @llvm.dbg.value(metadata i32 %3, metadata !13492, metadata !DIExpression()), !dbg !13493
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !13499
  br i1 %4, label %5, label %6, !dbg !13501

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12954, metadata !DIExpression()) #24, !dbg !13502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13502
  call void @llvm.dbg.value(metadata i32 %3, metadata !12962, metadata !DIExpression()) #24, !dbg !13505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13507, !srcloc !12968
  br label %8, !dbg !13508

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.143(%struct.k_thread* noundef %0) #26, !dbg !13509
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13510
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13511
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13511
  br label %8, !dbg !13512

8:                                                ; preds = %6, %5
  ret void, !dbg !13512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13513 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13515, metadata !DIExpression()), !dbg !13516
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13517
  %3 = load i8, i8* %2, align 1, !dbg !13517
  %4 = and i8 %3, 4, !dbg !13518
  %5 = icmp eq i8 %4, 0, !dbg !13519
  ret i1 %5, !dbg !13520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.143(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13521 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13523, metadata !DIExpression()), !dbg !13524
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13525
  %3 = load i8, i8* %2, align 1, !dbg !13526
  %4 = and i8 %3, -5, !dbg !13526
  store i8 %4, i8* %2, align 1, !dbg !13526
  ret void, !dbg !13527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !13528 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !13531, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13530, metadata !DIExpression()), !dbg !13532
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !13533
  br i1 %4, label %5, label %9, !dbg !13535

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !13536
  br i1 %6, label %7, label %9, !dbg !13537

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !13538, metadata !DIExpression()) #24, !dbg !13544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13543, metadata !DIExpression()) #24, !dbg !13544
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13547
  br label %10, !dbg !13548

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12954, metadata !DIExpression()) #24, !dbg !13549
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13549
  call void @llvm.dbg.value(metadata i32 %3, metadata !12962, metadata !DIExpression()) #24, !dbg !13552
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13554, !srcloc !12968
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !13555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !13556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13560, metadata !DIExpression()), !dbg !13561
  call void @llvm.dbg.value(metadata i32 %0, metadata !13562, metadata !DIExpression()), !dbg !13567
  %2 = icmp eq i32 %0, 0, !dbg !13569
  br i1 %2, label %3, label %6, !dbg !13570

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13571, !srcloc !13578
  call void @llvm.dbg.value(metadata i32 %4, metadata !13574, metadata !DIExpression()) #24, !dbg !13579
  %5 = icmp eq i32 %4, 0, !dbg !13580
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !13561
  ret i1 %7, !dbg !13581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !13582 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13585
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13584, metadata !DIExpression()), !dbg !13586
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13587
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !13588
  ret i1 %3, !dbg !13589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !13590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13592, metadata !DIExpression()), !dbg !13594
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !13595
  call void @llvm.dbg.value(metadata i32 %2, metadata !13593, metadata !DIExpression()), !dbg !13594
  ret i32 %2, !dbg !13596
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13597 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13599, metadata !DIExpression()), !dbg !13603
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !13604
  call void @llvm.dbg.value(metadata i32 0, metadata !13600, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13606
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13608, !srcloc !12942
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13608
  call void @llvm.dbg.value(metadata i32 %4, metadata !12939, metadata !DIExpression()) #24, !dbg !13610
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13610
  call void @llvm.dbg.value(metadata i32 %4, metadata !12933, metadata !DIExpression()) #24, !dbg !13606
  call void @llvm.dbg.value(metadata i32 %4, metadata !13602, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i32 undef, metadata !13600, metadata !DIExpression()), !dbg !13605
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13611
  br i1 %5, label %6, label %10, !dbg !13615

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13096, metadata !DIExpression()) #24, !dbg !13616
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13619
  %8 = load i8, i8* %7, align 1, !dbg !13620
  %9 = and i8 %8, 127, !dbg !13620
  store i8 %9, i8* %7, align 1, !dbg !13620
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13104, metadata !DIExpression()) #24, !dbg !13621
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13623
  br label %10, !dbg !13624

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !13625
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13626
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !13627
  %13 = zext i1 %12 to i32, !dbg !13627
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !13628
  call void @llvm.dbg.value(metadata i32 %4, metadata !12954, metadata !DIExpression()) #24, !dbg !13629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13629
  call void @llvm.dbg.value(metadata i32 %4, metadata !12962, metadata !DIExpression()) #24, !dbg !13631
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13633, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 1, metadata !13600, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i32 undef, metadata !13600, metadata !DIExpression()), !dbg !13605
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13634
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !13636
  br i1 %15, label %16, label %17, !dbg !13637

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !13638
  br label %17, !dbg !13640

17:                                               ; preds = %16, %10
  ret void, !dbg !13641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13644, metadata !DIExpression()), !dbg !13645
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13646
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13647
  ret i32 %3, !dbg !13648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13651, metadata !DIExpression()), !dbg !13652
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13653
  %3 = load i8, i8* %2, align 1, !dbg !13654
  %4 = or i8 %3, 16, !dbg !13654
  store i8 %4, i8* %2, align 1, !dbg !13654
  ret void, !dbg !13655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13656 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13657, !srcloc !12942
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13657
  call void @llvm.dbg.value(metadata i32 %2, metadata !12939, metadata !DIExpression()) #24, !dbg !13659
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13659
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !13660
  ret void, !dbg !13661
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13664, metadata !DIExpression()), !dbg !13665
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !13666
  br i1 %2, label %3, label %5, !dbg !13668

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13669
  br label %6, !dbg !13671

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12962, metadata !DIExpression()) #24, !dbg !13672
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !13675, !srcloc !12968
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13676
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13677 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13679, metadata !DIExpression()), !dbg !13681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13682
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13684, !srcloc !12942
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13684
  call void @llvm.dbg.value(metadata i32 %3, metadata !12939, metadata !DIExpression()) #24, !dbg !13686
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13686
  call void @llvm.dbg.value(metadata i32 %3, metadata !12933, metadata !DIExpression()) #24, !dbg !13682
  call void @llvm.dbg.value(metadata i32 %3, metadata !13680, metadata !DIExpression()), !dbg !13681
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !13687
  br i1 %4, label %6, label %5, !dbg !13689

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12954, metadata !DIExpression()) #24, !dbg !13690
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13690
  call void @llvm.dbg.value(metadata i32 %3, metadata !12962, metadata !DIExpression()) #24, !dbg !13693
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13695, !srcloc !12968
  br label %8, !dbg !13696

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !13697
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13698
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13699
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13699
  br label %8, !dbg !13700

8:                                                ; preds = %6, %5
  ret void, !dbg !13700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13703, metadata !DIExpression()), !dbg !13704
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13705
  %3 = load i8, i8* %2, align 1, !dbg !13705
  %4 = and i8 %3, 16, !dbg !13706
  %5 = icmp ne i8 %4, 0, !dbg !13707
  ret i1 %5, !dbg !13708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13709 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13711, metadata !DIExpression()), !dbg !13712
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13713
  %3 = load i8, i8* %2, align 1, !dbg !13714
  %4 = and i8 %3, -17, !dbg !13714
  store i8 %4, i8* %2, align 1, !dbg !13714
  ret void, !dbg !13715
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13716 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13726, metadata !DIExpression()), !dbg !13730
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13724, metadata !DIExpression()), !dbg !13730
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13725, metadata !DIExpression()), !dbg !13730
  call void @llvm.dbg.value(metadata i32 0, metadata !13727, metadata !DIExpression()), !dbg !13731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13732
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13734, !srcloc !12942
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13734
  call void @llvm.dbg.value(metadata i32 %5, metadata !12939, metadata !DIExpression()) #24, !dbg !13736
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13736
  call void @llvm.dbg.value(metadata i32 %5, metadata !12933, metadata !DIExpression()) #24, !dbg !13732
  call void @llvm.dbg.value(metadata i32 %5, metadata !13729, metadata !DIExpression()), !dbg !13731
  call void @llvm.dbg.value(metadata i32 undef, metadata !13727, metadata !DIExpression()), !dbg !13731
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13737
  call void @llvm.dbg.value(metadata i32 %5, metadata !12954, metadata !DIExpression()) #24, !dbg !13740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13740
  call void @llvm.dbg.value(metadata i32 %5, metadata !12962, metadata !DIExpression()) #24, !dbg !13742
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !13744, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 1, metadata !13727, metadata !DIExpression()), !dbg !13731
  call void @llvm.dbg.value(metadata i32 undef, metadata !13727, metadata !DIExpression()), !dbg !13731
  ret void, !dbg !13745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13746 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13750, metadata !DIExpression()), !dbg !13751
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13748, metadata !DIExpression()), !dbg !13751
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13749, metadata !DIExpression()), !dbg !13751
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !13752
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !13753
  ret void, !dbg !13754
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13755 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13759, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13760, metadata !DIExpression()), !dbg !13761
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !13762
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !13763
  %3 = icmp eq %union.anon* %1, null, !dbg !13764
  br i1 %3, label %21, label %4, !dbg !13766

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13767
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13769
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13770
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13127, metadata !DIExpression()) #24, !dbg !13771
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13133, metadata !DIExpression()) #24, !dbg !13771
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !13773
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13134, metadata !DIExpression()) #24, !dbg !13771
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13774
  br i1 %8, label %19, label %9, !dbg !13773

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13134, metadata !DIExpression()) #24, !dbg !13771
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13775
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13134, metadata !DIExpression()) #24, !dbg !13771
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !13776
  %13 = icmp sgt i32 %12, 0, !dbg !13777
  br i1 %13, label %14, label %16, !dbg !13778

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13779
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !13780
  br label %21, !dbg !13781

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !13774
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13134, metadata !DIExpression()) #24, !dbg !13771
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13774
  br i1 %18, label %19, label %9, !dbg !13773, !llvm.loop !13782

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13784
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !13785
  br label %21, !dbg !13786

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13788 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13793, metadata !DIExpression()), !dbg !13794
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13792, metadata !DIExpression()), !dbg !13794
  %4 = icmp eq i64 %3, -1, !dbg !13795
  br i1 %4, label %6, label %5, !dbg !13797

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.144(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !13798
  br label %6, !dbg !13800

6:                                                ; preds = %5, %2
  ret void, !dbg !13801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.144(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13802 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13805, metadata !DIExpression()), !dbg !13806
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13804, metadata !DIExpression()), !dbg !13806
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13807
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13808
  ret void, !dbg !13809
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13810 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13812, metadata !DIExpression()), !dbg !13820
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13821
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13821
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13813, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.value(metadata i32 0, metadata !13814, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13823
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13825, !srcloc !12942
  call void @llvm.dbg.value(metadata i32 undef, metadata !12939, metadata !DIExpression()) #24, !dbg !13827
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13827
  call void @llvm.dbg.value(metadata i32 undef, metadata !12933, metadata !DIExpression()) #24, !dbg !13823
  call void @llvm.dbg.value(metadata i32 undef, metadata !13816, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.value(metadata i32 undef, metadata !13814, metadata !DIExpression()), !dbg !13822
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13828
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13829
  %7 = load i8, i8* %6, align 1, !dbg !13829
  %8 = and i8 %7, 40, !dbg !13830
  %9 = icmp eq i8 %8, 0, !dbg !13830
  call void @llvm.dbg.value(metadata i1 %9, metadata !13817, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13831
  br i1 %9, label %10, label %17, !dbg !13832

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13833
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !13833
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !13833
  %14 = icmp eq %union.anon* %13, null, !dbg !13837
  br i1 %14, label %16, label %15, !dbg !13838

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !13839
  br label %16, !dbg !13841

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.143(%struct.k_thread* noundef nonnull %3) #26, !dbg !13842
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !13843
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !13844
  br label %17, !dbg !13845

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13825
  call void @llvm.dbg.value(metadata i32 %18, metadata !12939, metadata !DIExpression()) #24, !dbg !13827
  call void @llvm.dbg.value(metadata i32 %18, metadata !12933, metadata !DIExpression()) #24, !dbg !13823
  call void @llvm.dbg.value(metadata i32 %18, metadata !13816, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.value(metadata i32 undef, metadata !12954, metadata !DIExpression()) #24, !dbg !13846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13846
  call void @llvm.dbg.value(metadata i32 undef, metadata !12962, metadata !DIExpression()) #24, !dbg !13848
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !13850, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 1, metadata !13814, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.value(metadata i32 undef, metadata !13814, metadata !DIExpression()), !dbg !13822
  ret void, !dbg !13851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13852 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13854, metadata !DIExpression()), !dbg !13855
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !13856
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !13857
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13858
  store %union.anon* null, %union.anon** %2, align 8, !dbg !13859
  ret void, !dbg !13860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13863, metadata !DIExpression()), !dbg !13864
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13865
  %3 = load i8, i8* %2, align 1, !dbg !13866
  %4 = and i8 %3, -3, !dbg !13866
  store i8 %4, i8* %2, align 1, !dbg !13866
  ret void, !dbg !13867
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13868 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13870, metadata !DIExpression()), !dbg !13871
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13872
  br i1 %2, label %3, label %7, !dbg !13874

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13096, metadata !DIExpression()) #24, !dbg !13875
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13878
  %5 = load i8, i8* %4, align 1, !dbg !13879
  %6 = and i8 %5, 127, !dbg !13879
  store i8 %6, i8* %4, align 1, !dbg !13879
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13104, metadata !DIExpression()) #24, !dbg !13880
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13882
  br label %7, !dbg !13883

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13884
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13885
  %10 = zext i1 %9 to i32, !dbg !13885
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !13886
  ret void, !dbg !13887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13888 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13890, metadata !DIExpression()), !dbg !13891
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13892
  %3 = load i8, i8* %2, align 1, !dbg !13893
  %4 = or i8 %3, 2, !dbg !13893
  store i8 %4, i8* %2, align 1, !dbg !13893
  ret void, !dbg !13894
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !13895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13897, metadata !DIExpression()), !dbg !13901
  call void @llvm.dbg.value(metadata i32 0, metadata !13898, metadata !DIExpression()), !dbg !13902
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13903
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13905, !srcloc !12942
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13905
  call void @llvm.dbg.value(metadata i32 %3, metadata !12939, metadata !DIExpression()) #24, !dbg !13907
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13907
  call void @llvm.dbg.value(metadata i32 %3, metadata !12933, metadata !DIExpression()) #24, !dbg !13903
  call void @llvm.dbg.value(metadata i32 %3, metadata !13900, metadata !DIExpression()), !dbg !13902
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()), !dbg !13902
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !13908
  call void @llvm.dbg.value(metadata i32 %3, metadata !12954, metadata !DIExpression()) #24, !dbg !13911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13911
  call void @llvm.dbg.value(metadata i32 %3, metadata !12962, metadata !DIExpression()) #24, !dbg !13913
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13915, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 1, metadata !13898, metadata !DIExpression()), !dbg !13902
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()), !dbg !13902
  ret void, !dbg !13916
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13917 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13923, metadata !DIExpression()), !dbg !13928
  call void @llvm.dbg.value(metadata i32 %0, metadata !13921, metadata !DIExpression()), !dbg !13928
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13922, metadata !DIExpression()), !dbg !13928
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13929
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13930
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13931
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13932
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13933
  call void @llvm.dbg.value(metadata i32 %6, metadata !13924, metadata !DIExpression()), !dbg !13928
  call void @llvm.dbg.value(metadata i32 0, metadata !13925, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13935
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13937, !srcloc !12942
  call void @llvm.dbg.value(metadata i32 undef, metadata !12939, metadata !DIExpression()) #24, !dbg !13939
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13939
  call void @llvm.dbg.value(metadata i32 undef, metadata !12933, metadata !DIExpression()) #24, !dbg !13935
  call void @llvm.dbg.value(metadata i32 undef, metadata !13927, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 undef, metadata !13925, metadata !DIExpression()), !dbg !13934
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13940
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13944
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13945
  br i1 %10, label %11, label %12, !dbg !13946

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13947
  br label %12, !dbg !13949

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13937
  call void @llvm.dbg.value(metadata i32 %13, metadata !12939, metadata !DIExpression()) #24, !dbg !13939
  call void @llvm.dbg.value(metadata i32 %13, metadata !12933, metadata !DIExpression()) #24, !dbg !13935
  call void @llvm.dbg.value(metadata i32 %13, metadata !13927, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 undef, metadata !12954, metadata !DIExpression()) #24, !dbg !13950
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13950
  call void @llvm.dbg.value(metadata i32 undef, metadata !12962, metadata !DIExpression()) #24, !dbg !13952
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !13954, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 1, metadata !13925, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 undef, metadata !13925, metadata !DIExpression()), !dbg !13934
  ret i32 %6, !dbg !13955
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13956 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13961, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.value(metadata i64 undef, metadata !13963, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13960, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13962, metadata !DIExpression()), !dbg !13964
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13965
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13966
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13967
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13969, !srcloc !12942
  call void @llvm.dbg.value(metadata i32 undef, metadata !12939, metadata !DIExpression()) #24, !dbg !13971
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13971
  call void @llvm.dbg.value(metadata i32 undef, metadata !12933, metadata !DIExpression()) #24, !dbg !13967
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13972
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !13973
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !13538, metadata !DIExpression()) #24, !dbg !13974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13543, metadata !DIExpression()) #24, !dbg !13974
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !13976
  ret i32 %9, !dbg !13977
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13978 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13982, metadata !DIExpression()), !dbg !13987
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13983, metadata !DIExpression()), !dbg !13987
  call void @llvm.dbg.value(metadata i32 0, metadata !13984, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !13989
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13991, !srcloc !12942
  call void @llvm.dbg.value(metadata i32 undef, metadata !12939, metadata !DIExpression()) #24, !dbg !13993
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !13993
  call void @llvm.dbg.value(metadata i32 undef, metadata !12933, metadata !DIExpression()) #24, !dbg !13989
  call void @llvm.dbg.value(metadata i32 undef, metadata !13986, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13983, metadata !DIExpression()), !dbg !13987
  call void @llvm.dbg.value(metadata i32 undef, metadata !13984, metadata !DIExpression()), !dbg !13988
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !13994
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13983, metadata !DIExpression()), !dbg !13987
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13997
  br i1 %5, label %7, label %6, !dbg !13999

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14000
  br label %7, !dbg !14002

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13991
  call void @llvm.dbg.value(metadata i32 %8, metadata !12939, metadata !DIExpression()) #24, !dbg !13993
  call void @llvm.dbg.value(metadata i32 %8, metadata !12933, metadata !DIExpression()) #24, !dbg !13989
  call void @llvm.dbg.value(metadata i32 %8, metadata !13986, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.value(metadata i32 undef, metadata !12954, metadata !DIExpression()) #24, !dbg !14003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14003
  call void @llvm.dbg.value(metadata i32 undef, metadata !12962, metadata !DIExpression()) #24, !dbg !14005
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !14007, !srcloc !12968
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13983, metadata !DIExpression()), !dbg !13987
  call void @llvm.dbg.value(metadata i32 undef, metadata !13984, metadata !DIExpression()), !dbg !13988
  ret %struct.k_thread* %4, !dbg !14008
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14009 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14011, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14012, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.value(metadata i32 0, metadata !14013, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !14018
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14020, !srcloc !12942
  call void @llvm.dbg.value(metadata i32 undef, metadata !12939, metadata !DIExpression()) #24, !dbg !14022
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !14022
  call void @llvm.dbg.value(metadata i32 undef, metadata !12933, metadata !DIExpression()) #24, !dbg !14018
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14012, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()), !dbg !14017
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14023
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14012, metadata !DIExpression()), !dbg !14016
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14026
  br i1 %5, label %8, label %6, !dbg !14028

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14029
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14031
  br label %8, !dbg !14032

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14020
  call void @llvm.dbg.value(metadata i32 %9, metadata !12939, metadata !DIExpression()) #24, !dbg !14022
  call void @llvm.dbg.value(metadata i32 %9, metadata !12933, metadata !DIExpression()) #24, !dbg !14018
  call void @llvm.dbg.value(metadata i32 %9, metadata !14015, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 undef, metadata !12954, metadata !DIExpression()) #24, !dbg !14033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !12962, metadata !DIExpression()) #24, !dbg !14035
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !14037, !srcloc !12968
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14012, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()), !dbg !14017
  ret %struct.k_thread* %4, !dbg !14038
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14039 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14041, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13897, metadata !DIExpression()) #24, !dbg !14043
  call void @llvm.dbg.value(metadata i32 0, metadata !13898, metadata !DIExpression()) #24, !dbg !14045
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !14046
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14048, !srcloc !12942
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14048
  call void @llvm.dbg.value(metadata i32 %3, metadata !12939, metadata !DIExpression()) #24, !dbg !14050
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !14050
  call void @llvm.dbg.value(metadata i32 %3, metadata !12933, metadata !DIExpression()) #24, !dbg !14046
  call void @llvm.dbg.value(metadata i32 %3, metadata !13900, metadata !DIExpression()) #24, !dbg !14045
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()) #24, !dbg !14045
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14051
  call void @llvm.dbg.value(metadata i32 %3, metadata !12954, metadata !DIExpression()) #24, !dbg !14052
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14052
  call void @llvm.dbg.value(metadata i32 %3, metadata !12962, metadata !DIExpression()) #24, !dbg !14054
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14056, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 1, metadata !13898, metadata !DIExpression()) #24, !dbg !14045
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()) #24, !dbg !14045
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14057
  ret void, !dbg !14058
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14061, metadata !DIExpression()), !dbg !14067
  call void @llvm.dbg.value(metadata i32 %1, metadata !14062, metadata !DIExpression()), !dbg !14067
  call void @llvm.dbg.value(metadata i8 0, metadata !14063, metadata !DIExpression()), !dbg !14067
  call void @llvm.dbg.value(metadata i32 0, metadata !14064, metadata !DIExpression()), !dbg !14068
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !14069
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14071, !srcloc !12942
  call void @llvm.dbg.value(metadata i32 undef, metadata !12939, metadata !DIExpression()) #24, !dbg !14073
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !14073
  call void @llvm.dbg.value(metadata i32 undef, metadata !12933, metadata !DIExpression()) #24, !dbg !14069
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()), !dbg !14068
  call void @llvm.dbg.value(metadata i8 poison, metadata !14063, metadata !DIExpression()), !dbg !14067
  call void @llvm.dbg.value(metadata i32 undef, metadata !14064, metadata !DIExpression()), !dbg !14068
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14074
  call void @llvm.dbg.value(metadata i1 %6, metadata !14063, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14067
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14077

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13096, metadata !DIExpression()) #24, !dbg !14078
  %11 = load i8, i8* %4, align 1, !dbg !14084
  %12 = and i8 %11, 127, !dbg !14084
  store i8 %12, i8* %4, align 1, !dbg !14084
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13104, metadata !DIExpression()) #24, !dbg !14085
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14087
  store i8 %9, i8* %8, align 2, !dbg !14088
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13113, metadata !DIExpression()) #24, !dbg !14089
  %13 = load i8, i8* %4, align 1, !dbg !14091
  %14 = or i8 %13, -128, !dbg !14091
  store i8 %14, i8* %4, align 1, !dbg !14091
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13120, metadata !DIExpression()) #24, !dbg !14092
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13127, metadata !DIExpression()) #24, !dbg !14094
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13133, metadata !DIExpression()) #24, !dbg !14094
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14096
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13134, metadata !DIExpression()) #24, !dbg !14094
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14097
  br i1 %16, label %26, label %17, !dbg !14096

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13134, metadata !DIExpression()) #24, !dbg !14094
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14098
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13134, metadata !DIExpression()) #24, !dbg !14094
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !14099
  %21 = icmp sgt i32 %20, 0, !dbg !14100
  br i1 %21, label %22, label %23, !dbg !14101

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !14102
  br label %27, !dbg !14103

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !14097
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13134, metadata !DIExpression()) #24, !dbg !14094
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14097
  br i1 %25, label %26, label %17, !dbg !14096, !llvm.loop !14104

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !14106
  br label %27, !dbg !14107

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14108
  br label %29, !dbg !14109

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14110
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14071
  call void @llvm.dbg.value(metadata i32 %30, metadata !12939, metadata !DIExpression()) #24, !dbg !14073
  call void @llvm.dbg.value(metadata i32 %30, metadata !12933, metadata !DIExpression()) #24, !dbg !14069
  call void @llvm.dbg.value(metadata i32 %30, metadata !14066, metadata !DIExpression()), !dbg !14068
  call void @llvm.dbg.value(metadata i32 undef, metadata !12954, metadata !DIExpression()) #24, !dbg !14112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14112
  call void @llvm.dbg.value(metadata i32 undef, metadata !12962, metadata !DIExpression()) #24, !dbg !14114
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !14116, !srcloc !12968
  call void @llvm.dbg.value(metadata i8 poison, metadata !14063, metadata !DIExpression()), !dbg !14067
  call void @llvm.dbg.value(metadata i32 undef, metadata !14064, metadata !DIExpression()), !dbg !14068
  ret i1 %6, !dbg !14117
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14118 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14122, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i32 %1, metadata !14123, metadata !DIExpression()), !dbg !14125
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14126
  call void @llvm.dbg.value(metadata i1 %3, metadata !14124, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14125
  br i1 %3, label %4, label %12, !dbg !14127

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14129
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14130
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14130
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14130
  %9 = load i8, i8* %8, align 1, !dbg !14130
  %10 = icmp eq i8 %9, 0, !dbg !14131
  br i1 %10, label %11, label %12, !dbg !14132

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14133
  br label %12, !dbg !14135

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14136
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14137 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14139, metadata !DIExpression()), !dbg !14142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !14143
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14145, !srcloc !12942
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14145
  call void @llvm.dbg.value(metadata i32 %2, metadata !12939, metadata !DIExpression()) #24, !dbg !14147
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !14147
  call void @llvm.dbg.value(metadata i32 %2, metadata !12933, metadata !DIExpression()) #24, !dbg !14143
  call void @llvm.dbg.value(metadata i32 %2, metadata !14141, metadata !DIExpression()), !dbg !14142
  call void @llvm.dbg.value(metadata i32 undef, metadata !14139, metadata !DIExpression()), !dbg !14142
  tail call fastcc void @z_sched_lock() #26, !dbg !14148
  call void @llvm.dbg.value(metadata i32 %2, metadata !12954, metadata !DIExpression()) #24, !dbg !14151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14151
  call void @llvm.dbg.value(metadata i32 %2, metadata !12962, metadata !DIExpression()) #24, !dbg !14153
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14155, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 1, metadata !14139, metadata !DIExpression()), !dbg !14142
  call void @llvm.dbg.value(metadata i32 undef, metadata !14139, metadata !DIExpression()), !dbg !14142
  ret void, !dbg !14156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14157 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14158
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14159
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14159
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14159
  %5 = load i8, i8* %4, align 1, !dbg !14160
  %6 = add i8 %5, -1, !dbg !14160
  store i8 %6, i8* %4, align 1, !dbg !14160
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14161, !srcloc !14163
  ret void, !dbg !14164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14165 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14167, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !14171
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14173, !srcloc !12942
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14173
  call void @llvm.dbg.value(metadata i32 %2, metadata !12939, metadata !DIExpression()) #24, !dbg !14175
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !14175
  call void @llvm.dbg.value(metadata i32 %2, metadata !12933, metadata !DIExpression()) #24, !dbg !14171
  call void @llvm.dbg.value(metadata i32 %2, metadata !14169, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata i32 undef, metadata !14167, metadata !DIExpression()), !dbg !14170
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14176
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14179
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14179
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14179
  %7 = load i8, i8* %6, align 1, !dbg !14180
  %8 = add i8 %7, 1, !dbg !14180
  store i8 %8, i8* %6, align 1, !dbg !14180
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14181
  call void @llvm.dbg.value(metadata i32 %2, metadata !12954, metadata !DIExpression()) #24, !dbg !14182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14182
  call void @llvm.dbg.value(metadata i32 %2, metadata !12962, metadata !DIExpression()) #24, !dbg !14184
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14186, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 1, metadata !14167, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata i32 undef, metadata !14167, metadata !DIExpression()), !dbg !14170
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14187
  ret void, !dbg !14188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14189 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14190
  ret %struct.k_thread* %1, !dbg !14191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14192 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14196, metadata !DIExpression()), !dbg !14201
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14197, metadata !DIExpression()), !dbg !14201
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14202
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14198, metadata !DIExpression()), !dbg !14201
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14203
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14199, metadata !DIExpression()), !dbg !14201
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14204
  call void @llvm.dbg.value(metadata i32 %5, metadata !14200, metadata !DIExpression()), !dbg !14201
  %6 = icmp sgt i32 %5, 0, !dbg !14205
  br i1 %6, label %17, label %7, !dbg !14207

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14208
  br i1 %8, label %17, label %9, !dbg !14210

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14211
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14211
  %12 = load i32, i32* %11, align 8, !dbg !14211
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14213
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14213
  %15 = load i32, i32* %14, align 8, !dbg !14213
  %16 = icmp ult i32 %12, %15, !dbg !14214
  br label %17, !dbg !14215

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14216
  ret i1 %18, !dbg !14217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14218 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14235, metadata !DIExpression()), !dbg !14250
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14236, metadata !DIExpression()), !dbg !14250
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14251
  %5 = load i32, i32* %4, align 4, !dbg !14252
  %6 = add nsw i32 %5, 1, !dbg !14252
  store i32 %6, i32* %4, align 4, !dbg !14252
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14253
  store i32 %5, i32* %7, align 8, !dbg !14254
  %8 = load i32, i32* %4, align 4, !dbg !14255
  %9 = icmp eq i32 %8, 0, !dbg !14256
  br i1 %9, label %10, label %32, !dbg !14257

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14258
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14258
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14238, metadata !DIExpression()), !dbg !14258
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14258
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14258
  %14 = load i32, i32* %13, align 4, !dbg !14258
  %15 = shl i32 %14, 2, !dbg !14258
  %16 = alloca i8, i32 %15, align 8, !dbg !14258
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14258
  store i8* %16, i8** %17, align 4, !dbg !14258
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14258
  %19 = alloca i8, i32 %14, align 8, !dbg !14258
  store i8* %19, i8** %18, align 4, !dbg !14258
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14258
  store i32 -1, i32* %20, align 4, !dbg !14258
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14259
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14247, metadata !DIExpression()), !dbg !14260
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14237, metadata !DIExpression()), !dbg !14250
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14261
  br i1 %22, label %23, label %24, !dbg !14258

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14261
  br label %32, !dbg !14262

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14237, metadata !DIExpression()), !dbg !14250
  %26 = load i32, i32* %4, align 4, !dbg !14263
  %27 = add nsw i32 %26, 1, !dbg !14263
  store i32 %27, i32* %4, align 4, !dbg !14263
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14265
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14265
  store i32 %26, i32* %29, align 8, !dbg !14266
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14259
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14247, metadata !DIExpression()), !dbg !14260
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14237, metadata !DIExpression()), !dbg !14250
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14261
  br i1 %31, label %23, label %24, !dbg !14258, !llvm.loop !14267

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14269
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14270
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !14271
  ret void, !dbg !14272
}

; Function Attrs: optsize
declare !dbg !14273 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14278 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14281 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14283, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14284, metadata !DIExpression()), !dbg !14285
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14286
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14287
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !14288
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14289
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14289
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14291
  br i1 %7, label %8, label %10, !dbg !14292

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14293
  store i32 0, i32* %9, align 4, !dbg !14295
  br label %10, !dbg !14296

10:                                               ; preds = %8, %2
  ret void, !dbg !14297
}

; Function Attrs: optsize
declare !dbg !14298 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14299 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14303, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14304, metadata !DIExpression()), !dbg !14306
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14307
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !14308
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14305, metadata !DIExpression()), !dbg !14306
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14304, metadata !DIExpression()), !dbg !14306
  ret %struct.k_thread* %4, !dbg !14309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14310 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14314, metadata !DIExpression()), !dbg !14315
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !14316
  ret %struct.rbnode* %2, !dbg !14317
}

; Function Attrs: optsize
declare !dbg !14318 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !14321 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14333, metadata !DIExpression()), !dbg !14337
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14338
  %3 = load i32, i32* %2, align 4, !dbg !14338
  %4 = icmp eq i32 %3, 0, !dbg !14340
  br i1 %4, label %10, label %5, !dbg !14341

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14334, metadata !DIExpression()), !dbg !14337
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14342, !range !3462
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14343
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14335, metadata !DIExpression()), !dbg !14337
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !14344
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14336, metadata !DIExpression()), !dbg !14337
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14334, metadata !DIExpression()), !dbg !14337
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14337
  ret %struct.k_thread* %11, !dbg !14345
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14346 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14350, metadata !DIExpression()), !dbg !14353
  call void @llvm.dbg.value(metadata i32 0, metadata !14351, metadata !DIExpression()), !dbg !14353
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14354
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14352, metadata !DIExpression()), !dbg !14353
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14355
  br i1 %3, label %8, label %4, !dbg !14356

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14357
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14359
  call void @llvm.dbg.value(metadata i32 1, metadata !14351, metadata !DIExpression()), !dbg !14353
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14354
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14352, metadata !DIExpression()), !dbg !14353
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14355
  br i1 %7, label %8, label %4, !dbg !14356, !llvm.loop !14360

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14353
  ret i32 %9, !dbg !14362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !14363 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14365, metadata !DIExpression()), !dbg !14366
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14367
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !14368
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14369
  ret %struct.k_thread* %4, !dbg !14370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !14371 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14380, metadata !DIExpression()), !dbg !14381
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !14382
  tail call fastcc void @sys_dlist_init.151(%struct._dnode* noundef nonnull %2) #26, !dbg !14383
  ret void, !dbg !14384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.151(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14385 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14389, metadata !DIExpression()), !dbg !14390
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14391
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14392
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14393
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14394
  ret void, !dbg !14395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !14396 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !14397
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !14398
  ret void, !dbg !14399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !14400 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14405, metadata !DIExpression()), !dbg !14406
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14407
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14407
  %4 = load i8, i8* %3, align 2, !dbg !14407
  %5 = sext i8 %4 to i32, !dbg !14408
  ret i32 %5, !dbg !14409
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14410 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14414, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i32 %1, metadata !14415, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14416, metadata !DIExpression()), !dbg !14417
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14418
  ret void, !dbg !14419
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !14420 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !14421
  br i1 %1, label %8, label %2, !dbg !14422

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !14423
  br i1 %3, label %8, label %4, !dbg !14424

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14425
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !14426
  %7 = xor i1 %6, true, !dbg !14424
  br label %8, !dbg !14424

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !14427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !14428 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14429, !range !6611
  %2 = icmp eq i8 %1, 0, !dbg !14429
  ret i1 %2, !dbg !14430
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !14431 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !14434
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14436, !srcloc !12942
  call void @llvm.dbg.value(metadata i32 undef, metadata !12939, metadata !DIExpression()) #24, !dbg !14438
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !14438
  call void @llvm.dbg.value(metadata i32 undef, metadata !12933, metadata !DIExpression()) #24, !dbg !14434
  call void @llvm.dbg.value(metadata i32 undef, metadata !14433, metadata !DIExpression()), !dbg !14439
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14440
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13096, metadata !DIExpression()) #24, !dbg !14443
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !14445
  %4 = load i8, i8* %3, align 1, !dbg !14446
  %5 = and i8 %4, 127, !dbg !14446
  store i8 %5, i8* %3, align 1, !dbg !14446
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13104, metadata !DIExpression()) #24, !dbg !14447
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !14449
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14450
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13113, metadata !DIExpression()) #24, !dbg !14451
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !14453
  %8 = load i8, i8* %7, align 1, !dbg !14454
  %9 = or i8 %8, -128, !dbg !14454
  store i8 %9, i8* %7, align 1, !dbg !14454
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13120, metadata !DIExpression()) #24, !dbg !14455
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13127, metadata !DIExpression()) #24, !dbg !14457
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13133, metadata !DIExpression()) #24, !dbg !14457
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14459
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13134, metadata !DIExpression()) #24, !dbg !14457
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14460
  br i1 %11, label %22, label %12, !dbg !14459

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13134, metadata !DIExpression()) #24, !dbg !14457
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14461
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13134, metadata !DIExpression()) #24, !dbg !14457
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !14462
  %16 = icmp sgt i32 %15, 0, !dbg !14463
  br i1 %16, label %17, label %19, !dbg !14464

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14465
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14466
  br label %24, !dbg !14467

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !14460
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13134, metadata !DIExpression()) #24, !dbg !14457
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14460
  br i1 %21, label %22, label %12, !dbg !14459, !llvm.loop !14468

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14470
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !14471
  br label %24, !dbg !14472

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !14436
  call void @llvm.dbg.value(metadata i32 %25, metadata !12939, metadata !DIExpression()) #24, !dbg !14438
  call void @llvm.dbg.value(metadata i32 %25, metadata !12933, metadata !DIExpression()) #24, !dbg !14434
  call void @llvm.dbg.value(metadata i32 %25, metadata !14433, metadata !DIExpression()), !dbg !14439
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14473
  call void @llvm.dbg.value(metadata i32 undef, metadata !13538, metadata !DIExpression()) #24, !dbg !14474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13543, metadata !DIExpression()) #24, !dbg !14474
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !14476
  ret void, !dbg !14477
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !14478 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14482, metadata !DIExpression()), !dbg !14485
  %3 = icmp eq i64 %2, -1, !dbg !14486
  br i1 %3, label %4, label %6, !dbg !14488

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14489
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !14491
  br label %11, !dbg !14492

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14483, metadata !DIExpression()), !dbg !14485
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !14493
  %8 = sext i32 %7 to i64, !dbg !14493
  call void @llvm.dbg.value(metadata i64 %8, metadata !14483, metadata !DIExpression()), !dbg !14485
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !14494
  %10 = trunc i64 %9 to i32, !dbg !14494
  call void @llvm.dbg.value(metadata i32 %10, metadata !14484, metadata !DIExpression()), !dbg !14485
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !14485
  ret i32 %12, !dbg !14495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14500, metadata !DIExpression()), !dbg !14501
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14502, !srcloc !14504
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !14505
  ret void, !dbg !14506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !14507 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14511, metadata !DIExpression()), !dbg !14515
  %2 = icmp eq i64 %0, 0, !dbg !14516
  br i1 %2, label %3, label %4, !dbg !14518

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !14519
  br label %29, !dbg !14521

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !14513, metadata !DIExpression()), !dbg !14515
  %5 = icmp sgt i64 %0, -3, !dbg !14522
  br i1 %5, label %6, label %10, !dbg !14524

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14525
  %8 = trunc i64 %0 to i32, !dbg !14527
  %9 = add i32 %7, %8, !dbg !14527
  call void @llvm.dbg.value(metadata i32 %9, metadata !14512, metadata !DIExpression()), !dbg !14515
  br label %13, !dbg !14528

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !14529
  %12 = sub i32 -2, %11, !dbg !14529
  call void @llvm.dbg.value(metadata i32 %12, metadata !14512, metadata !DIExpression()), !dbg !14515
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !14531
  call void @llvm.dbg.value(metadata i32 %14, metadata !14512, metadata !DIExpression()), !dbg !14515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !14532
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14534, !srcloc !12942
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14534
  call void @llvm.dbg.value(metadata i32 %16, metadata !12939, metadata !DIExpression()) #24, !dbg !14536
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !14536
  call void @llvm.dbg.value(metadata i32 %16, metadata !12933, metadata !DIExpression()) #24, !dbg !14532
  call void @llvm.dbg.value(metadata i32 %16, metadata !14514, metadata !DIExpression()), !dbg !14515
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14537
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !14538
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !14539
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14540
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14541
  tail call fastcc void @z_add_thread_timeout.144(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !14541
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14542
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !14543
  call void @llvm.dbg.value(metadata i32 %16, metadata !13538, metadata !DIExpression()) #24, !dbg !14544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13543, metadata !DIExpression()) #24, !dbg !14544
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !14546
  %22 = zext i32 %14 to i64, !dbg !14547
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14548
  %24 = zext i32 %23 to i64, !dbg !14548
  %25 = sub nsw i64 %22, %24, !dbg !14549
  call void @llvm.dbg.value(metadata i64 %25, metadata !14511, metadata !DIExpression()), !dbg !14515
  %26 = icmp sgt i64 %25, 0, !dbg !14550
  %27 = select i1 %26, i64 %25, i64 0, !dbg !14550
  %28 = trunc i64 %27 to i32, !dbg !14550
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !14515
  ret i32 %30, !dbg !14551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14552 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14554, metadata !DIExpression()), !dbg !14555
  call void @llvm.dbg.value(metadata i64 %0, metadata !12974, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i32 10000, metadata !12977, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i32 1000, metadata !12978, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i8 1, metadata !12979, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i1 false, metadata !12980, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14556
  call void @llvm.dbg.value(metadata i1 false, metadata !12981, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14556
  call void @llvm.dbg.value(metadata i8 0, metadata !12982, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i1 false, metadata !12983, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14556
  call void @llvm.dbg.value(metadata i1 true, metadata !12984, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14556
  call void @llvm.dbg.value(metadata i64 0, metadata !12985, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i64 0, metadata !12985, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i64 %0, metadata !12974, metadata !DIExpression()), !dbg !14556
  %2 = udiv i64 %0, 10, !dbg !14558
  ret i64 %2, !dbg !14562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !14563 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14564, !srcloc !14566
  tail call void @z_impl_k_yield() #26, !dbg !14567
  ret void, !dbg !14568
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !14569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14573, metadata !DIExpression()), !dbg !14575
  %2 = sext i32 %0 to i64, !dbg !14576
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !14577
  call void @llvm.dbg.value(metadata i64 %3, metadata !14574, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14575
  %4 = shl i64 %3, 32, !dbg !14578
  %5 = ashr exact i64 %4, 32, !dbg !14578
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !14579
  call void @llvm.dbg.value(metadata i32 %6, metadata !14574, metadata !DIExpression()), !dbg !14575
  %7 = sext i32 %6 to i64, !dbg !14580
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !14581
  %9 = trunc i64 %8 to i32, !dbg !14581
  ret i32 %9, !dbg !14582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !14583 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14585, metadata !DIExpression()), !dbg !14586
  call void @llvm.dbg.value(metadata i64 %0, metadata !12974, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12977, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.value(metadata i32 10000, metadata !12978, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.value(metadata i8 1, metadata !12979, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.value(metadata i1 false, metadata !12980, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14587
  call void @llvm.dbg.value(metadata i1 true, metadata !12981, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14587
  call void @llvm.dbg.value(metadata i8 0, metadata !12982, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.value(metadata i1 false, metadata !12983, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14587
  call void @llvm.dbg.value(metadata i1 true, metadata !12984, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14587
  call void @llvm.dbg.value(metadata i64 0, metadata !12985, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.value(metadata i64 0, metadata !12985, metadata !DIExpression()), !dbg !14587
  %2 = add i64 %0, 99, !dbg !14589
  call void @llvm.dbg.value(metadata i64 %2, metadata !12974, metadata !DIExpression()), !dbg !14587
  %3 = udiv i64 %2, 100, !dbg !14590
  ret i64 %3, !dbg !14591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14592 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14594, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i64 %0, metadata !12974, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i32 10000, metadata !12977, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12978, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i8 1, metadata !12979, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i1 false, metadata !12980, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14596
  call void @llvm.dbg.value(metadata i1 false, metadata !12981, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14596
  call void @llvm.dbg.value(metadata i8 0, metadata !12982, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i1 true, metadata !12983, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14596
  call void @llvm.dbg.value(metadata i1 false, metadata !12984, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14596
  call void @llvm.dbg.value(metadata i64 0, metadata !12985, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i64 0, metadata !12985, metadata !DIExpression()), !dbg !14596
  %2 = mul i64 %0, 100, !dbg !14598
  ret i64 %2, !dbg !14600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14601 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14603, metadata !DIExpression()), !dbg !14604
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !14605
  br i1 %2, label %14, label %3, !dbg !14607

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14608
  %5 = icmp slt i32 %4, 0, !dbg !14610
  br i1 %5, label %6, label %10, !dbg !14611

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14612
  %8 = load i8, i8* %7, align 1, !dbg !14612
  %9 = icmp eq i8 %8, 16, !dbg !14615
  br i1 %9, label %10, label %14, !dbg !14616

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14617
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14618
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14619, !srcloc !13578
  call void @llvm.dbg.value(metadata i32 %11, metadata !13574, metadata !DIExpression()) #24, !dbg !14623
  %12 = icmp eq i32 %11, 0, !dbg !14624
  br i1 %12, label %13, label %14, !dbg !14625

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14626
  br label %14, !dbg !14628

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14630 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14632, metadata !DIExpression()), !dbg !14633
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14634
  %3 = load i8, i8* %2, align 1, !dbg !14634
  %4 = and i8 %3, 2, !dbg !14635
  %5 = icmp ne i8 %4, 0, !dbg !14636
  ret i1 %5, !dbg !14637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !14638 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14643
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14642, metadata !DIExpression()), !dbg !14644
  ret %struct.k_thread* %1, !dbg !14645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14646 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14647, !srcloc !13578
  call void @llvm.dbg.value(metadata i32 %1, metadata !13574, metadata !DIExpression()) #24, !dbg !14650
  %2 = icmp eq i32 %1, 0, !dbg !14651
  br i1 %2, label %3, label %8, !dbg !14652

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14653
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !14654
  %6 = icmp ne i32 %5, 0, !dbg !14652
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14655
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14656 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14658, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !14661
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14663, !srcloc !12942
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14663
  call void @llvm.dbg.value(metadata i32 %3, metadata !12939, metadata !DIExpression()) #24, !dbg !14665
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !14665
  call void @llvm.dbg.value(metadata i32 %3, metadata !12933, metadata !DIExpression()) #24, !dbg !14661
  call void @llvm.dbg.value(metadata i32 %3, metadata !14659, metadata !DIExpression()), !dbg !14660
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14666
  %5 = load i8, i8* %4, align 4, !dbg !14666
  %6 = and i8 %5, 1, !dbg !14668
  %7 = icmp eq i8 %6, 0, !dbg !14669
  br i1 %7, label %9, label %8, !dbg !14670

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12954, metadata !DIExpression()) #24, !dbg !14671
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14671
  call void @llvm.dbg.value(metadata i32 %3, metadata !12962, metadata !DIExpression()) #24, !dbg !14674
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14676, !srcloc !12968
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !14677, !srcloc !14679
  br label %24, !dbg !14680

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14681
  %11 = load i8, i8* %10, align 1, !dbg !14681
  %12 = and i8 %11, 8, !dbg !14683
  %13 = icmp eq i8 %12, 0, !dbg !14684
  br i1 %13, label %15, label %14, !dbg !14685

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12954, metadata !DIExpression()) #24, !dbg !14686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14686
  call void @llvm.dbg.value(metadata i32 %3, metadata !12962, metadata !DIExpression()) #24, !dbg !14689
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14691, !srcloc !12968
  br label %24, !dbg !14692

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !14693
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14694
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14696
  br i1 %17, label %18, label %23, !dbg !14697

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14698, !srcloc !13578
  call void @llvm.dbg.value(metadata i32 %19, metadata !13574, metadata !DIExpression()) #24, !dbg !14701
  %20 = icmp eq i32 %19, 0, !dbg !14702
  br i1 %20, label %21, label %23, !dbg !14703

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !13538, metadata !DIExpression()) #24, !dbg !14704
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13543, metadata !DIExpression()) #24, !dbg !14704
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14707
  br label %23, !dbg !14708

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12954, metadata !DIExpression()) #24, !dbg !14709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14709
  call void @llvm.dbg.value(metadata i32 %3, metadata !12962, metadata !DIExpression()) #24, !dbg !14711
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14713, !srcloc !12968
  br label %24, !dbg !14714

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !14714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14715 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14717, metadata !DIExpression()), !dbg !14718
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14719
  %3 = load i8, i8* %2, align 1, !dbg !14719
  %4 = and i8 %3, 8, !dbg !14721
  %5 = icmp eq i8 %4, 0, !dbg !14722
  br i1 %5, label %6, label %20, !dbg !14723

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14724
  %8 = or i8 %7, 8, !dbg !14724
  store i8 %8, i8* %2, align 1, !dbg !14724
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !14726
  br i1 %9, label %10, label %12, !dbg !14728

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13096, metadata !DIExpression()) #24, !dbg !14729
  %11 = and i8 %8, 95, !dbg !14732
  store i8 %11, i8* %2, align 1, !dbg !14732
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13104, metadata !DIExpression()) #24, !dbg !14733
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !14735
  br label %12, !dbg !14736

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14737
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14737
  %15 = icmp eq %union.anon* %14, null, !dbg !14739
  br i1 %15, label %17, label %16, !dbg !14740

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14741
  br label %17, !dbg !14743

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14744
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14745
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !14746
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14747
  br label %20, !dbg !14748

20:                                               ; preds = %17, %1
  ret void, !dbg !14749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14750 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14754, metadata !DIExpression()), !dbg !14756
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14757
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14755, metadata !DIExpression()), !dbg !14756
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14758
  br i1 %3, label %10, label %4, !dbg !14759

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14760
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14762
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14763, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i32 0, metadata !14768, metadata !DIExpression()), !dbg !14769
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14771
  store i32 0, i32* %7, align 4, !dbg !14772
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14773
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14757
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14755, metadata !DIExpression()), !dbg !14756
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14758
  br i1 %9, label %10, label %4, !dbg !14759, !llvm.loop !14774

10:                                               ; preds = %4, %1
  ret void, !dbg !14776
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14777 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14782, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14781, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !14786
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14788, !srcloc !12942
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14788
  call void @llvm.dbg.value(metadata i32 %4, metadata !12939, metadata !DIExpression()) #24, !dbg !14790
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !14790
  call void @llvm.dbg.value(metadata i32 %4, metadata !12933, metadata !DIExpression()) #24, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %4, metadata !14783, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i32 0, metadata !14784, metadata !DIExpression()), !dbg !14785
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14791
  %6 = load i8, i8* %5, align 1, !dbg !14791
  %7 = and i8 %6, 8, !dbg !14793
  %8 = icmp eq i8 %7, 0, !dbg !14794
  br i1 %8, label %9, label %24, !dbg !14795

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14782, metadata !DIExpression()), !dbg !14785
  %11 = icmp eq i64 %10, 0, !dbg !14796
  br i1 %11, label %24, label %12, !dbg !14798

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14799
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14801
  br i1 %14, label %24, label %15, !dbg !14802

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14803
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14803
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14804
  %19 = icmp eq %union.anon* %17, %18, !dbg !14805
  br i1 %19, label %24, label %20, !dbg !14806

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14807
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !14809
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14810
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !14811
  call void @llvm.dbg.value(metadata i32 %4, metadata !13538, metadata !DIExpression()) #24, !dbg !14812
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13543, metadata !DIExpression()) #24, !dbg !14812
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !14814
  call void @llvm.dbg.value(metadata i32 %23, metadata !14784, metadata !DIExpression()), !dbg !14785
  br label %26, !dbg !14815

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14816
  call void @llvm.dbg.value(metadata i32 %25, metadata !14784, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i32 %4, metadata !12954, metadata !DIExpression()) #24, !dbg !14817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14817
  call void @llvm.dbg.value(metadata i32 %4, metadata !12962, metadata !DIExpression()) #24, !dbg !14819
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14821, !srcloc !12968
  br label %26, !dbg !14822

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14785
  ret i32 %27, !dbg !14823
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14824 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14828, metadata !DIExpression()), !dbg !14836
  call void @llvm.dbg.value(metadata i32 %1, metadata !14829, metadata !DIExpression()), !dbg !14836
  call void @llvm.dbg.value(metadata i8* %2, metadata !14830, metadata !DIExpression()), !dbg !14836
  call void @llvm.dbg.value(metadata i8 0, metadata !14832, metadata !DIExpression()), !dbg !14836
  call void @llvm.dbg.value(metadata i32 0, metadata !14833, metadata !DIExpression()), !dbg !14837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12927, metadata !DIExpression()) #24, !dbg !14838
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14840, !srcloc !12942
  call void @llvm.dbg.value(metadata i32 undef, metadata !12939, metadata !DIExpression()) #24, !dbg !14842
  call void @llvm.dbg.value(metadata i32 undef, metadata !12940, metadata !DIExpression()) #24, !dbg !14842
  call void @llvm.dbg.value(metadata i32 undef, metadata !12933, metadata !DIExpression()) #24, !dbg !14838
  call void @llvm.dbg.value(metadata i32 undef, metadata !14835, metadata !DIExpression()), !dbg !14837
  call void @llvm.dbg.value(metadata i8 poison, metadata !14832, metadata !DIExpression()), !dbg !14836
  call void @llvm.dbg.value(metadata i32 undef, metadata !14833, metadata !DIExpression()), !dbg !14837
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !14843
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14831, metadata !DIExpression()), !dbg !14836
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14846
  br i1 %7, label %12, label %8, !dbg !14848

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14849, metadata !DIExpression()), !dbg !14857
  call void @llvm.dbg.value(metadata i32 %1, metadata !14855, metadata !DIExpression()), !dbg !14857
  call void @llvm.dbg.value(metadata i8* %2, metadata !14856, metadata !DIExpression()), !dbg !14857
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14763, metadata !DIExpression()), !dbg !14860
  call void @llvm.dbg.value(metadata i32 %1, metadata !14768, metadata !DIExpression()), !dbg !14860
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !14862
  store i32 %1, i32* %9, align 4, !dbg !14863
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !14864
  store i8* %2, i8** %10, align 4, !dbg !14865
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !14866
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !14867
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !14868
  call void @llvm.dbg.value(metadata i8 1, metadata !14832, metadata !DIExpression()), !dbg !14836
  br label %12, !dbg !14869

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14840
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14840
  call void @llvm.dbg.value(metadata i32 %14, metadata !12939, metadata !DIExpression()) #24, !dbg !14842
  call void @llvm.dbg.value(metadata i32 %14, metadata !12933, metadata !DIExpression()) #24, !dbg !14838
  call void @llvm.dbg.value(metadata i32 %14, metadata !14835, metadata !DIExpression()), !dbg !14837
  call void @llvm.dbg.value(metadata i8 poison, metadata !14832, metadata !DIExpression()), !dbg !14836
  call void @llvm.dbg.value(metadata i32 undef, metadata !12954, metadata !DIExpression()) #24, !dbg !14870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14870
  call void @llvm.dbg.value(metadata i32 undef, metadata !12962, metadata !DIExpression()) #24, !dbg !14872
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !14874, !srcloc !12968
  call void @llvm.dbg.value(metadata i32 undef, metadata !14833, metadata !DIExpression()), !dbg !14837
  ret i1 %13, !dbg !14875
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14876 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14882, metadata !DIExpression()), !dbg !14887
  call void @llvm.dbg.value(metadata i64 undef, metadata !14884, metadata !DIExpression()), !dbg !14887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14881, metadata !DIExpression()), !dbg !14887
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14883, metadata !DIExpression()), !dbg !14887
  call void @llvm.dbg.value(metadata i8** %4, metadata !14885, metadata !DIExpression()), !dbg !14887
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !14888
  call void @llvm.dbg.value(metadata i32 %6, metadata !14886, metadata !DIExpression()), !dbg !14887
  %7 = icmp eq i8** %4, null, !dbg !14889
  br i1 %7, label %12, label %8, !dbg !14891

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14892
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14894
  %11 = load i8*, i8** %10, align 4, !dbg !14894
  store i8* %11, i8** %4, align 4, !dbg !14895
  br label %12, !dbg !14896

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14898 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !14900
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !14901
  ret void, !dbg !14902
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14903 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14913, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14911, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14912, metadata !DIExpression()), !dbg !14930
  %5 = icmp eq i64 %4, -1, !dbg !14931
  br i1 %5, label %55, label %6, !dbg !14933

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14934
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14935
  call void @llvm.dbg.value(metadata i32 0, metadata !14914, metadata !DIExpression()), !dbg !14936
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14937, metadata !DIExpression()) #24, !dbg !14944
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14946, !srcloc !14952
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14946
  call void @llvm.dbg.value(metadata i32 %9, metadata !14949, metadata !DIExpression()) #24, !dbg !14953
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #24, !dbg !14953
  call void @llvm.dbg.value(metadata i32 %9, metadata !14943, metadata !DIExpression()) #24, !dbg !14944
  call void @llvm.dbg.value(metadata i32 %9, metadata !14920, metadata !DIExpression()), !dbg !14936
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()), !dbg !14936
  %10 = icmp slt i64 %4, -1, !dbg !14954
  br i1 %10, label %11, label %17, !dbg !14955

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14956
  %13 = add i64 %4, %12, !dbg !14957
  %14 = sub i64 -2, %13, !dbg !14957
  call void @llvm.dbg.value(metadata i64 %14, metadata !14924, metadata !DIExpression()), !dbg !14958
  %15 = icmp sgt i64 %14, 1, !dbg !14959
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14959
  br label %22, !dbg !14960

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14961
  %19 = tail call fastcc i32 @elapsed.162() #26, !dbg !14963
  %20 = sext i32 %19 to i64, !dbg !14963
  %21 = add nsw i64 %18, %20, !dbg !14964
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14965
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14966
  store i64 %23, i64* %24, align 8, !dbg !14967
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !14968
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14921, metadata !DIExpression()), !dbg !14970
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14971
  br i1 %26, label %42, label %27, !dbg !14971

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14972
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14921, metadata !DIExpression()), !dbg !14970
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14976
  %31 = load i64, i64* %30, align 8, !dbg !14976
  %32 = icmp slt i64 %28, %31, !dbg !14977
  br i1 %32, label %33, label %38, !dbg !14978

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14976
  %35 = sub nsw i64 %31, %28, !dbg !14979
  store i64 %35, i64* %34, align 8, !dbg !14979
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !14981
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14982
  tail call fastcc void @sys_dlist_insert.163(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !14983
  br label %44, !dbg !14984

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !14985
  store i64 %39, i64* %24, align 8, !dbg !14985
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !14986
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14921, metadata !DIExpression()), !dbg !14970
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14971
  br i1 %41, label %42, label %27, !dbg !14971, !llvm.loop !14987

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14989
  tail call fastcc void @sys_dlist_append.164(%struct._dnode* noundef %43) #26, !dbg !14992
  br label %44, !dbg !14993

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !14994
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !14995
  br i1 %46, label %47, label %54, !dbg !14996

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !14997
  call void @llvm.dbg.value(metadata i32 %48, metadata !14927, metadata !DIExpression()), !dbg !14998
  %49 = icmp ne i32 %48, 0, !dbg !14999
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15001
  br i1 %52, label %54, label %53, !dbg !15001

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !15002
  br label %54, !dbg !15004

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15005, metadata !DIExpression()) #24, !dbg !15011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15010, metadata !DIExpression()) #24, !dbg !15011
  call void @llvm.dbg.value(metadata i32 %9, metadata !15013, metadata !DIExpression()) #24, !dbg !15016
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15018, !srcloc !15019
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()), !dbg !14936
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.162() unnamed_addr #1 !dbg !15021 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15024
  %2 = icmp eq i32 %1, 0, !dbg !15025
  br i1 %2, label %3, label %5, !dbg !15024

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !15026
  br label %5, !dbg !15024

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15024
  ret i32 %6, !dbg !15027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15028 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.167() #26, !dbg !15034
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15032, metadata !DIExpression()), !dbg !15035
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15036
  ret %struct._timeout* %2, !dbg !15037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.163(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15038 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15042, metadata !DIExpression()), !dbg !15046
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15043, metadata !DIExpression()), !dbg !15046
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15047
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15047
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15044, metadata !DIExpression()), !dbg !15046
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15048
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15049
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15050
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15051
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15052
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15053
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15054
  ret void, !dbg !15055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15056 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15060, metadata !DIExpression()), !dbg !15062
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15063
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.165(%struct._dnode* noundef %2) #26, !dbg !15064
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15061, metadata !DIExpression()), !dbg !15062
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15065
  ret %struct._timeout* %4, !dbg !15066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.164(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15067 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15072, metadata !DIExpression()), !dbg !15075
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15073, metadata !DIExpression()), !dbg !15075
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15076
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15074, metadata !DIExpression()), !dbg !15075
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15077
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15078
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15079
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15080
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15081
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15082
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15083
  ret void, !dbg !15084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15085 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15090
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15087, metadata !DIExpression()), !dbg !15091
  %2 = tail call fastcc i32 @elapsed.162() #26, !dbg !15092
  call void @llvm.dbg.value(metadata i32 %2, metadata !15088, metadata !DIExpression()), !dbg !15091
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15093
  br i1 %3, label %14, label %4, !dbg !15095

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15096
  %6 = load i64, i64* %5, align 8, !dbg !15096
  %7 = sext i32 %2 to i64, !dbg !15097
  %8 = sub nsw i64 %6, %7, !dbg !15098
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15099
  br i1 %9, label %14, label %10, !dbg !15100

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15101
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15101
  %13 = trunc i64 %12 to i32, !dbg !15101
  call void @llvm.dbg.value(metadata i32 %13, metadata !15089, metadata !DIExpression()), !dbg !15091
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15103
  call void @llvm.dbg.value(metadata i32 %15, metadata !15089, metadata !DIExpression()), !dbg !15091
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15104
  %17 = icmp ne i32 %16, 0, !dbg !15106
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15107
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15107
  call void @llvm.dbg.value(metadata i32 %20, metadata !15089, metadata !DIExpression()), !dbg !15091
  ret i32 %20, !dbg !15108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.165(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15109 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15113, metadata !DIExpression()), !dbg !15115
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15114, metadata !DIExpression()), !dbg !15115
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15116
  br i1 %2, label %5, label %3, !dbg !15117

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.166(%struct._dnode* noundef nonnull %0) #26, !dbg !15118
  br label %5, !dbg !15117

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15117
  ret %struct._dnode* %6, !dbg !15119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.166(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15120 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15122, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15123, metadata !DIExpression()), !dbg !15124
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15125
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15126
  br i1 %3, label %7, label %4, !dbg !15127

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15128
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15128
  br label %7, !dbg !15127

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15127
  ret %struct._dnode* %8, !dbg !15129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.167() unnamed_addr #5 !dbg !15130 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15134, metadata !DIExpression()), !dbg !15135
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.168() #26, !dbg !15136
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15136
  ret %struct._dnode* %3, !dbg !15137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.168() unnamed_addr #5 !dbg !15138 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15142, metadata !DIExpression()), !dbg !15143
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15144
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15145
  ret i1 %2, !dbg !15146
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15147 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15151, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata i32 -22, metadata !15152, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata i32 0, metadata !15153, metadata !DIExpression()), !dbg !15157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14937, metadata !DIExpression()) #24, !dbg !15158
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15160, !srcloc !14952
  call void @llvm.dbg.value(metadata i32 undef, metadata !14949, metadata !DIExpression()) #24, !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #24, !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !14943, metadata !DIExpression()) #24, !dbg !15158
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()), !dbg !15157
  call void @llvm.dbg.value(metadata i32 -22, metadata !15152, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata i32 undef, metadata !15153, metadata !DIExpression()), !dbg !15157
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15152, metadata !DIExpression()), !dbg !15156
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.171(%struct._dnode* noundef %3) #26, !dbg !15163
  br i1 %4, label %5, label %6, !dbg !15167

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15168
  call void @llvm.dbg.value(metadata i32 0, metadata !15152, metadata !DIExpression()), !dbg !15156
  br label %6, !dbg !15170

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15156
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15160
  call void @llvm.dbg.value(metadata i32 %8, metadata !14949, metadata !DIExpression()) #24, !dbg !15162
  call void @llvm.dbg.value(metadata i32 %8, metadata !14943, metadata !DIExpression()) #24, !dbg !15158
  call void @llvm.dbg.value(metadata i32 %8, metadata !15155, metadata !DIExpression()), !dbg !15157
  call void @llvm.dbg.value(metadata i32 %7, metadata !15152, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata i32 undef, metadata !15005, metadata !DIExpression()) #24, !dbg !15171
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15010, metadata !DIExpression()) #24, !dbg !15171
  call void @llvm.dbg.value(metadata i32 undef, metadata !15013, metadata !DIExpression()) #24, !dbg !15173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15175, !srcloc !15019
  call void @llvm.dbg.value(metadata i32 undef, metadata !15153, metadata !DIExpression()), !dbg !15157
  ret i32 %7, !dbg !15176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.171(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15177 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15183, metadata !DIExpression()), !dbg !15184
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15185
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15185
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15186
  ret i1 %4, !dbg !15187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15188 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15190, metadata !DIExpression()), !dbg !15191
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15192
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15194
  br i1 %3, label %10, label %4, !dbg !15195

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15196
  %6 = load i64, i64* %5, align 8, !dbg !15196
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15198
  %8 = load i64, i64* %7, align 8, !dbg !15199
  %9 = add nsw i64 %8, %6, !dbg !15199
  store i64 %9, i64* %7, align 8, !dbg !15199
  br label %10, !dbg !15200

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15201
  tail call fastcc void @sys_dlist_remove.172(%struct._dnode* noundef %11) #26, !dbg !15202
  ret void, !dbg !15203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.172(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15204 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15208, metadata !DIExpression()), !dbg !15211
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15212
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15212
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15209, metadata !DIExpression()), !dbg !15211
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15213
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15213
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15210, metadata !DIExpression()), !dbg !15211
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15214
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15215
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15216
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15217
  tail call fastcc void @sys_dnode_init.173(%struct._dnode* noundef %0) #26, !dbg !15218
  ret void, !dbg !15219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.173(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15220 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15222, metadata !DIExpression()), !dbg !15223
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15224
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15225
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15226
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15227
  ret void, !dbg !15228
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15229 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15235, metadata !DIExpression()), !dbg !15240
  call void @llvm.dbg.value(metadata i64 0, metadata !15236, metadata !DIExpression()), !dbg !15240
  call void @llvm.dbg.value(metadata i32 0, metadata !15237, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14937, metadata !DIExpression()) #24, !dbg !15242
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15244, !srcloc !14952
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15244
  call void @llvm.dbg.value(metadata i32 %3, metadata !14949, metadata !DIExpression()) #24, !dbg !15246
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #24, !dbg !15246
  call void @llvm.dbg.value(metadata i32 %3, metadata !14943, metadata !DIExpression()) #24, !dbg !15242
  call void @llvm.dbg.value(metadata i32 %3, metadata !15239, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata i64 0, metadata !15236, metadata !DIExpression()), !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !15237, metadata !DIExpression()), !dbg !15241
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15247
  call void @llvm.dbg.value(metadata i64 %4, metadata !15236, metadata !DIExpression()), !dbg !15240
  call void @llvm.dbg.value(metadata i32 %3, metadata !15005, metadata !DIExpression()) #24, !dbg !15250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15010, metadata !DIExpression()) #24, !dbg !15250
  call void @llvm.dbg.value(metadata i32 %3, metadata !15013, metadata !DIExpression()) #24, !dbg !15252
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15254, !srcloc !15019
  call void @llvm.dbg.value(metadata i32 undef, metadata !15237, metadata !DIExpression()), !dbg !15241
  ret i64 %4, !dbg !15255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15256 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15258, metadata !DIExpression()), !dbg !15262
  call void @llvm.dbg.value(metadata i64 0, metadata !15259, metadata !DIExpression()), !dbg !15262
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.174(%struct._timeout* noundef %0) #26, !dbg !15263
  br i1 %2, label %21, label %3, !dbg !15265

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15266
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15260, metadata !DIExpression()), !dbg !15267
  call void @llvm.dbg.value(metadata i64 0, metadata !15259, metadata !DIExpression()), !dbg !15262
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15268
  br i1 %5, label %16, label %6, !dbg !15270

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15260, metadata !DIExpression()), !dbg !15267
  call void @llvm.dbg.value(metadata i64 %8, metadata !15259, metadata !DIExpression()), !dbg !15262
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15271
  %10 = load i64, i64* %9, align 8, !dbg !15271
  %11 = add nsw i64 %10, %8, !dbg !15273
  call void @llvm.dbg.value(metadata i64 %11, metadata !15259, metadata !DIExpression()), !dbg !15262
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15274
  br i1 %12, label %16, label %13, !dbg !15276

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15277
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15260, metadata !DIExpression()), !dbg !15267
  call void @llvm.dbg.value(metadata i64 %11, metadata !15259, metadata !DIExpression()), !dbg !15262
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15268
  br i1 %15, label %16, label %6, !dbg !15270, !llvm.loop !15278

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15262
  call void @llvm.dbg.value(metadata i64 %17, metadata !15259, metadata !DIExpression()), !dbg !15262
  %18 = tail call fastcc i32 @elapsed.162() #26, !dbg !15280
  %19 = sext i32 %18 to i64, !dbg !15280
  %20 = sub nsw i64 %17, %19, !dbg !15281
  br label %21, !dbg !15282

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15262
  ret i64 %22, !dbg !15283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.174(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15284 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15288, metadata !DIExpression()), !dbg !15289
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15290
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.171(%struct._dnode* noundef %2) #26, !dbg !15291
  %4 = xor i1 %3, true, !dbg !15292
  ret i1 %4, !dbg !15293
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15294 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15296, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata i64 0, metadata !15297, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata i32 0, metadata !15298, metadata !DIExpression()), !dbg !15302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14937, metadata !DIExpression()) #24, !dbg !15303
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15305, !srcloc !14952
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %3, metadata !14949, metadata !DIExpression()) #24, !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #24, !dbg !15307
  call void @llvm.dbg.value(metadata i32 %3, metadata !14943, metadata !DIExpression()) #24, !dbg !15303
  call void @llvm.dbg.value(metadata i32 %3, metadata !15300, metadata !DIExpression()), !dbg !15302
  call void @llvm.dbg.value(metadata i64 0, metadata !15297, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata i32 undef, metadata !15298, metadata !DIExpression()), !dbg !15302
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15308
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15311
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15297, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15301
  call void @llvm.dbg.value(metadata i32 %3, metadata !15005, metadata !DIExpression()) #24, !dbg !15312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15010, metadata !DIExpression()) #24, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %3, metadata !15013, metadata !DIExpression()) #24, !dbg !15314
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15316, !srcloc !15019
  call void @llvm.dbg.value(metadata i32 undef, metadata !15298, metadata !DIExpression()), !dbg !15302
  %6 = add i64 %5, %4, !dbg !15317
  ret i64 %6, !dbg !15318
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15319 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15321, metadata !DIExpression()), !dbg !15325
  call void @llvm.dbg.value(metadata i32 0, metadata !15322, metadata !DIExpression()), !dbg !15326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14937, metadata !DIExpression()) #24, !dbg !15327
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15329, !srcloc !14952
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15329
  call void @llvm.dbg.value(metadata i32 %2, metadata !14949, metadata !DIExpression()) #24, !dbg !15331
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #24, !dbg !15331
  call void @llvm.dbg.value(metadata i32 %2, metadata !14943, metadata !DIExpression()) #24, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %2, metadata !15324, metadata !DIExpression()), !dbg !15326
  call void @llvm.dbg.value(metadata i32 -1, metadata !15321, metadata !DIExpression()), !dbg !15325
  call void @llvm.dbg.value(metadata i32 undef, metadata !15322, metadata !DIExpression()), !dbg !15326
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !15332
  call void @llvm.dbg.value(metadata i32 %3, metadata !15321, metadata !DIExpression()), !dbg !15325
  call void @llvm.dbg.value(metadata i32 %2, metadata !15005, metadata !DIExpression()) #24, !dbg !15335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15010, metadata !DIExpression()) #24, !dbg !15335
  call void @llvm.dbg.value(metadata i32 %2, metadata !15013, metadata !DIExpression()) #24, !dbg !15337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15339, !srcloc !15019
  call void @llvm.dbg.value(metadata i32 undef, metadata !15322, metadata !DIExpression()), !dbg !15326
  ret i32 %3, !dbg !15340
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15343, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i1 %1, metadata !15344, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15353
  call void @llvm.dbg.value(metadata i32 0, metadata !15345, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14937, metadata !DIExpression()) #24, !dbg !15355
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15357, !srcloc !14952
  call void @llvm.dbg.value(metadata i32 undef, metadata !14949, metadata !DIExpression()) #24, !dbg !15359
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #24, !dbg !15359
  call void @llvm.dbg.value(metadata i32 undef, metadata !14943, metadata !DIExpression()) #24, !dbg !15355
  call void @llvm.dbg.value(metadata i32 undef, metadata !15347, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata i32 undef, metadata !15345, metadata !DIExpression()), !dbg !15354
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !15360
  call void @llvm.dbg.value(metadata i32 %4, metadata !15348, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata i1 undef, metadata !15351, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15361
  %5 = icmp slt i32 %4, 2, !dbg !15362
  call void @llvm.dbg.value(metadata i1 %5, metadata !15352, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15361
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !15363
  call void @llvm.dbg.value(metadata i1 %6, metadata !15351, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15361
  br i1 %7, label %11, label %8, !dbg !15363

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !15365
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !15365
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !15367
  br label %11, !dbg !15368

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !15357
  call void @llvm.dbg.value(metadata i32 %12, metadata !14949, metadata !DIExpression()) #24, !dbg !15359
  call void @llvm.dbg.value(metadata i32 %12, metadata !14943, metadata !DIExpression()) #24, !dbg !15355
  call void @llvm.dbg.value(metadata i32 %12, metadata !15347, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata i32 undef, metadata !15005, metadata !DIExpression()) #24, !dbg !15369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15010, metadata !DIExpression()) #24, !dbg !15369
  call void @llvm.dbg.value(metadata i32 undef, metadata !15013, metadata !DIExpression()) #24, !dbg !15371
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !15373, !srcloc !15019
  call void @llvm.dbg.value(metadata i32 1, metadata !15345, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata i32 undef, metadata !15345, metadata !DIExpression()), !dbg !15354
  ret void, !dbg !15374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15379, metadata !DIExpression()), !dbg !15384
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !15385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14937, metadata !DIExpression()) #24, !dbg !15386
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15388, !srcloc !14952
  call void @llvm.dbg.value(metadata i32 undef, metadata !14949, metadata !DIExpression()) #24, !dbg !15390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #24, !dbg !15390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14943, metadata !DIExpression()) #24, !dbg !15386
  call void @llvm.dbg.value(metadata i32 undef, metadata !15380, metadata !DIExpression()), !dbg !15384
  store i32 %0, i32* @announce_remaining, align 4, !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !15380, metadata !DIExpression()), !dbg !15384
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !15391
  %4 = icmp eq %struct._timeout* %3, null, !dbg !15392
  br i1 %4, label %28, label %5, !dbg !15393

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !15394
  %10 = load i64, i64* %9, align 8, !dbg !15394
  %11 = sext i32 %8 to i64, !dbg !15395
  %12 = icmp sgt i64 %10, %11, !dbg !15396
  br i1 %12, label %26, label %13, !dbg !15397

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !15384
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !15381, metadata !DIExpression()), !dbg !15398
  %15 = trunc i64 %10 to i32, !dbg !15399
  call void @llvm.dbg.value(metadata i32 %15, metadata !15383, metadata !DIExpression()), !dbg !15398
  %16 = sext i32 %15 to i64, !dbg !15400
  %17 = load i64, i64* @curr_tick, align 8, !dbg !15401
  %18 = add i64 %17, %16, !dbg !15401
  store i64 %18, i64* @curr_tick, align 8, !dbg !15401
  store i64 0, i64* %9, align 8, !dbg !15402
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !15403
  call void @llvm.dbg.value(metadata i32 %14, metadata !15005, metadata !DIExpression()) #24, !dbg !15404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15010, metadata !DIExpression()) #24, !dbg !15404
  call void @llvm.dbg.value(metadata i32 %14, metadata !15013, metadata !DIExpression()) #24, !dbg !15406
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !15408, !srcloc !15019
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !15409
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !15409
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !15410
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14937, metadata !DIExpression()) #24, !dbg !15411
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15413, !srcloc !14952
  call void @llvm.dbg.value(metadata i32 undef, metadata !14949, metadata !DIExpression()) #24, !dbg !15415
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #24, !dbg !15415
  call void @llvm.dbg.value(metadata i32 undef, metadata !14943, metadata !DIExpression()) #24, !dbg !15411
  call void @llvm.dbg.value(metadata i32 undef, metadata !15380, metadata !DIExpression()), !dbg !15384
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !15416
  %23 = sub nsw i32 %22, %15, !dbg !15416
  store i32 %23, i32* @announce_remaining, align 4, !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !15380, metadata !DIExpression()), !dbg !15384
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !15391
  %25 = icmp eq %struct._timeout* %24, null, !dbg !15392
  br i1 %25, label %28, label %5, !dbg !15393, !llvm.loop !15417

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !15419
  store i64 %27, i64* %9, align 8, !dbg !15419
  br label %32, !dbg !15422

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !15384
  %31 = sext i32 %30 to i64, !dbg !15423
  br label %32, !dbg !15423

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !15423
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !15384
  %36 = load i64, i64* @curr_tick, align 8, !dbg !15424
  %37 = add i64 %36, %33, !dbg !15424
  store i64 %37, i64* @curr_tick, align 8, !dbg !15424
  store i32 0, i32* @announce_remaining, align 4, !dbg !15425
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !15426
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !15427
  call void @llvm.dbg.value(metadata i32 %35, metadata !15005, metadata !DIExpression()) #24, !dbg !15428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15010, metadata !DIExpression()) #24, !dbg !15428
  call void @llvm.dbg.value(metadata i32 %35, metadata !15013, metadata !DIExpression()) #24, !dbg !15430
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !15432, !srcloc !15019
  ret void, !dbg !15433
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15434 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15438, metadata !DIExpression()), !dbg !15442
  call void @llvm.dbg.value(metadata i32 0, metadata !15439, metadata !DIExpression()), !dbg !15443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14937, metadata !DIExpression()) #24, !dbg !15444
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15446, !srcloc !14952
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15446
  call void @llvm.dbg.value(metadata i32 %2, metadata !14949, metadata !DIExpression()) #24, !dbg !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #24, !dbg !15448
  call void @llvm.dbg.value(metadata i32 %2, metadata !14943, metadata !DIExpression()) #24, !dbg !15444
  call void @llvm.dbg.value(metadata i32 %2, metadata !15441, metadata !DIExpression()), !dbg !15443
  call void @llvm.dbg.value(metadata i64 0, metadata !15438, metadata !DIExpression()), !dbg !15442
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()), !dbg !15443
  %3 = load i64, i64* @curr_tick, align 8, !dbg !15449
  %4 = tail call fastcc i32 @elapsed.162() #26, !dbg !15452
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !15438, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15442
  call void @llvm.dbg.value(metadata i32 %2, metadata !15005, metadata !DIExpression()) #24, !dbg !15453
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15010, metadata !DIExpression()) #24, !dbg !15453
  call void @llvm.dbg.value(metadata i32 %2, metadata !15013, metadata !DIExpression()) #24, !dbg !15455
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15457, !srcloc !15019
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()), !dbg !15443
  %5 = sext i32 %4 to i64, !dbg !15452
  %6 = add i64 %3, %5, !dbg !15458
  ret i64 %6, !dbg !15459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15460 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15461
  %2 = trunc i64 %1 to i32, !dbg !15462
  ret i32 %2, !dbg !15463
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15464 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15465
  ret i64 %1, !dbg !15466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15469, metadata !DIExpression()), !dbg !15476
  %2 = icmp eq i32 %0, 0, !dbg !15477
  br i1 %2, label %10, label %3, !dbg !15479

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15480
  call void @llvm.dbg.value(metadata i32 %4, metadata !15470, metadata !DIExpression()), !dbg !15476
  %5 = mul i32 %0, 84, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %5, metadata !15471, metadata !DIExpression()), !dbg !15476
  br label %6, !dbg !15482

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15483
  call void @llvm.dbg.value(metadata i32 %7, metadata !15472, metadata !DIExpression()), !dbg !15484
  %8 = sub i32 %7, %4, !dbg !15485
  %9 = icmp ult i32 %8, %5, !dbg !15487
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !15489 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !15490
  ret i32 %1, !dbg !15491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !15492 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !15494
  ret i32 %1, !dbg !15495
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15496 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15500, metadata !DIExpression()), !dbg !15502
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15503

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !15504
  br label %14, !dbg !15508

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15501, metadata !DIExpression()), !dbg !15502
  %6 = icmp slt i64 %2, -1, !dbg !15509
  br i1 %6, label %7, label %9, !dbg !15512

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15513
  br label %14, !dbg !15514

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !15516
  %11 = icmp ugt i64 %2, 1, !dbg !15517
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15517
  %13 = add nsw i64 %10, %12, !dbg !15518
  br label %14, !dbg !15519

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15520
  ret i64 %15, !dbg !15521
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !15522 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.183, i32 0, i32 0)) #25, !dbg !15524
  ret void, !dbg !15525
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!641, !2, !2193, !27, !124, !2195, !2197, !138, !2223, !2261, !167, !222, !2263, !2274, !2320, !2322, !2350, !2378, !2421, !2492, !2537, !251, !397, !2565, !433, !443, !468, !673, !2570, !810, !876, !1180, !1395, !2609, !1508, !1598, !2611, !2697, !2762, !1650, !2765, !1657, !2021, !2783, !2041, !2785, !2156, !2788}
!llvm.ident = !{!2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790}
!llvm.module.flags = !{!2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "heap", scope: !27, file: !107, line: 13, type: !112, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "heap_mem", scope: !27, file: !107, line: 12, type: !108, isLocal: true, isDefinition: true)
!107 = !DIFile(filename: "zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, elements: !110)
!109 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!110 = !{!111}
!111 = !DISubrange(count: 256)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !114)
!113 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!114 = !{!115, !118, !119}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !112, file: !113, line: 57, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !113, line: 57, flags: DIFlagFwdDecl)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !112, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !112, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !121, line: 214, baseType: !32)
!121 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "_char_out", scope: !124, file: !127, line: 54, type: !128, isLocal: false, isDefinition: true)
!124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !126, splitDebugInlining: false, nameTableKind: None)
!125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!126 = !{!122}
!127 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!103, !103}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "state", scope: !133, file: !134, line: 227, type: !163, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "rand32", scope: !134, file: !134, line: 225, type: !135, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !162)
!134 = !DIFile(filename: "zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!135 = !DISubroutineType(types: !136)
!136 = !{!137}
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !148, globals: !161, splitDebugInlining: false, nameTableKind: None)
!139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!140 = !{!30, !141}
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !142, line: 54, baseType: !32, size: 32, elements: !143)
!142 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!145 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!146 = !DIEnumerator(name: "FREE_PREV", value: 2)
!147 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!148 = !{!102, !103, !149, !150, !137, !153}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !152)
!152 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !156)
!156 = !{!157}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !155, file: !142, line: 58, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 8)
!161 = !{!131}
!162 = !{}
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !164)
!164 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !167, file: !184, line: 56, type: !185, isLocal: true, isDefinition: true, align: 32)
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !169, globals: !183, splitDebugInlining: false, nameTableKind: None)
!168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 259, baseType: !173)
!172 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 250, size: 224, elements: !174)
!174 = !{!175, !177, !178, !179, !180, !181, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !173, file: !172, line: 252, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !137)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !173, file: !172, line: 253, baseType: !176, size: 32, offset: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !173, file: !172, line: 254, baseType: !176, size: 32, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !173, file: !172, line: 255, baseType: !176, size: 32, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !173, file: !172, line: 256, baseType: !176, size: 32, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !173, file: !172, line: 257, baseType: !176, size: 32, offset: 160)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !173, file: !172, line: 258, baseType: !176, size: 32, offset: 192)
!183 = !{!165}
!184 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !188)
!187 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!188 = !{!189, !219}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !186, file: !187, line: 60, baseType: !190, size: 32)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DISubroutineType(types: !192)
!192 = !{!103, !193}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !197)
!196 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!197 = !{!198, !201, !202, !203, !212, !213}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !196, line: 380, baseType: !199, size: 32)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !195, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !195, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !195, file: !196, line: 386, baseType: !204, size: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !206)
!206 = !{!207, !210}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !205, file: !196, line: 359, baseType: !208, size: 8)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !209)
!209 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !205, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!211 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !195, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !195, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !216)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !196, line: 43, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !218)
!218 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !187, line: 65, baseType: !193, size: 32, offset: 32)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !222, file: !225, line: 71, type: !226, isLocal: true, isDefinition: true, align: 32)
!222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !223, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !224, splitDebugInlining: false, nameTableKind: None)
!223 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!224 = !{!220}
!225 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !228)
!228 = !{!229, !248}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !227, file: !187, line: 60, baseType: !230, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DISubroutineType(types: !232)
!232 = !{!103, !233}
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !236)
!236 = !{!237, !238, !239, !240, !246, !247}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !235, file: !196, line: 380, baseType: !199, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !235, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !235, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !235, file: !196, line: 386, baseType: !241, size: 32, offset: 96)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !243)
!243 = !{!244, !245}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !242, file: !196, line: 359, baseType: !208, size: 8)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !242, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !235, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !235, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !227, file: !187, line: 65, baseType: !233, size: 32, offset: 32)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(name: "static_regions", scope: !251, file: !258, line: 62, type: !393, isLocal: true, isDefinition: true)
!251 = distinct !DICompileUnit(language: DW_LANG_C99, file: !252, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !253, globals: !254, splitDebugInlining: false, nameTableKind: None)
!252 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!253 = !{!120, !103, !137, !102}
!254 = !{!255, !249}
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !257, file: !258, line: 198, type: !379, isLocal: true, isDefinition: true)
!257 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !258, file: !258, line: 175, type: !259, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !374)
!258 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!259 = !DISubroutineType(types: !260)
!260 = !{null, !261}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !264)
!263 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!264 = !{!265, !332, !345, !346, !347, !348, !354, !369}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !262, file: !263, line: 247, baseType: !266, size: 384)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !267)
!267 = !{!268, !296, !304, !305, !306, !317, !318, !319}
!268 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 60, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 60, size: 64, elements: !270)
!270 = !{!271, !287}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !269, file: !263, line: 61, baseType: !272, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !274)
!273 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !275)
!275 = !{!276, !282}
!276 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 38, baseType: !277, size: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 38, size: 32, elements: !278)
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !277, file: !273, line: 39, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !277, file: !273, line: 40, baseType: !280, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 42, baseType: !283, size: 32, offset: 32)
!283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 42, size: 32, elements: !284)
!284 = !{!285, !286}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !283, file: !273, line: 43, baseType: !280, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !283, file: !273, line: 44, baseType: !280, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !269, file: !263, line: 62, baseType: !288, size: 64)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !288, file: !289, line: 50, baseType: !292, size: 64)
!292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 64, elements: !294)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!294 = !{!295}
!295 = !DISubrange(count: 2)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !266, file: !263, line: 68, baseType: !297, size: 32, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !300)
!299 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !301)
!301 = !{!302}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !300, file: !299, line: 232, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !274)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !266, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !266, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!306 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 90, baseType: !307, size: 16, offset: 112)
!307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 90, size: 16, elements: !308)
!308 = !{!309, !316}
!309 = !DIDerivedType(tag: DW_TAG_member, scope: !307, file: !263, line: 91, baseType: !310, size: 16)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !307, file: !263, line: 91, size: 16, elements: !311)
!311 = !{!312, !315}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !310, file: !263, line: 96, baseType: !313, size: 8)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !314)
!314 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !310, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !307, file: !263, line: 100, baseType: !151, size: 16)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !266, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !266, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !266, file: !263, line: 131, baseType: !320, size: 192, offset: 192)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !321)
!321 = !{!322, !323, !329}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !320, file: !299, line: 245, baseType: !272, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !320, file: !299, line: 246, baseType: !324, size: 32, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!326 = !DISubroutineType(types: !327)
!327 = !{null, !328}
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !320, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !331)
!331 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !262, file: !263, line: 250, baseType: !333, size: 288, offset: 384)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !340, !341, !342, !343, !344}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !333, file: !334, line: 26, baseType: !137, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !333, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !333, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !333, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !333, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !333, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !333, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !333, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !333, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !262, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !262, file: !263, line: 256, baseType: !298, size: 64, offset: 704)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !262, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !262, file: !263, line: 300, baseType: !349, size: 96, offset: 800)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !350)
!350 = !{!351, !352, !353}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !349, file: !263, line: 153, baseType: !22, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !349, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !349, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !262, file: !263, line: 325, baseType: !355, size: 32, offset: 896)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !358)
!357 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !365, !366}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !356, file: !357, line: 5074, baseType: !360, size: 96)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !361)
!361 = !{!362, !363, !364}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !360, file: !113, line: 57, baseType: !116, size: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !360, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !360, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !356, file: !357, line: 5075, baseType: !298, size: 64, offset: 96)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !356, file: !357, line: 5076, baseType: !367, offset: 160)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!368 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!369 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !262, file: !263, line: 343, baseType: !370, size: 64, offset: 928)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !371)
!371 = !{!372, !373}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !370, file: !334, line: 63, baseType: !137, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !370, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!374 = !{!375, !376, !377, !378}
!375 = !DILocalVariable(name: "thread", arg: 1, scope: !257, file: !258, line: 175, type: !261)
!376 = !DILocalVariable(name: "region_num", scope: !257, file: !258, line: 200, type: !208)
!377 = !DILocalVariable(name: "guard_start", scope: !257, file: !258, line: 265, type: !22)
!378 = !DILocalVariable(name: "guard_size", scope: !257, file: !258, line: 266, type: !120)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 96, elements: !391)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !382)
!381 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !{!383, !384, !385}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !380, file: !381, line: 53, baseType: !22, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !380, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !380, file: !381, line: 55, baseType: !386, size: 32, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !388)
!387 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !389)
!389 = !{!390}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !388, file: !387, line: 150, baseType: !137, size: 32)
!391 = !{!392}
!392 = !DISubrange(count: 1)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 96, elements: !391)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !380)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !397, file: !430, line: 39, type: !208, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !399, globals: !429, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!399 = !{!400, !102, !103, !417, !208}
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !402, line: 1226, baseType: !403)
!402 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 1213, size: 352, elements: !404)
!404 = !{!405, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !403, file: !402, line: 1215, baseType: !406, size: 32)
!406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !403, file: !402, line: 1216, baseType: !176, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !403, file: !402, line: 1217, baseType: !176, size: 32, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !403, file: !402, line: 1218, baseType: !176, size: 32, offset: 96)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !403, file: !402, line: 1219, baseType: !176, size: 32, offset: 128)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !403, file: !402, line: 1220, baseType: !176, size: 32, offset: 160)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !403, file: !402, line: 1221, baseType: !176, size: 32, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !403, file: !402, line: 1222, baseType: !176, size: 32, offset: 224)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !403, file: !402, line: 1223, baseType: !176, size: 32, offset: 256)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !403, file: !402, line: 1224, baseType: !176, size: 32, offset: 288)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !403, file: !402, line: 1225, baseType: !176, size: 32, offset: 320)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422, !423, !424}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !419, file: !420, line: 29, baseType: !137, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !419, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !419, file: !420, line: 37, baseType: !425, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !427)
!427 = !{!428}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !426, file: !387, line: 143, baseType: !137, size: 32)
!429 = !{!395}
!430 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!431 = !DIGlobalVariableExpression(var: !432, expr: !DIExpression())
!432 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !433, file: !440, line: 21, type: !128, isLocal: true, isDefinition: true)
!433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !434, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !435, globals: !439, splitDebugInlining: false, nameTableKind: None)
!434 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!435 = !{!436, !103, !102}
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 22, baseType: !103)
!438 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!439 = !{!431}
!440 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !443, file: !448, line: 13, type: !465, isLocal: true, isDefinition: true)
!443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !445, splitDebugInlining: false, nameTableKind: None)
!444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!445 = !{!446, !441}
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "mpu_config", scope: !443, file: !448, line: 37, type: !449, isLocal: false, isDefinition: true)
!448 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !420, line: 41, size: 64, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !450, file: !420, line: 43, baseType: !137, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !450, file: !420, line: 45, baseType: !454, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !457)
!457 = !{!458, !459, !460}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !456, file: !420, line: 29, baseType: !137, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !456, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !456, file: !420, line: 37, baseType: !461, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !463)
!463 = !{!464}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !462, file: !387, line: 143, baseType: !137, size: 32)
!465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 192, elements: !294)
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !468, file: !552, line: 72, type: !636, isLocal: true, isDefinition: true)
!468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !469, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !470, retainedTypes: !538, globals: !549, splitDebugInlining: false, nameTableKind: None)
!469 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!470 = !{!30, !471}
!471 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !172, line: 65, baseType: !103, size: 32, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537}
!473 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!474 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!475 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!476 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!477 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!478 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!479 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!480 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!481 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!482 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!483 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!484 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!485 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!486 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!487 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!488 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!489 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!490 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!491 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!492 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!493 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!494 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!495 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!496 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!497 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!498 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!499 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!500 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!501 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!502 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!503 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!504 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!505 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!506 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!507 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!508 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!509 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!510 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!511 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!512 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!513 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!514 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!515 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!516 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!517 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!518 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!519 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!520 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!521 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!522 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!523 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!524 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!525 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!526 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!527 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!528 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!529 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!530 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!531 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!532 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!533 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!534 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!535 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!536 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!537 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!538 = !{!120, !103, !102, !539}
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !172, line: 244, baseType: !541)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 236, size: 192, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !541, file: !172, line: 238, baseType: !176, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !541, file: !172, line: 239, baseType: !176, size: 32, offset: 32)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !541, file: !172, line: 240, baseType: !176, size: 32, offset: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !541, file: !172, line: 241, baseType: !176, size: 32, offset: 96)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !541, file: !172, line: 242, baseType: !176, size: 32, offset: 128)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !541, file: !172, line: 243, baseType: !176, size: 32, offset: 160)
!549 = !{!550, !556, !572, !583, !600, !466, !602, !616, !618, !620, !622, !624, !626, !628, !630, !632, !634}
!550 = !DIGlobalVariableExpression(var: !551, expr: !DIExpression())
!551 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !468, file: !552, line: 424, type: !553, isLocal: false, isDefinition: true, align: 16)
!552 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !554)
!554 = !{!555}
!555 = !DISubrange(count: 4)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !468, file: !552, line: 424, type: !558, isLocal: false, isDefinition: true, align: 32)
!558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !560)
!560 = !{!561, !562, !563, !564, !570, !571}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !559, file: !196, line: 380, baseType: !199, size: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !559, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !559, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !559, file: !196, line: 386, baseType: !565, size: 32, offset: 96)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !567)
!567 = !{!568, !569}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !566, file: !196, line: 359, baseType: !208, size: 8)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !566, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !559, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !559, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !468, file: !552, line: 424, type: !574, isLocal: true, isDefinition: true, align: 32)
!574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !576)
!576 = !{!577, !582}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !575, file: !187, line: 60, baseType: !578, size: 32)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 32)
!579 = !DISubroutineType(types: !580)
!580 = !{!103, !581}
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !575, file: !187, line: 65, baseType: !581, size: 32, offset: 32)
!583 = !DIGlobalVariableExpression(var: !584, expr: !DIExpression())
!584 = distinct !DIGlobalVariable(name: "exti_data", scope: !468, file: !552, line: 423, type: !585, isLocal: true, isDefinition: true)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !552, line: 107, size: 1472, elements: !586)
!586 = !{!587}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !585, file: !552, line: 109, baseType: !588, size: 1472)
!588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !589, size: 1472, elements: !598)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !552, line: 101, size: 64, elements: !590)
!590 = !{!591, !597}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !589, file: !552, line: 102, baseType: !592, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !593, line: 63, baseType: !594)
!593 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = !DISubroutineType(types: !596)
!596 = !{null, !103, !102}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !589, file: !552, line: 103, baseType: !102, size: 32, offset: 32)
!598 = !{!599}
!599 = !DISubrange(count: 23)
!600 = !DIGlobalVariableExpression(var: !601, expr: !DIExpression())
!601 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !468, file: !552, line: 424, type: !566, isLocal: true, isDefinition: true, align: 8)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !604, file: !552, line: 493, type: !609, isLocal: true, isDefinition: true, align: 32)
!604 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !552, file: !552, line: 460, type: !605, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !607)
!605 = !DISubroutineType(types: !606)
!606 = !{null, !581}
!607 = !{!608}
!608 = !DILocalVariable(name: "dev", arg: 1, scope: !604, file: !552, line: 460, type: !581)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !610)
!610 = !{!611, !613, !614, !615}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !609, file: !10, line: 55, baseType: !612, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !609, file: !10, line: 57, baseType: !612, size: 32, offset: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !609, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !609, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !604, file: !552, line: 497, type: !609, isLocal: true, isDefinition: true, align: 32)
!618 = !DIGlobalVariableExpression(var: !619, expr: !DIExpression())
!619 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !604, file: !552, line: 507, type: !609, isLocal: true, isDefinition: true, align: 32)
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !604, file: !552, line: 512, type: !609, isLocal: true, isDefinition: true, align: 32)
!622 = !DIGlobalVariableExpression(var: !623, expr: !DIExpression())
!623 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !604, file: !552, line: 516, type: !609, isLocal: true, isDefinition: true, align: 32)
!624 = !DIGlobalVariableExpression(var: !625, expr: !DIExpression())
!625 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !604, file: !552, line: 523, type: !609, isLocal: true, isDefinition: true, align: 32)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !604, file: !552, line: 527, type: !609, isLocal: true, isDefinition: true, align: 32)
!628 = !DIGlobalVariableExpression(var: !629, expr: !DIExpression())
!629 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !604, file: !552, line: 581, type: !609, isLocal: true, isDefinition: true, align: 32)
!630 = !DIGlobalVariableExpression(var: !631, expr: !DIExpression())
!631 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !604, file: !552, line: 586, type: !609, isLocal: true, isDefinition: true, align: 32)
!632 = !DIGlobalVariableExpression(var: !633, expr: !DIExpression())
!633 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !604, file: !552, line: 591, type: !609, isLocal: true, isDefinition: true, align: 32)
!634 = !DIGlobalVariableExpression(var: !635, expr: !DIExpression())
!635 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !604, file: !552, line: 595, type: !609, isLocal: true, isDefinition: true, align: 32)
!636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 736, elements: !598)
!637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !638)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !172, line: 134, baseType: !471)
!639 = !DIGlobalVariableExpression(var: !640, expr: !DIExpression())
!640 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !641, file: !646, line: 22, type: !668, isLocal: false, isDefinition: true, align: 16)
!641 = distinct !DICompileUnit(language: DW_LANG_C99, file: !642, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !643, splitDebugInlining: false, nameTableKind: None)
!642 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!643 = !{!644, !639, !650, !652, !654, !656, !658, !660, !662, !664, !666}
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !641, file: !646, line: 17, type: !647, isLocal: false, isDefinition: true, align: 16)
!646 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 192, elements: !648)
!648 = !{!649}
!649 = !DISubrange(count: 12)
!650 = !DIGlobalVariableExpression(var: !651, expr: !DIExpression())
!651 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !641, file: !646, line: 29, type: !553, isLocal: false, isDefinition: true, align: 16)
!652 = !DIGlobalVariableExpression(var: !653, expr: !DIExpression())
!653 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !641, file: !646, line: 36, type: !553, isLocal: false, isDefinition: true, align: 16)
!654 = !DIGlobalVariableExpression(var: !655, expr: !DIExpression())
!655 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !641, file: !646, line: 43, type: !553, isLocal: false, isDefinition: true, align: 16)
!656 = !DIGlobalVariableExpression(var: !657, expr: !DIExpression())
!657 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !641, file: !646, line: 50, type: !553, isLocal: false, isDefinition: true, align: 16)
!658 = !DIGlobalVariableExpression(var: !659, expr: !DIExpression())
!659 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !641, file: !646, line: 57, type: !553, isLocal: false, isDefinition: true, align: 16)
!660 = !DIGlobalVariableExpression(var: !661, expr: !DIExpression())
!661 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !641, file: !646, line: 64, type: !553, isLocal: false, isDefinition: true, align: 16)
!662 = !DIGlobalVariableExpression(var: !663, expr: !DIExpression())
!663 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !641, file: !646, line: 71, type: !553, isLocal: false, isDefinition: true, align: 16)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !641, file: !646, line: 78, type: !553, isLocal: false, isDefinition: true, align: 16)
!666 = !DIGlobalVariableExpression(var: !667, expr: !DIExpression())
!667 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !641, file: !646, line: 85, type: !553, isLocal: false, isDefinition: true, align: 16)
!668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 48, elements: !669)
!669 = !{!670}
!670 = !DISubrange(count: 3)
!671 = !DIGlobalVariableExpression(var: !672, expr: !DIExpression())
!672 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !673, file: !736, line: 398, type: !769, isLocal: true, isDefinition: true)
!673 = distinct !DICompileUnit(language: DW_LANG_C99, file: !674, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !675, retainedTypes: !688, globals: !733, splitDebugInlining: false, nameTableKind: None)
!674 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!675 = !{!676, !30, !681}
!676 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !677, line: 197, baseType: !32, size: 32, elements: !678)
!677 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!678 = !{!679, !680}
!679 = !DIEnumerator(name: "SUCCESS", value: 0)
!680 = !DIEnumerator(name: "ERROR", value: 1)
!681 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !682, line: 44, baseType: !32, size: 32, elements: !683)
!682 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!683 = !{!684, !685, !686, !687}
!684 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!685 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!686 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!687 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!688 = !{!102, !103, !137, !689, !727, !149}
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 370, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 336, size: 1152, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !726}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !691, file: !172, line: 338, baseType: !176, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !691, file: !172, line: 339, baseType: !176, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !691, file: !172, line: 340, baseType: !176, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !691, file: !172, line: 341, baseType: !176, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !691, file: !172, line: 342, baseType: !176, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !691, file: !172, line: 343, baseType: !176, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !691, file: !172, line: 344, baseType: !176, size: 32, offset: 192)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !691, file: !172, line: 345, baseType: !137, size: 32, offset: 224)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !691, file: !172, line: 346, baseType: !176, size: 32, offset: 256)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !691, file: !172, line: 347, baseType: !176, size: 32, offset: 288)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !691, file: !172, line: 348, baseType: !704, size: 64, offset: 320)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 64, elements: !294)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !691, file: !172, line: 349, baseType: !176, size: 32, offset: 384)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !691, file: !172, line: 350, baseType: !176, size: 32, offset: 416)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !691, file: !172, line: 351, baseType: !176, size: 32, offset: 448)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !691, file: !172, line: 352, baseType: !137, size: 32, offset: 480)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !691, file: !172, line: 353, baseType: !176, size: 32, offset: 512)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !691, file: !172, line: 354, baseType: !176, size: 32, offset: 544)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !691, file: !172, line: 355, baseType: !704, size: 64, offset: 576)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !691, file: !172, line: 356, baseType: !176, size: 32, offset: 640)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !691, file: !172, line: 357, baseType: !176, size: 32, offset: 672)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !691, file: !172, line: 358, baseType: !176, size: 32, offset: 704)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !691, file: !172, line: 359, baseType: !137, size: 32, offset: 736)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !691, file: !172, line: 360, baseType: !176, size: 32, offset: 768)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !691, file: !172, line: 361, baseType: !176, size: 32, offset: 800)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !691, file: !172, line: 362, baseType: !704, size: 64, offset: 832)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !691, file: !172, line: 363, baseType: !176, size: 32, offset: 896)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !691, file: !172, line: 364, baseType: !176, size: 32, offset: 928)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !691, file: !172, line: 365, baseType: !704, size: 64, offset: 960)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !691, file: !172, line: 366, baseType: !176, size: 32, offset: 1024)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !691, file: !172, line: 367, baseType: !176, size: 32, offset: 1056)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !691, file: !172, line: 368, baseType: !725, size: 32, offset: 1088)
!725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 32, elements: !391)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !691, file: !172, line: 369, baseType: !176, size: 32, offset: 1120)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 32)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !729, line: 343, size: 64, elements: !730)
!729 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!730 = !{!731, !732}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !728, file: !729, line: 344, baseType: !137, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !728, file: !729, line: 345, baseType: !137, size: 32, offset: 32)
!733 = !{!734, !740, !756, !767, !671}
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !673, file: !736, line: 752, type: !737, isLocal: false, isDefinition: true, align: 16)
!736 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 704, elements: !738)
!738 = !{!739}
!739 = !DISubrange(count: 44)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !673, file: !736, line: 752, type: !742, isLocal: false, isDefinition: true, align: 32)
!742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !743)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !744)
!744 = !{!745, !746, !747, !748, !754, !755}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !743, file: !196, line: 380, baseType: !199, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !743, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !743, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !743, file: !196, line: 386, baseType: !749, size: 32, offset: 96)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 32)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !751)
!751 = !{!752, !753}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !750, file: !196, line: 359, baseType: !208, size: 8)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !750, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !743, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !743, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !673, file: !736, line: 752, type: !758, isLocal: true, isDefinition: true, align: 32)
!758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !760)
!760 = !{!761, !766}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !759, file: !187, line: 60, baseType: !762, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 32)
!763 = !DISubroutineType(types: !764)
!764 = !{!103, !765}
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !759, file: !187, line: 65, baseType: !765, size: 32, offset: 32)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !673, file: !736, line: 752, type: !750, isLocal: true, isDefinition: true, align: 8)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !682, line: 100, size: 224, elements: !770)
!770 = !{!771, !777, !778, !787, !792, !797, !803}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !769, file: !682, line: 101, baseType: !772, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !682, line: 76, baseType: !773)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 32)
!774 = !DISubroutineType(types: !775)
!775 = !{!103, !765, !776}
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !682, line: 56, baseType: !102)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !769, file: !682, line: 102, baseType: !772, size: 32, offset: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !769, file: !682, line: 103, baseType: !779, size: 32, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !682, line: 83, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!781 = !DISubroutineType(types: !782)
!782 = !{!103, !765, !776, !783, !102}
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !682, line: 72, baseType: !784)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 32)
!785 = !DISubroutineType(types: !786)
!786 = !{null, !765, !776, !102}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !769, file: !682, line: 104, baseType: !788, size: 32, offset: 96)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !682, line: 79, baseType: !789)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 32)
!790 = !DISubroutineType(types: !791)
!791 = !{!103, !765, !776, !149}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !769, file: !682, line: 105, baseType: !793, size: 32, offset: 128)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !682, line: 88, baseType: !794)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DISubroutineType(types: !796)
!796 = !{!681, !765, !776}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !769, file: !682, line: 106, baseType: !798, size: 32, offset: 160)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !682, line: 92, baseType: !799)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!800 = !DISubroutineType(types: !801)
!801 = !{!103, !765, !776, !802}
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !682, line: 64, baseType: !102)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !769, file: !682, line: 107, baseType: !804, size: 32, offset: 192)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !682, line: 96, baseType: !805)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = !DISubroutineType(types: !807)
!807 = !{!103, !765, !776, !102}
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !810, file: !867, line: 603, type: !869, isLocal: true, isDefinition: true, align: 32)
!810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !812, globals: !864, splitDebugInlining: false, nameTableKind: None)
!811 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!812 = !{!102, !103, !813}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !816, line: 336, size: 160, elements: !817)
!816 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!817 = !{!818, !838, !842, !846, !859}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !815, file: !816, line: 365, baseType: !819, size: 32)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!820 = !DISubroutineType(types: !821)
!821 = !{!103, !822, !837}
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !825)
!825 = !{!826, !827, !828, !829, !835, !836}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !824, file: !196, line: 380, baseType: !199, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !824, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !824, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !824, file: !196, line: 386, baseType: !830, size: 32, offset: 96)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 32)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !832)
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !831, file: !196, line: 359, baseType: !208, size: 8)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !831, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !824, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !824, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !815, file: !816, line: 366, baseType: !839, size: 32, offset: 32)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = !DISubroutineType(types: !841)
!841 = !{null, !822, !209}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !815, file: !816, line: 374, baseType: !843, size: 32, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!844 = !DISubroutineType(types: !845)
!845 = !{!103, !822}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !815, file: !816, line: 377, baseType: !847, size: 32, offset: 96)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!848 = !DISubroutineType(types: !849)
!849 = !{!103, !822, !850}
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 32)
!851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !852)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !816, line: 122, size: 64, elements: !853)
!853 = !{!854, !855, !856, !857, !858}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !852, file: !816, line: 123, baseType: !137, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !852, file: !816, line: 124, baseType: !208, size: 8, offset: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !852, file: !816, line: 125, baseType: !208, size: 8, offset: 40)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !852, file: !816, line: 126, baseType: !208, size: 8, offset: 48)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !852, file: !816, line: 127, baseType: !208, size: 8, offset: 56)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !815, file: !816, line: 379, baseType: !860, size: 32, offset: 128)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = !DISubroutineType(types: !862)
!862 = !{!103, !822, !863}
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 32)
!864 = !{!808, !865}
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !810, file: !867, line: 38, type: !868, isLocal: true, isDefinition: true)
!867 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !870)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !871)
!871 = !{!872, !873}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !870, file: !187, line: 60, baseType: !843, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !870, file: !187, line: 65, baseType: !822, size: 32, offset: 32)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !876, file: !1046, line: 762, type: !1155, isLocal: true, isDefinition: true)
!876 = distinct !DICompileUnit(language: DW_LANG_C99, file: !877, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !878, retainedTypes: !896, globals: !1043, splitDebugInlining: false, nameTableKind: None)
!877 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!878 = !{!30, !879, !885, !890, !681}
!879 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !880, line: 506, baseType: !32, size: 32, elements: !881)
!880 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!881 = !{!882, !883, !884}
!882 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!883 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!884 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!885 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !880, line: 512, baseType: !32, size: 32, elements: !886)
!886 = !{!887, !888, !889}
!887 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!888 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!889 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!890 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !593, line: 43, baseType: !32, size: 32, elements: !891)
!891 = !{!892, !893, !894, !895}
!892 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!893 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!894 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!895 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!896 = !{!102, !103, !897, !967, !972, !932, !885, !879, !977, !978, !137, !992, !947, !1002, !1003, !1004}
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !880, line: 523, size: 288, elements: !900)
!900 = !{!901, !922, !928, !933, !937, !938, !939, !943, !963}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !899, file: !880, line: 524, baseType: !902, size: 32)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!903 = !DISubroutineType(types: !904)
!904 = !{!103, !905, !920, !921}
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !908)
!908 = !{!909, !910, !911, !912, !918, !919}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !907, file: !196, line: 380, baseType: !199, size: 32)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !907, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !907, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !907, file: !196, line: 386, baseType: !913, size: 32, offset: 96)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !915)
!915 = !{!916, !917}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !914, file: !196, line: 359, baseType: !208, size: 8)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !914, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !907, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !907, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !880, line: 237, baseType: !208)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !880, line: 257, baseType: !137)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !899, file: !880, line: 530, baseType: !923, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{!103, !905, !926}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !880, line: 229, baseType: !137)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !899, file: !880, line: 532, baseType: !929, size: 32, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!930 = !DISubroutineType(types: !931)
!931 = !{!103, !905, !932, !927}
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !880, line: 216, baseType: !137)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !899, file: !880, line: 535, baseType: !934, size: 32, offset: 96)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{!103, !905, !932}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !899, file: !880, line: 537, baseType: !934, size: 32, offset: 128)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !899, file: !880, line: 539, baseType: !934, size: 32, offset: 160)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !899, file: !880, line: 541, baseType: !940, size: 32, offset: 192)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = !DISubroutineType(types: !942)
!942 = !{!103, !905, !920, !879, !885}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !899, file: !880, line: 544, baseType: !944, size: 32, offset: 224)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DISubroutineType(types: !946)
!946 = !{!103, !905, !947, !211}
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !880, line: 478, size: 96, elements: !949)
!949 = !{!950, !957, !962}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !948, file: !880, line: 482, baseType: !951, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !952, line: 33, baseType: !953)
!952 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !952, line: 29, size: 32, elements: !954)
!954 = !{!955}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !953, file: !952, line: 30, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !948, file: !880, line: 485, baseType: !958, size: 32, offset: 32)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !880, line: 464, baseType: !959)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{null, !905, !947, !932}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !948, file: !880, line: 493, baseType: !932, size: 32, offset: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !899, file: !880, line: 547, baseType: !964, size: 32, offset: 256)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{!137, !905}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !880, line: 428, size: 32, elements: !970)
!970 = !{!971}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !969, file: !880, line: 434, baseType: !932, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !880, line: 441, size: 32, elements: !975)
!975 = !{!976}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !974, file: !880, line: 447, baseType: !932, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 276, baseType: !980)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 265, size: 320, elements: !981)
!981 = !{!982, !983, !984, !985, !986, !987, !988, !989, !990}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !980, file: !172, line: 267, baseType: !176, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !980, file: !172, line: 268, baseType: !176, size: 32, offset: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !980, file: !172, line: 269, baseType: !176, size: 32, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !980, file: !172, line: 270, baseType: !176, size: 32, offset: 96)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !980, file: !172, line: 271, baseType: !176, size: 32, offset: 128)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !980, file: !172, line: 272, baseType: !176, size: 32, offset: 160)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !980, file: !172, line: 273, baseType: !176, size: 32, offset: 192)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !980, file: !172, line: 274, baseType: !176, size: 32, offset: 224)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !980, file: !172, line: 275, baseType: !991, size: 64, offset: 256)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 64, elements: !294)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!993 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !172, line: 289, baseType: !994)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 282, size: 288, elements: !995)
!995 = !{!996, !997, !998, !1000, !1001}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !994, file: !172, line: 284, baseType: !176, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !994, file: !172, line: 285, baseType: !176, size: 32, offset: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !994, file: !172, line: 286, baseType: !999, size: 128, offset: 64)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 128, elements: !554)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !994, file: !172, line: 287, baseType: !704, size: 64, offset: 192)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !994, file: !172, line: 288, baseType: !176, size: 32, offset: 256)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !682, line: 100, size: 224, elements: !1007)
!1007 = !{!1008, !1013, !1014, !1023, !1028, !1033, !1038}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1006, file: !682, line: 101, baseType: !1009, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !682, line: 76, baseType: !1010)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!103, !905, !776}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1006, file: !682, line: 102, baseType: !1009, size: 32, offset: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1006, file: !682, line: 103, baseType: !1015, size: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !682, line: 83, baseType: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!103, !905, !776, !1019, !102}
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !682, line: 72, baseType: !1020)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 32)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{null, !905, !776, !102}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1006, file: !682, line: 104, baseType: !1024, size: 32, offset: 96)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !682, line: 79, baseType: !1025)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 32)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!103, !905, !776, !149}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1006, file: !682, line: 105, baseType: !1029, size: 32, offset: 128)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !682, line: 88, baseType: !1030)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!681, !905, !776}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1006, file: !682, line: 106, baseType: !1034, size: 32, offset: 160)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !682, line: 92, baseType: !1035)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 32)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!103, !905, !776, !802}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1006, file: !682, line: 107, baseType: !1039, size: 32, offset: 192)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !682, line: 96, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!103, !905, !776, !102}
!1043 = !{!1044, !1050, !1052, !1062, !1067, !1069, !1071, !1073, !1075, !1077, !1079, !1081, !1083, !1085, !1087, !1089, !1091, !1093, !1095, !1097, !1099, !1101, !1103, !1105, !1107, !1121, !1123, !1125, !1127, !1129, !1131, !1133, !1135, !1137, !1139, !1141, !1143, !1145, !1147, !1149, !874, !1151, !1153, !1166, !1168, !1170, !1172, !1174, !1176}
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !876, file: !1046, line: 762, type: !1047, isLocal: false, isDefinition: true, align: 16)
!1046 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 80, elements: !1048)
!1048 = !{!1049}
!1049 = !DISubrange(count: 5)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !876, file: !1046, line: 762, type: !906, isLocal: false, isDefinition: true, align: 32)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !876, file: !1046, line: 762, type: !1054, isLocal: true, isDefinition: true, align: 32)
!1054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1055)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1056)
!1056 = !{!1057, !1061}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1055, file: !187, line: 60, baseType: !1058, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!103, !905}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1055, file: !187, line: 65, baseType: !905, size: 32, offset: 32)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !876, file: !1046, line: 766, type: !1064, isLocal: false, isDefinition: true, align: 16)
!1064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 160, elements: !1065)
!1065 = !{!1066}
!1066 = !DISubrange(count: 10)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !876, file: !1046, line: 766, type: !906, isLocal: false, isDefinition: true, align: 32)
!1069 = !DIGlobalVariableExpression(var: !1070, expr: !DIExpression())
!1070 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !876, file: !1046, line: 766, type: !1054, isLocal: true, isDefinition: true, align: 32)
!1071 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression())
!1072 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !876, file: !1046, line: 770, type: !1047, isLocal: false, isDefinition: true, align: 16)
!1073 = !DIGlobalVariableExpression(var: !1074, expr: !DIExpression())
!1074 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !876, file: !1046, line: 770, type: !906, isLocal: false, isDefinition: true, align: 32)
!1075 = !DIGlobalVariableExpression(var: !1076, expr: !DIExpression())
!1076 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !876, file: !1046, line: 770, type: !1054, isLocal: true, isDefinition: true, align: 32)
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !876, file: !1046, line: 774, type: !1047, isLocal: false, isDefinition: true, align: 16)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !876, file: !1046, line: 774, type: !906, isLocal: false, isDefinition: true, align: 32)
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !876, file: !1046, line: 774, type: !1054, isLocal: true, isDefinition: true, align: 32)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !876, file: !1046, line: 778, type: !1047, isLocal: false, isDefinition: true, align: 16)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !876, file: !1046, line: 778, type: !906, isLocal: false, isDefinition: true, align: 32)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !876, file: !1046, line: 778, type: !1054, isLocal: true, isDefinition: true, align: 32)
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !876, file: !1046, line: 782, type: !1047, isLocal: false, isDefinition: true, align: 16)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !876, file: !1046, line: 782, type: !906, isLocal: false, isDefinition: true, align: 32)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !876, file: !1046, line: 782, type: !1054, isLocal: true, isDefinition: true, align: 32)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !876, file: !1046, line: 786, type: !1047, isLocal: false, isDefinition: true, align: 16)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !876, file: !1046, line: 786, type: !906, isLocal: false, isDefinition: true, align: 32)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !876, file: !1046, line: 786, type: !1054, isLocal: true, isDefinition: true, align: 32)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !876, file: !1046, line: 790, type: !1047, isLocal: false, isDefinition: true, align: 16)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !876, file: !1046, line: 790, type: !906, isLocal: false, isDefinition: true, align: 32)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !876, file: !1046, line: 790, type: !1054, isLocal: true, isDefinition: true, align: 32)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !876, file: !1046, line: 762, type: !1109, isLocal: true, isDefinition: true)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1110, line: 237, size: 128, elements: !1111)
!1110 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1111 = !{!1112, !1113, !1114}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1109, file: !1110, line: 239, baseType: !974, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1109, file: !1110, line: 241, baseType: !905, size: 32, offset: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1109, file: !1110, line: 243, baseType: !1115, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !952, line: 40, baseType: !1116)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !952, line: 35, size: 64, elements: !1117)
!1117 = !{!1118, !1120}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1116, file: !952, line: 36, baseType: !1119, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1116, file: !952, line: 37, baseType: !1119, size: 32, offset: 32)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !876, file: !1046, line: 762, type: !914, isLocal: true, isDefinition: true, align: 8)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !876, file: !1046, line: 766, type: !1109, isLocal: true, isDefinition: true)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !876, file: !1046, line: 766, type: !914, isLocal: true, isDefinition: true, align: 8)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !876, file: !1046, line: 770, type: !1109, isLocal: true, isDefinition: true)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !876, file: !1046, line: 770, type: !914, isLocal: true, isDefinition: true, align: 8)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !876, file: !1046, line: 774, type: !1109, isLocal: true, isDefinition: true)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !876, file: !1046, line: 774, type: !914, isLocal: true, isDefinition: true, align: 8)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !876, file: !1046, line: 778, type: !1109, isLocal: true, isDefinition: true)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !876, file: !1046, line: 778, type: !914, isLocal: true, isDefinition: true, align: 8)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !876, file: !1046, line: 782, type: !1109, isLocal: true, isDefinition: true)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !876, file: !1046, line: 782, type: !914, isLocal: true, isDefinition: true, align: 8)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !876, file: !1046, line: 786, type: !1109, isLocal: true, isDefinition: true)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !876, file: !1046, line: 786, type: !914, isLocal: true, isDefinition: true, align: 8)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !876, file: !1046, line: 790, type: !1109, isLocal: true, isDefinition: true)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !876, file: !1046, line: 790, type: !914, isLocal: true, isDefinition: true, align: 8)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !876, file: !1046, line: 656, type: !898, isLocal: true, isDefinition: true)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !876, file: !1046, line: 766, type: !1155, isLocal: true, isDefinition: true)
!1155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1110, line: 224, size: 160, elements: !1157)
!1157 = !{!1158, !1159, !1160, !1161}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1156, file: !1110, line: 226, baseType: !969, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1156, file: !1110, line: 228, baseType: !149, size: 32, offset: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1156, file: !1110, line: 230, baseType: !103, size: 32, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1156, file: !1110, line: 231, baseType: !1162, size: 64, offset: 96)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !729, line: 343, size: 64, elements: !1163)
!1163 = !{!1164, !1165}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1162, file: !729, line: 344, baseType: !137, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1162, file: !729, line: 345, baseType: !137, size: 32, offset: 32)
!1166 = !DIGlobalVariableExpression(var: !1167, expr: !DIExpression())
!1167 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !876, file: !1046, line: 770, type: !1155, isLocal: true, isDefinition: true)
!1168 = !DIGlobalVariableExpression(var: !1169, expr: !DIExpression())
!1169 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !876, file: !1046, line: 774, type: !1155, isLocal: true, isDefinition: true)
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !876, file: !1046, line: 778, type: !1155, isLocal: true, isDefinition: true)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !876, file: !1046, line: 782, type: !1155, isLocal: true, isDefinition: true)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !876, file: !1046, line: 786, type: !1155, isLocal: true, isDefinition: true)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !876, file: !1046, line: 790, type: !1155, isLocal: true, isDefinition: true)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1180, file: !1319, line: 1914, type: !1378, isLocal: true, isDefinition: true)
!1180 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1181, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1182, retainedTypes: !1215, globals: !1316, splitDebugInlining: false, nameTableKind: None)
!1181 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!1182 = !{!30, !1183, !1190, !1197, !1204, !1210, !681}
!1183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !816, line: 47, baseType: !32, size: 32, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1186 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1187 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1188 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1189 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !816, line: 75, baseType: !32, size: 32, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196}
!1192 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1193 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1194 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1195 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1196 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !816, line: 92, baseType: !32, size: 32, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202, !1203}
!1199 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1200 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1201 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1202 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1203 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1204 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !816, line: 84, baseType: !32, size: 32, elements: !1205)
!1205 = !{!1206, !1207, !1208, !1209}
!1206 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1207 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1208 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1209 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !816, line: 107, baseType: !32, size: 32, elements: !1211)
!1211 = !{!1212, !1213, !1214}
!1212 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1213 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1214 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1215 = !{!102, !103, !1216, !209, !208, !1265, !137, !776, !1276, !151, !163, !1315}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !816, line: 336, size: 160, elements: !1219)
!1219 = !{!1220, !1239, !1243, !1247, !1260}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1218, file: !816, line: 365, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!103, !1224, !837}
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231, !1237, !1238}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1226, file: !196, line: 380, baseType: !199, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1226, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1226, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1226, file: !196, line: 386, baseType: !1232, size: 32, offset: 96)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1234)
!1234 = !{!1235, !1236}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1233, file: !196, line: 359, baseType: !208, size: 8)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1233, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1226, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1226, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1218, file: !816, line: 366, baseType: !1240, size: 32, offset: 32)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{null, !1224, !209}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1218, file: !816, line: 374, baseType: !1244, size: 32, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!103, !1224}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1218, file: !816, line: 377, baseType: !1248, size: 32, offset: 96)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!103, !1224, !1251}
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !816, line: 122, size: 64, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1259}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1253, file: !816, line: 123, baseType: !137, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1253, file: !816, line: 124, baseType: !208, size: 8, offset: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1253, file: !816, line: 125, baseType: !208, size: 8, offset: 40)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1253, file: !816, line: 126, baseType: !208, size: 8, offset: 48)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1253, file: !816, line: 127, baseType: !208, size: 8, offset: 56)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1218, file: !816, line: 379, baseType: !1261, size: 32, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!103, !1224, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !172, line: 508, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 499, size: 224, elements: !1268)
!1268 = !{!1269, !1270, !1271, !1272, !1273, !1274, !1275}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1267, file: !172, line: 501, baseType: !176, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1267, file: !172, line: 502, baseType: !176, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1267, file: !172, line: 503, baseType: !176, size: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1267, file: !172, line: 504, baseType: !176, size: 32, offset: 96)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1267, file: !172, line: 505, baseType: !176, size: 32, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1267, file: !172, line: 506, baseType: !176, size: 32, offset: 160)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1267, file: !172, line: 507, baseType: !176, size: 32, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !682, line: 100, size: 224, elements: !1279)
!1279 = !{!1280, !1285, !1286, !1295, !1300, !1305, !1310}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1278, file: !682, line: 101, baseType: !1281, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !682, line: 76, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!103, !1224, !776}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1278, file: !682, line: 102, baseType: !1281, size: 32, offset: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1278, file: !682, line: 103, baseType: !1287, size: 32, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !682, line: 83, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!103, !1224, !776, !1291, !102}
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !682, line: 72, baseType: !1292)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{null, !1224, !776, !102}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1278, file: !682, line: 104, baseType: !1296, size: 32, offset: 96)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !682, line: 79, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 32)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!103, !1224, !776, !149}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1278, file: !682, line: 105, baseType: !1301, size: 32, offset: 128)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !682, line: 88, baseType: !1302)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!681, !1224, !776}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1278, file: !682, line: 106, baseType: !1306, size: 32, offset: 160)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !682, line: 92, baseType: !1307)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 32)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!103, !1224, !776, !802}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1278, file: !682, line: 107, baseType: !1311, size: 32, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !682, line: 96, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 32)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!103, !1224, !776, !102}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!1316 = !{!1317, !1321, !1323, !1330, !1178, !1332, !1340, !1363, !1366, !1369, !1371}
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1180, file: !1319, line: 1914, type: !1320, isLocal: false, isDefinition: true, align: 16)
!1319 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 128, elements: !159)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1180, file: !1319, line: 1914, type: !1225, isLocal: false, isDefinition: true, align: 32)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1180, file: !1319, line: 1914, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1327)
!1327 = !{!1328, !1329}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1326, file: !187, line: 60, baseType: !1244, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1326, file: !187, line: 65, baseType: !1224, size: 32, offset: 32)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1180, file: !1319, line: 1914, type: !1233, isLocal: true, isDefinition: true, align: 8)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1180, file: !1319, line: 1914, type: !1334, isLocal: true, isDefinition: true)
!1334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1335, size: 64, elements: !391)
!1335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1336)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !729, line: 343, size: 64, elements: !1337)
!1337 = !{!1338, !1339}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1336, file: !729, line: 344, baseType: !137, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1336, file: !729, line: 345, baseType: !137, size: 32, offset: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1180, file: !1319, line: 1914, type: !1342, isLocal: true, isDefinition: true)
!1342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1344, line: 60, size: 64, elements: !1345)
!1344 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1345 = !{!1346, !1362}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1343, file: !1344, line: 69, baseType: !1347, size: 32)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1344, line: 50, size: 64, elements: !1350)
!1350 = !{!1351, !1360, !1361}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1349, file: !1344, line: 52, baseType: !1352, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1354)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1355, line: 37, baseType: !1356)
!1355 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1355, line: 32, size: 64, elements: !1357)
!1357 = !{!1358, !1359}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1356, file: !1355, line: 34, baseType: !137, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1356, file: !1355, line: 36, baseType: !137, size: 32, offset: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1349, file: !1344, line: 54, baseType: !208, size: 8, offset: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1349, file: !1344, line: 56, baseType: !208, size: 8, offset: 40)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1343, file: !1344, line: 71, baseType: !208, size: 8, offset: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1180, file: !1319, line: 1914, type: !1365, isLocal: true, isDefinition: true)
!1365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1348, size: 64, elements: !391)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1180, file: !1319, line: 1914, type: !1368, isLocal: true, isDefinition: true)
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1353, size: 128, elements: !294)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1180, file: !1319, line: 1539, type: !1217, isLocal: true, isDefinition: true)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1180, file: !1319, line: 1914, type: !1373, isLocal: true, isDefinition: true)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1374, line: 74, size: 64, elements: !1375)
!1374 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1375 = !{!1376, !1377}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1373, file: !1374, line: 76, baseType: !137, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1373, file: !1374, line: 78, baseType: !1224, size: 32, offset: 32)
!1378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1374, line: 22, size: 224, elements: !1380)
!1380 = !{!1381, !1382, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1379, file: !1374, line: 24, baseType: !1265, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1379, file: !1374, line: 26, baseType: !1383, size: 32, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1379, file: !1374, line: 28, baseType: !120, size: 32, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1379, file: !1374, line: 30, baseType: !211, size: 8, offset: 96)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1379, file: !1374, line: 32, baseType: !103, size: 32, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1379, file: !1374, line: 34, baseType: !211, size: 8, offset: 160)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1379, file: !1374, line: 36, baseType: !211, size: 8, offset: 168)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1379, file: !1374, line: 38, baseType: !211, size: 8, offset: 176)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1379, file: !1374, line: 40, baseType: !211, size: 8, offset: 184)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1379, file: !1374, line: 41, baseType: !1392, size: 32, offset: 192)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1395, file: !1473, line: 65, type: !176, isLocal: true, isDefinition: true)
!1395 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1396, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1397, retainedTypes: !1398, globals: !1470, splitDebugInlining: false, nameTableKind: None)
!1396 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!1397 = !{!471}
!1398 = !{!1399, !1401, !612, !208, !137, !1409, !1440}
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1400, line: 46, baseType: !330)
!1400 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !1403)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1403, file: !402, line: 766, baseType: !176, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1403, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1403, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1403, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1411)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1412)
!1412 = !{!1413, !1415, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1430, !1435, !1439}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1411, file: !402, line: 413, baseType: !1414, size: 256)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 256, elements: !159)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1411, file: !402, line: 414, baseType: !1416, size: 768, offset: 256)
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 768, elements: !1417)
!1417 = !{!1418}
!1418 = !DISubrange(count: 24)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1411, file: !402, line: 415, baseType: !1414, size: 256, offset: 1024)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1411, file: !402, line: 416, baseType: !1416, size: 768, offset: 1280)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1411, file: !402, line: 417, baseType: !1414, size: 256, offset: 2048)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1411, file: !402, line: 418, baseType: !1416, size: 768, offset: 2304)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1411, file: !402, line: 419, baseType: !1414, size: 256, offset: 3072)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1411, file: !402, line: 420, baseType: !1416, size: 768, offset: 3328)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1411, file: !402, line: 421, baseType: !1414, size: 256, offset: 4096)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1411, file: !402, line: 422, baseType: !1427, size: 1792, offset: 4352)
!1427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 1792, elements: !1428)
!1428 = !{!1429}
!1429 = !DISubrange(count: 56)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1411, file: !402, line: 423, baseType: !1431, size: 1920, offset: 6144)
!1431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1432, size: 1920, elements: !1433)
!1432 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!1433 = !{!1434}
!1434 = !DISubrange(count: 240)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1411, file: !402, line: 424, baseType: !1436, size: 20608, offset: 8064)
!1436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 20608, elements: !1437)
!1437 = !{!1438}
!1438 = !DISubrange(count: 644)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1411, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1442)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1449, !1450, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1461, !1462, !1463, !1465, !1467, !1469}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1442, file: !402, line: 447, baseType: !406, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1442, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1442, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1442, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1442, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1442, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1442, file: !402, line: 453, baseType: !1451, size: 96, offset: 192)
!1451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1432, size: 96, elements: !648)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1442, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1442, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1442, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1442, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1442, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1442, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1442, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1442, file: !402, line: 461, baseType: !1460, size: 64, offset: 512)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 64, elements: !294)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1442, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1442, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1442, file: !402, line: 464, baseType: !1464, size: 128, offset: 640)
!1464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 128, elements: !554)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1442, file: !402, line: 465, baseType: !1466, size: 160, offset: 768)
!1466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 160, elements: !1048)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1442, file: !402, line: 466, baseType: !1468, size: 160, offset: 928)
!1468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 160, elements: !1048)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1442, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1470 = !{!1471, !1497, !1500, !1502, !1504, !1393}
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1395, file: !1473, line: 285, type: !1474, isLocal: true, isDefinition: true, align: 32)
!1473 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1475)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1476)
!1476 = !{!1477, !1496}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1475, file: !187, line: 60, baseType: !1478, size: 32)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 32)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!103, !1481}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1483)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1484)
!1484 = !{!1485, !1486, !1487, !1488, !1494, !1495}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1483, file: !196, line: 380, baseType: !199, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1483, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1483, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1483, file: !196, line: 386, baseType: !1489, size: 32, offset: 96)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1491)
!1491 = !{!1492, !1493}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1490, file: !196, line: 359, baseType: !208, size: 8)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1490, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1483, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1483, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1475, file: !187, line: 65, baseType: !1481, size: 32, offset: 32)
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(name: "lock", scope: !1395, file: !1473, line: 34, type: !1499, isLocal: true, isDefinition: true)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!1500 = !DIGlobalVariableExpression(var: !1501, expr: !DIExpression())
!1501 = distinct !DIGlobalVariable(name: "last_load", scope: !1395, file: !1473, line: 36, type: !137, isLocal: true, isDefinition: true)
!1502 = !DIGlobalVariableExpression(var: !1503, expr: !DIExpression())
!1503 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1395, file: !1473, line: 48, type: !137, isLocal: true, isDefinition: true)
!1504 = !DIGlobalVariableExpression(var: !1505, expr: !DIExpression())
!1505 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1395, file: !1473, line: 54, type: !137, isLocal: true, isDefinition: true)
!1506 = !DIGlobalVariableExpression(var: !1507, expr: !DIExpression())
!1507 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1508, file: !1590, line: 22, type: !1592, isLocal: true, isDefinition: true)
!1508 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1509, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1510, retainedTypes: !1511, globals: !1587, splitDebugInlining: false, nameTableKind: None)
!1509 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!1510 = !{!879, !885}
!1511 = !{!1512, !1576, !1581, !932, !885, !879, !1586, !102}
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1514)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !880, line: 523, size: 288, elements: !1515)
!1515 = !{!1516, !1535, !1539, !1543, !1547, !1548, !1549, !1553, !1572}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1514, file: !880, line: 524, baseType: !1517, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!103, !1520, !920, !921}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1523)
!1523 = !{!1524, !1525, !1526, !1527, !1533, !1534}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1522, file: !196, line: 380, baseType: !199, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1522, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1522, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1522, file: !196, line: 386, baseType: !1528, size: 32, offset: 96)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1530)
!1530 = !{!1531, !1532}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1529, file: !196, line: 359, baseType: !208, size: 8)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1529, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1522, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1522, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1514, file: !880, line: 530, baseType: !1536, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!103, !1520, !926}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1514, file: !880, line: 532, baseType: !1540, size: 32, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!103, !1520, !932, !927}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1514, file: !880, line: 535, baseType: !1544, size: 32, offset: 96)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 32)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!103, !1520, !932}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1514, file: !880, line: 537, baseType: !1544, size: 32, offset: 128)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1514, file: !880, line: 539, baseType: !1544, size: 32, offset: 160)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1514, file: !880, line: 541, baseType: !1550, size: 32, offset: 192)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!103, !1520, !920, !879, !885}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1514, file: !880, line: 544, baseType: !1554, size: 32, offset: 224)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!103, !1520, !1557, !211}
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !880, line: 478, size: 96, elements: !1559)
!1559 = !{!1560, !1566, !1571}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1558, file: !880, line: 482, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !952, line: 33, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !952, line: 29, size: 32, elements: !1563)
!1563 = !{!1564}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1562, file: !952, line: 30, baseType: !1565, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1558, file: !880, line: 485, baseType: !1567, size: 32, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !880, line: 464, baseType: !1568)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{null, !1520, !1557, !932}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1558, file: !880, line: 493, baseType: !932, size: 32, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1514, file: !880, line: 547, baseType: !1573, size: 32, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!137, !1520}
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !880, line: 428, size: 32, elements: !1579)
!1579 = !{!1580}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1578, file: !880, line: 434, baseType: !932, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !880, line: 441, size: 32, elements: !1584)
!1584 = !{!1585}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1583, file: !880, line: 447, baseType: !932, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1587 = !{!1588, !1506}
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1589 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1508, file: !1590, line: 37, type: !1591, isLocal: true, isDefinition: true)
!1590 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!1592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1593, size: 352, elements: !1594)
!1593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!1594 = !{!1595}
!1595 = !DISubrange(count: 11)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1598, file: !1640, line: 139, type: !1647, isLocal: false, isDefinition: true)
!1598 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1599, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1600, globals: !1637, splitDebugInlining: false, nameTableKind: None)
!1599 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!1600 = !{!1601}
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 370, baseType: !1603)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 336, size: 1152, elements: !1604)
!1604 = !{!1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1603, file: !172, line: 338, baseType: !176, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1603, file: !172, line: 339, baseType: !176, size: 32, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1603, file: !172, line: 340, baseType: !176, size: 32, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1603, file: !172, line: 341, baseType: !176, size: 32, offset: 96)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1603, file: !172, line: 342, baseType: !176, size: 32, offset: 128)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1603, file: !172, line: 343, baseType: !176, size: 32, offset: 160)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1603, file: !172, line: 344, baseType: !176, size: 32, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1603, file: !172, line: 345, baseType: !137, size: 32, offset: 224)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1603, file: !172, line: 346, baseType: !176, size: 32, offset: 256)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1603, file: !172, line: 347, baseType: !176, size: 32, offset: 288)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1603, file: !172, line: 348, baseType: !704, size: 64, offset: 320)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1603, file: !172, line: 349, baseType: !176, size: 32, offset: 384)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1603, file: !172, line: 350, baseType: !176, size: 32, offset: 416)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1603, file: !172, line: 351, baseType: !176, size: 32, offset: 448)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1603, file: !172, line: 352, baseType: !137, size: 32, offset: 480)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1603, file: !172, line: 353, baseType: !176, size: 32, offset: 512)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1603, file: !172, line: 354, baseType: !176, size: 32, offset: 544)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1603, file: !172, line: 355, baseType: !704, size: 64, offset: 576)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1603, file: !172, line: 356, baseType: !176, size: 32, offset: 640)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1603, file: !172, line: 357, baseType: !176, size: 32, offset: 672)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1603, file: !172, line: 358, baseType: !176, size: 32, offset: 704)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1603, file: !172, line: 359, baseType: !137, size: 32, offset: 736)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1603, file: !172, line: 360, baseType: !176, size: 32, offset: 768)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1603, file: !172, line: 361, baseType: !176, size: 32, offset: 800)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1603, file: !172, line: 362, baseType: !704, size: 64, offset: 832)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1603, file: !172, line: 363, baseType: !176, size: 32, offset: 896)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1603, file: !172, line: 364, baseType: !176, size: 32, offset: 928)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1603, file: !172, line: 365, baseType: !704, size: 64, offset: 960)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1603, file: !172, line: 366, baseType: !176, size: 32, offset: 1024)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1603, file: !172, line: 367, baseType: !176, size: 32, offset: 1056)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1603, file: !172, line: 368, baseType: !725, size: 32, offset: 1088)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1603, file: !172, line: 369, baseType: !176, size: 32, offset: 1120)
!1637 = !{!1638, !1641, !1596}
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1598, file: !1640, line: 137, type: !137, isLocal: false, isDefinition: true)
!1640 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1598, file: !1640, line: 138, type: !1643, isLocal: false, isDefinition: true)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1644, size: 128, elements: !1645)
!1644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!1645 = !{!1646}
!1646 = !DISubrange(count: 16)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1644, size: 64, elements: !159)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1650, file: !1653, line: 23, type: !1654, isLocal: false, isDefinition: true)
!1650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1651, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1652, splitDebugInlining: false, nameTableKind: None)
!1651 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!1652 = !{!1648}
!1653 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1657, file: !1661, line: 86, type: !1911, isLocal: false, isDefinition: true, align: 512)
!1657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1659, retainedTypes: !1668, globals: !1742, splitDebugInlining: false, nameTableKind: None)
!1658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!1659 = !{!1660, !30, !471}
!1660 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1661, line: 63, baseType: !32, size: 32, elements: !1662)
!1661 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1662 = !{!1663, !1664, !1665, !1666, !1667}
!1663 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1664 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1665 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1666 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1667 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1668 = !{!120, !102, !103, !1669, !1002, !137, !1700, !612, !208, !1725}
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1672, line: 51, size: 64, elements: !1673)
!1672 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1673 = !{!1674, !1695}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1671, file: !1672, line: 52, baseType: !1675, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1672, line: 38, baseType: !1676)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!103, !1679, !1694, !151}
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1681)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1682)
!1682 = !{!1683, !1684, !1685, !1686, !1692, !1693}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1681, file: !196, line: 380, baseType: !199, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1681, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1681, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1681, file: !196, line: 386, baseType: !1687, size: 32, offset: 96)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1689)
!1689 = !{!1690, !1691}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1688, file: !196, line: 359, baseType: !208, size: 8)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1688, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1681, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1681, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1671, file: !1672, line: 53, baseType: !1696, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1672, line: 47, baseType: !1697)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 32)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{!103, !1679, !1694, !151, !137}
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1703)
!1703 = !{!1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1702, file: !402, line: 447, baseType: !406, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1702, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1702, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1702, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1702, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1702, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1702, file: !402, line: 453, baseType: !1451, size: 96, offset: 192)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1702, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1702, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1702, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1702, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1702, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1702, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1702, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1702, file: !402, line: 461, baseType: !1460, size: 64, offset: 512)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1702, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1702, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1702, file: !402, line: 464, baseType: !1464, size: 128, offset: 640)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1702, file: !402, line: 465, baseType: !1466, size: 160, offset: 768)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1702, file: !402, line: 466, baseType: !1468, size: 160, offset: 928)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1702, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1727)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1728)
!1728 = !{!1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1727, file: !402, line: 413, baseType: !1414, size: 256)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1727, file: !402, line: 414, baseType: !1416, size: 768, offset: 256)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1727, file: !402, line: 415, baseType: !1414, size: 256, offset: 1024)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1727, file: !402, line: 416, baseType: !1416, size: 768, offset: 1280)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1727, file: !402, line: 417, baseType: !1414, size: 256, offset: 2048)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1727, file: !402, line: 418, baseType: !1416, size: 768, offset: 2304)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1727, file: !402, line: 419, baseType: !1414, size: 256, offset: 3072)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1727, file: !402, line: 420, baseType: !1416, size: 768, offset: 3328)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1727, file: !402, line: 421, baseType: !1414, size: 256, offset: 4096)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1727, file: !402, line: 422, baseType: !1427, size: 1792, offset: 4352)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1727, file: !402, line: 423, baseType: !1431, size: 1920, offset: 6144)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1727, file: !402, line: 424, baseType: !1436, size: 20608, offset: 8064)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1727, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1742 = !{!1743, !1865, !1874, !1876, !1655, !1879, !1881, !1886}
!1743 = !DIGlobalVariableExpression(var: !1744, expr: !DIExpression())
!1744 = distinct !DIGlobalVariable(name: "_kernel", scope: !1657, file: !1661, line: 40, type: !1745, isLocal: false, isDefinition: true)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !299, line: 158, size: 288, elements: !1746)
!1746 = !{!1747, !1860}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1745, file: !299, line: 159, baseType: !1748, size: 192)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1749, size: 192, elements: !391)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !299, line: 100, size: 192, elements: !1750)
!1750 = !{!1751, !1752, !1753, !1854, !1855, !1856, !1857}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1749, file: !299, line: 102, baseType: !137, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1749, file: !299, line: 105, baseType: !1002, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1749, file: !299, line: 108, baseType: !1754, size: 32, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !1756)
!1756 = !{!1757, !1815, !1827, !1828, !1829, !1830, !1836, !1849}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1755, file: !263, line: 247, baseType: !1758, size: 384)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !1759)
!1759 = !{!1760, !1784, !1791, !1792, !1793, !1802, !1803, !1804}
!1760 = !DIDerivedType(tag: DW_TAG_member, scope: !1758, file: !263, line: 60, baseType: !1761, size: 64)
!1761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1758, file: !263, line: 60, size: 64, elements: !1762)
!1762 = !{!1763, !1778}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1761, file: !263, line: 61, baseType: !1764, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !1765)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !1766)
!1766 = !{!1767, !1773}
!1767 = !DIDerivedType(tag: DW_TAG_member, scope: !1765, file: !273, line: 38, baseType: !1768, size: 32)
!1768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1765, file: !273, line: 38, size: 32, elements: !1769)
!1769 = !{!1770, !1772}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1768, file: !273, line: 39, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1768, file: !273, line: 40, baseType: !1771, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, scope: !1765, file: !273, line: 42, baseType: !1774, size: 32, offset: 32)
!1774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1765, file: !273, line: 42, size: 32, elements: !1775)
!1775 = !{!1776, !1777}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1774, file: !273, line: 43, baseType: !1771, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1774, file: !273, line: 44, baseType: !1771, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1761, file: !263, line: 62, baseType: !1779, size: 64)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !1780)
!1780 = !{!1781}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1779, file: !289, line: 50, baseType: !1782, size: 64)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1783, size: 64, elements: !294)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1758, file: !263, line: 68, baseType: !1785, size: 32, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !1787)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !1788)
!1788 = !{!1789}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1787, file: !299, line: 232, baseType: !1790, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !1765)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1758, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1758, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!1793 = !DIDerivedType(tag: DW_TAG_member, scope: !1758, file: !263, line: 90, baseType: !1794, size: 16, offset: 112)
!1794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1758, file: !263, line: 90, size: 16, elements: !1795)
!1795 = !{!1796, !1801}
!1796 = !DIDerivedType(tag: DW_TAG_member, scope: !1794, file: !263, line: 91, baseType: !1797, size: 16)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1794, file: !263, line: 91, size: 16, elements: !1798)
!1798 = !{!1799, !1800}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1797, file: !263, line: 96, baseType: !313, size: 8)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1797, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1794, file: !263, line: 100, baseType: !151, size: 16)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1758, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1758, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1758, file: !263, line: 131, baseType: !1805, size: 192, offset: 192)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !1806)
!1806 = !{!1807, !1808, !1814}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1805, file: !299, line: 245, baseType: !1764, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1805, file: !299, line: 246, baseType: !1809, size: 32, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !1810)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{null, !1813}
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1805, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1755, file: !263, line: 250, baseType: !1816, size: 288, offset: 384)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !1817)
!1817 = !{!1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1816, file: !334, line: 26, baseType: !137, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1816, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1816, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1816, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1816, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1816, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1816, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1816, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1816, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1755, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1755, file: !263, line: 256, baseType: !1786, size: 64, offset: 704)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1755, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1755, file: !263, line: 300, baseType: !1831, size: 96, offset: 800)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !1832)
!1832 = !{!1833, !1834, !1835}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1831, file: !263, line: 153, baseType: !22, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1831, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1831, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1755, file: !263, line: 325, baseType: !1837, size: 32, offset: 896)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !1839)
!1839 = !{!1840, !1846, !1847}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1838, file: !357, line: 5074, baseType: !1841, size: 96)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1842)
!1842 = !{!1843, !1844, !1845}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1841, file: !113, line: 57, baseType: !116, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1841, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1841, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1838, file: !357, line: 5075, baseType: !1786, size: 64, offset: 96)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1838, file: !357, line: 5076, baseType: !1848, offset: 160)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1755, file: !263, line: 343, baseType: !1850, size: 64, offset: 928)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1850, file: !334, line: 63, baseType: !137, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1850, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1749, file: !299, line: 111, baseType: !1754, size: 32, offset: 96)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1749, file: !299, line: 124, baseType: !103, size: 32, offset: 128)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1749, file: !299, line: 127, baseType: !208, size: 8, offset: 160)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1749, file: !299, line: 153, baseType: !1858, offset: 168)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1859, line: 33, elements: !162)
!1859 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1745, file: !299, line: 170, baseType: !1861, size: 96, offset: 192)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !1862)
!1862 = !{!1863, !1864}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1861, file: !299, line: 86, baseType: !1754, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1861, file: !299, line: 90, baseType: !1790, size: 64, offset: 32)
!1865 = !DIGlobalVariableExpression(var: !1866, expr: !DIExpression())
!1866 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1657, file: !1661, line: 43, type: !1867, isLocal: false, isDefinition: true, align: 512)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1868, size: 8704, elements: !1872)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1869, line: 47, size: 8, elements: !1870)
!1869 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1870 = !{!1871}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1868, file: !1869, line: 48, baseType: !109, size: 8)
!1872 = !{!1873}
!1873 = !DISubrange(count: 1088)
!1874 = !DIGlobalVariableExpression(var: !1875, expr: !DIExpression())
!1875 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1657, file: !1661, line: 44, type: !1755, isLocal: false, isDefinition: true)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1657, file: !1661, line: 48, type: !1878, isLocal: false, isDefinition: true)
!1878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1755, size: 1024, elements: !391)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1657, file: !1661, line: 217, type: !211, isLocal: false, isDefinition: true)
!1881 = !DIGlobalVariableExpression(var: !1882, expr: !DIExpression())
!1882 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1657, file: !1661, line: 50, type: !1883, isLocal: true, isDefinition: true, align: 512)
!1883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1868, size: 3072, elements: !1884)
!1884 = !{!392, !1885}
!1885 = !DISubrange(count: 384)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "levels", scope: !1888, file: !1661, line: 232, type: !1908, isLocal: true, isDefinition: true)
!1888 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1661, file: !1661, line: 230, type: !1889, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !1891)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{null, !1660}
!1891 = !{!1892, !1893, !1903, !1907}
!1892 = !DILocalVariable(name: "level", arg: 1, scope: !1888, file: !1661, line: 230, type: !1660)
!1893 = !DILocalVariable(name: "entry", scope: !1888, file: !1661, line: 244, type: !1894)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1896)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1897)
!1897 = !{!1898, !1902}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1896, file: !187, line: 60, baseType: !1899, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{!103, !1679}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1896, file: !187, line: 65, baseType: !1679, size: 32, offset: 32)
!1903 = !DILocalVariable(name: "dev", scope: !1904, file: !1661, line: 247, type: !1679)
!1904 = distinct !DILexicalBlock(scope: !1905, file: !1661, line: 246, column: 64)
!1905 = distinct !DILexicalBlock(scope: !1906, file: !1661, line: 246, column: 2)
!1906 = distinct !DILexicalBlock(scope: !1888, file: !1661, line: 246, column: 2)
!1907 = !DILocalVariable(name: "rc", scope: !1904, file: !1661, line: 248, type: !103)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 192, elements: !1909)
!1909 = !{!1910}
!1910 = !DISubrange(count: 6)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1868, size: 16896, elements: !1912)
!1912 = !{!392, !1913}
!1913 = !DISubrange(count: 2112)
!1914 = !DIGlobalVariableExpression(var: !1915, expr: !DIExpression())
!1915 = distinct !DIGlobalVariable(name: "states_str", scope: !1916, file: !1917, line: 276, type: !2038, isLocal: true, isDefinition: true)
!1916 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1917, file: !1917, line: 271, type: !1918, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !2029)
!1917 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1918 = !DISubroutineType(types: !1919)
!1919 = !{!199, !1920, !1002, !120}
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !1921)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !1923)
!1923 = !{!1924, !1982, !1994, !1995, !1996, !1997, !2003, !2016}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1922, file: !263, line: 247, baseType: !1925, size: 384)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !1926)
!1926 = !{!1927, !1951, !1958, !1959, !1960, !1969, !1970, !1971}
!1927 = !DIDerivedType(tag: DW_TAG_member, scope: !1925, file: !263, line: 60, baseType: !1928, size: 64)
!1928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1925, file: !263, line: 60, size: 64, elements: !1929)
!1929 = !{!1930, !1945}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1928, file: !263, line: 61, baseType: !1931, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !1932)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !1933)
!1933 = !{!1934, !1940}
!1934 = !DIDerivedType(tag: DW_TAG_member, scope: !1932, file: !273, line: 38, baseType: !1935, size: 32)
!1935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1932, file: !273, line: 38, size: 32, elements: !1936)
!1936 = !{!1937, !1939}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1935, file: !273, line: 39, baseType: !1938, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1935, file: !273, line: 40, baseType: !1938, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, scope: !1932, file: !273, line: 42, baseType: !1941, size: 32, offset: 32)
!1941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1932, file: !273, line: 42, size: 32, elements: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1941, file: !273, line: 43, baseType: !1938, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1941, file: !273, line: 44, baseType: !1938, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1928, file: !263, line: 62, baseType: !1946, size: 64)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !1947)
!1947 = !{!1948}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1946, file: !289, line: 50, baseType: !1949, size: 64)
!1949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1950, size: 64, elements: !294)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1925, file: !263, line: 68, baseType: !1952, size: 32, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !1955)
!1955 = !{!1956}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1954, file: !299, line: 232, baseType: !1957, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !1932)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1925, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1925, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!1960 = !DIDerivedType(tag: DW_TAG_member, scope: !1925, file: !263, line: 90, baseType: !1961, size: 16, offset: 112)
!1961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1925, file: !263, line: 90, size: 16, elements: !1962)
!1962 = !{!1963, !1968}
!1963 = !DIDerivedType(tag: DW_TAG_member, scope: !1961, file: !263, line: 91, baseType: !1964, size: 16)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1961, file: !263, line: 91, size: 16, elements: !1965)
!1965 = !{!1966, !1967}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1964, file: !263, line: 96, baseType: !313, size: 8)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1964, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1961, file: !263, line: 100, baseType: !151, size: 16)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1925, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1925, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1925, file: !263, line: 131, baseType: !1972, size: 192, offset: 192)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !1973)
!1973 = !{!1974, !1975, !1981}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1972, file: !299, line: 245, baseType: !1931, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1972, file: !299, line: 246, baseType: !1976, size: 32, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !1977)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{null, !1980}
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1972, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1922, file: !263, line: 250, baseType: !1983, size: 288, offset: 384)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1983, file: !334, line: 26, baseType: !137, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1983, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1983, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1983, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1983, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1983, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1983, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1983, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1983, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1922, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1922, file: !263, line: 256, baseType: !1953, size: 64, offset: 704)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1922, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1922, file: !263, line: 300, baseType: !1998, size: 96, offset: 800)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !1999)
!1999 = !{!2000, !2001, !2002}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1998, file: !263, line: 153, baseType: !22, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1998, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1998, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1922, file: !263, line: 325, baseType: !2004, size: 32, offset: 896)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 32)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2006)
!2006 = !{!2007, !2013, !2014}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2005, file: !357, line: 5074, baseType: !2008, size: 96)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2009)
!2009 = !{!2010, !2011, !2012}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2008, file: !113, line: 57, baseType: !116, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2008, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2008, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2005, file: !357, line: 5075, baseType: !1953, size: 64, offset: 96)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2005, file: !357, line: 5076, baseType: !2015, offset: 160)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1922, file: !263, line: 343, baseType: !2017, size: 64, offset: 928)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2018)
!2018 = !{!2019, !2020}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2017, file: !334, line: 63, baseType: !137, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2017, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2021 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2022, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2023, globals: !2025, splitDebugInlining: false, nameTableKind: None)
!2022 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2023 = !{!102, !199, !1399, !208, !103, !2024, !24, !120, !1002, !22, !137, !163}
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!2025 = !{!1914, !2026}
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(name: "states_sz", scope: !1916, file: !1917, line: 279, type: !2028, isLocal: true, isDefinition: true)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1591, size: 256, elements: !159)
!2029 = !{!2030, !2031, !2032, !2033, !2034, !2035, !2036}
!2030 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1916, file: !1917, line: 271, type: !1920)
!2031 = !DILocalVariable(name: "buf", arg: 2, scope: !1916, file: !1917, line: 271, type: !1002)
!2032 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1916, file: !1917, line: 271, type: !120)
!2033 = !DILocalVariable(name: "off", scope: !1916, file: !1917, line: 273, type: !120)
!2034 = !DILocalVariable(name: "bit", scope: !1916, file: !1917, line: 274, type: !208)
!2035 = !DILocalVariable(name: "thread_state", scope: !1916, file: !1917, line: 275, type: !208)
!2036 = !DILocalVariable(name: "index", scope: !2037, file: !1917, line: 293, type: !208)
!2037 = distinct !DILexicalBlock(scope: !1916, file: !1917, line: 293, column: 2)
!2038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 256, elements: !159)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2041, file: !2149, line: 56, type: !2138, isLocal: false, isDefinition: true)
!2041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2043, globals: !2146, splitDebugInlining: false, nameTableKind: None)
!2042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2043 = !{!2044, !1002, !102, !2144, !1694, !1399, !612, !103, !137, !163, !2145}
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !2046)
!2046 = !{!2047, !2105, !2117, !2118, !2119, !2120, !2126, !2139}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2045, file: !263, line: 247, baseType: !2048, size: 384)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !2049)
!2049 = !{!2050, !2074, !2081, !2082, !2083, !2092, !2093, !2094}
!2050 = !DIDerivedType(tag: DW_TAG_member, scope: !2048, file: !263, line: 60, baseType: !2051, size: 64)
!2051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2048, file: !263, line: 60, size: 64, elements: !2052)
!2052 = !{!2053, !2068}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2051, file: !263, line: 61, baseType: !2054, size: 64)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2056)
!2056 = !{!2057, !2063}
!2057 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !273, line: 38, baseType: !2058, size: 32)
!2058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2055, file: !273, line: 38, size: 32, elements: !2059)
!2059 = !{!2060, !2062}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2058, file: !273, line: 39, baseType: !2061, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2058, file: !273, line: 40, baseType: !2061, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !273, line: 42, baseType: !2064, size: 32, offset: 32)
!2064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2055, file: !273, line: 42, size: 32, elements: !2065)
!2065 = !{!2066, !2067}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2064, file: !273, line: 43, baseType: !2061, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2064, file: !273, line: 44, baseType: !2061, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2051, file: !263, line: 62, baseType: !2069, size: 64)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !2070)
!2070 = !{!2071}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2069, file: !289, line: 50, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2073, size: 64, elements: !294)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2048, file: !263, line: 68, baseType: !2075, size: 32, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !2078)
!2078 = !{!2079}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2077, file: !299, line: 232, baseType: !2080, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2055)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2048, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2048, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!2083 = !DIDerivedType(tag: DW_TAG_member, scope: !2048, file: !263, line: 90, baseType: !2084, size: 16, offset: 112)
!2084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2048, file: !263, line: 90, size: 16, elements: !2085)
!2085 = !{!2086, !2091}
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !263, line: 91, baseType: !2087, size: 16)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2084, file: !263, line: 91, size: 16, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2087, file: !263, line: 96, baseType: !313, size: 8)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2087, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2084, file: !263, line: 100, baseType: !151, size: 16)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2048, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2048, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2048, file: !263, line: 131, baseType: !2095, size: 192, offset: 192)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2096)
!2096 = !{!2097, !2098, !2104}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2095, file: !299, line: 245, baseType: !2054, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2095, file: !299, line: 246, baseType: !2099, size: 32, offset: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2100)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 32)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{null, !2103}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2095, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2045, file: !263, line: 250, baseType: !2106, size: 288, offset: 384)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !2107)
!2107 = !{!2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2106, file: !334, line: 26, baseType: !137, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2106, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2106, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2106, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2106, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2106, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2106, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2106, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2106, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2045, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2045, file: !263, line: 256, baseType: !2076, size: 64, offset: 704)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2045, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2045, file: !263, line: 300, baseType: !2121, size: 96, offset: 800)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !2122)
!2122 = !{!2123, !2124, !2125}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2121, file: !263, line: 153, baseType: !22, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2121, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2121, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2045, file: !263, line: 325, baseType: !2127, size: 32, offset: 896)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2129)
!2129 = !{!2130, !2136, !2137}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2128, file: !357, line: 5074, baseType: !2131, size: 96)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2132)
!2132 = !{!2133, !2134, !2135}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2131, file: !113, line: 57, baseType: !116, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2131, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2131, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2128, file: !357, line: 5075, baseType: !2076, size: 64, offset: 96)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2128, file: !357, line: 5076, baseType: !2138, offset: 160)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2045, file: !263, line: 343, baseType: !2140, size: 64, offset: 928)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2141)
!2141 = !{!2142, !2143}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2140, file: !334, line: 63, baseType: !137, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2140, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2146 = !{!2039, !2147, !2150, !2152}
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2041, file: !2149, line: 404, type: !103, isLocal: true, isDefinition: true)
!2149 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2041, file: !2149, line: 405, type: !103, isLocal: true, isDefinition: true)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "pending_current", scope: !2041, file: !2149, line: 425, type: !2044, isLocal: true, isDefinition: true)
!2154 = !DIGlobalVariableExpression(var: !2155, expr: !DIExpression())
!2155 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2156, file: !2186, line: 15, type: !163, isLocal: true, isDefinition: true)
!2156 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2157, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2158, globals: !2183, splitDebugInlining: false, nameTableKind: None)
!2157 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2158 = !{!1399, !102, !612, !137, !163, !103, !2159, !1002, !330}
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 32)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2161)
!2161 = !{!2162, !2177, !2182}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2160, file: !299, line: 245, baseType: !2163, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2164)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2165)
!2165 = !{!2166, !2172}
!2166 = !DIDerivedType(tag: DW_TAG_member, scope: !2164, file: !273, line: 38, baseType: !2167, size: 32)
!2167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2164, file: !273, line: 38, size: 32, elements: !2168)
!2168 = !{!2169, !2171}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2167, file: !273, line: 39, baseType: !2170, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2167, file: !273, line: 40, baseType: !2170, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, scope: !2164, file: !273, line: 42, baseType: !2173, size: 32, offset: 32)
!2173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2164, file: !273, line: 42, size: 32, elements: !2174)
!2174 = !{!2175, !2176}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2173, file: !273, line: 43, baseType: !2170, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2173, file: !273, line: 44, baseType: !2170, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2160, file: !299, line: 246, baseType: !2178, size: 32, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2179)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 32)
!2180 = !DISubroutineType(types: !2181)
!2181 = !{null, !2159}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2160, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2183 = !{!2154, !2184, !2188, !2190}
!2184 = !DIGlobalVariableExpression(var: !2185, expr: !DIExpression())
!2185 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2156, file: !2186, line: 19, type: !2187, isLocal: true, isDefinition: true)
!2186 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2156, file: !2186, line: 25, type: !103, isLocal: true, isDefinition: true)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2156, file: !2186, line: 17, type: !2192, isLocal: true, isDefinition: true)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2164)
!2193 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2194, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2194 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2196, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2196 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2199, splitDebugInlining: false, nameTableKind: None)
!2198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2199 = !{!102, !120, !1694, !24, !2200, !22, !2205, !103, !149, !150}
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !2202)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !2203)
!2203 = !{!2204}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2202, file: !142, line: 58, baseType: !158, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !2207)
!2207 = !{!2208, !2211, !2212, !2213, !2214, !2215, !2216}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2206, file: !142, line: 69, baseType: !2209, size: 64)
!2209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2210, size: 64, elements: !294)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !142, line: 61, baseType: !137)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2206, file: !142, line: 70, baseType: !2210, size: 32, offset: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2206, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2206, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2206, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2206, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2206, file: !142, line: 77, baseType: !2217, offset: 224)
!2217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2218, elements: !2221)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !2219)
!2219 = !{!2220}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2218, file: !142, line: 65, baseType: !2210, size: 32)
!2221 = !{!2222}
!2222 = !DISubrange(count: 0)
!2223 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2224, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2225, retainedTypes: !2245, splitDebugInlining: false, nameTableKind: None)
!2224 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2225 = !{!2226, !2234}
!2226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2227, line: 69, baseType: !32, size: 32, elements: !2228)
!2227 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2228 = !{!2229, !2230, !2231, !2232, !2233}
!2229 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2230 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2231 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2232 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2233 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2234 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2227, line: 56, baseType: !32, size: 32, elements: !2235)
!2235 = !{!2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244}
!2236 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2237 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2238 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2239 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2240 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2241 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2242 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2243 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2244 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2245 = !{!103, !2226, !2234, !2246, !314, !218, !2248, !2249, !209, !152, !199, !120, !102, !22, !32, !2251, !2252, !2253, !2254, !2255, !331, !2256, !2247, !2257, !2258, !2259, !2260}
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2227, line: 31, baseType: !2247)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !331)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !121, line: 329, baseType: !32)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2227, line: 32, baseType: !2250)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !164)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!2254 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !121, line: 145, baseType: !103)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2261 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2262, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2262 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2263 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2264, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2265, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2264 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2265 = !{!2266, !30}
!2266 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2267, line: 27, baseType: !32, size: 32, elements: !2268)
!2267 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2268 = !{!2269, !2270, !2271, !2272, !2273}
!2269 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2270 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2271 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2272 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2273 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2275, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2276, retainedTypes: !2277, splitDebugInlining: false, nameTableKind: None)
!2275 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2276 = !{!471, !2266, !30}
!2277 = !{!638, !2278, !102, !103, !612, !137, !208, !2295}
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2280)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2280, file: !402, line: 413, baseType: !1414, size: 256)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2280, file: !402, line: 414, baseType: !1416, size: 768, offset: 256)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2280, file: !402, line: 415, baseType: !1414, size: 256, offset: 1024)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2280, file: !402, line: 416, baseType: !1416, size: 768, offset: 1280)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2280, file: !402, line: 417, baseType: !1414, size: 256, offset: 2048)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2280, file: !402, line: 418, baseType: !1416, size: 768, offset: 2304)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2280, file: !402, line: 419, baseType: !1414, size: 256, offset: 3072)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2280, file: !402, line: 420, baseType: !1416, size: 768, offset: 3328)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2280, file: !402, line: 421, baseType: !1414, size: 256, offset: 4096)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2280, file: !402, line: 422, baseType: !1427, size: 1792, offset: 4352)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2280, file: !402, line: 423, baseType: !1431, size: 1920, offset: 6144)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2280, file: !402, line: 424, baseType: !1436, size: 20608, offset: 8064)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2280, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2297)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2298)
!2298 = !{!2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2297, file: !402, line: 447, baseType: !406, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2297, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2297, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2297, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2297, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2297, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2297, file: !402, line: 453, baseType: !1451, size: 96, offset: 192)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2297, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2297, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2297, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2297, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2297, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2297, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2297, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2297, file: !402, line: 461, baseType: !1460, size: 64, offset: 512)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2297, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2297, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2297, file: !402, line: 464, baseType: !1464, size: 128, offset: 640)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2297, file: !402, line: 465, baseType: !1466, size: 160, offset: 768)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2297, file: !402, line: 466, baseType: !1468, size: 160, offset: 928)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2297, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2321, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2321 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2323, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2324, splitDebugInlining: false, nameTableKind: None)
!2323 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2324 = !{!102, !103, !22, !2325}
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2327)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2328)
!2328 = !{!2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2327, file: !402, line: 447, baseType: !406, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2327, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2327, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2327, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2327, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2327, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2327, file: !402, line: 453, baseType: !1451, size: 96, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2327, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2327, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2327, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2327, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2327, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2327, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2327, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2327, file: !402, line: 461, baseType: !1460, size: 64, offset: 512)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2327, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2327, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2327, file: !402, line: 464, baseType: !1464, size: 128, offset: 640)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2327, file: !402, line: 465, baseType: !1466, size: 160, offset: 768)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2327, file: !402, line: 466, baseType: !1468, size: 160, offset: 928)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2327, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2350 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2351, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2352, splitDebugInlining: false, nameTableKind: None)
!2351 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2352 = !{!2353, !102, !103}
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2355)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2356)
!2356 = !{!2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2355, file: !402, line: 447, baseType: !406, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2355, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2355, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2355, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2355, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2355, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2355, file: !402, line: 453, baseType: !1451, size: 96, offset: 192)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2355, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2355, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2355, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2355, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2355, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2355, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2355, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2355, file: !402, line: 461, baseType: !1460, size: 64, offset: 512)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2355, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2355, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2355, file: !402, line: 464, baseType: !1464, size: 128, offset: 640)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2355, file: !402, line: 465, baseType: !1466, size: 160, offset: 768)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2355, file: !402, line: 466, baseType: !1468, size: 160, offset: 928)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2355, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2378 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2379, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2380, splitDebugInlining: false, nameTableKind: None)
!2379 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2380 = !{!2381, !137, !102, !103}
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2383, line: 98, size: 256, elements: !2384)
!2383 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2384 = !{!2385, !2390, !2395, !2400, !2405, !2410, !2415, !2420}
!2385 = !DIDerivedType(tag: DW_TAG_member, scope: !2382, file: !2383, line: 99, baseType: !2386, size: 32)
!2386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2382, file: !2383, line: 99, size: 32, elements: !2387)
!2387 = !{!2388, !2389}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2386, file: !2383, line: 99, baseType: !137, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2386, file: !2383, line: 99, baseType: !137, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, scope: !2382, file: !2383, line: 100, baseType: !2391, size: 32, offset: 32)
!2391 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2382, file: !2383, line: 100, size: 32, elements: !2392)
!2392 = !{!2393, !2394}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2391, file: !2383, line: 100, baseType: !137, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2391, file: !2383, line: 100, baseType: !137, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, scope: !2382, file: !2383, line: 101, baseType: !2396, size: 32, offset: 64)
!2396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2382, file: !2383, line: 101, size: 32, elements: !2397)
!2397 = !{!2398, !2399}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2396, file: !2383, line: 101, baseType: !137, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2396, file: !2383, line: 101, baseType: !137, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, scope: !2382, file: !2383, line: 102, baseType: !2401, size: 32, offset: 96)
!2401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2382, file: !2383, line: 102, size: 32, elements: !2402)
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2401, file: !2383, line: 102, baseType: !137, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2401, file: !2383, line: 102, baseType: !137, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, scope: !2382, file: !2383, line: 103, baseType: !2406, size: 32, offset: 128)
!2406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2382, file: !2383, line: 103, size: 32, elements: !2407)
!2407 = !{!2408, !2409}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2406, file: !2383, line: 103, baseType: !137, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2406, file: !2383, line: 103, baseType: !137, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, scope: !2382, file: !2383, line: 104, baseType: !2411, size: 32, offset: 160)
!2411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2382, file: !2383, line: 104, size: 32, elements: !2412)
!2412 = !{!2413, !2414}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2411, file: !2383, line: 104, baseType: !137, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2411, file: !2383, line: 104, baseType: !137, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, scope: !2382, file: !2383, line: 105, baseType: !2416, size: 32, offset: 192)
!2416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2382, file: !2383, line: 105, size: 32, elements: !2417)
!2417 = !{!2418, !2419}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2416, file: !2383, line: 105, baseType: !137, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2416, file: !2383, line: 105, baseType: !137, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2382, file: !2383, line: 106, baseType: !137, size: 32, offset: 224)
!2421 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2422, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2265, retainedTypes: !2423, splitDebugInlining: false, nameTableKind: None)
!2422 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2423 = !{!2424, !102, !103, !2449, !150, !137}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2427)
!2427 = !{!2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2426, file: !402, line: 447, baseType: !406, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2426, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2426, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2426, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2426, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2426, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2426, file: !402, line: 453, baseType: !1451, size: 96, offset: 192)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2426, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2426, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2426, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2426, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2426, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2426, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2426, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2426, file: !402, line: 461, baseType: !1460, size: 64, offset: 512)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2426, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2426, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2426, file: !402, line: 464, baseType: !1464, size: 128, offset: 640)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2426, file: !402, line: 465, baseType: !1466, size: 160, offset: 768)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2426, file: !402, line: 466, baseType: !1468, size: 160, offset: 928)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2426, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2383, line: 141, baseType: !2451)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2383, line: 97, size: 256, elements: !2452)
!2452 = !{!2453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2451, file: !2383, line: 107, baseType: !2454, size: 256)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2383, line: 98, size: 256, elements: !2455)
!2455 = !{!2456, !2461, !2466, !2471, !2476, !2481, !2486, !2491}
!2456 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !2383, line: 99, baseType: !2457, size: 32)
!2457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !2383, line: 99, size: 32, elements: !2458)
!2458 = !{!2459, !2460}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2457, file: !2383, line: 99, baseType: !137, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2457, file: !2383, line: 99, baseType: !137, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !2383, line: 100, baseType: !2462, size: 32, offset: 32)
!2462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !2383, line: 100, size: 32, elements: !2463)
!2463 = !{!2464, !2465}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2462, file: !2383, line: 100, baseType: !137, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2462, file: !2383, line: 100, baseType: !137, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !2383, line: 101, baseType: !2467, size: 32, offset: 64)
!2467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !2383, line: 101, size: 32, elements: !2468)
!2468 = !{!2469, !2470}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2467, file: !2383, line: 101, baseType: !137, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2467, file: !2383, line: 101, baseType: !137, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !2383, line: 102, baseType: !2472, size: 32, offset: 96)
!2472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !2383, line: 102, size: 32, elements: !2473)
!2473 = !{!2474, !2475}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2472, file: !2383, line: 102, baseType: !137, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2472, file: !2383, line: 102, baseType: !137, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !2383, line: 103, baseType: !2477, size: 32, offset: 128)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !2383, line: 103, size: 32, elements: !2478)
!2478 = !{!2479, !2480}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2477, file: !2383, line: 103, baseType: !137, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2477, file: !2383, line: 103, baseType: !137, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !2383, line: 104, baseType: !2482, size: 32, offset: 160)
!2482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !2383, line: 104, size: 32, elements: !2483)
!2483 = !{!2484, !2485}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2482, file: !2383, line: 104, baseType: !137, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2482, file: !2383, line: 104, baseType: !137, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !2383, line: 105, baseType: !2487, size: 32, offset: 192)
!2487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !2383, line: 105, size: 32, elements: !2488)
!2488 = !{!2489, !2490}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2487, file: !2383, line: 105, baseType: !137, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2487, file: !2383, line: 105, baseType: !137, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2454, file: !2383, line: 106, baseType: !137, size: 32, offset: 224)
!2492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1397, retainedTypes: !2494, splitDebugInlining: false, nameTableKind: None)
!2493 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2494 = !{!638, !612, !208, !137, !2495, !2512}
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2497)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2498)
!2498 = !{!2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2497, file: !402, line: 413, baseType: !1414, size: 256)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2497, file: !402, line: 414, baseType: !1416, size: 768, offset: 256)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2497, file: !402, line: 415, baseType: !1414, size: 256, offset: 1024)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2497, file: !402, line: 416, baseType: !1416, size: 768, offset: 1280)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2497, file: !402, line: 417, baseType: !1414, size: 256, offset: 2048)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2497, file: !402, line: 418, baseType: !1416, size: 768, offset: 2304)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2497, file: !402, line: 419, baseType: !1414, size: 256, offset: 3072)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2497, file: !402, line: 420, baseType: !1416, size: 768, offset: 3328)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2497, file: !402, line: 421, baseType: !1414, size: 256, offset: 4096)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2497, file: !402, line: 422, baseType: !1427, size: 1792, offset: 4352)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2497, file: !402, line: 423, baseType: !1431, size: 1920, offset: 6144)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2497, file: !402, line: 424, baseType: !1436, size: 20608, offset: 8064)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2497, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2514)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2515)
!2515 = !{!2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2514, file: !402, line: 447, baseType: !406, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2514, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2514, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2514, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2514, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2514, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2514, file: !402, line: 453, baseType: !1451, size: 96, offset: 192)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2514, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2514, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2514, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2514, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2514, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2514, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2514, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2514, file: !402, line: 461, baseType: !1460, size: 64, offset: 512)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2514, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2514, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2514, file: !402, line: 464, baseType: !1464, size: 128, offset: 640)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2514, file: !402, line: 465, baseType: !1466, size: 160, offset: 768)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2514, file: !402, line: 466, baseType: !1468, size: 160, offset: 928)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2514, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2538, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2539, splitDebugInlining: false, nameTableKind: None)
!2538 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2539 = !{!2540, !102, !103}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2542)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2543)
!2543 = !{!2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2542, file: !402, line: 447, baseType: !406, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2542, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2542, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2542, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2542, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2542, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2542, file: !402, line: 453, baseType: !1451, size: 96, offset: 192)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2542, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2542, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2542, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2542, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2542, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2542, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2542, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2542, file: !402, line: 461, baseType: !1460, size: 64, offset: 512)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2542, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2542, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2542, file: !402, line: 464, baseType: !1464, size: 128, offset: 640)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2542, file: !402, line: 465, baseType: !1466, size: 160, offset: 768)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2542, file: !402, line: 466, baseType: !1468, size: 160, offset: 928)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2542, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2565 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2566, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2567, splitDebugInlining: false, nameTableKind: None)
!2566 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2567 = !{!109, !1002, !120, !837, !2568, !209, !102}
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!2570 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2571, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2572, splitDebugInlining: false, nameTableKind: None)
!2571 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2572 = !{!2573}
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 370, baseType: !2575)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 336, size: 1152, elements: !2576)
!2576 = !{!2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2575, file: !172, line: 338, baseType: !176, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2575, file: !172, line: 339, baseType: !176, size: 32, offset: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2575, file: !172, line: 340, baseType: !176, size: 32, offset: 64)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2575, file: !172, line: 341, baseType: !176, size: 32, offset: 96)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2575, file: !172, line: 342, baseType: !176, size: 32, offset: 128)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2575, file: !172, line: 343, baseType: !176, size: 32, offset: 160)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2575, file: !172, line: 344, baseType: !176, size: 32, offset: 192)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2575, file: !172, line: 345, baseType: !137, size: 32, offset: 224)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2575, file: !172, line: 346, baseType: !176, size: 32, offset: 256)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2575, file: !172, line: 347, baseType: !176, size: 32, offset: 288)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2575, file: !172, line: 348, baseType: !704, size: 64, offset: 320)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2575, file: !172, line: 349, baseType: !176, size: 32, offset: 384)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2575, file: !172, line: 350, baseType: !176, size: 32, offset: 416)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2575, file: !172, line: 351, baseType: !176, size: 32, offset: 448)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2575, file: !172, line: 352, baseType: !137, size: 32, offset: 480)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2575, file: !172, line: 353, baseType: !176, size: 32, offset: 512)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2575, file: !172, line: 354, baseType: !176, size: 32, offset: 544)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2575, file: !172, line: 355, baseType: !704, size: 64, offset: 576)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2575, file: !172, line: 356, baseType: !176, size: 32, offset: 640)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2575, file: !172, line: 357, baseType: !176, size: 32, offset: 672)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2575, file: !172, line: 358, baseType: !176, size: 32, offset: 704)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2575, file: !172, line: 359, baseType: !137, size: 32, offset: 736)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2575, file: !172, line: 360, baseType: !176, size: 32, offset: 768)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2575, file: !172, line: 361, baseType: !176, size: 32, offset: 800)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2575, file: !172, line: 362, baseType: !704, size: 64, offset: 832)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2575, file: !172, line: 363, baseType: !176, size: 32, offset: 896)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2575, file: !172, line: 364, baseType: !176, size: 32, offset: 928)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2575, file: !172, line: 365, baseType: !704, size: 64, offset: 960)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2575, file: !172, line: 366, baseType: !176, size: 32, offset: 1024)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2575, file: !172, line: 367, baseType: !176, size: 32, offset: 1056)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2575, file: !172, line: 368, baseType: !725, size: 32, offset: 1088)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2575, file: !172, line: 369, baseType: !176, size: 32, offset: 1120)
!2609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2610 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2611 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2612, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2613, retainedTypes: !2629, splitDebugInlining: false, nameTableKind: None)
!2612 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2613 = !{!2614, !2621, !2625}
!2614 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2615, line: 38, baseType: !32, size: 32, elements: !2616)
!2615 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2616 = !{!2617, !2618, !2619, !2620}
!2617 = !DIEnumerator(name: "HAL_OK", value: 0)
!2618 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2619 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2620 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2621 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !677, line: 184, baseType: !32, size: 32, elements: !2622)
!2622 = !{!2623, !2624}
!2623 = !DIEnumerator(name: "RESET", value: 0)
!2624 = !DIEnumerator(name: "SET", value: 1)
!2625 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !677, line: 190, baseType: !32, size: 32, elements: !2626)
!2626 = !{!2627, !2628}
!2627 = !DIEnumerator(name: "DISABLE", value: 0)
!2628 = !DIEnumerator(name: "ENABLE", value: 1)
!2629 = !{!102, !2630, !208, !137, !1315, !2666, !2672, !2683, !151, !2684, !163}
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 370, baseType: !2632)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 336, size: 1152, elements: !2633)
!2633 = !{!2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2632, file: !172, line: 338, baseType: !176, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2632, file: !172, line: 339, baseType: !176, size: 32, offset: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2632, file: !172, line: 340, baseType: !176, size: 32, offset: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2632, file: !172, line: 341, baseType: !176, size: 32, offset: 96)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2632, file: !172, line: 342, baseType: !176, size: 32, offset: 128)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2632, file: !172, line: 343, baseType: !176, size: 32, offset: 160)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2632, file: !172, line: 344, baseType: !176, size: 32, offset: 192)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2632, file: !172, line: 345, baseType: !137, size: 32, offset: 224)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2632, file: !172, line: 346, baseType: !176, size: 32, offset: 256)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2632, file: !172, line: 347, baseType: !176, size: 32, offset: 288)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2632, file: !172, line: 348, baseType: !704, size: 64, offset: 320)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2632, file: !172, line: 349, baseType: !176, size: 32, offset: 384)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2632, file: !172, line: 350, baseType: !176, size: 32, offset: 416)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2632, file: !172, line: 351, baseType: !176, size: 32, offset: 448)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2632, file: !172, line: 352, baseType: !137, size: 32, offset: 480)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2632, file: !172, line: 353, baseType: !176, size: 32, offset: 512)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2632, file: !172, line: 354, baseType: !176, size: 32, offset: 544)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2632, file: !172, line: 355, baseType: !704, size: 64, offset: 576)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2632, file: !172, line: 356, baseType: !176, size: 32, offset: 640)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2632, file: !172, line: 357, baseType: !176, size: 32, offset: 672)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2632, file: !172, line: 358, baseType: !176, size: 32, offset: 704)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2632, file: !172, line: 359, baseType: !137, size: 32, offset: 736)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2632, file: !172, line: 360, baseType: !176, size: 32, offset: 768)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2632, file: !172, line: 361, baseType: !176, size: 32, offset: 800)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2632, file: !172, line: 362, baseType: !704, size: 64, offset: 832)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2632, file: !172, line: 363, baseType: !176, size: 32, offset: 896)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2632, file: !172, line: 364, baseType: !176, size: 32, offset: 928)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2632, file: !172, line: 365, baseType: !704, size: 64, offset: 960)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2632, file: !172, line: 366, baseType: !176, size: 32, offset: 1024)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2632, file: !172, line: 367, baseType: !176, size: 32, offset: 1056)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2632, file: !172, line: 368, baseType: !725, size: 32, offset: 1088)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2632, file: !172, line: 369, baseType: !176, size: 32, offset: 1120)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 330, baseType: !2668)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 326, size: 64, elements: !2669)
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2668, file: !172, line: 328, baseType: !176, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2668, file: !172, line: 329, baseType: !176, size: 32, offset: 32)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 259, baseType: !2674)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 250, size: 224, elements: !2675)
!2675 = !{!2676, !2677, !2678, !2679, !2680, !2681, !2682}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2674, file: !172, line: 252, baseType: !176, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2674, file: !172, line: 253, baseType: !176, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2674, file: !172, line: 254, baseType: !176, size: 32, offset: 64)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2674, file: !172, line: 255, baseType: !176, size: 32, offset: 96)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2674, file: !172, line: 256, baseType: !176, size: 32, offset: 128)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2674, file: !172, line: 257, baseType: !176, size: 32, offset: 160)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2674, file: !172, line: 258, baseType: !176, size: 32, offset: 192)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 276, baseType: !2686)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 265, size: 320, elements: !2687)
!2687 = !{!2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2686, file: !172, line: 267, baseType: !176, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2686, file: !172, line: 268, baseType: !176, size: 32, offset: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2686, file: !172, line: 269, baseType: !176, size: 32, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2686, file: !172, line: 270, baseType: !176, size: 32, offset: 96)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2686, file: !172, line: 271, baseType: !176, size: 32, offset: 128)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2686, file: !172, line: 272, baseType: !176, size: 32, offset: 160)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2686, file: !172, line: 273, baseType: !176, size: 32, offset: 192)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2686, file: !172, line: 274, baseType: !176, size: 32, offset: 224)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2686, file: !172, line: 275, baseType: !991, size: 64, offset: 256)
!2697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2698, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2699, retainedTypes: !2700, splitDebugInlining: false, nameTableKind: None)
!2698 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2699 = !{!676}
!2700 = !{!2701, !137, !2709, !2715, !2726}
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !2703)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !2704)
!2704 = !{!2705, !2706, !2707, !2708}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2703, file: !402, line: 766, baseType: !176, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2703, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2703, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2703, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 330, baseType: !2711)
!2711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 326, size: 64, elements: !2712)
!2712 = !{!2713, !2714}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2711, file: !172, line: 328, baseType: !176, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2711, file: !172, line: 329, baseType: !176, size: 32, offset: 32)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 259, baseType: !2717)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 250, size: 224, elements: !2718)
!2718 = !{!2719, !2720, !2721, !2722, !2723, !2724, !2725}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2717, file: !172, line: 252, baseType: !176, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2717, file: !172, line: 253, baseType: !176, size: 32, offset: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2717, file: !172, line: 254, baseType: !176, size: 32, offset: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2717, file: !172, line: 255, baseType: !176, size: 32, offset: 96)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2717, file: !172, line: 256, baseType: !176, size: 32, offset: 128)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2717, file: !172, line: 257, baseType: !176, size: 32, offset: 160)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2717, file: !172, line: 258, baseType: !176, size: 32, offset: 192)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 370, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 336, size: 1152, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2728, file: !172, line: 338, baseType: !176, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2728, file: !172, line: 339, baseType: !176, size: 32, offset: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2728, file: !172, line: 340, baseType: !176, size: 32, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2728, file: !172, line: 341, baseType: !176, size: 32, offset: 96)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2728, file: !172, line: 342, baseType: !176, size: 32, offset: 128)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2728, file: !172, line: 343, baseType: !176, size: 32, offset: 160)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2728, file: !172, line: 344, baseType: !176, size: 32, offset: 192)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2728, file: !172, line: 345, baseType: !137, size: 32, offset: 224)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2728, file: !172, line: 346, baseType: !176, size: 32, offset: 256)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2728, file: !172, line: 347, baseType: !176, size: 32, offset: 288)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2728, file: !172, line: 348, baseType: !704, size: 64, offset: 320)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2728, file: !172, line: 349, baseType: !176, size: 32, offset: 384)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2728, file: !172, line: 350, baseType: !176, size: 32, offset: 416)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2728, file: !172, line: 351, baseType: !176, size: 32, offset: 448)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2728, file: !172, line: 352, baseType: !137, size: 32, offset: 480)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2728, file: !172, line: 353, baseType: !176, size: 32, offset: 512)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2728, file: !172, line: 354, baseType: !176, size: 32, offset: 544)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2728, file: !172, line: 355, baseType: !704, size: 64, offset: 576)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2728, file: !172, line: 356, baseType: !176, size: 32, offset: 640)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2728, file: !172, line: 357, baseType: !176, size: 32, offset: 672)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2728, file: !172, line: 358, baseType: !176, size: 32, offset: 704)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2728, file: !172, line: 359, baseType: !137, size: 32, offset: 736)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2728, file: !172, line: 360, baseType: !176, size: 32, offset: 768)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2728, file: !172, line: 361, baseType: !176, size: 32, offset: 800)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2728, file: !172, line: 362, baseType: !704, size: 64, offset: 832)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2728, file: !172, line: 363, baseType: !176, size: 32, offset: 896)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2728, file: !172, line: 364, baseType: !176, size: 32, offset: 928)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2728, file: !172, line: 365, baseType: !704, size: 64, offset: 960)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2728, file: !172, line: 366, baseType: !176, size: 32, offset: 1024)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2728, file: !172, line: 367, baseType: !176, size: 32, offset: 1056)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2728, file: !172, line: 368, baseType: !725, size: 32, offset: 1088)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2728, file: !172, line: 369, baseType: !176, size: 32, offset: 1120)
!2762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2763, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2764, splitDebugInlining: false, nameTableKind: None)
!2763 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2764 = !{!102, !120}
!2765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2767, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2767 = !{!2768, !2775, !30}
!2768 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2769, line: 14, baseType: !32, size: 32, elements: !2770)
!2769 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2770 = !{!2771, !2772, !2773, !2774}
!2771 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2772 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2773 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2774 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2775 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2769, line: 42, baseType: !32, size: 32, elements: !2776)
!2776 = !{!2777, !2778, !2779, !2780, !2781, !2782}
!2777 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2778 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2779 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2780 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2781 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2782 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2784 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2787, splitDebugInlining: false, nameTableKind: None)
!2786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2787 = !{!22, !102, !103}
!2788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2789, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2789 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!2790 = !{!"Ubuntu clang version 14.0.6"}
!2791 = !{i32 7, !"Dwarf Version", i32 4}
!2792 = !{i32 2, !"Debug Info Version", i32 3}
!2793 = !{i32 1, !"wchar_size", i32 4}
!2794 = !{i32 1, !"min_enum_size", i32 4}
!2795 = !{i32 1, !"branch-target-enforcement", i32 0}
!2796 = !{i32 1, !"sign-return-address", i32 0}
!2797 = !{i32 1, !"sign-return-address-all", i32 0}
!2798 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2799 = !{i32 7, !"frame-pointer", i32 2}
!2800 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2801, file: !2801, line: 26, type: !2802, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2193, retainedNodes: !162)
!2801 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2802 = !DISubroutineType(types: !2803)
!2803 = !{null}
!2804 = !DILocation(line: 28, column: 1, scope: !2800)
!2805 = !{i64 2154340078, i64 2154340098, i64 2154340161}
!2806 = !DILocation(line: 29, column: 1, scope: !2800)
!2807 = !{i64 2154340493, i64 2154340513, i64 2154340576}
!2808 = !DILocation(line: 30, column: 1, scope: !2800)
!2809 = !{i64 2154340912, i64 2154340932, i64 2154340995}
!2810 = !DILocation(line: 31, column: 1, scope: !2800)
!2811 = !{i64 2154341331, i64 2154341351, i64 2154341414}
!2812 = !DILocation(line: 33, column: 1, scope: !2800)
!2813 = !{i64 2154341623, i64 2154341643, i64 2154341706}
!2814 = !DILocation(line: 35, column: 1, scope: !2800)
!2815 = !{i64 2154341948, i64 2154341968, i64 2154342031}
!2816 = !DILocation(line: 50, column: 1, scope: !2800)
!2817 = !{i64 2154342375, i64 2154342395, i64 2154342458}
!2818 = !DILocation(line: 54, column: 1, scope: !2800)
!2819 = !{i64 2154342814, i64 2154342834, i64 2154342897}
!2820 = !DILocation(line: 61, column: 1, scope: !2800)
!2821 = !{i64 2154343131, i64 2154343151, i64 2154343214}
!2822 = !DILocation(line: 63, column: 1, scope: !2800)
!2823 = !{i64 2154343511, i64 2154343531, i64 2154343594}
!2824 = !DILocation(line: 64, column: 1, scope: !2800)
!2825 = !{i64 2154344033, i64 2154344053, i64 2154344116}
!2826 = !DILocation(line: 65, column: 1, scope: !2800)
!2827 = !{i64 2154344531, i64 2154344551, i64 2154344614}
!2828 = !DILocation(line: 66, column: 1, scope: !2800)
!2829 = !{i64 2154345013, i64 2154345033, i64 2154345096}
!2830 = !DILocation(line: 67, column: 1, scope: !2800)
!2831 = !{i64 2154345520, i64 2154345540, i64 2154345603}
!2832 = !DILocation(line: 68, column: 1, scope: !2800)
!2833 = !{i64 2154346008, i64 2154346028, i64 2154346091}
!2834 = !DILocation(line: 70, column: 1, scope: !2800)
!2835 = !{i64 2154346476, i64 2154346496, i64 2154346559}
!2836 = !DILocation(line: 71, column: 1, scope: !2800)
!2837 = !{i64 2154346918, i64 2154346938, i64 2154347001}
!2838 = !DILocation(line: 72, column: 1, scope: !2800)
!2839 = !{i64 2154347376, i64 2154347396, i64 2154347459}
!2840 = !DILocation(line: 79, column: 1, scope: !2800)
!2841 = !{i64 2154347830, i64 2154347850, i64 2154347913}
!2842 = !DILocation(line: 80, column: 1, scope: !2800)
!2843 = !{i64 2154348341, i64 2154348361, i64 2154348424}
!2844 = !DILocation(line: 82, column: 1, scope: !2800)
!2845 = !{i64 2154352893, i64 2154352913, i64 2154352976}
!2846 = !DILocation(line: 97, column: 1, scope: !2800)
!2847 = !{i64 2154353230, i64 2154353250, i64 2154353313}
!2848 = !DILocation(line: 99, column: 1, scope: !2800)
!2849 = !{i64 2154353448, i64 2154353468, i64 2154353531}
!2850 = !DILocation(line: 102, column: 1, scope: !2800)
!2851 = !{i64 2154353705, i64 2154353725, i64 2154353788}
!2852 = !DILocation(line: 105, column: 1, scope: !2800)
!2853 = !{i64 2154353945, i64 2154353965, i64 2154354028}
!2854 = !DILocation(line: 115, column: 1, scope: !2800)
!2855 = !{i64 2154354284, i64 2154354304, i64 2154354367}
!2856 = !DILocation(line: 118, column: 1, scope: !2800)
!2857 = !{i64 2154354628, i64 2154354648, i64 2154354711}
!2858 = !DILocation(line: 32, column: 1, scope: !2859)
!2859 = !DILexicalBlockFile(scope: !2800, file: !2860, discriminator: 0)
!2860 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2861 = !{i64 2154354984, i64 2154355004, i64 2154355067}
!2862 = !DILocation(line: 33, column: 1, scope: !2859)
!2863 = !{i64 2154355496, i64 2154355516, i64 2154355579}
!2864 = !DILocation(line: 53, column: 1, scope: !2859)
!2865 = !{i64 2154356004, i64 2154356024, i64 2154356087}
!2866 = !DILocation(line: 54, column: 1, scope: !2859)
!2867 = !{i64 2154356422, i64 2154356442, i64 2154356505}
!2868 = !DILocation(line: 55, column: 1, scope: !2859)
!2869 = !{i64 2154356840, i64 2154356860, i64 2154356923}
!2870 = !DILocation(line: 56, column: 1, scope: !2859)
!2871 = !{i64 2154357258, i64 2154357278, i64 2154357341}
!2872 = !DILocation(line: 57, column: 1, scope: !2859)
!2873 = !{i64 2154357676, i64 2154357696, i64 2154357759}
!2874 = !DILocation(line: 58, column: 1, scope: !2859)
!2875 = !{i64 2154358094, i64 2154358114, i64 2154358177}
!2876 = !DILocation(line: 59, column: 1, scope: !2859)
!2877 = !{i64 2154358512, i64 2154358532, i64 2154358595}
!2878 = !DILocation(line: 60, column: 1, scope: !2859)
!2879 = !{i64 2154358936, i64 2154358956, i64 2154359019}
!2880 = !DILocation(line: 61, column: 1, scope: !2859)
!2881 = !{i64 2154359253, i64 2154359273, i64 2154359336}
!2882 = !DILocation(line: 70, column: 1, scope: !2859)
!2883 = !{i64 2154359482, i64 2154359502, i64 2154359565}
!2884 = !DILocation(line: 72, column: 1, scope: !2859)
!2885 = !{i64 2154359814, i64 2154359834, i64 2154359897}
!2886 = !DILocation(line: 73, column: 1, scope: !2859)
!2887 = !{i64 2154360264, i64 2154360284, i64 2154360347}
!2888 = !DILocation(line: 74, column: 1, scope: !2859)
!2889 = !{i64 2154360714, i64 2154360734, i64 2154360797}
!2890 = !DILocation(line: 75, column: 1, scope: !2859)
!2891 = !{i64 2154361164, i64 2154361184, i64 2154361247}
!2892 = !DILocation(line: 76, column: 1, scope: !2859)
!2893 = !{i64 2154361614, i64 2154361634, i64 2154361697}
!2894 = !DILocation(line: 77, column: 1, scope: !2859)
!2895 = !{i64 2154362064, i64 2154362084, i64 2154362147}
!2896 = !DILocation(line: 78, column: 1, scope: !2859)
!2897 = !{i64 2154366575, i64 2154366595, i64 2154366658}
!2898 = !DILocation(line: 79, column: 1, scope: !2859)
!2899 = !{i64 2154367025, i64 2154367045, i64 2154367108}
!2900 = !DILocation(line: 80, column: 1, scope: !2859)
!2901 = !{i64 2154367478, i64 2154367498, i64 2154367561}
!2902 = !DILocation(line: 84, column: 1, scope: !2859)
!2903 = !{i64 2154367810, i64 2154367830, i64 2154367893}
!2904 = !DILocation(line: 91, column: 1, scope: !2859)
!2905 = !{i64 2154368207, i64 2154368227, i64 2154368290}
!2906 = !DILocation(line: 93, column: 1, scope: !2859)
!2907 = !{i64 2154368574, i64 2154368594, i64 2154368657}
!2908 = !DILocation(line: 106, column: 1, scope: !2859)
!2909 = !{i64 2154368844, i64 2154368864, i64 2154368927}
!2910 = !DILocation(line: 11, column: 1, scope: !2911)
!2911 = !DILexicalBlockFile(scope: !2800, file: !2912, discriminator: 0)
!2912 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2913 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 17, type: !2802, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2914)
!2914 = !{!2915}
!2915 = !DILocalVariable(name: "p", scope: !2913, file: !107, line: 19, type: !102)
!2916 = !DILocation(line: 21, column: 2, scope: !2913)
!2917 = !DILocation(line: 23, column: 2, scope: !2913)
!2918 = !DILocation(line: 24, column: 2, scope: !2913)
!2919 = !DILocation(line: 26, column: 6, scope: !2913)
!2920 = !DILocation(line: 0, scope: !2913)
!2921 = !DILocation(line: 27, column: 2, scope: !2913)
!2922 = !DILocation(line: 29, column: 6, scope: !2913)
!2923 = !DILocation(line: 30, column: 2, scope: !2913)
!2924 = !DILocation(line: 32, column: 2, scope: !2913)
!2925 = !DILocation(line: 33, column: 2, scope: !2913)
!2926 = !DILocation(line: 34, column: 1, scope: !2913)
!2927 = distinct !DISubprogram(name: "print_sys_memory_stats", scope: !107, file: !107, line: 36, type: !2802, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2928)
!2928 = !{!2929}
!2929 = !DILocalVariable(name: "stats", scope: !2927, file: !107, line: 38, type: !2930)
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2931, line: 24, size: 96, elements: !2932)
!2931 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2932 = !{!2933, !2934, !2935}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2930, file: !2931, line: 25, baseType: !120, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2930, file: !2931, line: 26, baseType: !120, size: 32, offset: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2930, file: !2931, line: 27, baseType: !120, size: 32, offset: 64)
!2936 = !DILocation(line: 38, column: 2, scope: !2927)
!2937 = !DILocation(line: 38, column: 26, scope: !2927)
!2938 = !DILocation(line: 40, column: 2, scope: !2927)
!2939 = !DILocation(line: 43, column: 9, scope: !2927)
!2940 = !DILocation(line: 43, column: 32, scope: !2927)
!2941 = !DILocation(line: 44, column: 9, scope: !2927)
!2942 = !DILocation(line: 42, column: 2, scope: !2927)
!2943 = !DILocation(line: 45, column: 1, scope: !2927)
!2944 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !127, file: !127, line: 45, type: !129, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2945)
!2945 = !{!2946}
!2946 = !DILocalVariable(name: "c", arg: 1, scope: !2944, file: !127, line: 45, type: !103)
!2947 = !DILocation(line: 0, scope: !2944)
!2948 = !DILocation(line: 50, column: 2, scope: !2944)
!2949 = distinct !DISubprogram(name: "__printk_hook_install", scope: !127, file: !127, line: 63, type: !2950, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2952)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{null, !128}
!2952 = !{!2953}
!2953 = !DILocalVariable(name: "fn", arg: 1, scope: !2949, file: !127, line: 63, type: !128)
!2954 = !DILocation(line: 0, scope: !2949)
!2955 = !DILocation(line: 65, column: 12, scope: !2949)
!2956 = !DILocation(line: 66, column: 1, scope: !2949)
!2957 = distinct !DISubprogram(name: "__printk_get_hook", scope: !127, file: !127, line: 76, type: !2958, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !162)
!2958 = !DISubroutineType(types: !2959)
!2959 = !{!102}
!2960 = !DILocation(line: 78, column: 9, scope: !2957)
!2961 = !DILocation(line: 78, column: 2, scope: !2957)
!2962 = distinct !DISubprogram(name: "vprintk", scope: !127, file: !127, line: 113, type: !2963, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2972)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{null, !199, !2965}
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2966, line: 99, baseType: !2967)
!2966 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2967 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2966, line: 40, baseType: !2968)
!2968 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !127, baseType: !2969)
!2969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2970)
!2970 = !{!2971}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2969, file: !127, line: 79, baseType: !102, size: 32)
!2972 = !{!2973, !2974, !2975}
!2973 = !DILocalVariable(name: "fmt", arg: 1, scope: !2962, file: !127, line: 113, type: !199)
!2974 = !DILocalVariable(name: "ap", arg: 2, scope: !2962, file: !127, line: 113, type: !2965)
!2975 = !DILocalVariable(name: "ctx", scope: !2976, file: !127, line: 121, type: !2978)
!2976 = distinct !DILexicalBlock(scope: !2977, file: !127, line: 120, column: 27)
!2977 = distinct !DILexicalBlock(scope: !2962, file: !127, line: 120, column: 6)
!2978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !127, line: 81, size: 32, elements: !2979)
!2979 = !{!2980, !2981}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !2978, file: !127, line: 85, baseType: !32, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2978, file: !127, line: 86, baseType: !2982, offset: 32)
!2982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, elements: !2221)
!2983 = !DILocation(line: 0, scope: !2962)
!2984 = !DILocation(line: 148, column: 3, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2977, file: !127, line: 138, column: 9)
!2986 = !DILocation(line: 155, column: 1, scope: !2962)
!2987 = distinct !DISubprogram(name: "char_out", scope: !127, file: !127, line: 107, type: !2988, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2990)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{!103, !103, !102}
!2990 = !{!2991, !2992}
!2991 = !DILocalVariable(name: "c", arg: 1, scope: !2987, file: !127, line: 107, type: !103)
!2992 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !2987, file: !127, line: 107, type: !102)
!2993 = !DILocation(line: 0, scope: !2987)
!2994 = !DILocation(line: 110, column: 9, scope: !2987)
!2995 = !DILocation(line: 110, column: 2, scope: !2987)
!2996 = distinct !DISubprogram(name: "cbvprintf", scope: !2997, file: !2997, line: 739, type: !2998, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3004)
!2997 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2998 = !DISubroutineType(types: !2999)
!2999 = !{!103, !3000, !102, !199, !2965}
!3000 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !2997, line: 297, baseType: !3001)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 32)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{!103, null}
!3004 = !{!3005, !3006, !3007, !3008}
!3005 = !DILocalVariable(name: "out", arg: 1, scope: !2996, file: !2997, line: 739, type: !3000)
!3006 = !DILocalVariable(name: "ctx", arg: 2, scope: !2996, file: !2997, line: 739, type: !102)
!3007 = !DILocalVariable(name: "format", arg: 3, scope: !2996, file: !2997, line: 739, type: !199)
!3008 = !DILocalVariable(name: "ap", arg: 4, scope: !2996, file: !2997, line: 739, type: !2965)
!3009 = !DILocation(line: 0, scope: !2996)
!3010 = !DILocation(line: 741, column: 9, scope: !2996)
!3011 = !DILocation(line: 741, column: 2, scope: !2996)
!3012 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !127, file: !127, line: 157, type: !3013, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3015)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{null, !1002, !120}
!3015 = !{!3016, !3017, !3018}
!3016 = !DILocalVariable(name: "c", arg: 1, scope: !3012, file: !127, line: 157, type: !1002)
!3017 = !DILocalVariable(name: "n", arg: 2, scope: !3012, file: !127, line: 157, type: !120)
!3018 = !DILocalVariable(name: "i", scope: !3012, file: !127, line: 159, type: !120)
!3019 = !DILocation(line: 0, scope: !3012)
!3020 = !DILocation(line: 164, column: 16, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3022, file: !127, line: 164, column: 2)
!3022 = distinct !DILexicalBlock(scope: !3012, file: !127, line: 164, column: 2)
!3023 = !DILocation(line: 164, column: 2, scope: !3022)
!3024 = !DILocation(line: 165, column: 3, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3021, file: !127, line: 164, column: 26)
!3026 = !DILocation(line: 165, column: 13, scope: !3025)
!3027 = !DILocation(line: 164, column: 22, scope: !3021)
!3028 = distinct !{!3028, !3023, !3029}
!3029 = !DILocation(line: 166, column: 2, scope: !3022)
!3030 = !DILocation(line: 171, column: 1, scope: !3012)
!3031 = distinct !DISubprogram(name: "printk", scope: !127, file: !127, line: 203, type: !3032, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3034)
!3032 = !DISubroutineType(types: !3033)
!3033 = !{null, !199, null}
!3034 = !{!3035, !3036}
!3035 = !DILocalVariable(name: "fmt", arg: 1, scope: !3031, file: !127, line: 203, type: !199)
!3036 = !DILocalVariable(name: "ap", scope: !3031, file: !127, line: 205, type: !2965)
!3037 = !DILocation(line: 0, scope: !3031)
!3038 = !DILocation(line: 205, column: 2, scope: !3031)
!3039 = !DILocation(line: 205, column: 10, scope: !3031)
!3040 = !DILocation(line: 207, column: 2, scope: !3031)
!3041 = !DILocation(line: 209, column: 2, scope: !3031)
!3042 = !DILocation(line: 211, column: 2, scope: !3031)
!3043 = !DILocation(line: 212, column: 1, scope: !3031)
!3044 = distinct !DISubprogram(name: "snprintk", scope: !127, file: !127, line: 239, type: !3045, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3047)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{!103, !1002, !120, !199, null}
!3047 = !{!3048, !3049, !3050, !3051, !3052}
!3048 = !DILocalVariable(name: "str", arg: 1, scope: !3044, file: !127, line: 239, type: !1002)
!3049 = !DILocalVariable(name: "size", arg: 2, scope: !3044, file: !127, line: 239, type: !120)
!3050 = !DILocalVariable(name: "fmt", arg: 3, scope: !3044, file: !127, line: 239, type: !199)
!3051 = !DILocalVariable(name: "ap", scope: !3044, file: !127, line: 241, type: !2965)
!3052 = !DILocalVariable(name: "ret", scope: !3044, file: !127, line: 242, type: !103)
!3053 = !DILocation(line: 0, scope: !3044)
!3054 = !DILocation(line: 241, column: 2, scope: !3044)
!3055 = !DILocation(line: 241, column: 10, scope: !3044)
!3056 = !DILocation(line: 244, column: 2, scope: !3044)
!3057 = !DILocation(line: 245, column: 8, scope: !3044)
!3058 = !DILocation(line: 246, column: 2, scope: !3044)
!3059 = !DILocation(line: 249, column: 1, scope: !3044)
!3060 = !DILocation(line: 248, column: 2, scope: !3044)
!3061 = distinct !DISubprogram(name: "vsnprintk", scope: !127, file: !127, line: 251, type: !3062, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3064)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{!103, !1002, !120, !199, !2965}
!3064 = !{!3065, !3066, !3067, !3068, !3069}
!3065 = !DILocalVariable(name: "str", arg: 1, scope: !3061, file: !127, line: 251, type: !1002)
!3066 = !DILocalVariable(name: "size", arg: 2, scope: !3061, file: !127, line: 251, type: !120)
!3067 = !DILocalVariable(name: "fmt", arg: 3, scope: !3061, file: !127, line: 251, type: !199)
!3068 = !DILocalVariable(name: "ap", arg: 4, scope: !3061, file: !127, line: 251, type: !2965)
!3069 = !DILocalVariable(name: "ctx", scope: !3061, file: !127, line: 253, type: !3070)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !127, line: 217, size: 96, elements: !3071)
!3071 = !{!3072, !3073, !3074}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3070, file: !127, line: 218, baseType: !1002, size: 32)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3070, file: !127, line: 219, baseType: !103, size: 32, offset: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3070, file: !127, line: 220, baseType: !103, size: 32, offset: 64)
!3075 = !DILocation(line: 0, scope: !3061)
!3076 = !DILocation(line: 253, column: 2, scope: !3061)
!3077 = !DILocation(line: 253, column: 21, scope: !3061)
!3078 = !DILocation(line: 253, column: 27, scope: !3061)
!3079 = !DILocation(line: 255, column: 2, scope: !3061)
!3080 = !DILocation(line: 257, column: 10, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3061, file: !127, line: 257, column: 6)
!3082 = !DILocation(line: 257, column: 22, scope: !3081)
!3083 = !DILocation(line: 257, column: 16, scope: !3081)
!3084 = !DILocation(line: 257, column: 6, scope: !3061)
!3085 = !DILocation(line: 258, column: 3, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3081, file: !127, line: 257, column: 27)
!3087 = !DILocation(line: 258, column: 18, scope: !3086)
!3088 = !DILocation(line: 259, column: 2, scope: !3086)
!3089 = !DILocation(line: 262, column: 1, scope: !3061)
!3090 = !DILocation(line: 261, column: 2, scope: !3061)
!3091 = distinct !DISubprogram(name: "str_out", scope: !127, file: !127, line: 223, type: !3092, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3095)
!3092 = !DISubroutineType(types: !3093)
!3093 = !{!103, !103, !3094}
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 32)
!3095 = !{!3096, !3097}
!3096 = !DILocalVariable(name: "c", arg: 1, scope: !3091, file: !127, line: 223, type: !103)
!3097 = !DILocalVariable(name: "ctx", arg: 2, scope: !3091, file: !127, line: 223, type: !3094)
!3098 = !DILocation(line: 0, scope: !3091)
!3099 = !DILocation(line: 225, column: 11, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3091, file: !127, line: 225, column: 6)
!3101 = !DILocation(line: 225, column: 15, scope: !3100)
!3102 = !DILocation(line: 0, scope: !3100)
!3103 = !DILocation(line: 225, column: 23, scope: !3100)
!3104 = !DILocation(line: 225, column: 45, scope: !3100)
!3105 = !DILocation(line: 225, column: 37, scope: !3100)
!3106 = !DILocation(line: 225, column: 6, scope: !3091)
!3107 = !DILocation(line: 226, column: 8, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3100, file: !127, line: 225, column: 50)
!3109 = !DILocation(line: 226, column: 13, scope: !3108)
!3110 = !DILocation(line: 227, column: 3, scope: !3108)
!3111 = !DILocation(line: 230, column: 29, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3091, file: !127, line: 230, column: 6)
!3113 = !DILocation(line: 230, column: 17, scope: !3112)
!3114 = !DILocation(line: 230, column: 6, scope: !3091)
!3115 = !DILocation(line: 231, column: 22, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3112, file: !127, line: 230, column: 34)
!3117 = !DILocation(line: 231, column: 3, scope: !3116)
!3118 = !DILocation(line: 231, column: 26, scope: !3116)
!3119 = !DILocation(line: 232, column: 2, scope: !3116)
!3120 = !DILocation(line: 233, column: 28, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3112, file: !127, line: 232, column: 9)
!3122 = !DILocation(line: 233, column: 22, scope: !3121)
!3123 = !DILocation(line: 233, column: 3, scope: !3121)
!3124 = !DILocation(line: 233, column: 26, scope: !3121)
!3125 = !DILocation(line: 237, column: 1, scope: !3091)
!3126 = distinct !DISubprogram(name: "z_thread_entry", scope: !3127, file: !3127, line: 30, type: !3128, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !3135)
!3127 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3128 = !DISubroutineType(types: !3129)
!3129 = !{null, !3130, !102, !102, !102}
!3130 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3131, line: 46, baseType: !3132)
!3131 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 32)
!3133 = !DISubroutineType(types: !3134)
!3134 = !{null, !102, !102, !102}
!3135 = !{!3136, !3137, !3138, !3139}
!3136 = !DILocalVariable(name: "entry", arg: 1, scope: !3126, file: !3127, line: 30, type: !3130)
!3137 = !DILocalVariable(name: "p1", arg: 2, scope: !3126, file: !3127, line: 31, type: !102)
!3138 = !DILocalVariable(name: "p2", arg: 3, scope: !3126, file: !3127, line: 31, type: !102)
!3139 = !DILocalVariable(name: "p3", arg: 4, scope: !3126, file: !3127, line: 31, type: !102)
!3140 = !DILocation(line: 0, scope: !3126)
!3141 = !DILocation(line: 36, column: 2, scope: !3126)
!3142 = !DILocation(line: 38, column: 17, scope: !3126)
!3143 = !DILocation(line: 38, column: 2, scope: !3126)
!3144 = !DILocation(line: 45, column: 2, scope: !3126)
!3145 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !3146, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !162)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{!3148}
!3148 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !3149)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 32)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !3151)
!3151 = !{!3152, !3210, !3222, !3223, !3224, !3225, !3231, !3244}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3150, file: !263, line: 247, baseType: !3153, size: 384)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !3154)
!3154 = !{!3155, !3179, !3186, !3187, !3188, !3197, !3198, !3199}
!3155 = !DIDerivedType(tag: DW_TAG_member, scope: !3153, file: !263, line: 60, baseType: !3156, size: 64)
!3156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3153, file: !263, line: 60, size: 64, elements: !3157)
!3157 = !{!3158, !3173}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3156, file: !263, line: 61, baseType: !3159, size: 64)
!3159 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !3160)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !3161)
!3161 = !{!3162, !3168}
!3162 = !DIDerivedType(tag: DW_TAG_member, scope: !3160, file: !273, line: 38, baseType: !3163, size: 32)
!3163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3160, file: !273, line: 38, size: 32, elements: !3164)
!3164 = !{!3165, !3167}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3163, file: !273, line: 39, baseType: !3166, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3163, file: !273, line: 40, baseType: !3166, size: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, scope: !3160, file: !273, line: 42, baseType: !3169, size: 32, offset: 32)
!3169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3160, file: !273, line: 42, size: 32, elements: !3170)
!3170 = !{!3171, !3172}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3169, file: !273, line: 43, baseType: !3166, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3169, file: !273, line: 44, baseType: !3166, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3156, file: !263, line: 62, baseType: !3174, size: 64)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !3175)
!3175 = !{!3176}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3174, file: !289, line: 50, baseType: !3177, size: 64)
!3177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3178, size: 64, elements: !294)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3153, file: !263, line: 68, baseType: !3180, size: 32, offset: 64)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 32)
!3181 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !3182)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !3183)
!3183 = !{!3184}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3182, file: !299, line: 232, baseType: !3185, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !3160)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3153, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3153, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!3188 = !DIDerivedType(tag: DW_TAG_member, scope: !3153, file: !263, line: 90, baseType: !3189, size: 16, offset: 112)
!3189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3153, file: !263, line: 90, size: 16, elements: !3190)
!3190 = !{!3191, !3196}
!3191 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !263, line: 91, baseType: !3192, size: 16)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !263, line: 91, size: 16, elements: !3193)
!3193 = !{!3194, !3195}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3192, file: !263, line: 96, baseType: !313, size: 8)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3192, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3189, file: !263, line: 100, baseType: !151, size: 16)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3153, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3153, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3153, file: !263, line: 131, baseType: !3200, size: 192, offset: 192)
!3200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !3201)
!3201 = !{!3202, !3203, !3209}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3200, file: !299, line: 245, baseType: !3159, size: 64)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3200, file: !299, line: 246, baseType: !3204, size: 32, offset: 64)
!3204 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !3205)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 32)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{null, !3208}
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3200, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3150, file: !263, line: 250, baseType: !3211, size: 288, offset: 384)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !3212)
!3212 = !{!3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3211, file: !334, line: 26, baseType: !137, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3211, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3211, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3211, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3211, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3211, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3211, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3211, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3211, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3150, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3150, file: !263, line: 256, baseType: !3181, size: 64, offset: 704)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3150, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3150, file: !263, line: 300, baseType: !3226, size: 96, offset: 800)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !3227)
!3227 = !{!3228, !3229, !3230}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3226, file: !263, line: 153, baseType: !22, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3226, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3226, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3150, file: !263, line: 325, baseType: !3232, size: 32, offset: 896)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 32)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !3234)
!3234 = !{!3235, !3241, !3242}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3233, file: !357, line: 5074, baseType: !3236, size: 96)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3237)
!3237 = !{!3238, !3239, !3240}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3236, file: !113, line: 57, baseType: !116, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3236, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3236, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3233, file: !357, line: 5075, baseType: !3181, size: 64, offset: 96)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3233, file: !357, line: 5076, baseType: !3243, offset: 160)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3150, file: !263, line: 343, baseType: !3245, size: 64, offset: 928)
!3245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !3246)
!3246 = !{!3247, !3248}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3245, file: !334, line: 63, baseType: !137, size: 32)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3245, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!3249 = !DILocation(line: 535, column: 9, scope: !3145)
!3250 = !DILocation(line: 535, column: 2, scope: !3145)
!3251 = distinct !DISubprogram(name: "k_thread_abort", scope: !3252, file: !3252, line: 188, type: !3253, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !3255)
!3252 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!3253 = !DISubroutineType(types: !3254)
!3254 = !{null, !3148}
!3255 = !{!3256}
!3256 = !DILocalVariable(name: "thread", arg: 1, scope: !3251, file: !3252, line: 188, type: !3148)
!3257 = !DILocation(line: 0, scope: !3251)
!3258 = !DILocation(line: 197, column: 2, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3251, file: !3252, line: 197, column: 2)
!3260 = !{i64 2154061037}
!3261 = !DILocation(line: 198, column: 2, scope: !3251)
!3262 = !DILocation(line: 199, column: 1, scope: !3251)
!3263 = distinct !DISubprogram(name: "z_current_get", scope: !3252, file: !3252, line: 173, type: !3146, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !162)
!3264 = !DILocation(line: 180, column: 2, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3263, file: !3252, line: 180, column: 2)
!3266 = !{i64 2154060969}
!3267 = !DILocation(line: 181, column: 9, scope: !3263)
!3268 = !DILocation(line: 181, column: 2, scope: !3263)
!3269 = distinct !DISubprogram(name: "sys_heap_free", scope: !3270, file: !3270, line: 163, type: !3271, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3279)
!3270 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3271 = !DISubroutineType(types: !3272)
!3272 = !{null, !3273, !102}
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 32)
!3274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3275)
!3275 = !{!3276, !3277, !3278}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3274, file: !113, line: 57, baseType: !2205, size: 32)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3274, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3274, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3279 = !{!3280, !3281, !3282, !3283}
!3280 = !DILocalVariable(name: "heap", arg: 1, scope: !3269, file: !3270, line: 163, type: !3273)
!3281 = !DILocalVariable(name: "mem", arg: 2, scope: !3269, file: !3270, line: 163, type: !102)
!3282 = !DILocalVariable(name: "h", scope: !3269, file: !3270, line: 168, type: !2205)
!3283 = !DILocalVariable(name: "c", scope: !3269, file: !3270, line: 169, type: !2210)
!3284 = !DILocation(line: 0, scope: !3269)
!3285 = !DILocation(line: 165, column: 10, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3269, file: !3270, line: 165, column: 6)
!3287 = !DILocation(line: 165, column: 6, scope: !3269)
!3288 = !DILocation(line: 168, column: 27, scope: !3269)
!3289 = !DILocation(line: 169, column: 16, scope: !3269)
!3290 = !{i32 0, i32 536870912}
!3291 = !DILocation(line: 187, column: 2, scope: !3269)
!3292 = !DILocation(line: 189, column: 44, scope: !3269)
!3293 = !{i32 0, i32 32768}
!3294 = !DILocation(line: 189, column: 24, scope: !3269)
!3295 = !DILocation(line: 189, column: 5, scope: !3269)
!3296 = !DILocation(line: 189, column: 21, scope: !3269)
!3297 = !DILocation(line: 197, column: 2, scope: !3269)
!3298 = !DILocation(line: 198, column: 1, scope: !3269)
!3299 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3270, file: !3270, line: 157, type: !3300, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3302)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{!2210, !2205, !102}
!3302 = !{!3303, !3304, !3305, !3306}
!3303 = !DILocalVariable(name: "h", arg: 1, scope: !3299, file: !3270, line: 157, type: !2205)
!3304 = !DILocalVariable(name: "p", arg: 2, scope: !3299, file: !3270, line: 157, type: !102)
!3305 = !DILocalVariable(name: "mem", scope: !3299, file: !3270, line: 159, type: !1694)
!3306 = !DILocalVariable(name: "base", scope: !3299, file: !3270, line: 159, type: !1694)
!3307 = !DILocation(line: 0, scope: !3299)
!3308 = !DILocation(line: 159, column: 39, scope: !3299)
!3309 = !DILocation(line: 160, column: 14, scope: !3299)
!3310 = !DILocation(line: 160, column: 38, scope: !3299)
!3311 = !DILocation(line: 160, column: 46, scope: !3299)
!3312 = !DILocation(line: 160, column: 2, scope: !3299)
!3313 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !3314, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3316)
!3314 = !DISubroutineType(types: !3315)
!3315 = !{null, !2205, !2210, !211}
!3316 = !{!3317, !3318, !3319, !3320, !3321}
!3317 = !DILocalVariable(name: "h", arg: 1, scope: !3313, file: !142, line: 147, type: !2205)
!3318 = !DILocalVariable(name: "c", arg: 2, scope: !3313, file: !142, line: 147, type: !2210)
!3319 = !DILocalVariable(name: "used", arg: 3, scope: !3313, file: !142, line: 147, type: !211)
!3320 = !DILocalVariable(name: "buf", scope: !3313, file: !142, line: 149, type: !2200)
!3321 = !DILocalVariable(name: "cmem", scope: !3313, file: !142, line: 150, type: !102)
!3322 = !DILocation(line: 0, scope: !3313)
!3323 = !DILocation(line: 149, column: 22, scope: !3313)
!3324 = !DILocation(line: 0, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3326, file: !142, line: 159, column: 7)
!3326 = distinct !DILexicalBlock(scope: !3327, file: !142, line: 158, column: 9)
!3327 = distinct !DILexicalBlock(scope: !3313, file: !142, line: 152, column: 6)
!3328 = !DILocation(line: 159, column: 7, scope: !3326)
!3329 = !DILocation(line: 165, column: 1, scope: !3313)
!3330 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !3331, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3334)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{!3333, !2205, !2210}
!3333 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !142, line: 62, baseType: !137)
!3334 = !{!3335, !3336}
!3335 = !DILocalVariable(name: "h", arg: 1, scope: !3330, file: !142, line: 142, type: !2205)
!3336 = !DILocalVariable(name: "c", arg: 2, scope: !3330, file: !142, line: 142, type: !2210)
!3337 = !DILocation(line: 0, scope: !3330)
!3338 = !DILocation(line: 144, column: 9, scope: !3330)
!3339 = !DILocation(line: 144, column: 42, scope: !3330)
!3340 = !DILocation(line: 144, column: 2, scope: !3330)
!3341 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !3342, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3344)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!120, !2205, !3333}
!3344 = !{!3345, !3346}
!3345 = !DILocalVariable(name: "h", arg: 1, scope: !3341, file: !142, line: 245, type: !2205)
!3346 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !3341, file: !142, line: 245, type: !3333)
!3347 = !DILocation(line: 0, scope: !3341)
!3348 = !DILocation(line: 247, column: 20, scope: !3341)
!3349 = !DILocation(line: 247, column: 33, scope: !3341)
!3350 = !DILocation(line: 247, column: 2, scope: !3341)
!3351 = distinct !DISubprogram(name: "free_chunk", scope: !3270, file: !3270, line: 133, type: !3352, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3354)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{null, !2205, !2210}
!3354 = !{!3355, !3356}
!3355 = !DILocalVariable(name: "h", arg: 1, scope: !3351, file: !3270, line: 133, type: !2205)
!3356 = !DILocalVariable(name: "c", arg: 2, scope: !3351, file: !3270, line: 133, type: !2210)
!3357 = !DILocation(line: 0, scope: !3351)
!3358 = !DILocation(line: 136, column: 21, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3351, file: !3270, line: 136, column: 6)
!3360 = !DILocation(line: 136, column: 7, scope: !3359)
!3361 = !DILocation(line: 136, column: 6, scope: !3351)
!3362 = !DILocation(line: 137, column: 3, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3359, file: !3270, line: 136, column: 41)
!3364 = !DILocation(line: 138, column: 22, scope: !3363)
!3365 = !DILocation(line: 138, column: 3, scope: !3363)
!3366 = !DILocation(line: 139, column: 2, scope: !3363)
!3367 = !DILocation(line: 142, column: 21, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3351, file: !3270, line: 142, column: 6)
!3369 = !{i32 -65535, i32 536903678}
!3370 = !DILocation(line: 142, column: 7, scope: !3368)
!3371 = !DILocation(line: 142, column: 6, scope: !3351)
!3372 = !DILocation(line: 143, column: 3, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3368, file: !3270, line: 142, column: 40)
!3374 = !DILocation(line: 144, column: 19, scope: !3373)
!3375 = !DILocation(line: 144, column: 3, scope: !3373)
!3376 = !DILocation(line: 145, column: 7, scope: !3373)
!3377 = !DILocation(line: 146, column: 2, scope: !3373)
!3378 = !DILocation(line: 148, column: 2, scope: !3351)
!3379 = !DILocation(line: 149, column: 1, scope: !3351)
!3380 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !3381, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3383)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!2210, !2205, !2210}
!3383 = !{!3384, !3385}
!3384 = !DILocalVariable(name: "h", arg: 1, scope: !3380, file: !142, line: 204, type: !2205)
!3385 = !DILocalVariable(name: "c", arg: 2, scope: !3380, file: !142, line: 204, type: !2210)
!3386 = !DILocation(line: 0, scope: !3380)
!3387 = !DILocation(line: 206, column: 13, scope: !3380)
!3388 = !DILocation(line: 206, column: 11, scope: !3380)
!3389 = !DILocation(line: 206, column: 2, scope: !3380)
!3390 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !3391, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3393)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{!211, !2205, !2210}
!3393 = !{!3394, !3395}
!3394 = !DILocalVariable(name: "h", arg: 1, scope: !3390, file: !142, line: 137, type: !2205)
!3395 = !DILocalVariable(name: "c", arg: 2, scope: !3390, file: !142, line: 137, type: !2210)
!3396 = !DILocation(line: 0, scope: !3390)
!3397 = !DILocation(line: 139, column: 9, scope: !3390)
!3398 = !DILocation(line: 139, column: 42, scope: !3390)
!3399 = !DILocation(line: 139, column: 2, scope: !3390)
!3400 = distinct !DISubprogram(name: "free_list_remove", scope: !3270, file: !3270, line: 60, type: !3352, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3401)
!3401 = !{!3402, !3403, !3404}
!3402 = !DILocalVariable(name: "h", arg: 1, scope: !3400, file: !3270, line: 60, type: !2205)
!3403 = !DILocalVariable(name: "c", arg: 2, scope: !3400, file: !3270, line: 60, type: !2210)
!3404 = !DILocalVariable(name: "bidx", scope: !3405, file: !3270, line: 63, type: !103)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !3270, line: 62, column: 31)
!3406 = distinct !DILexicalBlock(scope: !3400, file: !3270, line: 62, column: 6)
!3407 = !DILocation(line: 0, scope: !3400)
!3408 = !DILocation(line: 63, column: 28, scope: !3405)
!3409 = !DILocation(line: 63, column: 14, scope: !3405)
!3410 = !DILocation(line: 0, scope: !3405)
!3411 = !DILocation(line: 64, column: 3, scope: !3405)
!3412 = !DILocation(line: 66, column: 1, scope: !3400)
!3413 = distinct !DISubprogram(name: "merge_chunks", scope: !3270, file: !3270, line: 125, type: !3414, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3416)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{null, !2205, !2210, !2210}
!3416 = !{!3417, !3418, !3419, !3420}
!3417 = !DILocalVariable(name: "h", arg: 1, scope: !3413, file: !3270, line: 125, type: !2205)
!3418 = !DILocalVariable(name: "lc", arg: 2, scope: !3413, file: !3270, line: 125, type: !2210)
!3419 = !DILocalVariable(name: "rc", arg: 3, scope: !3413, file: !3270, line: 125, type: !2210)
!3420 = !DILocalVariable(name: "newsz", scope: !3413, file: !3270, line: 127, type: !3333)
!3421 = !DILocation(line: 0, scope: !3413)
!3422 = !DILocation(line: 127, column: 20, scope: !3413)
!3423 = !DILocation(line: 127, column: 40, scope: !3413)
!3424 = !DILocation(line: 127, column: 38, scope: !3413)
!3425 = !DILocation(line: 129, column: 2, scope: !3413)
!3426 = !DILocation(line: 130, column: 25, scope: !3413)
!3427 = !DILocation(line: 130, column: 2, scope: !3413)
!3428 = !DILocation(line: 131, column: 1, scope: !3413)
!3429 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !3381, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3430)
!3430 = !{!3431, !3432}
!3431 = !DILocalVariable(name: "h", arg: 1, scope: !3429, file: !142, line: 199, type: !2205)
!3432 = !DILocalVariable(name: "c", arg: 2, scope: !3429, file: !142, line: 199, type: !2210)
!3433 = !DILocation(line: 0, scope: !3429)
!3434 = !DILocation(line: 201, column: 13, scope: !3429)
!3435 = !DILocation(line: 201, column: 11, scope: !3429)
!3436 = !DILocation(line: 201, column: 2, scope: !3429)
!3437 = distinct !DISubprogram(name: "free_list_add", scope: !3270, file: !3270, line: 98, type: !3352, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3438)
!3438 = !{!3439, !3440, !3441}
!3439 = !DILocalVariable(name: "h", arg: 1, scope: !3437, file: !3270, line: 98, type: !2205)
!3440 = !DILocalVariable(name: "c", arg: 2, scope: !3437, file: !3270, line: 98, type: !2210)
!3441 = !DILocalVariable(name: "bidx", scope: !3442, file: !3270, line: 101, type: !103)
!3442 = distinct !DILexicalBlock(scope: !3443, file: !3270, line: 100, column: 31)
!3443 = distinct !DILexicalBlock(scope: !3437, file: !3270, line: 100, column: 6)
!3444 = !DILocation(line: 0, scope: !3437)
!3445 = !DILocation(line: 101, column: 28, scope: !3442)
!3446 = !DILocation(line: 101, column: 14, scope: !3442)
!3447 = !DILocation(line: 0, scope: !3442)
!3448 = !DILocation(line: 102, column: 3, scope: !3442)
!3449 = !DILocation(line: 104, column: 1, scope: !3437)
!3450 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !3451, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3453)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!103, !2205, !3333}
!3453 = !{!3454, !3455, !3456}
!3454 = !DILocalVariable(name: "h", arg: 1, scope: !3450, file: !142, line: 250, type: !2205)
!3455 = !DILocalVariable(name: "sz", arg: 2, scope: !3450, file: !142, line: 250, type: !3333)
!3456 = !DILocalVariable(name: "usable_sz", scope: !3450, file: !142, line: 252, type: !32)
!3457 = !DILocation(line: 0, scope: !3450)
!3458 = !DILocation(line: 252, column: 32, scope: !3450)
!3459 = !DILocation(line: 252, column: 30, scope: !3450)
!3460 = !DILocation(line: 252, column: 50, scope: !3450)
!3461 = !DILocation(line: 253, column: 14, scope: !3450)
!3462 = !{i32 0, i32 33}
!3463 = !DILocation(line: 253, column: 12, scope: !3450)
!3464 = !DILocation(line: 253, column: 2, scope: !3450)
!3465 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3270, file: !3270, line: 68, type: !3466, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3468)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{null, !2205, !2210, !103}
!3468 = !{!3469, !3470, !3471, !3472, !3474, !3477}
!3469 = !DILocalVariable(name: "h", arg: 1, scope: !3465, file: !3270, line: 68, type: !2205)
!3470 = !DILocalVariable(name: "c", arg: 2, scope: !3465, file: !3270, line: 68, type: !2210)
!3471 = !DILocalVariable(name: "bidx", arg: 3, scope: !3465, file: !3270, line: 68, type: !103)
!3472 = !DILocalVariable(name: "b", scope: !3465, file: !3270, line: 70, type: !3473)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!3474 = !DILocalVariable(name: "second", scope: !3475, file: !3270, line: 84, type: !2210)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !3270, line: 80, column: 9)
!3476 = distinct !DILexicalBlock(scope: !3465, file: !3270, line: 72, column: 6)
!3477 = !DILocalVariable(name: "first", scope: !3475, file: !3270, line: 85, type: !2210)
!3478 = !DILocation(line: 0, scope: !3465)
!3479 = !DILocation(line: 72, column: 9, scope: !3476)
!3480 = !DILocation(line: 72, column: 14, scope: !3476)
!3481 = !DILocation(line: 72, column: 6, scope: !3465)
!3482 = !DILocation(line: 76, column: 23, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3476, file: !3270, line: 72, column: 21)
!3484 = !DILocation(line: 76, column: 6, scope: !3483)
!3485 = !DILocation(line: 76, column: 20, scope: !3483)
!3486 = !DILocation(line: 77, column: 11, scope: !3483)
!3487 = !DILocation(line: 78, column: 3, scope: !3483)
!3488 = !DILocation(line: 79, column: 3, scope: !3483)
!3489 = !DILocation(line: 80, column: 2, scope: !3483)
!3490 = !DILocation(line: 0, scope: !3475)
!3491 = !DILocation(line: 85, column: 21, scope: !3475)
!3492 = !{i32 0, i32 65536}
!3493 = !DILocation(line: 87, column: 3, scope: !3475)
!3494 = !DILocation(line: 88, column: 3, scope: !3475)
!3495 = !DILocation(line: 89, column: 3, scope: !3475)
!3496 = !DILocation(line: 90, column: 3, scope: !3475)
!3497 = !DILocation(line: 94, column: 39, scope: !3465)
!3498 = !DILocation(line: 94, column: 19, scope: !3465)
!3499 = !DILocation(line: 94, column: 5, scope: !3465)
!3500 = !DILocation(line: 94, column: 16, scope: !3465)
!3501 = !DILocation(line: 96, column: 1, scope: !3465)
!3502 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !142, file: !142, line: 187, type: !3414, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3503)
!3503 = !{!3504, !3505, !3506}
!3504 = !DILocalVariable(name: "h", arg: 1, scope: !3502, file: !142, line: 187, type: !2205)
!3505 = !DILocalVariable(name: "c", arg: 2, scope: !3502, file: !142, line: 187, type: !2210)
!3506 = !DILocalVariable(name: "prev", arg: 3, scope: !3502, file: !142, line: 188, type: !2210)
!3507 = !DILocation(line: 0, scope: !3502)
!3508 = !DILocation(line: 190, column: 2, scope: !3502)
!3509 = !DILocation(line: 191, column: 1, scope: !3502)
!3510 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !142, file: !142, line: 193, type: !3414, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3511)
!3511 = !{!3512, !3513, !3514}
!3512 = !DILocalVariable(name: "h", arg: 1, scope: !3510, file: !142, line: 193, type: !2205)
!3513 = !DILocalVariable(name: "c", arg: 2, scope: !3510, file: !142, line: 193, type: !2210)
!3514 = !DILocalVariable(name: "next", arg: 3, scope: !3510, file: !142, line: 194, type: !2210)
!3515 = !DILocation(line: 0, scope: !3510)
!3516 = !DILocation(line: 196, column: 2, scope: !3510)
!3517 = !DILocation(line: 197, column: 1, scope: !3510)
!3518 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !3381, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3519)
!3519 = !{!3520, !3521}
!3520 = !DILocalVariable(name: "h", arg: 1, scope: !3518, file: !142, line: 177, type: !2205)
!3521 = !DILocalVariable(name: "c", arg: 2, scope: !3518, file: !142, line: 177, type: !2210)
!3522 = !DILocation(line: 0, scope: !3518)
!3523 = !DILocation(line: 179, column: 9, scope: !3518)
!3524 = !DILocation(line: 179, column: 2, scope: !3518)
!3525 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !3526, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3528)
!3526 = !DISubroutineType(types: !3527)
!3527 = !{!2210, !2205, !2210, !141}
!3528 = !{!3529, !3530, !3531, !3532, !3533}
!3529 = !DILocalVariable(name: "h", arg: 1, scope: !3525, file: !142, line: 107, type: !2205)
!3530 = !DILocalVariable(name: "c", arg: 2, scope: !3525, file: !142, line: 107, type: !2210)
!3531 = !DILocalVariable(name: "f", arg: 3, scope: !3525, file: !142, line: 108, type: !141)
!3532 = !DILocalVariable(name: "buf", scope: !3525, file: !142, line: 110, type: !2200)
!3533 = !DILocalVariable(name: "cmem", scope: !3525, file: !142, line: 111, type: !102)
!3534 = !DILocation(line: 0, scope: !3525)
!3535 = !DILocation(line: 110, column: 22, scope: !3525)
!3536 = !DILocation(line: 111, column: 15, scope: !3525)
!3537 = !DILocation(line: 116, column: 11, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !142, line: 115, column: 9)
!3539 = distinct !DILexicalBlock(scope: !3525, file: !142, line: 113, column: 6)
!3540 = !DILocation(line: 116, column: 10, scope: !3538)
!3541 = !DILocation(line: 118, column: 1, scope: !3525)
!3542 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !3543, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3545)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!2200, !2205}
!3545 = !{!3546}
!3546 = !DILocalVariable(name: "h", arg: 1, scope: !3542, file: !142, line: 101, type: !2205)
!3547 = !DILocation(line: 0, scope: !3542)
!3548 = !DILocation(line: 104, column: 9, scope: !3542)
!3549 = !DILocation(line: 104, column: 2, scope: !3542)
!3550 = distinct !DISubprogram(name: "chunk_set", scope: !142, file: !142, line: 120, type: !3551, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3553)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null, !2205, !2210, !141, !2210}
!3553 = !{!3554, !3555, !3556, !3557, !3558, !3559}
!3554 = !DILocalVariable(name: "h", arg: 1, scope: !3550, file: !142, line: 120, type: !2205)
!3555 = !DILocalVariable(name: "c", arg: 2, scope: !3550, file: !142, line: 120, type: !2210)
!3556 = !DILocalVariable(name: "f", arg: 3, scope: !3550, file: !142, line: 121, type: !141)
!3557 = !DILocalVariable(name: "val", arg: 4, scope: !3550, file: !142, line: 121, type: !2210)
!3558 = !DILocalVariable(name: "buf", scope: !3550, file: !142, line: 125, type: !2200)
!3559 = !DILocalVariable(name: "cmem", scope: !3550, file: !142, line: 126, type: !102)
!3560 = !DILocation(line: 0, scope: !3550)
!3561 = !DILocation(line: 125, column: 22, scope: !3550)
!3562 = !DILocation(line: 126, column: 15, scope: !3550)
!3563 = !DILocation(line: 133, column: 27, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !142, line: 131, column: 9)
!3565 = distinct !DILexicalBlock(scope: !3550, file: !142, line: 128, column: 6)
!3566 = !DILocation(line: 133, column: 4, scope: !3564)
!3567 = !DILocation(line: 133, column: 3, scope: !3564)
!3568 = !DILocation(line: 133, column: 25, scope: !3564)
!3569 = !DILocation(line: 135, column: 1, scope: !3550)
!3570 = distinct !DISubprogram(name: "min_chunk_size", scope: !142, file: !142, line: 240, type: !3571, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3573)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!3333, !2205}
!3573 = !{!3574}
!3574 = !DILocalVariable(name: "h", arg: 1, scope: !3570, file: !142, line: 240, type: !2205)
!3575 = !DILocation(line: 0, scope: !3570)
!3576 = !DILocation(line: 242, column: 9, scope: !3570)
!3577 = !DILocation(line: 242, column: 2, scope: !3570)
!3578 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !142, file: !142, line: 235, type: !3579, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3581)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{!3333, !2205, !120}
!3581 = !{!3582, !3583}
!3582 = !DILocalVariable(name: "h", arg: 1, scope: !3578, file: !142, line: 235, type: !2205)
!3583 = !DILocalVariable(name: "bytes", arg: 2, scope: !3578, file: !142, line: 235, type: !120)
!3584 = !DILocation(line: 0, scope: !3578)
!3585 = !DILocation(line: 237, column: 39, scope: !3578)
!3586 = !DILocation(line: 237, column: 9, scope: !3578)
!3587 = !DILocation(line: 237, column: 2, scope: !3578)
!3588 = distinct !DISubprogram(name: "chunksz", scope: !142, file: !142, line: 230, type: !3589, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3591)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{!3333, !120}
!3591 = !{!3592}
!3592 = !DILocalVariable(name: "bytes", arg: 1, scope: !3588, file: !142, line: 230, type: !120)
!3593 = !DILocation(line: 0, scope: !3588)
!3594 = !DILocation(line: 232, column: 29, scope: !3588)
!3595 = !DILocation(line: 232, column: 35, scope: !3588)
!3596 = !DILocation(line: 232, column: 2, scope: !3588)
!3597 = distinct !DISubprogram(name: "set_chunk_size", scope: !142, file: !142, line: 172, type: !3598, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3600)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{null, !2205, !2210, !3333}
!3600 = !{!3601, !3602, !3603}
!3601 = !DILocalVariable(name: "h", arg: 1, scope: !3597, file: !142, line: 172, type: !2205)
!3602 = !DILocalVariable(name: "c", arg: 2, scope: !3597, file: !142, line: 172, type: !2210)
!3603 = !DILocalVariable(name: "size", arg: 3, scope: !3597, file: !142, line: 172, type: !3333)
!3604 = !DILocation(line: 0, scope: !3597)
!3605 = !DILocation(line: 174, column: 38, scope: !3597)
!3606 = !DILocation(line: 174, column: 2, scope: !3597)
!3607 = !DILocation(line: 175, column: 1, scope: !3597)
!3608 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !142, file: !142, line: 209, type: !3598, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3609)
!3609 = !{!3610, !3611, !3612}
!3610 = !DILocalVariable(name: "h", arg: 1, scope: !3608, file: !142, line: 209, type: !2205)
!3611 = !DILocalVariable(name: "c", arg: 2, scope: !3608, file: !142, line: 209, type: !2210)
!3612 = !DILocalVariable(name: "size", arg: 3, scope: !3608, file: !142, line: 210, type: !3333)
!3613 = !DILocation(line: 0, scope: !3608)
!3614 = !DILocation(line: 212, column: 2, scope: !3608)
!3615 = !DILocation(line: 213, column: 1, scope: !3608)
!3616 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3270, file: !3270, line: 34, type: !3466, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3617)
!3617 = !{!3618, !3619, !3620, !3621, !3622, !3625}
!3618 = !DILocalVariable(name: "h", arg: 1, scope: !3616, file: !3270, line: 34, type: !2205)
!3619 = !DILocalVariable(name: "c", arg: 2, scope: !3616, file: !3270, line: 34, type: !2210)
!3620 = !DILocalVariable(name: "bidx", arg: 3, scope: !3616, file: !3270, line: 34, type: !103)
!3621 = !DILocalVariable(name: "b", scope: !3616, file: !3270, line: 36, type: !3473)
!3622 = !DILocalVariable(name: "first", scope: !3623, file: !3270, line: 47, type: !2210)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !3270, line: 46, column: 9)
!3624 = distinct !DILexicalBlock(scope: !3616, file: !3270, line: 42, column: 6)
!3625 = !DILocalVariable(name: "second", scope: !3623, file: !3270, line: 48, type: !2210)
!3626 = !DILocation(line: 0, scope: !3616)
!3627 = !DILocation(line: 36, column: 29, scope: !3616)
!3628 = !DILocation(line: 42, column: 6, scope: !3624)
!3629 = !DILocation(line: 42, column: 28, scope: !3624)
!3630 = !DILocation(line: 42, column: 6, scope: !3616)
!3631 = !DILocation(line: 44, column: 24, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3624, file: !3270, line: 42, column: 34)
!3633 = !DILocation(line: 44, column: 23, scope: !3632)
!3634 = !DILocation(line: 44, column: 6, scope: !3632)
!3635 = !DILocation(line: 44, column: 20, scope: !3632)
!3636 = !DILocation(line: 45, column: 6, scope: !3632)
!3637 = !DILocation(line: 45, column: 11, scope: !3632)
!3638 = !DILocation(line: 46, column: 2, scope: !3632)
!3639 = !DILocation(line: 47, column: 21, scope: !3623)
!3640 = !DILocation(line: 0, scope: !3623)
!3641 = !DILocation(line: 50, column: 6, scope: !3623)
!3642 = !DILocation(line: 50, column: 11, scope: !3623)
!3643 = !DILocation(line: 51, column: 3, scope: !3623)
!3644 = !DILocation(line: 52, column: 3, scope: !3623)
!3645 = !DILocation(line: 56, column: 39, scope: !3616)
!3646 = !DILocation(line: 56, column: 19, scope: !3616)
!3647 = !DILocation(line: 56, column: 5, scope: !3616)
!3648 = !DILocation(line: 56, column: 16, scope: !3616)
!3649 = !DILocation(line: 58, column: 1, scope: !3616)
!3650 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !3381, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3651)
!3651 = !{!3652, !3653}
!3652 = !DILocalVariable(name: "h", arg: 1, scope: !3650, file: !142, line: 182, type: !2205)
!3653 = !DILocalVariable(name: "c", arg: 2, scope: !3650, file: !142, line: 182, type: !2210)
!3654 = !DILocation(line: 0, scope: !3650)
!3655 = !DILocation(line: 184, column: 9, scope: !3650)
!3656 = !DILocation(line: 184, column: 2, scope: !3650)
!3657 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3270, file: !3270, line: 200, type: !3658, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3660)
!3658 = !DISubroutineType(types: !3659)
!3659 = !{!120, !3273, !102}
!3660 = !{!3661, !3662, !3663, !3664, !3665, !3666, !3667}
!3661 = !DILocalVariable(name: "heap", arg: 1, scope: !3657, file: !3270, line: 200, type: !3273)
!3662 = !DILocalVariable(name: "mem", arg: 2, scope: !3657, file: !3270, line: 200, type: !102)
!3663 = !DILocalVariable(name: "h", scope: !3657, file: !3270, line: 202, type: !2205)
!3664 = !DILocalVariable(name: "c", scope: !3657, file: !3270, line: 203, type: !2210)
!3665 = !DILocalVariable(name: "addr", scope: !3657, file: !3270, line: 204, type: !120)
!3666 = !DILocalVariable(name: "chunk_base", scope: !3657, file: !3270, line: 205, type: !120)
!3667 = !DILocalVariable(name: "chunk_sz", scope: !3657, file: !3270, line: 206, type: !120)
!3668 = !DILocation(line: 0, scope: !3657)
!3669 = !DILocation(line: 202, column: 27, scope: !3657)
!3670 = !DILocation(line: 203, column: 16, scope: !3657)
!3671 = !DILocation(line: 204, column: 16, scope: !3657)
!3672 = !DILocation(line: 205, column: 31, scope: !3657)
!3673 = !DILocation(line: 205, column: 22, scope: !3657)
!3674 = !DILocation(line: 206, column: 20, scope: !3657)
!3675 = !DILocation(line: 206, column: 37, scope: !3657)
!3676 = !DILocation(line: 208, column: 26, scope: !3657)
!3677 = !DILocation(line: 208, column: 18, scope: !3657)
!3678 = !DILocation(line: 208, column: 2, scope: !3657)
!3679 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3270, file: !3270, line: 263, type: !3680, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3682)
!3680 = !DISubroutineType(types: !3681)
!3681 = !{!102, !3273, !120}
!3682 = !{!3683, !3684, !3685, !3686, !3687, !3688}
!3683 = !DILocalVariable(name: "heap", arg: 1, scope: !3679, file: !3270, line: 263, type: !3273)
!3684 = !DILocalVariable(name: "bytes", arg: 2, scope: !3679, file: !3270, line: 263, type: !120)
!3685 = !DILocalVariable(name: "h", scope: !3679, file: !3270, line: 265, type: !2205)
!3686 = !DILocalVariable(name: "mem", scope: !3679, file: !3270, line: 266, type: !102)
!3687 = !DILocalVariable(name: "chunk_sz", scope: !3679, file: !3270, line: 272, type: !3333)
!3688 = !DILocalVariable(name: "c", scope: !3679, file: !3270, line: 273, type: !2210)
!3689 = !DILocation(line: 0, scope: !3679)
!3690 = !DILocation(line: 265, column: 27, scope: !3679)
!3691 = !DILocation(line: 268, column: 12, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3679, file: !3270, line: 268, column: 6)
!3693 = !DILocation(line: 268, column: 18, scope: !3692)
!3694 = !DILocation(line: 268, column: 21, scope: !3692)
!3695 = !DILocation(line: 268, column: 6, scope: !3679)
!3696 = !DILocation(line: 272, column: 23, scope: !3679)
!3697 = !DILocation(line: 273, column: 16, scope: !3679)
!3698 = !DILocation(line: 274, column: 8, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3679, file: !3270, line: 274, column: 6)
!3700 = !DILocation(line: 274, column: 6, scope: !3679)
!3701 = !DILocation(line: 279, column: 6, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3679, file: !3270, line: 279, column: 6)
!3703 = !DILocation(line: 279, column: 23, scope: !3702)
!3704 = !DILocation(line: 279, column: 6, scope: !3679)
!3705 = !DILocation(line: 280, column: 24, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3702, file: !3270, line: 279, column: 35)
!3707 = !DILocation(line: 280, column: 3, scope: !3706)
!3708 = !DILocation(line: 281, column: 3, scope: !3706)
!3709 = !DILocation(line: 282, column: 2, scope: !3706)
!3710 = !DILocation(line: 284, column: 2, scope: !3679)
!3711 = !DILocation(line: 286, column: 8, scope: !3679)
!3712 = !DILocation(line: 289, column: 50, scope: !3679)
!3713 = !DILocation(line: 289, column: 30, scope: !3679)
!3714 = !{i32 -4, i32 262133}
!3715 = !DILocation(line: 289, column: 2, scope: !3679)
!3716 = !DILocation(line: 298, column: 2, scope: !3679)
!3717 = !DILocation(line: 299, column: 1, scope: !3679)
!3718 = distinct !DISubprogram(name: "size_too_big", scope: !142, file: !142, line: 256, type: !3719, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3721)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{!211, !2205, !120}
!3721 = !{!3722, !3723}
!3722 = !DILocalVariable(name: "h", arg: 1, scope: !3718, file: !142, line: 256, type: !2205)
!3723 = !DILocalVariable(name: "bytes", arg: 2, scope: !3718, file: !142, line: 256, type: !120)
!3724 = !DILocation(line: 0, scope: !3718)
!3725 = !DILocation(line: 262, column: 16, scope: !3718)
!3726 = !DILocation(line: 262, column: 36, scope: !3718)
!3727 = !DILocation(line: 262, column: 30, scope: !3718)
!3728 = !DILocation(line: 262, column: 2, scope: !3718)
!3729 = distinct !DISubprogram(name: "alloc_chunk", scope: !3270, file: !3270, line: 211, type: !3730, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3732)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!2210, !2205, !3333}
!3732 = !{!3733, !3734, !3735, !3736, !3737, !3740, !3741, !3743, !3744, !3747}
!3733 = !DILocalVariable(name: "h", arg: 1, scope: !3729, file: !3270, line: 211, type: !2205)
!3734 = !DILocalVariable(name: "sz", arg: 2, scope: !3729, file: !3270, line: 211, type: !3333)
!3735 = !DILocalVariable(name: "bi", scope: !3729, file: !3270, line: 213, type: !103)
!3736 = !DILocalVariable(name: "b", scope: !3729, file: !3270, line: 214, type: !3473)
!3737 = !DILocalVariable(name: "first", scope: !3738, file: !3270, line: 233, type: !2210)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !3270, line: 232, column: 15)
!3739 = distinct !DILexicalBlock(scope: !3729, file: !3270, line: 232, column: 6)
!3740 = !DILocalVariable(name: "i", scope: !3738, file: !3270, line: 234, type: !103)
!3741 = !DILocalVariable(name: "c", scope: !3742, file: !3270, line: 236, type: !2210)
!3742 = distinct !DILexicalBlock(scope: !3738, file: !3270, line: 235, column: 6)
!3743 = !DILocalVariable(name: "bmask", scope: !3729, file: !3270, line: 249, type: !137)
!3744 = !DILocalVariable(name: "minbucket", scope: !3745, file: !3270, line: 252, type: !103)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !3270, line: 251, column: 19)
!3746 = distinct !DILexicalBlock(scope: !3729, file: !3270, line: 251, column: 6)
!3747 = !DILocalVariable(name: "c", scope: !3745, file: !3270, line: 253, type: !2210)
!3748 = !DILocation(line: 0, scope: !3729)
!3749 = !DILocation(line: 213, column: 11, scope: !3729)
!3750 = !DILocation(line: 232, column: 9, scope: !3739)
!3751 = !DILocation(line: 232, column: 6, scope: !3739)
!3752 = !DILocation(line: 232, column: 6, scope: !3729)
!3753 = !DILocation(line: 236, column: 21, scope: !3742)
!3754 = !DILocation(line: 0, scope: !3738)
!3755 = !DILocation(line: 0, scope: !3742)
!3756 = !DILocation(line: 237, column: 8, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3742, file: !3270, line: 237, column: 8)
!3758 = !DILocation(line: 237, column: 25, scope: !3757)
!3759 = !DILocation(line: 237, column: 8, scope: !3742)
!3760 = !DILocation(line: 238, column: 5, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3757, file: !3270, line: 237, column: 32)
!3762 = !DILocation(line: 241, column: 14, scope: !3742)
!3763 = !DILocation(line: 241, column: 12, scope: !3742)
!3764 = !DILocation(line: 243, column: 12, scope: !3738)
!3765 = !DILocation(line: 243, column: 16, scope: !3738)
!3766 = distinct !{!3766, !3767, !3768}
!3767 = !DILocation(line: 235, column: 3, scope: !3738)
!3768 = !DILocation(line: 243, column: 35, scope: !3738)
!3769 = !DILocation(line: 249, column: 22, scope: !3729)
!3770 = !DILocation(line: 249, column: 39, scope: !3729)
!3771 = !DILocation(line: 249, column: 36, scope: !3729)
!3772 = !DILocation(line: 251, column: 12, scope: !3746)
!3773 = !DILocation(line: 251, column: 6, scope: !3729)
!3774 = !DILocation(line: 252, column: 19, scope: !3745)
!3775 = !DILocation(line: 0, scope: !3745)
!3776 = !DILocation(line: 253, column: 39, scope: !3745)
!3777 = !DILocation(line: 255, column: 3, scope: !3745)
!3778 = !DILocation(line: 261, column: 1, scope: !3729)
!3779 = distinct !DISubprogram(name: "split_chunks", scope: !3270, file: !3270, line: 109, type: !3414, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3780)
!3780 = !{!3781, !3782, !3783, !3784, !3785, !3786}
!3781 = !DILocalVariable(name: "h", arg: 1, scope: !3779, file: !3270, line: 109, type: !2205)
!3782 = !DILocalVariable(name: "lc", arg: 2, scope: !3779, file: !3270, line: 109, type: !2210)
!3783 = !DILocalVariable(name: "rc", arg: 3, scope: !3779, file: !3270, line: 109, type: !2210)
!3784 = !DILocalVariable(name: "sz0", scope: !3779, file: !3270, line: 114, type: !3333)
!3785 = !DILocalVariable(name: "lsz", scope: !3779, file: !3270, line: 115, type: !3333)
!3786 = !DILocalVariable(name: "rsz", scope: !3779, file: !3270, line: 116, type: !3333)
!3787 = !DILocation(line: 0, scope: !3779)
!3788 = !DILocation(line: 114, column: 18, scope: !3779)
!3789 = !DILocation(line: 115, column: 21, scope: !3779)
!3790 = !DILocation(line: 116, column: 22, scope: !3779)
!3791 = !DILocation(line: 118, column: 2, scope: !3779)
!3792 = !DILocation(line: 119, column: 2, scope: !3779)
!3793 = !DILocation(line: 120, column: 2, scope: !3779)
!3794 = !DILocation(line: 121, column: 25, scope: !3779)
!3795 = !DILocation(line: 121, column: 2, scope: !3779)
!3796 = !DILocation(line: 122, column: 1, scope: !3779)
!3797 = distinct !DISubprogram(name: "chunk_mem", scope: !3270, file: !3270, line: 24, type: !3798, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3800)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!102, !2205, !2210}
!3800 = !{!3801, !3802, !3803, !3804}
!3801 = !DILocalVariable(name: "h", arg: 1, scope: !3797, file: !3270, line: 24, type: !2205)
!3802 = !DILocalVariable(name: "c", arg: 2, scope: !3797, file: !3270, line: 24, type: !2210)
!3803 = !DILocalVariable(name: "buf", scope: !3797, file: !3270, line: 26, type: !2200)
!3804 = !DILocalVariable(name: "ret", scope: !3797, file: !3270, line: 27, type: !1694)
!3805 = !DILocation(line: 0, scope: !3797)
!3806 = !DILocation(line: 26, column: 22, scope: !3797)
!3807 = !DILocation(line: 27, column: 38, scope: !3797)
!3808 = !DILocation(line: 31, column: 2, scope: !3797)
!3809 = distinct !DISubprogram(name: "increase_allocated_bytes", scope: !3270, file: !3270, line: 17, type: !3810, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3812)
!3810 = !DISubroutineType(types: !3811)
!3811 = !{null, !2205, !120}
!3812 = !{!3813, !3814}
!3813 = !DILocalVariable(name: "h", arg: 1, scope: !3809, file: !3270, line: 17, type: !2205)
!3814 = !DILocalVariable(name: "num_bytes", arg: 2, scope: !3809, file: !3270, line: 17, type: !120)
!3815 = !DILocation(line: 0, scope: !3809)
!3816 = !DILocation(line: 19, column: 5, scope: !3809)
!3817 = !DILocation(line: 19, column: 21, scope: !3809)
!3818 = !DILocation(line: 20, column: 27, scope: !3809)
!3819 = !DILocation(line: 20, column: 25, scope: !3809)
!3820 = !DILocation(line: 21, column: 1, scope: !3809)
!3821 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3270, file: !3270, line: 301, type: !3822, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3824)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{!102, !3273, !120, !120}
!3824 = !{!3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836}
!3825 = !DILocalVariable(name: "heap", arg: 1, scope: !3821, file: !3270, line: 301, type: !3273)
!3826 = !DILocalVariable(name: "align", arg: 2, scope: !3821, file: !3270, line: 301, type: !120)
!3827 = !DILocalVariable(name: "bytes", arg: 3, scope: !3821, file: !3270, line: 301, type: !120)
!3828 = !DILocalVariable(name: "h", scope: !3821, file: !3270, line: 303, type: !2205)
!3829 = !DILocalVariable(name: "gap", scope: !3821, file: !3270, line: 304, type: !120)
!3830 = !DILocalVariable(name: "rew", scope: !3821, file: !3270, line: 304, type: !120)
!3831 = !DILocalVariable(name: "padded_sz", scope: !3821, file: !3270, line: 335, type: !3333)
!3832 = !DILocalVariable(name: "c0", scope: !3821, file: !3270, line: 336, type: !2210)
!3833 = !DILocalVariable(name: "mem", scope: !3821, file: !3270, line: 341, type: !1694)
!3834 = !DILocalVariable(name: "end", scope: !3821, file: !3270, line: 345, type: !2200)
!3835 = !DILocalVariable(name: "c", scope: !3821, file: !3270, line: 348, type: !2210)
!3836 = !DILocalVariable(name: "c_end", scope: !3821, file: !3270, line: 349, type: !2210)
!3837 = !DILocation(line: 0, scope: !3821)
!3838 = !DILocation(line: 303, column: 27, scope: !3821)
!3839 = !DILocation(line: 313, column: 16, scope: !3821)
!3840 = !DILocation(line: 313, column: 14, scope: !3821)
!3841 = !DILocation(line: 314, column: 12, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3821, file: !3270, line: 314, column: 6)
!3843 = !DILocation(line: 314, column: 6, scope: !3821)
!3844 = !DILocation(line: 315, column: 9, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3842, file: !3270, line: 314, column: 20)
!3846 = !DILocation(line: 316, column: 9, scope: !3845)
!3847 = !DILocation(line: 318, column: 13, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !3270, line: 318, column: 7)
!3849 = distinct !DILexicalBlock(scope: !3842, file: !3270, line: 317, column: 9)
!3850 = !DILocation(line: 318, column: 7, scope: !3849)
!3851 = !DILocation(line: 319, column: 11, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3848, file: !3270, line: 318, column: 39)
!3853 = !DILocation(line: 319, column: 4, scope: !3852)
!3854 = !DILocation(line: 0, scope: !3842)
!3855 = !DILocation(line: 326, column: 12, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3821, file: !3270, line: 326, column: 6)
!3857 = !DILocation(line: 326, column: 17, scope: !3856)
!3858 = !DILocation(line: 326, column: 20, scope: !3856)
!3859 = !DILocation(line: 326, column: 6, scope: !3821)
!3860 = !DILocation(line: 335, column: 50, scope: !3821)
!3861 = !DILocation(line: 335, column: 58, scope: !3821)
!3862 = !DILocation(line: 335, column: 24, scope: !3821)
!3863 = !DILocation(line: 336, column: 17, scope: !3821)
!3864 = !DILocation(line: 338, column: 9, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3821, file: !3270, line: 338, column: 6)
!3866 = !DILocation(line: 338, column: 6, scope: !3821)
!3867 = !DILocation(line: 341, column: 17, scope: !3821)
!3868 = !DILocation(line: 344, column: 20, scope: !3821)
!3869 = !DILocation(line: 344, column: 8, scope: !3821)
!3870 = !DILocation(line: 344, column: 47, scope: !3821)
!3871 = !DILocation(line: 345, column: 39, scope: !3821)
!3872 = !DILocation(line: 348, column: 16, scope: !3821)
!3873 = !DILocation(line: 349, column: 26, scope: !3821)
!3874 = !DILocation(line: 349, column: 24, scope: !3821)
!3875 = !DILocation(line: 353, column: 8, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3821, file: !3270, line: 353, column: 6)
!3877 = !DILocation(line: 353, column: 6, scope: !3821)
!3878 = !DILocation(line: 354, column: 3, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3876, file: !3270, line: 353, column: 14)
!3880 = !DILocation(line: 355, column: 3, scope: !3879)
!3881 = !DILocation(line: 356, column: 2, scope: !3879)
!3882 = !DILocation(line: 359, column: 6, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3821, file: !3270, line: 359, column: 6)
!3884 = !DILocation(line: 359, column: 24, scope: !3883)
!3885 = !DILocation(line: 359, column: 6, scope: !3821)
!3886 = !DILocation(line: 360, column: 3, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3883, file: !3270, line: 359, column: 33)
!3888 = !DILocation(line: 361, column: 3, scope: !3887)
!3889 = !DILocation(line: 362, column: 2, scope: !3887)
!3890 = !DILocation(line: 364, column: 2, scope: !3821)
!3891 = !DILocation(line: 367, column: 50, scope: !3821)
!3892 = !DILocation(line: 367, column: 30, scope: !3821)
!3893 = !DILocation(line: 367, column: 2, scope: !3821)
!3894 = !DILocation(line: 377, column: 1, scope: !3821)
!3895 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3270, file: !3270, line: 379, type: !3896, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3898)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{!102, !3273, !102, !120, !120}
!3898 = !{!3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3908, !3914, !3915}
!3899 = !DILocalVariable(name: "heap", arg: 1, scope: !3895, file: !3270, line: 379, type: !3273)
!3900 = !DILocalVariable(name: "ptr", arg: 2, scope: !3895, file: !3270, line: 379, type: !102)
!3901 = !DILocalVariable(name: "align", arg: 3, scope: !3895, file: !3270, line: 380, type: !120)
!3902 = !DILocalVariable(name: "bytes", arg: 4, scope: !3895, file: !3270, line: 380, type: !120)
!3903 = !DILocalVariable(name: "h", scope: !3895, file: !3270, line: 382, type: !2205)
!3904 = !DILocalVariable(name: "c", scope: !3895, file: !3270, line: 399, type: !2210)
!3905 = !DILocalVariable(name: "rc", scope: !3895, file: !3270, line: 400, type: !2210)
!3906 = !DILocalVariable(name: "align_gap", scope: !3895, file: !3270, line: 401, type: !120)
!3907 = !DILocalVariable(name: "chunks_need", scope: !3895, file: !3270, line: 402, type: !3333)
!3908 = !DILocalVariable(name: "split_size", scope: !3909, file: !3270, line: 435, type: !3333)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !3270, line: 433, column: 61)
!3910 = distinct !DILexicalBlock(scope: !3911, file: !3270, line: 432, column: 13)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !3270, line: 409, column: 13)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !3270, line: 406, column: 13)
!3913 = distinct !DILexicalBlock(scope: !3895, file: !3270, line: 404, column: 6)
!3914 = !DILocalVariable(name: "ptr2", scope: !3895, file: !3270, line: 474, type: !102)
!3915 = !DILocalVariable(name: "prev_size", scope: !3916, file: !3270, line: 477, type: !120)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !3270, line: 476, column: 20)
!3917 = distinct !DILexicalBlock(scope: !3895, file: !3270, line: 476, column: 6)
!3918 = !DILocation(line: 0, scope: !3895)
!3919 = !DILocation(line: 382, column: 27, scope: !3895)
!3920 = !DILocation(line: 385, column: 10, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3895, file: !3270, line: 385, column: 6)
!3922 = !DILocation(line: 385, column: 6, scope: !3895)
!3923 = !DILocation(line: 386, column: 10, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3921, file: !3270, line: 385, column: 19)
!3925 = !DILocation(line: 386, column: 3, scope: !3924)
!3926 = !DILocation(line: 388, column: 12, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3895, file: !3270, line: 388, column: 6)
!3928 = !DILocation(line: 388, column: 6, scope: !3895)
!3929 = !DILocation(line: 389, column: 3, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3927, file: !3270, line: 388, column: 18)
!3931 = !DILocation(line: 390, column: 3, scope: !3930)
!3932 = !DILocation(line: 395, column: 6, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3895, file: !3270, line: 395, column: 6)
!3934 = !DILocation(line: 395, column: 6, scope: !3895)
!3935 = !DILocation(line: 399, column: 16, scope: !3895)
!3936 = !DILocation(line: 400, column: 17, scope: !3895)
!3937 = !DILocation(line: 401, column: 49, scope: !3895)
!3938 = !DILocation(line: 401, column: 36, scope: !3895)
!3939 = !DILocation(line: 402, column: 52, scope: !3895)
!3940 = !DILocation(line: 402, column: 26, scope: !3895)
!3941 = !DILocation(line: 404, column: 6, scope: !3913)
!3942 = !DILocation(line: 404, column: 12, scope: !3913)
!3943 = !DILocation(line: 404, column: 40, scope: !3913)
!3944 = !DILocation(line: 404, column: 31, scope: !3913)
!3945 = !DILocation(line: 404, column: 6, scope: !3895)
!3946 = !DILocation(line: 406, column: 13, scope: !3912)
!3947 = !DILocation(line: 406, column: 30, scope: !3912)
!3948 = !DILocation(line: 406, column: 13, scope: !3913)
!3949 = !DILocation(line: 409, column: 30, scope: !3911)
!3950 = !DILocation(line: 409, column: 13, scope: !3912)
!3951 = !DILocation(line: 417, column: 22, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3911, file: !3270, line: 409, column: 45)
!3953 = !DILocation(line: 417, column: 37, scope: !3952)
!3954 = !DILocation(line: 416, column: 6, scope: !3952)
!3955 = !DILocation(line: 416, column: 22, scope: !3952)
!3956 = !DILocation(line: 420, column: 24, scope: !3952)
!3957 = !DILocation(line: 420, column: 3, scope: !3952)
!3958 = !DILocation(line: 421, column: 3, scope: !3952)
!3959 = !DILocation(line: 422, column: 3, scope: !3952)
!3960 = !DILocation(line: 431, column: 3, scope: !3952)
!3961 = !DILocation(line: 432, column: 14, scope: !3910)
!3962 = !DILocation(line: 432, column: 32, scope: !3910)
!3963 = !DILocation(line: 433, column: 26, scope: !3910)
!3964 = !DILocation(line: 433, column: 24, scope: !3910)
!3965 = !DILocation(line: 433, column: 44, scope: !3910)
!3966 = !DILocation(line: 432, column: 13, scope: !3911)
!3967 = !DILocation(line: 435, column: 38, scope: !3909)
!3968 = !DILocation(line: 0, scope: !3909)
!3969 = !DILocation(line: 442, column: 42, scope: !3909)
!3970 = !DILocation(line: 442, column: 3, scope: !3909)
!3971 = !DILocation(line: 445, column: 3, scope: !3909)
!3972 = !DILocation(line: 447, column: 20, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3909, file: !3270, line: 447, column: 7)
!3974 = !DILocation(line: 447, column: 18, scope: !3973)
!3975 = !DILocation(line: 447, column: 7, scope: !3909)
!3976 = !DILocation(line: 448, column: 27, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3973, file: !3270, line: 447, column: 39)
!3978 = !DILocation(line: 448, column: 4, scope: !3977)
!3979 = !DILocation(line: 449, column: 4, scope: !3977)
!3980 = !DILocation(line: 450, column: 3, scope: !3977)
!3981 = !DILocation(line: 452, column: 3, scope: !3909)
!3982 = !DILocation(line: 453, column: 3, scope: !3909)
!3983 = !DILocation(line: 474, column: 15, scope: !3895)
!3984 = !DILocation(line: 476, column: 11, scope: !3917)
!3985 = !DILocation(line: 476, column: 6, scope: !3895)
!3986 = !DILocation(line: 477, column: 42, scope: !3916)
!3987 = !DILocation(line: 477, column: 22, scope: !3916)
!3988 = !DILocation(line: 477, column: 60, scope: !3916)
!3989 = !DILocation(line: 0, scope: !3916)
!3990 = !DILocation(line: 479, column: 21, scope: !3916)
!3991 = !DILocation(line: 479, column: 3, scope: !3916)
!3992 = !DILocation(line: 480, column: 3, scope: !3916)
!3993 = !DILocation(line: 481, column: 2, scope: !3916)
!3994 = !DILocation(line: 483, column: 1, scope: !3895)
!3995 = distinct !DISubprogram(name: "sys_heap_init", scope: !3270, file: !3270, line: 485, type: !3996, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3998)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{null, !3273, !102, !120}
!3998 = !{!3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008}
!3999 = !DILocalVariable(name: "heap", arg: 1, scope: !3995, file: !3270, line: 485, type: !3273)
!4000 = !DILocalVariable(name: "mem", arg: 2, scope: !3995, file: !3270, line: 485, type: !102)
!4001 = !DILocalVariable(name: "bytes", arg: 3, scope: !3995, file: !3270, line: 485, type: !120)
!4002 = !DILocalVariable(name: "addr", scope: !3995, file: !3270, line: 502, type: !22)
!4003 = !DILocalVariable(name: "end", scope: !3995, file: !3270, line: 503, type: !22)
!4004 = !DILocalVariable(name: "heap_sz", scope: !3995, file: !3270, line: 504, type: !3333)
!4005 = !DILocalVariable(name: "h", scope: !3995, file: !3270, line: 509, type: !2205)
!4006 = !DILocalVariable(name: "nb_buckets", scope: !3995, file: !3270, line: 520, type: !103)
!4007 = !DILocalVariable(name: "chunk0_size", scope: !3995, file: !3270, line: 521, type: !3333)
!4008 = !DILocalVariable(name: "i", scope: !4009, file: !3270, line: 526, type: !103)
!4009 = distinct !DILexicalBlock(scope: !3995, file: !3270, line: 526, column: 2)
!4010 = !DILocation(line: 0, scope: !3995)
!4011 = !DILocation(line: 499, column: 8, scope: !3995)
!4012 = !DILocation(line: 502, column: 19, scope: !3995)
!4013 = !DILocation(line: 503, column: 18, scope: !3995)
!4014 = !DILocation(line: 504, column: 27, scope: !3995)
!4015 = !DILocation(line: 504, column: 35, scope: !3995)
!4016 = !DILocation(line: 509, column: 21, scope: !3995)
!4017 = !DILocation(line: 510, column: 8, scope: !3995)
!4018 = !DILocation(line: 510, column: 13, scope: !3995)
!4019 = !DILocation(line: 511, column: 5, scope: !3995)
!4020 = !DILocation(line: 511, column: 15, scope: !3995)
!4021 = !DILocation(line: 512, column: 5, scope: !3995)
!4022 = !DILocation(line: 512, column: 19, scope: !3995)
!4023 = !DILocation(line: 515, column: 5, scope: !3995)
!4024 = !DILocation(line: 515, column: 16, scope: !3995)
!4025 = !DILocation(line: 516, column: 5, scope: !3995)
!4026 = !DILocation(line: 516, column: 21, scope: !3995)
!4027 = !DILocation(line: 517, column: 5, scope: !3995)
!4028 = !DILocation(line: 517, column: 25, scope: !3995)
!4029 = !DILocation(line: 520, column: 19, scope: !3995)
!4030 = !DILocation(line: 522, column: 21, scope: !3995)
!4031 = !DILocation(line: 521, column: 56, scope: !3995)
!4032 = !DILocation(line: 521, column: 26, scope: !3995)
!4033 = !DILocation(line: 0, scope: !4009)
!4034 = !DILocation(line: 526, column: 20, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4009, file: !3270, line: 526, column: 2)
!4036 = !DILocation(line: 526, column: 2, scope: !4009)
!4037 = !DILocation(line: 531, column: 2, scope: !3995)
!4038 = !DILocation(line: 532, column: 2, scope: !3995)
!4039 = !DILocation(line: 533, column: 2, scope: !3995)
!4040 = !DILocation(line: 536, column: 41, scope: !3995)
!4041 = !DILocation(line: 536, column: 2, scope: !3995)
!4042 = !DILocation(line: 537, column: 2, scope: !3995)
!4043 = !DILocation(line: 540, column: 2, scope: !3995)
!4044 = !DILocation(line: 541, column: 2, scope: !3995)
!4045 = !DILocation(line: 542, column: 2, scope: !3995)
!4046 = !DILocation(line: 544, column: 2, scope: !3995)
!4047 = !DILocation(line: 545, column: 1, scope: !3995)
!4048 = !DILocation(line: 527, column: 17, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4035, file: !3270, line: 526, column: 39)
!4050 = !DILocation(line: 527, column: 22, scope: !4049)
!4051 = !DILocation(line: 526, column: 35, scope: !4035)
!4052 = distinct !{!4052, !4036, !4053}
!4053 = !DILocation(line: 528, column: 2, scope: !4009)
!4054 = distinct !DISubprogram(name: "sys_heap_validate", scope: !134, file: !134, line: 88, type: !4055, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4077)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!211, !4057}
!4057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4058, size: 32)
!4058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !4059)
!4059 = !{!4060, !4075, !4076}
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4058, file: !113, line: 57, baseType: !4061, size: 32)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 32)
!4062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !4063)
!4063 = !{!4064, !4065, !4066, !4067, !4068, !4069, !4070}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !4062, file: !142, line: 69, baseType: !2209, size: 64)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !4062, file: !142, line: 70, baseType: !2210, size: 32, offset: 64)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !4062, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4062, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4062, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4062, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !4062, file: !142, line: 77, baseType: !4071, offset: 224)
!4071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4072, elements: !2221)
!4072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !4073)
!4073 = !{!4074}
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4072, file: !142, line: 65, baseType: !2210, size: 32)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4058, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4058, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!4077 = !{!4078, !4079, !4080, !4081, !4082, !4083, !4089, !4091, !4094, !4095, !4096, !4097, !4098, !4100, !4103}
!4078 = !DILocalVariable(name: "heap", arg: 1, scope: !4054, file: !134, line: 88, type: !4057)
!4079 = !DILocalVariable(name: "h", scope: !4054, file: !134, line: 90, type: !4061)
!4080 = !DILocalVariable(name: "c", scope: !4054, file: !134, line: 91, type: !2210)
!4081 = !DILocalVariable(name: "allocated_bytes", scope: !4054, file: !134, line: 112, type: !120)
!4082 = !DILocalVariable(name: "free_bytes", scope: !4054, file: !134, line: 112, type: !120)
!4083 = !DILocalVariable(name: "stat", scope: !4054, file: !134, line: 113, type: !4084)
!4084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2931, line: 24, size: 96, elements: !4085)
!4085 = !{!4086, !4087, !4088}
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4084, file: !2931, line: 25, baseType: !120, size: 32)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4084, file: !2931, line: 26, baseType: !120, size: 32, offset: 32)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4084, file: !2931, line: 27, baseType: !120, size: 32, offset: 64)
!4089 = !DILocalVariable(name: "b", scope: !4090, file: !134, line: 127, type: !103)
!4090 = distinct !DILexicalBlock(scope: !4054, file: !134, line: 127, column: 2)
!4091 = !DILocalVariable(name: "c0", scope: !4092, file: !134, line: 128, type: !2210)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !134, line: 127, column: 57)
!4093 = distinct !DILexicalBlock(scope: !4090, file: !134, line: 127, column: 2)
!4094 = !DILocalVariable(name: "n", scope: !4092, file: !134, line: 129, type: !137)
!4095 = !DILocalVariable(name: "empty", scope: !4092, file: !134, line: 141, type: !211)
!4096 = !DILocalVariable(name: "zero", scope: !4092, file: !134, line: 142, type: !211)
!4097 = !DILocalVariable(name: "prev_chunk", scope: !4054, file: !134, line: 159, type: !2210)
!4098 = !DILocalVariable(name: "b", scope: !4099, file: !134, line: 179, type: !103)
!4099 = distinct !DILexicalBlock(scope: !4054, file: !134, line: 179, column: 2)
!4100 = !DILocalVariable(name: "c0", scope: !4101, file: !134, line: 180, type: !2210)
!4101 = distinct !DILexicalBlock(scope: !4102, file: !134, line: 179, column: 57)
!4102 = distinct !DILexicalBlock(scope: !4099, file: !134, line: 179, column: 2)
!4103 = !DILocalVariable(name: "n", scope: !4101, file: !134, line: 181, type: !103)
!4104 = !DILocation(line: 0, scope: !4054)
!4105 = !DILocation(line: 90, column: 27, scope: !4054)
!4106 = !DILocation(line: 96, column: 11, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4054, file: !134, line: 96, column: 2)
!4108 = !DILocation(line: 96, column: 32, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4107, file: !134, line: 96, column: 2)
!4110 = !DILocation(line: 96, column: 2, scope: !4107)
!4111 = !DILocation(line: 97, column: 8, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !134, line: 97, column: 7)
!4113 = distinct !DILexicalBlock(scope: !4109, file: !134, line: 96, column: 71)
!4114 = !DILocation(line: 97, column: 7, scope: !4113)
!4115 = !DILocation(line: 96, column: 52, scope: !4109)
!4116 = distinct !{!4116, !4110, !4117}
!4117 = !DILocation(line: 100, column: 2, scope: !4107)
!4118 = !DILocation(line: 0, scope: !4107)
!4119 = !DILocation(line: 101, column: 8, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4054, file: !134, line: 101, column: 6)
!4121 = !DILocation(line: 101, column: 6, scope: !4054)
!4122 = !DILocation(line: 112, column: 2, scope: !4054)
!4123 = !DILocation(line: 113, column: 2, scope: !4054)
!4124 = !DILocation(line: 113, column: 26, scope: !4054)
!4125 = !DILocation(line: 115, column: 2, scope: !4054)
!4126 = !DILocation(line: 116, column: 2, scope: !4054)
!4127 = !DILocation(line: 117, column: 12, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4054, file: !134, line: 117, column: 6)
!4129 = !DILocation(line: 117, column: 31, scope: !4128)
!4130 = !DILocation(line: 117, column: 28, scope: !4128)
!4131 = !DILocation(line: 117, column: 48, scope: !4128)
!4132 = !DILocation(line: 118, column: 12, scope: !4128)
!4133 = !DILocation(line: 118, column: 26, scope: !4128)
!4134 = !DILocation(line: 118, column: 23, scope: !4128)
!4135 = !DILocation(line: 117, column: 6, scope: !4054)
!4136 = !DILocation(line: 0, scope: !4090)
!4137 = !DILocation(line: 127, column: 40, scope: !4093)
!4138 = !DILocation(line: 127, column: 23, scope: !4093)
!4139 = !DILocation(line: 127, column: 20, scope: !4093)
!4140 = !DILocation(line: 127, column: 2, scope: !4090)
!4141 = !DILocation(line: 128, column: 32, scope: !4092)
!4142 = !DILocation(line: 0, scope: !4092)
!4143 = !DILocation(line: 133, column: 18, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !134, line: 133, column: 3)
!4145 = distinct !DILexicalBlock(scope: !4092, file: !134, line: 133, column: 3)
!4146 = !DILocation(line: 133, column: 23, scope: !4144)
!4147 = !DILocation(line: 141, column: 20, scope: !4092)
!4148 = !DILocation(line: 141, column: 36, scope: !4092)
!4149 = !DILocation(line: 141, column: 34, scope: !4092)
!4150 = !DILocation(line: 141, column: 44, scope: !4092)
!4151 = !DILocation(line: 144, column: 7, scope: !4092)
!4152 = !DILocation(line: 133, column: 29, scope: !4144)
!4153 = !DILocation(line: 133, column: 34, scope: !4144)
!4154 = !DILocation(line: 133, column: 3, scope: !4145)
!4155 = !DILocation(line: 135, column: 9, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !134, line: 135, column: 8)
!4157 = distinct !DILexicalBlock(scope: !4144, file: !134, line: 134, column: 40)
!4158 = !DILocation(line: 135, column: 8, scope: !4157)
!4159 = !DILocation(line: 138, column: 4, scope: !4157)
!4160 = !DILocation(line: 134, column: 9, scope: !4144)
!4161 = !DILocation(line: 134, column: 17, scope: !4144)
!4162 = distinct !{!4162, !4154, !4163}
!4163 = !DILocation(line: 139, column: 3, scope: !4145)
!4164 = !DILocation(line: 142, column: 17, scope: !4092)
!4165 = !DILocation(line: 144, column: 13, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4092, file: !134, line: 144, column: 7)
!4167 = !DILocation(line: 148, column: 13, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4092, file: !134, line: 148, column: 7)
!4169 = !DILocation(line: 148, column: 30, scope: !4168)
!4170 = !DILocation(line: 148, column: 35, scope: !4168)
!4171 = !DILocation(line: 148, column: 7, scope: !4092)
!4172 = !DILocation(line: 127, column: 53, scope: !4093)
!4173 = distinct !{!4173, !4140, !4174}
!4174 = !DILocation(line: 151, column: 2, scope: !4090)
!4175 = !DILocation(line: 160, column: 37, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !134, line: 160, column: 2)
!4177 = distinct !DILexicalBlock(scope: !4054, file: !134, line: 160, column: 2)
!4178 = !DILocation(line: 160, column: 11, scope: !4177)
!4179 = !DILocation(line: 160, column: 32, scope: !4176)
!4180 = !DILocation(line: 160, column: 2, scope: !4177)
!4181 = !DILocation(line: 161, column: 8, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !134, line: 161, column: 7)
!4183 = distinct !DILexicalBlock(scope: !4176, file: !134, line: 160, column: 71)
!4184 = !DILocation(line: 161, column: 25, scope: !4182)
!4185 = !DILocation(line: 164, column: 7, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4183, file: !134, line: 164, column: 7)
!4187 = !DILocation(line: 164, column: 24, scope: !4186)
!4188 = !DILocation(line: 164, column: 7, scope: !4183)
!4189 = !DILocation(line: 169, column: 3, scope: !4183)
!4190 = !DILocation(line: 160, column: 52, scope: !4176)
!4191 = distinct !{!4191, !4180, !4192}
!4192 = !DILocation(line: 170, column: 2, scope: !4177)
!4193 = !DILocation(line: 0, scope: !4177)
!4194 = !DILocation(line: 171, column: 8, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4054, file: !134, line: 171, column: 6)
!4196 = !DILocation(line: 171, column: 6, scope: !4054)
!4197 = !DILocation(line: 0, scope: !4099)
!4198 = !DILocation(line: 179, column: 23, scope: !4102)
!4199 = !DILocation(line: 179, column: 20, scope: !4102)
!4200 = !DILocation(line: 179, column: 2, scope: !4099)
!4201 = !DILocation(line: 180, column: 32, scope: !4101)
!4202 = !DILocation(line: 0, scope: !4101)
!4203 = !DILocation(line: 183, column: 10, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4101, file: !134, line: 183, column: 7)
!4205 = !DILocation(line: 183, column: 7, scope: !4101)
!4206 = !DILocation(line: 188, column: 8, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !134, line: 188, column: 8)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !134, line: 187, column: 67)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !134, line: 187, column: 3)
!4210 = distinct !DILexicalBlock(scope: !4101, file: !134, line: 187, column: 3)
!4211 = !DILocation(line: 188, column: 8, scope: !4208)
!4212 = !DILocation(line: 191, column: 4, scope: !4208)
!4213 = !DILocation(line: 187, column: 44, scope: !4209)
!4214 = !DILocation(line: 187, column: 23, scope: !4209)
!4215 = !DILocation(line: 187, column: 3, scope: !4210)
!4216 = distinct !{!4216, !4215, !4217}
!4217 = !DILocation(line: 192, column: 3, scope: !4210)
!4218 = !DILocation(line: 179, column: 40, scope: !4102)
!4219 = !DILocation(line: 179, column: 53, scope: !4102)
!4220 = distinct !{!4220, !4200, !4221}
!4221 = !DILocation(line: 193, column: 2, scope: !4099)
!4222 = !DILocation(line: 198, column: 37, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !134, line: 198, column: 2)
!4224 = distinct !DILexicalBlock(scope: !4054, file: !134, line: 198, column: 2)
!4225 = !DILocation(line: 198, column: 11, scope: !4224)
!4226 = !DILocation(line: 198, column: 32, scope: !4223)
!4227 = !DILocation(line: 198, column: 2, scope: !4224)
!4228 = !DILocation(line: 199, column: 25, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4223, file: !134, line: 198, column: 71)
!4230 = !DILocation(line: 199, column: 24, scope: !4229)
!4231 = !DILocation(line: 199, column: 3, scope: !4229)
!4232 = !DILocation(line: 198, column: 52, scope: !4223)
!4233 = distinct !{!4233, !4227, !4234}
!4234 = !DILocation(line: 200, column: 2, scope: !4224)
!4235 = !DILocation(line: 202, column: 1, scope: !4054)
!4236 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !4237, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4239)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!2210, !4061, !2210}
!4239 = !{!4240, !4241}
!4240 = !DILocalVariable(name: "h", arg: 1, scope: !4236, file: !142, line: 204, type: !4061)
!4241 = !DILocalVariable(name: "c", arg: 2, scope: !4236, file: !142, line: 204, type: !2210)
!4242 = !DILocation(line: 0, scope: !4236)
!4243 = !DILocation(line: 206, column: 13, scope: !4236)
!4244 = !DILocation(line: 206, column: 11, scope: !4236)
!4245 = !DILocation(line: 206, column: 2, scope: !4236)
!4246 = distinct !DISubprogram(name: "valid_chunk", scope: !134, file: !134, line: 31, type: !4247, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4249)
!4247 = !DISubroutineType(types: !4248)
!4248 = !{!211, !4061, !2210}
!4249 = !{!4250, !4251}
!4250 = !DILocalVariable(name: "h", arg: 1, scope: !4246, file: !134, line: 31, type: !4061)
!4251 = !DILocalVariable(name: "c", arg: 2, scope: !4246, file: !134, line: 31, type: !2210)
!4252 = !DILocation(line: 0, scope: !4246)
!4253 = !DILocation(line: 33, column: 2, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !134, line: 33, column: 2)
!4255 = distinct !DILexicalBlock(scope: !4246, file: !134, line: 33, column: 2)
!4256 = !DILocation(line: 33, column: 2, scope: !4255)
!4257 = !DILocation(line: 34, column: 2, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !134, line: 34, column: 2)
!4259 = distinct !DILexicalBlock(scope: !4246, file: !134, line: 34, column: 2)
!4260 = !DILocation(line: 34, column: 2, scope: !4259)
!4261 = !DILocation(line: 35, column: 2, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4263, file: !134, line: 35, column: 2)
!4263 = distinct !DILexicalBlock(scope: !4246, file: !134, line: 35, column: 2)
!4264 = !DILocation(line: 35, column: 2, scope: !4263)
!4265 = !DILocation(line: 36, column: 2, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !134, line: 36, column: 2)
!4267 = distinct !DILexicalBlock(scope: !4246, file: !134, line: 36, column: 2)
!4268 = !DILocation(line: 36, column: 2, scope: !4267)
!4269 = !DILocation(line: 37, column: 2, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !134, line: 37, column: 2)
!4271 = distinct !DILexicalBlock(scope: !4246, file: !134, line: 37, column: 2)
!4272 = !DILocation(line: 37, column: 2, scope: !4271)
!4273 = !DILocation(line: 38, column: 6, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4246, file: !134, line: 38, column: 6)
!4275 = !DILocation(line: 38, column: 6, scope: !4246)
!4276 = !DILocation(line: 41, column: 3, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4278, file: !134, line: 41, column: 3)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !134, line: 41, column: 3)
!4279 = distinct !DILexicalBlock(scope: !4274, file: !134, line: 40, column: 9)
!4280 = !DILocation(line: 41, column: 3, scope: !4278)
!4281 = !DILocation(line: 42, column: 3, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4283, file: !134, line: 42, column: 3)
!4283 = distinct !DILexicalBlock(scope: !4279, file: !134, line: 42, column: 3)
!4284 = !DILocation(line: 42, column: 3, scope: !4283)
!4285 = !DILocation(line: 44, column: 4, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !134, line: 44, column: 4)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !134, line: 44, column: 4)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !134, line: 43, column: 32)
!4289 = distinct !DILexicalBlock(scope: !4279, file: !134, line: 43, column: 7)
!4290 = !DILocation(line: 44, column: 4, scope: !4287)
!4291 = !DILocation(line: 45, column: 4, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4293, file: !134, line: 45, column: 4)
!4293 = distinct !DILexicalBlock(scope: !4288, file: !134, line: 45, column: 4)
!4294 = !DILocation(line: 45, column: 4, scope: !4293)
!4295 = !DILocation(line: 48, column: 2, scope: !4246)
!4296 = !DILocation(line: 49, column: 1, scope: !4246)
!4297 = distinct !DISubprogram(name: "get_alloc_info", scope: !134, file: !134, line: 71, type: !4298, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4300)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{null, !4061, !2258, !2258}
!4300 = !{!4301, !4302, !4303, !4304}
!4301 = !DILocalVariable(name: "h", arg: 1, scope: !4297, file: !134, line: 71, type: !4061)
!4302 = !DILocalVariable(name: "alloc_bytes", arg: 2, scope: !4297, file: !134, line: 71, type: !2258)
!4303 = !DILocalVariable(name: "free_bytes", arg: 3, scope: !4297, file: !134, line: 72, type: !2258)
!4304 = !DILocalVariable(name: "c", scope: !4297, file: !134, line: 74, type: !2210)
!4305 = !DILocation(line: 0, scope: !4297)
!4306 = !DILocation(line: 76, column: 15, scope: !4297)
!4307 = !DILocation(line: 77, column: 14, scope: !4297)
!4308 = !DILocation(line: 79, column: 11, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4297, file: !134, line: 79, column: 2)
!4310 = !DILocation(line: 79, column: 37, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4309, file: !134, line: 79, column: 2)
!4312 = !DILocation(line: 79, column: 32, scope: !4311)
!4313 = !DILocation(line: 79, column: 2, scope: !4309)
!4314 = !DILocation(line: 80, column: 7, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !134, line: 80, column: 7)
!4316 = distinct !DILexicalBlock(scope: !4311, file: !134, line: 79, column: 71)
!4317 = !DILocation(line: 0, scope: !4315)
!4318 = !DILocation(line: 79, column: 52, scope: !4311)
!4319 = distinct !{!4319, !4313, !4320}
!4320 = !DILocation(line: 85, column: 2, scope: !4309)
!4321 = !DILocation(line: 86, column: 1, scope: !4297)
!4322 = distinct !DISubprogram(name: "sys_heap_runtime_stats_get", scope: !134, file: !134, line: 416, type: !4323, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4326)
!4323 = !DISubroutineType(types: !4324)
!4324 = !{!103, !4057, !4325}
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4084, size: 32)
!4326 = !{!4327, !4328}
!4327 = !DILocalVariable(name: "heap", arg: 1, scope: !4322, file: !134, line: 416, type: !4057)
!4328 = !DILocalVariable(name: "stats", arg: 2, scope: !4322, file: !134, line: 417, type: !4325)
!4329 = !DILocation(line: 0, scope: !4322)
!4330 = !DILocation(line: 419, column: 12, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4322, file: !134, line: 419, column: 6)
!4332 = !DILocation(line: 419, column: 21, scope: !4331)
!4333 = !DILocation(line: 423, column: 28, scope: !4322)
!4334 = !DILocation(line: 423, column: 34, scope: !4322)
!4335 = !DILocation(line: 423, column: 9, scope: !4322)
!4336 = !DILocation(line: 423, column: 20, scope: !4322)
!4337 = !DILocation(line: 424, column: 33, scope: !4322)
!4338 = !DILocation(line: 424, column: 39, scope: !4322)
!4339 = !DILocation(line: 424, column: 9, scope: !4322)
!4340 = !DILocation(line: 424, column: 25, scope: !4322)
!4341 = !DILocation(line: 425, column: 37, scope: !4322)
!4342 = !DILocation(line: 425, column: 43, scope: !4322)
!4343 = !DILocation(line: 425, column: 9, scope: !4322)
!4344 = !DILocation(line: 425, column: 29, scope: !4322)
!4345 = !DILocation(line: 427, column: 2, scope: !4322)
!4346 = !DILocation(line: 428, column: 1, scope: !4322)
!4347 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !4348, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4350)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{!103, !4061, !3333}
!4350 = !{!4351, !4352, !4353}
!4351 = !DILocalVariable(name: "h", arg: 1, scope: !4347, file: !142, line: 250, type: !4061)
!4352 = !DILocalVariable(name: "sz", arg: 2, scope: !4347, file: !142, line: 250, type: !3333)
!4353 = !DILocalVariable(name: "usable_sz", scope: !4347, file: !142, line: 252, type: !32)
!4354 = !DILocation(line: 0, scope: !4347)
!4355 = !DILocation(line: 253, column: 14, scope: !4347)
!4356 = !DILocation(line: 253, column: 12, scope: !4347)
!4357 = !DILocation(line: 253, column: 2, scope: !4347)
!4358 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !4359, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4361)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{null, !4061, !2210, !211}
!4361 = !{!4362, !4363, !4364, !4365, !4366}
!4362 = !DILocalVariable(name: "h", arg: 1, scope: !4358, file: !142, line: 147, type: !4061)
!4363 = !DILocalVariable(name: "c", arg: 2, scope: !4358, file: !142, line: 147, type: !2210)
!4364 = !DILocalVariable(name: "used", arg: 3, scope: !4358, file: !142, line: 147, type: !211)
!4365 = !DILocalVariable(name: "buf", scope: !4358, file: !142, line: 149, type: !153)
!4366 = !DILocalVariable(name: "cmem", scope: !4358, file: !142, line: 150, type: !102)
!4367 = !DILocation(line: 0, scope: !4358)
!4368 = !DILocation(line: 149, column: 22, scope: !4358)
!4369 = !DILocation(line: 0, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4371, file: !142, line: 159, column: 7)
!4371 = distinct !DILexicalBlock(scope: !4372, file: !142, line: 158, column: 9)
!4372 = distinct !DILexicalBlock(scope: !4358, file: !142, line: 152, column: 6)
!4373 = !DILocation(line: 159, column: 7, scope: !4371)
!4374 = !DILocation(line: 165, column: 1, scope: !4358)
!4375 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !4237, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4376)
!4376 = !{!4377, !4378}
!4377 = !DILocalVariable(name: "h", arg: 1, scope: !4375, file: !142, line: 182, type: !4061)
!4378 = !DILocalVariable(name: "c", arg: 2, scope: !4375, file: !142, line: 182, type: !2210)
!4379 = !DILocation(line: 0, scope: !4375)
!4380 = !DILocation(line: 184, column: 9, scope: !4375)
!4381 = !DILocation(line: 184, column: 2, scope: !4375)
!4382 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !4247, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4383)
!4383 = !{!4384, !4385}
!4384 = !DILocalVariable(name: "h", arg: 1, scope: !4382, file: !142, line: 137, type: !4061)
!4385 = !DILocalVariable(name: "c", arg: 2, scope: !4382, file: !142, line: 137, type: !2210)
!4386 = !DILocation(line: 0, scope: !4382)
!4387 = !DILocation(line: 139, column: 9, scope: !4382)
!4388 = !DILocation(line: 139, column: 42, scope: !4382)
!4389 = !DILocation(line: 139, column: 2, scope: !4382)
!4390 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !4237, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4391)
!4391 = !{!4392, !4393}
!4392 = !DILocalVariable(name: "h", arg: 1, scope: !4390, file: !142, line: 199, type: !4061)
!4393 = !DILocalVariable(name: "c", arg: 2, scope: !4390, file: !142, line: 199, type: !2210)
!4394 = !DILocation(line: 0, scope: !4390)
!4395 = !DILocation(line: 201, column: 13, scope: !4390)
!4396 = !DILocation(line: 201, column: 11, scope: !4390)
!4397 = !DILocation(line: 201, column: 2, scope: !4390)
!4398 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !4399, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4401)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{!2210, !4061, !2210, !141}
!4401 = !{!4402, !4403, !4404, !4405, !4406}
!4402 = !DILocalVariable(name: "h", arg: 1, scope: !4398, file: !142, line: 107, type: !4061)
!4403 = !DILocalVariable(name: "c", arg: 2, scope: !4398, file: !142, line: 107, type: !2210)
!4404 = !DILocalVariable(name: "f", arg: 3, scope: !4398, file: !142, line: 108, type: !141)
!4405 = !DILocalVariable(name: "buf", scope: !4398, file: !142, line: 110, type: !153)
!4406 = !DILocalVariable(name: "cmem", scope: !4398, file: !142, line: 111, type: !102)
!4407 = !DILocation(line: 0, scope: !4398)
!4408 = !DILocation(line: 110, column: 22, scope: !4398)
!4409 = !DILocation(line: 111, column: 15, scope: !4398)
!4410 = !DILocation(line: 116, column: 11, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4412, file: !142, line: 115, column: 9)
!4412 = distinct !DILexicalBlock(scope: !4398, file: !142, line: 113, column: 6)
!4413 = !DILocation(line: 116, column: 10, scope: !4411)
!4414 = !DILocation(line: 118, column: 1, scope: !4398)
!4415 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !4416, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4418)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!153, !4061}
!4418 = !{!4419}
!4419 = !DILocalVariable(name: "h", arg: 1, scope: !4415, file: !142, line: 101, type: !4061)
!4420 = !DILocation(line: 0, scope: !4415)
!4421 = !DILocation(line: 104, column: 9, scope: !4415)
!4422 = !DILocation(line: 104, column: 2, scope: !4415)
!4423 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !4424, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4426)
!4424 = !DISubroutineType(types: !4425)
!4425 = !{!3333, !4061, !2210}
!4426 = !{!4427, !4428}
!4427 = !DILocalVariable(name: "h", arg: 1, scope: !4423, file: !142, line: 142, type: !4061)
!4428 = !DILocalVariable(name: "c", arg: 2, scope: !4423, file: !142, line: 142, type: !2210)
!4429 = !DILocation(line: 0, scope: !4423)
!4430 = !DILocation(line: 144, column: 9, scope: !4423)
!4431 = !DILocation(line: 144, column: 42, scope: !4423)
!4432 = !DILocation(line: 144, column: 2, scope: !4423)
!4433 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !4434, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4436)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{!120, !4061, !3333}
!4436 = !{!4437, !4438}
!4437 = !DILocalVariable(name: "h", arg: 1, scope: !4433, file: !142, line: 245, type: !4061)
!4438 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4433, file: !142, line: 245, type: !3333)
!4439 = !DILocation(line: 0, scope: !4433)
!4440 = !DILocation(line: 247, column: 20, scope: !4433)
!4441 = !DILocation(line: 247, column: 33, scope: !4433)
!4442 = !DILocation(line: 247, column: 2, scope: !4433)
!4443 = distinct !DISubprogram(name: "in_bounds", scope: !134, file: !134, line: 23, type: !4247, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4444)
!4444 = !{!4445, !4446}
!4445 = !DILocalVariable(name: "h", arg: 1, scope: !4443, file: !134, line: 23, type: !4061)
!4446 = !DILocalVariable(name: "c", arg: 2, scope: !4443, file: !134, line: 23, type: !2210)
!4447 = !DILocation(line: 0, scope: !4443)
!4448 = !DILocation(line: 25, column: 2, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !134, line: 25, column: 2)
!4450 = distinct !DILexicalBlock(scope: !4443, file: !134, line: 25, column: 2)
!4451 = !DILocation(line: 25, column: 2, scope: !4450)
!4452 = !DILocation(line: 26, column: 2, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !134, line: 26, column: 2)
!4454 = distinct !DILexicalBlock(scope: !4443, file: !134, line: 26, column: 2)
!4455 = !DILocation(line: 26, column: 2, scope: !4454)
!4456 = !DILocation(line: 27, column: 2, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !134, line: 27, column: 2)
!4458 = distinct !DILexicalBlock(scope: !4443, file: !134, line: 27, column: 2)
!4459 = !DILocation(line: 29, column: 1, scope: !4443)
!4460 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !4237, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4461)
!4461 = !{!4462, !4463}
!4462 = !DILocalVariable(name: "h", arg: 1, scope: !4460, file: !142, line: 177, type: !4061)
!4463 = !DILocalVariable(name: "c", arg: 2, scope: !4460, file: !142, line: 177, type: !2210)
!4464 = !DILocation(line: 0, scope: !4460)
!4465 = !DILocation(line: 179, column: 9, scope: !4460)
!4466 = !DILocation(line: 179, column: 2, scope: !4460)
!4467 = distinct !DISubprogram(name: "sys_heap_stress", scope: !134, file: !134, line: 300, type: !4468, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4483)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{null, !4470, !4473, !102, !120, !137, !102, !120, !103, !4476}
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 32)
!4471 = !DISubroutineType(types: !4472)
!4472 = !{!102, !102, !120}
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 32)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{null, !102, !102}
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 32)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_result", file: !113, line: 62, size: 192, elements: !4478)
!4478 = !{!4479, !4480, !4481, !4482}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocs", scope: !4477, file: !113, line: 63, baseType: !137, size: 32)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "successful_allocs", scope: !4477, file: !113, line: 64, baseType: !137, size: 32, offset: 32)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "total_frees", scope: !4477, file: !113, line: 65, baseType: !137, size: 32, offset: 64)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "accumulated_in_use_bytes", scope: !4477, file: !113, line: 66, baseType: !163, size: 64, offset: 128)
!4483 = !{!4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4510, !4512, !4517, !4518, !4520, !4521}
!4484 = !DILocalVariable(name: "alloc_fn", arg: 1, scope: !4467, file: !134, line: 300, type: !4470)
!4485 = !DILocalVariable(name: "free_fn", arg: 2, scope: !4467, file: !134, line: 301, type: !4473)
!4486 = !DILocalVariable(name: "arg", arg: 3, scope: !4467, file: !134, line: 302, type: !102)
!4487 = !DILocalVariable(name: "total_bytes", arg: 4, scope: !4467, file: !134, line: 302, type: !120)
!4488 = !DILocalVariable(name: "op_count", arg: 5, scope: !4467, file: !134, line: 303, type: !137)
!4489 = !DILocalVariable(name: "scratch_mem", arg: 6, scope: !4467, file: !134, line: 304, type: !102)
!4490 = !DILocalVariable(name: "scratch_bytes", arg: 7, scope: !4467, file: !134, line: 304, type: !120)
!4491 = !DILocalVariable(name: "target_percent", arg: 8, scope: !4467, file: !134, line: 305, type: !103)
!4492 = !DILocalVariable(name: "result", arg: 9, scope: !4467, file: !134, line: 306, type: !4476)
!4493 = !DILocalVariable(name: "sr", scope: !4467, file: !134, line: 308, type: !4494)
!4494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_rec", file: !134, line: 204, size: 288, elements: !4495)
!4495 = !{!4496, !4497, !4498, !4499, !4500, !4506, !4507, !4508, !4509}
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fn", scope: !4494, file: !134, line: 205, baseType: !4470, size: 32)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !4494, file: !134, line: 206, baseType: !4473, size: 32, offset: 32)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4494, file: !134, line: 207, baseType: !102, size: 32, offset: 64)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !4494, file: !134, line: 208, baseType: !120, size: 32, offset: 96)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4494, file: !134, line: 209, baseType: !4501, size: 32, offset: 128)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 32)
!4502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_block", file: !134, line: 216, size: 64, elements: !4503)
!4503 = !{!4504, !4505}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4502, file: !134, line: 217, baseType: !102, size: 32)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !4502, file: !134, line: 218, baseType: !120, size: 32, offset: 32)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "nblocks", scope: !4494, file: !134, line: 210, baseType: !120, size: 32, offset: 160)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_alloced", scope: !4494, file: !134, line: 211, baseType: !120, size: 32, offset: 192)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_alloced", scope: !4494, file: !134, line: 212, baseType: !120, size: 32, offset: 224)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "target_percent", scope: !4494, file: !134, line: 213, baseType: !137, size: 32, offset: 256)
!4510 = !DILocalVariable(name: "i", scope: !4511, file: !134, line: 320, type: !137)
!4511 = distinct !DILexicalBlock(scope: !4467, file: !134, line: 320, column: 2)
!4512 = !DILocalVariable(name: "sz", scope: !4513, file: !134, line: 322, type: !120)
!4513 = distinct !DILexicalBlock(scope: !4514, file: !134, line: 321, column: 31)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !134, line: 321, column: 7)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !134, line: 320, column: 42)
!4516 = distinct !DILexicalBlock(scope: !4511, file: !134, line: 320, column: 2)
!4517 = !DILocalVariable(name: "p", scope: !4513, file: !134, line: 323, type: !102)
!4518 = !DILocalVariable(name: "b", scope: !4519, file: !134, line: 334, type: !103)
!4519 = distinct !DILexicalBlock(scope: !4514, file: !134, line: 333, column: 10)
!4520 = !DILocalVariable(name: "p", scope: !4519, file: !134, line: 335, type: !102)
!4521 = !DILocalVariable(name: "sz", scope: !4519, file: !134, line: 336, type: !120)
!4522 = !DILocation(line: 0, scope: !4467)
!4523 = !DILocation(line: 308, column: 2, scope: !4467)
!4524 = !DILocation(line: 308, column: 27, scope: !4467)
!4525 = !DILocation(line: 308, column: 32, scope: !4467)
!4526 = !DILocation(line: 314, column: 34, scope: !4467)
!4527 = !DILocation(line: 318, column: 12, scope: !4467)
!4528 = !DILocation(line: 0, scope: !4511)
!4529 = !DILocation(line: 320, column: 25, scope: !4516)
!4530 = !DILocation(line: 320, column: 2, scope: !4511)
!4531 = !DILocation(line: 346, column: 1, scope: !4467)
!4532 = !DILocation(line: 321, column: 7, scope: !4514)
!4533 = !DILocation(line: 321, column: 7, scope: !4515)
!4534 = !DILocation(line: 322, column: 16, scope: !4513)
!4535 = !DILocation(line: 0, scope: !4513)
!4536 = !DILocation(line: 323, column: 14, scope: !4513)
!4537 = !DILocation(line: 325, column: 24, scope: !4513)
!4538 = !DILocation(line: 326, column: 10, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4513, file: !134, line: 326, column: 8)
!4540 = !DILocation(line: 326, column: 8, scope: !4513)
!4541 = !DILocation(line: 327, column: 30, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4539, file: !134, line: 326, column: 19)
!4543 = !DILocation(line: 328, column: 34, scope: !4542)
!4544 = !DILocation(line: 328, column: 38, scope: !4542)
!4545 = !DILocation(line: 329, column: 34, scope: !4542)
!4546 = !DILocation(line: 329, column: 37, scope: !4542)
!4547 = !DILocation(line: 330, column: 22, scope: !4542)
!4548 = !DILocation(line: 331, column: 22, scope: !4542)
!4549 = !DILocation(line: 332, column: 4, scope: !4542)
!4550 = !DILocation(line: 334, column: 12, scope: !4519)
!4551 = !DILocation(line: 0, scope: !4519)
!4552 = !DILocation(line: 335, column: 27, scope: !4519)
!4553 = !DILocation(line: 336, column: 29, scope: !4519)
!4554 = !DILocation(line: 338, column: 23, scope: !4519)
!4555 = !DILocation(line: 339, column: 4, scope: !4519)
!4556 = !DILocation(line: 339, column: 47, scope: !4519)
!4557 = !DILocation(line: 339, column: 19, scope: !4519)
!4558 = !DILocation(line: 340, column: 21, scope: !4519)
!4559 = !DILocation(line: 341, column: 21, scope: !4519)
!4560 = !DILocation(line: 342, column: 4, scope: !4519)
!4561 = !DILocation(line: 344, column: 42, scope: !4515)
!4562 = !DILocation(line: 344, column: 39, scope: !4515)
!4563 = !DILocation(line: 344, column: 36, scope: !4515)
!4564 = !DILocation(line: 320, column: 38, scope: !4516)
!4565 = distinct !{!4565, !4530, !4566}
!4566 = !DILocation(line: 345, column: 2, scope: !4511)
!4567 = distinct !DISubprogram(name: "rand_alloc_choice", scope: !134, file: !134, line: 234, type: !4568, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4571)
!4568 = !DISubroutineType(types: !4569)
!4569 = !{!211, !4570}
!4570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 32)
!4571 = !{!4572, !4573, !4577, !4578}
!4572 = !DILocalVariable(name: "sr", arg: 1, scope: !4567, file: !134, line: 234, type: !4570)
!4573 = !DILocalVariable(name: "full_pct", scope: !4574, file: !134, line: 259, type: !137)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !134, line: 241, column: 9)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !134, line: 239, column: 13)
!4576 = distinct !DILexicalBlock(scope: !4567, file: !134, line: 237, column: 6)
!4577 = !DILocalVariable(name: "target", scope: !4574, file: !134, line: 260, type: !137)
!4578 = !DILocalVariable(name: "free_chance", scope: !4574, file: !134, line: 261, type: !137)
!4579 = !DILocation(line: 0, scope: !4567)
!4580 = !DILocation(line: 237, column: 10, scope: !4576)
!4581 = !DILocation(line: 237, column: 25, scope: !4576)
!4582 = !DILocation(line: 237, column: 6, scope: !4567)
!4583 = !DILocation(line: 239, column: 39, scope: !4575)
!4584 = !DILocation(line: 239, column: 32, scope: !4575)
!4585 = !DILocation(line: 239, column: 13, scope: !4576)
!4586 = !DILocation(line: 259, column: 34, scope: !4574)
!4587 = !DILocation(line: 259, column: 28, scope: !4574)
!4588 = !DILocation(line: 259, column: 55, scope: !4574)
!4589 = !DILocation(line: 259, column: 49, scope: !4574)
!4590 = !DILocation(line: 0, scope: !4574)
!4591 = !DILocation(line: 260, column: 25, scope: !4574)
!4592 = !DILocation(line: 263, column: 16, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4574, file: !134, line: 263, column: 7)
!4594 = !DILocation(line: 263, column: 7, scope: !4574)
!4595 = !DILocation(line: 264, column: 42, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4593, file: !134, line: 263, column: 38)
!4597 = !DILocation(line: 264, column: 27, scope: !4596)
!4598 = !DILocation(line: 265, column: 3, scope: !4596)
!4599 = !DILocation(line: 267, column: 10, scope: !4574)
!4600 = !DILocation(line: 267, column: 19, scope: !4574)
!4601 = !DILocation(line: 0, scope: !4576)
!4602 = !DILocation(line: 269, column: 1, scope: !4567)
!4603 = distinct !DISubprogram(name: "rand_alloc_size", scope: !134, file: !134, line: 274, type: !4604, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4606)
!4604 = !DISubroutineType(types: !4605)
!4605 = !{!120, !4570}
!4606 = !{!4607, !4608}
!4607 = !DILocalVariable(name: "sr", arg: 1, scope: !4603, file: !134, line: 274, type: !4570)
!4608 = !DILocalVariable(name: "scale", scope: !4603, file: !134, line: 281, type: !103)
!4609 = !DILocation(line: 0, scope: !4603)
!4610 = !DILocation(line: 281, column: 32, scope: !4603)
!4611 = !DILocation(line: 281, column: 18, scope: !4603)
!4612 = !DILocation(line: 283, column: 9, scope: !4603)
!4613 = !DILocation(line: 283, column: 20, scope: !4603)
!4614 = !DILocation(line: 283, column: 18, scope: !4603)
!4615 = !DILocation(line: 283, column: 2, scope: !4603)
!4616 = distinct !DISubprogram(name: "rand_free_choice", scope: !134, file: !134, line: 287, type: !4604, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4617)
!4617 = !{!4618}
!4618 = !DILocalVariable(name: "sr", arg: 1, scope: !4616, file: !134, line: 287, type: !4570)
!4619 = !DILocation(line: 0, scope: !4616)
!4620 = !DILocation(line: 289, column: 9, scope: !4616)
!4621 = !DILocation(line: 289, column: 24, scope: !4616)
!4622 = !DILocation(line: 289, column: 18, scope: !4616)
!4623 = !DILocation(line: 289, column: 2, scope: !4616)
!4624 = !DILocation(line: 229, column: 10, scope: !133)
!4625 = !DILocation(line: 229, column: 16, scope: !133)
!4626 = !DILocation(line: 229, column: 40, scope: !133)
!4627 = !DILocation(line: 229, column: 8, scope: !133)
!4628 = !DILocation(line: 231, column: 26, scope: !133)
!4629 = !DILocation(line: 231, column: 9, scope: !133)
!4630 = !DILocation(line: 231, column: 2, scope: !133)
!4631 = distinct !DISubprogram(name: "heap_print_info", scope: !134, file: !134, line: 351, type: !4632, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4634)
!4632 = !DISubroutineType(types: !4633)
!4633 = !{null, !4061, !211}
!4634 = !{!4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4647, !4648, !4649, !4652}
!4635 = !DILocalVariable(name: "h", arg: 1, scope: !4631, file: !134, line: 351, type: !4061)
!4636 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4631, file: !134, line: 351, type: !211)
!4637 = !DILocalVariable(name: "i", scope: !4631, file: !134, line: 353, type: !103)
!4638 = !DILocalVariable(name: "nb_buckets", scope: !4631, file: !134, line: 353, type: !103)
!4639 = !DILocalVariable(name: "free_bytes", scope: !4631, file: !134, line: 354, type: !120)
!4640 = !DILocalVariable(name: "allocated_bytes", scope: !4631, file: !134, line: 354, type: !120)
!4641 = !DILocalVariable(name: "total", scope: !4631, file: !134, line: 354, type: !120)
!4642 = !DILocalVariable(name: "overhead", scope: !4631, file: !134, line: 354, type: !120)
!4643 = !DILocalVariable(name: "first", scope: !4644, file: !134, line: 363, type: !2210)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !134, line: 362, column: 35)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !134, line: 362, column: 2)
!4646 = distinct !DILexicalBlock(scope: !4631, file: !134, line: 362, column: 2)
!4647 = !DILocalVariable(name: "largest", scope: !4644, file: !134, line: 364, type: !3333)
!4648 = !DILocalVariable(name: "count", scope: !4644, file: !134, line: 365, type: !103)
!4649 = !DILocalVariable(name: "curr", scope: !4650, file: !134, line: 368, type: !2210)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !134, line: 367, column: 14)
!4651 = distinct !DILexicalBlock(scope: !4644, file: !134, line: 367, column: 7)
!4652 = !DILocalVariable(name: "c", scope: !4653, file: !134, line: 384, type: !2210)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !134, line: 384, column: 3)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !134, line: 382, column: 19)
!4655 = distinct !DILexicalBlock(scope: !4631, file: !134, line: 382, column: 6)
!4656 = !DILocation(line: 0, scope: !4631)
!4657 = !DILocation(line: 353, column: 39, scope: !4631)
!4658 = !DILocation(line: 353, column: 22, scope: !4631)
!4659 = !DILocation(line: 353, column: 50, scope: !4631)
!4660 = !DILocation(line: 354, column: 2, scope: !4631)
!4661 = !DILocation(line: 357, column: 9, scope: !4631)
!4662 = !DILocation(line: 356, column: 2, scope: !4631)
!4663 = !DILocation(line: 359, column: 2, scope: !4631)
!4664 = !DILocation(line: 362, column: 16, scope: !4645)
!4665 = !DILocation(line: 362, column: 2, scope: !4646)
!4666 = !DILocation(line: 363, column: 35, scope: !4644)
!4667 = !DILocation(line: 0, scope: !4644)
!4668 = !DILocation(line: 367, column: 7, scope: !4651)
!4669 = !DILocation(line: 367, column: 7, scope: !4644)
!4670 = !DILocation(line: 0, scope: !4650)
!4671 = !DILocation(line: 370, column: 10, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4650, file: !134, line: 369, column: 7)
!4673 = !DILocation(line: 371, column: 15, scope: !4672)
!4674 = !DILocation(line: 372, column: 12, scope: !4672)
!4675 = !DILocation(line: 373, column: 18, scope: !4650)
!4676 = !DILocation(line: 373, column: 4, scope: !4672)
!4677 = distinct !{!4677, !4678, !4679}
!4678 = !DILocation(line: 369, column: 4, scope: !4650)
!4679 = !DILocation(line: 373, column: 26, scope: !4650)
!4680 = !DILocation(line: 377, column: 23, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !134, line: 375, column: 14)
!4682 = distinct !DILexicalBlock(scope: !4644, file: !134, line: 375, column: 7)
!4683 = !DILocation(line: 378, column: 20, scope: !4681)
!4684 = !DILocation(line: 376, column: 4, scope: !4681)
!4685 = !DILocation(line: 379, column: 3, scope: !4681)
!4686 = !DILocation(line: 362, column: 31, scope: !4645)
!4687 = distinct !{!4687, !4665, !4688}
!4688 = !DILocation(line: 380, column: 2, scope: !4646)
!4689 = !DILocation(line: 382, column: 6, scope: !4631)
!4690 = !DILocation(line: 383, column: 3, scope: !4654)
!4691 = !DILocation(line: 0, scope: !4653)
!4692 = !DILocation(line: 384, column: 8, scope: !4653)
!4693 = !DILocation(line: 387, column: 11, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !134, line: 384, column: 50)
!4695 = distinct !DILexicalBlock(scope: !4653, file: !134, line: 384, column: 3)
!4696 = !DILocation(line: 390, column: 11, scope: !4694)
!4697 = !DILocation(line: 391, column: 11, scope: !4694)
!4698 = !DILocation(line: 392, column: 11, scope: !4694)
!4699 = !DILocation(line: 385, column: 4, scope: !4694)
!4700 = !DILocation(line: 393, column: 16, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4694, file: !134, line: 393, column: 8)
!4702 = !DILocation(line: 393, column: 10, scope: !4701)
!4703 = !DILocation(line: 393, column: 8, scope: !4694)
!4704 = !DILocation(line: 384, column: 31, scope: !4695)
!4705 = !DILocation(line: 384, column: 3, scope: !4695)
!4706 = distinct !{!4706, !4707, !4708}
!4707 = !DILocation(line: 384, column: 3, scope: !4653)
!4708 = !DILocation(line: 396, column: 3, scope: !4653)
!4709 = !DILocation(line: 399, column: 2, scope: !4631)
!4710 = !DILocation(line: 401, column: 13, scope: !4631)
!4711 = !DILocation(line: 401, column: 23, scope: !4631)
!4712 = !DILocation(line: 401, column: 36, scope: !4631)
!4713 = !DILocation(line: 402, column: 21, scope: !4631)
!4714 = !DILocation(line: 402, column: 34, scope: !4631)
!4715 = !DILocation(line: 402, column: 32, scope: !4631)
!4716 = !DILocation(line: 405, column: 15, scope: !4631)
!4717 = !DILocation(line: 405, column: 33, scope: !4631)
!4718 = !DILocation(line: 405, column: 26, scope: !4631)
!4719 = !DILocation(line: 405, column: 37, scope: !4631)
!4720 = !DILocation(line: 405, column: 45, scope: !4631)
!4721 = !DILocation(line: 403, column: 2, scope: !4631)
!4722 = !DILocation(line: 407, column: 1, scope: !4631)
!4723 = distinct !DISubprogram(name: "sys_heap_print_info", scope: !134, file: !134, line: 409, type: !4724, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4726)
!4724 = !DISubroutineType(types: !4725)
!4725 = !{null, !4057, !211}
!4726 = !{!4727, !4728}
!4727 = !DILocalVariable(name: "heap", arg: 1, scope: !4723, file: !134, line: 409, type: !4057)
!4728 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4723, file: !134, line: 409, type: !211)
!4729 = !DILocation(line: 0, scope: !4723)
!4730 = !DILocation(line: 411, column: 24, scope: !4723)
!4731 = !DILocation(line: 411, column: 2, scope: !4723)
!4732 = !DILocation(line: 412, column: 1, scope: !4723)
!4733 = distinct !DISubprogram(name: "sys_heap_runtime_stats_reset_max", scope: !134, file: !134, line: 430, type: !4734, scopeLine: 431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4736)
!4734 = !DISubroutineType(types: !4735)
!4735 = !{!103, !4057}
!4736 = !{!4737}
!4737 = !DILocalVariable(name: "heap", arg: 1, scope: !4733, file: !134, line: 430, type: !4057)
!4738 = !DILocation(line: 0, scope: !4733)
!4739 = !DILocation(line: 432, column: 11, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4733, file: !134, line: 432, column: 6)
!4741 = !DILocation(line: 432, column: 6, scope: !4733)
!4742 = !DILocation(line: 436, column: 42, scope: !4733)
!4743 = !DILocation(line: 436, column: 48, scope: !4733)
!4744 = !DILocation(line: 436, column: 14, scope: !4733)
!4745 = !DILocation(line: 436, column: 34, scope: !4733)
!4746 = !DILocation(line: 438, column: 2, scope: !4733)
!4747 = !DILocation(line: 439, column: 1, scope: !4733)
!4748 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2227, file: !2227, line: 1338, type: !4749, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !4757)
!4749 = !DISubroutineType(types: !4750)
!4750 = !{!103, !3000, !102, !199, !4751, !137}
!4751 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2966, line: 99, baseType: !4752)
!4752 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2966, line: 40, baseType: !4753)
!4753 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2227, baseType: !4754)
!4754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4755)
!4755 = !{!4756}
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4754, file: !2227, baseType: !102, size: 32)
!4757 = !{!4758, !4759, !4760, !4761, !4762, !4763, !4767, !4768, !4769, !4771, !4776, !4821, !4824, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4836, !4837, !4838, !4842, !4845, !4847, !4850, !4851, !4852, !4857, !4863, !4866, !4870, !4876, !4880, !4883, !4885, !4888}
!4758 = !DILocalVariable(name: "out", arg: 1, scope: !4748, file: !2227, line: 1338, type: !3000)
!4759 = !DILocalVariable(name: "ctx", arg: 2, scope: !4748, file: !2227, line: 1338, type: !102)
!4760 = !DILocalVariable(name: "fp", arg: 3, scope: !4748, file: !2227, line: 1338, type: !199)
!4761 = !DILocalVariable(name: "ap", arg: 4, scope: !4748, file: !2227, line: 1339, type: !4751)
!4762 = !DILocalVariable(name: "flags", arg: 5, scope: !4748, file: !2227, line: 1339, type: !137)
!4763 = !DILocalVariable(name: "buf", scope: !4748, file: !2227, line: 1341, type: !4764)
!4764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 176, elements: !4765)
!4765 = !{!4766}
!4766 = !DISubrange(count: 22)
!4767 = !DILocalVariable(name: "count", scope: !4748, file: !2227, line: 1342, type: !120)
!4768 = !DILocalVariable(name: "sint", scope: !4748, file: !2227, line: 1343, type: !2246)
!4769 = !DILocalVariable(name: "tagged_ap", scope: !4748, file: !2227, line: 1345, type: !4770)
!4770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!4771 = !DILocalVariable(name: "rc", scope: !4772, file: !2227, line: 1377, type: !103)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !2227, line: 1377, column: 4)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !2227, line: 1376, column: 19)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1376, column: 7)
!4775 = distinct !DILexicalBlock(scope: !4748, file: !2227, line: 1375, column: 19)
!4776 = !DILocalVariable(name: "state", scope: !4775, file: !2227, line: 1395, type: !4777)
!4777 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4748, file: !2227, line: 1392, size: 192, elements: !4778)
!4778 = !{!4779, !4789}
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4777, file: !2227, line: 1393, baseType: !4780, size: 64)
!4780 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2227, line: 166, size: 64, elements: !4781)
!4781 = !{!4782, !4783, !4784, !4786, !4788}
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4780, file: !2227, line: 168, baseType: !2246, size: 64)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4780, file: !2227, line: 171, baseType: !2249, size: 64)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4780, file: !2227, line: 174, baseType: !4785, size: 64)
!4785 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4780, file: !2227, line: 177, baseType: !4787, size: 64)
!4787 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4780, file: !2227, line: 180, baseType: !102, size: 32)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4777, file: !2227, line: 1394, baseType: !4790, size: 96, offset: 64)
!4790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2227, line: 189, size: 96, elements: !4791)
!4791 = !{!4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4810, !4811, !4816}
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4790, file: !2227, line: 191, baseType: !211, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4790, file: !2227, line: 194, baseType: !211, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4790, file: !2227, line: 197, baseType: !211, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4790, file: !2227, line: 200, baseType: !211, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4790, file: !2227, line: 203, baseType: !211, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4790, file: !2227, line: 206, baseType: !211, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4790, file: !2227, line: 209, baseType: !211, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4790, file: !2227, line: 212, baseType: !211, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4790, file: !2227, line: 219, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4790, file: !2227, line: 222, baseType: !211, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4790, file: !2227, line: 229, baseType: !211, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4790, file: !2227, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4790, file: !2227, line: 238, baseType: !211, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4790, file: !2227, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4790, file: !2227, line: 244, baseType: !211, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4790, file: !2227, line: 247, baseType: !211, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4790, file: !2227, line: 252, baseType: !211, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4790, file: !2227, line: 257, baseType: !211, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4790, file: !2227, line: 260, baseType: !209, size: 8, offset: 24)
!4811 = !DIDerivedType(tag: DW_TAG_member, scope: !4790, file: !2227, line: 262, baseType: !4812, size: 32, offset: 32)
!4812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4790, file: !2227, line: 262, size: 32, elements: !4813)
!4813 = !{!4814, !4815}
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4812, file: !2227, line: 267, baseType: !103, size: 32)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4812, file: !2227, line: 289, baseType: !103, size: 32)
!4816 = !DIDerivedType(tag: DW_TAG_member, scope: !4790, file: !2227, line: 292, baseType: !4817, size: 32, offset: 64)
!4817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4790, file: !2227, line: 292, size: 32, elements: !4818)
!4818 = !{!4819, !4820}
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4817, file: !2227, line: 297, baseType: !103, size: 32)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4817, file: !2227, line: 306, baseType: !103, size: 32)
!4821 = !DILocalVariable(name: "conv", scope: !4775, file: !2227, line: 1400, type: !4822)
!4822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4823)
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 32)
!4824 = !DILocalVariable(name: "value", scope: !4775, file: !2227, line: 1401, type: !4825)
!4825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4826)
!4826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4780, size: 32)
!4827 = !DILocalVariable(name: "sp", scope: !4775, file: !2227, line: 1402, type: !199)
!4828 = !DILocalVariable(name: "width", scope: !4775, file: !2227, line: 1403, type: !103)
!4829 = !DILocalVariable(name: "precision", scope: !4775, file: !2227, line: 1404, type: !103)
!4830 = !DILocalVariable(name: "bps", scope: !4775, file: !2227, line: 1405, type: !199)
!4831 = !DILocalVariable(name: "bpe", scope: !4775, file: !2227, line: 1406, type: !199)
!4832 = !DILocalVariable(name: "sign", scope: !4775, file: !2227, line: 1407, type: !109)
!4833 = !DILocalVariable(name: "arg", scope: !4834, file: !2227, line: 1432, type: !103)
!4834 = distinct !DILexicalBlock(scope: !4835, file: !2227, line: 1431, column: 24)
!4835 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1431, column: 7)
!4836 = !DILocalVariable(name: "specifier_cat", scope: !4775, file: !2227, line: 1468, type: !2226)
!4837 = !DILocalVariable(name: "length_mod", scope: !4775, file: !2227, line: 1470, type: !2234)
!4838 = !DILocalVariable(name: "rc", scope: !4839, file: !2227, line: 1575, type: !103)
!4839 = distinct !DILexicalBlock(scope: !4840, file: !2227, line: 1575, column: 4)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !2227, line: 1574, column: 43)
!4841 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1574, column: 7)
!4842 = !DILocalVariable(name: "rc", scope: !4843, file: !2227, line: 1584, type: !103)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !2227, line: 1584, column: 4)
!4844 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1582, column: 28)
!4845 = !DILocalVariable(name: "len", scope: !4846, file: !2227, line: 1589, type: !120)
!4846 = distinct !DILexicalBlock(scope: !4844, file: !2227, line: 1586, column: 13)
!4847 = !DILocalVariable(name: "len", scope: !4848, file: !2227, line: 1641, type: !120)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !2227, line: 1640, column: 24)
!4849 = distinct !DILexicalBlock(scope: !4844, file: !2227, line: 1640, column: 8)
!4850 = !DILocalVariable(name: "nj_len", scope: !4775, file: !2227, line: 1722, type: !120)
!4851 = !DILocalVariable(name: "pad_len", scope: !4775, file: !2227, line: 1723, type: !103)
!4852 = !DILocalVariable(name: "pad", scope: !4853, file: !2227, line: 1751, type: !109)
!4853 = distinct !DILexicalBlock(scope: !4854, file: !2227, line: 1750, column: 26)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !2227, line: 1750, column: 8)
!4855 = distinct !DILexicalBlock(scope: !4856, file: !2227, line: 1747, column: 18)
!4856 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1747, column: 7)
!4857 = !DILocalVariable(name: "rc", scope: !4858, file: !2227, line: 1758, type: !103)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !2227, line: 1758, column: 7)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !2227, line: 1757, column: 21)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !2227, line: 1757, column: 10)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !2227, line: 1756, column: 26)
!4862 = distinct !DILexicalBlock(scope: !4853, file: !2227, line: 1756, column: 9)
!4863 = !DILocalVariable(name: "rc", scope: !4864, file: !2227, line: 1765, type: !103)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !2227, line: 1765, column: 6)
!4865 = distinct !DILexicalBlock(scope: !4853, file: !2227, line: 1764, column: 25)
!4866 = !DILocalVariable(name: "rc", scope: !4867, file: !2227, line: 1774, type: !103)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !2227, line: 1774, column: 4)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !2227, line: 1773, column: 18)
!4869 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1773, column: 7)
!4870 = !DILocalVariable(name: "rc", scope: !4871, file: !2227, line: 1819, type: !103)
!4871 = distinct !DILexicalBlock(scope: !4872, file: !2227, line: 1819, column: 5)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !2227, line: 1818, column: 44)
!4873 = distinct !DILexicalBlock(scope: !4874, file: !2227, line: 1818, column: 8)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !2227, line: 1817, column: 10)
!4875 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1777, column: 7)
!4876 = !DILocalVariable(name: "rc", scope: !4877, file: !2227, line: 1823, type: !103)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !2227, line: 1823, column: 5)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !2227, line: 1822, column: 26)
!4879 = distinct !DILexicalBlock(scope: !4874, file: !2227, line: 1822, column: 8)
!4880 = !DILocalVariable(name: "rc", scope: !4881, file: !2227, line: 1828, type: !103)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !2227, line: 1828, column: 5)
!4882 = distinct !DILexicalBlock(scope: !4874, file: !2227, line: 1827, column: 26)
!4883 = !DILocalVariable(name: "rc", scope: !4884, file: !2227, line: 1831, type: !103)
!4884 = distinct !DILexicalBlock(scope: !4874, file: !2227, line: 1831, column: 4)
!4885 = !DILocalVariable(name: "rc", scope: !4886, file: !2227, line: 1836, type: !103)
!4886 = distinct !DILexicalBlock(scope: !4887, file: !2227, line: 1836, column: 4)
!4887 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1835, column: 21)
!4888 = !DILabel(scope: !4844, name: "prec_int_pad0", file: !2227, line: 1634)
!4889 = !DILocation(line: 0, scope: !4748)
!4890 = !DILocation(line: 1341, column: 2, scope: !4748)
!4891 = !DILocation(line: 1341, column: 7, scope: !4748)
!4892 = !DILocation(line: 1375, column: 2, scope: !4748)
!4893 = !DILocation(line: 1342, column: 9, scope: !4748)
!4894 = !DILocation(line: 1375, column: 9, scope: !4748)
!4895 = !DILocation(line: 1377, column: 4, scope: !4772)
!4896 = !DILocation(line: 0, scope: !4772)
!4897 = !DILocation(line: 1377, column: 4, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4772, file: !2227, line: 1377, column: 4)
!4899 = distinct !{!4899, !4892, !4900}
!4900 = !DILocation(line: 1839, column: 2, scope: !4748)
!4901 = !DILocation(line: 1392, column: 3, scope: !4775)
!4902 = !DILocation(line: 1395, column: 5, scope: !4775)
!4903 = !DILocation(line: 0, scope: !4775)
!4904 = !DILocation(line: 1409, column: 8, scope: !4775)
!4905 = !DILocation(line: 1414, column: 13, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1414, column: 7)
!4907 = !DILocation(line: 1414, column: 7, scope: !4775)
!4908 = !DILocation(line: 1415, column: 12, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !2227, line: 1414, column: 25)
!4910 = !DILocation(line: 1417, column: 14, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4909, file: !2227, line: 1417, column: 8)
!4912 = !DILocation(line: 1417, column: 8, scope: !4909)
!4913 = !DILocation(line: 1418, column: 21, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4911, file: !2227, line: 1417, column: 19)
!4915 = !DILocation(line: 1419, column: 13, scope: !4914)
!4916 = !DILocation(line: 1420, column: 4, scope: !4914)
!4917 = !DILocation(line: 1421, column: 20, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4906, file: !2227, line: 1421, column: 14)
!4919 = !DILocation(line: 1421, column: 14, scope: !4906)
!4920 = !DILocation(line: 1431, column: 13, scope: !4835)
!4921 = !DILocation(line: 1431, column: 7, scope: !4775)
!4922 = !DILocation(line: 1432, column: 14, scope: !4834)
!4923 = !DILocation(line: 0, scope: !4834)
!4924 = !DILocation(line: 1434, column: 12, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4834, file: !2227, line: 1434, column: 8)
!4926 = !DILocation(line: 1434, column: 8, scope: !4834)
!4927 = !DILocation(line: 1435, column: 24, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4925, file: !2227, line: 1434, column: 17)
!4929 = !DILocation(line: 1436, column: 4, scope: !4928)
!4930 = !DILocation(line: 1439, column: 20, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4835, file: !2227, line: 1439, column: 14)
!4932 = !DILocation(line: 1439, column: 14, scope: !4835)
!4933 = !DILocation(line: 1469, column: 37, scope: !4775)
!4934 = !DILocation(line: 1448, column: 20, scope: !4775)
!4935 = !DILocation(line: 1449, column: 22, scope: !4775)
!4936 = !DILocation(line: 1471, column: 34, scope: !4775)
!4937 = !DILocation(line: 1478, column: 7, scope: !4775)
!4938 = !DILocation(line: 1479, column: 4, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4940, file: !2227, line: 1478, column: 40)
!4940 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1478, column: 7)
!4941 = !DILocation(line: 1484, column: 19, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4939, file: !2227, line: 1479, column: 24)
!4943 = !DILocation(line: 1484, column: 17, scope: !4942)
!4944 = !DILocation(line: 1485, column: 5, scope: !4942)
!4945 = !DILocation(line: 1492, column: 20, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4947, file: !2227, line: 1491, column: 12)
!4947 = distinct !DILexicalBlock(scope: !4942, file: !2227, line: 1487, column: 9)
!4948 = !DILocation(line: 1492, column: 18, scope: !4946)
!4949 = !DILocation(line: 1494, column: 5, scope: !4942)
!4950 = !DILocation(line: 1497, column: 23, scope: !4942)
!4951 = !DILocation(line: 1496, column: 17, scope: !4942)
!4952 = !DILocation(line: 1498, column: 5, scope: !4942)
!4953 = !DILocation(line: 1501, column: 23, scope: !4942)
!4954 = !DILocation(line: 1500, column: 17, scope: !4942)
!4955 = !DILocation(line: 1502, column: 5, scope: !4942)
!4956 = !DILocation(line: 1513, column: 23, scope: !4942)
!4957 = !DILocation(line: 1513, column: 6, scope: !4942)
!4958 = !DILocation(line: 1512, column: 17, scope: !4942)
!4959 = !DILocation(line: 1514, column: 5, scope: !4942)
!4960 = !DILocation(line: 0, scope: !4942)
!4961 = !DILocation(line: 1516, column: 8, scope: !4939)
!4962 = !DILocation(line: 1517, column: 19, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4964, file: !2227, line: 1516, column: 33)
!4964 = distinct !DILexicalBlock(scope: !4939, file: !2227, line: 1516, column: 8)
!4965 = !DILocation(line: 1517, column: 17, scope: !4963)
!4966 = !DILocation(line: 1518, column: 4, scope: !4963)
!4967 = !DILocation(line: 1519, column: 19, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4969, file: !2227, line: 1518, column: 39)
!4969 = distinct !DILexicalBlock(scope: !4964, file: !2227, line: 1518, column: 15)
!4970 = !DILocation(line: 1519, column: 17, scope: !4968)
!4971 = !DILocation(line: 1520, column: 4, scope: !4968)
!4972 = !DILocation(line: 1522, column: 4, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !2227, line: 1521, column: 47)
!4974 = distinct !DILexicalBlock(scope: !4940, file: !2227, line: 1521, column: 14)
!4975 = !DILocation(line: 1527, column: 19, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4973, file: !2227, line: 1522, column: 24)
!4977 = !DILocation(line: 1527, column: 17, scope: !4976)
!4978 = !DILocation(line: 1528, column: 5, scope: !4976)
!4979 = !DILocation(line: 0, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4976, file: !2227, line: 1530, column: 9)
!4981 = !DILocation(line: 1540, column: 23, scope: !4976)
!4982 = !DILocation(line: 1539, column: 17, scope: !4976)
!4983 = !DILocation(line: 1542, column: 5, scope: !4976)
!4984 = !DILocation(line: 1545, column: 23, scope: !4976)
!4985 = !DILocation(line: 1544, column: 17, scope: !4976)
!4986 = !DILocation(line: 1547, column: 5, scope: !4976)
!4987 = !DILocation(line: 1551, column: 23, scope: !4976)
!4988 = !DILocation(line: 1551, column: 6, scope: !4976)
!4989 = !DILocation(line: 1550, column: 17, scope: !4976)
!4990 = !DILocation(line: 1552, column: 5, scope: !4976)
!4991 = !DILocation(line: 0, scope: !4976)
!4992 = !DILocation(line: 1554, column: 8, scope: !4973)
!4993 = !DILocation(line: 1555, column: 19, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4995, file: !2227, line: 1554, column: 33)
!4995 = distinct !DILexicalBlock(scope: !4973, file: !2227, line: 1554, column: 8)
!4996 = !DILocation(line: 1555, column: 17, scope: !4994)
!4997 = !DILocation(line: 1556, column: 4, scope: !4994)
!4998 = !DILocation(line: 1557, column: 19, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !5000, file: !2227, line: 1556, column: 39)
!5000 = distinct !DILexicalBlock(scope: !4995, file: !2227, line: 1556, column: 15)
!5001 = !DILocation(line: 1557, column: 17, scope: !4999)
!5002 = !DILocation(line: 1558, column: 4, scope: !4999)
!5003 = !DILocation(line: 0, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5005, file: !2227, line: 1560, column: 8)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !2227, line: 1559, column: 45)
!5006 = distinct !DILexicalBlock(scope: !4974, file: !2227, line: 1559, column: 14)
!5007 = !DILocation(line: 1566, column: 17, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5009, file: !2227, line: 1565, column: 46)
!5009 = distinct !DILexicalBlock(scope: !5006, file: !2227, line: 1565, column: 14)
!5010 = !DILocation(line: 1566, column: 15, scope: !5008)
!5011 = !DILocation(line: 1567, column: 3, scope: !5008)
!5012 = !DILocation(line: 1574, column: 21, scope: !4841)
!5013 = !DILocation(line: 1575, column: 4, scope: !4839)
!5014 = !DILocation(line: 0, scope: !4839)
!5015 = !DILocation(line: 1575, column: 4, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4839, file: !2227, line: 1575, column: 4)
!5017 = !DILocation(line: 1582, column: 17, scope: !4775)
!5018 = !DILocation(line: 1582, column: 3, scope: !4775)
!5019 = !DILocation(line: 1584, column: 4, scope: !4843)
!5020 = !DILocation(line: 0, scope: !4843)
!5021 = !DILocation(line: 1584, column: 4, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4843, file: !2227, line: 1584, column: 4)
!5023 = !DILocation(line: 1587, column: 31, scope: !4846)
!5024 = !DILocation(line: 1591, column: 18, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !4846, file: !2227, line: 1591, column: 8)
!5026 = !DILocation(line: 1591, column: 8, scope: !4846)
!5027 = !DILocation(line: 1592, column: 11, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5025, file: !2227, line: 1591, column: 24)
!5029 = !DILocation(line: 0, scope: !4846)
!5030 = !DILocation(line: 1593, column: 4, scope: !5028)
!5031 = !DILocation(line: 1594, column: 11, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5025, file: !2227, line: 1593, column: 11)
!5033 = !DILocation(line: 1604, column: 51, scope: !4844)
!5034 = !DILocation(line: 1604, column: 13, scope: !4844)
!5035 = !DILocation(line: 1604, column: 11, scope: !4844)
!5036 = !DILocation(line: 1606, column: 4, scope: !4844)
!5037 = !DILocation(line: 1609, column: 14, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !4844, file: !2227, line: 1609, column: 8)
!5039 = !DILocation(line: 1609, column: 8, scope: !4844)
!5040 = !DILocation(line: 1619, column: 18, scope: !4844)
!5041 = !DILocation(line: 1620, column: 13, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4844, file: !2227, line: 1620, column: 8)
!5043 = !DILocation(line: 1620, column: 8, scope: !4844)
!5044 = !DILocation(line: 1622, column: 36, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5042, file: !2227, line: 1620, column: 18)
!5046 = !DILocation(line: 1622, column: 17, scope: !5045)
!5047 = !DILocation(line: 1623, column: 4, scope: !5045)
!5048 = !DILocation(line: 1632, column: 29, scope: !4844)
!5049 = !DILocation(line: 1632, column: 10, scope: !4844)
!5050 = !DILocation(line: 1632, column: 4, scope: !4844)
!5051 = !DILocation(line: 1407, column: 8, scope: !4775)
!5052 = !DILocation(line: 0, scope: !4844)
!5053 = !DILocation(line: 1634, column: 3, scope: !4844)
!5054 = !DILocation(line: 1640, column: 18, scope: !4849)
!5055 = !DILocation(line: 1640, column: 8, scope: !4844)
!5056 = !DILocation(line: 1729, column: 13, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1729, column: 7)
!5058 = !DILocation(line: 1641, column: 22, scope: !4848)
!5059 = !DILocation(line: 0, scope: !4848)
!5060 = !DILocation(line: 1646, column: 21, scope: !4848)
!5061 = !DILocation(line: 1649, column: 13, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !4848, file: !2227, line: 1649, column: 9)
!5063 = !DILocation(line: 1649, column: 9, scope: !4848)
!5064 = !DILocation(line: 1650, column: 35, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5062, file: !2227, line: 1649, column: 34)
!5066 = !DILocation(line: 1650, column: 23, scope: !5065)
!5067 = !DILocation(line: 1651, column: 5, scope: !5065)
!5068 = !DILocation(line: 1660, column: 15, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !4844, file: !2227, line: 1660, column: 8)
!5070 = !DILocation(line: 1660, column: 19, scope: !5069)
!5071 = !DILocation(line: 1660, column: 8, scope: !4844)
!5072 = !DILocation(line: 1661, column: 23, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5069, file: !2227, line: 1660, column: 28)
!5074 = !DILocation(line: 1661, column: 11, scope: !5073)
!5075 = !DILocation(line: 1665, column: 22, scope: !5073)
!5076 = !DILocation(line: 1666, column: 21, scope: !5073)
!5077 = !DILocation(line: 1668, column: 5, scope: !5073)
!5078 = !DILocation(line: 1677, column: 30, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5080, file: !2227, line: 1676, column: 49)
!5080 = distinct !DILexicalBlock(scope: !4844, file: !2227, line: 1676, column: 8)
!5081 = !DILocation(line: 1677, column: 5, scope: !5079)
!5082 = !DILocation(line: 1680, column: 4, scope: !4844)
!5083 = !DILocation(line: 0, scope: !5025)
!5084 = !DILocation(line: 1597, column: 14, scope: !4846)
!5085 = !DILocation(line: 1699, column: 11, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1699, column: 7)
!5087 = !DILocation(line: 1699, column: 7, scope: !4775)
!5088 = !DILocation(line: 1725, column: 7, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1725, column: 7)
!5090 = !DILocation(line: 1725, column: 12, scope: !5089)
!5091 = !DILocation(line: 1747, column: 13, scope: !4856)
!5092 = !DILocation(line: 1747, column: 7, scope: !4775)
!5093 = !DILocation(line: 1722, column: 24, scope: !4775)
!5094 = !DILocation(line: 1725, column: 7, scope: !4775)
!5095 = !DILocation(line: 1729, column: 7, scope: !4775)
!5096 = !DILocation(line: 1736, column: 13, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !4775, file: !2227, line: 1736, column: 7)
!5098 = !DILocation(line: 1735, column: 19, scope: !4775)
!5099 = !DILocation(line: 1736, column: 7, scope: !4775)
!5100 = !DILocation(line: 1748, column: 10, scope: !4855)
!5101 = !DILocation(line: 1750, column: 15, scope: !4854)
!5102 = !DILocation(line: 1750, column: 8, scope: !4855)
!5103 = !DILocation(line: 0, scope: !4853)
!5104 = !DILocation(line: 1756, column: 15, scope: !4862)
!5105 = !DILocation(line: 1756, column: 9, scope: !4853)
!5106 = !DILocation(line: 1758, column: 7, scope: !4858)
!5107 = !DILocation(line: 0, scope: !4858)
!5108 = !DILocation(line: 1758, column: 7, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !4858, file: !2227, line: 1758, column: 7)
!5110 = !DILocation(line: 1764, column: 5, scope: !4853)
!5111 = !DILocation(line: 0, scope: !4855)
!5112 = !DILocation(line: 1764, column: 20, scope: !4853)
!5113 = !DILocation(line: 1764, column: 17, scope: !4853)
!5114 = !DILocation(line: 1765, column: 6, scope: !4864)
!5115 = !DILocation(line: 0, scope: !4864)
!5116 = !DILocation(line: 1765, column: 6, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !4864, file: !2227, line: 1765, column: 6)
!5118 = distinct !{!5118, !5110, !5119}
!5119 = !DILocation(line: 1766, column: 5, scope: !4853)
!5120 = !DILocation(line: 1773, column: 12, scope: !4869)
!5121 = !DILocation(line: 1773, column: 7, scope: !4775)
!5122 = !DILocation(line: 1773, column: 7, scope: !4869)
!5123 = !DILocation(line: 1774, column: 4, scope: !4867)
!5124 = !DILocation(line: 0, scope: !4867)
!5125 = !DILocation(line: 1774, column: 4, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !4867, file: !2227, line: 1774, column: 4)
!5127 = !DILocation(line: 1818, column: 8, scope: !4873)
!5128 = !DILocation(line: 1818, column: 27, scope: !4873)
!5129 = !DILocation(line: 1818, column: 25, scope: !4873)
!5130 = !DILocation(line: 1818, column: 8, scope: !4874)
!5131 = !DILocation(line: 1819, column: 5, scope: !4871)
!5132 = !DILocation(line: 0, scope: !4871)
!5133 = !DILocation(line: 1819, column: 5, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !4871, file: !2227, line: 1819, column: 5)
!5135 = !DILocation(line: 1822, column: 14, scope: !4879)
!5136 = !DILocation(line: 1822, column: 8, scope: !4874)
!5137 = !DILocation(line: 1823, column: 5, scope: !4877)
!5138 = !DILocation(line: 0, scope: !4877)
!5139 = !DILocation(line: 1823, column: 5, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !4877, file: !2227, line: 1823, column: 5)
!5141 = !DILocation(line: 1826, column: 20, scope: !4874)
!5142 = !DILocation(line: 1827, column: 4, scope: !4874)
!5143 = !DILocation(line: 0, scope: !4874)
!5144 = !DILocation(line: 1827, column: 21, scope: !4874)
!5145 = !DILocation(line: 1827, column: 18, scope: !4874)
!5146 = !DILocation(line: 1828, column: 5, scope: !4881)
!5147 = !DILocation(line: 0, scope: !4881)
!5148 = !DILocation(line: 1828, column: 5, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !4881, file: !2227, line: 1828, column: 5)
!5150 = distinct !{!5150, !5142, !5151}
!5151 = !DILocation(line: 1829, column: 4, scope: !4874)
!5152 = !DILocation(line: 1831, column: 4, scope: !4884)
!5153 = !DILocation(line: 0, scope: !4884)
!5154 = !DILocation(line: 1831, column: 4, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !4884, file: !2227, line: 1831, column: 4)
!5156 = !DILocation(line: 1835, column: 16, scope: !4775)
!5157 = !DILocation(line: 1835, column: 3, scope: !4775)
!5158 = !DILocation(line: 1836, column: 4, scope: !4886)
!5159 = !DILocation(line: 0, scope: !4886)
!5160 = !DILocation(line: 1836, column: 4, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !4886, file: !2227, line: 1836, column: 4)
!5162 = !DILocation(line: 1837, column: 4, scope: !4887)
!5163 = distinct !{!5163, !5157, !5164}
!5164 = !DILocation(line: 1838, column: 3, scope: !4775)
!5165 = !DILocation(line: 1844, column: 1, scope: !4748)
!5166 = distinct !DISubprogram(name: "extract_conversion", scope: !2227, file: !2227, line: 642, type: !5167, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5169)
!5167 = !DISubroutineType(types: !5168)
!5168 = !{!199, !4823, !199}
!5169 = !{!5170, !5171}
!5170 = !DILocalVariable(name: "conv", arg: 1, scope: !5166, file: !2227, line: 642, type: !4823)
!5171 = !DILocalVariable(name: "sp", arg: 2, scope: !5166, file: !2227, line: 643, type: !199)
!5172 = !DILocation(line: 0, scope: !5166)
!5173 = !DILocation(line: 645, column: 10, scope: !5166)
!5174 = !DILocation(line: 653, column: 2, scope: !5166)
!5175 = !DILocation(line: 654, column: 6, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5166, file: !2227, line: 654, column: 6)
!5177 = !DILocation(line: 654, column: 10, scope: !5176)
!5178 = !DILocation(line: 654, column: 6, scope: !5166)
!5179 = !DILocation(line: 655, column: 24, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5176, file: !2227, line: 654, column: 18)
!5181 = !DILocation(line: 655, column: 19, scope: !5180)
!5182 = !DILocation(line: 656, column: 3, scope: !5180)
!5183 = !DILocation(line: 659, column: 7, scope: !5166)
!5184 = !DILocation(line: 660, column: 7, scope: !5166)
!5185 = !DILocation(line: 661, column: 7, scope: !5166)
!5186 = !DILocation(line: 662, column: 7, scope: !5166)
!5187 = !DILocation(line: 663, column: 7, scope: !5166)
!5188 = !DILocation(line: 665, column: 2, scope: !5166)
!5189 = !DILocation(line: 666, column: 1, scope: !5166)
!5190 = distinct !DISubprogram(name: "outs", scope: !2227, file: !2227, line: 1319, type: !5191, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!103, !3000, !102, !199, !199}
!5193 = !{!5194, !5195, !5196, !5197, !5198, !5199}
!5194 = !DILocalVariable(name: "out", arg: 1, scope: !5190, file: !2227, line: 1319, type: !3000)
!5195 = !DILocalVariable(name: "ctx", arg: 2, scope: !5190, file: !2227, line: 1320, type: !102)
!5196 = !DILocalVariable(name: "sp", arg: 3, scope: !5190, file: !2227, line: 1321, type: !199)
!5197 = !DILocalVariable(name: "ep", arg: 4, scope: !5190, file: !2227, line: 1322, type: !199)
!5198 = !DILocalVariable(name: "count", scope: !5190, file: !2227, line: 1324, type: !120)
!5199 = !DILocalVariable(name: "rc", scope: !5200, file: !2227, line: 1327, type: !103)
!5200 = distinct !DILexicalBlock(scope: !5190, file: !2227, line: 1326, column: 45)
!5201 = !DILocation(line: 0, scope: !5190)
!5202 = !DILocation(line: 1326, column: 2, scope: !5190)
!5203 = !DILocation(line: 1324, column: 9, scope: !5190)
!5204 = !DILocation(line: 1326, column: 13, scope: !5190)
!5205 = !DILocation(line: 1326, column: 19, scope: !5190)
!5206 = !DILocation(line: 1327, column: 21, scope: !5200)
!5207 = !DILocation(line: 1326, column: 36, scope: !5190)
!5208 = !DILocation(line: 1326, column: 39, scope: !5190)
!5209 = !DILocation(line: 1327, column: 24, scope: !5200)
!5210 = !DILocation(line: 1327, column: 16, scope: !5200)
!5211 = !DILocation(line: 1327, column: 12, scope: !5200)
!5212 = !DILocation(line: 0, scope: !5200)
!5213 = !DILocation(line: 1329, column: 10, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5200, file: !2227, line: 1329, column: 7)
!5215 = !DILocation(line: 1329, column: 7, scope: !5200)
!5216 = distinct !{!5216, !5202, !5217}
!5217 = !DILocation(line: 1333, column: 2, scope: !5190)
!5218 = !DILocation(line: 1336, column: 1, scope: !5190)
!5219 = distinct !DISubprogram(name: "encode_uint", scope: !2227, file: !2227, line: 788, type: !5220, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5222)
!5220 = !DISubroutineType(types: !5221)
!5221 = !{!1002, !2249, !4823, !1002, !199}
!5222 = !{!5223, !5224, !5225, !5226, !5227, !5228, !5230, !5231}
!5223 = !DILocalVariable(name: "value", arg: 1, scope: !5219, file: !2227, line: 788, type: !2249)
!5224 = !DILocalVariable(name: "conv", arg: 2, scope: !5219, file: !2227, line: 789, type: !4823)
!5225 = !DILocalVariable(name: "bps", arg: 3, scope: !5219, file: !2227, line: 790, type: !1002)
!5226 = !DILocalVariable(name: "bpe", arg: 4, scope: !5219, file: !2227, line: 791, type: !199)
!5227 = !DILocalVariable(name: "upcase", scope: !5219, file: !2227, line: 793, type: !211)
!5228 = !DILocalVariable(name: "radix", scope: !5219, file: !2227, line: 794, type: !5229)
!5229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5230 = !DILocalVariable(name: "bp", scope: !5219, file: !2227, line: 795, type: !1002)
!5231 = !DILocalVariable(name: "lsv", scope: !5232, file: !2227, line: 798, type: !32)
!5232 = distinct !DILexicalBlock(scope: !5219, file: !2227, line: 797, column: 5)
!5233 = !DILocation(line: 0, scope: !5219)
!5234 = !DILocation(line: 793, column: 35, scope: !5219)
!5235 = !DILocation(line: 793, column: 24, scope: !5219)
!5236 = !DILocation(line: 793, column: 16, scope: !5219)
!5237 = !DILocation(line: 794, column: 29, scope: !5219)
!5238 = !DILocation(line: 795, column: 24, scope: !5219)
!5239 = !DILocation(line: 795, column: 17, scope: !5219)
!5240 = !DILocation(line: 797, column: 2, scope: !5219)
!5241 = !DILocation(line: 802, column: 9, scope: !5232)
!5242 = !DILocation(line: 798, column: 22, scope: !5232)
!5243 = !DILocation(line: 0, scope: !5232)
!5244 = !DILocation(line: 800, column: 16, scope: !5232)
!5245 = !DILocation(line: 800, column: 11, scope: !5232)
!5246 = !DILocation(line: 800, column: 4, scope: !5232)
!5247 = !DILocation(line: 800, column: 9, scope: !5232)
!5248 = !DILocation(line: 803, column: 18, scope: !5219)
!5249 = !DILocation(line: 803, column: 24, scope: !5219)
!5250 = !DILocation(line: 803, column: 2, scope: !5232)
!5251 = distinct !{!5251, !5240, !5252}
!5252 = !DILocation(line: 803, column: 37, scope: !5219)
!5253 = !DILocation(line: 808, column: 12, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5219, file: !2227, line: 808, column: 6)
!5255 = !DILocation(line: 808, column: 6, scope: !5219)
!5256 = !DILocation(line: 809, column: 7, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5254, file: !2227, line: 808, column: 23)
!5258 = !DILocation(line: 813, column: 3, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !2227, line: 811, column: 27)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !2227, line: 811, column: 14)
!5261 = distinct !DILexicalBlock(scope: !5257, file: !2227, line: 809, column: 7)
!5262 = !DILocation(line: 0, scope: !5261)
!5263 = !DILocation(line: 818, column: 2, scope: !5219)
!5264 = distinct !DISubprogram(name: "store_count", scope: !2227, file: !2227, line: 1280, type: !5265, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5269)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{null, !5267, !102, !103}
!5267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5268, size: 32)
!5268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4790)
!5269 = !{!5270, !5271, !5272}
!5270 = !DILocalVariable(name: "conv", arg: 1, scope: !5264, file: !2227, line: 1280, type: !5267)
!5271 = !DILocalVariable(name: "dp", arg: 2, scope: !5264, file: !2227, line: 1281, type: !102)
!5272 = !DILocalVariable(name: "count", arg: 3, scope: !5264, file: !2227, line: 1282, type: !103)
!5273 = !DILocation(line: 0, scope: !5264)
!5274 = !DILocation(line: 1284, column: 38, scope: !5264)
!5275 = !DILocation(line: 1284, column: 2, scope: !5264)
!5276 = !DILocation(line: 1286, column: 4, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5264, file: !2227, line: 1284, column: 50)
!5278 = !DILocation(line: 1286, column: 14, scope: !5277)
!5279 = !DILocation(line: 1287, column: 3, scope: !5277)
!5280 = !DILocation(line: 1289, column: 24, scope: !5277)
!5281 = !DILocation(line: 1289, column: 22, scope: !5277)
!5282 = !DILocation(line: 1290, column: 3, scope: !5277)
!5283 = !DILocation(line: 1292, column: 18, scope: !5277)
!5284 = !DILocation(line: 1292, column: 4, scope: !5277)
!5285 = !DILocation(line: 1292, column: 16, scope: !5277)
!5286 = !DILocation(line: 1293, column: 3, scope: !5277)
!5287 = !DILocation(line: 1295, column: 4, scope: !5277)
!5288 = !DILocation(line: 1295, column: 15, scope: !5277)
!5289 = !DILocation(line: 1296, column: 3, scope: !5277)
!5290 = !DILocation(line: 1298, column: 22, scope: !5277)
!5291 = !DILocation(line: 1298, column: 4, scope: !5277)
!5292 = !DILocation(line: 1298, column: 20, scope: !5277)
!5293 = !DILocation(line: 1299, column: 3, scope: !5277)
!5294 = !DILocation(line: 1301, column: 21, scope: !5277)
!5295 = !DILocation(line: 1301, column: 4, scope: !5277)
!5296 = !DILocation(line: 1301, column: 19, scope: !5277)
!5297 = !DILocation(line: 1302, column: 3, scope: !5277)
!5298 = !DILocation(line: 1304, column: 4, scope: !5277)
!5299 = !DILocation(line: 1304, column: 17, scope: !5277)
!5300 = !DILocation(line: 1305, column: 3, scope: !5277)
!5301 = !DILocation(line: 1307, column: 4, scope: !5277)
!5302 = !DILocation(line: 1307, column: 20, scope: !5277)
!5303 = !DILocation(line: 1308, column: 3, scope: !5277)
!5304 = !DILocation(line: 1316, column: 1, scope: !5264)
!5305 = distinct !DISubprogram(name: "isupper", scope: !5306, file: !5306, line: 16, type: !129, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5307)
!5306 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5307 = !{!5308}
!5308 = !DILocalVariable(name: "a", arg: 1, scope: !5305, file: !5306, line: 16, type: !103)
!5309 = !DILocation(line: 0, scope: !5305)
!5310 = !DILocation(line: 18, column: 29, scope: !5305)
!5311 = !DILocation(line: 18, column: 45, scope: !5305)
!5312 = !DILocation(line: 18, column: 2, scope: !5305)
!5313 = distinct !DISubprogram(name: "conversion_radix", scope: !2227, file: !2227, line: 761, type: !5314, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5316)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{!120, !109}
!5316 = !{!5317}
!5317 = !DILocalVariable(name: "specifier", arg: 1, scope: !5313, file: !2227, line: 761, type: !109)
!5318 = !DILocation(line: 0, scope: !5313)
!5319 = !DILocation(line: 763, column: 2, scope: !5313)
!5320 = !DILocation(line: 770, column: 3, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5313, file: !2227, line: 763, column: 21)
!5322 = !DILocation(line: 774, column: 3, scope: !5321)
!5323 = !DILocation(line: 0, scope: !5321)
!5324 = !DILocation(line: 776, column: 1, scope: !5313)
!5325 = distinct !DISubprogram(name: "extract_flags", scope: !2227, file: !2227, line: 339, type: !5167, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5326)
!5326 = !{!5327, !5328, !5329}
!5327 = !DILocalVariable(name: "conv", arg: 1, scope: !5325, file: !2227, line: 339, type: !4823)
!5328 = !DILocalVariable(name: "sp", arg: 2, scope: !5325, file: !2227, line: 340, type: !199)
!5329 = !DILocalVariable(name: "loop", scope: !5325, file: !2227, line: 342, type: !211)
!5330 = !DILocation(line: 0, scope: !5325)
!5331 = !DILocation(line: 344, column: 2, scope: !5325)
!5332 = !DILocation(line: 345, column: 11, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5325, file: !2227, line: 344, column: 5)
!5334 = !DILocation(line: 345, column: 3, scope: !5333)
!5335 = !DILocation(line: 351, column: 4, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5333, file: !2227, line: 345, column: 16)
!5337 = !DILocation(line: 354, column: 4, scope: !5336)
!5338 = !DILocation(line: 357, column: 4, scope: !5336)
!5339 = !DILocation(line: 360, column: 4, scope: !5336)
!5340 = !DILocation(line: 0, scope: !5336)
!5341 = !DILocation(line: 370, column: 12, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5325, file: !2227, line: 370, column: 6)
!5343 = !DILocation(line: 370, column: 22, scope: !5342)
!5344 = !DILocation(line: 371, column: 19, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5342, file: !2227, line: 370, column: 42)
!5346 = !DILocation(line: 372, column: 2, scope: !5345)
!5347 = !DILocation(line: 376, column: 2, scope: !5325)
!5348 = distinct !DISubprogram(name: "extract_width", scope: !2227, file: !2227, line: 388, type: !5167, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5349)
!5349 = !{!5350, !5351, !5352, !5353}
!5350 = !DILocalVariable(name: "conv", arg: 1, scope: !5348, file: !2227, line: 388, type: !4823)
!5351 = !DILocalVariable(name: "sp", arg: 2, scope: !5348, file: !2227, line: 389, type: !199)
!5352 = !DILocalVariable(name: "wp", scope: !5348, file: !2227, line: 398, type: !199)
!5353 = !DILocalVariable(name: "width", scope: !5348, file: !2227, line: 399, type: !120)
!5354 = !DILocation(line: 0, scope: !5348)
!5355 = !DILocation(line: 391, column: 8, scope: !5348)
!5356 = !DILocation(line: 391, column: 22, scope: !5348)
!5357 = !DILocation(line: 393, column: 6, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5348, file: !2227, line: 393, column: 6)
!5359 = !DILocation(line: 393, column: 10, scope: !5358)
!5360 = !DILocation(line: 393, column: 6, scope: !5348)
!5361 = !DILocation(line: 394, column: 20, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5358, file: !2227, line: 393, column: 18)
!5363 = !DILocation(line: 395, column: 10, scope: !5362)
!5364 = !DILocation(line: 395, column: 3, scope: !5362)
!5365 = !DILocation(line: 399, column: 17, scope: !5348)
!5366 = !DILocation(line: 401, column: 6, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5348, file: !2227, line: 401, column: 6)
!5368 = !DILocation(line: 401, column: 9, scope: !5367)
!5369 = !DILocation(line: 401, column: 6, scope: !5348)
!5370 = !DILocation(line: 402, column: 23, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5367, file: !2227, line: 401, column: 16)
!5372 = !DILocation(line: 403, column: 9, scope: !5371)
!5373 = !DILocation(line: 403, column: 21, scope: !5371)
!5374 = !DILocation(line: 405, column: 11, scope: !5371)
!5375 = !DILocation(line: 404, column: 21, scope: !5371)
!5376 = !DILocation(line: 406, column: 2, scope: !5371)
!5377 = !DILocation(line: 409, column: 1, scope: !5348)
!5378 = distinct !DISubprogram(name: "extract_prec", scope: !2227, file: !2227, line: 420, type: !5167, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5379)
!5379 = !{!5380, !5381, !5382}
!5380 = !DILocalVariable(name: "conv", arg: 1, scope: !5378, file: !2227, line: 420, type: !4823)
!5381 = !DILocalVariable(name: "sp", arg: 2, scope: !5378, file: !2227, line: 421, type: !199)
!5382 = !DILocalVariable(name: "prec", scope: !5378, file: !2227, line: 435, type: !120)
!5383 = !DILocation(line: 0, scope: !5378)
!5384 = !DILocation(line: 423, column: 24, scope: !5378)
!5385 = !DILocation(line: 423, column: 28, scope: !5378)
!5386 = !DILocation(line: 423, column: 8, scope: !5378)
!5387 = !DILocation(line: 423, column: 21, scope: !5378)
!5388 = !DILocation(line: 425, column: 6, scope: !5378)
!5389 = !DILocation(line: 428, column: 2, scope: !5378)
!5390 = !DILocation(line: 430, column: 6, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5378, file: !2227, line: 430, column: 6)
!5392 = !DILocation(line: 430, column: 10, scope: !5391)
!5393 = !DILocation(line: 430, column: 6, scope: !5378)
!5394 = !DILocation(line: 431, column: 19, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5391, file: !2227, line: 430, column: 18)
!5396 = !DILocation(line: 432, column: 10, scope: !5395)
!5397 = !DILocation(line: 432, column: 3, scope: !5395)
!5398 = !DILocation(line: 435, column: 16, scope: !5378)
!5399 = !DILocation(line: 437, column: 8, scope: !5378)
!5400 = !DILocation(line: 437, column: 19, scope: !5378)
!5401 = !DILocation(line: 439, column: 10, scope: !5378)
!5402 = !DILocation(line: 438, column: 20, scope: !5378)
!5403 = !DILocation(line: 441, column: 9, scope: !5378)
!5404 = !DILocation(line: 442, column: 1, scope: !5378)
!5405 = distinct !DISubprogram(name: "extract_length", scope: !2227, file: !2227, line: 453, type: !5167, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5406)
!5406 = !{!5407, !5408}
!5407 = !DILocalVariable(name: "conv", arg: 1, scope: !5405, file: !2227, line: 453, type: !4823)
!5408 = !DILocalVariable(name: "sp", arg: 2, scope: !5405, file: !2227, line: 454, type: !199)
!5409 = !DILocation(line: 0, scope: !5405)
!5410 = !DILocation(line: 456, column: 10, scope: !5405)
!5411 = !DILocation(line: 456, column: 2, scope: !5405)
!5412 = !DILocation(line: 458, column: 8, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5414, file: !2227, line: 458, column: 7)
!5414 = distinct !DILexicalBlock(scope: !5405, file: !2227, line: 456, column: 15)
!5415 = !DILocation(line: 458, column: 7, scope: !5413)
!5416 = !DILocation(line: 458, column: 13, scope: !5413)
!5417 = !DILocation(line: 0, scope: !5413)
!5418 = !DILocation(line: 458, column: 7, scope: !5414)
!5419 = !DILocation(line: 459, column: 21, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5413, file: !2227, line: 458, column: 21)
!5421 = !DILocation(line: 460, column: 4, scope: !5420)
!5422 = !DILocation(line: 461, column: 3, scope: !5420)
!5423 = !DILocation(line: 462, column: 21, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5413, file: !2227, line: 461, column: 10)
!5425 = !DILocation(line: 466, column: 8, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5414, file: !2227, line: 466, column: 7)
!5427 = !DILocation(line: 466, column: 7, scope: !5426)
!5428 = !DILocation(line: 466, column: 13, scope: !5426)
!5429 = !DILocation(line: 0, scope: !5426)
!5430 = !DILocation(line: 466, column: 7, scope: !5414)
!5431 = !DILocation(line: 467, column: 21, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5426, file: !2227, line: 466, column: 21)
!5433 = !DILocation(line: 468, column: 4, scope: !5432)
!5434 = !DILocation(line: 469, column: 3, scope: !5432)
!5435 = !DILocation(line: 470, column: 21, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5426, file: !2227, line: 469, column: 10)
!5437 = !DILocation(line: 474, column: 9, scope: !5414)
!5438 = !DILocation(line: 474, column: 20, scope: !5414)
!5439 = !DILocation(line: 475, column: 3, scope: !5414)
!5440 = !DILocation(line: 476, column: 3, scope: !5414)
!5441 = !DILocation(line: 478, column: 9, scope: !5414)
!5442 = !DILocation(line: 478, column: 20, scope: !5414)
!5443 = !DILocation(line: 479, column: 3, scope: !5414)
!5444 = !DILocation(line: 480, column: 3, scope: !5414)
!5445 = !DILocation(line: 482, column: 9, scope: !5414)
!5446 = !DILocation(line: 482, column: 20, scope: !5414)
!5447 = !DILocation(line: 483, column: 3, scope: !5414)
!5448 = !DILocation(line: 484, column: 3, scope: !5414)
!5449 = !DILocation(line: 486, column: 9, scope: !5414)
!5450 = !DILocation(line: 486, column: 20, scope: !5414)
!5451 = !DILocation(line: 487, column: 3, scope: !5414)
!5452 = !DILocation(line: 492, column: 21, scope: !5414)
!5453 = !DILocation(line: 493, column: 3, scope: !5414)
!5454 = !DILocation(line: 495, column: 9, scope: !5414)
!5455 = !DILocation(line: 495, column: 20, scope: !5414)
!5456 = !DILocation(line: 496, column: 3, scope: !5414)
!5457 = !DILocation(line: 498, column: 2, scope: !5405)
!5458 = distinct !DISubprogram(name: "extract_specifier", scope: !2227, file: !2227, line: 513, type: !5167, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5459)
!5459 = !{!5460, !5461, !5462, !5463}
!5460 = !DILocalVariable(name: "conv", arg: 1, scope: !5458, file: !2227, line: 513, type: !4823)
!5461 = !DILocalVariable(name: "sp", arg: 2, scope: !5458, file: !2227, line: 514, type: !199)
!5462 = !DILocalVariable(name: "unsupported", scope: !5458, file: !2227, line: 516, type: !211)
!5463 = !DILabel(scope: !5464, name: "int_conv", file: !2227, line: 526)
!5464 = distinct !DILexicalBlock(scope: !5458, file: !2227, line: 520, column: 27)
!5465 = !DILocation(line: 0, scope: !5458)
!5466 = !DILocation(line: 518, column: 20, scope: !5458)
!5467 = !DILocation(line: 518, column: 8, scope: !5458)
!5468 = !DILocation(line: 518, column: 18, scope: !5458)
!5469 = !DILocation(line: 520, column: 2, scope: !5458)
!5470 = !DILocation(line: 525, column: 3, scope: !5464)
!5471 = !DILocation(line: 0, scope: !5464)
!5472 = !DILocation(line: 526, column: 1, scope: !5464)
!5473 = !DILocation(line: 528, column: 24, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5464, file: !2227, line: 528, column: 7)
!5475 = !DILocation(line: 528, column: 7, scope: !5464)
!5476 = !DILocation(line: 535, column: 23, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5464, file: !2227, line: 535, column: 7)
!5478 = !DILocation(line: 535, column: 7, scope: !5464)
!5479 = !DILocation(line: 536, column: 36, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5477, file: !2227, line: 535, column: 31)
!5481 = !DILocation(line: 537, column: 3, scope: !5480)
!5482 = !DILocation(line: 570, column: 9, scope: !5464)
!5483 = !DILocation(line: 570, column: 23, scope: !5464)
!5484 = !DILocation(line: 575, column: 4, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !2227, line: 573, column: 48)
!5486 = distinct !DILexicalBlock(scope: !5464, file: !2227, line: 573, column: 7)
!5487 = !DILocation(line: 603, column: 9, scope: !5464)
!5488 = !DILocation(line: 603, column: 23, scope: !5464)
!5489 = !DILocation(line: 605, column: 24, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5464, file: !2227, line: 605, column: 7)
!5491 = !DILocation(line: 605, column: 7, scope: !5464)
!5492 = !DILocation(line: 612, column: 9, scope: !5464)
!5493 = !DILocation(line: 612, column: 23, scope: !5464)
!5494 = !DILocation(line: 619, column: 24, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5464, file: !2227, line: 619, column: 7)
!5496 = !DILocation(line: 619, column: 7, scope: !5464)
!5497 = !DILocation(line: 625, column: 9, scope: !5464)
!5498 = !DILocation(line: 625, column: 17, scope: !5464)
!5499 = !DILocation(line: 626, column: 3, scope: !5464)
!5500 = !DILocation(line: 629, column: 20, scope: !5458)
!5501 = !DILocation(line: 629, column: 8, scope: !5458)
!5502 = !DILocation(line: 518, column: 23, scope: !5458)
!5503 = !DILocation(line: 631, column: 2, scope: !5458)
!5504 = distinct !DISubprogram(name: "extract_decimal", scope: !2227, file: !2227, line: 318, type: !5505, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5508)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{!120, !5507}
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!5508 = !{!5509, !5510, !5511}
!5509 = !DILocalVariable(name: "str", arg: 1, scope: !5504, file: !2227, line: 318, type: !5507)
!5510 = !DILocalVariable(name: "sp", scope: !5504, file: !2227, line: 320, type: !199)
!5511 = !DILocalVariable(name: "val", scope: !5504, file: !2227, line: 321, type: !120)
!5512 = !DILocation(line: 0, scope: !5504)
!5513 = !DILocation(line: 320, column: 19, scope: !5504)
!5514 = !DILocation(line: 323, column: 37, scope: !5504)
!5515 = !DILocation(line: 323, column: 17, scope: !5504)
!5516 = !DILocation(line: 323, column: 9, scope: !5504)
!5517 = !DILocation(line: 323, column: 2, scope: !5504)
!5518 = !DILocation(line: 324, column: 13, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5504, file: !2227, line: 323, column: 43)
!5520 = !DILocation(line: 324, column: 24, scope: !5519)
!5521 = !DILocation(line: 324, column: 19, scope: !5519)
!5522 = !DILocation(line: 324, column: 27, scope: !5519)
!5523 = distinct !{!5523, !5517, !5524}
!5524 = !DILocation(line: 325, column: 2, scope: !5504)
!5525 = !DILocation(line: 326, column: 7, scope: !5504)
!5526 = !DILocation(line: 327, column: 2, scope: !5504)
!5527 = distinct !DISubprogram(name: "isdigit", scope: !5306, file: !5306, line: 43, type: !129, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !5528)
!5528 = !{!5529}
!5529 = !DILocalVariable(name: "a", arg: 1, scope: !5527, file: !5306, line: 43, type: !103)
!5530 = !DILocation(line: 0, scope: !5527)
!5531 = !DILocation(line: 45, column: 29, scope: !5527)
!5532 = !DILocation(line: 45, column: 45, scope: !5527)
!5533 = !DILocation(line: 45, column: 2, scope: !5527)
!5534 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5535, file: !5535, line: 9, type: !2802, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !162)
!5535 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!5536 = !DILocation(line: 11, column: 1, scope: !5534)
!5537 = !{i64 2147560724, i64 2147560767, i64 2147560807}
!5538 = !DILocation(line: 12, column: 1, scope: !5534)
!5539 = !{i64 2147564951, i64 2147564994, i64 2147565034}
!5540 = !DILocation(line: 13, column: 1, scope: !5534)
!5541 = !{i64 2147565160, i64 2147565203, i64 2147565243}
!5542 = !DILocation(line: 14, column: 1, scope: !5534)
!5543 = !{i64 2147565329, i64 2147565372, i64 2147565412}
!5544 = !DILocation(line: 15, column: 1, scope: !5534)
!5545 = !{i64 2147565492, i64 2147565535, i64 2147565575}
!5546 = !DILocation(line: 16, column: 1, scope: !5534)
!5547 = !{i64 2147565676, i64 2147565719, i64 2147565759}
!5548 = !DILocation(line: 17, column: 1, scope: !5534)
!5549 = !{i64 2147565855, i64 2147565898, i64 2147565938}
!5550 = !DILocation(line: 18, column: 1, scope: !5534)
!5551 = !{i64 2147566097, i64 2147566140, i64 2147566180}
!5552 = !DILocation(line: 19, column: 1, scope: !5534)
!5553 = !{i64 2147566332, i64 2147566375, i64 2147566415}
!5554 = !DILocation(line: 20, column: 1, scope: !5534)
!5555 = !{i64 2147566518, i64 2147566561, i64 2147566601}
!5556 = !DILocation(line: 21, column: 1, scope: !5534)
!5557 = !{i64 2147566734, i64 2147566777, i64 2147566817}
!5558 = !DILocation(line: 22, column: 1, scope: !5534)
!5559 = !{i64 2147566937, i64 2147566980, i64 2147567020}
!5560 = !DILocation(line: 23, column: 1, scope: !5534)
!5561 = !{i64 2147567140, i64 2147567183, i64 2147567223}
!5562 = !DILocation(line: 24, column: 1, scope: !5534)
!5563 = !{i64 2147567315, i64 2147567358, i64 2147567398}
!5564 = !DILocation(line: 25, column: 1, scope: !5534)
!5565 = !{i64 2147567523, i64 2147567566, i64 2147567606}
!5566 = !DILocation(line: 26, column: 1, scope: !5534)
!5567 = !{i64 2147567727, i64 2147567770, i64 2147567810}
!5568 = !DILocation(line: 27, column: 1, scope: !5534)
!5569 = !{i64 2147567920, i64 2147567963, i64 2147568003}
!5570 = !DILocation(line: 28, column: 1, scope: !5534)
!5571 = !{i64 2147568122, i64 2147568165, i64 2147568205}
!5572 = !DILocation(line: 29, column: 1, scope: !5534)
!5573 = !{i64 2147568349, i64 2147568392, i64 2147568432}
!5574 = !DILocation(line: 30, column: 1, scope: !5534)
!5575 = !{i64 2147568551, i64 2147568594, i64 2147568634}
!5576 = !DILocation(line: 31, column: 1, scope: !5534)
!5577 = !{i64 2147568766, i64 2147568809, i64 2147568849}
!5578 = !DILocation(line: 32, column: 1, scope: !5534)
!5579 = !{i64 2147568938, i64 2147568981, i64 2147569021}
!5580 = !DILocation(line: 33, column: 1, scope: !5534)
!5581 = !{i64 2147569140, i64 2147569183, i64 2147569223}
!5582 = !DILocation(line: 34, column: 1, scope: !5534)
!5583 = !{i64 2147569366, i64 2147569409, i64 2147569449}
!5584 = !DILocation(line: 35, column: 1, scope: !5534)
!5585 = !{i64 2147569565, i64 2147569608, i64 2147569648}
!5586 = !DILocation(line: 36, column: 1, scope: !5534)
!5587 = !{i64 2147569740, i64 2147569783, i64 2147569823}
!5588 = !DILocation(line: 37, column: 1, scope: !5534)
!5589 = !{i64 2147569993, i64 2147570036, i64 2147570076}
!5590 = !DILocation(line: 38, column: 1, scope: !5534)
!5591 = !{i64 2147570234, i64 2147570277, i64 2147570317}
!5592 = !DILocation(line: 39, column: 1, scope: !5534)
!5593 = !{i64 2147570469, i64 2147570512, i64 2147570552}
!5594 = !DILocation(line: 40, column: 1, scope: !5534)
!5595 = !{i64 2147570701, i64 2147570744, i64 2147570784}
!5596 = !DILocation(line: 41, column: 1, scope: !5534)
!5597 = !{i64 2147570927, i64 2147570970, i64 2147571010}
!5598 = !DILocation(line: 42, column: 1, scope: !5534)
!5599 = !{i64 2147571153, i64 2147571196, i64 2147571236}
!5600 = !DILocation(line: 43, column: 1, scope: !5534)
!5601 = !{i64 2147571379, i64 2147571422, i64 2147571462}
!5602 = !DILocation(line: 44, column: 1, scope: !5534)
!5603 = !{i64 2147571614, i64 2147571657, i64 2147571697}
!5604 = !DILocation(line: 45, column: 1, scope: !5534)
!5605 = !{i64 2147571852, i64 2147571895, i64 2147571935}
!5606 = !DILocation(line: 46, column: 1, scope: !5534)
!5607 = !{i64 2147572126, i64 2147572169, i64 2147572209}
!5608 = !DILocation(line: 47, column: 1, scope: !5534)
!5609 = !{i64 2147572364, i64 2147572407, i64 2147572447}
!5610 = !DILocation(line: 48, column: 1, scope: !5534)
!5611 = !{i64 2147572608, i64 2147572651, i64 2147572691}
!5612 = !DILocation(line: 49, column: 1, scope: !5534)
!5613 = !{i64 2147572858, i64 2147572901, i64 2147572941}
!5614 = !DILocation(line: 50, column: 1, scope: !5534)
!5615 = !{i64 2147573105, i64 2147573148, i64 2147573188}
!5616 = !DILocation(line: 51, column: 1, scope: !5534)
!5617 = !{i64 2147573340, i64 2147573383, i64 2147573423}
!5618 = !DILocation(line: 52, column: 1, scope: !5534)
!5619 = !{i64 2147573575, i64 2147573618, i64 2147573658}
!5620 = !DILocation(line: 53, column: 1, scope: !5534)
!5621 = !{i64 2147577871, i64 2147577914, i64 2147577954}
!5622 = !DILocation(line: 54, column: 1, scope: !5534)
!5623 = !{i64 2147578109, i64 2147578152, i64 2147578192}
!5624 = !DILocation(line: 55, column: 1, scope: !5534)
!5625 = !{i64 2147578350, i64 2147578393, i64 2147578433}
!5626 = !DILocation(line: 56, column: 1, scope: !5534)
!5627 = !{i64 2147578630, i64 2147578673, i64 2147578713}
!5628 = !DILocation(line: 57, column: 1, scope: !5534)
!5629 = !{i64 2147578889, i64 2147578932, i64 2147578972}
!5630 = !DILocation(line: 58, column: 1, scope: !5534)
!5631 = !{i64 2147579115, i64 2147579158, i64 2147579198}
!5632 = !DILocation(line: 59, column: 1, scope: !5534)
!5633 = !{i64 2147579353, i64 2147579396, i64 2147579436}
!5634 = !DILocation(line: 60, column: 1, scope: !5534)
!5635 = !{i64 2147579582, i64 2147579625, i64 2147579665}
!5636 = !DILocation(line: 61, column: 1, scope: !5534)
!5637 = !{i64 2147579790, i64 2147579833, i64 2147579873}
!5638 = !DILocation(line: 62, column: 1, scope: !5534)
!5639 = !{i64 2147580001, i64 2147580044, i64 2147580084}
!5640 = !DILocation(line: 63, column: 1, scope: !5534)
!5641 = !{i64 2147580236, i64 2147580279, i64 2147580319}
!5642 = !DILocation(line: 64, column: 1, scope: !5534)
!5643 = !{i64 2147580465, i64 2147580508, i64 2147580548}
!5644 = !DILocation(line: 65, column: 1, scope: !5534)
!5645 = !{i64 2147580703, i64 2147580746, i64 2147580786}
!5646 = !DILocation(line: 66, column: 1, scope: !5534)
!5647 = !{i64 2147580935, i64 2147580978, i64 2147581018}
!5648 = !DILocation(line: 67, column: 1, scope: !5534)
!5649 = !{i64 2147581161, i64 2147581204, i64 2147581244}
!5650 = !DILocation(line: 68, column: 1, scope: !5534)
!5651 = !{i64 2147581378, i64 2147581421, i64 2147581461}
!5652 = !DILocation(line: 69, column: 1, scope: !5534)
!5653 = !{i64 2147581610, i64 2147581653, i64 2147581693}
!5654 = !DILocation(line: 70, column: 1, scope: !5534)
!5655 = !{i64 2147581836, i64 2147581879, i64 2147581919}
!5656 = !DILocation(line: 71, column: 1, scope: !5534)
!5657 = !{i64 2147582050, i64 2147582093, i64 2147582133}
!5658 = !DILocation(line: 72, column: 1, scope: !5534)
!5659 = !{i64 2147582270, i64 2147582313, i64 2147582353}
!5660 = !DILocation(line: 73, column: 1, scope: !5534)
!5661 = !{i64 2147582502, i64 2147582545, i64 2147582585}
!5662 = !DILocation(line: 74, column: 1, scope: !5534)
!5663 = !{i64 2147582710, i64 2147582753, i64 2147582793}
!5664 = !DILocation(line: 75, column: 1, scope: !5534)
!5665 = !{i64 2147582915, i64 2147582958, i64 2147582998}
!5666 = !DILocation(line: 76, column: 1, scope: !5534)
!5667 = !{i64 2147583132, i64 2147583175, i64 2147583215}
!5668 = !DILocation(line: 77, column: 1, scope: !5534)
!5669 = !{i64 2147583346, i64 2147583389, i64 2147583429}
!5670 = !DILocation(line: 78, column: 1, scope: !5534)
!5671 = !{i64 2147583572, i64 2147583615, i64 2147583655}
!5672 = !DILocation(line: 79, column: 1, scope: !5534)
!5673 = !{i64 2147583792, i64 2147583835, i64 2147583875}
!5674 = !DILocation(line: 80, column: 1, scope: !5534)
!5675 = !{i64 2147583997, i64 2147584040, i64 2147584080}
!5676 = !DILocation(line: 81, column: 1, scope: !5534)
!5677 = !{i64 2147584229, i64 2147584272, i64 2147584312}
!5678 = !DILocation(line: 82, column: 1, scope: !5534)
!5679 = !{i64 2147584464, i64 2147584507, i64 2147584547}
!5680 = !DILocation(line: 83, column: 1, scope: !5534)
!5681 = !{i64 2147584714, i64 2147584757, i64 2147584797}
!5682 = !DILocation(line: 84, column: 1, scope: !5534)
!5683 = !{i64 2147584964, i64 2147585007, i64 2147585047}
!5684 = !DILocation(line: 85, column: 1, scope: !5534)
!5685 = !{i64 2147585202, i64 2147585245, i64 2147585285}
!5686 = !DILocation(line: 86, column: 1, scope: !5534)
!5687 = !{i64 2147585413, i64 2147585456, i64 2147585496}
!5688 = !DILocation(line: 87, column: 1, scope: !5534)
!5689 = !{i64 2147585630, i64 2147585673, i64 2147585713}
!5690 = !DILocation(line: 88, column: 1, scope: !5534)
!5691 = !{i64 2147585826, i64 2147585869, i64 2147585909}
!5692 = !DILocation(line: 89, column: 1, scope: !5534)
!5693 = !{i64 2147590089, i64 2147590132, i64 2147590172}
!5694 = !DILocation(line: 90, column: 1, scope: !5534)
!5695 = !{i64 2147590282, i64 2147590325, i64 2147590365}
!5696 = !DILocation(line: 91, column: 1, scope: !5534)
!5697 = !{i64 2147590490, i64 2147590533, i64 2147590573}
!5698 = !DILocation(line: 92, column: 1, scope: !5534)
!5699 = !{i64 2147590686, i64 2147590729, i64 2147590769}
!5700 = !DILocation(line: 93, column: 1, scope: !5534)
!5701 = !{i64 2147590891, i64 2147590934, i64 2147590974}
!5702 = !DILocation(line: 94, column: 1, scope: !5534)
!5703 = !{i64 2147591102, i64 2147591145, i64 2147591185}
!5704 = !DILocation(line: 95, column: 1, scope: !5534)
!5705 = !{i64 2147591301, i64 2147591344, i64 2147591384}
!5706 = !DILocation(line: 96, column: 1, scope: !5534)
!5707 = !{i64 2147591476, i64 2147591519, i64 2147591559}
!5708 = !DILocation(line: 97, column: 1, scope: !5534)
!5709 = !{i64 2147591660, i64 2147591703, i64 2147591743}
!5710 = !DILocation(line: 98, column: 1, scope: !5534)
!5711 = !{i64 2147591862, i64 2147591905, i64 2147591945}
!5712 = !DILocation(line: 99, column: 1, scope: !5534)
!5713 = !{i64 2147592061, i64 2147592104, i64 2147592144}
!5714 = !DILocation(line: 100, column: 1, scope: !5534)
!5715 = !{i64 2147592227, i64 2147592270, i64 2147592310}
!5716 = !DILocation(line: 101, column: 1, scope: !5534)
!5717 = !{i64 2147592411, i64 2147592454, i64 2147592494}
!5718 = !DILocation(line: 102, column: 1, scope: !5534)
!5719 = !{i64 2147592601, i64 2147592644, i64 2147592684}
!5720 = !DILocation(line: 103, column: 1, scope: !5534)
!5721 = !{i64 2147592785, i64 2147592828, i64 2147592868}
!5722 = !DILocation(line: 104, column: 1, scope: !5534)
!5723 = !{i64 2147592999, i64 2147593042, i64 2147593082}
!5724 = !DILocation(line: 105, column: 1, scope: !5534)
!5725 = !{i64 2147593210, i64 2147593253, i64 2147593293}
!5726 = !DILocation(line: 106, column: 1, scope: !5534)
!5727 = !{i64 2147593433, i64 2147593476, i64 2147593516}
!5728 = !DILocation(line: 107, column: 1, scope: !5534)
!5729 = !{i64 2147593617, i64 2147593660, i64 2147593700}
!5730 = !DILocation(line: 108, column: 1, scope: !5534)
!5731 = !{i64 2147593831, i64 2147593874, i64 2147593914}
!5732 = !DILocation(line: 109, column: 1, scope: !5534)
!5733 = !{i64 2147593997, i64 2147594040, i64 2147594080}
!5734 = !DILocation(line: 110, column: 1, scope: !5534)
!5735 = !{i64 2147594178, i64 2147594221, i64 2147594261}
!5736 = !DILocation(line: 111, column: 1, scope: !5534)
!5737 = !{i64 2147594371, i64 2147594414, i64 2147594454}
!5738 = !DILocation(line: 112, column: 1, scope: !5534)
!5739 = !{i64 2147594597, i64 2147594640, i64 2147594680}
!5740 = !DILocation(line: 113, column: 1, scope: !5534)
!5741 = !{i64 2147594811, i64 2147594854, i64 2147594894}
!5742 = !DILocation(line: 114, column: 1, scope: !5534)
!5743 = !{i64 2147595037, i64 2147595080, i64 2147595120}
!5744 = !DILocation(line: 115, column: 1, scope: !5534)
!5745 = !{i64 2147595254, i64 2147595297, i64 2147595337}
!5746 = !DILocation(line: 116, column: 1, scope: !5534)
!5747 = !{i64 2147595531, i64 2147595574, i64 2147595614}
!5748 = !DILocation(line: 117, column: 1, scope: !5534)
!5749 = !{i64 2147595757, i64 2147595800, i64 2147595840}
!5750 = !DILocation(line: 118, column: 1, scope: !5534)
!5751 = !{i64 2147595965, i64 2147596008, i64 2147596048}
!5752 = !DILocation(line: 119, column: 1, scope: !5534)
!5753 = !{i64 2147596161, i64 2147596204, i64 2147596244}
!5754 = !DILocation(line: 120, column: 1, scope: !5534)
!5755 = !{i64 2147596426, i64 2147596469, i64 2147596509}
!5756 = !DILocation(line: 121, column: 1, scope: !5534)
!5757 = !{i64 2147596640, i64 2147596683, i64 2147596723}
!5758 = !DILocation(line: 122, column: 1, scope: !5534)
!5759 = !{i64 2147596815, i64 2147596858, i64 2147596898}
!5760 = !DILocation(line: 123, column: 1, scope: !5534)
!5761 = !{i64 2147597069, i64 2147597112, i64 2147597152}
!5762 = !DILocation(line: 124, column: 1, scope: !5534)
!5763 = !{i64 2147597268, i64 2147597311, i64 2147597351}
!5764 = !DILocation(line: 125, column: 1, scope: !5534)
!5765 = !{i64 2147597510, i64 2147597553, i64 2147597593}
!5766 = !DILocation(line: 126, column: 1, scope: !5534)
!5767 = !{i64 2147597673, i64 2147597716, i64 2147597756}
!5768 = !DILocation(line: 127, column: 1, scope: !5534)
!5769 = !{i64 2147597860, i64 2147597903, i64 2147597943}
!5770 = !DILocation(line: 128, column: 1, scope: !5534)
!5771 = !{i64 2147598053, i64 2147598096, i64 2147598136}
!5772 = !DILocation(line: 129, column: 1, scope: !5534)
!5773 = !{i64 2147598236, i64 2147598279, i64 2147598319}
!5774 = !DILocation(line: 130, column: 1, scope: !5534)
!5775 = !{i64 2147598450, i64 2147598493, i64 2147598533}
!5776 = !DILocation(line: 131, column: 1, scope: !5534)
!5777 = !{i64 2147598661, i64 2147598704, i64 2147598744}
!5778 = !DILocation(line: 132, column: 1, scope: !5534)
!5779 = !{i64 2147598881, i64 2147598924, i64 2147598964}
!5780 = !DILocation(line: 133, column: 1, scope: !5534)
!5781 = !{i64 2147599088, i64 2147599131, i64 2147599171}
!5782 = !DILocation(line: 134, column: 1, scope: !5534)
!5783 = !{i64 2147603422, i64 2147603465, i64 2147603505}
!5784 = !DILocation(line: 135, column: 1, scope: !5534)
!5785 = !{i64 2147603670, i64 2147603713, i64 2147603753}
!5786 = !DILocation(line: 136, column: 1, scope: !5534)
!5787 = !{i64 2147603869, i64 2147603912, i64 2147603952}
!5788 = !DILocation(line: 137, column: 1, scope: !5534)
!5789 = !{i64 2147604104, i64 2147604147, i64 2147604187}
!5790 = !DILocation(line: 138, column: 1, scope: !5534)
!5791 = !{i64 2147604354, i64 2147604397, i64 2147604437}
!5792 = !DILocation(line: 139, column: 1, scope: !5534)
!5793 = !{i64 2147604556, i64 2147604599, i64 2147604639}
!5794 = !DILocation(line: 140, column: 1, scope: !5534)
!5795 = !{i64 2147604779, i64 2147604822, i64 2147604862}
!5796 = !DILocation(line: 141, column: 1, scope: !5534)
!5797 = !{i64 2147604993, i64 2147605036, i64 2147605076}
!5798 = !DILocation(line: 142, column: 1, scope: !5534)
!5799 = !{i64 2147605237, i64 2147605280, i64 2147605320}
!5800 = !DILocation(line: 143, column: 1, scope: !5534)
!5801 = !{i64 2147605466, i64 2147605509, i64 2147605549}
!5802 = !DILocation(line: 144, column: 1, scope: !5534)
!5803 = !{i64 2147605695, i64 2147605738, i64 2147605778}
!5804 = !DILocation(line: 145, column: 1, scope: !5534)
!5805 = !{i64 2147605903, i64 2147605946, i64 2147605986}
!5806 = !DILocation(line: 146, column: 1, scope: !5534)
!5807 = !{i64 2147606141, i64 2147606184, i64 2147606224}
!5808 = !DILocation(line: 147, column: 1, scope: !5534)
!5809 = !{i64 2147606367, i64 2147606410, i64 2147606450}
!5810 = !DILocation(line: 148, column: 1, scope: !5534)
!5811 = !{i64 2147606626, i64 2147606669, i64 2147606709}
!5812 = !DILocation(line: 149, column: 1, scope: !5534)
!5813 = !{i64 2147606846, i64 2147606889, i64 2147606929}
!5814 = !DILocation(line: 150, column: 1, scope: !5534)
!5815 = !{i64 2147607078, i64 2147607121, i64 2147607161}
!5816 = !DILocation(line: 151, column: 1, scope: !5534)
!5817 = !{i64 2147607319, i64 2147607362, i64 2147607402}
!5818 = !DILocation(line: 152, column: 1, scope: !5534)
!5819 = !{i64 2147607560, i64 2147607603, i64 2147607643}
!5820 = !DILocation(line: 153, column: 1, scope: !5534)
!5821 = !{i64 2147607783, i64 2147607826, i64 2147607866}
!5822 = !DILocation(line: 154, column: 1, scope: !5534)
!5823 = !{i64 2147608000, i64 2147608043, i64 2147608083}
!5824 = !DILocation(line: 155, column: 1, scope: !5534)
!5825 = !{i64 2147608241, i64 2147608284, i64 2147608324}
!5826 = !DILocation(line: 156, column: 1, scope: !5534)
!5827 = !{i64 2147608428, i64 2147608471, i64 2147608511}
!5828 = !DILocation(line: 157, column: 1, scope: !5534)
!5829 = !{i64 2147608615, i64 2147608658, i64 2147608698}
!5830 = !DILocation(line: 158, column: 1, scope: !5534)
!5831 = !{i64 2147608778, i64 2147608821, i64 2147608861}
!5832 = !DILocation(line: 159, column: 1, scope: !5534)
!5833 = !{i64 2147609037, i64 2147609080, i64 2147609120}
!5834 = !DILocation(line: 160, column: 1, scope: !5534)
!5835 = !{i64 2147609260, i64 2147609303, i64 2147609343}
!5836 = !DILocation(line: 161, column: 1, scope: !5534)
!5837 = !{i64 2147609489, i64 2147609532, i64 2147609572}
!5838 = !DILocation(line: 162, column: 1, scope: !5534)
!5839 = !{i64 2147609685, i64 2147609728, i64 2147609768}
!5840 = !DILocation(line: 163, column: 1, scope: !5534)
!5841 = !{i64 2147609897, i64 2147609940, i64 2147609980}
!5842 = !DILocation(line: 164, column: 1, scope: !5534)
!5843 = !{i64 2147610118, i64 2147610161, i64 2147610201}
!5844 = !DILocation(line: 165, column: 1, scope: !5534)
!5845 = !{i64 2147610332, i64 2147610375, i64 2147610415}
!5846 = !DILocation(line: 166, column: 1, scope: !5534)
!5847 = !{i64 2147610522, i64 2147610565, i64 2147610605}
!5848 = !DILocation(line: 167, column: 1, scope: !5534)
!5849 = !{i64 2147610721, i64 2147610764, i64 2147610804}
!5850 = !DILocation(line: 168, column: 1, scope: !5534)
!5851 = !{i64 2147610926, i64 2147610969, i64 2147611009}
!5852 = !DILocation(line: 169, column: 1, scope: !5534)
!5853 = !{i64 2147611146, i64 2147611189, i64 2147611229}
!5854 = !DILocation(line: 170, column: 1, scope: !5534)
!5855 = !{i64 2147611347, i64 2147611390, i64 2147611430}
!5856 = !DILocation(line: 171, column: 1, scope: !5534)
!5857 = !{i64 2147611546, i64 2147611589, i64 2147611629}
!5858 = !DILocation(line: 172, column: 1, scope: !5534)
!5859 = !{i64 2147611751, i64 2147611794, i64 2147611834}
!5860 = !DILocation(line: 173, column: 1, scope: !5534)
!5861 = !{i64 2147611920, i64 2147611963, i64 2147612003}
!5862 = !DILocation(line: 174, column: 1, scope: !5534)
!5863 = !{i64 2147616165, i64 2147616208, i64 2147616248}
!5864 = !DILocation(line: 175, column: 1, scope: !5534)
!5865 = !{i64 2147616349, i64 2147616392, i64 2147616432}
!5866 = !DILocation(line: 176, column: 1, scope: !5534)
!5867 = !{i64 2147616536, i64 2147616579, i64 2147616619}
!5868 = !DILocation(line: 177, column: 1, scope: !5534)
!5869 = !{i64 2147616720, i64 2147616763, i64 2147616803}
!5870 = !DILocation(line: 178, column: 1, scope: !5534)
!5871 = !{i64 2147616958, i64 2147617001, i64 2147617041}
!5872 = !DILocation(line: 179, column: 1, scope: !5534)
!5873 = !{i64 2147617188, i64 2147617231, i64 2147617271}
!5874 = !DILocation(line: 180, column: 1, scope: !5534)
!5875 = !{i64 2147617417, i64 2147617460, i64 2147617500}
!5876 = !DILocation(line: 181, column: 1, scope: !5534)
!5877 = !{i64 2147617604, i64 2147617647, i64 2147617687}
!5878 = !DILocation(line: 182, column: 1, scope: !5534)
!5879 = !{i64 2147617800, i64 2147617843, i64 2147617883}
!5880 = !DILocation(line: 183, column: 1, scope: !5534)
!5881 = !{i64 2147618008, i64 2147618051, i64 2147618091}
!5882 = !DILocation(line: 184, column: 1, scope: !5534)
!5883 = !{i64 2147618220, i64 2147618263, i64 2147618303}
!5884 = !DILocation(line: 185, column: 1, scope: !5534)
!5885 = !{i64 2147618419, i64 2147618462, i64 2147618502}
!5886 = !DILocation(line: 186, column: 1, scope: !5534)
!5887 = !{i64 2147618657, i64 2147618700, i64 2147618740}
!5888 = !DILocation(line: 187, column: 1, scope: !5534)
!5889 = !{i64 2147618853, i64 2147618896, i64 2147618936}
!5890 = !DILocation(line: 188, column: 1, scope: !5534)
!5891 = !{i64 2147619055, i64 2147619098, i64 2147619138}
!5892 = !DILocation(line: 189, column: 1, scope: !5534)
!5893 = !{i64 2147619248, i64 2147619291, i64 2147619331}
!5894 = !DILocation(line: 190, column: 1, scope: !5534)
!5895 = !{i64 2147619482, i64 2147619525, i64 2147619565}
!5896 = !DILocation(line: 191, column: 1, scope: !5534)
!5897 = !{i64 2147619645, i64 2147619688, i64 2147619728}
!5898 = !DILocation(line: 192, column: 1, scope: !5534)
!5899 = !{i64 2147619884, i64 2147619927, i64 2147619967}
!5900 = !DILocation(line: 193, column: 1, scope: !5534)
!5901 = !{i64 2147620123, i64 2147620166, i64 2147620206}
!5902 = !DILocation(line: 194, column: 1, scope: !5534)
!5903 = !{i64 2147620359, i64 2147620402, i64 2147620442}
!5904 = !DILocation(line: 195, column: 1, scope: !5534)
!5905 = !{i64 2147620589, i64 2147620632, i64 2147620672}
!5906 = !DILocation(line: 196, column: 1, scope: !5534)
!5907 = !{i64 2147620776, i64 2147620819, i64 2147620859}
!5908 = !DILocation(line: 197, column: 1, scope: !5534)
!5909 = !{i64 2147620975, i64 2147621018, i64 2147621058}
!5910 = !DILocation(line: 198, column: 1, scope: !5534)
!5911 = !{i64 2147621246, i64 2147621289, i64 2147621329}
!5912 = !DILocation(line: 199, column: 1, scope: !5534)
!5913 = !{i64 2147621421, i64 2147621464, i64 2147621504}
!5914 = !DILocation(line: 200, column: 1, scope: !5534)
!5915 = !{i64 2147621655, i64 2147621698, i64 2147621738}
!5916 = !DILocation(line: 201, column: 1, scope: !5534)
!5917 = !{i64 2147621863, i64 2147621906, i64 2147621946}
!5918 = !DILocation(line: 202, column: 1, scope: !5534)
!5919 = !{i64 2147622081, i64 2147622124, i64 2147622164}
!5920 = !DILocation(line: 203, column: 1, scope: !5534)
!5921 = !{i64 2147622271, i64 2147622314, i64 2147622354}
!5922 = !DILocation(line: 204, column: 1, scope: !5534)
!5923 = !{i64 2147622467, i64 2147622510, i64 2147622550}
!5924 = !DILocation(line: 205, column: 1, scope: !5534)
!5925 = !{i64 2147622673, i64 2147622716, i64 2147622756}
!5926 = !DILocation(line: 206, column: 1, scope: !5534)
!5927 = !{i64 2147622878, i64 2147622921, i64 2147622961}
!5928 = !DILocation(line: 207, column: 1, scope: !5534)
!5929 = !{i64 2147623104, i64 2147623147, i64 2147623187}
!5930 = !DILocation(line: 208, column: 1, scope: !5534)
!5931 = !{i64 2147623336, i64 2147623379, i64 2147623419}
!5932 = !DILocation(line: 209, column: 1, scope: !5534)
!5933 = !{i64 2147623520, i64 2147623563, i64 2147623603}
!5934 = !DILocation(line: 210, column: 1, scope: !5534)
!5935 = !{i64 2147623729, i64 2147623772, i64 2147623812}
!5936 = !DILocation(line: 211, column: 1, scope: !5534)
!5937 = !{i64 2147623913, i64 2147623956, i64 2147623996}
!5938 = !DILocation(line: 212, column: 1, scope: !5534)
!5939 = !{i64 2147624139, i64 2147624182, i64 2147624222}
!5940 = !DILocation(line: 213, column: 1, scope: !5534)
!5941 = !{i64 2147624365, i64 2147624408, i64 2147624448}
!5942 = !DILocation(line: 214, column: 1, scope: !5534)
!5943 = !{i64 2147624591, i64 2147624634, i64 2147624674}
!5944 = !DILocation(line: 215, column: 1, scope: !5534)
!5945 = !{i64 2147624817, i64 2147624860, i64 2147624900}
!5946 = !DILocation(line: 216, column: 1, scope: !5534)
!5947 = !{i64 2147625043, i64 2147625086, i64 2147625126}
!5948 = !DILocation(line: 217, column: 1, scope: !5534)
!5949 = !{i64 2147629336, i64 2147629379, i64 2147629419}
!5950 = !DILocation(line: 218, column: 1, scope: !5534)
!5951 = !{i64 2147629574, i64 2147629617, i64 2147629657}
!5952 = !DILocation(line: 219, column: 1, scope: !5534)
!5953 = !{i64 2147629794, i64 2147629837, i64 2147629877}
!5954 = !DILocation(line: 220, column: 1, scope: !5534)
!5955 = !{i64 2147630038, i64 2147630081, i64 2147630121}
!5956 = !DILocation(line: 221, column: 1, scope: !5534)
!5957 = !{i64 2147630279, i64 2147630322, i64 2147630362}
!5958 = !DILocation(line: 222, column: 1, scope: !5534)
!5959 = !{i64 2147630514, i64 2147630557, i64 2147630597}
!5960 = !DILocation(line: 223, column: 1, scope: !5534)
!5961 = !{i64 2147630746, i64 2147630789, i64 2147630829}
!5962 = !DILocation(line: 224, column: 1, scope: !5534)
!5963 = !{i64 2147630948, i64 2147630991, i64 2147631031}
!5964 = !DILocation(line: 225, column: 1, scope: !5534)
!5965 = !{i64 2147631198, i64 2147631241, i64 2147631281}
!5966 = !DILocation(line: 226, column: 1, scope: !5534)
!5967 = !{i64 2147631436, i64 2147631479, i64 2147631519}
!5968 = !DILocation(line: 227, column: 1, scope: !5534)
!5969 = !{i64 2147631620, i64 2147631663, i64 2147631703}
!5970 = !DILocation(line: 228, column: 1, scope: !5534)
!5971 = !{i64 2147631843, i64 2147631886, i64 2147631926}
!5972 = !DILocation(line: 229, column: 1, scope: !5534)
!5973 = !{i64 2147632081, i64 2147632124, i64 2147632164}
!5974 = !DILocation(line: 230, column: 1, scope: !5534)
!5975 = !{i64 2147632319, i64 2147632362, i64 2147632402}
!5976 = !DILocation(line: 231, column: 1, scope: !5534)
!5977 = !{i64 2147632512, i64 2147632555, i64 2147632595}
!5978 = !DILocation(line: 232, column: 1, scope: !5534)
!5979 = !{i64 2147632765, i64 2147632808, i64 2147632848}
!5980 = !DILocation(line: 233, column: 1, scope: !5534)
!5981 = !{i64 2147632979, i64 2147633022, i64 2147633062}
!5982 = !DILocation(line: 234, column: 1, scope: !5534)
!5983 = !{i64 2147633187, i64 2147633230, i64 2147633270}
!5984 = !DILocation(line: 235, column: 1, scope: !5534)
!5985 = !{i64 2147633377, i64 2147633420, i64 2147633460}
!5986 = !DILocation(line: 236, column: 1, scope: !5534)
!5987 = !{i64 2147633591, i64 2147633634, i64 2147633674}
!5988 = !DILocation(line: 237, column: 1, scope: !5534)
!5989 = !{i64 2147633853, i64 2147633896, i64 2147633936}
!5990 = !DILocation(line: 238, column: 1, scope: !5534)
!5991 = !{i64 2147634064, i64 2147634107, i64 2147634147}
!5992 = !DILocation(line: 239, column: 1, scope: !5534)
!5993 = !{i64 2147634308, i64 2147634351, i64 2147634391}
!5994 = !DILocation(line: 240, column: 1, scope: !5534)
!5995 = !{i64 2147634519, i64 2147634562, i64 2147634602}
!5996 = !DILocation(line: 241, column: 1, scope: !5534)
!5997 = !{i64 2147634748, i64 2147634791, i64 2147634831}
!5998 = !DILocation(line: 242, column: 1, scope: !5534)
!5999 = !{i64 2147635013, i64 2147635056, i64 2147635096}
!6000 = !DILocation(line: 243, column: 1, scope: !5534)
!6001 = !{i64 2147635218, i64 2147635261, i64 2147635301}
!6002 = !DILocation(line: 244, column: 1, scope: !5534)
!6003 = !{i64 2147635414, i64 2147635457, i64 2147635497}
!6004 = !DILocation(line: 245, column: 1, scope: !5534)
!6005 = !{i64 2147635637, i64 2147635680, i64 2147635720}
!6006 = !DILocation(line: 246, column: 1, scope: !5534)
!6007 = !{i64 2147635800, i64 2147635843, i64 2147635883}
!6008 = !DILocation(line: 247, column: 1, scope: !5534)
!6009 = !{i64 2147636005, i64 2147636048, i64 2147636088}
!6010 = !DILocation(line: 248, column: 1, scope: !5534)
!6011 = !{i64 2147636225, i64 2147636268, i64 2147636308}
!6012 = !DILocation(line: 249, column: 1, scope: !5534)
!6013 = !{i64 2147636439, i64 2147636482, i64 2147636522}
!6014 = !DILocation(line: 250, column: 1, scope: !5534)
!6015 = !{i64 2147636653, i64 2147636696, i64 2147636736}
!6016 = !DILocation(line: 251, column: 1, scope: !5534)
!6017 = !{i64 2147636873, i64 2147636916, i64 2147636956}
!6018 = !DILocation(line: 252, column: 1, scope: !5534)
!6019 = !{i64 2147637084, i64 2147637127, i64 2147637167}
!6020 = !DILocation(line: 253, column: 1, scope: !5534)
!6021 = !{i64 2147637277, i64 2147637320, i64 2147637360}
!6022 = !DILocation(line: 254, column: 1, scope: !5534)
!6023 = !{i64 2147637476, i64 2147637519, i64 2147637559}
!6024 = !DILocation(line: 255, column: 1, scope: !5534)
!6025 = !{i64 2147637648, i64 2147637691, i64 2147637731}
!6026 = !DILocation(line: 256, column: 1, scope: !5534)
!6027 = !{i64 2147641902, i64 2147641945, i64 2147641985}
!6028 = !DILocation(line: 257, column: 1, scope: !5534)
!6029 = !{i64 2147642098, i64 2147642141, i64 2147642181}
!6030 = !DILocation(line: 258, column: 1, scope: !5534)
!6031 = !{i64 2147642325, i64 2147642368, i64 2147642408}
!6032 = !DILocation(line: 259, column: 1, scope: !5534)
!6033 = !{i64 2147642542, i64 2147642585, i64 2147642625}
!6034 = !DILocation(line: 260, column: 1, scope: !5534)
!6035 = !{i64 2147642834, i64 2147642877, i64 2147642917}
!6036 = !DILocation(line: 261, column: 1, scope: !5534)
!6037 = !{i64 2147643066, i64 2147643109, i64 2147643149}
!6038 = !DILocation(line: 262, column: 1, scope: !5534)
!6039 = !{i64 2147643283, i64 2147643326, i64 2147643366}
!6040 = !DILocation(line: 263, column: 1, scope: !5534)
!6041 = !{i64 2147643490, i64 2147643533, i64 2147643573}
!6042 = !DILocation(line: 264, column: 1, scope: !5534)
!6043 = !{i64 2147643691, i64 2147643734, i64 2147643774}
!6044 = !DILocation(line: 265, column: 1, scope: !5534)
!6045 = !{i64 2147643923, i64 2147643966, i64 2147644006}
!6046 = !DILocation(line: 266, column: 1, scope: !5534)
!6047 = !{i64 2147644131, i64 2147644174, i64 2147644214}
!6048 = !DILocation(line: 267, column: 1, scope: !5534)
!6049 = !{i64 2147644321, i64 2147644364, i64 2147644404}
!6050 = !DILocation(line: 268, column: 1, scope: !5534)
!6051 = !{i64 2147644547, i64 2147644590, i64 2147644630}
!6052 = !DILocation(line: 269, column: 1, scope: !5534)
!6053 = !{i64 2147644736, i64 2147644779, i64 2147644819}
!6054 = !DILocation(line: 270, column: 1, scope: !5534)
!6055 = !{i64 2147645007, i64 2147645050, i64 2147645090}
!6056 = !DILocation(line: 271, column: 1, scope: !5534)
!6057 = !{i64 2147645227, i64 2147645270, i64 2147645310}
!6058 = !DILocation(line: 272, column: 1, scope: !5534)
!6059 = !{i64 2147645480, i64 2147645523, i64 2147645563}
!6060 = !DILocation(line: 273, column: 1, scope: !5534)
!6061 = !{i64 2147645688, i64 2147645731, i64 2147645771}
!6062 = !DILocation(line: 274, column: 1, scope: !5534)
!6063 = !{i64 2147645920, i64 2147645963, i64 2147646003}
!6064 = !DILocation(line: 275, column: 1, scope: !5534)
!6065 = !{i64 2147646131, i64 2147646174, i64 2147646214}
!6066 = !DILocation(line: 276, column: 1, scope: !5534)
!6067 = !{i64 2147646321, i64 2147646364, i64 2147646404}
!6068 = !DILocation(line: 277, column: 1, scope: !5534)
!6069 = !{i64 2147646535, i64 2147646578, i64 2147646618}
!6070 = !DILocation(line: 278, column: 1, scope: !5534)
!6071 = !{i64 2147646734, i64 2147646777, i64 2147646817}
!6072 = !DILocation(line: 279, column: 1, scope: !5534)
!6073 = !{i64 2147646921, i64 2147646964, i64 2147647004}
!6074 = !DILocation(line: 280, column: 1, scope: !5534)
!6075 = !{i64 2147647129, i64 2147647172, i64 2147647212}
!6076 = !DILocation(line: 281, column: 1, scope: !5534)
!6077 = !{i64 2147647358, i64 2147647401, i64 2147647441}
!6078 = !DILocation(line: 282, column: 1, scope: !5534)
!6079 = !{i64 2147647560, i64 2147647603, i64 2147647643}
!6080 = !DILocation(line: 283, column: 1, scope: !5534)
!6081 = !{i64 2147647759, i64 2147647802, i64 2147647842}
!6082 = !DILocation(line: 284, column: 1, scope: !5534)
!6083 = !{i64 2147647976, i64 2147648019, i64 2147648059}
!6084 = !DILocation(line: 286, column: 1, scope: !5534)
!6085 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !184, file: !184, line: 30, type: !191, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6086)
!6086 = !{!6087, !6088}
!6087 = !DILocalVariable(name: "arg", arg: 1, scope: !6085, file: !184, line: 30, type: !193)
!6088 = !DILocalVariable(name: "key", scope: !6085, file: !184, line: 32, type: !137)
!6089 = !DILocation(line: 0, scope: !6085)
!6090 = !DILocation(line: 37, column: 2, scope: !6085)
!6091 = !DILocation(line: 38, column: 2, scope: !6085)
!6092 = !DILocation(line: 55, column: 2, scope: !6093, inlinedAt: !6100)
!6093 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6094, file: !6094, line: 42, type: !6095, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6097)
!6094 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6095 = !DISubroutineType(types: !6096)
!6096 = !{!32}
!6097 = !{!6098, !6099}
!6098 = !DILocalVariable(name: "key", scope: !6093, file: !6094, line: 44, type: !32)
!6099 = !DILocalVariable(name: "tmp", scope: !6093, file: !6094, line: 53, type: !32)
!6100 = distinct !DILocation(line: 40, column: 8, scope: !6085)
!6101 = !{i64 1826709}
!6102 = !DILocation(line: 0, scope: !6093, inlinedAt: !6100)
!6103 = !DILocalVariable(name: "key", arg: 1, scope: !6104, file: !6094, line: 84, type: !32)
!6104 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6094, file: !6094, line: 84, type: !6105, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6107)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{null, !32}
!6107 = !{!6103}
!6108 = !DILocation(line: 0, scope: !6104, inlinedAt: !6109)
!6109 = distinct !DILocation(line: 47, column: 2, scope: !6085)
!6110 = !DILocation(line: 95, column: 2, scope: !6104, inlinedAt: !6109)
!6111 = !{i64 1827526}
!6112 = !DILocation(line: 51, column: 18, scope: !6085)
!6113 = !DILocation(line: 53, column: 2, scope: !6085)
!6114 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6115, file: !6115, line: 1609, type: !2802, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6115 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6116 = !DILocation(line: 1611, column: 3, scope: !6114)
!6117 = !DILocation(line: 1612, column: 1, scope: !6114)
!6118 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6115, file: !6115, line: 1629, type: !2802, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6119 = !DILocation(line: 1631, column: 3, scope: !6118)
!6120 = !DILocation(line: 1632, column: 1, scope: !6118)
!6121 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !225, file: !225, line: 26, type: !231, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !222, retainedNodes: !6122)
!6122 = !{!6123}
!6123 = !DILocalVariable(name: "dev", arg: 1, scope: !6121, file: !225, line: 26, type: !233)
!6124 = !DILocation(line: 0, scope: !6121)
!6125 = !DILocation(line: 68, column: 2, scope: !6121)
!6126 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6127, file: !6127, line: 57, type: !6128, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2263, retainedNodes: !6174)
!6127 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6128 = !DISubroutineType(types: !6129)
!6129 = !{null, !32, !6130}
!6130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6131, size: 32)
!6131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6132)
!6132 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2383, line: 141, baseType: !6133)
!6133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2383, line: 97, size: 256, elements: !6134)
!6134 = !{!6135}
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6133, file: !2383, line: 107, baseType: !6136, size: 256)
!6136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2383, line: 98, size: 256, elements: !6137)
!6137 = !{!6138, !6143, !6148, !6153, !6158, !6163, !6168, !6173}
!6138 = !DIDerivedType(tag: DW_TAG_member, scope: !6136, file: !2383, line: 99, baseType: !6139, size: 32)
!6139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6136, file: !2383, line: 99, size: 32, elements: !6140)
!6140 = !{!6141, !6142}
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6139, file: !2383, line: 99, baseType: !137, size: 32)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6139, file: !2383, line: 99, baseType: !137, size: 32)
!6143 = !DIDerivedType(tag: DW_TAG_member, scope: !6136, file: !2383, line: 100, baseType: !6144, size: 32, offset: 32)
!6144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6136, file: !2383, line: 100, size: 32, elements: !6145)
!6145 = !{!6146, !6147}
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6144, file: !2383, line: 100, baseType: !137, size: 32)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6144, file: !2383, line: 100, baseType: !137, size: 32)
!6148 = !DIDerivedType(tag: DW_TAG_member, scope: !6136, file: !2383, line: 101, baseType: !6149, size: 32, offset: 64)
!6149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6136, file: !2383, line: 101, size: 32, elements: !6150)
!6150 = !{!6151, !6152}
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6149, file: !2383, line: 101, baseType: !137, size: 32)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6149, file: !2383, line: 101, baseType: !137, size: 32)
!6153 = !DIDerivedType(tag: DW_TAG_member, scope: !6136, file: !2383, line: 102, baseType: !6154, size: 32, offset: 96)
!6154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6136, file: !2383, line: 102, size: 32, elements: !6155)
!6155 = !{!6156, !6157}
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6154, file: !2383, line: 102, baseType: !137, size: 32)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6154, file: !2383, line: 102, baseType: !137, size: 32)
!6158 = !DIDerivedType(tag: DW_TAG_member, scope: !6136, file: !2383, line: 103, baseType: !6159, size: 32, offset: 128)
!6159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6136, file: !2383, line: 103, size: 32, elements: !6160)
!6160 = !{!6161, !6162}
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6159, file: !2383, line: 103, baseType: !137, size: 32)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6159, file: !2383, line: 103, baseType: !137, size: 32)
!6163 = !DIDerivedType(tag: DW_TAG_member, scope: !6136, file: !2383, line: 104, baseType: !6164, size: 32, offset: 160)
!6164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6136, file: !2383, line: 104, size: 32, elements: !6165)
!6165 = !{!6166, !6167}
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6164, file: !2383, line: 104, baseType: !137, size: 32)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6164, file: !2383, line: 104, baseType: !137, size: 32)
!6168 = !DIDerivedType(tag: DW_TAG_member, scope: !6136, file: !2383, line: 105, baseType: !6169, size: 32, offset: 192)
!6169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6136, file: !2383, line: 105, size: 32, elements: !6170)
!6170 = !{!6171, !6172}
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6169, file: !2383, line: 105, baseType: !137, size: 32)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6169, file: !2383, line: 105, baseType: !137, size: 32)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6136, file: !2383, line: 106, baseType: !137, size: 32, offset: 224)
!6174 = !{!6175, !6176}
!6175 = !DILocalVariable(name: "reason", arg: 1, scope: !6126, file: !6127, line: 57, type: !32)
!6176 = !DILocalVariable(name: "esf", arg: 2, scope: !6126, file: !6127, line: 57, type: !6130)
!6177 = !DILocation(line: 0, scope: !6126)
!6178 = !DILocation(line: 63, column: 2, scope: !6126)
!6179 = !DILocation(line: 64, column: 1, scope: !6126)
!6180 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6127, file: !6127, line: 82, type: !6181, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2263, retainedNodes: !6196)
!6181 = !DISubroutineType(types: !6182)
!6182 = !{null, !6130, !6183}
!6183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6184, size: 32)
!6184 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6185)
!6185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6186)
!6186 = !{!6187, !6188, !6189, !6190, !6191, !6192, !6193, !6194, !6195}
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6185, file: !334, line: 26, baseType: !137, size: 32)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6185, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6185, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6185, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6185, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6185, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6185, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6185, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6185, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6196 = !{!6197, !6198, !6199}
!6197 = !DILocalVariable(name: "esf", arg: 1, scope: !6180, file: !6127, line: 82, type: !6130)
!6198 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6180, file: !6127, line: 82, type: !6183)
!6199 = !DILocalVariable(name: "reason", scope: !6180, file: !6127, line: 88, type: !32)
!6200 = !DILocation(line: 0, scope: !6180)
!6201 = !DILocation(line: 88, column: 35, scope: !6180)
!6202 = !DILocation(line: 108, column: 2, scope: !6180)
!6203 = !DILocation(line: 131, column: 1, scope: !6180)
!6204 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6127, file: !6127, line: 133, type: !6205, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2263, retainedNodes: !6207)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{null, !102}
!6207 = !{!6208, !6209, !6210}
!6208 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6204, file: !6127, line: 133, type: !102)
!6209 = !DILocalVariable(name: "ssf_contents", scope: !6204, file: !6127, line: 135, type: !149)
!6210 = !DILocalVariable(name: "oops_esf", scope: !6204, file: !6127, line: 136, type: !6132)
!6211 = !DILocation(line: 0, scope: !6204)
!6212 = !DILocation(line: 136, column: 2, scope: !6204)
!6213 = !DILocation(line: 136, column: 15, scope: !6204)
!6214 = !DILocation(line: 139, column: 22, scope: !6204)
!6215 = !DILocation(line: 139, column: 17, scope: !6204)
!6216 = !DILocation(line: 139, column: 20, scope: !6204)
!6217 = !DILocation(line: 141, column: 2, scope: !6204)
!6218 = !DILocation(line: 142, column: 2, scope: !6204)
!6219 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6220, file: !6220, line: 40, type: !6105, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !6221)
!6220 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6221 = !{!6222}
!6222 = !DILocalVariable(name: "irq", arg: 1, scope: !6219, file: !6220, line: 40, type: !32)
!6223 = !DILocation(line: 0, scope: !6219)
!6224 = !DILocation(line: 42, column: 2, scope: !6219)
!6225 = !DILocation(line: 43, column: 1, scope: !6219)
!6226 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !402, file: !402, line: 1684, type: !6227, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !6229)
!6227 = !DISubroutineType(types: !6228)
!6228 = !{null, !638}
!6229 = !{!6230}
!6230 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6226, file: !402, line: 1684, type: !638)
!6231 = !DILocation(line: 0, scope: !6226)
!6232 = !DILocation(line: 1686, column: 23, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6226, file: !402, line: 1686, column: 7)
!6234 = !DILocation(line: 1686, column: 7, scope: !6226)
!6235 = !DILocation(line: 1688, column: 5, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6233, file: !402, line: 1687, column: 3)
!6237 = !{i64 2150355291}
!6238 = !DILocation(line: 1689, column: 81, scope: !6236)
!6239 = !DILocation(line: 1689, column: 60, scope: !6236)
!6240 = !DILocation(line: 1689, column: 34, scope: !6236)
!6241 = !DILocation(line: 1689, column: 5, scope: !6236)
!6242 = !DILocation(line: 1689, column: 43, scope: !6236)
!6243 = !DILocation(line: 1690, column: 5, scope: !6236)
!6244 = !{i64 2150355405}
!6245 = !DILocation(line: 1691, column: 3, scope: !6236)
!6246 = !DILocation(line: 1692, column: 1, scope: !6226)
!6247 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6220, file: !6220, line: 45, type: !6105, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !6248)
!6248 = !{!6249}
!6249 = !DILocalVariable(name: "irq", arg: 1, scope: !6247, file: !6220, line: 45, type: !32)
!6250 = !DILocation(line: 0, scope: !6247)
!6251 = !DILocation(line: 47, column: 2, scope: !6247)
!6252 = !DILocation(line: 48, column: 1, scope: !6247)
!6253 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !402, file: !402, line: 1722, type: !6227, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !6254)
!6254 = !{!6255}
!6255 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6253, file: !402, line: 1722, type: !638)
!6256 = !DILocation(line: 0, scope: !6253)
!6257 = !DILocation(line: 1724, column: 23, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6253, file: !402, line: 1724, column: 7)
!6259 = !DILocation(line: 1724, column: 7, scope: !6253)
!6260 = !DILocation(line: 1726, column: 81, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6258, file: !402, line: 1725, column: 3)
!6262 = !DILocation(line: 1726, column: 60, scope: !6261)
!6263 = !DILocation(line: 1726, column: 34, scope: !6261)
!6264 = !DILocation(line: 1726, column: 5, scope: !6261)
!6265 = !DILocation(line: 1726, column: 43, scope: !6261)
!6266 = !DILocation(line: 271, column: 3, scope: !6267, inlinedAt: !6269)
!6267 = distinct !DISubprogram(name: "__DSB", scope: !6268, file: !6268, line: 269, type: !2802, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !162)
!6268 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6269 = distinct !DILocation(line: 1727, column: 5, scope: !6261)
!6270 = !{i64 2809674}
!6271 = !DILocation(line: 260, column: 3, scope: !6272, inlinedAt: !6273)
!6272 = distinct !DISubprogram(name: "__ISB", scope: !6268, file: !6268, line: 258, type: !2802, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !162)
!6273 = distinct !DILocation(line: 1728, column: 5, scope: !6261)
!6274 = !{i64 2809391}
!6275 = !DILocation(line: 1729, column: 3, scope: !6261)
!6276 = !DILocation(line: 1730, column: 1, scope: !6253)
!6277 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6220, file: !6220, line: 50, type: !6278, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !6280)
!6278 = !DISubroutineType(types: !6279)
!6279 = !{!103, !32}
!6280 = !{!6281}
!6281 = !DILocalVariable(name: "irq", arg: 1, scope: !6277, file: !6220, line: 50, type: !32)
!6282 = !DILocation(line: 0, scope: !6277)
!6283 = !DILocation(line: 52, column: 20, scope: !6277)
!6284 = !DILocation(line: 52, column: 9, scope: !6277)
!6285 = !DILocation(line: 52, column: 41, scope: !6277)
!6286 = !DILocation(line: 52, column: 39, scope: !6277)
!6287 = !DILocation(line: 52, column: 2, scope: !6277)
!6288 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6220, file: !6220, line: 64, type: !6289, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !6291)
!6289 = !DISubroutineType(types: !6290)
!6290 = !{null, !32, !32, !137}
!6291 = !{!6292, !6293, !6294}
!6292 = !DILocalVariable(name: "irq", arg: 1, scope: !6288, file: !6220, line: 64, type: !32)
!6293 = !DILocalVariable(name: "prio", arg: 2, scope: !6288, file: !6220, line: 64, type: !32)
!6294 = !DILocalVariable(name: "flags", arg: 3, scope: !6288, file: !6220, line: 64, type: !137)
!6295 = !DILocation(line: 0, scope: !6288)
!6296 = !DILocation(line: 83, column: 8, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6298, file: !6220, line: 82, column: 9)
!6298 = distinct !DILexicalBlock(scope: !6288, file: !6220, line: 76, column: 6)
!6299 = !DILocation(line: 95, column: 2, scope: !6288)
!6300 = !DILocation(line: 96, column: 1, scope: !6288)
!6301 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6302, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !6304)
!6302 = !DISubroutineType(types: !6303)
!6303 = !{null, !638, !137}
!6304 = !{!6305, !6306}
!6305 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6301, file: !402, line: 1814, type: !638)
!6306 = !DILocalVariable(name: "priority", arg: 2, scope: !6301, file: !402, line: 1814, type: !137)
!6307 = !DILocation(line: 0, scope: !6301)
!6308 = !DILocation(line: 0, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6301, file: !402, line: 1816, column: 7)
!6310 = !DILocation(line: 1816, column: 7, scope: !6301)
!6311 = !DILocation(line: 1824, column: 1, scope: !6301)
!6312 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6220, file: !6220, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !6313)
!6313 = !{!6314}
!6314 = !DILocalVariable(name: "unused", arg: 1, scope: !6312, file: !6220, line: 155, type: !13)
!6315 = !DILocation(line: 0, scope: !6312)
!6316 = !DILocation(line: 159, column: 2, scope: !6312)
!6317 = !DILocation(line: 160, column: 1, scope: !6312)
!6318 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6319, file: !6319, line: 87, type: !2802, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !162)
!6319 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6320 = !DILocation(line: 89, column: 2, scope: !6318)
!6321 = !DILocation(line: 90, column: 2, scope: !6318)
!6322 = !DILocation(line: 91, column: 1, scope: !6318)
!6323 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6319, file: !6319, line: 23, type: !2802, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6324 = !DISubprogram(name: "z_arm_int_exit", scope: !6325, file: !6325, line: 153, type: !2802, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6325 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6326 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6327, file: !6327, line: 256, type: !2802, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !162)
!6327 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6328 = !DILocation(line: 258, column: 2, scope: !6326)
!6329 = !DILocation(line: 260, column: 2, scope: !6326)
!6330 = !DILocation(line: 262, column: 2, scope: !6326)
!6331 = !DILocation(line: 263, column: 2, scope: !6326)
!6332 = !DILocation(line: 267, column: 2, scope: !6326)
!6333 = !DILocation(line: 268, column: 2, scope: !6326)
!6334 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6327, file: !6327, line: 53, type: !2802, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !162)
!6335 = !DILocation(line: 55, column: 12, scope: !6334)
!6336 = !DILocation(line: 271, column: 3, scope: !6337, inlinedAt: !6338)
!6337 = distinct !DISubprogram(name: "__DSB", scope: !6268, file: !6268, line: 269, type: !2802, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !162)
!6338 = distinct !DILocation(line: 56, column: 2, scope: !6334)
!6339 = !{i64 2808345}
!6340 = !DILocation(line: 260, column: 3, scope: !6341, inlinedAt: !6342)
!6341 = distinct !DISubprogram(name: "__ISB", scope: !6268, file: !6268, line: 258, type: !2802, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !162)
!6342 = distinct !DILocation(line: 57, column: 2, scope: !6334)
!6343 = !{i64 2808062}
!6344 = !DILocation(line: 58, column: 1, scope: !6334)
!6345 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6327, file: !6327, line: 96, type: !2802, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !162)
!6346 = !DILocation(line: 103, column: 13, scope: !6345)
!6347 = !DILocation(line: 975, column: 3, scope: !6348, inlinedAt: !6351)
!6348 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6268, file: !6268, line: 971, type: !135, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !6349)
!6349 = !{!6350}
!6350 = !DILocalVariable(name: "result", scope: !6348, file: !6268, line: 973, type: !137)
!6351 = distinct !DILocation(line: 189, column: 16, scope: !6345)
!6352 = !{i64 2829175}
!6353 = !DILocation(line: 0, scope: !6348, inlinedAt: !6351)
!6354 = !DILocation(line: 189, column: 32, scope: !6345)
!6355 = !DILocalVariable(name: "control", arg: 1, scope: !6356, file: !6268, line: 1001, type: !137)
!6356 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6268, file: !6268, line: 1001, type: !6357, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !6359)
!6357 = !DISubroutineType(types: !6358)
!6358 = !{null, !137}
!6359 = !{!6355}
!6360 = !DILocation(line: 0, scope: !6356, inlinedAt: !6361)
!6361 = distinct !DILocation(line: 189, column: 2, scope: !6345)
!6362 = !DILocation(line: 1003, column: 3, scope: !6356, inlinedAt: !6361)
!6363 = !{i64 2829895}
!6364 = !DILocation(line: 260, column: 3, scope: !6341, inlinedAt: !6365)
!6365 = distinct !DILocation(line: 1004, column: 3, scope: !6356, inlinedAt: !6361)
!6366 = !DILocation(line: 191, column: 1, scope: !6345)
!6367 = distinct !DISubprogram(name: "arch_swap", scope: !6368, file: !6368, line: 33, type: !6278, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !6369)
!6368 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6369 = !{!6370}
!6370 = !DILocalVariable(name: "key", arg: 1, scope: !6367, file: !6368, line: 33, type: !32)
!6371 = !DILocation(line: 0, scope: !6367)
!6372 = !DILocation(line: 36, column: 2, scope: !6367)
!6373 = !DILocation(line: 36, column: 17, scope: !6367)
!6374 = !DILocation(line: 36, column: 25, scope: !6367)
!6375 = !DILocation(line: 37, column: 37, scope: !6367)
!6376 = !DILocation(line: 37, column: 17, scope: !6367)
!6377 = !DILocation(line: 37, column: 35, scope: !6367)
!6378 = !DILocation(line: 41, column: 12, scope: !6367)
!6379 = !DILocalVariable(name: "key", arg: 1, scope: !6380, file: !6094, line: 84, type: !32)
!6380 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6094, file: !6094, line: 84, type: !6105, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !6381)
!6381 = !{!6379}
!6382 = !DILocation(line: 0, scope: !6380, inlinedAt: !6383)
!6383 = distinct !DILocation(line: 44, column: 2, scope: !6367)
!6384 = !DILocation(line: 95, column: 2, scope: !6380, inlinedAt: !6383)
!6385 = !{i64 1947541}
!6386 = !DILocation(line: 53, column: 9, scope: !6367)
!6387 = !DILocation(line: 53, column: 24, scope: !6367)
!6388 = !DILocation(line: 53, column: 2, scope: !6367)
!6389 = distinct !DISubprogram(name: "arch_new_thread", scope: !6390, file: !6390, line: 56, type: !6391, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !6498)
!6390 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6391 = !DISubroutineType(types: !6392)
!6392 = !{null, !6393, !6493, !1002, !3130, !102, !102, !102}
!6393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6394, size: 32)
!6394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !6395)
!6395 = !{!6396, !6454, !6466, !6467, !6468, !6469, !6475, !6488}
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6394, file: !263, line: 247, baseType: !6397, size: 384)
!6397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !6398)
!6398 = !{!6399, !6423, !6430, !6431, !6432, !6441, !6442, !6443}
!6399 = !DIDerivedType(tag: DW_TAG_member, scope: !6397, file: !263, line: 60, baseType: !6400, size: 64)
!6400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6397, file: !263, line: 60, size: 64, elements: !6401)
!6401 = !{!6402, !6417}
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6400, file: !263, line: 61, baseType: !6403, size: 64)
!6403 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !6404)
!6404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !6405)
!6405 = !{!6406, !6412}
!6406 = !DIDerivedType(tag: DW_TAG_member, scope: !6404, file: !273, line: 38, baseType: !6407, size: 32)
!6407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6404, file: !273, line: 38, size: 32, elements: !6408)
!6408 = !{!6409, !6411}
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6407, file: !273, line: 39, baseType: !6410, size: 32)
!6410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6404, size: 32)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6407, file: !273, line: 40, baseType: !6410, size: 32)
!6412 = !DIDerivedType(tag: DW_TAG_member, scope: !6404, file: !273, line: 42, baseType: !6413, size: 32, offset: 32)
!6413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6404, file: !273, line: 42, size: 32, elements: !6414)
!6414 = !{!6415, !6416}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6413, file: !273, line: 43, baseType: !6410, size: 32)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6413, file: !273, line: 44, baseType: !6410, size: 32)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6400, file: !263, line: 62, baseType: !6418, size: 64)
!6418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !6419)
!6419 = !{!6420}
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6418, file: !289, line: 50, baseType: !6421, size: 64)
!6421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6422, size: 64, elements: !294)
!6422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6418, size: 32)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6397, file: !263, line: 68, baseType: !6424, size: 32, offset: 64)
!6424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6425, size: 32)
!6425 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !6426)
!6426 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !6427)
!6427 = !{!6428}
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6426, file: !299, line: 232, baseType: !6429, size: 64)
!6429 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !6404)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6397, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6397, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!6432 = !DIDerivedType(tag: DW_TAG_member, scope: !6397, file: !263, line: 90, baseType: !6433, size: 16, offset: 112)
!6433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6397, file: !263, line: 90, size: 16, elements: !6434)
!6434 = !{!6435, !6440}
!6435 = !DIDerivedType(tag: DW_TAG_member, scope: !6433, file: !263, line: 91, baseType: !6436, size: 16)
!6436 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6433, file: !263, line: 91, size: 16, elements: !6437)
!6437 = !{!6438, !6439}
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6436, file: !263, line: 96, baseType: !313, size: 8)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6436, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6433, file: !263, line: 100, baseType: !151, size: 16)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6397, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6397, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6397, file: !263, line: 131, baseType: !6444, size: 192, offset: 192)
!6444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !6445)
!6445 = !{!6446, !6447, !6453}
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6444, file: !299, line: 245, baseType: !6403, size: 64)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6444, file: !299, line: 246, baseType: !6448, size: 32, offset: 64)
!6448 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !6449)
!6449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6450, size: 32)
!6450 = !DISubroutineType(types: !6451)
!6451 = !{null, !6452}
!6452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6444, size: 32)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6444, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6394, file: !263, line: 250, baseType: !6455, size: 288, offset: 384)
!6455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6456)
!6456 = !{!6457, !6458, !6459, !6460, !6461, !6462, !6463, !6464, !6465}
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6455, file: !334, line: 26, baseType: !137, size: 32)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6455, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6455, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6455, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6455, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6455, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6455, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6455, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6455, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6394, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6394, file: !263, line: 256, baseType: !6425, size: 64, offset: 704)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6394, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6394, file: !263, line: 300, baseType: !6470, size: 96, offset: 800)
!6470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !6471)
!6471 = !{!6472, !6473, !6474}
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6470, file: !263, line: 153, baseType: !22, size: 32)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6470, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6470, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6394, file: !263, line: 325, baseType: !6476, size: 32, offset: 896)
!6476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6477, size: 32)
!6477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !6478)
!6478 = !{!6479, !6485, !6486}
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6477, file: !357, line: 5074, baseType: !6480, size: 96)
!6480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !6481)
!6481 = !{!6482, !6483, !6484}
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6480, file: !113, line: 57, baseType: !116, size: 32)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6480, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6480, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6477, file: !357, line: 5075, baseType: !6425, size: 64, offset: 96)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6477, file: !357, line: 5076, baseType: !6487, offset: 160)
!6487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6394, file: !263, line: 343, baseType: !6489, size: 64, offset: 928)
!6489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !6490)
!6490 = !{!6491, !6492}
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6489, file: !334, line: 63, baseType: !137, size: 32)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6489, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!6493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6494, size: 32)
!6494 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3131, line: 44, baseType: !6495)
!6495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1869, line: 47, size: 8, elements: !6496)
!6496 = !{!6497}
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6495, file: !1869, line: 48, baseType: !109, size: 8)
!6498 = !{!6499, !6500, !6501, !6502, !6503, !6504, !6505, !6506}
!6499 = !DILocalVariable(name: "thread", arg: 1, scope: !6389, file: !6390, line: 56, type: !6393)
!6500 = !DILocalVariable(name: "stack", arg: 2, scope: !6389, file: !6390, line: 56, type: !6493)
!6501 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6389, file: !6390, line: 57, type: !1002)
!6502 = !DILocalVariable(name: "entry", arg: 4, scope: !6389, file: !6390, line: 57, type: !3130)
!6503 = !DILocalVariable(name: "p1", arg: 5, scope: !6389, file: !6390, line: 58, type: !102)
!6504 = !DILocalVariable(name: "p2", arg: 6, scope: !6389, file: !6390, line: 58, type: !102)
!6505 = !DILocalVariable(name: "p3", arg: 7, scope: !6389, file: !6390, line: 58, type: !102)
!6506 = !DILocalVariable(name: "iframe", scope: !6389, file: !6390, line: 60, type: !2381)
!6507 = !DILocation(line: 0, scope: !6389)
!6508 = !DILocation(line: 85, column: 11, scope: !6389)
!6509 = !DILocation(line: 93, column: 10, scope: !6389)
!6510 = !DILocation(line: 98, column: 13, scope: !6389)
!6511 = !DILocation(line: 100, column: 15, scope: !6389)
!6512 = !DILocation(line: 100, column: 10, scope: !6389)
!6513 = !DILocation(line: 100, column: 13, scope: !6389)
!6514 = !DILocation(line: 101, column: 15, scope: !6389)
!6515 = !DILocation(line: 101, column: 10, scope: !6389)
!6516 = !DILocation(line: 101, column: 13, scope: !6389)
!6517 = !DILocation(line: 102, column: 15, scope: !6389)
!6518 = !DILocation(line: 102, column: 10, scope: !6389)
!6519 = !DILocation(line: 102, column: 13, scope: !6389)
!6520 = !DILocation(line: 103, column: 15, scope: !6389)
!6521 = !DILocation(line: 103, column: 10, scope: !6389)
!6522 = !DILocation(line: 103, column: 13, scope: !6389)
!6523 = !DILocation(line: 106, column: 10, scope: !6389)
!6524 = !DILocation(line: 106, column: 15, scope: !6389)
!6525 = !DILocation(line: 122, column: 29, scope: !6389)
!6526 = !DILocation(line: 122, column: 23, scope: !6389)
!6527 = !DILocation(line: 122, column: 27, scope: !6389)
!6528 = !DILocation(line: 123, column: 15, scope: !6389)
!6529 = !DILocation(line: 123, column: 23, scope: !6389)
!6530 = !DILocation(line: 143, column: 1, scope: !6389)
!6531 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6390, file: !6390, line: 385, type: !6532, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !6535)
!6532 = !DISubroutineType(types: !6533)
!6533 = !{!137, !6534, !6534}
!6534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!6535 = !{!6536, !6537, !6538, !6541}
!6536 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6531, file: !6390, line: 385, type: !6534)
!6537 = !DILocalVariable(name: "psp", arg: 2, scope: !6531, file: !6390, line: 385, type: !6534)
!6538 = !DILocalVariable(name: "thread", scope: !6531, file: !6390, line: 388, type: !6539)
!6539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6540, size: 32)
!6540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6394)
!6541 = !DILocalVariable(name: "guard_len", scope: !6531, file: !6390, line: 405, type: !137)
!6542 = !DILocation(line: 0, scope: !6531)
!6543 = !DILocation(line: 388, column: 34, scope: !6531)
!6544 = !DILocation(line: 390, column: 13, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6531, file: !6390, line: 390, column: 6)
!6546 = !DILocation(line: 390, column: 6, scope: !6531)
!6547 = !DILocation(line: 438, column: 6, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6531, file: !6390, line: 438, column: 6)
!6549 = !DILocation(line: 438, column: 6, scope: !6531)
!6550 = !DILocation(line: 442, column: 3, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6548, file: !6390, line: 440, column: 22)
!6552 = !DILocation(line: 455, column: 1, scope: !6531)
!6553 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6390, file: !6390, line: 530, type: !6554, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !6556)
!6554 = !DISubroutineType(types: !6555)
!6555 = !{null, !6393, !1002, !3130}
!6556 = !{!6557, !6558, !6559}
!6557 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6553, file: !6390, line: 530, type: !6393)
!6558 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6553, file: !6390, line: 530, type: !1002)
!6559 = !DILocalVariable(name: "_main", arg: 3, scope: !6553, file: !6390, line: 531, type: !3130)
!6560 = !DILocation(line: 0, scope: !6553)
!6561 = !DILocation(line: 535, column: 11, scope: !6553)
!6562 = !DILocation(line: 560, column: 2, scope: !6553)
!6563 = !DILocation(line: 576, column: 2, scope: !6553)
!6564 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6565 = !DILocation(line: 603, column: 2, scope: !6553)
!6566 = distinct !DISubprogram(name: "z_arm_fault", scope: !6567, file: !6567, line: 1036, type: !6568, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !6583)
!6567 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6568 = !DISubroutineType(types: !6569)
!6569 = !{null, !137, !137, !137, !6570}
!6570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6571, size: 32)
!6571 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6572)
!6572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6573)
!6573 = !{!6574, !6575, !6576, !6577, !6578, !6579, !6580, !6581, !6582}
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6572, file: !334, line: 26, baseType: !137, size: 32)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6572, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6572, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6572, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6572, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6572, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6572, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6572, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6572, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6583 = !{!6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593}
!6584 = !DILocalVariable(name: "msp", arg: 1, scope: !6566, file: !6567, line: 1036, type: !137)
!6585 = !DILocalVariable(name: "psp", arg: 2, scope: !6566, file: !6567, line: 1036, type: !137)
!6586 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6566, file: !6567, line: 1036, type: !137)
!6587 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6566, file: !6567, line: 1037, type: !6570)
!6588 = !DILocalVariable(name: "reason", scope: !6566, file: !6567, line: 1039, type: !137)
!6589 = !DILocalVariable(name: "fault", scope: !6566, file: !6567, line: 1040, type: !103)
!6590 = !DILocalVariable(name: "recoverable", scope: !6566, file: !6567, line: 1041, type: !211)
!6591 = !DILocalVariable(name: "nested_exc", scope: !6566, file: !6567, line: 1041, type: !211)
!6592 = !DILocalVariable(name: "esf", scope: !6566, file: !6567, line: 1042, type: !2449)
!6593 = !DILocalVariable(name: "esf_copy", scope: !6566, file: !6567, line: 1047, type: !2450)
!6594 = !DILocation(line: 0, scope: !6566)
!6595 = !DILocation(line: 1040, column: 19, scope: !6566)
!6596 = !DILocation(line: 1040, column: 24, scope: !6566)
!6597 = !DILocation(line: 1041, column: 2, scope: !6566)
!6598 = !DILocation(line: 1047, column: 2, scope: !6566)
!6599 = !DILocation(line: 1047, column: 15, scope: !6566)
!6600 = !DILocalVariable(name: "key", arg: 1, scope: !6601, file: !6094, line: 84, type: !32)
!6601 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6094, file: !6094, line: 84, type: !6105, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !6602)
!6602 = !{!6600}
!6603 = !DILocation(line: 0, scope: !6601, inlinedAt: !6604)
!6604 = distinct !DILocation(line: 1050, column: 2, scope: !6566)
!6605 = !DILocation(line: 95, column: 2, scope: !6601, inlinedAt: !6604)
!6606 = !{i64 1980785}
!6607 = !DILocation(line: 1055, column: 9, scope: !6566)
!6608 = !DILocation(line: 1063, column: 11, scope: !6566)
!6609 = !DILocation(line: 1064, column: 6, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6566, file: !6567, line: 1064, column: 6)
!6611 = !{i8 0, i8 2}
!6612 = !DILocation(line: 1064, column: 6, scope: !6566)
!6613 = !DILocation(line: 1070, column: 20, scope: !6566)
!6614 = !DILocation(line: 1070, column: 2, scope: !6566)
!6615 = !DILocation(line: 1089, column: 6, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6566, file: !6567, line: 1089, column: 6)
!6617 = !DILocation(line: 0, scope: !6616)
!6618 = !DILocation(line: 1089, column: 6, scope: !6566)
!6619 = !DILocation(line: 1090, column: 28, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !6567, line: 1090, column: 7)
!6621 = distinct !DILexicalBlock(scope: !6616, file: !6567, line: 1089, column: 18)
!6622 = !DILocation(line: 1090, column: 44, scope: !6620)
!6623 = !DILocation(line: 1090, column: 7, scope: !6621)
!6624 = !DILocation(line: 1091, column: 24, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6620, file: !6567, line: 1090, column: 50)
!6626 = !DILocation(line: 1092, column: 3, scope: !6625)
!6627 = !DILocation(line: 1094, column: 23, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6616, file: !6567, line: 1093, column: 9)
!6629 = !DILocation(line: 1097, column: 2, scope: !6566)
!6630 = !DILocation(line: 1098, column: 1, scope: !6566)
!6631 = distinct !DISubprogram(name: "get_esf", scope: !6567, file: !6567, line: 894, type: !6632, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !6635)
!6632 = !DISubroutineType(types: !6633)
!6633 = !{!2449, !137, !137, !137, !6634}
!6634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 32)
!6635 = !{!6636, !6637, !6638, !6639, !6640, !6641}
!6636 = !DILocalVariable(name: "msp", arg: 1, scope: !6631, file: !6567, line: 894, type: !137)
!6637 = !DILocalVariable(name: "psp", arg: 2, scope: !6631, file: !6567, line: 894, type: !137)
!6638 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6631, file: !6567, line: 894, type: !137)
!6639 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6631, file: !6567, line: 895, type: !6634)
!6640 = !DILocalVariable(name: "alternative_state_exc", scope: !6631, file: !6567, line: 897, type: !211)
!6641 = !DILocalVariable(name: "ptr_esf", scope: !6631, file: !6567, line: 898, type: !2449)
!6642 = !DILocation(line: 0, scope: !6631)
!6643 = !DILocation(line: 900, column: 14, scope: !6631)
!6644 = !DILocation(line: 902, column: 49, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6631, file: !6567, line: 902, column: 6)
!6646 = !DILocation(line: 902, column: 6, scope: !6631)
!6647 = !DILocation(line: 983, column: 18, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6631, file: !6567, line: 983, column: 6)
!6649 = !DILocation(line: 991, column: 7, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6651, file: !6567, line: 990, column: 30)
!6651 = distinct !DILexicalBlock(scope: !6631, file: !6567, line: 990, column: 6)
!6652 = !DILocation(line: 998, column: 16, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !6567, line: 995, column: 10)
!6654 = distinct !DILexicalBlock(scope: !6650, file: !6567, line: 991, column: 7)
!6655 = !DILocation(line: 1002, column: 2, scope: !6631)
!6656 = !DILocation(line: 1003, column: 1, scope: !6631)
!6657 = distinct !DISubprogram(name: "fault_handle", scope: !6567, file: !6567, line: 786, type: !6658, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !6660)
!6658 = !DISubroutineType(types: !6659)
!6659 = !{!137, !2449, !103, !6634}
!6660 = !{!6661, !6662, !6663, !6664}
!6661 = !DILocalVariable(name: "esf", arg: 1, scope: !6657, file: !6567, line: 786, type: !2449)
!6662 = !DILocalVariable(name: "fault", arg: 2, scope: !6657, file: !6567, line: 786, type: !103)
!6663 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6657, file: !6567, line: 786, type: !6634)
!6664 = !DILocalVariable(name: "reason", scope: !6657, file: !6567, line: 788, type: !137)
!6665 = !DILocation(line: 0, scope: !6657)
!6666 = !DILocation(line: 790, column: 15, scope: !6657)
!6667 = !DILocation(line: 792, column: 2, scope: !6657)
!6668 = !DILocation(line: 794, column: 12, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6657, file: !6567, line: 792, column: 17)
!6670 = !DILocation(line: 795, column: 3, scope: !6669)
!6671 = !DILocation(line: 800, column: 12, scope: !6669)
!6672 = !DILocation(line: 801, column: 3, scope: !6669)
!6673 = !DILocation(line: 803, column: 12, scope: !6669)
!6674 = !DILocation(line: 804, column: 3, scope: !6669)
!6675 = !DILocation(line: 806, column: 12, scope: !6669)
!6676 = !DILocation(line: 807, column: 3, scope: !6669)
!6677 = !DILocation(line: 814, column: 3, scope: !6669)
!6678 = !DILocation(line: 815, column: 3, scope: !6669)
!6679 = !DILocation(line: 829, column: 2, scope: !6657)
!6680 = distinct !DISubprogram(name: "hard_fault", scope: !6567, file: !6567, line: 709, type: !6681, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !6683)
!6681 = !DISubroutineType(types: !6682)
!6682 = !{!137, !2449, !6634}
!6683 = !{!6684, !6685, !6686}
!6684 = !DILocalVariable(name: "esf", arg: 1, scope: !6680, file: !6567, line: 709, type: !2449)
!6685 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6680, file: !6567, line: 709, type: !6634)
!6686 = !DILocalVariable(name: "reason", scope: !6680, file: !6567, line: 711, type: !137)
!6687 = !DILocation(line: 0, scope: !6680)
!6688 = !DILocation(line: 732, column: 15, scope: !6680)
!6689 = !DILocation(line: 734, column: 12, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6680, file: !6567, line: 734, column: 6)
!6691 = !DILocation(line: 734, column: 17, scope: !6690)
!6692 = !DILocation(line: 734, column: 41, scope: !6690)
!6693 = !DILocation(line: 734, column: 6, scope: !6680)
!6694 = !DILocation(line: 736, column: 19, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6690, file: !6567, line: 736, column: 13)
!6696 = !DILocation(line: 736, column: 49, scope: !6695)
!6697 = !DILocation(line: 736, column: 13, scope: !6690)
!6698 = !DILocation(line: 738, column: 19, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6695, file: !6567, line: 738, column: 13)
!6700 = !DILocation(line: 738, column: 24, scope: !6699)
!6701 = !DILocation(line: 738, column: 47, scope: !6699)
!6702 = !DILocation(line: 738, column: 13, scope: !6695)
!6703 = !DILocation(line: 740, column: 7, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !6567, line: 740, column: 7)
!6705 = distinct !DILexicalBlock(scope: !6699, file: !6567, line: 738, column: 53)
!6706 = !DILocation(line: 740, column: 7, scope: !6705)
!6707 = !DILocation(line: 742, column: 24, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6704, file: !6567, line: 740, column: 38)
!6709 = !DILocation(line: 743, column: 3, scope: !6708)
!6710 = !DILocation(line: 743, column: 20, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6704, file: !6567, line: 743, column: 14)
!6712 = !DILocation(line: 743, column: 25, scope: !6711)
!6713 = !DILocation(line: 743, column: 52, scope: !6711)
!6714 = !DILocation(line: 743, column: 14, scope: !6704)
!6715 = !DILocation(line: 744, column: 13, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6711, file: !6567, line: 743, column: 58)
!6717 = !DILocation(line: 745, column: 3, scope: !6716)
!6718 = !DILocation(line: 745, column: 20, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6711, file: !6567, line: 745, column: 14)
!6720 = !DILocation(line: 745, column: 25, scope: !6719)
!6721 = !DILocation(line: 745, column: 52, scope: !6719)
!6722 = !DILocation(line: 745, column: 14, scope: !6711)
!6723 = !DILocation(line: 746, column: 13, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6719, file: !6567, line: 745, column: 58)
!6725 = !DILocation(line: 747, column: 3, scope: !6724)
!6726 = !DILocation(line: 747, column: 20, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6719, file: !6567, line: 747, column: 14)
!6728 = !DILocation(line: 747, column: 52, scope: !6727)
!6729 = !DILocation(line: 747, column: 14, scope: !6719)
!6730 = !DILocation(line: 748, column: 13, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6727, file: !6567, line: 747, column: 58)
!6732 = !DILocation(line: 753, column: 3, scope: !6731)
!6733 = !DILocation(line: 766, column: 2, scope: !6680)
!6734 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6567, file: !6567, line: 229, type: !6658, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !6735)
!6735 = !{!6736, !6737, !6738, !6739, !6740, !6741, !6744}
!6736 = !DILocalVariable(name: "esf", arg: 1, scope: !6734, file: !6567, line: 229, type: !2449)
!6737 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6734, file: !6567, line: 229, type: !103)
!6738 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6734, file: !6567, line: 230, type: !6634)
!6739 = !DILocalVariable(name: "reason", scope: !6734, file: !6567, line: 232, type: !137)
!6740 = !DILocalVariable(name: "mmfar", scope: !6734, file: !6567, line: 233, type: !137)
!6741 = !DILocalVariable(name: "temp", scope: !6742, file: !6567, line: 254, type: !137)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !6567, line: 244, column: 48)
!6743 = distinct !DILexicalBlock(scope: !6734, file: !6567, line: 244, column: 6)
!6744 = !DILocalVariable(name: "min_stack_ptr", scope: !6745, file: !6567, line: 309, type: !137)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !6567, line: 308, column: 43)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !6567, line: 308, column: 7)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !6567, line: 289, column: 40)
!6748 = distinct !DILexicalBlock(scope: !6734, file: !6567, line: 288, column: 6)
!6749 = !DILocation(line: 0, scope: !6734)
!6750 = !DILocation(line: 237, column: 12, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6734, file: !6567, line: 237, column: 6)
!6752 = !DILocation(line: 241, column: 12, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6734, file: !6567, line: 241, column: 6)
!6754 = !DILocation(line: 244, column: 12, scope: !6743)
!6755 = !DILocation(line: 244, column: 17, scope: !6743)
!6756 = !DILocation(line: 244, column: 42, scope: !6743)
!6757 = !DILocation(line: 244, column: 6, scope: !6734)
!6758 = !DILocation(line: 254, column: 24, scope: !6742)
!6759 = !DILocation(line: 0, scope: !6742)
!6760 = !DILocation(line: 256, column: 13, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6742, file: !6567, line: 256, column: 7)
!6762 = !DILocation(line: 256, column: 18, scope: !6761)
!6763 = !DILocation(line: 256, column: 44, scope: !6761)
!6764 = !DILocation(line: 256, column: 7, scope: !6742)
!6765 = !DILocation(line: 259, column: 24, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !6567, line: 259, column: 8)
!6767 = distinct !DILexicalBlock(scope: !6761, file: !6567, line: 256, column: 50)
!6768 = !DILocation(line: 259, column: 8, scope: !6767)
!6769 = !DILocation(line: 261, column: 15, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6766, file: !6567, line: 259, column: 30)
!6771 = !DILocation(line: 262, column: 4, scope: !6770)
!6772 = !DILocation(line: 265, column: 12, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6734, file: !6567, line: 265, column: 6)
!6774 = !DILocation(line: 269, column: 12, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6734, file: !6567, line: 269, column: 6)
!6776 = !DILocation(line: 288, column: 12, scope: !6748)
!6777 = !DILocation(line: 288, column: 17, scope: !6748)
!6778 = !DILocation(line: 288, column: 41, scope: !6748)
!6779 = !DILocation(line: 289, column: 9, scope: !6748)
!6780 = !DILocation(line: 289, column: 14, scope: !6748)
!6781 = !DILocation(line: 288, column: 6, scope: !6734)
!6782 = !DILocation(line: 308, column: 12, scope: !6746)
!6783 = !DILocation(line: 308, column: 17, scope: !6746)
!6784 = !DILocation(line: 308, column: 7, scope: !6747)
!6785 = !DILocation(line: 310, column: 6, scope: !6745)
!6786 = !DILocation(line: 309, column: 29, scope: !6745)
!6787 = !DILocation(line: 0, scope: !6745)
!6788 = !DILocation(line: 312, column: 8, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6745, file: !6567, line: 312, column: 8)
!6790 = !DILocation(line: 312, column: 8, scope: !6745)
!6791 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6792, file: !6268, line: 1099, type: !137)
!6792 = distinct !DISubprogram(name: "__set_PSP", scope: !6268, file: !6268, line: 1099, type: !6357, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !6793)
!6793 = !{!6791}
!6794 = !DILocation(line: 0, scope: !6792, inlinedAt: !6795)
!6795 = distinct !DILocation(line: 338, column: 5, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6789, file: !6567, line: 312, column: 23)
!6797 = !DILocation(line: 1101, column: 3, scope: !6792, inlinedAt: !6795)
!6798 = !{i64 2859314}
!6799 = !DILocation(line: 341, column: 4, scope: !6796)
!6800 = !DILocation(line: 360, column: 12, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6734, file: !6567, line: 360, column: 6)
!6802 = !DILocation(line: 360, column: 17, scope: !6801)
!6803 = !DILocation(line: 360, column: 41, scope: !6801)
!6804 = !DILocation(line: 360, column: 6, scope: !6734)
!6805 = !DILocation(line: 361, column: 14, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6801, file: !6567, line: 360, column: 47)
!6807 = !DILocation(line: 362, column: 2, scope: !6806)
!6808 = !DILocation(line: 366, column: 12, scope: !6734)
!6809 = !DILocation(line: 369, column: 15, scope: !6734)
!6810 = !DILocation(line: 371, column: 2, scope: !6734)
!6811 = distinct !DISubprogram(name: "bus_fault", scope: !6567, file: !6567, line: 383, type: !6812, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !6814)
!6812 = !DISubroutineType(types: !6813)
!6813 = !{!103, !2449, !103, !6634}
!6814 = !{!6815, !6816, !6817, !6818, !6819}
!6815 = !DILocalVariable(name: "esf", arg: 1, scope: !6811, file: !6567, line: 383, type: !2449)
!6816 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6811, file: !6567, line: 383, type: !103)
!6817 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6811, file: !6567, line: 383, type: !6634)
!6818 = !DILocalVariable(name: "reason", scope: !6811, file: !6567, line: 385, type: !137)
!6819 = !DILocalVariable(name: "bfar", scope: !6820, file: !6567, line: 405, type: !137)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !6567, line: 395, column: 42)
!6821 = distinct !DILexicalBlock(scope: !6811, file: !6567, line: 395, column: 6)
!6822 = !DILocation(line: 0, scope: !6811)
!6823 = !DILocation(line: 389, column: 11, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6811, file: !6567, line: 389, column: 6)
!6825 = !DILocation(line: 392, column: 11, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6811, file: !6567, line: 392, column: 6)
!6827 = !DILocation(line: 395, column: 11, scope: !6821)
!6828 = !DILocation(line: 395, column: 16, scope: !6821)
!6829 = !DILocation(line: 395, column: 6, scope: !6811)
!6830 = !DILocation(line: 405, column: 3, scope: !6820)
!6831 = !DILocation(line: 0, scope: !6820)
!6832 = !DILocation(line: 407, column: 13, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6820, file: !6567, line: 407, column: 7)
!6834 = !DILocation(line: 407, column: 18, scope: !6833)
!6835 = !DILocation(line: 407, column: 44, scope: !6833)
!6836 = !DILocation(line: 407, column: 7, scope: !6820)
!6837 = !DILocation(line: 411, column: 15, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !6567, line: 409, column: 30)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6567, line: 409, column: 8)
!6840 = distinct !DILexicalBlock(scope: !6833, file: !6567, line: 407, column: 50)
!6841 = !DILocation(line: 412, column: 4, scope: !6838)
!6842 = !DILocation(line: 415, column: 11, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6811, file: !6567, line: 415, column: 6)
!6844 = !DILocation(line: 418, column: 12, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6811, file: !6567, line: 418, column: 6)
!6846 = !DILocation(line: 418, column: 17, scope: !6845)
!6847 = !DILocation(line: 418, column: 41, scope: !6845)
!6848 = !DILocation(line: 418, column: 6, scope: !6811)
!6849 = !DILocation(line: 423, column: 18, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6845, file: !6567, line: 423, column: 13)
!6851 = !DILocation(line: 524, column: 12, scope: !6811)
!6852 = !DILocation(line: 526, column: 15, scope: !6811)
!6853 = !DILocation(line: 528, column: 2, scope: !6811)
!6854 = distinct !DISubprogram(name: "usage_fault", scope: !6567, file: !6567, line: 539, type: !6855, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !6859)
!6855 = !DISubroutineType(types: !6856)
!6856 = !{!137, !6857}
!6857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6858, size: 32)
!6858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2450)
!6859 = !{!6860, !6861}
!6860 = !DILocalVariable(name: "esf", arg: 1, scope: !6854, file: !6567, line: 539, type: !6857)
!6861 = !DILocalVariable(name: "reason", scope: !6854, file: !6567, line: 541, type: !137)
!6862 = !DILocation(line: 0, scope: !6854)
!6863 = !DILocation(line: 546, column: 12, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6854, file: !6567, line: 546, column: 6)
!6865 = !DILocation(line: 549, column: 12, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6854, file: !6567, line: 549, column: 6)
!6867 = !DILocation(line: 567, column: 12, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6854, file: !6567, line: 567, column: 6)
!6869 = !DILocation(line: 570, column: 12, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6854, file: !6567, line: 570, column: 6)
!6871 = !DILocation(line: 573, column: 12, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6854, file: !6567, line: 573, column: 6)
!6873 = !DILocation(line: 576, column: 12, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6854, file: !6567, line: 576, column: 6)
!6875 = !DILocation(line: 581, column: 12, scope: !6854)
!6876 = !DILocation(line: 583, column: 2, scope: !6854)
!6877 = distinct !DISubprogram(name: "debug_monitor", scope: !6567, file: !6567, line: 632, type: !6878, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !6880)
!6878 = !DISubroutineType(types: !6879)
!6879 = !{null, !2449, !6634}
!6880 = !{!6881, !6882}
!6881 = !DILocalVariable(name: "esf", arg: 1, scope: !6877, file: !6567, line: 632, type: !2449)
!6882 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6877, file: !6567, line: 632, type: !6634)
!6883 = !DILocation(line: 0, scope: !6877)
!6884 = !DILocation(line: 634, column: 15, scope: !6877)
!6885 = !DILocation(line: 652, column: 1, scope: !6877)
!6886 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6567, file: !6567, line: 658, type: !6887, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !6889)
!6887 = !DISubroutineType(types: !6888)
!6888 = !{!211, !2449}
!6889 = !{!6890, !6891, !6892}
!6890 = !DILocalVariable(name: "esf", arg: 1, scope: !6886, file: !6567, line: 658, type: !2449)
!6891 = !DILocalVariable(name: "ret_addr", scope: !6886, file: !6567, line: 660, type: !150)
!6892 = !DILocalVariable(name: "fault_insn", scope: !6886, file: !6567, line: 686, type: !151)
!6893 = !DILocation(line: 0, scope: !6886)
!6894 = !DILocation(line: 660, column: 46, scope: !6886)
!6895 = !DILocation(line: 660, column: 23, scope: !6886)
!6896 = !DILocation(line: 682, column: 11, scope: !6886)
!6897 = !DILocation(line: 271, column: 3, scope: !6898, inlinedAt: !6899)
!6898 = distinct !DISubprogram(name: "__DSB", scope: !6268, file: !6268, line: 269, type: !2802, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !162)
!6899 = distinct !DILocation(line: 683, column: 2, scope: !6886)
!6900 = !{i64 2835449}
!6901 = !DILocation(line: 260, column: 3, scope: !6902, inlinedAt: !6903)
!6902 = distinct !DISubprogram(name: "__ISB", scope: !6268, file: !6268, line: 258, type: !2802, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !162)
!6903 = distinct !DILocation(line: 684, column: 2, scope: !6886)
!6904 = !{i64 2835166}
!6905 = !DILocation(line: 686, column: 35, scope: !6886)
!6906 = !DILocation(line: 686, column: 24, scope: !6886)
!6907 = !DILocation(line: 688, column: 11, scope: !6886)
!6908 = !DILocation(line: 271, column: 3, scope: !6898, inlinedAt: !6909)
!6909 = distinct !DILocation(line: 689, column: 2, scope: !6886)
!6910 = !DILocation(line: 260, column: 3, scope: !6902, inlinedAt: !6911)
!6911 = distinct !DILocation(line: 690, column: 2, scope: !6886)
!6912 = !DILocation(line: 693, column: 45, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6886, file: !6567, line: 693, column: 6)
!6914 = !DILocation(line: 699, column: 1, scope: !6886)
!6915 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6567, file: !6567, line: 1107, type: !2802, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !162)
!6916 = !DILocation(line: 1111, column: 11, scope: !6915)
!6917 = !DILocation(line: 1136, column: 1, scope: !6915)
!6918 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6919, file: !6919, line: 26, type: !2802, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !6920)
!6919 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6920 = !{!6921}
!6921 = !DILocalVariable(name: "irq", scope: !6918, file: !6919, line: 28, type: !103)
!6922 = !DILocation(line: 0, scope: !6918)
!6923 = !DILocation(line: 30, column: 2, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6918, file: !6919, line: 30, column: 2)
!6925 = !DILocation(line: 31, column: 3, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !6919, line: 30, column: 39)
!6927 = distinct !DILexicalBlock(scope: !6924, file: !6919, line: 30, column: 2)
!6928 = !DILocation(line: 30, column: 35, scope: !6927)
!6929 = !DILocation(line: 30, column: 13, scope: !6927)
!6930 = distinct !{!6930, !6923, !6931}
!6931 = !DILocation(line: 32, column: 2, scope: !6924)
!6932 = !DILocation(line: 33, column: 1, scope: !6918)
!6933 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6302, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !6934)
!6934 = !{!6935, !6936}
!6935 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6933, file: !402, line: 1814, type: !638)
!6936 = !DILocalVariable(name: "priority", arg: 2, scope: !6933, file: !402, line: 1814, type: !137)
!6937 = !DILocation(line: 0, scope: !6933)
!6938 = !DILocation(line: 1816, column: 7, scope: !6933)
!6939 = !DILocation(line: 0, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6933, file: !402, line: 1816, column: 7)
!6941 = !DILocation(line: 1824, column: 1, scope: !6933)
!6942 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6943, file: !6943, line: 27, type: !6944, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !7047)
!6943 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6944 = !DISubroutineType(types: !6945)
!6945 = !{null, !6946}
!6946 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !6947)
!6947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6948, size: 32)
!6948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !6949)
!6949 = !{!6950, !7008, !7020, !7021, !7022, !7023, !7029, !7042}
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6948, file: !263, line: 247, baseType: !6951, size: 384)
!6951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !6952)
!6952 = !{!6953, !6977, !6984, !6985, !6986, !6995, !6996, !6997}
!6953 = !DIDerivedType(tag: DW_TAG_member, scope: !6951, file: !263, line: 60, baseType: !6954, size: 64)
!6954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6951, file: !263, line: 60, size: 64, elements: !6955)
!6955 = !{!6956, !6971}
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6954, file: !263, line: 61, baseType: !6957, size: 64)
!6957 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !6958)
!6958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !6959)
!6959 = !{!6960, !6966}
!6960 = !DIDerivedType(tag: DW_TAG_member, scope: !6958, file: !273, line: 38, baseType: !6961, size: 32)
!6961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6958, file: !273, line: 38, size: 32, elements: !6962)
!6962 = !{!6963, !6965}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6961, file: !273, line: 39, baseType: !6964, size: 32)
!6964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6958, size: 32)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6961, file: !273, line: 40, baseType: !6964, size: 32)
!6966 = !DIDerivedType(tag: DW_TAG_member, scope: !6958, file: !273, line: 42, baseType: !6967, size: 32, offset: 32)
!6967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6958, file: !273, line: 42, size: 32, elements: !6968)
!6968 = !{!6969, !6970}
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6967, file: !273, line: 43, baseType: !6964, size: 32)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6967, file: !273, line: 44, baseType: !6964, size: 32)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6954, file: !263, line: 62, baseType: !6972, size: 64)
!6972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !6973)
!6973 = !{!6974}
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6972, file: !289, line: 50, baseType: !6975, size: 64)
!6975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6976, size: 64, elements: !294)
!6976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6972, size: 32)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6951, file: !263, line: 68, baseType: !6978, size: 32, offset: 64)
!6978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6979, size: 32)
!6979 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !6980)
!6980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !6981)
!6981 = !{!6982}
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6980, file: !299, line: 232, baseType: !6983, size: 64)
!6983 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !6958)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6951, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6951, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!6986 = !DIDerivedType(tag: DW_TAG_member, scope: !6951, file: !263, line: 90, baseType: !6987, size: 16, offset: 112)
!6987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6951, file: !263, line: 90, size: 16, elements: !6988)
!6988 = !{!6989, !6994}
!6989 = !DIDerivedType(tag: DW_TAG_member, scope: !6987, file: !263, line: 91, baseType: !6990, size: 16)
!6990 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6987, file: !263, line: 91, size: 16, elements: !6991)
!6991 = !{!6992, !6993}
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6990, file: !263, line: 96, baseType: !313, size: 8)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6990, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6987, file: !263, line: 100, baseType: !151, size: 16)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6951, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6951, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6951, file: !263, line: 131, baseType: !6998, size: 192, offset: 192)
!6998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !6999)
!6999 = !{!7000, !7001, !7007}
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6998, file: !299, line: 245, baseType: !6957, size: 64)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6998, file: !299, line: 246, baseType: !7002, size: 32, offset: 64)
!7002 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !7003)
!7003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7004, size: 32)
!7004 = !DISubroutineType(types: !7005)
!7005 = !{null, !7006}
!7006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6998, size: 32)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6998, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6948, file: !263, line: 250, baseType: !7009, size: 288, offset: 384)
!7009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !7010)
!7010 = !{!7011, !7012, !7013, !7014, !7015, !7016, !7017, !7018, !7019}
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7009, file: !334, line: 26, baseType: !137, size: 32)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7009, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7009, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7009, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7009, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7009, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7009, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7009, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7009, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6948, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6948, file: !263, line: 256, baseType: !6979, size: 64, offset: 704)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6948, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6948, file: !263, line: 300, baseType: !7024, size: 96, offset: 800)
!7024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !7025)
!7025 = !{!7026, !7027, !7028}
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7024, file: !263, line: 153, baseType: !22, size: 32)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7024, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7024, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6948, file: !263, line: 325, baseType: !7030, size: 32, offset: 896)
!7030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7031, size: 32)
!7031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !7032)
!7032 = !{!7033, !7039, !7040}
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7031, file: !357, line: 5074, baseType: !7034, size: 96)
!7034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !7035)
!7035 = !{!7036, !7037, !7038}
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7034, file: !113, line: 57, baseType: !116, size: 32)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7034, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7034, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7031, file: !357, line: 5075, baseType: !6979, size: 64, offset: 96)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7031, file: !357, line: 5076, baseType: !7041, offset: 160)
!7041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6948, file: !263, line: 343, baseType: !7043, size: 64, offset: 928)
!7043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !7044)
!7044 = !{!7045, !7046}
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7043, file: !334, line: 63, baseType: !137, size: 32)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7043, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!7047 = !{!7048}
!7048 = !DILocalVariable(name: "thread", arg: 1, scope: !6942, file: !6943, line: 27, type: !6946)
!7049 = !DILocation(line: 0, scope: !6942)
!7050 = !DILocation(line: 29, column: 6, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !6942, file: !6943, line: 29, column: 6)
!7052 = !DILocation(line: 29, column: 15, scope: !7051)
!7053 = !DILocation(line: 29, column: 6, scope: !6942)
!7054 = !DILocation(line: 1031, column: 3, scope: !7055, inlinedAt: !7058)
!7055 = distinct !DISubprogram(name: "__get_IPSR", scope: !6268, file: !6268, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !7056)
!7056 = !{!7057}
!7057 = !DILocalVariable(name: "result", scope: !7055, file: !6268, line: 1029, type: !137)
!7058 = distinct !DILocation(line: 48, column: 10, scope: !7059, inlinedAt: !7063)
!7059 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7060, file: !7060, line: 46, type: !7061, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !162)
!7060 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7061 = !DISubroutineType(types: !7062)
!7062 = !{!211}
!7063 = distinct !DILocation(line: 30, column: 7, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !6943, line: 30, column: 7)
!7065 = distinct !DILexicalBlock(scope: !7051, file: !6943, line: 29, column: 26)
!7066 = !{i64 2824297}
!7067 = !DILocation(line: 0, scope: !7055, inlinedAt: !7058)
!7068 = !DILocation(line: 48, column: 9, scope: !7059, inlinedAt: !7063)
!7069 = !DILocation(line: 30, column: 7, scope: !7065)
!7070 = !DILocation(line: 42, column: 14, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7064, file: !6943, line: 30, column: 25)
!7072 = !DILocation(line: 48, column: 15, scope: !7071)
!7073 = !DILocation(line: 49, column: 3, scope: !7071)
!7074 = !DILocation(line: 52, column: 2, scope: !6942)
!7075 = !DILocation(line: 53, column: 1, scope: !6942)
!7076 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !258, file: !258, line: 127, type: !2802, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !162)
!7077 = !DILocation(line: 134, column: 2, scope: !7076)
!7078 = !DILocation(line: 156, column: 1, scope: !7076)
!7079 = !DILocation(line: 0, scope: !257)
!7080 = !DILocation(line: 289, column: 36, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !257, file: !258, line: 285, column: 2)
!7082 = !DILocation(line: 289, column: 42, scope: !7081)
!7083 = !DILocation(line: 300, column: 36, scope: !257)
!7084 = !DILocation(line: 301, column: 35, scope: !257)
!7085 = !DILocation(line: 302, column: 37, scope: !257)
!7086 = !DILocation(line: 311, column: 2, scope: !257)
!7087 = !DILocation(line: 316, column: 1, scope: !257)
!7088 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !430, file: !430, line: 180, type: !2802, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7089 = !DILocation(line: 188, column: 12, scope: !7088)
!7090 = !DILocation(line: 271, column: 3, scope: !7091, inlinedAt: !7092)
!7091 = distinct !DISubprogram(name: "__DSB", scope: !6268, file: !6268, line: 269, type: !2802, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7092 = distinct !DILocation(line: 192, column: 2, scope: !7088)
!7093 = !{i64 2984444}
!7094 = !DILocation(line: 260, column: 3, scope: !7095, inlinedAt: !7096)
!7095 = distinct !DISubprogram(name: "__ISB", scope: !6268, file: !6268, line: 258, type: !2802, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7096 = distinct !DILocation(line: 193, column: 2, scope: !7088)
!7097 = !{i64 2984161}
!7098 = !DILocation(line: 194, column: 1, scope: !7088)
!7099 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !430, file: !430, line: 199, type: !2802, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7100 = !DILocation(line: 282, column: 3, scope: !7101, inlinedAt: !7102)
!7101 = distinct !DISubprogram(name: "__DMB", scope: !6268, file: !6268, line: 280, type: !2802, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7102 = distinct !DILocation(line: 202, column: 2, scope: !7099)
!7103 = !{i64 2984720}
!7104 = !DILocation(line: 205, column: 12, scope: !7099)
!7105 = !DILocation(line: 206, column: 1, scope: !7099)
!7106 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !430, file: !430, line: 275, type: !7107, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7120)
!7107 = !DISubroutineType(types: !7108)
!7108 = !{null, !7109, !1644, !6534, !6534}
!7109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7110, size: 32)
!7110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7111)
!7111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !7112)
!7112 = !{!7113, !7114, !7115}
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7111, file: !381, line: 53, baseType: !22, size: 32)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7111, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7111, file: !381, line: 55, baseType: !7116, size: 32, offset: 64)
!7116 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !7117)
!7117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !7118)
!7118 = !{!7119}
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7117, file: !387, line: 150, baseType: !137, size: 32)
!7120 = !{!7121, !7122, !7123, !7124}
!7121 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7106, file: !430, line: 276, type: !7109)
!7122 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7106, file: !430, line: 276, type: !1644)
!7123 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7106, file: !430, line: 277, type: !6534)
!7124 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7106, file: !430, line: 277, type: !6534)
!7125 = !DILocation(line: 0, scope: !7106)
!7126 = !DILocation(line: 279, column: 6, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7106, file: !430, line: 279, column: 6)
!7128 = !DILocation(line: 285, column: 1, scope: !7106)
!7129 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7130, file: !7130, line: 220, type: !7131, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7133)
!7130 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7131 = !DISubroutineType(types: !7132)
!7132 = !{!103, !7109, !1644, !6534, !6534}
!7133 = !{!7134, !7135, !7136, !7137, !7138}
!7134 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7129, file: !7130, line: 221, type: !7109)
!7135 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7129, file: !7130, line: 221, type: !1644)
!7136 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7129, file: !7130, line: 222, type: !6534)
!7137 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7129, file: !7130, line: 223, type: !6534)
!7138 = !DILocalVariable(name: "mpu_reg_index", scope: !7129, file: !7130, line: 225, type: !103)
!7139 = !DILocation(line: 0, scope: !7129)
!7140 = !DILocation(line: 225, column: 22, scope: !7129)
!7141 = !DILocation(line: 233, column: 18, scope: !7129)
!7142 = !DILocation(line: 236, column: 23, scope: !7129)
!7143 = !DILocation(line: 236, column: 21, scope: !7129)
!7144 = !DILocation(line: 238, column: 2, scope: !7129)
!7145 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !430, file: !430, line: 105, type: !7146, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7148)
!7146 = !DISubroutineType(types: !7147)
!7147 = !{!103, !7109, !208, !208, !211}
!7148 = !{!7149, !7150, !7151, !7152, !7153, !7154}
!7149 = !DILocalVariable(name: "regions", arg: 1, scope: !7145, file: !430, line: 106, type: !7109)
!7150 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7145, file: !430, line: 106, type: !208)
!7151 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7145, file: !430, line: 106, type: !208)
!7152 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7145, file: !430, line: 107, type: !211)
!7153 = !DILocalVariable(name: "i", scope: !7145, file: !430, line: 109, type: !103)
!7154 = !DILocalVariable(name: "reg_index", scope: !7145, file: !430, line: 110, type: !103)
!7155 = !DILocation(line: 0, scope: !7145)
!7156 = !DILocation(line: 110, column: 18, scope: !7145)
!7157 = !DILocation(line: 112, column: 16, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !430, line: 112, column: 2)
!7159 = distinct !DILexicalBlock(scope: !7145, file: !430, line: 112, column: 2)
!7160 = !DILocation(line: 112, column: 2, scope: !7159)
!7161 = !DILocation(line: 113, column: 7, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !430, line: 113, column: 7)
!7163 = distinct !DILexicalBlock(scope: !7158, file: !430, line: 112, column: 36)
!7164 = !DILocation(line: 113, column: 18, scope: !7162)
!7165 = !DILocation(line: 113, column: 23, scope: !7162)
!7166 = !DILocation(line: 113, column: 7, scope: !7163)
!7167 = !DILocation(line: 118, column: 23, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7163, file: !430, line: 118, column: 7)
!7169 = !DILocation(line: 119, column: 7, scope: !7168)
!7170 = !DILocation(line: 118, column: 7, scope: !7163)
!7171 = !DILocation(line: 124, column: 36, scope: !7163)
!7172 = !DILocation(line: 124, column: 15, scope: !7163)
!7173 = !DILocation(line: 126, column: 17, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7163, file: !430, line: 126, column: 7)
!7175 = !DILocation(line: 126, column: 7, scope: !7163)
!7176 = !DILocation(line: 131, column: 12, scope: !7163)
!7177 = !DILocation(line: 132, column: 2, scope: !7163)
!7178 = !DILocation(line: 112, column: 32, scope: !7158)
!7179 = distinct !{!7179, !7160, !7180}
!7180 = !DILocation(line: 132, column: 2, scope: !7159)
!7181 = !DILocation(line: 135, column: 1, scope: !7145)
!7182 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7130, file: !7130, line: 63, type: !7183, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7185)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{!103, !7109}
!7185 = !{!7186, !7187}
!7186 = !DILocalVariable(name: "part", arg: 1, scope: !7182, file: !7130, line: 63, type: !7109)
!7187 = !DILocalVariable(name: "partition_is_valid", scope: !7182, file: !7130, line: 70, type: !103)
!7188 = !DILocation(line: 0, scope: !7182)
!7189 = !DILocation(line: 71, column: 11, scope: !7182)
!7190 = !DILocation(line: 71, column: 37, scope: !7182)
!7191 = !DILocation(line: 72, column: 3, scope: !7182)
!7192 = !DILocation(line: 71, column: 30, scope: !7182)
!7193 = !DILocation(line: 75, column: 11, scope: !7182)
!7194 = !DILocation(line: 75, column: 17, scope: !7182)
!7195 = !DILocation(line: 75, column: 38, scope: !7182)
!7196 = !DILocation(line: 77, column: 2, scope: !7182)
!7197 = distinct !DISubprogram(name: "mpu_configure_region", scope: !430, file: !430, line: 79, type: !7198, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7200)
!7198 = !DISubroutineType(types: !7199)
!7199 = !{!103, !1644, !7109}
!7200 = !{!7201, !7202, !7203}
!7201 = !DILocalVariable(name: "index", arg: 1, scope: !7197, file: !430, line: 79, type: !1644)
!7202 = !DILocalVariable(name: "new_region", arg: 2, scope: !7197, file: !430, line: 80, type: !7109)
!7203 = !DILocalVariable(name: "region_conf", scope: !7197, file: !430, line: 82, type: !419)
!7204 = !DILocation(line: 0, scope: !7197)
!7205 = !DILocation(line: 82, column: 2, scope: !7197)
!7206 = !DILocation(line: 82, column: 24, scope: !7197)
!7207 = !DILocation(line: 87, column: 33, scope: !7197)
!7208 = !DILocation(line: 87, column: 14, scope: !7197)
!7209 = !DILocation(line: 87, column: 19, scope: !7197)
!7210 = !DILocation(line: 91, column: 55, scope: !7197)
!7211 = !DILocation(line: 92, column: 16, scope: !7197)
!7212 = !DILocation(line: 92, column: 53, scope: !7197)
!7213 = !DILocation(line: 91, column: 2, scope: !7197)
!7214 = !DILocation(line: 95, column: 9, scope: !7197)
!7215 = !DILocation(line: 97, column: 1, scope: !7197)
!7216 = !DILocation(line: 95, column: 2, scope: !7197)
!7217 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7130, file: !7130, line: 113, type: !7218, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7223)
!7218 = !DISubroutineType(types: !7219)
!7219 = !{null, !7220, !7221, !137, !137}
!7220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 32)
!7221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7222, size: 32)
!7222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7116)
!7223 = !{!7224, !7225, !7226, !7227}
!7224 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7217, file: !7130, line: 114, type: !7220)
!7225 = !DILocalVariable(name: "attr", arg: 2, scope: !7217, file: !7130, line: 115, type: !7221)
!7226 = !DILocalVariable(name: "base", arg: 3, scope: !7217, file: !7130, line: 115, type: !137)
!7227 = !DILocalVariable(name: "size", arg: 4, scope: !7217, file: !7130, line: 115, type: !137)
!7228 = !DILocation(line: 0, scope: !7217)
!7229 = !DILocation(line: 127, column: 23, scope: !7217)
!7230 = !DILocation(line: 127, column: 35, scope: !7217)
!7231 = !DILocation(line: 127, column: 33, scope: !7217)
!7232 = !DILocation(line: 127, column: 10, scope: !7217)
!7233 = !DILocation(line: 127, column: 15, scope: !7217)
!7234 = !DILocation(line: 129, column: 1, scope: !7217)
!7235 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !430, file: !430, line: 57, type: !7236, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7238)
!7236 = !DISubroutineType(types: !7237)
!7237 = !{!103, !1644, !417}
!7238 = !{!7239, !7240}
!7239 = !DILocalVariable(name: "index", arg: 1, scope: !7235, file: !430, line: 57, type: !1644)
!7240 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7235, file: !430, line: 58, type: !417)
!7241 = !DILocation(line: 0, scope: !7235)
!7242 = !DILocation(line: 61, column: 6, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7235, file: !430, line: 61, column: 6)
!7244 = !DILocation(line: 61, column: 12, scope: !7243)
!7245 = !DILocation(line: 61, column: 6, scope: !7235)
!7246 = !DILocation(line: 71, column: 2, scope: !7235)
!7247 = !DILocation(line: 73, column: 2, scope: !7235)
!7248 = !DILocation(line: 74, column: 1, scope: !7235)
!7249 = distinct !DISubprogram(name: "region_init", scope: !7130, file: !7130, line: 29, type: !7250, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7252)
!7250 = !DISubroutineType(types: !7251)
!7251 = !{null, !6534, !417}
!7252 = !{!7253, !7254}
!7253 = !DILocalVariable(name: "index", arg: 1, scope: !7249, file: !7130, line: 29, type: !6534)
!7254 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7249, file: !7130, line: 30, type: !417)
!7255 = !DILocation(line: 0, scope: !7249)
!7256 = !DILocation(line: 33, column: 2, scope: !7249)
!7257 = !DILocation(line: 47, column: 28, scope: !7249)
!7258 = !DILocation(line: 47, column: 33, scope: !7249)
!7259 = !DILocation(line: 48, column: 26, scope: !7249)
!7260 = !DILocation(line: 47, column: 12, scope: !7249)
!7261 = !DILocation(line: 49, column: 32, scope: !7249)
!7262 = !DILocation(line: 49, column: 37, scope: !7249)
!7263 = !DILocation(line: 49, column: 12, scope: !7249)
!7264 = !DILocation(line: 53, column: 1, scope: !7249)
!7265 = distinct !DISubprogram(name: "set_region_number", scope: !7266, file: !7266, line: 32, type: !6357, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7267)
!7266 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7267 = !{!7268}
!7268 = !DILocalVariable(name: "index", arg: 1, scope: !7265, file: !7266, line: 32, type: !137)
!7269 = !DILocation(line: 0, scope: !7265)
!7270 = !DILocation(line: 34, column: 11, scope: !7265)
!7271 = !DILocation(line: 35, column: 1, scope: !7265)
!7272 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7130, file: !7130, line: 88, type: !7273, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7275)
!7273 = !DISubroutineType(types: !7274)
!7274 = !{!137, !137}
!7275 = !{!7276}
!7276 = !DILocalVariable(name: "size", arg: 1, scope: !7272, file: !7130, line: 88, type: !137)
!7277 = !DILocation(line: 0, scope: !7272)
!7278 = !DILocation(line: 91, column: 11, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7272, file: !7130, line: 91, column: 6)
!7280 = !DILocation(line: 91, column: 6, scope: !7272)
!7281 = !DILocation(line: 100, column: 11, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7272, file: !7130, line: 100, column: 6)
!7283 = !DILocation(line: 100, column: 6, scope: !7272)
!7284 = !DILocation(line: 104, column: 35, scope: !7272)
!7285 = !DILocation(line: 104, column: 16, scope: !7272)
!7286 = !DILocation(line: 104, column: 50, scope: !7272)
!7287 = !DILocation(line: 104, column: 72, scope: !7272)
!7288 = !DILocation(line: 104, column: 2, scope: !7272)
!7289 = !DILocation(line: 106, column: 1, scope: !7272)
!7290 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !430, file: !430, line: 307, type: !7291, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7293)
!7291 = !DISubroutineType(types: !7292)
!7292 = !{null, !7109, !208}
!7293 = !{!7294, !7295}
!7294 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7290, file: !430, line: 308, type: !7109)
!7295 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7290, file: !430, line: 308, type: !208)
!7296 = !DILocation(line: 0, scope: !7290)
!7297 = !DILocation(line: 310, column: 6, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7290, file: !430, line: 310, column: 6)
!7299 = !DILocation(line: 316, column: 1, scope: !7290)
!7300 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7130, file: !7130, line: 249, type: !7301, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7303)
!7301 = !DISubroutineType(types: !7302)
!7302 = !{!103, !7109, !208}
!7303 = !{!7304, !7305, !7306, !7307}
!7304 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7300, file: !7130, line: 250, type: !7109)
!7305 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7300, file: !7130, line: 250, type: !208)
!7306 = !DILocalVariable(name: "mpu_reg_index", scope: !7300, file: !7130, line: 252, type: !103)
!7307 = !DILocalVariable(name: "i", scope: !7308, file: !7130, line: 264, type: !103)
!7308 = distinct !DILexicalBlock(scope: !7309, file: !7130, line: 264, column: 3)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !7130, line: 261, column: 32)
!7310 = distinct !DILexicalBlock(scope: !7300, file: !7130, line: 261, column: 6)
!7311 = !DILocation(line: 0, scope: !7300)
!7312 = !DILocation(line: 252, column: 22, scope: !7300)
!7313 = !DILocation(line: 258, column: 18, scope: !7300)
!7314 = !DILocation(line: 261, column: 20, scope: !7310)
!7315 = !DILocation(line: 261, column: 6, scope: !7300)
!7316 = !DILocation(line: 0, scope: !7308)
!7317 = !DILocation(line: 265, column: 4, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7319, file: !7130, line: 264, column: 59)
!7319 = distinct !DILexicalBlock(scope: !7308, file: !7130, line: 264, column: 3)
!7320 = !DILocation(line: 264, column: 55, scope: !7319)
!7321 = !DILocation(line: 264, column: 33, scope: !7319)
!7322 = !DILocation(line: 264, column: 3, scope: !7308)
!7323 = distinct !{!7323, !7322, !7324}
!7324 = !DILocation(line: 266, column: 3, scope: !7308)
!7325 = !DILocation(line: 269, column: 2, scope: !7300)
!7326 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7327, file: !7327, line: 218, type: !6357, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7328)
!7327 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7328 = !{!7329}
!7329 = !DILocalVariable(name: "rnr", arg: 1, scope: !7326, file: !7327, line: 218, type: !137)
!7330 = !DILocation(line: 0, scope: !7326)
!7331 = !DILocation(line: 220, column: 12, scope: !7326)
!7332 = !DILocation(line: 221, column: 13, scope: !7326)
!7333 = !DILocation(line: 222, column: 1, scope: !7326)
!7334 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !430, file: !430, line: 326, type: !7335, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7337)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{!103}
!7337 = !{!7338}
!7338 = !DILocalVariable(name: "r_index", scope: !7334, file: !430, line: 328, type: !137)
!7339 = !DILocation(line: 330, column: 17, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7334, file: !430, line: 330, column: 6)
!7341 = !DILocation(line: 330, column: 29, scope: !7340)
!7342 = !DILocation(line: 330, column: 6, scope: !7334)
!7343 = !DILocation(line: 347, column: 2, scope: !7334)
!7344 = !DILocation(line: 0, scope: !7334)
!7345 = !DILocation(line: 364, column: 29, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !430, line: 364, column: 2)
!7347 = distinct !DILexicalBlock(scope: !7334, file: !430, line: 364, column: 2)
!7348 = !DILocation(line: 364, column: 2, scope: !7347)
!7349 = !DILocation(line: 365, column: 25, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7346, file: !430, line: 364, column: 66)
!7351 = !DILocation(line: 365, column: 3, scope: !7350)
!7352 = !DILocation(line: 364, column: 62, scope: !7346)
!7353 = distinct !{!7353, !7348, !7354}
!7354 = !DILocation(line: 366, column: 2, scope: !7347)
!7355 = !DILocation(line: 369, column: 23, scope: !7334)
!7356 = !DILocation(line: 369, column: 21, scope: !7334)
!7357 = !DILocation(line: 372, column: 2, scope: !7334)
!7358 = !DILocation(line: 443, column: 2, scope: !7334)
!7359 = !DILocation(line: 444, column: 1, scope: !7334)
!7360 = distinct !DISubprogram(name: "strcpy", scope: !7361, file: !7361, line: 20, type: !7362, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7366)
!7361 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7362 = !DISubroutineType(types: !7363)
!7363 = !{!1002, !7364, !7365}
!7364 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1002)
!7365 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !199)
!7366 = !{!7367, !7368, !7369}
!7367 = !DILocalVariable(name: "d", arg: 1, scope: !7360, file: !7361, line: 20, type: !7364)
!7368 = !DILocalVariable(name: "s", arg: 2, scope: !7360, file: !7361, line: 20, type: !7365)
!7369 = !DILocalVariable(name: "dest", scope: !7360, file: !7361, line: 22, type: !1002)
!7370 = !DILocation(line: 0, scope: !7360)
!7371 = !DILocation(line: 24, column: 9, scope: !7360)
!7372 = !DILocation(line: 24, column: 12, scope: !7360)
!7373 = !DILocation(line: 24, column: 2, scope: !7360)
!7374 = !DILocation(line: 25, column: 6, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7360, file: !7361, line: 24, column: 21)
!7376 = !DILocation(line: 26, column: 4, scope: !7375)
!7377 = !DILocation(line: 27, column: 4, scope: !7375)
!7378 = distinct !{!7378, !7373, !7379}
!7379 = !DILocation(line: 28, column: 2, scope: !7360)
!7380 = !DILocation(line: 30, column: 5, scope: !7360)
!7381 = !DILocation(line: 32, column: 2, scope: !7360)
!7382 = distinct !DISubprogram(name: "strncpy", scope: !7361, file: !7361, line: 42, type: !7383, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7385)
!7383 = !DISubroutineType(types: !7384)
!7384 = !{!1002, !7364, !7365, !120}
!7385 = !{!7386, !7387, !7388, !7389}
!7386 = !DILocalVariable(name: "d", arg: 1, scope: !7382, file: !7361, line: 42, type: !7364)
!7387 = !DILocalVariable(name: "s", arg: 2, scope: !7382, file: !7361, line: 42, type: !7365)
!7388 = !DILocalVariable(name: "n", arg: 3, scope: !7382, file: !7361, line: 42, type: !120)
!7389 = !DILocalVariable(name: "dest", scope: !7382, file: !7361, line: 44, type: !1002)
!7390 = !DILocation(line: 0, scope: !7382)
!7391 = !DILocation(line: 46, column: 12, scope: !7382)
!7392 = !DILocation(line: 46, column: 17, scope: !7382)
!7393 = !DILocation(line: 46, column: 20, scope: !7382)
!7394 = !DILocation(line: 46, column: 23, scope: !7382)
!7395 = !DILocation(line: 46, column: 2, scope: !7382)
!7396 = !DILocation(line: 47, column: 6, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7382, file: !7361, line: 46, column: 32)
!7398 = !DILocation(line: 48, column: 4, scope: !7397)
!7399 = !DILocation(line: 49, column: 4, scope: !7397)
!7400 = !DILocation(line: 50, column: 4, scope: !7397)
!7401 = distinct !{!7401, !7395, !7402}
!7402 = !DILocation(line: 51, column: 2, scope: !7382)
!7403 = !DILocation(line: 54, column: 6, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7382, file: !7361, line: 53, column: 16)
!7405 = !DILocation(line: 55, column: 4, scope: !7404)
!7406 = !DILocation(line: 56, column: 4, scope: !7404)
!7407 = !DILocation(line: 53, column: 11, scope: !7382)
!7408 = !DILocation(line: 53, column: 2, scope: !7382)
!7409 = distinct !{!7409, !7408, !7410}
!7410 = !DILocation(line: 57, column: 2, scope: !7382)
!7411 = !DILocation(line: 59, column: 2, scope: !7382)
!7412 = distinct !DISubprogram(name: "strchr", scope: !7361, file: !7361, line: 69, type: !7413, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7415)
!7413 = !DISubroutineType(types: !7414)
!7414 = !{!1002, !199, !103}
!7415 = !{!7416, !7417, !7418}
!7416 = !DILocalVariable(name: "s", arg: 1, scope: !7412, file: !7361, line: 69, type: !199)
!7417 = !DILocalVariable(name: "c", arg: 2, scope: !7412, file: !7361, line: 69, type: !103)
!7418 = !DILocalVariable(name: "tmp", scope: !7412, file: !7361, line: 71, type: !109)
!7419 = !DILocation(line: 0, scope: !7412)
!7420 = !DILocation(line: 73, column: 2, scope: !7412)
!7421 = !DILocation(line: 73, column: 10, scope: !7412)
!7422 = !DILocation(line: 73, column: 13, scope: !7412)
!7423 = !DILocation(line: 73, column: 21, scope: !7412)
!7424 = !DILocation(line: 74, column: 4, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7412, file: !7361, line: 73, column: 38)
!7426 = distinct !{!7426, !7420, !7427}
!7427 = !DILocation(line: 75, column: 2, scope: !7412)
!7428 = !DILocation(line: 77, column: 9, scope: !7412)
!7429 = !DILocation(line: 77, column: 2, scope: !7412)
!7430 = distinct !DISubprogram(name: "strrchr", scope: !7361, file: !7361, line: 87, type: !7413, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7431)
!7431 = !{!7432, !7433, !7434}
!7432 = !DILocalVariable(name: "s", arg: 1, scope: !7430, file: !7361, line: 87, type: !199)
!7433 = !DILocalVariable(name: "c", arg: 2, scope: !7430, file: !7361, line: 87, type: !103)
!7434 = !DILocalVariable(name: "match", scope: !7430, file: !7361, line: 89, type: !1002)
!7435 = !DILocation(line: 0, scope: !7430)
!7436 = !DILocation(line: 91, column: 2, scope: !7430)
!7437 = !DILocation(line: 92, column: 7, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !7361, line: 92, column: 7)
!7439 = distinct !DILexicalBlock(scope: !7430, file: !7361, line: 91, column: 5)
!7440 = !DILocation(line: 92, column: 10, scope: !7438)
!7441 = !DILocation(line: 92, column: 7, scope: !7439)
!7442 = !DILocation(line: 95, column: 13, scope: !7430)
!7443 = !DILocation(line: 95, column: 2, scope: !7439)
!7444 = distinct !{!7444, !7436, !7445}
!7445 = !DILocation(line: 95, column: 15, scope: !7430)
!7446 = !DILocation(line: 97, column: 2, scope: !7430)
!7447 = distinct !DISubprogram(name: "strlen", scope: !7361, file: !7361, line: 107, type: !7448, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7450)
!7448 = !DISubroutineType(types: !7449)
!7449 = !{!120, !199}
!7450 = !{!7451, !7452}
!7451 = !DILocalVariable(name: "s", arg: 1, scope: !7447, file: !7361, line: 107, type: !199)
!7452 = !DILocalVariable(name: "n", scope: !7447, file: !7361, line: 109, type: !120)
!7453 = !DILocation(line: 0, scope: !7447)
!7454 = !DILocation(line: 111, column: 9, scope: !7447)
!7455 = !DILocation(line: 111, column: 12, scope: !7447)
!7456 = !DILocation(line: 111, column: 2, scope: !7447)
!7457 = !DILocation(line: 112, column: 4, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7447, file: !7361, line: 111, column: 21)
!7459 = !DILocation(line: 113, column: 4, scope: !7458)
!7460 = distinct !{!7460, !7456, !7461}
!7461 = !DILocation(line: 114, column: 2, scope: !7447)
!7462 = !DILocation(line: 116, column: 2, scope: !7447)
!7463 = distinct !DISubprogram(name: "strnlen", scope: !7361, file: !7361, line: 126, type: !7464, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7466)
!7464 = !DISubroutineType(types: !7465)
!7465 = !{!120, !199, !120}
!7466 = !{!7467, !7468, !7469}
!7467 = !DILocalVariable(name: "s", arg: 1, scope: !7463, file: !7361, line: 126, type: !199)
!7468 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7463, file: !7361, line: 126, type: !120)
!7469 = !DILocalVariable(name: "n", scope: !7463, file: !7361, line: 128, type: !120)
!7470 = !DILocation(line: 0, scope: !7463)
!7471 = !DILocation(line: 130, column: 9, scope: !7463)
!7472 = !DILocation(line: 130, column: 12, scope: !7463)
!7473 = !DILocation(line: 130, column: 20, scope: !7463)
!7474 = !DILocation(line: 130, column: 2, scope: !7463)
!7475 = !DILocation(line: 131, column: 4, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7463, file: !7361, line: 130, column: 35)
!7477 = !DILocation(line: 132, column: 4, scope: !7476)
!7478 = distinct !{!7478, !7474, !7479}
!7479 = !DILocation(line: 133, column: 2, scope: !7463)
!7480 = !DILocation(line: 135, column: 2, scope: !7463)
!7481 = distinct !DISubprogram(name: "strcmp", scope: !7361, file: !7361, line: 145, type: !7482, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7484)
!7482 = !DISubroutineType(types: !7483)
!7483 = !{!103, !199, !199}
!7484 = !{!7485, !7486}
!7485 = !DILocalVariable(name: "s1", arg: 1, scope: !7481, file: !7361, line: 145, type: !199)
!7486 = !DILocalVariable(name: "s2", arg: 2, scope: !7481, file: !7361, line: 145, type: !199)
!7487 = !DILocation(line: 0, scope: !7481)
!7488 = !DILocation(line: 147, column: 10, scope: !7481)
!7489 = !DILocation(line: 147, column: 17, scope: !7481)
!7490 = !DILocation(line: 147, column: 14, scope: !7481)
!7491 = !DILocation(line: 147, column: 22, scope: !7481)
!7492 = !DILocation(line: 148, column: 5, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7481, file: !7361, line: 147, column: 40)
!7494 = !DILocation(line: 149, column: 5, scope: !7493)
!7495 = distinct !{!7495, !7496, !7497}
!7496 = !DILocation(line: 147, column: 2, scope: !7481)
!7497 = !DILocation(line: 150, column: 2, scope: !7481)
!7498 = !DILocation(line: 152, column: 9, scope: !7481)
!7499 = !DILocation(line: 152, column: 15, scope: !7481)
!7500 = !DILocation(line: 152, column: 13, scope: !7481)
!7501 = !DILocation(line: 152, column: 2, scope: !7481)
!7502 = distinct !DISubprogram(name: "strncmp", scope: !7361, file: !7361, line: 162, type: !7503, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7505)
!7503 = !DISubroutineType(types: !7504)
!7504 = !{!103, !199, !199, !120}
!7505 = !{!7506, !7507, !7508}
!7506 = !DILocalVariable(name: "s1", arg: 1, scope: !7502, file: !7361, line: 162, type: !199)
!7507 = !DILocalVariable(name: "s2", arg: 2, scope: !7502, file: !7361, line: 162, type: !199)
!7508 = !DILocalVariable(name: "n", arg: 3, scope: !7502, file: !7361, line: 162, type: !120)
!7509 = !DILocation(line: 0, scope: !7502)
!7510 = !DILocation(line: 164, column: 17, scope: !7502)
!7511 = !DILocation(line: 164, column: 21, scope: !7502)
!7512 = !DILocation(line: 164, column: 28, scope: !7502)
!7513 = !DILocation(line: 164, column: 25, scope: !7502)
!7514 = !DILocation(line: 164, column: 33, scope: !7502)
!7515 = !DILocation(line: 165, column: 5, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7502, file: !7361, line: 164, column: 51)
!7517 = !DILocation(line: 166, column: 5, scope: !7516)
!7518 = !DILocation(line: 167, column: 4, scope: !7516)
!7519 = distinct !{!7519, !7520, !7521}
!7520 = !DILocation(line: 164, column: 2, scope: !7502)
!7521 = !DILocation(line: 168, column: 2, scope: !7502)
!7522 = !DILocation(line: 170, column: 25, scope: !7502)
!7523 = !DILocation(line: 170, column: 31, scope: !7502)
!7524 = !DILocation(line: 170, column: 29, scope: !7502)
!7525 = !DILocation(line: 170, column: 9, scope: !7502)
!7526 = !DILocation(line: 170, column: 2, scope: !7502)
!7527 = distinct !DISubprogram(name: "strtok_r", scope: !7361, file: !7361, line: 180, type: !7528, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7531)
!7528 = !DISubroutineType(types: !7529)
!7529 = !{!1002, !1002, !199, !7530}
!7530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!7531 = !{!7532, !7533, !7534, !7535, !7536}
!7532 = !DILocalVariable(name: "str", arg: 1, scope: !7527, file: !7361, line: 180, type: !1002)
!7533 = !DILocalVariable(name: "sep", arg: 2, scope: !7527, file: !7361, line: 180, type: !199)
!7534 = !DILocalVariable(name: "state", arg: 3, scope: !7527, file: !7361, line: 180, type: !7530)
!7535 = !DILocalVariable(name: "start", scope: !7527, file: !7361, line: 182, type: !1002)
!7536 = !DILocalVariable(name: "end", scope: !7527, file: !7361, line: 182, type: !1002)
!7537 = !DILocation(line: 0, scope: !7527)
!7538 = !DILocation(line: 184, column: 10, scope: !7527)
!7539 = !DILocation(line: 184, column: 22, scope: !7527)
!7540 = !DILocation(line: 187, column: 9, scope: !7527)
!7541 = !DILocation(line: 187, column: 16, scope: !7527)
!7542 = !DILocation(line: 187, column: 19, scope: !7527)
!7543 = !DILocation(line: 187, column: 2, scope: !7527)
!7544 = !DILocation(line: 188, column: 8, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7527, file: !7361, line: 187, column: 40)
!7546 = distinct !{!7546, !7543, !7547}
!7547 = !DILocation(line: 189, column: 2, scope: !7527)
!7548 = !DILocation(line: 198, column: 9, scope: !7527)
!7549 = !DILocation(line: 198, column: 18, scope: !7527)
!7550 = !DILocation(line: 198, column: 17, scope: !7527)
!7551 = !DILocation(line: 198, column: 2, scope: !7527)
!7552 = !DILocation(line: 199, column: 6, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7527, file: !7361, line: 198, column: 37)
!7554 = !DILocation(line: 198, column: 14, scope: !7527)
!7555 = distinct !{!7555, !7551, !7556}
!7556 = !DILocation(line: 200, column: 2, scope: !7527)
!7557 = !DILocation(line: 203, column: 8, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !7361, line: 202, column: 20)
!7559 = distinct !DILexicalBlock(scope: !7527, file: !7361, line: 202, column: 6)
!7560 = !DILocation(line: 204, column: 16, scope: !7558)
!7561 = !DILocation(line: 205, column: 2, scope: !7558)
!7562 = !DILocation(line: 210, column: 1, scope: !7527)
!7563 = distinct !DISubprogram(name: "strcat", scope: !7361, file: !7361, line: 212, type: !7362, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7564)
!7564 = !{!7565, !7566}
!7565 = !DILocalVariable(name: "dest", arg: 1, scope: !7563, file: !7361, line: 212, type: !7364)
!7566 = !DILocalVariable(name: "src", arg: 2, scope: !7563, file: !7361, line: 212, type: !7365)
!7567 = !DILocation(line: 0, scope: !7563)
!7568 = !DILocation(line: 214, column: 16, scope: !7563)
!7569 = !DILocation(line: 214, column: 14, scope: !7563)
!7570 = !DILocation(line: 214, column: 2, scope: !7563)
!7571 = !DILocation(line: 215, column: 2, scope: !7563)
!7572 = distinct !DISubprogram(name: "strncat", scope: !7361, file: !7361, line: 218, type: !7383, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7573)
!7573 = !{!7574, !7575, !7576, !7577, !7578}
!7574 = !DILocalVariable(name: "dest", arg: 1, scope: !7572, file: !7361, line: 218, type: !7364)
!7575 = !DILocalVariable(name: "src", arg: 2, scope: !7572, file: !7361, line: 218, type: !7365)
!7576 = !DILocalVariable(name: "n", arg: 3, scope: !7572, file: !7361, line: 219, type: !120)
!7577 = !DILocalVariable(name: "orig_dest", scope: !7572, file: !7361, line: 221, type: !1002)
!7578 = !DILocalVariable(name: "len", scope: !7572, file: !7361, line: 222, type: !120)
!7579 = !DILocation(line: 0, scope: !7572)
!7580 = !DILocation(line: 222, column: 15, scope: !7572)
!7581 = !DILocation(line: 224, column: 7, scope: !7572)
!7582 = !DILocation(line: 225, column: 14, scope: !7572)
!7583 = !DILocation(line: 225, column: 19, scope: !7572)
!7584 = !DILocation(line: 225, column: 11, scope: !7572)
!7585 = !DILocation(line: 225, column: 23, scope: !7572)
!7586 = !DILocation(line: 225, column: 28, scope: !7572)
!7587 = !DILocation(line: 225, column: 2, scope: !7572)
!7588 = !DILocation(line: 226, column: 17, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7572, file: !7361, line: 225, column: 38)
!7590 = !DILocation(line: 226, column: 8, scope: !7589)
!7591 = !DILocation(line: 226, column: 11, scope: !7589)
!7592 = distinct !{!7592, !7587, !7593}
!7593 = !DILocation(line: 227, column: 2, scope: !7572)
!7594 = !DILocation(line: 228, column: 8, scope: !7572)
!7595 = !DILocation(line: 230, column: 2, scope: !7572)
!7596 = distinct !DISubprogram(name: "memcmp", scope: !7361, file: !7361, line: 239, type: !7597, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7599)
!7597 = !DISubroutineType(types: !7598)
!7598 = !{!103, !13, !13, !120}
!7599 = !{!7600, !7601, !7602, !7603, !7604}
!7600 = !DILocalVariable(name: "m1", arg: 1, scope: !7596, file: !7361, line: 239, type: !13)
!7601 = !DILocalVariable(name: "m2", arg: 2, scope: !7596, file: !7361, line: 239, type: !13)
!7602 = !DILocalVariable(name: "n", arg: 3, scope: !7596, file: !7361, line: 239, type: !120)
!7603 = !DILocalVariable(name: "c1", scope: !7596, file: !7361, line: 241, type: !199)
!7604 = !DILocalVariable(name: "c2", scope: !7596, file: !7361, line: 242, type: !199)
!7605 = !DILocation(line: 0, scope: !7596)
!7606 = !DILocation(line: 244, column: 7, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7596, file: !7361, line: 244, column: 6)
!7608 = !DILocation(line: 244, column: 6, scope: !7596)
!7609 = !DILocation(line: 248, column: 10, scope: !7596)
!7610 = !DILocation(line: 248, column: 14, scope: !7596)
!7611 = !DILocation(line: 248, column: 19, scope: !7596)
!7612 = !DILocation(line: 248, column: 2, scope: !7596)
!7613 = !DILocation(line: 248, column: 23, scope: !7596)
!7614 = !DILocation(line: 248, column: 30, scope: !7596)
!7615 = !DILocation(line: 248, column: 27, scope: !7596)
!7616 = !DILocation(line: 249, column: 5, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7596, file: !7361, line: 248, column: 36)
!7618 = !DILocation(line: 250, column: 5, scope: !7617)
!7619 = distinct !{!7619, !7612, !7620}
!7620 = !DILocation(line: 251, column: 2, scope: !7596)
!7621 = !DILocation(line: 253, column: 9, scope: !7596)
!7622 = !DILocation(line: 253, column: 15, scope: !7596)
!7623 = !DILocation(line: 253, column: 13, scope: !7596)
!7624 = !DILocation(line: 253, column: 2, scope: !7596)
!7625 = !DILocation(line: 254, column: 1, scope: !7596)
!7626 = distinct !DISubprogram(name: "memmove", scope: !7361, file: !7361, line: 263, type: !7627, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7629)
!7627 = !DISubroutineType(types: !7628)
!7628 = !{!102, !102, !13, !120}
!7629 = !{!7630, !7631, !7632, !7633, !7634}
!7630 = !DILocalVariable(name: "d", arg: 1, scope: !7626, file: !7361, line: 263, type: !102)
!7631 = !DILocalVariable(name: "s", arg: 2, scope: !7626, file: !7361, line: 263, type: !13)
!7632 = !DILocalVariable(name: "n", arg: 3, scope: !7626, file: !7361, line: 263, type: !120)
!7633 = !DILocalVariable(name: "dest", scope: !7626, file: !7361, line: 265, type: !1002)
!7634 = !DILocalVariable(name: "src", scope: !7626, file: !7361, line: 266, type: !199)
!7635 = !DILocation(line: 0, scope: !7626)
!7636 = !DILocation(line: 268, column: 21, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7626, file: !7361, line: 268, column: 6)
!7638 = !DILocation(line: 268, column: 28, scope: !7637)
!7639 = !DILocation(line: 268, column: 6, scope: !7626)
!7640 = !DILocation(line: 280, column: 12, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7637, file: !7361, line: 278, column: 9)
!7642 = !DILocation(line: 280, column: 3, scope: !7641)
!7643 = !DILocation(line: 275, column: 5, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7645, file: !7361, line: 274, column: 17)
!7645 = distinct !DILexicalBlock(scope: !7637, file: !7361, line: 268, column: 33)
!7646 = !DILocation(line: 276, column: 14, scope: !7644)
!7647 = !DILocation(line: 276, column: 4, scope: !7644)
!7648 = !DILocation(line: 276, column: 12, scope: !7644)
!7649 = !DILocation(line: 274, column: 12, scope: !7645)
!7650 = !DILocation(line: 274, column: 3, scope: !7645)
!7651 = distinct !{!7651, !7650, !7652}
!7652 = !DILocation(line: 277, column: 3, scope: !7645)
!7653 = !DILocation(line: 281, column: 12, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7641, file: !7361, line: 280, column: 17)
!7655 = !DILocation(line: 281, column: 10, scope: !7654)
!7656 = !DILocation(line: 282, column: 8, scope: !7654)
!7657 = !DILocation(line: 283, column: 7, scope: !7654)
!7658 = !DILocation(line: 284, column: 5, scope: !7654)
!7659 = distinct !{!7659, !7642, !7660}
!7660 = !DILocation(line: 285, column: 3, scope: !7641)
!7661 = !DILocation(line: 288, column: 2, scope: !7626)
!7662 = distinct !DISubprogram(name: "memcpy", scope: !7361, file: !7361, line: 298, type: !7663, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7667)
!7663 = !DISubroutineType(types: !7664)
!7664 = !{!102, !7665, !7666, !120}
!7665 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7666 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7667 = !{!7668, !7669, !7670, !7671, !7672}
!7668 = !DILocalVariable(name: "d", arg: 1, scope: !7662, file: !7361, line: 298, type: !7665)
!7669 = !DILocalVariable(name: "s", arg: 2, scope: !7662, file: !7361, line: 298, type: !7666)
!7670 = !DILocalVariable(name: "n", arg: 3, scope: !7662, file: !7361, line: 298, type: !120)
!7671 = !DILocalVariable(name: "d_byte", scope: !7662, file: !7361, line: 302, type: !837)
!7672 = !DILocalVariable(name: "s_byte", scope: !7662, file: !7361, line: 303, type: !2568)
!7673 = !DILocation(line: 0, scope: !7662)
!7674 = !DILocation(line: 337, column: 11, scope: !7662)
!7675 = !DILocation(line: 337, column: 2, scope: !7662)
!7676 = !DILocation(line: 338, column: 25, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7662, file: !7361, line: 337, column: 16)
!7678 = !DILocation(line: 338, column: 17, scope: !7677)
!7679 = !DILocation(line: 338, column: 11, scope: !7677)
!7680 = !DILocation(line: 338, column: 15, scope: !7677)
!7681 = !DILocation(line: 339, column: 4, scope: !7677)
!7682 = distinct !{!7682, !7675, !7683}
!7683 = !DILocation(line: 340, column: 2, scope: !7662)
!7684 = !DILocation(line: 342, column: 2, scope: !7662)
!7685 = distinct !DISubprogram(name: "memset", scope: !7361, file: !7361, line: 352, type: !7686, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7688)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{!102, !102, !103, !120}
!7688 = !{!7689, !7690, !7691, !7692, !7693}
!7689 = !DILocalVariable(name: "buf", arg: 1, scope: !7685, file: !7361, line: 352, type: !102)
!7690 = !DILocalVariable(name: "c", arg: 2, scope: !7685, file: !7361, line: 352, type: !103)
!7691 = !DILocalVariable(name: "n", arg: 3, scope: !7685, file: !7361, line: 352, type: !120)
!7692 = !DILocalVariable(name: "d_byte", scope: !7685, file: !7361, line: 356, type: !837)
!7693 = !DILocalVariable(name: "c_byte", scope: !7685, file: !7361, line: 357, type: !209)
!7694 = !DILocation(line: 0, scope: !7685)
!7695 = !DILocation(line: 357, column: 25, scope: !7685)
!7696 = !DILocation(line: 389, column: 11, scope: !7685)
!7697 = !DILocation(line: 389, column: 2, scope: !7685)
!7698 = !DILocation(line: 390, column: 11, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7685, file: !7361, line: 389, column: 16)
!7700 = !DILocation(line: 390, column: 15, scope: !7699)
!7701 = !DILocation(line: 391, column: 4, scope: !7699)
!7702 = distinct !{!7702, !7697, !7703}
!7703 = !DILocation(line: 392, column: 2, scope: !7685)
!7704 = !DILocation(line: 394, column: 2, scope: !7685)
!7705 = distinct !DISubprogram(name: "memchr", scope: !7361, file: !7361, line: 404, type: !7706, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !7708)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{!102, !13, !103, !120}
!7708 = !{!7709, !7710, !7711, !7712}
!7709 = !DILocalVariable(name: "s", arg: 1, scope: !7705, file: !7361, line: 404, type: !13)
!7710 = !DILocalVariable(name: "c", arg: 2, scope: !7705, file: !7361, line: 404, type: !103)
!7711 = !DILocalVariable(name: "n", arg: 3, scope: !7705, file: !7361, line: 404, type: !120)
!7712 = !DILocalVariable(name: "p", scope: !7713, file: !7361, line: 407, type: !2568)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !7361, line: 406, column: 14)
!7714 = distinct !DILexicalBlock(scope: !7705, file: !7361, line: 406, column: 6)
!7715 = !DILocation(line: 0, scope: !7705)
!7716 = !DILocation(line: 406, column: 8, scope: !7714)
!7717 = !DILocation(line: 406, column: 6, scope: !7705)
!7718 = !DILocation(line: 409, column: 3, scope: !7713)
!7719 = !DILocation(line: 0, scope: !7713)
!7720 = !DILocation(line: 410, column: 8, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7722, file: !7361, line: 410, column: 8)
!7722 = distinct !DILexicalBlock(scope: !7713, file: !7361, line: 409, column: 6)
!7723 = !DILocation(line: 410, column: 13, scope: !7721)
!7724 = !DILocation(line: 410, column: 8, scope: !7722)
!7725 = distinct !{!7725, !7718, !7726}
!7726 = !DILocation(line: 414, column: 20, scope: !7713)
!7727 = !DILocation(line: 417, column: 2, scope: !7705)
!7728 = !DILocation(line: 418, column: 1, scope: !7705)
!7729 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !440, file: !440, line: 23, type: !2950, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7730)
!7730 = !{!7731}
!7731 = !DILocalVariable(name: "hook", arg: 1, scope: !7729, file: !440, line: 23, type: !128)
!7732 = !DILocation(line: 0, scope: !7729)
!7733 = !DILocation(line: 25, column: 15, scope: !7729)
!7734 = !DILocation(line: 26, column: 1, scope: !7729)
!7735 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !440, file: !440, line: 14, type: !129, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7736)
!7736 = !{!7737}
!7737 = !DILocalVariable(name: "c", arg: 1, scope: !7735, file: !440, line: 14, type: !103)
!7738 = !DILocation(line: 0, scope: !7735)
!7739 = !DILocation(line: 18, column: 2, scope: !7735)
!7740 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !440, file: !440, line: 28, type: !7741, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7743)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!103, !103, !436}
!7743 = !{!7744, !7745}
!7744 = !DILocalVariable(name: "c", arg: 1, scope: !7740, file: !440, line: 28, type: !103)
!7745 = !DILocalVariable(name: "stream", arg: 2, scope: !7740, file: !440, line: 28, type: !436)
!7746 = !DILocation(line: 0, scope: !7740)
!7747 = !DILocation(line: 30, column: 27, scope: !7740)
!7748 = !DILocation(line: 30, column: 50, scope: !7740)
!7749 = !DILocation(line: 30, column: 9, scope: !7740)
!7750 = !DILocation(line: 30, column: 2, scope: !7740)
!7751 = distinct !DISubprogram(name: "fputc", scope: !440, file: !440, line: 41, type: !7741, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7752)
!7752 = !{!7753, !7754}
!7753 = !DILocalVariable(name: "c", arg: 1, scope: !7751, file: !440, line: 41, type: !103)
!7754 = !DILocalVariable(name: "stream", arg: 2, scope: !7751, file: !440, line: 41, type: !436)
!7755 = !DILocation(line: 0, scope: !7751)
!7756 = !DILocation(line: 43, column: 9, scope: !7751)
!7757 = !DILocation(line: 43, column: 2, scope: !7751)
!7758 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7759, file: !7759, line: 72, type: !7741, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7760)
!7759 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!7760 = !{!7761, !7762}
!7761 = !DILocalVariable(name: "c", arg: 1, scope: !7758, file: !7759, line: 72, type: !103)
!7762 = !DILocalVariable(name: "stream", arg: 2, scope: !7758, file: !7759, line: 72, type: !436)
!7763 = !DILocation(line: 0, scope: !7758)
!7764 = !DILocation(line: 81, column: 2, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7758, file: !7759, line: 81, column: 2)
!7766 = !{i64 2154126586}
!7767 = !DILocation(line: 82, column: 9, scope: !7758)
!7768 = !DILocation(line: 82, column: 2, scope: !7758)
!7769 = distinct !DISubprogram(name: "fputs", scope: !440, file: !440, line: 46, type: !7770, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7773)
!7770 = !DISubroutineType(types: !7771)
!7771 = !{!103, !7365, !7772}
!7772 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !436)
!7773 = !{!7774, !7775, !7776, !7777}
!7774 = !DILocalVariable(name: "s", arg: 1, scope: !7769, file: !440, line: 46, type: !7365)
!7775 = !DILocalVariable(name: "stream", arg: 2, scope: !7769, file: !440, line: 46, type: !7772)
!7776 = !DILocalVariable(name: "len", scope: !7769, file: !440, line: 48, type: !103)
!7777 = !DILocalVariable(name: "ret", scope: !7769, file: !440, line: 49, type: !103)
!7778 = !DILocation(line: 0, scope: !7769)
!7779 = !DILocation(line: 48, column: 12, scope: !7769)
!7780 = !DILocation(line: 51, column: 8, scope: !7769)
!7781 = !DILocation(line: 53, column: 13, scope: !7769)
!7782 = !DILocation(line: 53, column: 9, scope: !7769)
!7783 = !DILocation(line: 53, column: 2, scope: !7769)
!7784 = distinct !DISubprogram(name: "fwrite", scope: !440, file: !440, line: 99, type: !7785, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7787)
!7785 = !DISubroutineType(types: !7786)
!7786 = !{!120, !7666, !120, !120, !7772}
!7787 = !{!7788, !7789, !7790, !7791}
!7788 = !DILocalVariable(name: "ptr", arg: 1, scope: !7784, file: !440, line: 99, type: !7666)
!7789 = !DILocalVariable(name: "size", arg: 2, scope: !7784, file: !440, line: 99, type: !120)
!7790 = !DILocalVariable(name: "nitems", arg: 3, scope: !7784, file: !440, line: 99, type: !120)
!7791 = !DILocalVariable(name: "stream", arg: 4, scope: !7784, file: !440, line: 100, type: !7772)
!7792 = !DILocation(line: 0, scope: !7784)
!7793 = !DILocation(line: 102, column: 9, scope: !7784)
!7794 = !DILocation(line: 102, column: 2, scope: !7784)
!7795 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7759, file: !7759, line: 96, type: !7785, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7796)
!7796 = !{!7797, !7798, !7799, !7800}
!7797 = !DILocalVariable(name: "ptr", arg: 1, scope: !7795, file: !7759, line: 96, type: !7666)
!7798 = !DILocalVariable(name: "size", arg: 2, scope: !7795, file: !7759, line: 96, type: !120)
!7799 = !DILocalVariable(name: "nitems", arg: 3, scope: !7795, file: !7759, line: 96, type: !120)
!7800 = !DILocalVariable(name: "stream", arg: 4, scope: !7795, file: !7759, line: 96, type: !7772)
!7801 = !DILocation(line: 0, scope: !7795)
!7802 = !DILocation(line: 107, column: 2, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7795, file: !7759, line: 107, column: 2)
!7804 = !{i64 2154126690}
!7805 = !DILocation(line: 108, column: 9, scope: !7795)
!7806 = !DILocation(line: 108, column: 2, scope: !7795)
!7807 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !440, file: !440, line: 56, type: !7785, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7808)
!7808 = !{!7809, !7810, !7811, !7812, !7813, !7814, !7815, !7816}
!7809 = !DILocalVariable(name: "ptr", arg: 1, scope: !7807, file: !440, line: 56, type: !7666)
!7810 = !DILocalVariable(name: "size", arg: 2, scope: !7807, file: !440, line: 56, type: !120)
!7811 = !DILocalVariable(name: "nitems", arg: 3, scope: !7807, file: !440, line: 57, type: !120)
!7812 = !DILocalVariable(name: "stream", arg: 4, scope: !7807, file: !440, line: 57, type: !7772)
!7813 = !DILocalVariable(name: "i", scope: !7807, file: !440, line: 59, type: !120)
!7814 = !DILocalVariable(name: "j", scope: !7807, file: !440, line: 60, type: !120)
!7815 = !DILocalVariable(name: "p", scope: !7807, file: !440, line: 61, type: !2568)
!7816 = !DILabel(scope: !7807, name: "done", file: !440, line: 82)
!7817 = !DILocation(line: 0, scope: !7807)
!7818 = !DILocation(line: 63, column: 14, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7807, file: !440, line: 63, column: 6)
!7820 = !DILocation(line: 63, column: 24, scope: !7819)
!7821 = !DILocation(line: 72, column: 3, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7807, file: !440, line: 70, column: 5)
!7823 = !DILocation(line: 0, scope: !7822)
!7824 = !DILocation(line: 73, column: 8, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !440, line: 73, column: 8)
!7826 = distinct !DILexicalBlock(scope: !7822, file: !440, line: 72, column: 6)
!7827 = !DILocation(line: 73, column: 29, scope: !7825)
!7828 = !DILocation(line: 73, column: 27, scope: !7825)
!7829 = !DILocation(line: 73, column: 21, scope: !7825)
!7830 = !DILocation(line: 73, column: 33, scope: !7825)
!7831 = !DILocation(line: 73, column: 8, scope: !7826)
!7832 = !DILocation(line: 76, column: 5, scope: !7826)
!7833 = !DILocation(line: 77, column: 14, scope: !7822)
!7834 = !DILocation(line: 77, column: 3, scope: !7826)
!7835 = distinct !{!7835, !7821, !7836}
!7836 = !DILocation(line: 77, column: 17, scope: !7822)
!7837 = !DILocation(line: 79, column: 4, scope: !7822)
!7838 = !DILocation(line: 80, column: 13, scope: !7807)
!7839 = !DILocation(line: 80, column: 2, scope: !7822)
!7840 = distinct !{!7840, !7841, !7842}
!7841 = !DILocation(line: 70, column: 2, scope: !7807)
!7842 = !DILocation(line: 80, column: 16, scope: !7807)
!7843 = !DILocation(line: 82, column: 1, scope: !7807)
!7844 = !DILocation(line: 83, column: 17, scope: !7807)
!7845 = !DILocation(line: 83, column: 2, scope: !7807)
!7846 = !DILocation(line: 84, column: 1, scope: !7807)
!7847 = distinct !DISubprogram(name: "puts", scope: !440, file: !440, line: 106, type: !7848, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7850)
!7848 = !DISubroutineType(types: !7849)
!7849 = !{!103, !199}
!7850 = !{!7851}
!7851 = !DILocalVariable(name: "s", arg: 1, scope: !7847, file: !440, line: 106, type: !199)
!7852 = !DILocation(line: 0, scope: !7847)
!7853 = !DILocation(line: 108, column: 6, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7847, file: !440, line: 108, column: 6)
!7855 = !DILocation(line: 108, column: 23, scope: !7854)
!7856 = !DILocation(line: 108, column: 6, scope: !7847)
!7857 = !DILocation(line: 112, column: 9, scope: !7847)
!7858 = !DILocation(line: 112, column: 29, scope: !7847)
!7859 = !DILocation(line: 112, column: 2, scope: !7847)
!7860 = !DILocation(line: 113, column: 1, scope: !7847)
!7861 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !552, file: !552, line: 368, type: !605, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7862)
!7862 = !{!7863}
!7863 = !DILocalVariable(name: "dev", arg: 1, scope: !7861, file: !552, line: 368, type: !581)
!7864 = !DILocation(line: 0, scope: !7861)
!7865 = !DILocation(line: 370, column: 2, scope: !7861)
!7866 = !DILocation(line: 371, column: 1, scope: !7861)
!7867 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !552, file: !552, line: 243, type: !7868, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7870)
!7868 = !DISubroutineType(types: !7869)
!7869 = !{null, !103, !103, !581}
!7870 = !{!7871, !7872, !7873, !7874, !7876}
!7871 = !DILocalVariable(name: "min", arg: 1, scope: !7867, file: !552, line: 243, type: !103)
!7872 = !DILocalVariable(name: "max", arg: 2, scope: !7867, file: !552, line: 243, type: !103)
!7873 = !DILocalVariable(name: "dev", arg: 3, scope: !7867, file: !552, line: 243, type: !581)
!7874 = !DILocalVariable(name: "data", scope: !7867, file: !552, line: 245, type: !7875)
!7875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 32)
!7876 = !DILocalVariable(name: "line", scope: !7867, file: !552, line: 246, type: !103)
!7877 = !DILocation(line: 0, scope: !7867)
!7878 = !DILocation(line: 245, column: 38, scope: !7867)
!7879 = !DILocation(line: 249, column: 24, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7881, file: !552, line: 249, column: 2)
!7881 = distinct !DILexicalBlock(scope: !7867, file: !552, line: 249, column: 2)
!7882 = !DILocation(line: 249, column: 2, scope: !7881)
!7883 = !DILocation(line: 251, column: 7, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !552, line: 251, column: 7)
!7885 = distinct !DILexicalBlock(scope: !7880, file: !552, line: 249, column: 39)
!7886 = !DILocation(line: 251, column: 7, scope: !7885)
!7887 = !DILocation(line: 253, column: 4, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7884, file: !552, line: 251, column: 36)
!7889 = !DILocation(line: 256, column: 24, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7888, file: !552, line: 256, column: 8)
!7891 = !DILocation(line: 256, column: 9, scope: !7890)
!7892 = !DILocation(line: 256, column: 8, scope: !7888)
!7893 = !DILocation(line: 260, column: 43, scope: !7888)
!7894 = !DILocation(line: 260, column: 4, scope: !7888)
!7895 = !DILocation(line: 261, column: 3, scope: !7888)
!7896 = !DILocation(line: 249, column: 35, scope: !7880)
!7897 = distinct !{!7897, !7882, !7898}
!7898 = !DILocation(line: 262, column: 2, scope: !7881)
!7899 = !DILocation(line: 263, column: 1, scope: !7867)
!7900 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !552, file: !552, line: 158, type: !129, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7901)
!7901 = !{!7902}
!7902 = !DILocalVariable(name: "line", arg: 1, scope: !7900, file: !552, line: 158, type: !103)
!7903 = !DILocation(line: 0, scope: !7900)
!7904 = !DILocation(line: 170, column: 38, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7906, file: !552, line: 160, column: 17)
!7906 = distinct !DILexicalBlock(scope: !7900, file: !552, line: 160, column: 6)
!7907 = !DILocation(line: 170, column: 10, scope: !7905)
!7908 = !DILocation(line: 176, column: 1, scope: !7900)
!7909 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !552, file: !552, line: 183, type: !7910, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7912)
!7910 = !DISubroutineType(types: !7911)
!7911 = !{null, !103}
!7912 = !{!7913}
!7913 = !DILocalVariable(name: "line", arg: 1, scope: !7909, file: !552, line: 183, type: !103)
!7914 = !DILocation(line: 0, scope: !7909)
!7915 = !DILocation(line: 195, column: 28, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7917, file: !552, line: 185, column: 17)
!7917 = distinct !DILexicalBlock(scope: !7909, file: !552, line: 185, column: 6)
!7918 = !DILocation(line: 195, column: 3, scope: !7916)
!7919 = !DILocation(line: 200, column: 1, scope: !7909)
!7920 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7921, file: !7921, line: 910, type: !6357, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7922)
!7921 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7922 = !{!7923}
!7923 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7920, file: !7921, line: 910, type: !137)
!7924 = !DILocation(line: 0, scope: !7920)
!7925 = !DILocation(line: 912, column: 3, scope: !7920)
!7926 = !DILocation(line: 913, column: 1, scope: !7920)
!7927 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7921, file: !7921, line: 834, type: !7273, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7928)
!7928 = !{!7929}
!7929 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7927, file: !7921, line: 834, type: !137)
!7930 = !DILocation(line: 0, scope: !7927)
!7931 = !DILocation(line: 836, column: 11, scope: !7927)
!7932 = !DILocation(line: 836, column: 40, scope: !7927)
!7933 = !DILocation(line: 836, column: 3, scope: !7927)
!7934 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !552, file: !552, line: 304, type: !605, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7935)
!7935 = !{!7936}
!7936 = !DILocalVariable(name: "dev", arg: 1, scope: !7934, file: !552, line: 304, type: !581)
!7937 = !DILocation(line: 0, scope: !7934)
!7938 = !DILocation(line: 306, column: 2, scope: !7934)
!7939 = !DILocation(line: 307, column: 1, scope: !7934)
!7940 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !552, file: !552, line: 299, type: !605, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7941)
!7941 = !{!7942}
!7942 = !DILocalVariable(name: "dev", arg: 1, scope: !7940, file: !552, line: 299, type: !581)
!7943 = !DILocation(line: 0, scope: !7940)
!7944 = !DILocation(line: 301, column: 2, scope: !7940)
!7945 = !DILocation(line: 302, column: 1, scope: !7940)
!7946 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !552, file: !552, line: 294, type: !605, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7947)
!7947 = !{!7948}
!7948 = !DILocalVariable(name: "dev", arg: 1, scope: !7946, file: !552, line: 294, type: !581)
!7949 = !DILocation(line: 0, scope: !7946)
!7950 = !DILocation(line: 296, column: 2, scope: !7946)
!7951 = !DILocation(line: 297, column: 1, scope: !7946)
!7952 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !552, file: !552, line: 397, type: !605, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7953)
!7953 = !{!7954}
!7954 = !DILocalVariable(name: "dev", arg: 1, scope: !7952, file: !552, line: 397, type: !581)
!7955 = !DILocation(line: 0, scope: !7952)
!7956 = !DILocation(line: 399, column: 2, scope: !7952)
!7957 = !DILocation(line: 400, column: 1, scope: !7952)
!7958 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !552, file: !552, line: 392, type: !605, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7959)
!7959 = !{!7960}
!7960 = !DILocalVariable(name: "dev", arg: 1, scope: !7958, file: !552, line: 392, type: !581)
!7961 = !DILocation(line: 0, scope: !7958)
!7962 = !DILocation(line: 394, column: 2, scope: !7958)
!7963 = !DILocation(line: 395, column: 1, scope: !7958)
!7964 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !552, file: !552, line: 289, type: !605, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7965)
!7965 = !{!7966}
!7966 = !DILocalVariable(name: "dev", arg: 1, scope: !7964, file: !552, line: 289, type: !581)
!7967 = !DILocation(line: 0, scope: !7964)
!7968 = !DILocation(line: 291, column: 2, scope: !7964)
!7969 = !DILocation(line: 292, column: 1, scope: !7964)
!7970 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !552, file: !552, line: 387, type: !605, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7971)
!7971 = !{!7972}
!7972 = !DILocalVariable(name: "dev", arg: 1, scope: !7970, file: !552, line: 387, type: !581)
!7973 = !DILocation(line: 0, scope: !7970)
!7974 = !DILocation(line: 389, column: 2, scope: !7970)
!7975 = !DILocation(line: 390, column: 1, scope: !7970)
!7976 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !552, file: !552, line: 382, type: !605, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7977)
!7977 = !{!7978}
!7978 = !DILocalVariable(name: "dev", arg: 1, scope: !7976, file: !552, line: 382, type: !581)
!7979 = !DILocation(line: 0, scope: !7976)
!7980 = !DILocation(line: 384, column: 2, scope: !7976)
!7981 = !DILocation(line: 385, column: 1, scope: !7976)
!7982 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !552, file: !552, line: 373, type: !605, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7983)
!7983 = !{!7984}
!7984 = !DILocalVariable(name: "dev", arg: 1, scope: !7982, file: !552, line: 373, type: !581)
!7985 = !DILocation(line: 0, scope: !7982)
!7986 = !DILocation(line: 375, column: 2, scope: !7982)
!7987 = !DILocation(line: 376, column: 1, scope: !7982)
!7988 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !552, file: !552, line: 284, type: !605, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7989)
!7989 = !{!7990}
!7990 = !DILocalVariable(name: "dev", arg: 1, scope: !7988, file: !552, line: 284, type: !581)
!7991 = !DILocation(line: 0, scope: !7988)
!7992 = !DILocation(line: 286, column: 2, scope: !7988)
!7993 = !DILocation(line: 287, column: 1, scope: !7988)
!7994 = distinct !DISubprogram(name: "stm32_exti_init", scope: !552, file: !552, line: 416, type: !579, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7995)
!7995 = !{!7996}
!7996 = !DILocalVariable(name: "dev", arg: 1, scope: !7994, file: !552, line: 416, type: !581)
!7997 = !DILocation(line: 0, scope: !7994)
!7998 = !DILocation(line: 418, column: 2, scope: !7994)
!7999 = !DILocation(line: 420, column: 2, scope: !7994)
!8000 = !DILocation(line: 0, scope: !604)
!8001 = !DILocation(line: 493, column: 2, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !604, file: !552, line: 493, column: 2)
!8003 = !DILocation(line: 497, column: 2, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !604, file: !552, line: 497, column: 2)
!8005 = !DILocation(line: 507, column: 2, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !604, file: !552, line: 507, column: 2)
!8007 = !DILocation(line: 512, column: 2, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !604, file: !552, line: 512, column: 2)
!8009 = !DILocation(line: 516, column: 2, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !604, file: !552, line: 516, column: 2)
!8011 = !DILocation(line: 523, column: 2, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !604, file: !552, line: 523, column: 2)
!8013 = !DILocation(line: 527, column: 2, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !604, file: !552, line: 527, column: 2)
!8015 = !DILocation(line: 581, column: 2, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !604, file: !552, line: 581, column: 2)
!8017 = !DILocation(line: 586, column: 2, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !604, file: !552, line: 586, column: 2)
!8019 = !DILocation(line: 591, column: 2, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !604, file: !552, line: 591, column: 2)
!8021 = !DILocation(line: 595, column: 2, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !604, file: !552, line: 595, column: 2)
!8023 = !DILocation(line: 607, column: 1, scope: !604)
!8024 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !552, file: !552, line: 112, type: !7910, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8025)
!8025 = !{!8026, !8027}
!8026 = !DILocalVariable(name: "line", arg: 1, scope: !8024, file: !552, line: 112, type: !103)
!8027 = !DILocalVariable(name: "irqnum", scope: !8024, file: !552, line: 114, type: !103)
!8028 = !DILocation(line: 0, scope: !8024)
!8029 = !DILocation(line: 121, column: 11, scope: !8024)
!8030 = !DILocation(line: 130, column: 26, scope: !8024)
!8031 = !DILocation(line: 130, column: 2, scope: !8024)
!8032 = !DILocation(line: 134, column: 2, scope: !8024)
!8033 = !DILocation(line: 135, column: 1, scope: !8024)
!8034 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7921, file: !7921, line: 268, type: !6357, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8035)
!8035 = !{!8036}
!8036 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8034, file: !7921, line: 268, type: !137)
!8037 = !DILocation(line: 0, scope: !8034)
!8038 = !DILocation(line: 270, column: 3, scope: !8034)
!8039 = !DILocation(line: 271, column: 1, scope: !8034)
!8040 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !552, file: !552, line: 137, type: !7910, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8041)
!8041 = !{!8042}
!8042 = !DILocalVariable(name: "line", arg: 1, scope: !8040, file: !552, line: 137, type: !103)
!8043 = !DILocation(line: 0, scope: !8040)
!8044 = !DILocation(line: 141, column: 11, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8040, file: !552, line: 141, column: 6)
!8046 = !DILocation(line: 141, column: 6, scope: !8040)
!8047 = !DILocation(line: 145, column: 28, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8045, file: !552, line: 141, column: 17)
!8049 = !DILocation(line: 145, column: 3, scope: !8048)
!8050 = !DILocation(line: 147, column: 2, scope: !8048)
!8051 = !DILocation(line: 151, column: 1, scope: !8040)
!8052 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7921, file: !7921, line: 309, type: !6357, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8053)
!8053 = !{!8054}
!8054 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8052, file: !7921, line: 309, type: !137)
!8055 = !DILocation(line: 0, scope: !8052)
!8056 = !DILocation(line: 311, column: 3, scope: !8052)
!8057 = !DILocation(line: 312, column: 1, scope: !8052)
!8058 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !552, file: !552, line: 202, type: !8059, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8061)
!8059 = !DISubroutineType(types: !8060)
!8060 = !{null, !103, !103}
!8061 = !{!8062, !8063}
!8062 = !DILocalVariable(name: "line", arg: 1, scope: !8058, file: !552, line: 202, type: !103)
!8063 = !DILocalVariable(name: "trigger", arg: 2, scope: !8058, file: !552, line: 202, type: !103)
!8064 = !DILocation(line: 0, scope: !8058)
!8065 = !DILocation(line: 211, column: 2, scope: !8058)
!8066 = !DILocation(line: 213, column: 36, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8058, file: !552, line: 211, column: 19)
!8068 = !DILocation(line: 213, column: 3, scope: !8067)
!8069 = !DILocation(line: 214, column: 3, scope: !8067)
!8070 = !DILocation(line: 215, column: 3, scope: !8067)
!8071 = !DILocation(line: 217, column: 35, scope: !8067)
!8072 = !DILocation(line: 217, column: 3, scope: !8067)
!8073 = !DILocation(line: 218, column: 3, scope: !8067)
!8074 = !DILocation(line: 219, column: 3, scope: !8067)
!8075 = !DILocation(line: 221, column: 36, scope: !8067)
!8076 = !DILocation(line: 221, column: 3, scope: !8067)
!8077 = !DILocation(line: 222, column: 3, scope: !8067)
!8078 = !DILocation(line: 223, column: 3, scope: !8067)
!8079 = !DILocation(line: 225, column: 35, scope: !8067)
!8080 = !DILocation(line: 225, column: 3, scope: !8067)
!8081 = !DILocation(line: 226, column: 3, scope: !8067)
!8082 = !DILocation(line: 227, column: 3, scope: !8067)
!8083 = !DILocation(line: 232, column: 1, scope: !8058)
!8084 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7921, file: !7921, line: 573, type: !6357, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8085)
!8085 = !{!8086}
!8086 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8084, file: !7921, line: 573, type: !137)
!8087 = !DILocation(line: 0, scope: !8084)
!8088 = !DILocation(line: 575, column: 3, scope: !8084)
!8089 = !DILocation(line: 577, column: 1, scope: !8084)
!8090 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7921, file: !7921, line: 703, type: !6357, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8091)
!8091 = !{!8092}
!8092 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8090, file: !7921, line: 703, type: !137)
!8093 = !DILocation(line: 0, scope: !8090)
!8094 = !DILocation(line: 705, column: 3, scope: !8090)
!8095 = !DILocation(line: 706, column: 1, scope: !8090)
!8096 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7921, file: !7921, line: 529, type: !6357, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8097)
!8097 = !{!8098}
!8098 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8096, file: !7921, line: 529, type: !137)
!8099 = !DILocation(line: 0, scope: !8096)
!8100 = !DILocation(line: 531, column: 3, scope: !8096)
!8101 = !DILocation(line: 533, column: 1, scope: !8096)
!8102 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7921, file: !7921, line: 661, type: !6357, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8103)
!8103 = !{!8104}
!8104 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8102, file: !7921, line: 661, type: !137)
!8105 = !DILocation(line: 0, scope: !8102)
!8106 = !DILocation(line: 663, column: 3, scope: !8102)
!8107 = !DILocation(line: 664, column: 1, scope: !8102)
!8108 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !552, file: !552, line: 433, type: !8109, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8111)
!8109 = !DISubroutineType(types: !8110)
!8110 = !{!103, !103, !592, !102}
!8111 = !{!8112, !8113, !8114, !8115, !8117}
!8112 = !DILocalVariable(name: "line", arg: 1, scope: !8108, file: !552, line: 433, type: !103)
!8113 = !DILocalVariable(name: "cb", arg: 2, scope: !8108, file: !552, line: 433, type: !592)
!8114 = !DILocalVariable(name: "arg", arg: 3, scope: !8108, file: !552, line: 433, type: !102)
!8115 = !DILocalVariable(name: "dev", scope: !8108, file: !552, line: 435, type: !8116)
!8116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!8117 = !DILocalVariable(name: "data", scope: !8108, file: !552, line: 436, type: !7875)
!8118 = !DILocation(line: 0, scope: !8108)
!8119 = !DILocation(line: 438, column: 21, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8108, file: !552, line: 438, column: 6)
!8121 = !DILocation(line: 438, column: 6, scope: !8120)
!8122 = !DILocation(line: 438, column: 6, scope: !8108)
!8123 = !DILocation(line: 442, column: 20, scope: !8108)
!8124 = !DILocation(line: 443, column: 17, scope: !8108)
!8125 = !DILocation(line: 443, column: 22, scope: !8108)
!8126 = !DILocation(line: 445, column: 2, scope: !8108)
!8127 = !DILocation(line: 446, column: 1, scope: !8108)
!8128 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !552, file: !552, line: 448, type: !7910, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8129)
!8129 = !{!8130, !8131, !8132}
!8130 = !DILocalVariable(name: "line", arg: 1, scope: !8128, file: !552, line: 448, type: !103)
!8131 = !DILocalVariable(name: "dev", scope: !8128, file: !552, line: 450, type: !8116)
!8132 = !DILocalVariable(name: "data", scope: !8128, file: !552, line: 451, type: !7875)
!8133 = !DILocation(line: 0, scope: !8128)
!8134 = !DILocation(line: 453, column: 17, scope: !8128)
!8135 = !DILocation(line: 453, column: 20, scope: !8128)
!8136 = !DILocation(line: 454, column: 17, scope: !8128)
!8137 = !DILocation(line: 454, column: 22, scope: !8128)
!8138 = !DILocation(line: 455, column: 1, scope: !8128)
!8139 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !736, file: !736, line: 183, type: !774, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8140)
!8140 = !{!8141, !8142, !8143, !8144, !8145}
!8141 = !DILocalVariable(name: "dev", arg: 1, scope: !8139, file: !736, line: 183, type: !765)
!8142 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8139, file: !736, line: 184, type: !776)
!8143 = !DILocalVariable(name: "pclken", scope: !8139, file: !736, line: 186, type: !727)
!8144 = !DILocalVariable(name: "reg", scope: !8139, file: !736, line: 187, type: !1315)
!8145 = !DILocalVariable(name: "reg_val", scope: !8139, file: !736, line: 188, type: !137)
!8146 = !DILocation(line: 0, scope: !8139)
!8147 = !DILocation(line: 192, column: 6, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8139, file: !736, line: 192, column: 6)
!8149 = !DILocation(line: 192, column: 6, scope: !8139)
!8150 = !DILocation(line: 197, column: 52, scope: !8139)
!8151 = !DILocation(line: 197, column: 8, scope: !8139)
!8152 = !DILocation(line: 198, column: 12, scope: !8139)
!8153 = !DILocation(line: 199, column: 21, scope: !8139)
!8154 = !DILocation(line: 199, column: 10, scope: !8139)
!8155 = !DILocation(line: 200, column: 7, scope: !8139)
!8156 = !DILocation(line: 202, column: 2, scope: !8139)
!8157 = !DILocation(line: 203, column: 1, scope: !8139)
!8158 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !736, file: !736, line: 205, type: !774, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8159)
!8159 = !{!8160, !8161, !8162, !8163, !8164}
!8160 = !DILocalVariable(name: "dev", arg: 1, scope: !8158, file: !736, line: 205, type: !765)
!8161 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8158, file: !736, line: 206, type: !776)
!8162 = !DILocalVariable(name: "pclken", scope: !8158, file: !736, line: 208, type: !727)
!8163 = !DILocalVariable(name: "reg", scope: !8158, file: !736, line: 209, type: !1315)
!8164 = !DILocalVariable(name: "reg_val", scope: !8158, file: !736, line: 210, type: !137)
!8165 = !DILocation(line: 0, scope: !8158)
!8166 = !DILocation(line: 214, column: 6, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8158, file: !736, line: 214, column: 6)
!8168 = !DILocation(line: 214, column: 6, scope: !8158)
!8169 = !DILocation(line: 219, column: 52, scope: !8158)
!8170 = !DILocation(line: 219, column: 8, scope: !8158)
!8171 = !DILocation(line: 220, column: 12, scope: !8158)
!8172 = !DILocation(line: 221, column: 22, scope: !8158)
!8173 = !DILocation(line: 221, column: 13, scope: !8158)
!8174 = !DILocation(line: 221, column: 10, scope: !8158)
!8175 = !DILocation(line: 222, column: 7, scope: !8158)
!8176 = !DILocation(line: 224, column: 2, scope: !8158)
!8177 = !DILocation(line: 225, column: 1, scope: !8158)
!8178 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !736, file: !736, line: 262, type: !790, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8179)
!8179 = !{!8180, !8181, !8182, !8183, !8184, !8185, !8186, !8187}
!8180 = !DILocalVariable(name: "clock", arg: 1, scope: !8178, file: !736, line: 262, type: !765)
!8181 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8178, file: !736, line: 263, type: !776)
!8182 = !DILocalVariable(name: "rate", arg: 3, scope: !8178, file: !736, line: 264, type: !149)
!8183 = !DILocalVariable(name: "pclken", scope: !8178, file: !736, line: 266, type: !727)
!8184 = !DILocalVariable(name: "ahb_clock", scope: !8178, file: !736, line: 273, type: !137)
!8185 = !DILocalVariable(name: "apb1_clock", scope: !8178, file: !736, line: 274, type: !137)
!8186 = !DILocalVariable(name: "apb2_clock", scope: !8178, file: !736, line: 276, type: !137)
!8187 = !DILocalVariable(name: "ahb3_clock", scope: !8178, file: !736, line: 286, type: !137)
!8188 = !DILocation(line: 0, scope: !8178)
!8189 = !DILocation(line: 273, column: 23, scope: !8178)
!8190 = !DILocation(line: 299, column: 18, scope: !8178)
!8191 = !DILocation(line: 299, column: 2, scope: !8178)
!8192 = !DILocation(line: 274, column: 24, scope: !8178)
!8193 = !DILocation(line: 319, column: 3, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8178, file: !736, line: 299, column: 23)
!8195 = !DILocation(line: 276, column: 24, scope: !8178)
!8196 = !DILocation(line: 323, column: 3, scope: !8194)
!8197 = !DILocation(line: 346, column: 33, scope: !8194)
!8198 = !DILocation(line: 346, column: 11, scope: !8194)
!8199 = !DILocation(line: 350, column: 3, scope: !8194)
!8200 = !DILocation(line: 374, column: 3, scope: !8194)
!8201 = !DILocation(line: 379, column: 3, scope: !8194)
!8202 = !DILocation(line: 0, scope: !8194)
!8203 = !DILocation(line: 396, column: 1, scope: !8178)
!8204 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !736, file: !736, line: 227, type: !806, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8205)
!8205 = !{!8206, !8207, !8208, !8209, !8210, !8211, !8212, !8213}
!8206 = !DILocalVariable(name: "dev", arg: 1, scope: !8204, file: !736, line: 227, type: !765)
!8207 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8204, file: !736, line: 228, type: !776)
!8208 = !DILocalVariable(name: "data", arg: 3, scope: !8204, file: !736, line: 229, type: !102)
!8209 = !DILocalVariable(name: "pclken", scope: !8204, file: !736, line: 233, type: !727)
!8210 = !DILocalVariable(name: "reg", scope: !8204, file: !736, line: 234, type: !1315)
!8211 = !DILocalVariable(name: "reg_val", scope: !8204, file: !736, line: 235, type: !137)
!8212 = !DILocalVariable(name: "dt_val", scope: !8204, file: !736, line: 235, type: !137)
!8213 = !DILocalVariable(name: "err", scope: !8204, file: !736, line: 236, type: !103)
!8214 = !DILocation(line: 0, scope: !8204)
!8215 = !DILocation(line: 241, column: 30, scope: !8204)
!8216 = !DILocation(line: 241, column: 8, scope: !8204)
!8217 = !DILocation(line: 242, column: 10, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8204, file: !736, line: 242, column: 6)
!8219 = !DILocation(line: 242, column: 6, scope: !8204)
!8220 = !DILocation(line: 247, column: 11, scope: !8204)
!8221 = !DILocation(line: 248, column: 6, scope: !8204)
!8222 = !DILocation(line: 247, column: 44, scope: !8204)
!8223 = !DILocation(line: 250, column: 6, scope: !8204)
!8224 = !DILocation(line: 249, column: 52, scope: !8204)
!8225 = !DILocation(line: 249, column: 8, scope: !8204)
!8226 = !DILocation(line: 251, column: 12, scope: !8204)
!8227 = !DILocation(line: 252, column: 10, scope: !8204)
!8228 = !DILocation(line: 253, column: 7, scope: !8204)
!8229 = !DILocation(line: 255, column: 2, scope: !8204)
!8230 = !DILocation(line: 260, column: 1, scope: !8204)
!8231 = distinct !DISubprogram(name: "enabled_clock", scope: !736, file: !736, line: 100, type: !8232, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8234)
!8232 = !DISubroutineType(types: !8233)
!8233 = !{!103, !137}
!8234 = !{!8235, !8236}
!8235 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8231, file: !736, line: 100, type: !137)
!8236 = !DILocalVariable(name: "r", scope: !8231, file: !736, line: 102, type: !103)
!8237 = !DILocation(line: 0, scope: !8231)
!8238 = !DILocation(line: 104, column: 2, scope: !8231)
!8239 = !DILocation(line: 180, column: 2, scope: !8231)
!8240 = !DILocation(line: 181, column: 1, scope: !8231)
!8241 = distinct !DISubprogram(name: "get_bus_clock", scope: !736, file: !736, line: 79, type: !8242, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8244)
!8242 = !DISubroutineType(types: !8243)
!8243 = !{!137, !137, !137}
!8244 = !{!8245, !8246}
!8245 = !DILocalVariable(name: "clock", arg: 1, scope: !8241, file: !736, line: 79, type: !137)
!8246 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8241, file: !736, line: 79, type: !137)
!8247 = !DILocation(line: 0, scope: !8241)
!8248 = !DILocation(line: 81, column: 15, scope: !8241)
!8249 = !DILocation(line: 81, column: 2, scope: !8241)
!8250 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !736, file: !736, line: 68, type: !8251, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8253)
!8251 = !DISubroutineType(types: !8252)
!8252 = !{!137, !137, !103, !103, !103}
!8253 = !{!8254, !8255, !8256, !8257}
!8254 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8250, file: !736, line: 68, type: !137)
!8255 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8250, file: !736, line: 69, type: !103)
!8256 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8250, file: !736, line: 70, type: !103)
!8257 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8250, file: !736, line: 71, type: !103)
!8258 = !DILocation(line: 0, scope: !8250)
!8259 = !DILocation(line: 75, column: 22, scope: !8250)
!8260 = !DILocation(line: 75, column: 34, scope: !8250)
!8261 = !DILocation(line: 75, column: 2, scope: !8250)
!8262 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !736, file: !736, line: 641, type: !763, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8263)
!8263 = !{!8264, !8265, !8266}
!8264 = !DILocalVariable(name: "dev", arg: 1, scope: !8262, file: !736, line: 641, type: !765)
!8265 = !DILocalVariable(name: "old_flash_freq", scope: !8262, file: !736, line: 664, type: !137)
!8266 = !DILocalVariable(name: "new_flash_freq", scope: !8262, file: !736, line: 665, type: !137)
!8267 = !DILocation(line: 0, scope: !8262)
!8268 = !DILocation(line: 646, column: 2, scope: !8262)
!8269 = !DILocation(line: 667, column: 19, scope: !8262)
!8270 = !DILocation(line: 674, column: 21, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8262, file: !736, line: 674, column: 6)
!8272 = !DILocation(line: 674, column: 6, scope: !8262)
!8273 = !DILocation(line: 675, column: 3, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8271, file: !736, line: 674, column: 59)
!8275 = !DILocation(line: 676, column: 2, scope: !8274)
!8276 = !DILocation(line: 680, column: 2, scope: !8262)
!8277 = !DILocation(line: 683, column: 2, scope: !8262)
!8278 = !DILocation(line: 690, column: 3, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !736, line: 689, column: 9)
!8280 = distinct !DILexicalBlock(scope: !8262, file: !736, line: 685, column: 6)
!8281 = !DILocation(line: 695, column: 2, scope: !8262)
!8282 = !DILocation(line: 696, column: 2, scope: !8262)
!8283 = !DILocation(line: 696, column: 9, scope: !8262)
!8284 = !DILocation(line: 696, column: 34, scope: !8262)
!8285 = distinct !{!8285, !8282, !8286}
!8286 = !DILocation(line: 697, column: 2, scope: !8262)
!8287 = !DILocation(line: 720, column: 21, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8262, file: !736, line: 720, column: 6)
!8289 = !DILocation(line: 720, column: 6, scope: !8262)
!8290 = !DILocation(line: 721, column: 3, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8288, file: !736, line: 720, column: 60)
!8292 = !DILocation(line: 722, column: 2, scope: !8291)
!8293 = !DILocation(line: 725, column: 18, scope: !8262)
!8294 = !DILocation(line: 728, column: 2, scope: !8262)
!8295 = !DILocation(line: 730, column: 2, scope: !8262)
!8296 = !DILocation(line: 745, column: 2, scope: !8262)
!8297 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8298, file: !8298, line: 3275, type: !135, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8298 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8299 = !DILocation(line: 3277, column: 21, scope: !8297)
!8300 = !DILocation(line: 3277, column: 3, scope: !8297)
!8301 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !736, file: !736, line: 507, type: !2802, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8302 = !DILocation(line: 534, column: 7, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !736, line: 534, column: 7)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !736, line: 532, column: 37)
!8305 = distinct !DILexicalBlock(scope: !8301, file: !736, line: 532, column: 6)
!8306 = !DILocation(line: 534, column: 28, scope: !8303)
!8307 = !DILocation(line: 534, column: 7, scope: !8304)
!8308 = !DILocation(line: 536, column: 4, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8303, file: !736, line: 534, column: 34)
!8310 = !DILocation(line: 537, column: 4, scope: !8309)
!8311 = !DILocation(line: 537, column: 11, scope: !8309)
!8312 = !DILocation(line: 537, column: 32, scope: !8309)
!8313 = distinct !{!8313, !8310, !8314}
!8314 = !DILocation(line: 539, column: 4, scope: !8309)
!8315 = !DILocation(line: 583, column: 3, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8317, file: !736, line: 577, column: 37)
!8317 = distinct !DILexicalBlock(scope: !8301, file: !736, line: 577, column: 6)
!8318 = !DILocation(line: 584, column: 3, scope: !8316)
!8319 = !DILocation(line: 584, column: 10, scope: !8316)
!8320 = !DILocation(line: 584, column: 31, scope: !8316)
!8321 = distinct !{!8321, !8318, !8322}
!8322 = !DILocation(line: 585, column: 3, scope: !8316)
!8323 = !DILocation(line: 627, column: 1, scope: !8301)
!8324 = distinct !DISubprogram(name: "set_up_plls", scope: !736, file: !736, line: 448, type: !2802, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8325 = !DILocation(line: 460, column: 6, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8324, file: !736, line: 460, column: 6)
!8327 = !DILocation(line: 460, column: 31, scope: !8326)
!8328 = !DILocation(line: 460, column: 6, scope: !8324)
!8329 = !DILocation(line: 461, column: 3, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8326, file: !736, line: 460, column: 67)
!8331 = !DILocation(line: 462, column: 3, scope: !8330)
!8332 = !DILocation(line: 463, column: 2, scope: !8330)
!8333 = !DILocation(line: 464, column: 2, scope: !8324)
!8334 = !DILocation(line: 488, column: 2, scope: !8324)
!8335 = !DILocation(line: 496, column: 2, scope: !8324)
!8336 = !DILocation(line: 499, column: 2, scope: !8324)
!8337 = !DILocation(line: 500, column: 2, scope: !8324)
!8338 = !DILocation(line: 500, column: 9, scope: !8324)
!8339 = !DILocation(line: 500, column: 30, scope: !8324)
!8340 = distinct !{!8340, !8337, !8341}
!8341 = !DILocation(line: 502, column: 2, scope: !8324)
!8342 = !DILocation(line: 505, column: 1, scope: !8324)
!8343 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8298, file: !8298, line: 3224, type: !6357, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8344)
!8344 = !{!8345}
!8345 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8343, file: !8298, line: 3224, type: !137)
!8346 = !DILocation(line: 0, scope: !8343)
!8347 = !DILocation(line: 3226, column: 3, scope: !8343)
!8348 = !DILocation(line: 3227, column: 1, scope: !8343)
!8349 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8298, file: !8298, line: 3188, type: !6357, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8350)
!8350 = !{!8351}
!8351 = !DILocalVariable(name: "Source", arg: 1, scope: !8349, file: !8298, line: 3188, type: !137)
!8352 = !DILocation(line: 0, scope: !8349)
!8353 = !DILocation(line: 3190, column: 3, scope: !8349)
!8354 = !DILocation(line: 3191, column: 1, scope: !8349)
!8355 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8298, file: !8298, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8356 = !DILocation(line: 3206, column: 21, scope: !8355)
!8357 = !DILocation(line: 3206, column: 3, scope: !8355)
!8358 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8298, file: !8298, line: 3240, type: !6357, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8359)
!8359 = !{!8360}
!8360 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8358, file: !8298, line: 3240, type: !137)
!8361 = !DILocation(line: 0, scope: !8358)
!8362 = !DILocation(line: 3242, column: 3, scope: !8358)
!8363 = !DILocation(line: 3243, column: 1, scope: !8358)
!8364 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8298, file: !8298, line: 3256, type: !6357, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !8365)
!8365 = !{!8366}
!8366 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8364, file: !8298, line: 3256, type: !137)
!8367 = !DILocation(line: 0, scope: !8364)
!8368 = !DILocation(line: 3258, column: 3, scope: !8364)
!8369 = !DILocation(line: 3259, column: 1, scope: !8364)
!8370 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !736, file: !736, line: 409, type: !2802, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8371 = !DILocation(line: 412, column: 6, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8370, file: !736, line: 412, column: 6)
!8373 = !DILocation(line: 412, column: 27, scope: !8372)
!8374 = !DILocation(line: 412, column: 6, scope: !8370)
!8375 = !DILocation(line: 414, column: 3, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8372, file: !736, line: 412, column: 33)
!8377 = !DILocation(line: 415, column: 3, scope: !8376)
!8378 = !DILocation(line: 415, column: 10, scope: !8376)
!8379 = !DILocation(line: 415, column: 31, scope: !8376)
!8380 = distinct !{!8380, !8377, !8381}
!8381 = !DILocation(line: 417, column: 3, scope: !8376)
!8382 = !DILocation(line: 421, column: 2, scope: !8370)
!8383 = !DILocation(line: 422, column: 2, scope: !8370)
!8384 = !DILocation(line: 422, column: 9, scope: !8370)
!8385 = !DILocation(line: 422, column: 34, scope: !8370)
!8386 = distinct !{!8386, !8383, !8387}
!8387 = !DILocation(line: 423, column: 2, scope: !8370)
!8388 = !DILocation(line: 424, column: 1, scope: !8370)
!8389 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8298, file: !8298, line: 4195, type: !2802, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8390 = !DILocation(line: 4197, column: 3, scope: !8389)
!8391 = !DILocation(line: 4198, column: 1, scope: !8389)
!8392 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8298, file: !8298, line: 4184, type: !2802, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8393 = !DILocation(line: 4186, column: 3, scope: !8392)
!8394 = !DILocation(line: 4187, column: 1, scope: !8392)
!8395 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8298, file: !8298, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8396 = !DILocation(line: 4207, column: 11, scope: !8395)
!8397 = !DILocation(line: 4207, column: 44, scope: !8395)
!8398 = !DILocation(line: 4207, column: 3, scope: !8395)
!8399 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8298, file: !8298, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8400 = !DILocation(line: 3009, column: 11, scope: !8399)
!8401 = !DILocation(line: 3009, column: 44, scope: !8399)
!8402 = !DILocation(line: 3009, column: 3, scope: !8399)
!8403 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8298, file: !8298, line: 2987, type: !2802, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8404 = !DILocation(line: 2989, column: 3, scope: !8403)
!8405 = !DILocation(line: 2990, column: 1, scope: !8403)
!8406 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8298, file: !8298, line: 3143, type: !2802, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8407 = !DILocation(line: 3145, column: 3, scope: !8406)
!8408 = !DILocation(line: 3146, column: 1, scope: !8406)
!8409 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8298, file: !8298, line: 3163, type: !135, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !162)
!8410 = !DILocation(line: 3165, column: 11, scope: !8409)
!8411 = !DILocation(line: 3165, column: 46, scope: !8409)
!8412 = !DILocation(line: 3165, column: 3, scope: !8409)
!8413 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8414, file: !8414, line: 40, type: !135, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !162)
!8414 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8415 = !DILocation(line: 43, column: 3, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !8414, line: 42, column: 37)
!8417 = distinct !DILexicalBlock(scope: !8413, file: !8414, line: 42, column: 6)
!8418 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8414, file: !8414, line: 56, type: !2802, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !162)
!8419 = !DILocation(line: 58, column: 2, scope: !8418)
!8420 = !DILocation(line: 62, column: 1, scope: !8418)
!8421 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8298, file: !8298, line: 4304, type: !8422, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !8424)
!8422 = !DISubroutineType(types: !8423)
!8423 = !{null, !137, !137, !137, !137}
!8424 = !{!8425, !8426, !8427, !8428}
!8425 = !DILocalVariable(name: "Source", arg: 1, scope: !8421, file: !8298, line: 4304, type: !137)
!8426 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8421, file: !8298, line: 4304, type: !137)
!8427 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8421, file: !8298, line: 4304, type: !137)
!8428 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8421, file: !8298, line: 4304, type: !137)
!8429 = !DILocation(line: 0, scope: !8421)
!8430 = !DILocation(line: 4306, column: 3, scope: !8421)
!8431 = !DILocation(line: 4308, column: 3, scope: !8421)
!8432 = !DILocation(line: 4312, column: 1, scope: !8421)
!8433 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8414, file: !8414, line: 69, type: !2802, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !162)
!8434 = !DILocation(line: 72, column: 2, scope: !8433)
!8435 = !DILocation(line: 73, column: 1, scope: !8433)
!8436 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8437, file: !8437, line: 1185, type: !6357, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !8438)
!8437 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8438 = !{!8439, !8440}
!8439 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8436, file: !8437, line: 1185, type: !137)
!8440 = !DILocalVariable(name: "tmpreg", scope: !8436, file: !8437, line: 1187, type: !176)
!8441 = !DILocation(line: 0, scope: !8436)
!8442 = !DILocation(line: 1187, column: 3, scope: !8436)
!8443 = !DILocation(line: 1187, column: 17, scope: !8436)
!8444 = !DILocation(line: 1188, column: 3, scope: !8436)
!8445 = !DILocation(line: 1190, column: 12, scope: !8436)
!8446 = !DILocation(line: 1190, column: 10, scope: !8436)
!8447 = !DILocation(line: 1191, column: 9, scope: !8436)
!8448 = !DILocation(line: 1192, column: 1, scope: !8436)
!8449 = distinct !DISubprogram(name: "uart_console_init", scope: !867, file: !867, line: 588, type: !844, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !810, retainedNodes: !8450)
!8450 = !{!8451}
!8451 = !DILocalVariable(name: "arg", arg: 1, scope: !8449, file: !867, line: 588, type: !822)
!8452 = !DILocation(line: 0, scope: !8449)
!8453 = !DILocation(line: 593, column: 7, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8449, file: !867, line: 593, column: 6)
!8455 = !DILocation(line: 593, column: 6, scope: !8449)
!8456 = !DILocation(line: 597, column: 2, scope: !8449)
!8457 = !DILocation(line: 599, column: 2, scope: !8449)
!8458 = !DILocation(line: 600, column: 1, scope: !8449)
!8459 = distinct !DISubprogram(name: "device_is_ready", scope: !8460, file: !8460, line: 47, type: !8461, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !810, retainedNodes: !8463)
!8460 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!8461 = !DISubroutineType(types: !8462)
!8462 = !{!211, !822}
!8463 = !{!8464}
!8464 = !DILocalVariable(name: "dev", arg: 1, scope: !8459, file: !8460, line: 47, type: !822)
!8465 = !DILocation(line: 0, scope: !8459)
!8466 = !DILocation(line: 55, column: 2, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8459, file: !8460, line: 55, column: 2)
!8468 = !{i64 2154265985}
!8469 = !DILocation(line: 56, column: 9, scope: !8459)
!8470 = !DILocation(line: 56, column: 2, scope: !8459)
!8471 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !867, file: !867, line: 573, type: !2802, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !810, retainedNodes: !162)
!8472 = !DILocation(line: 576, column: 2, scope: !8471)
!8473 = !DILocation(line: 579, column: 2, scope: !8471)
!8474 = !DILocation(line: 581, column: 1, scope: !8471)
!8475 = distinct !DISubprogram(name: "console_out", scope: !867, file: !867, line: 77, type: !129, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !810, retainedNodes: !8476)
!8476 = !{!8477}
!8477 = !DILocalVariable(name: "c", arg: 1, scope: !8475, file: !867, line: 77, type: !103)
!8478 = !DILocation(line: 0, scope: !8475)
!8479 = !DILocation(line: 89, column: 11, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8475, file: !867, line: 89, column: 6)
!8481 = !DILocation(line: 89, column: 6, scope: !8475)
!8482 = !DILocation(line: 90, column: 3, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8480, file: !867, line: 89, column: 17)
!8484 = !DILocation(line: 91, column: 2, scope: !8483)
!8485 = !DILocation(line: 92, column: 34, scope: !8475)
!8486 = !DILocation(line: 92, column: 2, scope: !8475)
!8487 = !DILocation(line: 94, column: 2, scope: !8475)
!8488 = distinct !DISubprogram(name: "uart_poll_out", scope: !8489, file: !8489, line: 95, type: !840, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !810, retainedNodes: !8490)
!8489 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sys_heap")
!8490 = !{!8491, !8492}
!8491 = !DILocalVariable(name: "dev", arg: 1, scope: !8488, file: !8489, line: 95, type: !822)
!8492 = !DILocalVariable(name: "out_char", arg: 2, scope: !8488, file: !8489, line: 95, type: !209)
!8493 = !DILocation(line: 0, scope: !8488)
!8494 = !DILocation(line: 105, column: 2, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8488, file: !8489, line: 105, column: 2)
!8496 = !{i64 2154349376}
!8497 = !DILocation(line: 106, column: 2, scope: !8488)
!8498 = !DILocation(line: 107, column: 1, scope: !8488)
!8499 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !816, file: !816, line: 574, type: !840, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !810, retainedNodes: !8500)
!8500 = !{!8501, !8502, !8503}
!8501 = !DILocalVariable(name: "dev", arg: 1, scope: !8499, file: !816, line: 574, type: !822)
!8502 = !DILocalVariable(name: "out_char", arg: 2, scope: !8499, file: !816, line: 575, type: !209)
!8503 = !DILocalVariable(name: "api", scope: !8499, file: !816, line: 577, type: !813)
!8504 = !DILocation(line: 0, scope: !8499)
!8505 = !DILocation(line: 578, column: 40, scope: !8499)
!8506 = !DILocation(line: 580, column: 7, scope: !8499)
!8507 = !DILocation(line: 580, column: 2, scope: !8499)
!8508 = !DILocation(line: 581, column: 1, scope: !8499)
!8509 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !8461, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !810, retainedNodes: !8510)
!8510 = !{!8511}
!8511 = !DILocalVariable(name: "dev", arg: 1, scope: !8509, file: !196, line: 730, type: !822)
!8512 = !DILocation(line: 0, scope: !8509)
!8513 = !DILocation(line: 732, column: 9, scope: !8509)
!8514 = !DILocation(line: 732, column: 2, scope: !8509)
!8515 = distinct !DISubprogram(name: "uart_register_input", scope: !867, file: !867, line: 560, type: !8516, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !810, retainedNodes: !8561)
!8516 = !DISubroutineType(types: !8517)
!8517 = !{null, !8518, !8518, !8558}
!8518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8519, size: 32)
!8519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !357, line: 2208, size: 128, elements: !8520)
!8520 = !{!8521}
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8519, file: !357, line: 2209, baseType: !8522, size: 128)
!8522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !357, line: 1709, size: 128, elements: !8523)
!8523 = !{!8524, !8537, !8539}
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8522, file: !357, line: 1710, baseType: !8525, size: 64)
!8525 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8526, line: 46, baseType: !8527)
!8526 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8526, line: 41, size: 64, elements: !8528)
!8528 = !{!8529, !8536}
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8527, file: !8526, line: 42, baseType: !8530, size: 32)
!8530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8531, size: 32)
!8531 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8526, line: 39, baseType: !8532)
!8532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8526, line: 35, size: 32, elements: !8533)
!8533 = !{!8534}
!8534 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8532, file: !8526, line: 36, baseType: !8535, size: 32)
!8535 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8526, line: 32, baseType: !137)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8527, file: !8526, line: 43, baseType: !8530, size: 32, offset: 32)
!8537 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8522, file: !357, line: 1711, baseType: !8538, offset: 64)
!8538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!8539 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8522, file: !357, line: 1712, baseType: !8540, size: 64, offset: 64)
!8540 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !8541)
!8541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !8542)
!8542 = !{!8543}
!8543 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8541, file: !299, line: 232, baseType: !8544, size: 64)
!8544 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !8545)
!8545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !8546)
!8546 = !{!8547, !8553}
!8547 = !DIDerivedType(tag: DW_TAG_member, scope: !8545, file: !273, line: 38, baseType: !8548, size: 32)
!8548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8545, file: !273, line: 38, size: 32, elements: !8549)
!8549 = !{!8550, !8552}
!8550 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8548, file: !273, line: 39, baseType: !8551, size: 32)
!8551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8545, size: 32)
!8552 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8548, file: !273, line: 40, baseType: !8551, size: 32)
!8553 = !DIDerivedType(tag: DW_TAG_member, scope: !8545, file: !273, line: 42, baseType: !8554, size: 32, offset: 32)
!8554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8545, file: !273, line: 42, size: 32, elements: !8555)
!8555 = !{!8556, !8557}
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8554, file: !273, line: 43, baseType: !8551, size: 32)
!8557 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8554, file: !273, line: 44, baseType: !8551, size: 32)
!8558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8559, size: 32)
!8559 = !DISubroutineType(types: !8560)
!8560 = !{!208, !1002, !208}
!8561 = !{!8562, !8563, !8564}
!8562 = !DILocalVariable(name: "avail", arg: 1, scope: !8515, file: !867, line: 560, type: !8518)
!8563 = !DILocalVariable(name: "lines", arg: 2, scope: !8515, file: !867, line: 560, type: !8518)
!8564 = !DILocalVariable(name: "completion", arg: 3, scope: !8515, file: !867, line: 561, type: !8558)
!8565 = !DILocation(line: 0, scope: !8515)
!8566 = !DILocation(line: 566, column: 1, scope: !8515)
!8567 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1046, file: !1046, line: 523, type: !903, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8568)
!8568 = !{!8569, !8570, !8571, !8572, !8573}
!8569 = !DILocalVariable(name: "dev", arg: 1, scope: !8567, file: !1046, line: 523, type: !905)
!8570 = !DILocalVariable(name: "pin", arg: 2, scope: !8567, file: !1046, line: 524, type: !920)
!8571 = !DILocalVariable(name: "flags", arg: 3, scope: !8567, file: !1046, line: 524, type: !921)
!8572 = !DILocalVariable(name: "err", scope: !8567, file: !1046, line: 526, type: !103)
!8573 = !DILocalVariable(name: "pincfg", scope: !8567, file: !1046, line: 527, type: !103)
!8574 = !DILocation(line: 0, scope: !8567)
!8575 = !DILocation(line: 527, column: 2, scope: !8567)
!8576 = !DILocation(line: 532, column: 8, scope: !8567)
!8577 = !DILocation(line: 533, column: 10, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8567, file: !1046, line: 533, column: 6)
!8579 = !DILocation(line: 533, column: 6, scope: !8567)
!8580 = !DILocation(line: 543, column: 13, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8567, file: !1046, line: 543, column: 6)
!8582 = !DILocation(line: 543, column: 28, scope: !8581)
!8583 = !DILocation(line: 543, column: 6, scope: !8567)
!8584 = !DILocation(line: 544, column: 14, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8586, file: !1046, line: 544, column: 7)
!8586 = distinct !DILexicalBlock(scope: !8581, file: !1046, line: 543, column: 34)
!8587 = !DILocation(line: 544, column: 39, scope: !8585)
!8588 = !DILocation(line: 544, column: 7, scope: !8586)
!8589 = !DILocation(line: 545, column: 38, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8585, file: !1046, line: 544, column: 45)
!8591 = !DILocation(line: 545, column: 4, scope: !8590)
!8592 = !DILocation(line: 546, column: 3, scope: !8590)
!8593 = !DILocation(line: 546, column: 21, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8585, file: !1046, line: 546, column: 14)
!8595 = !DILocation(line: 546, column: 45, scope: !8594)
!8596 = !DILocation(line: 546, column: 14, scope: !8585)
!8597 = !DILocation(line: 547, column: 40, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8594, file: !1046, line: 546, column: 51)
!8599 = !DILocation(line: 547, column: 4, scope: !8598)
!8600 = !DILocation(line: 548, column: 3, scope: !8598)
!8601 = !DILocation(line: 551, column: 32, scope: !8567)
!8602 = !DILocation(line: 551, column: 37, scope: !8567)
!8603 = !DILocation(line: 551, column: 2, scope: !8567)
!8604 = !DILocation(line: 554, column: 6, scope: !8567)
!8605 = !DILocation(line: 562, column: 1, scope: !8567)
!8606 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1046, file: !1046, line: 410, type: !8607, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8609)
!8607 = !DISubroutineType(types: !8608)
!8608 = !{!103, !905, !149}
!8609 = !{!8610, !8611, !8612, !8614}
!8610 = !DILocalVariable(name: "dev", arg: 1, scope: !8606, file: !1046, line: 410, type: !905)
!8611 = !DILocalVariable(name: "value", arg: 2, scope: !8606, file: !1046, line: 410, type: !149)
!8612 = !DILocalVariable(name: "cfg", scope: !8606, file: !1046, line: 412, type: !8613)
!8613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!8614 = !DILocalVariable(name: "gpio", scope: !8606, file: !1046, line: 413, type: !978)
!8615 = !DILocation(line: 0, scope: !8606)
!8616 = !DILocation(line: 412, column: 45, scope: !8606)
!8617 = !DILocation(line: 413, column: 44, scope: !8606)
!8618 = !DILocation(line: 415, column: 11, scope: !8606)
!8619 = !DILocation(line: 415, column: 9, scope: !8606)
!8620 = !DILocation(line: 417, column: 2, scope: !8606)
!8621 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1046, file: !1046, line: 420, type: !930, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8622)
!8622 = !{!8623, !8624, !8625, !8626, !8627, !8628}
!8623 = !DILocalVariable(name: "dev", arg: 1, scope: !8621, file: !1046, line: 420, type: !905)
!8624 = !DILocalVariable(name: "mask", arg: 2, scope: !8621, file: !1046, line: 421, type: !932)
!8625 = !DILocalVariable(name: "value", arg: 3, scope: !8621, file: !1046, line: 422, type: !927)
!8626 = !DILocalVariable(name: "cfg", scope: !8621, file: !1046, line: 424, type: !8613)
!8627 = !DILocalVariable(name: "gpio", scope: !8621, file: !1046, line: 425, type: !978)
!8628 = !DILocalVariable(name: "port_value", scope: !8621, file: !1046, line: 426, type: !137)
!8629 = !DILocation(line: 0, scope: !8621)
!8630 = !DILocation(line: 424, column: 45, scope: !8621)
!8631 = !DILocation(line: 425, column: 44, scope: !8621)
!8632 = !DILocation(line: 430, column: 15, scope: !8621)
!8633 = !DILocation(line: 431, column: 46, scope: !8621)
!8634 = !DILocation(line: 431, column: 44, scope: !8621)
!8635 = !DILocation(line: 431, column: 61, scope: !8621)
!8636 = !DILocation(line: 431, column: 53, scope: !8621)
!8637 = !DILocation(line: 431, column: 2, scope: !8621)
!8638 = !DILocation(line: 435, column: 2, scope: !8621)
!8639 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1046, file: !1046, line: 438, type: !935, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8640)
!8640 = !{!8641, !8642, !8643, !8644}
!8641 = !DILocalVariable(name: "dev", arg: 1, scope: !8639, file: !1046, line: 438, type: !905)
!8642 = !DILocalVariable(name: "pins", arg: 2, scope: !8639, file: !1046, line: 439, type: !932)
!8643 = !DILocalVariable(name: "cfg", scope: !8639, file: !1046, line: 441, type: !8613)
!8644 = !DILocalVariable(name: "gpio", scope: !8639, file: !1046, line: 442, type: !978)
!8645 = !DILocation(line: 0, scope: !8639)
!8646 = !DILocation(line: 441, column: 45, scope: !8639)
!8647 = !DILocation(line: 442, column: 44, scope: !8639)
!8648 = !DILocation(line: 448, column: 2, scope: !8639)
!8649 = !DILocation(line: 450, column: 2, scope: !8639)
!8650 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1046, file: !1046, line: 453, type: !935, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8651)
!8651 = !{!8652, !8653, !8654, !8655}
!8652 = !DILocalVariable(name: "dev", arg: 1, scope: !8650, file: !1046, line: 453, type: !905)
!8653 = !DILocalVariable(name: "pins", arg: 2, scope: !8650, file: !1046, line: 454, type: !932)
!8654 = !DILocalVariable(name: "cfg", scope: !8650, file: !1046, line: 456, type: !8613)
!8655 = !DILocalVariable(name: "gpio", scope: !8650, file: !1046, line: 457, type: !978)
!8656 = !DILocation(line: 0, scope: !8650)
!8657 = !DILocation(line: 456, column: 45, scope: !8650)
!8658 = !DILocation(line: 457, column: 44, scope: !8650)
!8659 = !DILocation(line: 467, column: 2, scope: !8650)
!8660 = !DILocation(line: 470, column: 2, scope: !8650)
!8661 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1046, file: !1046, line: 473, type: !935, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8662)
!8662 = !{!8663, !8664, !8665, !8666}
!8663 = !DILocalVariable(name: "dev", arg: 1, scope: !8661, file: !1046, line: 473, type: !905)
!8664 = !DILocalVariable(name: "pins", arg: 2, scope: !8661, file: !1046, line: 474, type: !932)
!8665 = !DILocalVariable(name: "cfg", scope: !8661, file: !1046, line: 476, type: !8613)
!8666 = !DILocalVariable(name: "gpio", scope: !8661, file: !1046, line: 477, type: !978)
!8667 = !DILocation(line: 0, scope: !8661)
!8668 = !DILocation(line: 476, column: 45, scope: !8661)
!8669 = !DILocation(line: 477, column: 44, scope: !8661)
!8670 = !DILocation(line: 484, column: 2, scope: !8661)
!8671 = !DILocation(line: 487, column: 2, scope: !8661)
!8672 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1046, file: !1046, line: 594, type: !941, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8673)
!8673 = !{!8674, !8675, !8676, !8677, !8678, !8679, !8681, !8682, !8683}
!8674 = !DILocalVariable(name: "dev", arg: 1, scope: !8672, file: !1046, line: 594, type: !905)
!8675 = !DILocalVariable(name: "pin", arg: 2, scope: !8672, file: !1046, line: 595, type: !920)
!8676 = !DILocalVariable(name: "mode", arg: 3, scope: !8672, file: !1046, line: 596, type: !879)
!8677 = !DILocalVariable(name: "trig", arg: 4, scope: !8672, file: !1046, line: 597, type: !885)
!8678 = !DILocalVariable(name: "cfg", scope: !8672, file: !1046, line: 599, type: !8613)
!8679 = !DILocalVariable(name: "data", scope: !8672, file: !1046, line: 600, type: !8680)
!8680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!8681 = !DILocalVariable(name: "edge", scope: !8672, file: !1046, line: 601, type: !103)
!8682 = !DILocalVariable(name: "err", scope: !8672, file: !1046, line: 602, type: !103)
!8683 = !DILabel(scope: !8672, name: "exit", file: !1046, line: 643)
!8684 = !DILocation(line: 0, scope: !8672)
!8685 = !DILocation(line: 599, column: 45, scope: !8672)
!8686 = !DILocation(line: 604, column: 6, scope: !8672)
!8687 = !DILocation(line: 605, column: 34, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !1046, line: 605, column: 7)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !1046, line: 604, column: 38)
!8690 = distinct !DILexicalBlock(scope: !8672, file: !1046, line: 604, column: 6)
!8691 = !DILocation(line: 605, column: 7, scope: !8688)
!8692 = !DILocation(line: 605, column: 47, scope: !8688)
!8693 = !DILocation(line: 605, column: 39, scope: !8688)
!8694 = !DILocation(line: 605, column: 7, scope: !8689)
!8695 = !DILocation(line: 606, column: 4, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8688, file: !1046, line: 605, column: 53)
!8697 = !DILocation(line: 607, column: 4, scope: !8696)
!8698 = !DILocation(line: 608, column: 4, scope: !8696)
!8699 = !DILocation(line: 609, column: 3, scope: !8696)
!8700 = !DILocation(line: 600, column: 38, scope: !8672)
!8701 = !DILocation(line: 620, column: 30, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8672, file: !1046, line: 620, column: 6)
!8703 = !DILocation(line: 620, column: 6, scope: !8702)
!8704 = !DILocation(line: 620, column: 57, scope: !8702)
!8705 = !DILocation(line: 620, column: 6, scope: !8672)
!8706 = !DILocation(line: 625, column: 29, scope: !8672)
!8707 = !DILocation(line: 625, column: 2, scope: !8672)
!8708 = !DILocation(line: 627, column: 2, scope: !8672)
!8709 = !DILocation(line: 630, column: 3, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8672, file: !1046, line: 627, column: 16)
!8711 = !DILocation(line: 633, column: 3, scope: !8710)
!8712 = !DILocation(line: 636, column: 3, scope: !8710)
!8713 = !DILocation(line: 639, column: 2, scope: !8672)
!8714 = !DILocation(line: 641, column: 2, scope: !8672)
!8715 = !DILocation(line: 643, column: 1, scope: !8672)
!8716 = !DILocation(line: 644, column: 2, scope: !8672)
!8717 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1046, file: !1046, line: 647, type: !945, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8718)
!8718 = !{!8719, !8720, !8721, !8722}
!8719 = !DILocalVariable(name: "dev", arg: 1, scope: !8717, file: !1046, line: 647, type: !905)
!8720 = !DILocalVariable(name: "callback", arg: 2, scope: !8717, file: !1046, line: 648, type: !947)
!8721 = !DILocalVariable(name: "set", arg: 3, scope: !8717, file: !1046, line: 649, type: !211)
!8722 = !DILocalVariable(name: "data", scope: !8717, file: !1046, line: 651, type: !8680)
!8723 = !DILocation(line: 0, scope: !8717)
!8724 = !DILocation(line: 651, column: 38, scope: !8717)
!8725 = !DILocation(line: 653, column: 37, scope: !8717)
!8726 = !DILocation(line: 653, column: 9, scope: !8717)
!8727 = !DILocation(line: 653, column: 2, scope: !8717)
!8728 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8729, file: !8729, line: 38, type: !8730, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8733)
!8729 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8730 = !DISubroutineType(types: !8731)
!8731 = !{!103, !8732, !947, !211}
!8732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!8733 = !{!8734, !8735, !8736}
!8734 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8728, file: !8729, line: 38, type: !8732)
!8735 = !DILocalVariable(name: "callback", arg: 2, scope: !8728, file: !8729, line: 39, type: !947)
!8736 = !DILocalVariable(name: "set", arg: 3, scope: !8728, file: !8729, line: 40, type: !211)
!8737 = !DILocation(line: 0, scope: !8728)
!8738 = !DILocation(line: 45, column: 7, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8728, file: !8729, line: 45, column: 6)
!8740 = !DILocation(line: 45, column: 6, scope: !8728)
!8741 = !DILocation(line: 46, column: 56, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !8729, line: 46, column: 7)
!8743 = distinct !DILexicalBlock(scope: !8739, file: !8729, line: 45, column: 38)
!8744 = !DILocation(line: 46, column: 8, scope: !8742)
!8745 = !DILocation(line: 46, column: 7, scope: !8743)
!8746 = !DILocation(line: 51, column: 13, scope: !8739)
!8747 = !DILocation(line: 56, column: 43, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8749, file: !8729, line: 55, column: 11)
!8749 = distinct !DILexicalBlock(scope: !8728, file: !8729, line: 55, column: 6)
!8750 = !DILocation(line: 56, column: 3, scope: !8748)
!8751 = !DILocation(line: 57, column: 2, scope: !8748)
!8752 = !DILocation(line: 60, column: 1, scope: !8728)
!8753 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !952, file: !952, line: 261, type: !8754, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8756)
!8754 = !DISubroutineType(types: !8755)
!8755 = !{!211, !8732}
!8756 = !{!8757}
!8757 = !DILocalVariable(name: "list", arg: 1, scope: !8753, file: !952, line: 261, type: !8732)
!8758 = !DILocation(line: 0, scope: !8753)
!8759 = !DILocation(line: 261, column: 1, scope: !8753)
!8760 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !952, file: !952, line: 417, type: !8761, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8763)
!8761 = !DISubroutineType(types: !8762)
!8762 = !{!211, !8732, !1119}
!8763 = !{!8764, !8765, !8766, !8767}
!8764 = !DILocalVariable(name: "list", arg: 1, scope: !8760, file: !952, line: 417, type: !8732)
!8765 = !DILocalVariable(name: "node", arg: 2, scope: !8760, file: !952, line: 417, type: !1119)
!8766 = !DILocalVariable(name: "prev", scope: !8760, file: !952, line: 417, type: !1119)
!8767 = !DILocalVariable(name: "test", scope: !8760, file: !952, line: 417, type: !1119)
!8768 = !DILocation(line: 0, scope: !8760)
!8769 = !DILocation(line: 417, column: 1, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8760, file: !952, line: 417, column: 1)
!8771 = !DILocation(line: 417, column: 1, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8770, file: !952, line: 417, column: 1)
!8773 = !DILocation(line: 417, column: 1, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8775, file: !952, line: 417, column: 1)
!8775 = distinct !DILexicalBlock(scope: !8772, file: !952, line: 417, column: 1)
!8776 = !DILocation(line: 417, column: 1, scope: !8775)
!8777 = distinct !{!8777, !8769, !8769}
!8778 = !DILocation(line: 417, column: 1, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8774, file: !952, line: 417, column: 1)
!8780 = !DILocation(line: 417, column: 1, scope: !8760)
!8781 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !952, file: !952, line: 298, type: !8782, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8784)
!8782 = !DISubroutineType(types: !8783)
!8783 = !{null, !8732, !1119}
!8784 = !{!8785, !8786}
!8785 = !DILocalVariable(name: "list", arg: 1, scope: !8781, file: !952, line: 298, type: !8732)
!8786 = !DILocalVariable(name: "node", arg: 2, scope: !8781, file: !952, line: 298, type: !1119)
!8787 = !DILocation(line: 0, scope: !8781)
!8788 = !DILocation(line: 298, column: 1, scope: !8781)
!8789 = !DILocation(line: 298, column: 1, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8781, file: !952, line: 298, column: 1)
!8791 = !DILocation(line: 298, column: 1, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8790, file: !952, line: 298, column: 1)
!8793 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !952, file: !952, line: 231, type: !8794, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8796)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{!1119, !8732}
!8796 = !{!8797}
!8797 = !DILocalVariable(name: "list", arg: 1, scope: !8793, file: !952, line: 231, type: !8732)
!8798 = !DILocation(line: 0, scope: !8793)
!8799 = !DILocation(line: 233, column: 15, scope: !8793)
!8800 = !DILocation(line: 233, column: 2, scope: !8793)
!8801 = distinct !DISubprogram(name: "z_snode_next_set", scope: !952, file: !952, line: 209, type: !8802, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8804)
!8802 = !DISubroutineType(types: !8803)
!8803 = !{null, !1119, !1119}
!8804 = !{!8805, !8806}
!8805 = !DILocalVariable(name: "parent", arg: 1, scope: !8801, file: !952, line: 209, type: !1119)
!8806 = !DILocalVariable(name: "child", arg: 2, scope: !8801, file: !952, line: 209, type: !1119)
!8807 = !DILocation(line: 0, scope: !8801)
!8808 = !DILocation(line: 211, column: 10, scope: !8801)
!8809 = !DILocation(line: 211, column: 15, scope: !8801)
!8810 = !DILocation(line: 212, column: 1, scope: !8801)
!8811 = distinct !DISubprogram(name: "z_slist_head_set", scope: !952, file: !952, line: 214, type: !8782, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8812)
!8812 = !{!8813, !8814}
!8813 = !DILocalVariable(name: "list", arg: 1, scope: !8811, file: !952, line: 214, type: !8732)
!8814 = !DILocalVariable(name: "node", arg: 2, scope: !8811, file: !952, line: 214, type: !1119)
!8815 = !DILocation(line: 0, scope: !8811)
!8816 = !DILocation(line: 216, column: 8, scope: !8811)
!8817 = !DILocation(line: 216, column: 13, scope: !8811)
!8818 = !DILocation(line: 217, column: 1, scope: !8811)
!8819 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !952, file: !952, line: 243, type: !8794, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8820)
!8820 = !{!8821}
!8821 = !DILocalVariable(name: "list", arg: 1, scope: !8819, file: !952, line: 243, type: !8732)
!8822 = !DILocation(line: 0, scope: !8819)
!8823 = !DILocation(line: 245, column: 15, scope: !8819)
!8824 = !DILocation(line: 245, column: 2, scope: !8819)
!8825 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !952, file: !952, line: 219, type: !8782, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8826)
!8826 = !{!8827, !8828}
!8827 = !DILocalVariable(name: "list", arg: 1, scope: !8825, file: !952, line: 219, type: !8732)
!8828 = !DILocalVariable(name: "node", arg: 2, scope: !8825, file: !952, line: 219, type: !1119)
!8829 = !DILocation(line: 0, scope: !8825)
!8830 = !DILocation(line: 221, column: 8, scope: !8825)
!8831 = !DILocation(line: 221, column: 13, scope: !8825)
!8832 = !DILocation(line: 222, column: 1, scope: !8825)
!8833 = distinct !DISubprogram(name: "sys_slist_remove", scope: !952, file: !952, line: 401, type: !8834, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8836)
!8834 = !DISubroutineType(types: !8835)
!8835 = !{null, !8732, !1119, !1119}
!8836 = !{!8837, !8838, !8839}
!8837 = !DILocalVariable(name: "list", arg: 1, scope: !8833, file: !952, line: 401, type: !8732)
!8838 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8833, file: !952, line: 401, type: !1119)
!8839 = !DILocalVariable(name: "node", arg: 3, scope: !8833, file: !952, line: 401, type: !1119)
!8840 = !DILocation(line: 0, scope: !8833)
!8841 = !DILocation(line: 401, column: 1, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8833, file: !952, line: 401, column: 1)
!8843 = !DILocation(line: 0, scope: !8842)
!8844 = !DILocation(line: 401, column: 1, scope: !8833)
!8845 = !DILocation(line: 401, column: 1, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8842, file: !952, line: 401, column: 1)
!8847 = !DILocation(line: 401, column: 1, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8846, file: !952, line: 401, column: 1)
!8849 = !DILocation(line: 401, column: 1, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8848, file: !952, line: 401, column: 1)
!8851 = !DILocation(line: 401, column: 1, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8842, file: !952, line: 401, column: 1)
!8853 = !DILocation(line: 401, column: 1, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8852, file: !952, line: 401, column: 1)
!8855 = !DILocation(line: 401, column: 1, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8854, file: !952, line: 401, column: 1)
!8857 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !952, file: !952, line: 285, type: !8858, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8860)
!8858 = !DISubroutineType(types: !8859)
!8859 = !{!1119, !1119}
!8860 = !{!8861}
!8861 = !DILocalVariable(name: "node", arg: 1, scope: !8857, file: !952, line: 285, type: !1119)
!8862 = !DILocation(line: 0, scope: !8857)
!8863 = !DILocation(line: 285, column: 1, scope: !8857)
!8864 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !952, file: !952, line: 274, type: !8858, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8865)
!8865 = !{!8866}
!8866 = !DILocalVariable(name: "node", arg: 1, scope: !8864, file: !952, line: 274, type: !1119)
!8867 = !DILocation(line: 0, scope: !8864)
!8868 = !DILocation(line: 274, column: 1, scope: !8864)
!8869 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !952, file: !952, line: 204, type: !8858, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8870)
!8870 = !{!8871}
!8871 = !DILocalVariable(name: "node", arg: 1, scope: !8869, file: !952, line: 204, type: !1119)
!8872 = !DILocation(line: 0, scope: !8869)
!8873 = !DILocation(line: 206, column: 15, scope: !8869)
!8874 = !DILocation(line: 206, column: 2, scope: !8869)
!8875 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1046, file: !1046, line: 342, type: !129, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8876)
!8876 = !{!8877, !8878, !8879}
!8877 = !DILocalVariable(name: "pin", arg: 1, scope: !8875, file: !1046, line: 342, type: !103)
!8878 = !DILocalVariable(name: "line", scope: !8875, file: !1046, line: 344, type: !137)
!8879 = !DILocalVariable(name: "port", scope: !8875, file: !1046, line: 345, type: !103)
!8880 = !DILocation(line: 0, scope: !8875)
!8881 = !DILocation(line: 344, column: 18, scope: !8875)
!8882 = !{i32 983040, i32 0}
!8883 = !DILocation(line: 356, column: 9, scope: !8875)
!8884 = !DILocation(line: 370, column: 2, scope: !8875)
!8885 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1046, file: !1046, line: 37, type: !595, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8886)
!8886 = !{!8887, !8888, !8889}
!8887 = !DILocalVariable(name: "line", arg: 1, scope: !8885, file: !1046, line: 37, type: !103)
!8888 = !DILocalVariable(name: "arg", arg: 2, scope: !8885, file: !1046, line: 37, type: !102)
!8889 = !DILocalVariable(name: "data", scope: !8885, file: !1046, line: 39, type: !8680)
!8890 = !DILocation(line: 0, scope: !8885)
!8891 = !DILocation(line: 41, column: 29, scope: !8885)
!8892 = !DILocation(line: 41, column: 39, scope: !8885)
!8893 = !DILocation(line: 41, column: 44, scope: !8885)
!8894 = !DILocation(line: 41, column: 2, scope: !8885)
!8895 = !DILocation(line: 42, column: 1, scope: !8885)
!8896 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1046, file: !1046, line: 376, type: !8897, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8899)
!8897 = !DISubroutineType(types: !8898)
!8898 = !{!103, !103, !103}
!8899 = !{!8900, !8901, !8902, !8904, !8905}
!8900 = !DILocalVariable(name: "port", arg: 1, scope: !8896, file: !1046, line: 376, type: !103)
!8901 = !DILocalVariable(name: "pin", arg: 2, scope: !8896, file: !1046, line: 376, type: !103)
!8902 = !DILocalVariable(name: "clk", scope: !8896, file: !1046, line: 386, type: !8903)
!8903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !905)
!8904 = !DILocalVariable(name: "pclken", scope: !8896, file: !1046, line: 387, type: !1162)
!8905 = !DILocalVariable(name: "ret", scope: !8896, file: !1046, line: 396, type: !103)
!8906 = !DILocation(line: 0, scope: !8896)
!8907 = !DILocation(line: 387, column: 2, scope: !8896)
!8908 = !DILocation(line: 387, column: 22, scope: !8896)
!8909 = !DILocation(line: 399, column: 8, scope: !8896)
!8910 = !DILocation(line: 400, column: 10, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8896, file: !1046, line: 400, column: 6)
!8912 = !DILocation(line: 400, column: 6, scope: !8896)
!8913 = !DILocation(line: 405, column: 2, scope: !8896)
!8914 = !DILocation(line: 407, column: 2, scope: !8896)
!8915 = !DILocation(line: 408, column: 1, scope: !8896)
!8916 = distinct !DISubprogram(name: "clock_control_on", scope: !682, file: !682, line: 123, type: !1011, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8917)
!8917 = !{!8918, !8919, !8920}
!8918 = !DILocalVariable(name: "dev", arg: 1, scope: !8916, file: !682, line: 123, type: !905)
!8919 = !DILocalVariable(name: "sys", arg: 2, scope: !8916, file: !682, line: 124, type: !776)
!8920 = !DILocalVariable(name: "api", scope: !8916, file: !682, line: 126, type: !1004)
!8921 = !DILocation(line: 0, scope: !8916)
!8922 = !DILocation(line: 127, column: 49, scope: !8916)
!8923 = !DILocation(line: 129, column: 14, scope: !8916)
!8924 = !DILocation(line: 129, column: 9, scope: !8916)
!8925 = !DILocation(line: 129, column: 2, scope: !8916)
!8926 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1046, file: !1046, line: 311, type: !8059, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8927)
!8927 = !{!8928, !8929, !8930}
!8928 = !DILocalVariable(name: "port", arg: 1, scope: !8926, file: !1046, line: 311, type: !103)
!8929 = !DILocalVariable(name: "pin", arg: 2, scope: !8926, file: !1046, line: 311, type: !103)
!8930 = !DILocalVariable(name: "line", scope: !8926, file: !1046, line: 313, type: !137)
!8931 = !DILocation(line: 0, scope: !8926)
!8932 = !DILocation(line: 313, column: 18, scope: !8926)
!8933 = !DILocation(line: 337, column: 2, scope: !8926)
!8934 = !DILocation(line: 340, column: 1, scope: !8926)
!8935 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1046, file: !1046, line: 295, type: !8936, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8938)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!137, !103}
!8938 = !{!8939}
!8939 = !DILocalVariable(name: "pin", arg: 1, scope: !8935, file: !1046, line: 295, type: !103)
!8940 = !DILocation(line: 0, scope: !8935)
!8941 = !DILocation(line: 307, column: 46, scope: !8935)
!8942 = !DILocation(line: 307, column: 27, scope: !8935)
!8943 = !DILocation(line: 307, column: 32, scope: !8935)
!8944 = !DILocation(line: 307, column: 14, scope: !8935)
!8945 = !DILocation(line: 307, column: 39, scope: !8935)
!8946 = !DILocation(line: 307, column: 2, scope: !8935)
!8947 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6115, file: !6115, line: 671, type: !8948, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8950)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{null, !137, !137}
!8950 = !{!8951, !8952}
!8951 = !DILocalVariable(name: "Port", arg: 1, scope: !8947, file: !6115, line: 671, type: !137)
!8952 = !DILocalVariable(name: "Line", arg: 2, scope: !8947, file: !6115, line: 671, type: !137)
!8953 = !DILocation(line: 0, scope: !8947)
!8954 = !DILocation(line: 673, column: 3, scope: !8947)
!8955 = !DILocalVariable(name: "value", arg: 1, scope: !8956, file: !6268, line: 373, type: !137)
!8956 = distinct !DISubprogram(name: "__RBIT", scope: !6268, file: !6268, line: 373, type: !7273, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8957)
!8957 = !{!8955, !8958}
!8958 = !DILocalVariable(name: "result", scope: !8956, file: !6268, line: 375, type: !137)
!8959 = !DILocation(line: 0, scope: !8956, inlinedAt: !8960)
!8960 = distinct !DILocation(line: 673, column: 3, scope: !8947)
!8961 = !DILocation(line: 380, column: 4, scope: !8956, inlinedAt: !8960)
!8962 = !{i64 2831597}
!8963 = !DILocalVariable(name: "value", arg: 1, scope: !8964, file: !6268, line: 403, type: !137)
!8964 = distinct !DISubprogram(name: "__CLZ", scope: !6268, file: !6268, line: 403, type: !8965, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8967)
!8965 = !DISubroutineType(types: !8966)
!8966 = !{!208, !137}
!8967 = !{!8963}
!8968 = !DILocation(line: 0, scope: !8964, inlinedAt: !8969)
!8969 = distinct !DILocation(line: 673, column: 3, scope: !8947)
!8970 = !DILocation(line: 414, column: 7, scope: !8964, inlinedAt: !8969)
!8971 = !DILocation(line: 674, column: 1, scope: !8947)
!8972 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8729, file: !8729, line: 69, type: !8973, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8975)
!8973 = !DISubroutineType(types: !8974)
!8974 = !{null, !8732, !905, !137}
!8975 = !{!8976, !8977, !8978, !8979, !8980}
!8976 = !DILocalVariable(name: "list", arg: 1, scope: !8972, file: !8729, line: 69, type: !8732)
!8977 = !DILocalVariable(name: "port", arg: 2, scope: !8972, file: !8729, line: 70, type: !905)
!8978 = !DILocalVariable(name: "pins", arg: 3, scope: !8972, file: !8729, line: 71, type: !137)
!8979 = !DILocalVariable(name: "cb", scope: !8972, file: !8729, line: 73, type: !947)
!8980 = !DILocalVariable(name: "tmp", scope: !8972, file: !8729, line: 73, type: !947)
!8981 = !DILocation(line: 0, scope: !8972)
!8982 = !DILocation(line: 75, column: 2, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8972, file: !8729, line: 75, column: 2)
!8984 = !DILocation(line: 0, scope: !8983)
!8985 = !DILocation(line: 76, column: 11, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !8729, line: 76, column: 7)
!8987 = distinct !DILexicalBlock(scope: !8988, file: !8729, line: 75, column: 57)
!8988 = distinct !DILexicalBlock(scope: !8983, file: !8729, line: 75, column: 2)
!8989 = !DILocation(line: 76, column: 20, scope: !8986)
!8990 = !DILocation(line: 76, column: 7, scope: !8987)
!8991 = !DILocation(line: 78, column: 8, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8986, file: !8729, line: 76, column: 28)
!8993 = !DILocation(line: 78, column: 4, scope: !8992)
!8994 = !DILocation(line: 79, column: 3, scope: !8992)
!8995 = !DILocation(line: 75, column: 2, scope: !8988)
!8996 = !DILocation(line: 81, column: 1, scope: !8972)
!8997 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6115, file: !6115, line: 710, type: !7273, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8998)
!8998 = !{!8999}
!8999 = !DILocalVariable(name: "Line", arg: 1, scope: !8997, file: !6115, line: 710, type: !137)
!9000 = !DILocation(line: 0, scope: !8997)
!9001 = !DILocation(line: 712, column: 21, scope: !8997)
!9002 = !DILocation(line: 0, scope: !8956, inlinedAt: !9003)
!9003 = distinct !DILocation(line: 712, column: 76, scope: !8997)
!9004 = !DILocation(line: 380, column: 4, scope: !8956, inlinedAt: !9003)
!9005 = !DILocation(line: 0, scope: !8964, inlinedAt: !9006)
!9006 = distinct !DILocation(line: 712, column: 76, scope: !8997)
!9007 = !DILocation(line: 414, column: 7, scope: !8964, inlinedAt: !9006)
!9008 = !DILocation(line: 712, column: 73, scope: !8997)
!9009 = !DILocation(line: 712, column: 3, scope: !8997)
!9010 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9011, file: !9011, line: 910, type: !9012, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9014)
!9011 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9012 = !DISubroutineType(types: !9013)
!9013 = !{null, !978, !137}
!9014 = !{!9015, !9016}
!9015 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9010, file: !9011, line: 910, type: !978)
!9016 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9010, file: !9011, line: 910, type: !137)
!9017 = !DILocation(line: 0, scope: !9010)
!9018 = !DILocation(line: 912, column: 3, scope: !9010)
!9019 = !DILocation(line: 913, column: 1, scope: !9010)
!9020 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9011, file: !9011, line: 823, type: !9021, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9023)
!9021 = !DISubroutineType(types: !9022)
!9022 = !{!137, !978}
!9023 = !{!9024}
!9024 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9020, file: !9011, line: 823, type: !978)
!9025 = !DILocation(line: 0, scope: !9020)
!9026 = !DILocation(line: 825, column: 21, scope: !9020)
!9027 = !DILocation(line: 825, column: 3, scope: !9020)
!9028 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9011, file: !9011, line: 812, type: !9012, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9029)
!9029 = !{!9030, !9031}
!9030 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9028, file: !9011, line: 812, type: !978)
!9031 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9028, file: !9011, line: 812, type: !137)
!9032 = !DILocation(line: 0, scope: !9028)
!9033 = !DILocation(line: 814, column: 3, scope: !9028)
!9034 = !DILocation(line: 815, column: 1, scope: !9028)
!9035 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9011, file: !9011, line: 771, type: !9021, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9036)
!9036 = !{!9037}
!9037 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9035, file: !9011, line: 771, type: !978)
!9038 = !DILocation(line: 0, scope: !9035)
!9039 = !DILocation(line: 773, column: 21, scope: !9035)
!9040 = !DILocation(line: 773, column: 3, scope: !9035)
!9041 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1046, file: !1046, line: 47, type: !9042, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9044)
!9042 = !DISubroutineType(types: !9043)
!9043 = !{!103, !921, !2251}
!9044 = !{!9045, !9046}
!9045 = !DILocalVariable(name: "flags", arg: 1, scope: !9041, file: !1046, line: 47, type: !921)
!9046 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9041, file: !1046, line: 47, type: !2251)
!9047 = !DILocation(line: 0, scope: !9041)
!9048 = !DILocation(line: 50, column: 13, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9041, file: !1046, line: 50, column: 6)
!9050 = !DILocation(line: 50, column: 28, scope: !9049)
!9051 = !DILocation(line: 50, column: 6, scope: !9041)
!9052 = !DILocation(line: 53, column: 11, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9049, file: !1046, line: 50, column: 34)
!9054 = !DILocation(line: 55, column: 14, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9053, file: !1046, line: 55, column: 7)
!9056 = !DILocation(line: 55, column: 35, scope: !9055)
!9057 = !DILocation(line: 55, column: 7, scope: !9053)
!9058 = !DILocation(line: 56, column: 14, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9060, file: !1046, line: 56, column: 8)
!9060 = distinct !DILexicalBlock(scope: !9055, file: !1046, line: 55, column: 41)
!9061 = !DILocation(line: 56, column: 8, scope: !9060)
!9062 = !DILocation(line: 0, scope: !9055)
!9063 = !DILocation(line: 66, column: 14, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9053, file: !1046, line: 66, column: 7)
!9065 = !DILocation(line: 66, column: 30, scope: !9064)
!9066 = !DILocation(line: 66, column: 7, scope: !9053)
!9067 = !DILocation(line: 67, column: 12, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9064, file: !1046, line: 66, column: 36)
!9069 = !DILocation(line: 68, column: 3, scope: !9068)
!9070 = !DILocation(line: 68, column: 21, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9064, file: !1046, line: 68, column: 14)
!9072 = !DILocation(line: 68, column: 39, scope: !9071)
!9073 = !DILocation(line: 68, column: 14, scope: !9064)
!9074 = !DILocation(line: 69, column: 12, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9071, file: !1046, line: 68, column: 45)
!9076 = !DILocation(line: 70, column: 3, scope: !9075)
!9077 = !DILocation(line: 72, column: 21, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9049, file: !1046, line: 72, column: 14)
!9079 = !DILocation(line: 72, column: 35, scope: !9078)
!9080 = !DILocation(line: 72, column: 14, scope: !9049)
!9081 = !DILocation(line: 77, column: 14, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9083, file: !1046, line: 77, column: 7)
!9083 = distinct !DILexicalBlock(scope: !9078, file: !1046, line: 72, column: 41)
!9084 = !DILocation(line: 77, column: 30, scope: !9082)
!9085 = !DILocation(line: 77, column: 7, scope: !9083)
!9086 = !DILocation(line: 0, scope: !9049)
!9087 = !DILocation(line: 90, column: 1, scope: !9041)
!9088 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1046, file: !1046, line: 157, type: !9089, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9091)
!9089 = !DISubroutineType(types: !9090)
!9090 = !{null, !905, !103, !103, !103}
!9091 = !{!9092, !9093, !9094, !9095, !9096, !9097, !9098, !9099, !9100, !9101, !9102}
!9092 = !DILocalVariable(name: "dev", arg: 1, scope: !9088, file: !1046, line: 157, type: !905)
!9093 = !DILocalVariable(name: "pin", arg: 2, scope: !9088, file: !1046, line: 157, type: !103)
!9094 = !DILocalVariable(name: "conf", arg: 3, scope: !9088, file: !1046, line: 158, type: !103)
!9095 = !DILocalVariable(name: "func", arg: 4, scope: !9088, file: !1046, line: 158, type: !103)
!9096 = !DILocalVariable(name: "cfg", scope: !9088, file: !1046, line: 160, type: !8613)
!9097 = !DILocalVariable(name: "gpio", scope: !9088, file: !1046, line: 161, type: !978)
!9098 = !DILocalVariable(name: "pin_ll", scope: !9088, file: !1046, line: 163, type: !103)
!9099 = !DILocalVariable(name: "mode", scope: !9088, file: !1046, line: 227, type: !32)
!9100 = !DILocalVariable(name: "otype", scope: !9088, file: !1046, line: 227, type: !32)
!9101 = !DILocalVariable(name: "ospeed", scope: !9088, file: !1046, line: 227, type: !32)
!9102 = !DILocalVariable(name: "pupd", scope: !9088, file: !1046, line: 227, type: !32)
!9103 = !DILocation(line: 0, scope: !9088)
!9104 = !DILocation(line: 160, column: 45, scope: !9088)
!9105 = !DILocation(line: 161, column: 44, scope: !9088)
!9106 = !DILocation(line: 163, column: 15, scope: !9088)
!9107 = !DILocation(line: 229, column: 14, scope: !9088)
!9108 = !DILocation(line: 246, column: 47, scope: !9088)
!9109 = !DILocation(line: 246, column: 2, scope: !9088)
!9110 = !DILocation(line: 248, column: 43, scope: !9088)
!9111 = !DILocation(line: 248, column: 2, scope: !9088)
!9112 = !DILocation(line: 250, column: 40, scope: !9088)
!9113 = !DILocation(line: 250, column: 2, scope: !9088)
!9114 = !DILocation(line: 252, column: 11, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9088, file: !1046, line: 252, column: 6)
!9116 = !DILocation(line: 252, column: 6, scope: !9088)
!9117 = !DILocation(line: 253, column: 11, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !1046, line: 253, column: 7)
!9119 = distinct !DILexicalBlock(scope: !9115, file: !1046, line: 252, column: 36)
!9120 = !DILocation(line: 253, column: 7, scope: !9119)
!9121 = !DILocation(line: 254, column: 4, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9118, file: !1046, line: 253, column: 16)
!9123 = !DILocation(line: 255, column: 3, scope: !9122)
!9124 = !DILocation(line: 256, column: 4, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9118, file: !1046, line: 255, column: 10)
!9126 = !DILocation(line: 260, column: 40, scope: !9088)
!9127 = !DILocation(line: 260, column: 2, scope: !9088)
!9128 = !DILocation(line: 265, column: 1, scope: !9088)
!9129 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1046, file: !1046, line: 137, type: !8936, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9130)
!9130 = !{!9131, !9132}
!9131 = !DILocalVariable(name: "pin", arg: 1, scope: !9129, file: !1046, line: 137, type: !103)
!9132 = !DILocalVariable(name: "pinval", scope: !9129, file: !1046, line: 139, type: !137)
!9133 = !DILocation(line: 0, scope: !9129)
!9134 = !DILocation(line: 149, column: 13, scope: !9129)
!9135 = !DILocation(line: 151, column: 2, scope: !9129)
!9136 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9011, file: !9011, line: 342, type: !9137, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9139)
!9137 = !DISubroutineType(types: !9138)
!9138 = !{null, !978, !137, !137}
!9139 = !{!9140, !9141, !9142}
!9140 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9136, file: !9011, line: 342, type: !978)
!9141 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9136, file: !9011, line: 342, type: !137)
!9142 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9136, file: !9011, line: 342, type: !137)
!9143 = !DILocation(line: 0, scope: !9136)
!9144 = !DILocation(line: 344, column: 3, scope: !9136)
!9145 = !DILocation(line: 345, column: 1, scope: !9136)
!9146 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9011, file: !9011, line: 413, type: !9137, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9147)
!9147 = !{!9148, !9149, !9150}
!9148 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9146, file: !9011, line: 413, type: !978)
!9149 = !DILocalVariable(name: "Pin", arg: 2, scope: !9146, file: !9011, line: 413, type: !137)
!9150 = !DILocalVariable(name: "Speed", arg: 3, scope: !9146, file: !9011, line: 413, type: !137)
!9151 = !DILocation(line: 0, scope: !9146)
!9152 = !DILocation(line: 415, column: 3, scope: !9146)
!9153 = !DILocation(line: 0, scope: !8956, inlinedAt: !9154)
!9154 = distinct !DILocation(line: 415, column: 3, scope: !9146)
!9155 = !DILocation(line: 380, column: 4, scope: !8956, inlinedAt: !9154)
!9156 = !DILocation(line: 0, scope: !8964, inlinedAt: !9157)
!9157 = distinct !DILocation(line: 415, column: 3, scope: !9146)
!9158 = !DILocation(line: 414, column: 7, scope: !8964, inlinedAt: !9157)
!9159 = !DILocation(line: 0, scope: !8956, inlinedAt: !9160)
!9160 = distinct !DILocation(line: 415, column: 3, scope: !9146)
!9161 = !DILocation(line: 0, scope: !8964, inlinedAt: !9162)
!9162 = distinct !DILocation(line: 415, column: 3, scope: !9146)
!9163 = !DILocation(line: 417, column: 1, scope: !9146)
!9164 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9011, file: !9011, line: 484, type: !9137, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9165)
!9165 = !{!9166, !9167, !9168}
!9166 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9164, file: !9011, line: 484, type: !978)
!9167 = !DILocalVariable(name: "Pin", arg: 2, scope: !9164, file: !9011, line: 484, type: !137)
!9168 = !DILocalVariable(name: "Pull", arg: 3, scope: !9164, file: !9011, line: 484, type: !137)
!9169 = !DILocation(line: 0, scope: !9164)
!9170 = !DILocation(line: 486, column: 3, scope: !9164)
!9171 = !DILocation(line: 0, scope: !8956, inlinedAt: !9172)
!9172 = distinct !DILocation(line: 486, column: 3, scope: !9164)
!9173 = !DILocation(line: 380, column: 4, scope: !8956, inlinedAt: !9172)
!9174 = !DILocation(line: 0, scope: !8964, inlinedAt: !9175)
!9175 = distinct !DILocation(line: 486, column: 3, scope: !9164)
!9176 = !DILocation(line: 414, column: 7, scope: !8964, inlinedAt: !9175)
!9177 = !DILocation(line: 0, scope: !8956, inlinedAt: !9178)
!9178 = distinct !DILocation(line: 486, column: 3, scope: !9164)
!9179 = !DILocation(line: 0, scope: !8964, inlinedAt: !9180)
!9180 = distinct !DILocation(line: 486, column: 3, scope: !9164)
!9181 = !DILocation(line: 487, column: 1, scope: !9164)
!9182 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9011, file: !9011, line: 556, type: !9137, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9183)
!9183 = !{!9184, !9185, !9186}
!9184 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9182, file: !9011, line: 556, type: !978)
!9185 = !DILocalVariable(name: "Pin", arg: 2, scope: !9182, file: !9011, line: 556, type: !137)
!9186 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9182, file: !9011, line: 556, type: !137)
!9187 = !DILocation(line: 0, scope: !9182)
!9188 = !DILocation(line: 558, column: 3, scope: !9182)
!9189 = !DILocation(line: 0, scope: !8956, inlinedAt: !9190)
!9190 = distinct !DILocation(line: 558, column: 3, scope: !9182)
!9191 = !DILocation(line: 380, column: 4, scope: !8956, inlinedAt: !9190)
!9192 = !DILocation(line: 0, scope: !8964, inlinedAt: !9193)
!9193 = distinct !DILocation(line: 558, column: 3, scope: !9182)
!9194 = !DILocation(line: 414, column: 7, scope: !8964, inlinedAt: !9193)
!9195 = !DILocation(line: 0, scope: !8956, inlinedAt: !9196)
!9196 = distinct !DILocation(line: 558, column: 3, scope: !9182)
!9197 = !DILocation(line: 0, scope: !8964, inlinedAt: !9198)
!9198 = distinct !DILocation(line: 558, column: 3, scope: !9182)
!9199 = !DILocation(line: 560, column: 1, scope: !9182)
!9200 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9011, file: !9011, line: 633, type: !9137, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9201)
!9201 = !{!9202, !9203, !9204}
!9202 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9200, file: !9011, line: 633, type: !978)
!9203 = !DILocalVariable(name: "Pin", arg: 2, scope: !9200, file: !9011, line: 633, type: !137)
!9204 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9200, file: !9011, line: 633, type: !137)
!9205 = !DILocation(line: 0, scope: !9200)
!9206 = !DILocation(line: 635, column: 3, scope: !9200)
!9207 = !DILocation(line: 0, scope: !8956, inlinedAt: !9208)
!9208 = distinct !DILocation(line: 635, column: 3, scope: !9200)
!9209 = !DILocation(line: 380, column: 4, scope: !8956, inlinedAt: !9208)
!9210 = !DILocation(line: 0, scope: !8964, inlinedAt: !9211)
!9211 = distinct !DILocation(line: 635, column: 3, scope: !9200)
!9212 = !DILocation(line: 414, column: 7, scope: !8964, inlinedAt: !9211)
!9213 = !DILocation(line: 0, scope: !8956, inlinedAt: !9214)
!9214 = distinct !DILocation(line: 635, column: 3, scope: !9200)
!9215 = !DILocation(line: 0, scope: !8964, inlinedAt: !9216)
!9216 = distinct !DILocation(line: 635, column: 3, scope: !9200)
!9217 = !DILocation(line: 637, column: 1, scope: !9200)
!9218 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9011, file: !9011, line: 273, type: !9137, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9219)
!9219 = !{!9220, !9221, !9222}
!9220 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9218, file: !9011, line: 273, type: !978)
!9221 = !DILocalVariable(name: "Pin", arg: 2, scope: !9218, file: !9011, line: 273, type: !137)
!9222 = !DILocalVariable(name: "Mode", arg: 3, scope: !9218, file: !9011, line: 273, type: !137)
!9223 = !DILocation(line: 0, scope: !9218)
!9224 = !DILocation(line: 275, column: 3, scope: !9218)
!9225 = !DILocation(line: 0, scope: !8956, inlinedAt: !9226)
!9226 = distinct !DILocation(line: 275, column: 3, scope: !9218)
!9227 = !DILocation(line: 380, column: 4, scope: !8956, inlinedAt: !9226)
!9228 = !DILocation(line: 0, scope: !8964, inlinedAt: !9229)
!9229 = distinct !DILocation(line: 275, column: 3, scope: !9218)
!9230 = !DILocation(line: 414, column: 7, scope: !8964, inlinedAt: !9229)
!9231 = !DILocation(line: 0, scope: !8956, inlinedAt: !9232)
!9232 = distinct !DILocation(line: 275, column: 3, scope: !9218)
!9233 = !DILocation(line: 0, scope: !8964, inlinedAt: !9234)
!9234 = distinct !DILocation(line: 275, column: 3, scope: !9218)
!9235 = !DILocation(line: 276, column: 1, scope: !9218)
!9236 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1046, file: !1046, line: 698, type: !1059, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9237)
!9237 = !{!9238, !9239, !9240}
!9238 = !DILocalVariable(name: "dev", arg: 1, scope: !9236, file: !1046, line: 698, type: !905)
!9239 = !DILocalVariable(name: "data", scope: !9236, file: !1046, line: 700, type: !8680)
!9240 = !DILocalVariable(name: "ret", scope: !9236, file: !1046, line: 701, type: !103)
!9241 = !DILocation(line: 0, scope: !9236)
!9242 = !DILocation(line: 700, column: 38, scope: !9236)
!9243 = !DILocation(line: 703, column: 8, scope: !9236)
!9244 = !DILocation(line: 703, column: 12, scope: !9236)
!9245 = !DILocation(line: 705, column: 7, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9236, file: !1046, line: 705, column: 6)
!9247 = !DILocation(line: 705, column: 6, scope: !9236)
!9248 = !DILocation(line: 722, column: 8, scope: !9236)
!9249 = !DILocation(line: 723, column: 10, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9236, file: !1046, line: 723, column: 6)
!9251 = !DILocation(line: 723, column: 6, scope: !9236)
!9252 = !DILocation(line: 731, column: 1, scope: !9236)
!9253 = distinct !DISubprogram(name: "device_is_ready", scope: !8460, file: !8460, line: 47, type: !9254, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9256)
!9254 = !DISubroutineType(types: !9255)
!9255 = !{!211, !905}
!9256 = !{!9257}
!9257 = !DILocalVariable(name: "dev", arg: 1, scope: !9253, file: !8460, line: 47, type: !905)
!9258 = !DILocation(line: 0, scope: !9253)
!9259 = !DILocation(line: 55, column: 2, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9253, file: !8460, line: 55, column: 2)
!9261 = !{i64 2154257192}
!9262 = !DILocation(line: 56, column: 9, scope: !9253)
!9263 = !DILocation(line: 56, column: 2, scope: !9253)
!9264 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1046, file: !1046, line: 270, type: !9265, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9267)
!9265 = !DISubroutineType(types: !9266)
!9266 = !{!103, !905, !211}
!9267 = !{!9268, !9269, !9270, !9271, !9272}
!9268 = !DILocalVariable(name: "dev", arg: 1, scope: !9264, file: !1046, line: 270, type: !905)
!9269 = !DILocalVariable(name: "on", arg: 2, scope: !9264, file: !1046, line: 270, type: !211)
!9270 = !DILocalVariable(name: "cfg", scope: !9264, file: !1046, line: 272, type: !8613)
!9271 = !DILocalVariable(name: "ret", scope: !9264, file: !1046, line: 273, type: !103)
!9272 = !DILocalVariable(name: "clk", scope: !9264, file: !1046, line: 278, type: !8903)
!9273 = !DILocation(line: 0, scope: !9264)
!9274 = !DILocation(line: 272, column: 45, scope: !9264)
!9275 = !DILocation(line: 282, column: 38, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9277, file: !1046, line: 280, column: 10)
!9277 = distinct !DILexicalBlock(scope: !9264, file: !1046, line: 280, column: 6)
!9278 = !DILocation(line: 282, column: 6, scope: !9276)
!9279 = !DILocation(line: 281, column: 9, scope: !9276)
!9280 = !DILocation(line: 293, column: 1, scope: !9264)
!9281 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !9254, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9282)
!9282 = !{!9283}
!9283 = !DILocalVariable(name: "dev", arg: 1, scope: !9281, file: !196, line: 730, type: !905)
!9284 = !DILocation(line: 0, scope: !9281)
!9285 = !DILocation(line: 732, column: 9, scope: !9281)
!9286 = !DILocation(line: 732, column: 2, scope: !9281)
!9287 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1046, file: !1046, line: 496, type: !9288, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !9290)
!9288 = !DISubroutineType(types: !9289)
!9289 = !{!103, !905, !103, !103, !103}
!9290 = !{!9291, !9292, !9293, !9294, !9295, !9296}
!9291 = !DILocalVariable(name: "dev", arg: 1, scope: !9287, file: !1046, line: 496, type: !905)
!9292 = !DILocalVariable(name: "pin", arg: 2, scope: !9287, file: !1046, line: 496, type: !103)
!9293 = !DILocalVariable(name: "conf", arg: 3, scope: !9287, file: !1046, line: 496, type: !103)
!9294 = !DILocalVariable(name: "func", arg: 4, scope: !9287, file: !1046, line: 496, type: !103)
!9295 = !DILocalVariable(name: "ret", scope: !9287, file: !1046, line: 498, type: !103)
!9296 = !DILocalVariable(name: "gpio_out", scope: !9297, file: !1046, line: 508, type: !137)
!9297 = distinct !DILexicalBlock(scope: !9298, file: !1046, line: 507, column: 27)
!9298 = distinct !DILexicalBlock(scope: !9287, file: !1046, line: 507, column: 6)
!9299 = !DILocation(line: 0, scope: !9287)
!9300 = !DILocation(line: 505, column: 2, scope: !9287)
!9301 = !DILocation(line: 507, column: 11, scope: !9298)
!9302 = !DILocation(line: 507, column: 6, scope: !9287)
!9303 = !DILocation(line: 508, column: 28, scope: !9297)
!9304 = !DILocation(line: 0, scope: !9297)
!9305 = !DILocation(line: 510, column: 16, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9297, file: !1046, line: 510, column: 7)
!9307 = !DILocation(line: 0, scope: !9306)
!9308 = !DILocation(line: 510, column: 7, scope: !9297)
!9309 = !DILocation(line: 511, column: 4, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9306, file: !1046, line: 510, column: 32)
!9311 = !DILocation(line: 512, column: 3, scope: !9310)
!9312 = !DILocation(line: 513, column: 4, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9314, file: !1046, line: 512, column: 39)
!9314 = distinct !DILexicalBlock(scope: !9306, file: !1046, line: 512, column: 14)
!9315 = !DILocation(line: 514, column: 3, scope: !9313)
!9316 = !DILocation(line: 518, column: 1, scope: !9287)
!9317 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1319, file: !1319, line: 526, type: !1222, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9318)
!9318 = !{!9319, !9320, !9321}
!9319 = !DILocalVariable(name: "dev", arg: 1, scope: !9317, file: !1319, line: 526, type: !1224)
!9320 = !DILocalVariable(name: "c", arg: 2, scope: !9317, file: !1319, line: 526, type: !837)
!9321 = !DILocalVariable(name: "config", scope: !9317, file: !1319, line: 528, type: !9322)
!9322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!9323 = !DILocation(line: 0, scope: !9317)
!9324 = !DILocation(line: 528, column: 48, scope: !9317)
!9325 = !DILocation(line: 531, column: 40, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9317, file: !1319, line: 531, column: 6)
!9327 = !DILocation(line: 531, column: 6, scope: !9326)
!9328 = !DILocation(line: 531, column: 6, scope: !9317)
!9329 = !DILocation(line: 532, column: 34, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9326, file: !1319, line: 531, column: 48)
!9331 = !DILocation(line: 532, column: 3, scope: !9330)
!9332 = !DILocation(line: 533, column: 2, scope: !9330)
!9333 = !DILocation(line: 539, column: 42, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9317, file: !1319, line: 539, column: 6)
!9335 = !DILocation(line: 539, column: 7, scope: !9334)
!9336 = !DILocation(line: 539, column: 6, scope: !9317)
!9337 = !DILocation(line: 543, column: 52, scope: !9317)
!9338 = !DILocation(line: 543, column: 22, scope: !9317)
!9339 = !DILocation(line: 543, column: 5, scope: !9317)
!9340 = !DILocation(line: 545, column: 2, scope: !9317)
!9341 = !DILocation(line: 546, column: 1, scope: !9317)
!9342 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1319, file: !1319, line: 548, type: !1241, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9343)
!9343 = !{!9344, !9345, !9346, !9347}
!9344 = !DILocalVariable(name: "dev", arg: 1, scope: !9342, file: !1319, line: 548, type: !1224)
!9345 = !DILocalVariable(name: "c", arg: 2, scope: !9342, file: !1319, line: 549, type: !209)
!9346 = !DILocalVariable(name: "config", scope: !9342, file: !1319, line: 551, type: !9322)
!9347 = !DILocalVariable(name: "key", scope: !9342, file: !1319, line: 555, type: !32)
!9348 = !DILocation(line: 0, scope: !9342)
!9349 = !DILocation(line: 551, column: 48, scope: !9342)
!9350 = !DILocation(line: 562, column: 2, scope: !9342)
!9351 = !DILocation(line: 563, column: 41, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9353, file: !1319, line: 563, column: 7)
!9353 = distinct !DILexicalBlock(scope: !9342, file: !1319, line: 562, column: 12)
!9354 = !DILocation(line: 563, column: 7, scope: !9352)
!9355 = !DILocation(line: 563, column: 7, scope: !9353)
!9356 = !DILocation(line: 55, column: 2, scope: !9357, inlinedAt: !9361)
!9357 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6094, file: !6094, line: 42, type: !6095, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9358)
!9358 = !{!9359, !9360}
!9359 = !DILocalVariable(name: "key", scope: !9357, file: !6094, line: 44, type: !32)
!9360 = !DILocalVariable(name: "tmp", scope: !9357, file: !6094, line: 53, type: !32)
!9361 = distinct !DILocation(line: 564, column: 10, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9352, file: !1319, line: 563, column: 49)
!9363 = !{i64 1997142}
!9364 = !DILocation(line: 0, scope: !9357, inlinedAt: !9361)
!9365 = !DILocation(line: 565, column: 42, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9362, file: !1319, line: 565, column: 8)
!9367 = !DILocation(line: 565, column: 8, scope: !9366)
!9368 = !DILocation(line: 565, column: 8, scope: !9362)
!9369 = !DILocalVariable(name: "key", arg: 1, scope: !9370, file: !6094, line: 84, type: !32)
!9370 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6094, file: !6094, line: 84, type: !6105, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9371)
!9371 = !{!9369}
!9372 = !DILocation(line: 0, scope: !9370, inlinedAt: !9373)
!9373 = distinct !DILocation(line: 568, column: 4, scope: !9362)
!9374 = !DILocation(line: 95, column: 2, scope: !9370, inlinedAt: !9373)
!9375 = !{i64 1997959}
!9376 = !DILocation(line: 569, column: 3, scope: !9362)
!9377 = distinct !{!9377, !9350, !9378}
!9378 = !DILocation(line: 570, column: 2, scope: !9342)
!9379 = !DILocation(line: 592, column: 33, scope: !9342)
!9380 = !DILocation(line: 592, column: 2, scope: !9342)
!9381 = !DILocation(line: 0, scope: !9370, inlinedAt: !9382)
!9382 = distinct !DILocation(line: 593, column: 2, scope: !9342)
!9383 = !DILocation(line: 95, column: 2, scope: !9370, inlinedAt: !9382)
!9384 = !DILocation(line: 594, column: 1, scope: !9342)
!9385 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1319, file: !1319, line: 596, type: !1245, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9386)
!9386 = !{!9387, !9388, !9389}
!9387 = !DILocalVariable(name: "dev", arg: 1, scope: !9385, file: !1319, line: 596, type: !1224)
!9388 = !DILocalVariable(name: "config", scope: !9385, file: !1319, line: 598, type: !9322)
!9389 = !DILocalVariable(name: "err", scope: !9385, file: !1319, line: 599, type: !137)
!9390 = !DILocation(line: 0, scope: !9385)
!9391 = !DILocation(line: 598, column: 48, scope: !9385)
!9392 = !DILocation(line: 606, column: 40, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9385, file: !1319, line: 606, column: 6)
!9394 = !DILocation(line: 606, column: 6, scope: !9393)
!9395 = !DILocation(line: 606, column: 6, scope: !9385)
!9396 = !DILocation(line: 610, column: 39, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9385, file: !1319, line: 610, column: 6)
!9398 = !DILocation(line: 610, column: 6, scope: !9397)
!9399 = !DILocation(line: 610, column: 6, scope: !9385)
!9400 = !DILocation(line: 614, column: 39, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9385, file: !1319, line: 614, column: 6)
!9402 = !DILocation(line: 614, column: 6, scope: !9401)
!9403 = !DILocation(line: 614, column: 6, scope: !9385)
!9404 = !DILocation(line: 619, column: 40, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9385, file: !1319, line: 619, column: 6)
!9406 = !DILocation(line: 619, column: 6, scope: !9405)
!9407 = !DILocation(line: 619, column: 6, scope: !9385)
!9408 = !DILocation(line: 623, column: 10, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9385, file: !1319, line: 623, column: 6)
!9410 = !DILocation(line: 623, column: 6, scope: !9385)
!9411 = !DILocation(line: 624, column: 34, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9409, file: !1319, line: 623, column: 24)
!9413 = !DILocation(line: 624, column: 3, scope: !9412)
!9414 = !DILocation(line: 625, column: 2, scope: !9412)
!9415 = !DILocation(line: 632, column: 10, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9385, file: !1319, line: 632, column: 6)
!9417 = !DILocation(line: 632, column: 6, scope: !9385)
!9418 = !DILocation(line: 633, column: 34, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9416, file: !1319, line: 632, column: 32)
!9420 = !DILocation(line: 633, column: 3, scope: !9419)
!9421 = !DILocation(line: 634, column: 2, scope: !9419)
!9422 = !DILocation(line: 636, column: 10, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9385, file: !1319, line: 636, column: 6)
!9424 = !DILocation(line: 636, column: 6, scope: !9385)
!9425 = !DILocation(line: 637, column: 33, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9423, file: !1319, line: 636, column: 31)
!9427 = !DILocation(line: 637, column: 3, scope: !9426)
!9428 = !DILocation(line: 638, column: 2, scope: !9426)
!9429 = !DILocation(line: 640, column: 10, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9385, file: !1319, line: 640, column: 6)
!9431 = !DILocation(line: 640, column: 6, scope: !9385)
!9432 = !DILocation(line: 641, column: 33, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9430, file: !1319, line: 640, column: 32)
!9434 = !DILocation(line: 641, column: 3, scope: !9433)
!9435 = !DILocation(line: 642, column: 2, scope: !9433)
!9436 = !DILocation(line: 646, column: 32, scope: !9385)
!9437 = !DILocation(line: 646, column: 2, scope: !9385)
!9438 = !DILocation(line: 648, column: 2, scope: !9385)
!9439 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1319, file: !1319, line: 419, type: !1249, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9440)
!9440 = !{!9441, !9442, !9443, !9444, !9446, !9447, !9448, !9449}
!9441 = !DILocalVariable(name: "dev", arg: 1, scope: !9439, file: !1319, line: 419, type: !1224)
!9442 = !DILocalVariable(name: "cfg", arg: 2, scope: !9439, file: !1319, line: 420, type: !1251)
!9443 = !DILocalVariable(name: "config", scope: !9439, file: !1319, line: 422, type: !9322)
!9444 = !DILocalVariable(name: "data", scope: !9439, file: !1319, line: 423, type: !9445)
!9445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 32)
!9446 = !DILocalVariable(name: "parity", scope: !9439, file: !1319, line: 424, type: !6534)
!9447 = !DILocalVariable(name: "stopbits", scope: !9439, file: !1319, line: 425, type: !6534)
!9448 = !DILocalVariable(name: "databits", scope: !9439, file: !1319, line: 426, type: !6534)
!9449 = !DILocalVariable(name: "flowctrl", scope: !9439, file: !1319, line: 428, type: !6534)
!9450 = !DILocation(line: 0, scope: !9439)
!9451 = !DILocation(line: 422, column: 48, scope: !9439)
!9452 = !DILocation(line: 423, column: 38, scope: !9439)
!9453 = !DILocation(line: 424, column: 56, scope: !9439)
!9454 = !DILocation(line: 424, column: 51, scope: !9439)
!9455 = !DILocation(line: 424, column: 26, scope: !9439)
!9456 = !DILocation(line: 425, column: 60, scope: !9439)
!9457 = !DILocation(line: 425, column: 55, scope: !9439)
!9458 = !DILocation(line: 425, column: 28, scope: !9439)
!9459 = !DILocation(line: 426, column: 60, scope: !9439)
!9460 = !DILocation(line: 426, column: 55, scope: !9439)
!9461 = !DILocation(line: 426, column: 28, scope: !9439)
!9462 = !DILocation(line: 428, column: 58, scope: !9439)
!9463 = !DILocation(line: 428, column: 53, scope: !9439)
!9464 = !DILocation(line: 428, column: 28, scope: !9439)
!9465 = !DILocation(line: 431, column: 44, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9439, file: !1319, line: 431, column: 6)
!9467 = !DILocation(line: 438, column: 22, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9439, file: !1319, line: 437, column: 6)
!9469 = !DILocation(line: 437, column: 6, scope: !9439)
!9470 = !DILocation(line: 448, column: 6, scope: !9439)
!9471 = !DILocation(line: 465, column: 47, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9439, file: !1319, line: 465, column: 6)
!9473 = !DILocation(line: 475, column: 21, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9439, file: !1319, line: 475, column: 6)
!9475 = !DILocation(line: 475, column: 6, scope: !9439)
!9476 = !DILocation(line: 476, column: 8, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9478, file: !1319, line: 476, column: 7)
!9478 = distinct !DILexicalBlock(scope: !9474, file: !1319, line: 475, column: 49)
!9479 = !DILocation(line: 477, column: 34, scope: !9477)
!9480 = !DILocation(line: 476, column: 7, scope: !9478)
!9481 = !DILocation(line: 482, column: 27, scope: !9439)
!9482 = !DILocation(line: 482, column: 2, scope: !9439)
!9483 = !DILocation(line: 484, column: 16, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9439, file: !1319, line: 484, column: 6)
!9485 = !DILocation(line: 484, column: 13, scope: !9484)
!9486 = !DILocation(line: 484, column: 6, scope: !9439)
!9487 = !DILocation(line: 485, column: 3, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9484, file: !1319, line: 484, column: 44)
!9489 = !DILocation(line: 486, column: 2, scope: !9488)
!9490 = !DILocation(line: 488, column: 18, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9439, file: !1319, line: 488, column: 6)
!9492 = !DILocation(line: 488, column: 15, scope: !9491)
!9493 = !DILocation(line: 488, column: 6, scope: !9439)
!9494 = !DILocation(line: 489, column: 3, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9491, file: !1319, line: 488, column: 48)
!9496 = !DILocation(line: 490, column: 2, scope: !9495)
!9497 = !DILocation(line: 492, column: 18, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9439, file: !1319, line: 492, column: 6)
!9499 = !DILocation(line: 492, column: 15, scope: !9498)
!9500 = !DILocation(line: 492, column: 6, scope: !9439)
!9501 = !DILocation(line: 493, column: 3, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9498, file: !1319, line: 492, column: 48)
!9503 = !DILocation(line: 494, column: 2, scope: !9502)
!9504 = !DILocation(line: 496, column: 18, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9439, file: !1319, line: 496, column: 6)
!9506 = !DILocation(line: 496, column: 15, scope: !9505)
!9507 = !DILocation(line: 496, column: 6, scope: !9439)
!9508 = !DILocation(line: 497, column: 3, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9505, file: !1319, line: 496, column: 46)
!9510 = !DILocation(line: 498, column: 2, scope: !9509)
!9511 = !DILocation(line: 500, column: 11, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9439, file: !1319, line: 500, column: 6)
!9513 = !DILocation(line: 500, column: 29, scope: !9512)
!9514 = !DILocation(line: 500, column: 20, scope: !9512)
!9515 = !DILocation(line: 500, column: 6, scope: !9439)
!9516 = !DILocation(line: 501, column: 3, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9512, file: !1319, line: 500, column: 40)
!9518 = !DILocation(line: 502, column: 26, scope: !9517)
!9519 = !DILocation(line: 502, column: 19, scope: !9517)
!9520 = !DILocation(line: 503, column: 2, scope: !9517)
!9521 = !DILocation(line: 505, column: 26, scope: !9439)
!9522 = !DILocation(line: 505, column: 2, scope: !9439)
!9523 = !DILocation(line: 506, column: 2, scope: !9439)
!9524 = !DILocation(line: 507, column: 1, scope: !9439)
!9525 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1319, file: !1319, line: 509, type: !1262, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9526)
!9526 = !{!9527, !9528, !9529}
!9527 = !DILocalVariable(name: "dev", arg: 1, scope: !9525, file: !1319, line: 509, type: !1224)
!9528 = !DILocalVariable(name: "cfg", arg: 2, scope: !9525, file: !1319, line: 510, type: !1264)
!9529 = !DILocalVariable(name: "data", scope: !9525, file: !1319, line: 512, type: !9445)
!9530 = !DILocation(line: 0, scope: !9525)
!9531 = !DILocation(line: 512, column: 38, scope: !9525)
!9532 = !DILocation(line: 514, column: 24, scope: !9525)
!9533 = !DILocation(line: 514, column: 7, scope: !9525)
!9534 = !DILocation(line: 514, column: 16, scope: !9525)
!9535 = !DILocation(line: 515, column: 41, scope: !9525)
!9536 = !{i32 0, i32 1537}
!9537 = !DILocation(line: 515, column: 16, scope: !9525)
!9538 = !DILocation(line: 515, column: 7, scope: !9525)
!9539 = !DILocation(line: 515, column: 14, scope: !9525)
!9540 = !DILocation(line: 517, column: 3, scope: !9525)
!9541 = !{i32 0, i32 12289}
!9542 = !DILocation(line: 516, column: 19, scope: !9525)
!9543 = !DILocation(line: 516, column: 7, scope: !9525)
!9544 = !DILocation(line: 516, column: 17, scope: !9525)
!9545 = !DILocation(line: 519, column: 3, scope: !9525)
!9546 = !DILocation(line: 519, column: 33, scope: !9525)
!9547 = !DILocation(line: 518, column: 19, scope: !9525)
!9548 = !DILocation(line: 518, column: 7, scope: !9525)
!9549 = !DILocation(line: 518, column: 17, scope: !9525)
!9550 = !DILocation(line: 521, column: 3, scope: !9525)
!9551 = !{i32 0, i32 769}
!9552 = !DILocation(line: 520, column: 19, scope: !9525)
!9553 = !DILocation(line: 520, column: 7, scope: !9525)
!9554 = !DILocation(line: 520, column: 17, scope: !9525)
!9555 = !DILocation(line: 522, column: 2, scope: !9525)
!9556 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1319, file: !1319, line: 205, type: !9557, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9559)
!9557 = !DISubroutineType(types: !9558)
!9558 = !{!137, !1224}
!9559 = !{!9560, !9561}
!9560 = !DILocalVariable(name: "dev", arg: 1, scope: !9556, file: !1319, line: 205, type: !1224)
!9561 = !DILocalVariable(name: "config", scope: !9556, file: !1319, line: 207, type: !9322)
!9562 = !DILocation(line: 0, scope: !9556)
!9563 = !DILocation(line: 207, column: 48, scope: !9556)
!9564 = !DILocation(line: 209, column: 36, scope: !9556)
!9565 = !DILocation(line: 209, column: 9, scope: !9556)
!9566 = !DILocation(line: 209, column: 2, scope: !9556)
!9567 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1319, file: !1319, line: 270, type: !9568, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9570)
!9568 = !DISubroutineType(types: !9569)
!9569 = !{!1190, !137}
!9570 = !{!9571}
!9571 = !DILocalVariable(name: "parity", arg: 1, scope: !9567, file: !1319, line: 270, type: !137)
!9572 = !DILocation(line: 0, scope: !9567)
!9573 = !DILocation(line: 272, column: 2, scope: !9567)
!9574 = !DILocation(line: 281, column: 1, scope: !9567)
!9575 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1319, file: !1319, line: 220, type: !9557, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9576)
!9576 = !{!9577, !9578}
!9577 = !DILocalVariable(name: "dev", arg: 1, scope: !9575, file: !1319, line: 220, type: !1224)
!9578 = !DILocalVariable(name: "config", scope: !9575, file: !1319, line: 222, type: !9322)
!9579 = !DILocation(line: 0, scope: !9575)
!9580 = !DILocation(line: 222, column: 48, scope: !9575)
!9581 = !DILocation(line: 224, column: 44, scope: !9575)
!9582 = !DILocation(line: 224, column: 9, scope: !9575)
!9583 = !DILocation(line: 224, column: 2, scope: !9575)
!9584 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1319, file: !1319, line: 304, type: !9585, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9587)
!9585 = !DISubroutineType(types: !9586)
!9586 = !{!1204, !137}
!9587 = !{!9588}
!9588 = !DILocalVariable(name: "sb", arg: 1, scope: !9584, file: !1319, line: 304, type: !137)
!9589 = !DILocation(line: 0, scope: !9584)
!9590 = !DILocation(line: 306, column: 2, scope: !9584)
!9591 = !DILocation(line: 0, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9584, file: !1319, line: 306, column: 14)
!9593 = !DILocation(line: 323, column: 1, scope: !9584)
!9594 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1319, file: !1319, line: 235, type: !9557, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9595)
!9595 = !{!9596, !9597}
!9596 = !DILocalVariable(name: "dev", arg: 1, scope: !9594, file: !1319, line: 235, type: !1224)
!9597 = !DILocalVariable(name: "config", scope: !9594, file: !1319, line: 237, type: !9322)
!9598 = !DILocation(line: 0, scope: !9594)
!9599 = !DILocation(line: 237, column: 48, scope: !9594)
!9600 = !DILocation(line: 239, column: 39, scope: !9594)
!9601 = !DILocation(line: 239, column: 9, scope: !9594)
!9602 = !DILocation(line: 239, column: 2, scope: !9594)
!9603 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1319, file: !1319, line: 355, type: !9604, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9606)
!9604 = !DISubroutineType(types: !9605)
!9605 = !{!1197, !137, !137}
!9606 = !{!9607, !9608}
!9607 = !DILocalVariable(name: "db", arg: 1, scope: !9603, file: !1319, line: 355, type: !137)
!9608 = !DILocalVariable(name: "p", arg: 2, scope: !9603, file: !1319, line: 356, type: !137)
!9609 = !DILocation(line: 0, scope: !9603)
!9610 = !DILocation(line: 358, column: 2, scope: !9603)
!9611 = !DILocation(line: 384, column: 1, scope: !9603)
!9612 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1319, file: !1319, line: 250, type: !9557, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9613)
!9613 = !{!9614, !9615}
!9614 = !DILocalVariable(name: "dev", arg: 1, scope: !9612, file: !1319, line: 250, type: !1224)
!9615 = !DILocalVariable(name: "config", scope: !9612, file: !1319, line: 252, type: !9322)
!9616 = !DILocation(line: 0, scope: !9612)
!9617 = !DILocation(line: 252, column: 48, scope: !9612)
!9618 = !DILocation(line: 254, column: 40, scope: !9612)
!9619 = !DILocation(line: 254, column: 9, scope: !9612)
!9620 = !DILocation(line: 254, column: 2, scope: !9612)
!9621 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1319, file: !1319, line: 409, type: !9622, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9624)
!9622 = !DISubroutineType(types: !9623)
!9623 = !{!1210, !137}
!9624 = !{!9625}
!9625 = !DILocalVariable(name: "fc", arg: 1, scope: !9621, file: !1319, line: 409, type: !137)
!9626 = !DILocation(line: 0, scope: !9621)
!9627 = !DILocation(line: 411, column: 9, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9621, file: !1319, line: 411, column: 6)
!9629 = !DILocation(line: 416, column: 1, scope: !9621)
!9630 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9631, file: !9631, line: 967, type: !9632, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9634)
!9631 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9632 = !DISubroutineType(types: !9633)
!9633 = !{!137, !1265}
!9634 = !{!9635}
!9635 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9630, file: !9631, line: 967, type: !1265)
!9636 = !DILocation(line: 0, scope: !9630)
!9637 = !DILocation(line: 969, column: 21, scope: !9630)
!9638 = !DILocation(line: 969, column: 3, scope: !9630)
!9639 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9631, file: !9631, line: 601, type: !9632, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9640)
!9640 = !{!9641}
!9641 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9639, file: !9631, line: 601, type: !1265)
!9642 = !DILocation(line: 0, scope: !9639)
!9643 = !DILocation(line: 603, column: 21, scope: !9639)
!9644 = !DILocation(line: 603, column: 3, scope: !9639)
!9645 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9631, file: !9631, line: 820, type: !9632, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9646)
!9646 = !{!9647}
!9647 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9645, file: !9631, line: 820, type: !1265)
!9648 = !DILocation(line: 0, scope: !9645)
!9649 = !DILocation(line: 822, column: 21, scope: !9645)
!9650 = !DILocation(line: 822, column: 3, scope: !9645)
!9651 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9631, file: !9631, line: 547, type: !9632, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9652)
!9652 = !{!9653}
!9653 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9651, file: !9631, line: 547, type: !1265)
!9654 = !DILocation(line: 0, scope: !9651)
!9655 = !DILocation(line: 549, column: 21, scope: !9651)
!9656 = !DILocation(line: 549, column: 3, scope: !9651)
!9657 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1319, file: !1319, line: 257, type: !9658, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9660)
!9658 = !DISubroutineType(types: !9659)
!9659 = !{!137, !1190}
!9660 = !{!9661}
!9661 = !DILocalVariable(name: "parity", arg: 1, scope: !9657, file: !1319, line: 257, type: !1190)
!9662 = !DILocation(line: 0, scope: !9657)
!9663 = !DILocation(line: 259, column: 2, scope: !9657)
!9664 = !DILocation(line: 268, column: 1, scope: !9657)
!9665 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1319, file: !1319, line: 283, type: !9666, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9668)
!9666 = !DISubroutineType(types: !9667)
!9667 = !{!137, !1204}
!9668 = !{!9669}
!9669 = !DILocalVariable(name: "sb", arg: 1, scope: !9665, file: !1319, line: 283, type: !1204)
!9670 = !DILocation(line: 0, scope: !9665)
!9671 = !DILocation(line: 285, column: 2, scope: !9665)
!9672 = !DILocation(line: 0, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9665, file: !1319, line: 285, column: 14)
!9674 = !DILocation(line: 302, column: 1, scope: !9665)
!9675 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1319, file: !1319, line: 325, type: !9676, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9678)
!9676 = !DISubroutineType(types: !9677)
!9677 = !{!137, !1197, !1190}
!9678 = !{!9679, !9680}
!9679 = !DILocalVariable(name: "db", arg: 1, scope: !9675, file: !1319, line: 325, type: !1197)
!9680 = !DILocalVariable(name: "p", arg: 2, scope: !9675, file: !1319, line: 326, type: !1190)
!9681 = !DILocation(line: 0, scope: !9675)
!9682 = !DILocation(line: 328, column: 2, scope: !9675)
!9683 = !DILocation(line: 353, column: 1, scope: !9675)
!9684 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1319, file: !1319, line: 393, type: !9685, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9687)
!9685 = !DISubroutineType(types: !9686)
!9686 = !{!137, !1210}
!9687 = !{!9688}
!9688 = !DILocalVariable(name: "fc", arg: 1, scope: !9684, file: !1319, line: 393, type: !1210)
!9689 = !DILocation(line: 0, scope: !9684)
!9690 = !DILocation(line: 395, column: 9, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9684, file: !1319, line: 395, column: 6)
!9692 = !DILocation(line: 400, column: 1, scope: !9684)
!9693 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9631, file: !9631, line: 424, type: !9694, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9696)
!9694 = !DISubroutineType(types: !9695)
!9695 = !{null, !1265}
!9696 = !{!9697}
!9697 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9693, file: !9631, line: 424, type: !1265)
!9698 = !DILocation(line: 0, scope: !9693)
!9699 = !DILocation(line: 426, column: 3, scope: !9693)
!9700 = !DILocation(line: 427, column: 1, scope: !9693)
!9701 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1319, file: !1319, line: 197, type: !9702, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9704)
!9702 = !DISubroutineType(types: !9703)
!9703 = !{null, !1224, !137}
!9704 = !{!9705, !9706, !9707}
!9705 = !DILocalVariable(name: "dev", arg: 1, scope: !9701, file: !1319, line: 197, type: !1224)
!9706 = !DILocalVariable(name: "parity", arg: 2, scope: !9701, file: !1319, line: 198, type: !137)
!9707 = !DILocalVariable(name: "config", scope: !9701, file: !1319, line: 200, type: !9322)
!9708 = !DILocation(line: 0, scope: !9701)
!9709 = !DILocation(line: 200, column: 48, scope: !9701)
!9710 = !DILocation(line: 202, column: 29, scope: !9701)
!9711 = !DILocation(line: 202, column: 2, scope: !9701)
!9712 = !DILocation(line: 203, column: 1, scope: !9701)
!9713 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1319, file: !1319, line: 212, type: !9702, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9714)
!9714 = !{!9715, !9716, !9717}
!9715 = !DILocalVariable(name: "dev", arg: 1, scope: !9713, file: !1319, line: 212, type: !1224)
!9716 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9713, file: !1319, line: 213, type: !137)
!9717 = !DILocalVariable(name: "config", scope: !9713, file: !1319, line: 215, type: !9322)
!9718 = !DILocation(line: 0, scope: !9713)
!9719 = !DILocation(line: 215, column: 48, scope: !9713)
!9720 = !DILocation(line: 217, column: 37, scope: !9713)
!9721 = !DILocation(line: 217, column: 2, scope: !9713)
!9722 = !DILocation(line: 218, column: 1, scope: !9713)
!9723 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1319, file: !1319, line: 227, type: !9702, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9724)
!9724 = !{!9725, !9726, !9727}
!9725 = !DILocalVariable(name: "dev", arg: 1, scope: !9723, file: !1319, line: 227, type: !1224)
!9726 = !DILocalVariable(name: "databits", arg: 2, scope: !9723, file: !1319, line: 228, type: !137)
!9727 = !DILocalVariable(name: "config", scope: !9723, file: !1319, line: 230, type: !9322)
!9728 = !DILocation(line: 0, scope: !9723)
!9729 = !DILocation(line: 230, column: 48, scope: !9723)
!9730 = !DILocation(line: 232, column: 32, scope: !9723)
!9731 = !DILocation(line: 232, column: 2, scope: !9723)
!9732 = !DILocation(line: 233, column: 1, scope: !9723)
!9733 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1319, file: !1319, line: 242, type: !9702, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9734)
!9734 = !{!9735, !9736, !9737}
!9735 = !DILocalVariable(name: "dev", arg: 1, scope: !9733, file: !1319, line: 242, type: !1224)
!9736 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9733, file: !1319, line: 243, type: !137)
!9737 = !DILocalVariable(name: "config", scope: !9733, file: !1319, line: 245, type: !9322)
!9738 = !DILocation(line: 0, scope: !9733)
!9739 = !DILocation(line: 245, column: 48, scope: !9733)
!9740 = !DILocation(line: 247, column: 33, scope: !9733)
!9741 = !DILocation(line: 247, column: 2, scope: !9733)
!9742 = !DILocation(line: 248, column: 1, scope: !9733)
!9743 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1319, file: !1319, line: 107, type: !9702, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9744)
!9744 = !{!9745, !9746, !9747, !9748, !9749}
!9745 = !DILocalVariable(name: "dev", arg: 1, scope: !9743, file: !1319, line: 107, type: !1224)
!9746 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9743, file: !1319, line: 107, type: !137)
!9747 = !DILocalVariable(name: "config", scope: !9743, file: !1319, line: 109, type: !9322)
!9748 = !DILocalVariable(name: "data", scope: !9743, file: !1319, line: 110, type: !9445)
!9749 = !DILocalVariable(name: "clock_rate", scope: !9743, file: !1319, line: 112, type: !137)
!9750 = !DILocation(line: 0, scope: !9743)
!9751 = !DILocation(line: 109, column: 48, scope: !9743)
!9752 = !DILocation(line: 110, column: 38, scope: !9743)
!9753 = !DILocation(line: 112, column: 2, scope: !9743)
!9754 = !DILocation(line: 123, column: 36, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9756, file: !1319, line: 123, column: 7)
!9756 = distinct !DILexicalBlock(scope: !9757, file: !1319, line: 122, column: 9)
!9757 = distinct !DILexicalBlock(scope: !9743, file: !1319, line: 115, column: 6)
!9758 = !DILocation(line: 124, column: 42, scope: !9755)
!9759 = !DILocation(line: 123, column: 7, scope: !9755)
!9760 = !DILocation(line: 125, column: 22, scope: !9755)
!9761 = !DILocation(line: 123, column: 7, scope: !9756)
!9762 = !DILocation(line: 176, column: 36, scope: !9743)
!9763 = !DILocation(line: 176, column: 3, scope: !9743)
!9764 = !DILocation(line: 179, column: 32, scope: !9743)
!9765 = !DILocation(line: 180, column: 10, scope: !9743)
!9766 = !DILocation(line: 179, column: 3, scope: !9743)
!9767 = !DILocation(line: 195, column: 1, scope: !9743)
!9768 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9631, file: !9631, line: 410, type: !9694, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9769)
!9769 = !{!9770}
!9770 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9768, file: !9631, line: 410, type: !1265)
!9771 = !DILocation(line: 0, scope: !9768)
!9772 = !DILocation(line: 412, column: 3, scope: !9768)
!9773 = !DILocation(line: 413, column: 1, scope: !9768)
!9774 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !682, file: !682, line: 216, type: !1298, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9775)
!9775 = !{!9776, !9777, !9778, !9779}
!9776 = !DILocalVariable(name: "dev", arg: 1, scope: !9774, file: !682, line: 216, type: !1224)
!9777 = !DILocalVariable(name: "sys", arg: 2, scope: !9774, file: !682, line: 217, type: !776)
!9778 = !DILocalVariable(name: "rate", arg: 3, scope: !9774, file: !682, line: 218, type: !149)
!9779 = !DILocalVariable(name: "api", scope: !9774, file: !682, line: 220, type: !1276)
!9780 = !DILocation(line: 0, scope: !9774)
!9781 = !DILocation(line: 221, column: 49, scope: !9774)
!9782 = !DILocation(line: 223, column: 11, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9774, file: !682, line: 223, column: 6)
!9784 = !DILocation(line: 223, column: 20, scope: !9783)
!9785 = !DILocation(line: 223, column: 6, scope: !9774)
!9786 = !DILocation(line: 227, column: 9, scope: !9774)
!9787 = !DILocation(line: 227, column: 2, scope: !9774)
!9788 = !DILocation(line: 228, column: 1, scope: !9774)
!9789 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9631, file: !9631, line: 615, type: !9790, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9792)
!9790 = !DISubroutineType(types: !9791)
!9791 = !{null, !1265, !137}
!9792 = !{!9793, !9794}
!9793 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9789, file: !9631, line: 615, type: !1265)
!9794 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9789, file: !9631, line: 615, type: !137)
!9795 = !DILocation(line: 0, scope: !9789)
!9796 = !DILocation(line: 617, column: 3, scope: !9789)
!9797 = !DILocation(line: 618, column: 1, scope: !9789)
!9798 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9631, file: !9631, line: 1020, type: !9799, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9801)
!9799 = !DISubroutineType(types: !9800)
!9800 = !{null, !1265, !137, !137, !137}
!9801 = !{!9802, !9803, !9804, !9805}
!9802 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9798, file: !9631, line: 1020, type: !1265)
!9803 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9798, file: !9631, line: 1020, type: !137)
!9804 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9798, file: !9631, line: 1020, type: !137)
!9805 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9798, file: !9631, line: 1021, type: !137)
!9806 = !DILocation(line: 0, scope: !9798)
!9807 = !DILocation(line: 1029, column: 30, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9809, file: !9631, line: 1028, column: 3)
!9809 = distinct !DILexicalBlock(scope: !9798, file: !9631, line: 1023, column: 7)
!9810 = !DILocation(line: 1029, column: 19, scope: !9808)
!9811 = !DILocation(line: 1029, column: 13, scope: !9808)
!9812 = !DILocation(line: 1029, column: 17, scope: !9808)
!9813 = !DILocation(line: 1031, column: 1, scope: !9798)
!9814 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9631, file: !9631, line: 949, type: !9790, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9815)
!9815 = !{!9816, !9817}
!9816 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9814, file: !9631, line: 949, type: !1265)
!9817 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9814, file: !9631, line: 949, type: !137)
!9818 = !DILocation(line: 0, scope: !9814)
!9819 = !DILocation(line: 951, column: 3, scope: !9814)
!9820 = !DILocation(line: 952, column: 1, scope: !9814)
!9821 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9631, file: !9631, line: 588, type: !9790, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9822)
!9822 = !{!9823, !9824}
!9823 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9821, file: !9631, line: 588, type: !1265)
!9824 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9821, file: !9631, line: 588, type: !137)
!9825 = !DILocation(line: 0, scope: !9821)
!9826 = !DILocation(line: 590, column: 3, scope: !9821)
!9827 = !DILocation(line: 591, column: 1, scope: !9821)
!9828 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9631, file: !9631, line: 805, type: !9790, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9829)
!9829 = !{!9830, !9831}
!9830 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9828, file: !9631, line: 805, type: !1265)
!9831 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9828, file: !9631, line: 805, type: !137)
!9832 = !DILocation(line: 0, scope: !9828)
!9833 = !DILocation(line: 807, column: 3, scope: !9828)
!9834 = !DILocation(line: 808, column: 1, scope: !9828)
!9835 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9631, file: !9631, line: 532, type: !9790, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9836)
!9836 = !{!9837, !9838}
!9837 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9835, file: !9631, line: 532, type: !1265)
!9838 = !DILocalVariable(name: "Parity", arg: 2, scope: !9835, file: !9631, line: 532, type: !137)
!9839 = !DILocation(line: 0, scope: !9835)
!9840 = !DILocation(line: 534, column: 3, scope: !9835)
!9841 = !DILocation(line: 535, column: 1, scope: !9835)
!9842 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9631, file: !9631, line: 1770, type: !9632, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9843)
!9843 = !{!9844}
!9844 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9842, file: !9631, line: 1770, type: !1265)
!9845 = !DILocation(line: 0, scope: !9842)
!9846 = !DILocation(line: 1772, column: 11, scope: !9842)
!9847 = !DILocation(line: 1772, column: 46, scope: !9842)
!9848 = !DILocation(line: 1772, column: 3, scope: !9842)
!9849 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9631, file: !9631, line: 1737, type: !9632, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9850)
!9850 = !{!9851}
!9851 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9849, file: !9631, line: 1737, type: !1265)
!9852 = !DILocation(line: 0, scope: !9849)
!9853 = !DILocation(line: 1739, column: 11, scope: !9849)
!9854 = !DILocation(line: 1739, column: 3, scope: !9849)
!9855 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9631, file: !9631, line: 1748, type: !9632, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9856)
!9856 = !{!9857}
!9857 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9855, file: !9631, line: 1748, type: !1265)
!9858 = !DILocation(line: 0, scope: !9855)
!9859 = !DILocation(line: 1750, column: 11, scope: !9855)
!9860 = !DILocation(line: 1750, column: 45, scope: !9855)
!9861 = !DILocation(line: 1750, column: 3, scope: !9855)
!9862 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9631, file: !9631, line: 1827, type: !9632, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9863)
!9863 = !{!9864}
!9864 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9862, file: !9631, line: 1827, type: !1265)
!9865 = !DILocation(line: 0, scope: !9862)
!9866 = !DILocation(line: 1829, column: 11, scope: !9862)
!9867 = !DILocation(line: 1829, column: 46, scope: !9862)
!9868 = !DILocation(line: 1829, column: 3, scope: !9862)
!9869 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9631, file: !9631, line: 1992, type: !9694, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9870)
!9870 = !{!9871}
!9871 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9869, file: !9631, line: 1992, type: !1265)
!9872 = !DILocation(line: 0, scope: !9869)
!9873 = !DILocation(line: 1994, column: 3, scope: !9869)
!9874 = !DILocation(line: 1995, column: 1, scope: !9869)
!9875 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9631, file: !9631, line: 1934, type: !9694, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9876)
!9876 = !{!9877, !9878}
!9877 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9875, file: !9631, line: 1934, type: !1265)
!9878 = !DILocalVariable(name: "tmpreg", scope: !9875, file: !9631, line: 1936, type: !176)
!9879 = !DILocation(line: 0, scope: !9875)
!9880 = !DILocation(line: 1936, column: 3, scope: !9875)
!9881 = !DILocation(line: 1936, column: 17, scope: !9875)
!9882 = !DILocation(line: 1937, column: 20, scope: !9875)
!9883 = !DILocation(line: 1937, column: 10, scope: !9875)
!9884 = !DILocation(line: 1938, column: 10, scope: !9875)
!9885 = !DILocation(line: 1939, column: 20, scope: !9875)
!9886 = !DILocation(line: 1939, column: 10, scope: !9875)
!9887 = !DILocation(line: 1940, column: 10, scope: !9875)
!9888 = !DILocation(line: 1941, column: 1, scope: !9875)
!9889 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9631, file: !9631, line: 1877, type: !9694, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9890)
!9890 = !{!9891, !9892}
!9891 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9889, file: !9631, line: 1877, type: !1265)
!9892 = !DILocalVariable(name: "tmpreg", scope: !9889, file: !9631, line: 1879, type: !176)
!9893 = !DILocation(line: 0, scope: !9889)
!9894 = !DILocation(line: 1879, column: 3, scope: !9889)
!9895 = !DILocation(line: 1879, column: 17, scope: !9889)
!9896 = !DILocation(line: 1880, column: 20, scope: !9889)
!9897 = !DILocation(line: 1880, column: 10, scope: !9889)
!9898 = !DILocation(line: 1881, column: 10, scope: !9889)
!9899 = !DILocation(line: 1882, column: 20, scope: !9889)
!9900 = !DILocation(line: 1882, column: 10, scope: !9889)
!9901 = !DILocation(line: 1883, column: 10, scope: !9889)
!9902 = !DILocation(line: 1884, column: 1, scope: !9889)
!9903 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9631, file: !9631, line: 1896, type: !9694, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9904)
!9904 = !{!9905, !9906}
!9905 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9903, file: !9631, line: 1896, type: !1265)
!9906 = !DILocalVariable(name: "tmpreg", scope: !9903, file: !9631, line: 1898, type: !176)
!9907 = !DILocation(line: 0, scope: !9903)
!9908 = !DILocation(line: 1898, column: 3, scope: !9903)
!9909 = !DILocation(line: 1898, column: 17, scope: !9903)
!9910 = !DILocation(line: 1899, column: 20, scope: !9903)
!9911 = !DILocation(line: 1899, column: 10, scope: !9903)
!9912 = !DILocation(line: 1900, column: 10, scope: !9903)
!9913 = !DILocation(line: 1901, column: 20, scope: !9903)
!9914 = !DILocation(line: 1901, column: 10, scope: !9903)
!9915 = !DILocation(line: 1902, column: 10, scope: !9903)
!9916 = !DILocation(line: 1903, column: 1, scope: !9903)
!9917 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9631, file: !9631, line: 1915, type: !9694, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9918)
!9918 = !{!9919, !9920}
!9919 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9917, file: !9631, line: 1915, type: !1265)
!9920 = !DILocalVariable(name: "tmpreg", scope: !9917, file: !9631, line: 1917, type: !176)
!9921 = !DILocation(line: 0, scope: !9917)
!9922 = !DILocation(line: 1917, column: 3, scope: !9917)
!9923 = !DILocation(line: 1917, column: 17, scope: !9917)
!9924 = !DILocation(line: 1918, column: 20, scope: !9917)
!9925 = !DILocation(line: 1918, column: 10, scope: !9917)
!9926 = !DILocation(line: 1919, column: 10, scope: !9917)
!9927 = !DILocation(line: 1920, column: 20, scope: !9917)
!9928 = !DILocation(line: 1920, column: 10, scope: !9917)
!9929 = !DILocation(line: 1921, column: 10, scope: !9917)
!9930 = !DILocation(line: 1922, column: 1, scope: !9917)
!9931 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9631, file: !9631, line: 1814, type: !9632, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9932)
!9932 = !{!9933}
!9933 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9931, file: !9631, line: 1814, type: !1265)
!9934 = !DILocation(line: 0, scope: !9931)
!9935 = !DILocation(line: 1816, column: 11, scope: !9931)
!9936 = !DILocation(line: 1816, column: 46, scope: !9931)
!9937 = !DILocation(line: 1816, column: 3, scope: !9931)
!9938 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9631, file: !9631, line: 2426, type: !9939, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9941)
!9939 = !DISubroutineType(types: !9940)
!9940 = !{null, !1265, !208}
!9941 = !{!9942, !9943}
!9942 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9938, file: !9631, line: 2426, type: !1265)
!9943 = !DILocalVariable(name: "Value", arg: 2, scope: !9938, file: !9631, line: 2426, type: !208)
!9944 = !DILocation(line: 0, scope: !9938)
!9945 = !DILocation(line: 2428, column: 16, scope: !9938)
!9946 = !DILocation(line: 2428, column: 11, scope: !9938)
!9947 = !DILocation(line: 2428, column: 14, scope: !9938)
!9948 = !DILocation(line: 2429, column: 1, scope: !9938)
!9949 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9631, file: !9631, line: 1792, type: !9632, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9950)
!9950 = !{!9951}
!9951 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9949, file: !9631, line: 1792, type: !1265)
!9952 = !DILocation(line: 0, scope: !9949)
!9953 = !DILocation(line: 1794, column: 11, scope: !9949)
!9954 = !DILocation(line: 1794, column: 47, scope: !9949)
!9955 = !DILocation(line: 1794, column: 3, scope: !9949)
!9956 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9631, file: !9631, line: 2403, type: !9957, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9959)
!9957 = !DISubroutineType(types: !9958)
!9958 = !{!208, !1265}
!9959 = !{!9960}
!9960 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9956, file: !9631, line: 2403, type: !1265)
!9961 = !DILocation(line: 0, scope: !9956)
!9962 = !DILocation(line: 2405, column: 20, scope: !9956)
!9963 = !DILocation(line: 2405, column: 10, scope: !9956)
!9964 = !DILocation(line: 2405, column: 3, scope: !9956)
!9965 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1319, file: !1319, line: 1583, type: !1245, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !9966)
!9966 = !{!9967, !9968, !9969, !9970, !9971, !9972}
!9967 = !DILocalVariable(name: "dev", arg: 1, scope: !9965, file: !1319, line: 1583, type: !1224)
!9968 = !DILocalVariable(name: "config", scope: !9965, file: !1319, line: 1585, type: !9322)
!9969 = !DILocalVariable(name: "data", scope: !9965, file: !1319, line: 1586, type: !9445)
!9970 = !DILocalVariable(name: "ll_parity", scope: !9965, file: !1319, line: 1587, type: !137)
!9971 = !DILocalVariable(name: "ll_datawidth", scope: !9965, file: !1319, line: 1588, type: !137)
!9972 = !DILocalVariable(name: "err", scope: !9965, file: !1319, line: 1589, type: !103)
!9973 = !DILocation(line: 0, scope: !9965)
!9974 = !DILocation(line: 1585, column: 48, scope: !9965)
!9975 = !DILocation(line: 1586, column: 38, scope: !9965)
!9976 = !DILocation(line: 1591, column: 2, scope: !9965)
!9977 = !DILocation(line: 1593, column: 29, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9965, file: !1319, line: 1593, column: 6)
!9979 = !DILocation(line: 1593, column: 7, scope: !9978)
!9980 = !DILocation(line: 1593, column: 6, scope: !9965)
!9981 = !DILocation(line: 1599, column: 31, scope: !9965)
!9982 = !DILocation(line: 1599, column: 71, scope: !9965)
!9983 = !DILocation(line: 1599, column: 8, scope: !9965)
!9984 = !DILocation(line: 1600, column: 10, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9965, file: !1319, line: 1600, column: 6)
!9986 = !DILocation(line: 1600, column: 6, scope: !9965)
!9987 = !DILocation(line: 1616, column: 36, scope: !9965)
!9988 = !DILocation(line: 1616, column: 8, scope: !9965)
!9989 = !DILocation(line: 1617, column: 10, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9965, file: !1319, line: 1617, column: 6)
!9991 = !DILocation(line: 1617, column: 6, scope: !9965)
!9992 = !DILocation(line: 1621, column: 27, scope: !9965)
!9993 = !DILocation(line: 1621, column: 2, scope: !9965)
!9994 = !DILocation(line: 1624, column: 40, scope: !9965)
!9995 = !DILocation(line: 1624, column: 2, scope: !9965)
!9996 = !DILocation(line: 1630, column: 14, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9965, file: !1319, line: 1630, column: 6)
!9998 = !DILocation(line: 1630, column: 6, scope: !9965)
!9999 = !DILocation(line: 1638, column: 2, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !10001, file: !1319, line: 1634, column: 34)
!10001 = distinct !DILexicalBlock(scope: !9997, file: !1319, line: 1634, column: 13)
!10002 = !DILocation(line: 0, scope: !9997)
!10003 = !DILocation(line: 1649, column: 35, scope: !9965)
!10004 = !DILocation(line: 1649, column: 2, scope: !9965)
!10005 = !DILocation(line: 1654, column: 14, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9965, file: !1319, line: 1654, column: 6)
!10007 = !DILocation(line: 1654, column: 6, scope: !9965)
!10008 = !DILocation(line: 1655, column: 3, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10006, file: !1319, line: 1654, column: 31)
!10010 = !DILocation(line: 1656, column: 2, scope: !10009)
!10011 = !DILocation(line: 1659, column: 37, scope: !9965)
!10012 = !DILocation(line: 1659, column: 2, scope: !9965)
!10013 = !DILocation(line: 1662, column: 14, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !9965, file: !1319, line: 1662, column: 6)
!10015 = !DILocation(line: 1662, column: 6, scope: !9965)
!10016 = !DILocation(line: 1663, column: 37, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10014, file: !1319, line: 1662, column: 27)
!10018 = !DILocation(line: 1663, column: 3, scope: !10017)
!10019 = !DILocation(line: 1664, column: 2, scope: !10017)
!10020 = !DILocation(line: 1684, column: 26, scope: !9965)
!10021 = !DILocation(line: 1684, column: 2, scope: !9965)
!10022 = !DILocation(line: 1722, column: 2, scope: !9965)
!10023 = !DILocation(line: 1724, column: 1, scope: !9965)
!10024 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1319, file: !1319, line: 651, type: !10025, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !10027)
!10025 = !DISubroutineType(types: !10026)
!10026 = !{null, !1224}
!10027 = !{!10028, !10029, !10030}
!10028 = !DILocalVariable(name: "dev", arg: 1, scope: !10024, file: !1319, line: 651, type: !1224)
!10029 = !DILocalVariable(name: "data", scope: !10024, file: !1319, line: 653, type: !9445)
!10030 = !DILocalVariable(name: "clk", scope: !10024, file: !1319, line: 654, type: !10031)
!10031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!10032 = !DILocation(line: 0, scope: !10024)
!10033 = !DILocation(line: 653, column: 38, scope: !10024)
!10034 = !DILocation(line: 656, column: 8, scope: !10024)
!10035 = !DILocation(line: 656, column: 14, scope: !10024)
!10036 = !DILocation(line: 657, column: 1, scope: !10024)
!10037 = distinct !DISubprogram(name: "device_is_ready", scope: !8460, file: !8460, line: 47, type: !10038, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !10040)
!10038 = !DISubroutineType(types: !10039)
!10039 = !{!211, !1224}
!10040 = !{!10041}
!10041 = !DILocalVariable(name: "dev", arg: 1, scope: !10037, file: !8460, line: 47, type: !1224)
!10042 = !DILocation(line: 0, scope: !10037)
!10043 = !DILocation(line: 55, column: 2, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10037, file: !8460, line: 55, column: 2)
!10045 = !{i64 2154348355}
!10046 = !DILocation(line: 56, column: 9, scope: !10037)
!10047 = !DILocation(line: 56, column: 2, scope: !10037)
!10048 = distinct !DISubprogram(name: "clock_control_on", scope: !682, file: !682, line: 123, type: !1283, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !10049)
!10049 = !{!10050, !10051, !10052}
!10050 = !DILocalVariable(name: "dev", arg: 1, scope: !10048, file: !682, line: 123, type: !1224)
!10051 = !DILocalVariable(name: "sys", arg: 2, scope: !10048, file: !682, line: 124, type: !776)
!10052 = !DILocalVariable(name: "api", scope: !10048, file: !682, line: 126, type: !1276)
!10053 = !DILocation(line: 0, scope: !10048)
!10054 = !DILocation(line: 127, column: 49, scope: !10048)
!10055 = !DILocation(line: 129, column: 14, scope: !10048)
!10056 = !DILocation(line: 129, column: 9, scope: !10048)
!10057 = !DILocation(line: 129, column: 2, scope: !10048)
!10058 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1344, file: !1344, line: 342, type: !10059, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !10061)
!10059 = !DISubroutineType(types: !10060)
!10060 = !{!103, !1392, !208}
!10061 = !{!10062, !10063, !10064, !10065}
!10062 = !DILocalVariable(name: "config", arg: 1, scope: !10058, file: !1344, line: 342, type: !1392)
!10063 = !DILocalVariable(name: "id", arg: 2, scope: !10058, file: !1344, line: 343, type: !208)
!10064 = !DILocalVariable(name: "ret", scope: !10058, file: !1344, line: 345, type: !103)
!10065 = !DILocalVariable(name: "state", scope: !10058, file: !1344, line: 346, type: !1347)
!10066 = !DILocation(line: 0, scope: !10058)
!10067 = !DILocation(line: 346, column: 2, scope: !10058)
!10068 = !DILocation(line: 348, column: 8, scope: !10058)
!10069 = !DILocation(line: 349, column: 10, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10058, file: !1344, line: 349, column: 6)
!10071 = !DILocation(line: 349, column: 6, scope: !10058)
!10072 = !DILocation(line: 353, column: 44, scope: !10058)
!10073 = !DILocation(line: 353, column: 9, scope: !10058)
!10074 = !DILocation(line: 353, column: 2, scope: !10058)
!10075 = !DILocation(line: 354, column: 1, scope: !10058)
!10076 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9631, file: !9631, line: 497, type: !9790, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !10077)
!10077 = !{!10078, !10079, !10080}
!10078 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10076, file: !9631, line: 497, type: !1265)
!10079 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10076, file: !9631, line: 497, type: !137)
!10080 = !DILocalVariable(name: "val", scope: !10081, file: !9631, line: 499, type: !137)
!10081 = distinct !DILexicalBlock(scope: !10076, file: !9631, line: 499, column: 3)
!10082 = !DILocation(line: 0, scope: !10076)
!10083 = !DILocation(line: 499, column: 3, scope: !10081)
!10084 = !DILocalVariable(name: "addr", arg: 1, scope: !10085, file: !6268, line: 476, type: !1315)
!10085 = distinct !DISubprogram(name: "__LDREXW", scope: !6268, file: !6268, line: 476, type: !10086, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !10088)
!10086 = !DISubroutineType(types: !10087)
!10087 = !{!137, !1315}
!10088 = !{!10084, !10089}
!10089 = !DILocalVariable(name: "result", scope: !10085, file: !6268, line: 478, type: !137)
!10090 = !DILocation(line: 0, scope: !10085, inlinedAt: !10091)
!10091 = distinct !DILocation(line: 499, column: 3, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10081, file: !9631, line: 499, column: 3)
!10093 = !DILocation(line: 480, column: 4, scope: !10085, inlinedAt: !10091)
!10094 = !{i64 2859204}
!10095 = !DILocation(line: 499, column: 3, scope: !10092)
!10096 = !DILocation(line: 0, scope: !10081)
!10097 = !DILocalVariable(name: "value", arg: 1, scope: !10098, file: !6268, line: 527, type: !137)
!10098 = distinct !DISubprogram(name: "__STREXW", scope: !6268, file: !6268, line: 527, type: !10099, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !10101)
!10099 = !DISubroutineType(types: !10100)
!10100 = !{!137, !137, !1315}
!10101 = !{!10097, !10102, !10103}
!10102 = !DILocalVariable(name: "addr", arg: 2, scope: !10098, file: !6268, line: 527, type: !1315)
!10103 = !DILocalVariable(name: "result", scope: !10098, file: !6268, line: 529, type: !137)
!10104 = !DILocation(line: 0, scope: !10098, inlinedAt: !10105)
!10105 = distinct !DILocation(line: 499, column: 3, scope: !10081)
!10106 = !DILocation(line: 531, column: 4, scope: !10098, inlinedAt: !10105)
!10107 = !{i64 2860640}
!10108 = distinct !{!10108, !10083, !10083}
!10109 = !DILocation(line: 500, column: 1, scope: !10076)
!10110 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9631, file: !9631, line: 850, type: !9799, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !10111)
!10111 = !{!10112, !10113, !10114, !10115}
!10112 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10110, file: !9631, line: 850, type: !1265)
!10113 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10110, file: !9631, line: 850, type: !137)
!10114 = !DILocalVariable(name: "Parity", arg: 3, scope: !10110, file: !9631, line: 850, type: !137)
!10115 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10110, file: !9631, line: 851, type: !137)
!10116 = !DILocation(line: 0, scope: !10110)
!10117 = !DILocation(line: 853, column: 3, scope: !10110)
!10118 = !DILocation(line: 854, column: 3, scope: !10110)
!10119 = !DILocation(line: 855, column: 1, scope: !10110)
!10120 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9631, file: !9631, line: 1337, type: !9694, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !10121)
!10121 = !{!10122}
!10122 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10120, file: !9631, line: 1337, type: !1265)
!10123 = !DILocation(line: 0, scope: !10120)
!10124 = !DILocation(line: 1339, column: 3, scope: !10120)
!10125 = !DILocation(line: 1340, column: 1, scope: !10120)
!10126 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1344, file: !1344, line: 316, type: !10127, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !10129)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{!103, !1392, !1347}
!10129 = !{!10130, !10131, !10132}
!10130 = !DILocalVariable(name: "config", arg: 1, scope: !10126, file: !1344, line: 317, type: !1392)
!10131 = !DILocalVariable(name: "state", arg: 2, scope: !10126, file: !1344, line: 318, type: !1347)
!10132 = !DILocalVariable(name: "reg", scope: !10126, file: !1344, line: 320, type: !22)
!10133 = !DILocation(line: 0, scope: !10126)
!10134 = !DILocation(line: 329, column: 39, scope: !10126)
!10135 = !DILocation(line: 329, column: 52, scope: !10126)
!10136 = !DILocation(line: 329, column: 9, scope: !10126)
!10137 = !DILocation(line: 329, column: 2, scope: !10126)
!10138 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10038, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !10139)
!10139 = !{!10140}
!10140 = !DILocalVariable(name: "dev", arg: 1, scope: !10138, file: !196, line: 730, type: !1224)
!10141 = !DILocation(line: 0, scope: !10138)
!10142 = !DILocation(line: 732, column: 9, scope: !10138)
!10143 = !DILocation(line: 732, column: 2, scope: !10138)
!10144 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1473, file: !1473, line: 270, type: !1479, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10145)
!10145 = !{!10146}
!10146 = !DILocalVariable(name: "dev", arg: 1, scope: !10144, file: !1473, line: 270, type: !1481)
!10147 = !DILocation(line: 0, scope: !10144)
!10148 = !DILocation(line: 274, column: 2, scope: !10144)
!10149 = !DILocation(line: 275, column: 12, scope: !10144)
!10150 = !DILocation(line: 276, column: 15, scope: !10144)
!10151 = !DILocation(line: 277, column: 16, scope: !10144)
!10152 = !DILocation(line: 278, column: 15, scope: !10144)
!10153 = !DILocation(line: 279, column: 16, scope: !10144)
!10154 = !DILocation(line: 282, column: 2, scope: !10144)
!10155 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6302, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10156)
!10156 = !{!10157, !10158}
!10157 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10155, file: !402, line: 1814, type: !638)
!10158 = !DILocalVariable(name: "priority", arg: 2, scope: !10155, file: !402, line: 1814, type: !137)
!10159 = !DILocation(line: 0, scope: !10155)
!10160 = !DILocation(line: 1822, column: 46, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10162, file: !402, line: 1821, column: 3)
!10162 = distinct !DILexicalBlock(scope: !10155, file: !402, line: 1816, column: 7)
!10163 = !DILocation(line: 1824, column: 1, scope: !10155)
!10164 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1473, file: !1473, line: 118, type: !6205, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10165)
!10165 = !{!10166, !10167}
!10166 = !DILocalVariable(name: "arg", arg: 1, scope: !10164, file: !1473, line: 118, type: !102)
!10167 = !DILocalVariable(name: "dticks", scope: !10164, file: !1473, line: 121, type: !137)
!10168 = !DILocation(line: 0, scope: !10164)
!10169 = !DILocation(line: 124, column: 2, scope: !10164)
!10170 = !DILocation(line: 129, column: 17, scope: !10164)
!10171 = !DILocation(line: 129, column: 14, scope: !10164)
!10172 = !DILocation(line: 130, column: 15, scope: !10164)
!10173 = !DILocation(line: 145, column: 27, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10175, file: !1473, line: 132, column: 16)
!10175 = distinct !DILexicalBlock(scope: !10164, file: !1473, line: 132, column: 6)
!10176 = !DILocation(line: 145, column: 25, scope: !10174)
!10177 = !DILocation(line: 145, column: 45, scope: !10174)
!10178 = !DILocation(line: 146, column: 30, scope: !10174)
!10179 = !DILocation(line: 146, column: 20, scope: !10174)
!10180 = !DILocation(line: 147, column: 3, scope: !10174)
!10181 = !DILocation(line: 151, column: 2, scope: !10164)
!10182 = !DILocation(line: 152, column: 1, scope: !10164)
!10183 = distinct !DISubprogram(name: "elapsed", scope: !1473, file: !1473, line: 85, type: !135, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10184)
!10184 = !{!10185, !10186, !10187}
!10185 = !DILocalVariable(name: "val1", scope: !10183, file: !1473, line: 87, type: !137)
!10186 = !DILocalVariable(name: "ctrl", scope: !10183, file: !1473, line: 88, type: !137)
!10187 = !DILocalVariable(name: "val2", scope: !10183, file: !1473, line: 89, type: !137)
!10188 = !DILocation(line: 87, column: 27, scope: !10183)
!10189 = !DILocation(line: 0, scope: !10183)
!10190 = !DILocation(line: 88, column: 27, scope: !10183)
!10191 = !DILocation(line: 89, column: 27, scope: !10183)
!10192 = !DILocation(line: 105, column: 12, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10183, file: !1473, line: 105, column: 6)
!10194 = !DILocation(line: 106, column: 6, scope: !10193)
!10195 = !DILocation(line: 107, column: 16, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10193, file: !1473, line: 106, column: 24)
!10197 = !DILocation(line: 111, column: 18, scope: !10196)
!10198 = !DILocation(line: 112, column: 2, scope: !10196)
!10199 = !DILocation(line: 114, column: 20, scope: !10183)
!10200 = !DILocation(line: 114, column: 30, scope: !10183)
!10201 = !DILocation(line: 114, column: 28, scope: !10183)
!10202 = !DILocation(line: 114, column: 2, scope: !10183)
!10203 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1473, file: !1473, line: 154, type: !10204, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10206)
!10204 = !DISubroutineType(types: !10205)
!10205 = !{null, !612, !211}
!10206 = !{!10207, !10208, !10209, !10210, !10211, !10212, !10213, !10218, !10219}
!10207 = !DILocalVariable(name: "ticks", arg: 1, scope: !10203, file: !1473, line: 154, type: !612)
!10208 = !DILocalVariable(name: "idle", arg: 2, scope: !10203, file: !1473, line: 154, type: !211)
!10209 = !DILocalVariable(name: "delay", scope: !10203, file: !1473, line: 169, type: !137)
!10210 = !DILocalVariable(name: "val1", scope: !10203, file: !1473, line: 170, type: !137)
!10211 = !DILocalVariable(name: "val2", scope: !10203, file: !1473, line: 170, type: !137)
!10212 = !DILocalVariable(name: "last_load_", scope: !10203, file: !1473, line: 171, type: !137)
!10213 = !DILocalVariable(name: "key", scope: !10203, file: !1473, line: 176, type: !10214)
!10214 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !10215)
!10215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !10216)
!10216 = !{!10217}
!10217 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10215, file: !368, line: 33, baseType: !103, size: 32)
!10218 = !DILocalVariable(name: "pending", scope: !10203, file: !1473, line: 178, type: !137)
!10219 = !DILocalVariable(name: "unannounced", scope: !10203, file: !1473, line: 185, type: !137)
!10220 = !DILocation(line: 0, scope: !10203)
!10221 = !DILocation(line: 162, column: 49, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10203, file: !1473, line: 162, column: 6)
!10223 = !DILocation(line: 163, column: 17, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10222, file: !1473, line: 162, column: 78)
!10225 = !DILocation(line: 164, column: 13, scope: !10224)
!10226 = !DILocation(line: 165, column: 3, scope: !10224)
!10227 = !DILocation(line: 171, column: 24, scope: !10203)
!10228 = !DILocation(line: 173, column: 10, scope: !10203)
!10229 = !DILocation(line: 174, column: 10, scope: !10203)
!10230 = !DILocalVariable(name: "l", arg: 1, scope: !10231, file: !368, line: 136, type: !10234)
!10231 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !10232, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10235)
!10232 = !DISubroutineType(types: !10233)
!10233 = !{!10214, !10234}
!10234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!10235 = !{!10230, !10236}
!10236 = !DILocalVariable(name: "k", scope: !10231, file: !368, line: 139, type: !10214)
!10237 = !DILocation(line: 0, scope: !10231, inlinedAt: !10238)
!10238 = distinct !DILocation(line: 176, column: 25, scope: !10203)
!10239 = !DILocation(line: 55, column: 2, scope: !10240, inlinedAt: !10244)
!10240 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6094, file: !6094, line: 42, type: !6095, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10241)
!10241 = !{!10242, !10243}
!10242 = !DILocalVariable(name: "key", scope: !10240, file: !6094, line: 44, type: !32)
!10243 = !DILocalVariable(name: "tmp", scope: !10240, file: !6094, line: 53, type: !32)
!10244 = distinct !DILocation(line: 145, column: 10, scope: !10231, inlinedAt: !10238)
!10245 = !{i64 1920996}
!10246 = !DILocation(line: 0, scope: !10240, inlinedAt: !10244)
!10247 = !DILocation(line: 178, column: 21, scope: !10203)
!10248 = !DILocation(line: 180, column: 18, scope: !10203)
!10249 = !DILocation(line: 182, column: 14, scope: !10203)
!10250 = !DILocation(line: 183, column: 15, scope: !10203)
!10251 = !DILocation(line: 185, column: 39, scope: !10203)
!10252 = !DILocation(line: 185, column: 37, scope: !10203)
!10253 = !DILocation(line: 187, column: 27, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10203, file: !1473, line: 187, column: 6)
!10255 = !DILocation(line: 187, column: 6, scope: !10203)
!10256 = !DILocation(line: 202, column: 27, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10254, file: !1473, line: 195, column: 9)
!10258 = !DILocation(line: 202, column: 48, scope: !10257)
!10259 = !DILocation(line: 203, column: 9, scope: !10257)
!10260 = !DILocation(line: 204, column: 11, scope: !10257)
!10261 = !DILocation(line: 205, column: 13, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10257, file: !1473, line: 205, column: 7)
!10263 = !DILocation(line: 205, column: 7, scope: !10257)
!10264 = !DILocation(line: 0, scope: !10254)
!10265 = !DILocation(line: 212, column: 18, scope: !10203)
!10266 = !DILocation(line: 214, column: 28, scope: !10203)
!10267 = !DILocation(line: 214, column: 16, scope: !10203)
!10268 = !DILocation(line: 215, column: 15, scope: !10203)
!10269 = !DILocation(line: 227, column: 11, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10203, file: !1473, line: 227, column: 6)
!10271 = !DILocation(line: 227, column: 6, scope: !10203)
!10272 = !DILocation(line: 228, column: 15, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10270, file: !1473, line: 227, column: 19)
!10274 = !DILocation(line: 228, column: 38, scope: !10273)
!10275 = !DILocation(line: 228, column: 24, scope: !10273)
!10276 = !DILocation(line: 229, column: 2, scope: !10273)
!10277 = !DILocation(line: 230, column: 24, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10270, file: !1473, line: 229, column: 9)
!10279 = !DILocation(line: 230, column: 15, scope: !10278)
!10280 = !DILocation(line: 0, scope: !10270)
!10281 = !DILocalVariable(name: "key", arg: 2, scope: !10282, file: !368, line: 190, type: !10214)
!10282 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !10283, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10285)
!10283 = !DISubroutineType(types: !10284)
!10284 = !{null, !10234, !10214}
!10285 = !{!10286, !10281}
!10286 = !DILocalVariable(name: "l", arg: 1, scope: !10282, file: !368, line: 189, type: !10234)
!10287 = !DILocation(line: 0, scope: !10282, inlinedAt: !10288)
!10288 = distinct !DILocation(line: 232, column: 2, scope: !10203)
!10289 = !DILocalVariable(name: "key", arg: 1, scope: !10290, file: !6094, line: 84, type: !32)
!10290 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6094, file: !6094, line: 84, type: !6105, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10291)
!10291 = !{!10289}
!10292 = !DILocation(line: 0, scope: !10290, inlinedAt: !10293)
!10293 = distinct !DILocation(line: 215, column: 2, scope: !10282, inlinedAt: !10288)
!10294 = !DILocation(line: 95, column: 2, scope: !10290, inlinedAt: !10293)
!10295 = !{i64 1921813}
!10296 = !DILocation(line: 234, column: 1, scope: !10203)
!10297 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1473, file: !1473, line: 236, type: !135, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10298)
!10298 = !{!10299, !10300}
!10299 = !DILocalVariable(name: "key", scope: !10297, file: !1473, line: 242, type: !10214)
!10300 = !DILocalVariable(name: "cyc", scope: !10297, file: !1473, line: 243, type: !137)
!10301 = !DILocation(line: 0, scope: !10231, inlinedAt: !10302)
!10302 = distinct !DILocation(line: 242, column: 25, scope: !10297)
!10303 = !DILocation(line: 55, column: 2, scope: !10240, inlinedAt: !10304)
!10304 = distinct !DILocation(line: 145, column: 10, scope: !10231, inlinedAt: !10302)
!10305 = !DILocation(line: 0, scope: !10240, inlinedAt: !10304)
!10306 = !DILocation(line: 0, scope: !10297)
!10307 = !DILocation(line: 243, column: 17, scope: !10297)
!10308 = !DILocation(line: 243, column: 29, scope: !10297)
!10309 = !DILocation(line: 243, column: 27, scope: !10297)
!10310 = !DILocation(line: 243, column: 43, scope: !10297)
!10311 = !DILocation(line: 243, column: 41, scope: !10297)
!10312 = !DILocation(line: 0, scope: !10282, inlinedAt: !10313)
!10313 = distinct !DILocation(line: 245, column: 2, scope: !10297)
!10314 = !DILocation(line: 0, scope: !10290, inlinedAt: !10315)
!10315 = distinct !DILocation(line: 215, column: 2, scope: !10282, inlinedAt: !10313)
!10316 = !DILocation(line: 95, column: 2, scope: !10290, inlinedAt: !10315)
!10317 = !DILocation(line: 246, column: 13, scope: !10297)
!10318 = !DILocation(line: 246, column: 2, scope: !10297)
!10319 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1473, file: !1473, line: 249, type: !135, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10320)
!10320 = !{!10321, !10322}
!10321 = !DILocalVariable(name: "key", scope: !10319, file: !1473, line: 251, type: !10214)
!10322 = !DILocalVariable(name: "ret", scope: !10319, file: !1473, line: 252, type: !137)
!10323 = !DILocation(line: 0, scope: !10231, inlinedAt: !10324)
!10324 = distinct !DILocation(line: 251, column: 25, scope: !10319)
!10325 = !DILocation(line: 55, column: 2, scope: !10240, inlinedAt: !10326)
!10326 = distinct !DILocation(line: 145, column: 10, scope: !10231, inlinedAt: !10324)
!10327 = !DILocation(line: 0, scope: !10240, inlinedAt: !10326)
!10328 = !DILocation(line: 0, scope: !10319)
!10329 = !DILocation(line: 252, column: 17, scope: !10319)
!10330 = !DILocation(line: 252, column: 29, scope: !10319)
!10331 = !DILocation(line: 252, column: 27, scope: !10319)
!10332 = !DILocation(line: 0, scope: !10282, inlinedAt: !10333)
!10333 = distinct !DILocation(line: 254, column: 2, scope: !10319)
!10334 = !DILocation(line: 0, scope: !10290, inlinedAt: !10335)
!10335 = distinct !DILocation(line: 215, column: 2, scope: !10282, inlinedAt: !10333)
!10336 = !DILocation(line: 95, column: 2, scope: !10290, inlinedAt: !10335)
!10337 = !DILocation(line: 255, column: 2, scope: !10319)
!10338 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1473, file: !1473, line: 258, type: !2802, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !162)
!10339 = !DILocation(line: 260, column: 6, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10338, file: !1473, line: 260, column: 6)
!10341 = !DILocation(line: 260, column: 16, scope: !10340)
!10342 = !DILocation(line: 260, column: 6, scope: !10338)
!10343 = !DILocation(line: 261, column: 17, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10340, file: !1473, line: 260, column: 34)
!10345 = !DILocation(line: 262, column: 2, scope: !10344)
!10346 = !DILocation(line: 263, column: 1, scope: !10338)
!10347 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1473, file: !1473, line: 265, type: !2802, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !162)
!10348 = !DILocation(line: 267, column: 16, scope: !10347)
!10349 = !DILocation(line: 268, column: 1, scope: !10347)
!10350 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10351, file: !10351, line: 9, type: !10352, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !10375)
!10351 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10352 = !DISubroutineType(types: !10353)
!10353 = !{!103, !10354, !208, !10374}
!10354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10355, size: 32)
!10355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10356)
!10356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1344, line: 60, size: 64, elements: !10357)
!10357 = !{!10358, !10373}
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10356, file: !1344, line: 69, baseType: !10359, size: 32)
!10359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10360, size: 32)
!10360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10361)
!10361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1344, line: 50, size: 64, elements: !10362)
!10362 = !{!10363, !10371, !10372}
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10361, file: !1344, line: 52, baseType: !10364, size: 32)
!10364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10365, size: 32)
!10365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10366)
!10366 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1355, line: 37, baseType: !10367)
!10367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1355, line: 32, size: 64, elements: !10368)
!10368 = !{!10369, !10370}
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10367, file: !1355, line: 34, baseType: !137, size: 32)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10367, file: !1355, line: 36, baseType: !137, size: 32, offset: 32)
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10361, file: !1344, line: 54, baseType: !208, size: 8, offset: 32)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10361, file: !1344, line: 56, baseType: !208, size: 8, offset: 40)
!10373 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10356, file: !1344, line: 71, baseType: !208, size: 8, offset: 32)
!10374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10359, size: 32)
!10375 = !{!10376, !10377, !10378}
!10376 = !DILocalVariable(name: "config", arg: 1, scope: !10350, file: !10351, line: 9, type: !10354)
!10377 = !DILocalVariable(name: "id", arg: 2, scope: !10350, file: !10351, line: 9, type: !208)
!10378 = !DILocalVariable(name: "state", arg: 3, scope: !10350, file: !10351, line: 10, type: !10374)
!10379 = !DILocation(line: 0, scope: !10350)
!10380 = !DILocation(line: 12, column: 20, scope: !10350)
!10381 = !DILocation(line: 13, column: 27, scope: !10350)
!10382 = !DILocation(line: 13, column: 42, scope: !10350)
!10383 = !DILocation(line: 13, column: 19, scope: !10350)
!10384 = !DILocation(line: 13, column: 16, scope: !10350)
!10385 = !DILocation(line: 13, column: 2, scope: !10350)
!10386 = distinct !{!10386, !10385, !10387}
!10387 = !DILocation(line: 19, column: 2, scope: !10350)
!10388 = !DILocation(line: 14, column: 23, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10390, file: !10351, line: 14, column: 7)
!10390 = distinct !DILexicalBlock(scope: !10350, file: !10351, line: 13, column: 54)
!10391 = !DILocation(line: 14, column: 10, scope: !10389)
!10392 = !DILocation(line: 18, column: 11, scope: !10390)
!10393 = !DILocation(line: 14, column: 7, scope: !10390)
!10394 = !DILocation(line: 22, column: 1, scope: !10350)
!10395 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1590, file: !1590, line: 193, type: !10396, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1508, retainedNodes: !10405)
!10396 = !DISubroutineType(types: !10397)
!10397 = !{!103, !10398, !208, !22}
!10398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10399, size: 32)
!10399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10400)
!10400 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1355, line: 37, baseType: !10401)
!10401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1355, line: 32, size: 64, elements: !10402)
!10402 = !{!10403, !10404}
!10403 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10401, file: !1355, line: 34, baseType: !137, size: 32)
!10404 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10401, file: !1355, line: 36, baseType: !137, size: 32, offset: 32)
!10405 = !{!10406, !10407, !10408, !10409, !10410, !10411, !10412, !10413, !10415}
!10406 = !DILocalVariable(name: "pins", arg: 1, scope: !10395, file: !1590, line: 193, type: !10398)
!10407 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10395, file: !1590, line: 193, type: !208)
!10408 = !DILocalVariable(name: "reg", arg: 3, scope: !10395, file: !1590, line: 194, type: !22)
!10409 = !DILocalVariable(name: "pin", scope: !10395, file: !1590, line: 196, type: !137)
!10410 = !DILocalVariable(name: "mux", scope: !10395, file: !1590, line: 196, type: !137)
!10411 = !DILocalVariable(name: "pin_cgf", scope: !10395, file: !1590, line: 197, type: !137)
!10412 = !DILocalVariable(name: "ret", scope: !10395, file: !1590, line: 198, type: !103)
!10413 = !DILocalVariable(name: "i", scope: !10414, file: !1590, line: 209, type: !208)
!10414 = distinct !DILexicalBlock(scope: !10395, file: !1590, line: 209, column: 2)
!10415 = !DILocalVariable(name: "gpio_out", scope: !10416, file: !1590, line: 239, type: !137)
!10416 = distinct !DILexicalBlock(scope: !10417, file: !1590, line: 238, column: 55)
!10417 = distinct !DILexicalBlock(scope: !10418, file: !1590, line: 238, column: 14)
!10418 = distinct !DILexicalBlock(scope: !10419, file: !1590, line: 236, column: 14)
!10419 = distinct !DILexicalBlock(scope: !10420, file: !1590, line: 234, column: 7)
!10420 = distinct !DILexicalBlock(scope: !10421, file: !1590, line: 209, column: 41)
!10421 = distinct !DILexicalBlock(scope: !10414, file: !1590, line: 209, column: 2)
!10422 = !DILocation(line: 0, scope: !10395)
!10423 = !DILocation(line: 0, scope: !10414)
!10424 = !DILocation(line: 209, column: 25, scope: !10421)
!10425 = !DILocation(line: 209, column: 2, scope: !10414)
!10426 = distinct !{!10426, !10425, !10427}
!10427 = !DILocation(line: 259, column: 2, scope: !10414)
!10428 = !DILocation(line: 210, column: 17, scope: !10420)
!10429 = !DILocation(line: 234, column: 7, scope: !10419)
!10430 = !DILocation(line: 234, column: 33, scope: !10419)
!10431 = !DILocation(line: 234, column: 7, scope: !10420)
!10432 = !DILocation(line: 235, column: 22, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10419, file: !1590, line: 234, column: 49)
!10434 = !DILocation(line: 235, column: 29, scope: !10433)
!10435 = !DILocation(line: 236, column: 3, scope: !10433)
!10436 = !DILocation(line: 236, column: 14, scope: !10419)
!10437 = !DILocation(line: 239, column: 32, scope: !10416)
!10438 = !DILocation(line: 0, scope: !10416)
!10439 = !DILocation(line: 241, column: 8, scope: !10416)
!10440 = !DILocation(line: 246, column: 3, scope: !10416)
!10441 = !DILocation(line: 252, column: 9, scope: !10420)
!10442 = !DILocation(line: 255, column: 9, scope: !10420)
!10443 = !DILocation(line: 256, column: 11, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10420, file: !1590, line: 256, column: 7)
!10445 = !DILocation(line: 209, column: 37, scope: !10421)
!10446 = !DILocation(line: 256, column: 7, scope: !10420)
!10447 = !DILocation(line: 262, column: 1, scope: !10395)
!10448 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1590, file: !1590, line: 176, type: !10449, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1508, retainedNodes: !10451)
!10449 = !DISubroutineType(types: !10450)
!10450 = !{!103, !137, !137, !137}
!10451 = !{!10452, !10453, !10454, !10455}
!10452 = !DILocalVariable(name: "pin", arg: 1, scope: !10448, file: !1590, line: 176, type: !137)
!10453 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10448, file: !1590, line: 176, type: !137)
!10454 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10448, file: !1590, line: 176, type: !137)
!10455 = !DILocalVariable(name: "port_device", scope: !10448, file: !1590, line: 178, type: !1520)
!10456 = !DILocation(line: 0, scope: !10448)
!10457 = !DILocation(line: 180, column: 22, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10448, file: !1590, line: 180, column: 6)
!10459 = !DILocation(line: 180, column: 6, scope: !10448)
!10460 = !DILocation(line: 180, column: 6, scope: !10458)
!10461 = !DILocation(line: 184, column: 16, scope: !10448)
!10462 = !DILocation(line: 186, column: 19, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10448, file: !1590, line: 186, column: 6)
!10464 = !DILocation(line: 186, column: 28, scope: !10463)
!10465 = !DILocation(line: 186, column: 33, scope: !10463)
!10466 = !DILocation(line: 186, column: 6, scope: !10448)
!10467 = !DILocation(line: 190, column: 43, scope: !10448)
!10468 = !DILocation(line: 190, column: 9, scope: !10448)
!10469 = !DILocation(line: 190, column: 2, scope: !10448)
!10470 = !DILocation(line: 191, column: 1, scope: !10448)
!10471 = distinct !DISubprogram(name: "device_is_ready", scope: !8460, file: !8460, line: 47, type: !10472, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1508, retainedNodes: !10474)
!10472 = !DISubroutineType(types: !10473)
!10473 = !{!211, !1520}
!10474 = !{!10475}
!10475 = !DILocalVariable(name: "dev", arg: 1, scope: !10471, file: !8460, line: 47, type: !1520)
!10476 = !DILocation(line: 0, scope: !10471)
!10477 = !DILocation(line: 55, column: 2, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10471, file: !8460, line: 55, column: 2)
!10479 = !{i64 2149155005}
!10480 = !DILocation(line: 56, column: 9, scope: !10471)
!10481 = !DILocation(line: 56, column: 2, scope: !10471)
!10482 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10472, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1508, retainedNodes: !10483)
!10483 = !{!10484}
!10484 = !DILocalVariable(name: "dev", arg: 1, scope: !10482, file: !196, line: 730, type: !1520)
!10485 = !DILocation(line: 0, scope: !10482)
!10486 = !DILocation(line: 732, column: 9, scope: !10482)
!10487 = !DILocation(line: 732, column: 2, scope: !10482)
!10488 = distinct !DISubprogram(name: "SystemInit", scope: !1640, file: !1640, line: 167, type: !2802, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !162)
!10489 = !DILocation(line: 182, column: 1, scope: !10488)
!10490 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1640, file: !1640, line: 220, type: !2802, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10491)
!10491 = !{!10492, !10493, !10494, !10495, !10496}
!10492 = !DILocalVariable(name: "tmp", scope: !10490, file: !1640, line: 222, type: !137)
!10493 = !DILocalVariable(name: "pllvco", scope: !10490, file: !1640, line: 222, type: !137)
!10494 = !DILocalVariable(name: "pllp", scope: !10490, file: !1640, line: 222, type: !137)
!10495 = !DILocalVariable(name: "pllsource", scope: !10490, file: !1640, line: 222, type: !137)
!10496 = !DILocalVariable(name: "pllm", scope: !10490, file: !1640, line: 222, type: !137)
!10497 = !DILocation(line: 0, scope: !10490)
!10498 = !DILocation(line: 225, column: 14, scope: !10490)
!10499 = !DILocation(line: 225, column: 19, scope: !10490)
!10500 = !DILocation(line: 227, column: 3, scope: !10490)
!10501 = !DILocation(line: 234, column: 7, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10490, file: !1640, line: 228, column: 3)
!10503 = !DILocation(line: 240, column: 25, scope: !10502)
!10504 = !DILocation(line: 241, column: 19, scope: !10502)
!10505 = !DILocation(line: 241, column: 27, scope: !10502)
!10506 = !DILocation(line: 243, column: 21, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10502, file: !1640, line: 243, column: 11)
!10508 = !DILocation(line: 0, scope: !10507)
!10509 = !DILocation(line: 254, column: 22, scope: !10502)
!10510 = !DILocation(line: 254, column: 62, scope: !10502)
!10511 = !DILocation(line: 255, column: 31, scope: !10502)
!10512 = !DILocation(line: 256, column: 7, scope: !10502)
!10513 = !DILocation(line: 0, scope: !10502)
!10514 = !DILocation(line: 263, column: 30, scope: !10490)
!10515 = !DILocation(line: 263, column: 52, scope: !10490)
!10516 = !DILocation(line: 263, column: 9, scope: !10490)
!10517 = !DILocation(line: 265, column: 19, scope: !10490)
!10518 = !DILocation(line: 266, column: 1, scope: !10490)
!10519 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10520, file: !10520, line: 200, type: !10521, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!10520 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10521 = !DISubroutineType(types: !10522)
!10522 = !{!10523}
!10523 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2615, line: 44, baseType: !2614)
!10524 = !DILocation(line: 202, column: 3, scope: !10519)
!10525 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10520, file: !10520, line: 219, type: !10526, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !10550)
!10526 = !DISubroutineType(types: !10527)
!10527 = !{!10523, !10528}
!10528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10529, size: 32)
!10529 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10530, line: 70, baseType: !10531)
!10530 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10530, line: 49, size: 384, elements: !10532)
!10532 = !{!10533, !10534, !10535, !10536, !10537, !10538, !10539}
!10533 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10531, file: !10530, line: 51, baseType: !137, size: 32)
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10531, file: !10530, line: 54, baseType: !137, size: 32, offset: 32)
!10535 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10531, file: !10530, line: 57, baseType: !137, size: 32, offset: 64)
!10536 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10531, file: !10530, line: 60, baseType: !137, size: 32, offset: 96)
!10537 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10531, file: !10530, line: 63, baseType: !137, size: 32, offset: 128)
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10531, file: !10530, line: 66, baseType: !137, size: 32, offset: 160)
!10539 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10531, file: !10530, line: 69, baseType: !10540, size: 192, offset: 192)
!10540 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10541, line: 73, baseType: !10542)
!10541 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10542 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10541, line: 45, size: 192, elements: !10543)
!10543 = !{!10544, !10545, !10546, !10547, !10548, !10549}
!10544 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10542, file: !10541, line: 47, baseType: !137, size: 32)
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10542, file: !10541, line: 50, baseType: !137, size: 32, offset: 32)
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10542, file: !10541, line: 53, baseType: !137, size: 32, offset: 64)
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10542, file: !10541, line: 56, baseType: !137, size: 32, offset: 96)
!10548 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10542, file: !10541, line: 60, baseType: !137, size: 32, offset: 128)
!10549 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10542, file: !10541, line: 63, baseType: !137, size: 32, offset: 160)
!10550 = !{!10551, !10552, !10553, !10554, !10558}
!10551 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10525, file: !10520, line: 219, type: !10528)
!10552 = !DILocalVariable(name: "tickstart", scope: !10525, file: !10520, line: 221, type: !137)
!10553 = !DILocalVariable(name: "pll_config", scope: !10525, file: !10520, line: 221, type: !137)
!10554 = !DILocalVariable(name: "pwrclkchanged", scope: !10555, file: !10520, line: 391, type: !10557)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !10520, line: 390, column: 3)
!10556 = distinct !DILexicalBlock(scope: !10525, file: !10520, line: 389, column: 6)
!10557 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !677, line: 188, baseType: !2621)
!10558 = !DILocalVariable(name: "tmpreg", scope: !10559, file: !10520, line: 400, type: !176)
!10559 = distinct !DILexicalBlock(scope: !10560, file: !10520, line: 400, column: 7)
!10560 = distinct !DILexicalBlock(scope: !10561, file: !10520, line: 399, column: 5)
!10561 = distinct !DILexicalBlock(scope: !10555, file: !10520, line: 398, column: 8)
!10562 = !DILocation(line: 0, scope: !10525)
!10563 = !DILocation(line: 224, column: 24, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10525, file: !10520, line: 224, column: 6)
!10565 = !DILocation(line: 224, column: 6, scope: !10525)
!10566 = !DILocation(line: 232, column: 27, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10525, file: !10520, line: 232, column: 6)
!10568 = !DILocation(line: 232, column: 43, scope: !10567)
!10569 = !DILocation(line: 232, column: 69, scope: !10567)
!10570 = !DILocation(line: 232, column: 6, scope: !10525)
!10571 = !DILocation(line: 237, column: 9, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10573, file: !10520, line: 237, column: 8)
!10573 = distinct !DILexicalBlock(scope: !10567, file: !10520, line: 233, column: 3)
!10574 = !DILocation(line: 237, column: 39, scope: !10572)
!10575 = !DILocation(line: 237, column: 60, scope: !10572)
!10576 = !DILocation(line: 238, column: 9, scope: !10572)
!10577 = !DILocation(line: 238, column: 39, scope: !10572)
!10578 = !DILocation(line: 238, column: 60, scope: !10572)
!10579 = !DILocation(line: 238, column: 70, scope: !10572)
!10580 = !DILocation(line: 238, column: 78, scope: !10572)
!10581 = !DILocation(line: 238, column: 100, scope: !10572)
!10582 = !DILocation(line: 237, column: 8, scope: !10573)
!10583 = !DILocation(line: 240, column: 11, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10585, file: !10520, line: 240, column: 10)
!10585 = distinct !DILexicalBlock(scope: !10572, file: !10520, line: 239, column: 5)
!10586 = !DILocation(line: 240, column: 57, scope: !10584)
!10587 = !DILocation(line: 240, column: 80, scope: !10584)
!10588 = !DILocation(line: 240, column: 89, scope: !10584)
!10589 = !DILocation(line: 240, column: 10, scope: !10585)
!10590 = !DILocation(line: 248, column: 7, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10592, file: !10520, line: 248, column: 7)
!10592 = distinct !DILexicalBlock(scope: !10593, file: !10520, line: 248, column: 7)
!10593 = distinct !DILexicalBlock(scope: !10572, file: !10520, line: 246, column: 5)
!10594 = !DILocation(line: 248, column: 7, scope: !10592)
!10595 = !DILocation(line: 248, column: 7, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10591, file: !10520, line: 248, column: 7)
!10597 = !DILocation(line: 248, column: 7, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10599, file: !10520, line: 248, column: 7)
!10599 = distinct !DILexicalBlock(scope: !10591, file: !10520, line: 248, column: 7)
!10600 = !DILocation(line: 248, column: 7, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10599, file: !10520, line: 248, column: 7)
!10602 = !DILocation(line: 0, scope: !10591)
!10603 = !DILocation(line: 251, column: 30, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10593, file: !10520, line: 251, column: 10)
!10605 = !DILocation(line: 251, column: 40, scope: !10604)
!10606 = !DILocation(line: 0, scope: !10604)
!10607 = !DILocation(line: 251, column: 10, scope: !10593)
!10608 = !DILocation(line: 257, column: 15, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10604, file: !10520, line: 252, column: 7)
!10610 = !DILocation(line: 257, column: 51, scope: !10609)
!10611 = !DILocation(line: 257, column: 9, scope: !10609)
!10612 = !DILocation(line: 259, column: 15, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10614, file: !10520, line: 259, column: 14)
!10614 = distinct !DILexicalBlock(scope: !10609, file: !10520, line: 258, column: 9)
!10615 = !DILocation(line: 259, column: 29, scope: !10613)
!10616 = !DILocation(line: 259, column: 43, scope: !10613)
!10617 = !DILocation(line: 259, column: 14, scope: !10614)
!10618 = distinct !{!10618, !10611, !10619}
!10619 = !DILocation(line: 263, column: 9, scope: !10609)
!10620 = !DILocation(line: 271, column: 15, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10604, file: !10520, line: 266, column: 7)
!10622 = !DILocation(line: 271, column: 9, scope: !10621)
!10623 = !DILocation(line: 273, column: 15, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10625, file: !10520, line: 273, column: 14)
!10625 = distinct !DILexicalBlock(scope: !10621, file: !10520, line: 272, column: 9)
!10626 = !DILocation(line: 273, column: 29, scope: !10624)
!10627 = !DILocation(line: 273, column: 43, scope: !10624)
!10628 = !DILocation(line: 273, column: 14, scope: !10625)
!10629 = distinct !{!10629, !10622, !10630}
!10630 = !DILocation(line: 277, column: 9, scope: !10621)
!10631 = !DILocation(line: 282, column: 27, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10525, file: !10520, line: 282, column: 6)
!10633 = !DILocation(line: 282, column: 43, scope: !10632)
!10634 = !DILocation(line: 282, column: 69, scope: !10632)
!10635 = !DILocation(line: 282, column: 6, scope: !10525)
!10636 = !DILocation(line: 289, column: 9, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10638, file: !10520, line: 289, column: 8)
!10638 = distinct !DILexicalBlock(scope: !10632, file: !10520, line: 283, column: 3)
!10639 = !DILocation(line: 289, column: 39, scope: !10637)
!10640 = !DILocation(line: 289, column: 60, scope: !10637)
!10641 = !DILocation(line: 290, column: 9, scope: !10637)
!10642 = !DILocation(line: 290, column: 39, scope: !10637)
!10643 = !DILocation(line: 290, column: 60, scope: !10637)
!10644 = !DILocation(line: 290, column: 70, scope: !10637)
!10645 = !DILocation(line: 290, column: 78, scope: !10637)
!10646 = !DILocation(line: 290, column: 100, scope: !10637)
!10647 = !DILocation(line: 289, column: 8, scope: !10638)
!10648 = !DILocation(line: 293, column: 11, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10650, file: !10520, line: 293, column: 10)
!10650 = distinct !DILexicalBlock(scope: !10637, file: !10520, line: 291, column: 5)
!10651 = !DILocation(line: 293, column: 57, scope: !10649)
!10652 = !DILocation(line: 293, column: 80, scope: !10649)
!10653 = !DILocation(line: 293, column: 89, scope: !10649)
!10654 = !DILocation(line: 293, column: 10, scope: !10650)
!10655 = !DILocation(line: 307, column: 30, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10657, file: !10520, line: 307, column: 10)
!10657 = distinct !DILexicalBlock(scope: !10637, file: !10520, line: 305, column: 5)
!10658 = !DILocation(line: 307, column: 39, scope: !10656)
!10659 = !DILocation(line: 307, column: 10, scope: !10657)
!10660 = !DILocation(line: 310, column: 9, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10656, file: !10520, line: 308, column: 7)
!10662 = !DILocation(line: 313, column: 21, scope: !10661)
!10663 = !DILocation(line: 316, column: 9, scope: !10661)
!10664 = !DILocation(line: 316, column: 15, scope: !10661)
!10665 = !DILocation(line: 316, column: 51, scope: !10661)
!10666 = !DILocation(line: 318, column: 15, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10668, file: !10520, line: 318, column: 14)
!10668 = distinct !DILexicalBlock(scope: !10661, file: !10520, line: 317, column: 9)
!10669 = !DILocation(line: 318, column: 29, scope: !10667)
!10670 = !DILocation(line: 318, column: 43, scope: !10667)
!10671 = !DILocation(line: 318, column: 14, scope: !10668)
!10672 = distinct !{!10672, !10663, !10673}
!10673 = !DILocation(line: 322, column: 9, scope: !10661)
!10674 = !DILocation(line: 330, column: 9, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10656, file: !10520, line: 328, column: 7)
!10676 = !DILocation(line: 333, column: 21, scope: !10675)
!10677 = !DILocation(line: 336, column: 9, scope: !10675)
!10678 = !DILocation(line: 336, column: 15, scope: !10675)
!10679 = !DILocation(line: 338, column: 15, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10681, file: !10520, line: 338, column: 14)
!10681 = distinct !DILexicalBlock(scope: !10675, file: !10520, line: 337, column: 9)
!10682 = !DILocation(line: 338, column: 29, scope: !10680)
!10683 = !DILocation(line: 338, column: 43, scope: !10680)
!10684 = !DILocation(line: 338, column: 14, scope: !10681)
!10685 = distinct !{!10685, !10677, !10686}
!10686 = !DILocation(line: 342, column: 9, scope: !10675)
!10687 = !DILocation(line: 0, scope: !10637)
!10688 = !DILocation(line: 347, column: 27, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10525, file: !10520, line: 347, column: 6)
!10690 = !DILocation(line: 347, column: 43, scope: !10689)
!10691 = !DILocation(line: 347, column: 69, scope: !10689)
!10692 = !DILocation(line: 347, column: 6, scope: !10525)
!10693 = !DILocation(line: 353, column: 28, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10695, file: !10520, line: 353, column: 8)
!10695 = distinct !DILexicalBlock(scope: !10689, file: !10520, line: 348, column: 3)
!10696 = !DILocation(line: 353, column: 37, scope: !10694)
!10697 = !DILocation(line: 353, column: 8, scope: !10695)
!10698 = !DILocation(line: 356, column: 7, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10694, file: !10520, line: 354, column: 5)
!10700 = !DILocation(line: 359, column: 19, scope: !10699)
!10701 = !DILocation(line: 362, column: 7, scope: !10699)
!10702 = !DILocation(line: 362, column: 13, scope: !10699)
!10703 = !DILocation(line: 362, column: 49, scope: !10699)
!10704 = !DILocation(line: 364, column: 13, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10706, file: !10520, line: 364, column: 12)
!10706 = distinct !DILexicalBlock(scope: !10699, file: !10520, line: 363, column: 7)
!10707 = !DILocation(line: 364, column: 27, scope: !10705)
!10708 = !DILocation(line: 364, column: 41, scope: !10705)
!10709 = !DILocation(line: 364, column: 12, scope: !10706)
!10710 = distinct !{!10710, !10701, !10711}
!10711 = !DILocation(line: 368, column: 7, scope: !10699)
!10712 = !DILocation(line: 373, column: 7, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10694, file: !10520, line: 371, column: 5)
!10714 = !DILocation(line: 376, column: 19, scope: !10713)
!10715 = !DILocation(line: 379, column: 7, scope: !10713)
!10716 = !DILocation(line: 379, column: 13, scope: !10713)
!10717 = !DILocation(line: 381, column: 13, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10719, file: !10520, line: 381, column: 12)
!10719 = distinct !DILexicalBlock(scope: !10713, file: !10520, line: 380, column: 7)
!10720 = !DILocation(line: 381, column: 27, scope: !10718)
!10721 = !DILocation(line: 381, column: 41, scope: !10718)
!10722 = !DILocation(line: 381, column: 12, scope: !10719)
!10723 = distinct !{!10723, !10715, !10724}
!10724 = !DILocation(line: 385, column: 7, scope: !10713)
!10725 = !DILocation(line: 389, column: 27, scope: !10556)
!10726 = !DILocation(line: 389, column: 43, scope: !10556)
!10727 = !DILocation(line: 389, column: 69, scope: !10556)
!10728 = !DILocation(line: 389, column: 6, scope: !10525)
!10729 = !DILocation(line: 0, scope: !10555)
!10730 = !DILocation(line: 398, column: 8, scope: !10561)
!10731 = !DILocation(line: 398, column: 8, scope: !10555)
!10732 = !DILocation(line: 400, column: 7, scope: !10559)
!10733 = !DILocation(line: 400, column: 7, scope: !10560)
!10734 = !DILocation(line: 402, column: 5, scope: !10560)
!10735 = !DILocation(line: 404, column: 8, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10555, file: !10520, line: 404, column: 8)
!10737 = !DILocation(line: 404, column: 8, scope: !10555)
!10738 = !DILocation(line: 407, column: 7, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10736, file: !10520, line: 405, column: 5)
!10740 = !DILocation(line: 410, column: 19, scope: !10739)
!10741 = !DILocation(line: 412, column: 7, scope: !10739)
!10742 = !DILocation(line: 412, column: 13, scope: !10739)
!10743 = !DILocation(line: 414, column: 13, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10745, file: !10520, line: 414, column: 12)
!10745 = distinct !DILexicalBlock(scope: !10739, file: !10520, line: 413, column: 7)
!10746 = !DILocation(line: 414, column: 27, scope: !10744)
!10747 = !DILocation(line: 414, column: 40, scope: !10744)
!10748 = !DILocation(line: 414, column: 12, scope: !10745)
!10749 = distinct !{!10749, !10741, !10750}
!10750 = !DILocation(line: 418, column: 7, scope: !10739)
!10751 = !DILocation(line: 422, column: 5, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10753, file: !10520, line: 422, column: 5)
!10753 = distinct !DILexicalBlock(scope: !10555, file: !10520, line: 422, column: 5)
!10754 = !DILocation(line: 422, column: 5, scope: !10753)
!10755 = !DILocation(line: 422, column: 5, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10752, file: !10520, line: 422, column: 5)
!10757 = !DILocation(line: 422, column: 5, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10759, file: !10520, line: 422, column: 5)
!10759 = distinct !DILexicalBlock(scope: !10752, file: !10520, line: 422, column: 5)
!10760 = !DILocation(line: 422, column: 5, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10759, file: !10520, line: 422, column: 5)
!10762 = !DILocation(line: 0, scope: !10752)
!10763 = !DILocation(line: 424, column: 28, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10555, file: !10520, line: 424, column: 8)
!10765 = !DILocation(line: 424, column: 38, scope: !10764)
!10766 = !DILocation(line: 0, scope: !10764)
!10767 = !DILocation(line: 424, column: 8, scope: !10555)
!10768 = !DILocation(line: 430, column: 13, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10764, file: !10520, line: 425, column: 5)
!10770 = !DILocation(line: 430, column: 49, scope: !10769)
!10771 = !DILocation(line: 430, column: 7, scope: !10769)
!10772 = !DILocation(line: 432, column: 13, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10774, file: !10520, line: 432, column: 12)
!10774 = distinct !DILexicalBlock(scope: !10769, file: !10520, line: 431, column: 7)
!10775 = !DILocation(line: 432, column: 27, scope: !10773)
!10776 = !DILocation(line: 432, column: 41, scope: !10773)
!10777 = !DILocation(line: 432, column: 12, scope: !10774)
!10778 = distinct !{!10778, !10771, !10779}
!10779 = !DILocation(line: 436, column: 7, scope: !10769)
!10780 = !DILocation(line: 444, column: 13, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10764, file: !10520, line: 439, column: 5)
!10782 = !DILocation(line: 444, column: 7, scope: !10781)
!10783 = !DILocation(line: 446, column: 13, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10785, file: !10520, line: 446, column: 12)
!10785 = distinct !DILexicalBlock(scope: !10781, file: !10520, line: 445, column: 7)
!10786 = !DILocation(line: 446, column: 27, scope: !10784)
!10787 = !DILocation(line: 446, column: 41, scope: !10784)
!10788 = !DILocation(line: 446, column: 12, scope: !10785)
!10789 = distinct !{!10789, !10782, !10790}
!10790 = !DILocation(line: 450, column: 7, scope: !10781)
!10791 = !DILocation(line: 454, column: 8, scope: !10555)
!10792 = !DILocation(line: 456, column: 7, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10794, file: !10520, line: 455, column: 5)
!10794 = distinct !DILexicalBlock(scope: !10555, file: !10520, line: 454, column: 8)
!10795 = !DILocation(line: 457, column: 5, scope: !10793)
!10796 = !DILocation(line: 462, column: 31, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10525, file: !10520, line: 462, column: 7)
!10798 = !DILocation(line: 462, column: 41, scope: !10797)
!10799 = !DILocation(line: 462, column: 7, scope: !10525)
!10800 = !DILocation(line: 465, column: 8, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10802, file: !10520, line: 465, column: 8)
!10802 = distinct !DILexicalBlock(scope: !10797, file: !10520, line: 463, column: 3)
!10803 = !DILocation(line: 465, column: 38, scope: !10801)
!10804 = !DILocation(line: 465, column: 8, scope: !10802)
!10805 = !DILocation(line: 467, column: 44, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10807, file: !10520, line: 467, column: 10)
!10807 = distinct !DILexicalBlock(scope: !10801, file: !10520, line: 466, column: 5)
!10808 = !DILocation(line: 0, scope: !10806)
!10809 = !DILocation(line: 467, column: 10, scope: !10807)
!10810 = !DILocation(line: 483, column: 15, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10806, file: !10520, line: 468, column: 7)
!10812 = !DILocation(line: 483, column: 9, scope: !10811)
!10813 = !DILocation(line: 485, column: 15, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !10520, line: 485, column: 14)
!10815 = distinct !DILexicalBlock(scope: !10811, file: !10520, line: 484, column: 9)
!10816 = !DILocation(line: 485, column: 29, scope: !10814)
!10817 = !DILocation(line: 485, column: 43, scope: !10814)
!10818 = !DILocation(line: 485, column: 14, scope: !10815)
!10819 = distinct !{!10819, !10812, !10820}
!10820 = !DILocation(line: 489, column: 9, scope: !10811)
!10821 = !DILocation(line: 492, column: 9, scope: !10811)
!10822 = !DILocation(line: 498, column: 9, scope: !10811)
!10823 = !DILocation(line: 501, column: 21, scope: !10811)
!10824 = !DILocation(line: 504, column: 9, scope: !10811)
!10825 = !DILocation(line: 504, column: 15, scope: !10811)
!10826 = !DILocation(line: 504, column: 51, scope: !10811)
!10827 = !DILocation(line: 506, column: 15, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !10520, line: 506, column: 14)
!10829 = distinct !DILexicalBlock(scope: !10811, file: !10520, line: 505, column: 9)
!10830 = !DILocation(line: 506, column: 29, scope: !10828)
!10831 = !DILocation(line: 506, column: 43, scope: !10828)
!10832 = !DILocation(line: 506, column: 14, scope: !10829)
!10833 = distinct !{!10833, !10824, !10834}
!10834 = !DILocation(line: 510, column: 9, scope: !10811)
!10835 = !DILocation(line: 521, column: 15, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10806, file: !10520, line: 513, column: 7)
!10837 = !DILocation(line: 521, column: 9, scope: !10836)
!10838 = !DILocation(line: 523, column: 15, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10840, file: !10520, line: 523, column: 14)
!10840 = distinct !DILexicalBlock(scope: !10836, file: !10520, line: 522, column: 9)
!10841 = !DILocation(line: 523, column: 29, scope: !10839)
!10842 = !DILocation(line: 523, column: 43, scope: !10839)
!10843 = !DILocation(line: 523, column: 14, scope: !10840)
!10844 = distinct !{!10844, !10837, !10845}
!10845 = !DILocation(line: 527, column: 9, scope: !10836)
!10846 = !DILocation(line: 533, column: 44, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10848, file: !10520, line: 533, column: 10)
!10848 = distinct !DILexicalBlock(scope: !10801, file: !10520, line: 531, column: 5)
!10849 = !DILocation(line: 533, column: 10, scope: !10848)
!10850 = !DILocation(line: 540, column: 27, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10847, file: !10520, line: 538, column: 7)
!10852 = !DILocation(line: 551, column: 14, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10851, file: !10520, line: 550, column: 13)
!10854 = !DILocation(line: 551, column: 81, scope: !10853)
!10855 = !DILocation(line: 551, column: 55, scope: !10853)
!10856 = !DILocation(line: 551, column: 92, scope: !10853)
!10857 = !DILocation(line: 552, column: 14, scope: !10853)
!10858 = !DILocation(line: 552, column: 80, scope: !10853)
!10859 = !DILocation(line: 552, column: 53, scope: !10853)
!10860 = !DILocation(line: 552, column: 111, scope: !10853)
!10861 = !DILocation(line: 553, column: 14, scope: !10853)
!10862 = !DILocation(line: 553, column: 80, scope: !10853)
!10863 = !DILocation(line: 553, column: 86, scope: !10853)
!10864 = !DILocation(line: 553, column: 53, scope: !10853)
!10865 = !DILocation(line: 553, column: 111, scope: !10853)
!10866 = !DILocation(line: 554, column: 14, scope: !10853)
!10867 = !DILocation(line: 554, column: 82, scope: !10853)
!10868 = !DILocation(line: 554, column: 101, scope: !10853)
!10869 = !DILocation(line: 554, column: 53, scope: !10853)
!10870 = !DILocation(line: 554, column: 126, scope: !10853)
!10871 = !DILocation(line: 555, column: 14, scope: !10853)
!10872 = !DILocation(line: 555, column: 80, scope: !10853)
!10873 = !DILocation(line: 555, column: 85, scope: !10853)
!10874 = !DILocation(line: 555, column: 53, scope: !10853)
!10875 = !DILocation(line: 550, column: 13, scope: !10851)
!10876 = !DILocation(line: 563, column: 3, scope: !10525)
!10877 = !DILocation(line: 564, column: 1, scope: !10525)
!10878 = !DISubprogram(name: "HAL_GetTick", scope: !10879, file: !10879, line: 234, type: !135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10879 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10880 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10520, file: !10520, line: 591, type: !10881, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !10892)
!10881 = !DISubroutineType(types: !10882)
!10882 = !{!10523, !10883, !137}
!10883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10884, size: 32)
!10884 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10530, line: 92, baseType: !10885)
!10885 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10530, line: 75, size: 160, elements: !10886)
!10886 = !{!10887, !10888, !10889, !10890, !10891}
!10887 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !10885, file: !10530, line: 77, baseType: !137, size: 32)
!10888 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !10885, file: !10530, line: 80, baseType: !137, size: 32, offset: 32)
!10889 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10885, file: !10530, line: 83, baseType: !137, size: 32, offset: 64)
!10890 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10885, file: !10530, line: 86, baseType: !137, size: 32, offset: 96)
!10891 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10885, file: !10530, line: 89, baseType: !137, size: 32, offset: 128)
!10892 = !{!10893, !10894, !10895}
!10893 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10880, file: !10520, line: 591, type: !10883)
!10894 = !DILocalVariable(name: "FLatency", arg: 2, scope: !10880, file: !10520, line: 591, type: !137)
!10895 = !DILocalVariable(name: "tickstart", scope: !10880, file: !10520, line: 593, type: !137)
!10896 = !DILocation(line: 0, scope: !10880)
!10897 = !DILocation(line: 596, column: 24, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10880, file: !10520, line: 596, column: 6)
!10899 = !DILocation(line: 596, column: 6, scope: !10880)
!10900 = !DILocation(line: 610, column: 17, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10880, file: !10520, line: 610, column: 6)
!10902 = !DILocation(line: 610, column: 15, scope: !10901)
!10903 = !DILocation(line: 610, column: 6, scope: !10880)
!10904 = !DILocation(line: 613, column: 5, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10901, file: !10520, line: 611, column: 3)
!10906 = !DILocation(line: 617, column: 8, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10905, file: !10520, line: 617, column: 8)
!10908 = !DILocation(line: 617, column: 34, scope: !10907)
!10909 = !DILocation(line: 617, column: 8, scope: !10905)
!10910 = !DILocation(line: 624, column: 27, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10880, file: !10520, line: 624, column: 6)
!10912 = !DILocation(line: 624, column: 38, scope: !10911)
!10913 = !DILocation(line: 624, column: 60, scope: !10911)
!10914 = !DILocation(line: 624, column: 6, scope: !10880)
!10915 = !DILocation(line: 628, column: 40, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10917, file: !10520, line: 628, column: 8)
!10917 = distinct !DILexicalBlock(scope: !10911, file: !10520, line: 625, column: 3)
!10918 = !DILocation(line: 628, column: 63, scope: !10916)
!10919 = !DILocation(line: 628, column: 8, scope: !10917)
!10920 = !DILocation(line: 630, column: 7, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10916, file: !10520, line: 629, column: 5)
!10922 = !DILocation(line: 633, column: 29, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10917, file: !10520, line: 633, column: 8)
!10924 = !DILocation(line: 631, column: 5, scope: !10921)
!10925 = !DILocation(line: 633, column: 40, scope: !10923)
!10926 = !DILocation(line: 633, column: 63, scope: !10923)
!10927 = !DILocation(line: 633, column: 8, scope: !10917)
!10928 = !DILocation(line: 635, column: 7, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10923, file: !10520, line: 634, column: 5)
!10930 = !DILocation(line: 636, column: 5, scope: !10929)
!10931 = !DILocation(line: 639, column: 5, scope: !10917)
!10932 = !DILocation(line: 643, column: 27, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10880, file: !10520, line: 643, column: 6)
!10934 = !DILocation(line: 640, column: 3, scope: !10917)
!10935 = !DILocation(line: 643, column: 38, scope: !10933)
!10936 = !DILocation(line: 643, column: 62, scope: !10933)
!10937 = !DILocation(line: 643, column: 6, scope: !10880)
!10938 = !DILocation(line: 648, column: 27, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !10520, line: 648, column: 8)
!10940 = distinct !DILexicalBlock(scope: !10933, file: !10520, line: 644, column: 3)
!10941 = !DILocation(line: 648, column: 8, scope: !10940)
!10942 = !DILocation(line: 651, column: 10, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !10520, line: 651, column: 10)
!10944 = distinct !DILexicalBlock(scope: !10939, file: !10520, line: 649, column: 5)
!10945 = !DILocation(line: 651, column: 46, scope: !10943)
!10946 = !DILocation(line: 651, column: 10, scope: !10944)
!10947 = !DILocation(line: 661, column: 10, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10949, file: !10520, line: 661, column: 10)
!10949 = distinct !DILexicalBlock(scope: !10950, file: !10520, line: 659, column: 5)
!10950 = distinct !DILexicalBlock(scope: !10939, file: !10520, line: 657, column: 13)
!10951 = !DILocation(line: 661, column: 46, scope: !10948)
!10952 = !DILocation(line: 661, column: 10, scope: !10949)
!10953 = !DILocation(line: 670, column: 10, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10955, file: !10520, line: 670, column: 10)
!10955 = distinct !DILexicalBlock(scope: !10950, file: !10520, line: 668, column: 5)
!10956 = !DILocation(line: 670, column: 46, scope: !10954)
!10957 = !DILocation(line: 670, column: 10, scope: !10955)
!10958 = !DILocation(line: 676, column: 5, scope: !10940)
!10959 = !DILocation(line: 679, column: 17, scope: !10940)
!10960 = !DILocation(line: 681, column: 5, scope: !10940)
!10961 = !DILocation(line: 681, column: 12, scope: !10940)
!10962 = !DILocation(line: 681, column: 65, scope: !10940)
!10963 = !DILocation(line: 681, column: 78, scope: !10940)
!10964 = !DILocation(line: 681, column: 42, scope: !10940)
!10965 = !DILocation(line: 683, column: 12, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !10520, line: 683, column: 11)
!10967 = distinct !DILexicalBlock(scope: !10940, file: !10520, line: 682, column: 5)
!10968 = !DILocation(line: 683, column: 26, scope: !10966)
!10969 = !DILocation(line: 683, column: 39, scope: !10966)
!10970 = !DILocation(line: 683, column: 11, scope: !10967)
!10971 = distinct !{!10971, !10960, !10972}
!10972 = !DILocation(line: 687, column: 5, scope: !10940)
!10973 = !DILocation(line: 691, column: 17, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10880, file: !10520, line: 691, column: 6)
!10975 = !DILocation(line: 691, column: 15, scope: !10974)
!10976 = !DILocation(line: 691, column: 6, scope: !10880)
!10977 = !DILocation(line: 694, column: 5, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10974, file: !10520, line: 692, column: 3)
!10979 = !DILocation(line: 698, column: 8, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10978, file: !10520, line: 698, column: 8)
!10981 = !DILocation(line: 698, column: 34, scope: !10980)
!10982 = !DILocation(line: 698, column: 8, scope: !10978)
!10983 = !DILocation(line: 705, column: 27, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10880, file: !10520, line: 705, column: 6)
!10985 = !DILocation(line: 705, column: 38, scope: !10984)
!10986 = !DILocation(line: 705, column: 61, scope: !10984)
!10987 = !DILocation(line: 705, column: 6, scope: !10880)
!10988 = !DILocation(line: 708, column: 5, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10984, file: !10520, line: 706, column: 3)
!10990 = !DILocation(line: 712, column: 27, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10880, file: !10520, line: 712, column: 6)
!10992 = !DILocation(line: 709, column: 3, scope: !10989)
!10993 = !DILocation(line: 712, column: 38, scope: !10991)
!10994 = !DILocation(line: 712, column: 61, scope: !10991)
!10995 = !DILocation(line: 712, column: 6, scope: !10880)
!10996 = !DILocation(line: 715, column: 5, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10991, file: !10520, line: 713, column: 3)
!10998 = !DILocation(line: 716, column: 3, scope: !10997)
!10999 = !DILocation(line: 719, column: 21, scope: !10880)
!11000 = !DILocation(line: 719, column: 70, scope: !10880)
!11001 = !DILocation(line: 719, column: 91, scope: !10880)
!11002 = !DILocation(line: 719, column: 50, scope: !10880)
!11003 = !DILocation(line: 719, column: 47, scope: !10880)
!11004 = !DILocation(line: 719, column: 19, scope: !10880)
!11005 = !DILocation(line: 722, column: 17, scope: !10880)
!11006 = !DILocation(line: 722, column: 3, scope: !10880)
!11007 = !DILocation(line: 724, column: 3, scope: !10880)
!11008 = !DILocation(line: 725, column: 1, scope: !10880)
!11009 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10520, file: !10520, line: 885, type: !135, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !11010)
!11010 = !{!11011, !11012, !11013, !11014}
!11011 = !DILocalVariable(name: "pllm", scope: !11009, file: !10520, line: 887, type: !137)
!11012 = !DILocalVariable(name: "pllvco", scope: !11009, file: !10520, line: 887, type: !137)
!11013 = !DILocalVariable(name: "pllp", scope: !11009, file: !10520, line: 887, type: !137)
!11014 = !DILocalVariable(name: "sysclockfreq", scope: !11009, file: !10520, line: 888, type: !137)
!11015 = !DILocation(line: 0, scope: !11009)
!11016 = !DILocation(line: 891, column: 16, scope: !11009)
!11017 = !DILocation(line: 891, column: 21, scope: !11009)
!11018 = !DILocation(line: 891, column: 3, scope: !11009)
!11019 = !DILocation(line: 901, column: 7, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11021, file: !10520, line: 899, column: 5)
!11021 = distinct !DILexicalBlock(scope: !11009, file: !10520, line: 892, column: 3)
!11022 = !DILocation(line: 907, column: 19, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11021, file: !10520, line: 904, column: 5)
!11024 = !DILocation(line: 907, column: 27, scope: !11023)
!11025 = !DILocation(line: 908, column: 10, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11023, file: !10520, line: 908, column: 10)
!11027 = !DILocation(line: 908, column: 40, scope: !11026)
!11028 = !DILocation(line: 0, scope: !11026)
!11029 = !DILocation(line: 908, column: 10, scope: !11023)
!11030 = !DILocation(line: 911, column: 53, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11026, file: !10520, line: 909, column: 7)
!11032 = !DILocation(line: 911, column: 130, scope: !11031)
!11033 = !DILocation(line: 912, column: 7, scope: !11031)
!11034 = !DILocation(line: 916, column: 56, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11026, file: !10520, line: 914, column: 7)
!11036 = !DILocation(line: 916, column: 53, scope: !11035)
!11037 = !DILocation(line: 916, column: 132, scope: !11035)
!11038 = !DILocation(line: 916, column: 130, scope: !11035)
!11039 = !DILocation(line: 916, column: 18, scope: !11035)
!11040 = !DILocation(line: 918, column: 23, scope: !11023)
!11041 = !DILocation(line: 918, column: 82, scope: !11023)
!11042 = !DILocation(line: 920, column: 28, scope: !11023)
!11043 = !DILocation(line: 921, column: 7, scope: !11023)
!11044 = !DILocation(line: 0, scope: !11021)
!11045 = !DILocation(line: 929, column: 3, scope: !11009)
!11046 = !DISubprogram(name: "HAL_InitTick", scope: !10879, file: !10879, line: 223, type: !11047, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11047 = !DISubroutineType(types: !11048)
!11048 = !{!10523, !137}
!11049 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10520, file: !10520, line: 775, type: !11050, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !11052)
!11050 = !DISubroutineType(types: !11051)
!11051 = !{null, !137, !137, !137}
!11052 = !{!11053, !11054, !11055, !11056, !11066, !11070}
!11053 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11049, file: !10520, line: 775, type: !137)
!11054 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11049, file: !10520, line: 775, type: !137)
!11055 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11049, file: !10520, line: 775, type: !137)
!11056 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11049, file: !10520, line: 777, type: !11057)
!11057 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11058, line: 62, baseType: !11059)
!11058 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11058, line: 46, size: 160, elements: !11060)
!11060 = !{!11061, !11062, !11063, !11064, !11065}
!11061 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11059, file: !11058, line: 48, baseType: !137, size: 32)
!11062 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11059, file: !11058, line: 51, baseType: !137, size: 32, offset: 32)
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11059, file: !11058, line: 54, baseType: !137, size: 32, offset: 64)
!11064 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11059, file: !11058, line: 57, baseType: !137, size: 32, offset: 96)
!11065 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11059, file: !11058, line: 60, baseType: !137, size: 32, offset: 128)
!11066 = !DILocalVariable(name: "tmpreg", scope: !11067, file: !10520, line: 787, type: !176)
!11067 = distinct !DILexicalBlock(scope: !11068, file: !10520, line: 787, column: 5)
!11068 = distinct !DILexicalBlock(scope: !11069, file: !10520, line: 783, column: 3)
!11069 = distinct !DILexicalBlock(scope: !11049, file: !10520, line: 782, column: 6)
!11070 = !DILocalVariable(name: "tmpreg", scope: !11071, file: !10520, line: 811, type: !176)
!11071 = distinct !DILexicalBlock(scope: !11072, file: !10520, line: 811, column: 5)
!11072 = distinct !DILexicalBlock(scope: !11069, file: !10520, line: 807, column: 3)
!11073 = !DILocation(line: 0, scope: !11049)
!11074 = !DILocation(line: 777, column: 3, scope: !11049)
!11075 = !DILocation(line: 777, column: 20, scope: !11049)
!11076 = !DILocation(line: 782, column: 15, scope: !11069)
!11077 = !DILocation(line: 782, column: 6, scope: !11049)
!11078 = !DILocation(line: 787, column: 5, scope: !11067)
!11079 = !DILocation(line: 787, column: 5, scope: !11068)
!11080 = !DILocation(line: 790, column: 21, scope: !11068)
!11081 = !DILocation(line: 790, column: 25, scope: !11068)
!11082 = !DILocation(line: 791, column: 21, scope: !11068)
!11083 = !DILocation(line: 791, column: 26, scope: !11068)
!11084 = !DILocation(line: 792, column: 21, scope: !11068)
!11085 = !DILocation(line: 792, column: 27, scope: !11068)
!11086 = !DILocation(line: 793, column: 21, scope: !11068)
!11087 = !DILocation(line: 793, column: 26, scope: !11068)
!11088 = !DILocation(line: 794, column: 21, scope: !11068)
!11089 = !DILocation(line: 794, column: 31, scope: !11068)
!11090 = !DILocation(line: 795, column: 5, scope: !11068)
!11091 = !DILocation(line: 798, column: 5, scope: !11068)
!11092 = !DILocation(line: 804, column: 3, scope: !11068)
!11093 = !DILocation(line: 811, column: 5, scope: !11071)
!11094 = !DILocation(line: 811, column: 5, scope: !11072)
!11095 = !DILocation(line: 814, column: 21, scope: !11072)
!11096 = !DILocation(line: 814, column: 25, scope: !11072)
!11097 = !DILocation(line: 815, column: 21, scope: !11072)
!11098 = !DILocation(line: 815, column: 26, scope: !11072)
!11099 = !DILocation(line: 816, column: 21, scope: !11072)
!11100 = !DILocation(line: 816, column: 27, scope: !11072)
!11101 = !DILocation(line: 817, column: 21, scope: !11072)
!11102 = !DILocation(line: 817, column: 26, scope: !11072)
!11103 = !DILocation(line: 818, column: 21, scope: !11072)
!11104 = !DILocation(line: 818, column: 31, scope: !11072)
!11105 = !DILocation(line: 819, column: 5, scope: !11072)
!11106 = !DILocation(line: 822, column: 5, scope: !11072)
!11107 = !DILocation(line: 0, scope: !11069)
!11108 = !DILocation(line: 830, column: 1, scope: !11049)
!11109 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11058, file: !11058, line: 224, type: !11110, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11110 = !DISubroutineType(types: !11111)
!11111 = !{null, !2684, !11112}
!11112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11057, size: 32)
!11113 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10520, file: !10520, line: 841, type: !2802, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!11114 = !DILocation(line: 843, column: 38, scope: !11113)
!11115 = !DILocation(line: 844, column: 1, scope: !11113)
!11116 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10520, file: !10520, line: 850, type: !2802, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!11117 = !DILocation(line: 852, column: 38, scope: !11116)
!11118 = !DILocation(line: 853, column: 1, scope: !11116)
!11119 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10520, file: !10520, line: 941, type: !135, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!11120 = !DILocation(line: 943, column: 10, scope: !11119)
!11121 = !DILocation(line: 943, column: 3, scope: !11119)
!11122 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10520, file: !10520, line: 952, type: !135, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!11123 = !DILocation(line: 955, column: 11, scope: !11122)
!11124 = !DILocation(line: 955, column: 56, scope: !11122)
!11125 = !DILocation(line: 955, column: 78, scope: !11122)
!11126 = !DILocation(line: 955, column: 36, scope: !11122)
!11127 = !DILocation(line: 955, column: 33, scope: !11122)
!11128 = !DILocation(line: 955, column: 3, scope: !11122)
!11129 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10520, file: !10520, line: 964, type: !135, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!11130 = !DILocation(line: 967, column: 11, scope: !11129)
!11131 = !DILocation(line: 967, column: 55, scope: !11129)
!11132 = !DILocation(line: 967, column: 77, scope: !11129)
!11133 = !DILocation(line: 967, column: 35, scope: !11129)
!11134 = !DILocation(line: 967, column: 32, scope: !11129)
!11135 = !DILocation(line: 967, column: 3, scope: !11129)
!11136 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10520, file: !10520, line: 977, type: !11137, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !11139)
!11137 = !DISubroutineType(types: !11138)
!11138 = !{null, !10528}
!11139 = !{!11140}
!11140 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11136, file: !10520, line: 977, type: !10528)
!11141 = !DILocation(line: 0, scope: !11136)
!11142 = !DILocation(line: 980, column: 22, scope: !11136)
!11143 = !DILocation(line: 980, column: 37, scope: !11136)
!11144 = !DILocation(line: 983, column: 12, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11136, file: !10520, line: 983, column: 6)
!11146 = !DILocation(line: 983, column: 15, scope: !11145)
!11147 = !DILocation(line: 983, column: 31, scope: !11145)
!11148 = !DILocation(line: 983, column: 6, scope: !11136)
!11149 = !DILocation(line: 985, column: 24, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11145, file: !10520, line: 984, column: 3)
!11151 = !DILocation(line: 985, column: 33, scope: !11150)
!11152 = !DILocation(line: 986, column: 3, scope: !11150)
!11153 = !DILocation(line: 987, column: 17, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11145, file: !10520, line: 987, column: 11)
!11155 = !DILocation(line: 987, column: 20, scope: !11154)
!11156 = !DILocation(line: 987, column: 35, scope: !11154)
!11157 = !DILocation(line: 0, scope: !11154)
!11158 = !DILocation(line: 987, column: 11, scope: !11145)
!11159 = !DILocation(line: 989, column: 33, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11154, file: !10520, line: 988, column: 3)
!11161 = !DILocation(line: 990, column: 3, scope: !11160)
!11162 = !DILocation(line: 993, column: 33, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11154, file: !10520, line: 992, column: 3)
!11164 = !DILocation(line: 997, column: 12, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11136, file: !10520, line: 997, column: 6)
!11166 = !DILocation(line: 997, column: 15, scope: !11165)
!11167 = !DILocation(line: 1003, column: 24, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11165, file: !10520, line: 1002, column: 3)
!11169 = !DILocation(line: 1003, column: 33, scope: !11168)
!11170 = !DILocation(line: 1006, column: 61, scope: !11136)
!11171 = !DILocation(line: 1006, column: 81, scope: !11136)
!11172 = !DILocation(line: 1006, column: 22, scope: !11136)
!11173 = !DILocation(line: 1006, column: 42, scope: !11136)
!11174 = !DILocation(line: 1009, column: 12, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11136, file: !10520, line: 1009, column: 6)
!11176 = !DILocation(line: 1009, column: 17, scope: !11175)
!11177 = !DILocation(line: 1009, column: 35, scope: !11175)
!11178 = !DILocation(line: 1009, column: 6, scope: !11136)
!11179 = !DILocation(line: 1011, column: 24, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11175, file: !10520, line: 1010, column: 3)
!11181 = !DILocation(line: 1011, column: 33, scope: !11180)
!11182 = !DILocation(line: 1012, column: 3, scope: !11180)
!11183 = !DILocation(line: 1013, column: 17, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11175, file: !10520, line: 1013, column: 11)
!11185 = !DILocation(line: 1013, column: 22, scope: !11184)
!11186 = !DILocation(line: 1013, column: 39, scope: !11184)
!11187 = !DILocation(line: 0, scope: !11184)
!11188 = !DILocation(line: 1013, column: 11, scope: !11175)
!11189 = !DILocation(line: 1015, column: 33, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11184, file: !10520, line: 1014, column: 3)
!11191 = !DILocation(line: 1016, column: 3, scope: !11190)
!11192 = !DILocation(line: 1019, column: 33, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11184, file: !10520, line: 1018, column: 3)
!11194 = !DILocation(line: 1023, column: 12, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11136, file: !10520, line: 1023, column: 6)
!11196 = !DILocation(line: 1023, column: 16, scope: !11195)
!11197 = !DILocation(line: 1029, column: 24, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11195, file: !10520, line: 1028, column: 3)
!11199 = !DILocation(line: 1029, column: 33, scope: !11198)
!11200 = !DILocation(line: 1033, column: 12, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11136, file: !10520, line: 1033, column: 6)
!11202 = !DILocation(line: 1033, column: 15, scope: !11201)
!11203 = !DILocation(line: 1033, column: 30, scope: !11201)
!11204 = !DILocation(line: 1033, column: 6, scope: !11136)
!11205 = !DILocation(line: 1039, column: 28, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11201, file: !10520, line: 1038, column: 3)
!11207 = !DILocation(line: 1039, column: 37, scope: !11206)
!11208 = !DILocation(line: 1041, column: 54, scope: !11136)
!11209 = !DILocation(line: 1041, column: 62, scope: !11136)
!11210 = !DILocation(line: 1041, column: 26, scope: !11136)
!11211 = !DILocation(line: 1041, column: 36, scope: !11136)
!11212 = !DILocation(line: 1042, column: 49, scope: !11136)
!11213 = !DILocation(line: 1042, column: 57, scope: !11136)
!11214 = !DILocation(line: 1042, column: 26, scope: !11136)
!11215 = !DILocation(line: 1042, column: 31, scope: !11136)
!11216 = !DILocation(line: 1043, column: 50, scope: !11136)
!11217 = !DILocation(line: 1043, column: 78, scope: !11136)
!11218 = !DILocation(line: 1043, column: 26, scope: !11136)
!11219 = !DILocation(line: 1043, column: 31, scope: !11136)
!11220 = !DILocation(line: 1044, column: 52, scope: !11136)
!11221 = !DILocation(line: 1044, column: 102, scope: !11136)
!11222 = !DILocation(line: 1044, column: 109, scope: !11136)
!11223 = !DILocation(line: 1044, column: 26, scope: !11136)
!11224 = !DILocation(line: 1044, column: 31, scope: !11136)
!11225 = !DILocation(line: 1045, column: 50, scope: !11136)
!11226 = !DILocation(line: 1045, column: 78, scope: !11136)
!11227 = !DILocation(line: 1045, column: 26, scope: !11136)
!11228 = !DILocation(line: 1045, column: 31, scope: !11136)
!11229 = !DILocation(line: 1046, column: 1, scope: !11136)
!11230 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10520, file: !10520, line: 1056, type: !11231, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !11233)
!11231 = !DISubroutineType(types: !11232)
!11232 = !{null, !10883, !149}
!11233 = !{!11234, !11235}
!11234 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11230, file: !10520, line: 1056, type: !10883)
!11235 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11230, file: !10520, line: 1056, type: !149)
!11236 = !DILocation(line: 0, scope: !11230)
!11237 = !DILocation(line: 1059, column: 22, scope: !11230)
!11238 = !DILocation(line: 1059, column: 32, scope: !11230)
!11239 = !DILocation(line: 1062, column: 53, scope: !11230)
!11240 = !DILocation(line: 1062, column: 58, scope: !11230)
!11241 = !DILocation(line: 1062, column: 22, scope: !11230)
!11242 = !DILocation(line: 1062, column: 35, scope: !11230)
!11243 = !DILocation(line: 1065, column: 54, scope: !11230)
!11244 = !DILocation(line: 1065, column: 59, scope: !11230)
!11245 = !DILocation(line: 1065, column: 22, scope: !11230)
!11246 = !DILocation(line: 1065, column: 36, scope: !11230)
!11247 = !DILocation(line: 1068, column: 55, scope: !11230)
!11248 = !DILocation(line: 1068, column: 60, scope: !11230)
!11249 = !DILocation(line: 1068, column: 22, scope: !11230)
!11250 = !DILocation(line: 1068, column: 37, scope: !11230)
!11251 = !DILocation(line: 1071, column: 56, scope: !11230)
!11252 = !DILocation(line: 1071, column: 79, scope: !11230)
!11253 = !DILocation(line: 1071, column: 22, scope: !11230)
!11254 = !DILocation(line: 1071, column: 37, scope: !11230)
!11255 = !DILocation(line: 1074, column: 34, scope: !11230)
!11256 = !DILocation(line: 1074, column: 38, scope: !11230)
!11257 = !DILocation(line: 1074, column: 14, scope: !11230)
!11258 = !DILocation(line: 1075, column: 1, scope: !11230)
!11259 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10520, file: !10520, line: 1082, type: !2802, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!11260 = !DILocation(line: 1085, column: 6, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11259, file: !10520, line: 1085, column: 6)
!11262 = !DILocation(line: 1085, column: 6, scope: !11259)
!11263 = !DILocation(line: 1088, column: 5, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11261, file: !10520, line: 1086, column: 3)
!11265 = !DILocation(line: 1091, column: 5, scope: !11264)
!11266 = !DILocation(line: 1092, column: 3, scope: !11264)
!11267 = !DILocation(line: 1093, column: 1, scope: !11259)
!11268 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10520, file: !10520, line: 1099, type: !2802, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!11269 = !DILocation(line: 1104, column: 1, scope: !11268)
!11270 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11271, file: !11271, line: 257, type: !6357, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11272)
!11271 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11272 = !{!11273}
!11273 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11270, file: !11271, line: 257, type: !137)
!11274 = !DILocation(line: 0, scope: !11270)
!11275 = !DILocation(line: 260, column: 3, scope: !11270)
!11276 = !DILocation(line: 261, column: 1, scope: !11270)
!11277 = distinct !DISubprogram(name: "LL_InitTick", scope: !11278, file: !11278, line: 260, type: !8948, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11279)
!11278 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11279 = !{!11280, !11281}
!11280 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11277, file: !11278, line: 260, type: !137)
!11281 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11277, file: !11278, line: 260, type: !137)
!11282 = !DILocation(line: 0, scope: !11277)
!11283 = !DILocation(line: 263, column: 46, scope: !11277)
!11284 = !DILocation(line: 263, column: 55, scope: !11277)
!11285 = !DILocation(line: 263, column: 18, scope: !11277)
!11286 = !DILocation(line: 264, column: 18, scope: !11277)
!11287 = !DILocation(line: 265, column: 18, scope: !11277)
!11288 = !DILocation(line: 267, column: 1, scope: !11277)
!11289 = distinct !DISubprogram(name: "LL_mDelay", scope: !11271, file: !11271, line: 273, type: !6357, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11290)
!11290 = !{!11291, !11292}
!11291 = !DILocalVariable(name: "Delay", arg: 1, scope: !11289, file: !11271, line: 273, type: !137)
!11292 = !DILocalVariable(name: "tmp", scope: !11289, file: !11271, line: 275, type: !176)
!11293 = !DILocation(line: 0, scope: !11289)
!11294 = !DILocation(line: 275, column: 3, scope: !11289)
!11295 = !DILocation(line: 275, column: 18, scope: !11289)
!11296 = !DILocation(line: 275, column: 33, scope: !11289)
!11297 = !DILocation(line: 277, column: 10, scope: !11289)
!11298 = !DILocation(line: 280, column: 12, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11289, file: !11271, line: 280, column: 6)
!11300 = !DILocation(line: 285, column: 3, scope: !11289)
!11301 = !DILocation(line: 287, column: 18, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !11271, line: 287, column: 8)
!11303 = distinct !DILexicalBlock(scope: !11289, file: !11271, line: 286, column: 3)
!11304 = !DILocation(line: 292, column: 1, scope: !11289)
!11305 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11271, file: !11271, line: 323, type: !6357, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11306)
!11306 = !{!11307}
!11307 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11305, file: !11271, line: 323, type: !137)
!11308 = !DILocation(line: 0, scope: !11305)
!11309 = !DILocation(line: 326, column: 19, scope: !11305)
!11310 = !DILocation(line: 327, column: 1, scope: !11305)
!11311 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11271, file: !11271, line: 338, type: !11312, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11315)
!11312 = !DISubroutineType(types: !11313)
!11313 = !{!11314, !137}
!11314 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !677, line: 201, baseType: !676)
!11315 = !{!11316, !11317, !11318, !11319, !11320}
!11316 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11311, file: !11271, line: 338, type: !137)
!11317 = !DILocalVariable(name: "timeout", scope: !11311, file: !11271, line: 340, type: !137)
!11318 = !DILocalVariable(name: "getlatency", scope: !11311, file: !11271, line: 341, type: !137)
!11319 = !DILocalVariable(name: "latency", scope: !11311, file: !11271, line: 342, type: !137)
!11320 = !DILocalVariable(name: "status", scope: !11311, file: !11271, line: 343, type: !11314)
!11321 = !DILocation(line: 0, scope: !11311)
!11322 = !DILocation(line: 347, column: 21, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11311, file: !11271, line: 347, column: 6)
!11324 = !DILocation(line: 347, column: 6, scope: !11311)
!11325 = !DILocation(line: 353, column: 8, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11327, file: !11271, line: 353, column: 8)
!11327 = distinct !DILexicalBlock(scope: !11323, file: !11271, line: 352, column: 3)
!11328 = !DILocation(line: 353, column: 40, scope: !11326)
!11329 = !DILocation(line: 353, column: 8, scope: !11327)
!11330 = !DILocation(line: 374, column: 55, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11332, file: !11271, line: 374, column: 10)
!11332 = distinct !DILexicalBlock(scope: !11326, file: !11271, line: 354, column: 5)
!11333 = !DILocation(line: 368, column: 26, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11332, file: !11271, line: 368, column: 10)
!11335 = !DILocation(line: 368, column: 55, scope: !11334)
!11336 = !DILocation(line: 380, column: 57, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11338, file: !11271, line: 380, column: 12)
!11338 = distinct !DILexicalBlock(scope: !11331, file: !11271, line: 379, column: 7)
!11339 = !DILocation(line: 387, column: 8, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11327, file: !11271, line: 387, column: 8)
!11341 = !DILocation(line: 387, column: 40, scope: !11340)
!11342 = !DILocation(line: 387, column: 8, scope: !11327)
!11343 = !DILocation(line: 407, column: 26, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11345, file: !11271, line: 407, column: 10)
!11345 = distinct !DILexicalBlock(scope: !11340, file: !11271, line: 388, column: 5)
!11346 = !DILocation(line: 407, column: 55, scope: !11344)
!11347 = !DILocation(line: 413, column: 28, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11349, file: !11271, line: 413, column: 12)
!11349 = distinct !DILexicalBlock(scope: !11344, file: !11271, line: 412, column: 7)
!11350 = !DILocation(line: 413, column: 57, scope: !11348)
!11351 = !DILocation(line: 0, scope: !11327)
!11352 = !DILocation(line: 420, column: 8, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11327, file: !11271, line: 420, column: 8)
!11354 = !DILocation(line: 420, column: 40, scope: !11353)
!11355 = !DILocation(line: 420, column: 8, scope: !11327)
!11356 = !DILocation(line: 429, column: 26, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !11271, line: 429, column: 10)
!11358 = distinct !DILexicalBlock(scope: !11353, file: !11271, line: 421, column: 5)
!11359 = !DILocation(line: 429, column: 55, scope: !11357)
!11360 = !DILocation(line: 435, column: 28, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11362, file: !11271, line: 435, column: 12)
!11362 = distinct !DILexicalBlock(scope: !11357, file: !11271, line: 434, column: 7)
!11363 = !DILocation(line: 435, column: 57, scope: !11361)
!11364 = !DILocation(line: 444, column: 5, scope: !11327)
!11365 = !DILocation(line: 448, column: 5, scope: !11327)
!11366 = !DILocation(line: 451, column: 18, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11327, file: !11271, line: 449, column: 5)
!11368 = !DILocation(line: 452, column: 12, scope: !11367)
!11369 = !DILocation(line: 453, column: 26, scope: !11327)
!11370 = !DILocation(line: 453, column: 38, scope: !11327)
!11371 = !DILocation(line: 453, column: 5, scope: !11367)
!11372 = distinct !{!11372, !11365, !11373}
!11373 = !DILocation(line: 453, column: 54, scope: !11327)
!11374 = !DILocation(line: 0, scope: !11323)
!11375 = !DILocation(line: 464, column: 3, scope: !11311)
!11376 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11377, file: !11377, line: 519, type: !135, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11377 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11378 = !DILocation(line: 521, column: 21, scope: !11376)
!11379 = !DILocation(line: 521, column: 3, scope: !11376)
!11380 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6115, file: !6115, line: 1543, type: !6357, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11381)
!11381 = !{!11382}
!11382 = !DILocalVariable(name: "Latency", arg: 1, scope: !11380, file: !6115, line: 1543, type: !137)
!11383 = !DILocation(line: 0, scope: !11380)
!11384 = !DILocation(line: 1545, column: 3, scope: !11380)
!11385 = !DILocation(line: 1546, column: 1, scope: !11380)
!11386 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6115, file: !6115, line: 1569, type: !135, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11387 = !DILocation(line: 1571, column: 21, scope: !11386)
!11388 = !DILocation(line: 1571, column: 3, scope: !11386)
!11389 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11271, file: !11271, line: 483, type: !11390, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11406)
!11390 = !DISubroutineType(types: !11391)
!11391 = !{!11314, !11392, !11399}
!11392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11393, size: 32)
!11393 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11278, line: 114, baseType: !11394)
!11394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11278, line: 94, size: 96, elements: !11395)
!11395 = !{!11396, !11397, !11398}
!11396 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11394, file: !11278, line: 96, baseType: !137, size: 32)
!11397 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11394, file: !11278, line: 102, baseType: !137, size: 32, offset: 32)
!11398 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11394, file: !11278, line: 109, baseType: !137, size: 32, offset: 64)
!11399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11400, size: 32)
!11400 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11278, line: 139, baseType: !11401)
!11401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11278, line: 119, size: 96, elements: !11402)
!11402 = !{!11403, !11404, !11405}
!11403 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11401, file: !11278, line: 121, baseType: !137, size: 32)
!11404 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11401, file: !11278, line: 127, baseType: !137, size: 32, offset: 32)
!11405 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11401, file: !11278, line: 133, baseType: !137, size: 32, offset: 64)
!11406 = !{!11407, !11408, !11409, !11410}
!11407 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11389, file: !11271, line: 483, type: !11392)
!11408 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11389, file: !11271, line: 484, type: !11399)
!11409 = !DILocalVariable(name: "status", scope: !11389, file: !11271, line: 486, type: !11314)
!11410 = !DILocalVariable(name: "pllfreq", scope: !11389, file: !11271, line: 487, type: !137)
!11411 = !DILocation(line: 0, scope: !11389)
!11412 = !DILocation(line: 490, column: 6, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11389, file: !11271, line: 490, column: 6)
!11414 = !DILocation(line: 490, column: 25, scope: !11413)
!11415 = !DILocation(line: 490, column: 6, scope: !11389)
!11416 = !DILocation(line: 493, column: 15, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11413, file: !11271, line: 491, column: 3)
!11418 = !DILocation(line: 496, column: 8, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11417, file: !11271, line: 496, column: 8)
!11420 = !DILocation(line: 496, column: 29, scope: !11419)
!11421 = !DILocation(line: 496, column: 8, scope: !11417)
!11422 = !DILocation(line: 498, column: 7, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11419, file: !11271, line: 497, column: 5)
!11424 = !DILocation(line: 499, column: 7, scope: !11423)
!11425 = !DILocation(line: 499, column: 14, scope: !11423)
!11426 = !DILocation(line: 499, column: 35, scope: !11423)
!11427 = distinct !{!11427, !11424, !11428}
!11428 = !DILocation(line: 502, column: 7, scope: !11423)
!11429 = !DILocation(line: 506, column: 76, scope: !11417)
!11430 = !DILocation(line: 506, column: 103, scope: !11417)
!11431 = !DILocation(line: 507, column: 54, scope: !11417)
!11432 = !DILocation(line: 506, column: 5, scope: !11417)
!11433 = !DILocation(line: 510, column: 14, scope: !11417)
!11434 = !DILocation(line: 511, column: 3, scope: !11417)
!11435 = !DILocation(line: 0, scope: !11413)
!11436 = !DILocation(line: 518, column: 3, scope: !11389)
!11437 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11271, file: !11271, line: 642, type: !11438, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11440)
!11438 = !DISubroutineType(types: !11439)
!11439 = !{!11314}
!11440 = !{!11441}
!11441 = !DILocalVariable(name: "status", scope: !11437, file: !11271, line: 644, type: !11314)
!11442 = !DILocation(line: 0, scope: !11437)
!11443 = !DILocation(line: 647, column: 6, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11437, file: !11271, line: 647, column: 6)
!11445 = !DILocation(line: 647, column: 27, scope: !11444)
!11446 = !DILocation(line: 663, column: 6, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11437, file: !11271, line: 663, column: 6)
!11448 = !DILocation(line: 663, column: 30, scope: !11447)
!11449 = !DILocation(line: 663, column: 6, scope: !11437)
!11450 = !DILocation(line: 669, column: 3, scope: !11437)
!11451 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11271, file: !11271, line: 611, type: !11452, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11454)
!11452 = !DISubroutineType(types: !11453)
!11453 = !{!137, !137, !11392}
!11454 = !{!11455, !11456, !11457}
!11455 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11451, file: !11271, line: 611, type: !137)
!11456 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11451, file: !11271, line: 611, type: !11392)
!11457 = !DILocalVariable(name: "pllfreq", scope: !11451, file: !11271, line: 613, type: !137)
!11458 = !DILocation(line: 0, scope: !11451)
!11459 = !DILocation(line: 622, column: 56, scope: !11451)
!11460 = !DILocation(line: 622, column: 61, scope: !11451)
!11461 = !DILocation(line: 622, column: 32, scope: !11451)
!11462 = !DILocation(line: 626, column: 45, scope: !11451)
!11463 = !DILocation(line: 626, column: 50, scope: !11451)
!11464 = !DILocation(line: 626, column: 21, scope: !11451)
!11465 = !DILocation(line: 630, column: 47, scope: !11451)
!11466 = !DILocation(line: 630, column: 82, scope: !11451)
!11467 = !DILocation(line: 630, column: 21, scope: !11451)
!11468 = !DILocation(line: 633, column: 3, scope: !11451)
!11469 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8298, file: !8298, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11470 = !DILocation(line: 3009, column: 11, scope: !11469)
!11471 = !DILocation(line: 3009, column: 44, scope: !11469)
!11472 = !DILocation(line: 3009, column: 3, scope: !11469)
!11473 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8298, file: !8298, line: 2987, type: !2802, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11474 = !DILocation(line: 2989, column: 3, scope: !11473)
!11475 = !DILocation(line: 2990, column: 1, scope: !11473)
!11476 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8298, file: !8298, line: 4304, type: !8422, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11477)
!11477 = !{!11478, !11479, !11480, !11481}
!11478 = !DILocalVariable(name: "Source", arg: 1, scope: !11476, file: !8298, line: 4304, type: !137)
!11479 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11476, file: !8298, line: 4304, type: !137)
!11480 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11476, file: !8298, line: 4304, type: !137)
!11481 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11476, file: !8298, line: 4304, type: !137)
!11482 = !DILocation(line: 0, scope: !11476)
!11483 = !DILocation(line: 4306, column: 3, scope: !11476)
!11484 = !DILocation(line: 4308, column: 3, scope: !11476)
!11485 = !DILocation(line: 4312, column: 1, scope: !11476)
!11486 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11271, file: !11271, line: 681, type: !11487, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11489)
!11487 = !DISubroutineType(types: !11488)
!11488 = !{!11314, !137, !11399}
!11489 = !{!11490, !11491, !11492, !11493}
!11490 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11486, file: !11271, line: 681, type: !137)
!11491 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11486, file: !11271, line: 681, type: !11399)
!11492 = !DILocalVariable(name: "status", scope: !11486, file: !11271, line: 683, type: !11314)
!11493 = !DILocalVariable(name: "hclk_frequency", scope: !11486, file: !11271, line: 684, type: !137)
!11494 = !DILocation(line: 0, scope: !11486)
!11495 = !DILocation(line: 691, column: 20, scope: !11486)
!11496 = !DILocation(line: 694, column: 6, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11486, file: !11271, line: 694, column: 6)
!11498 = !DILocation(line: 694, column: 22, scope: !11497)
!11499 = !DILocation(line: 694, column: 6, scope: !11486)
!11500 = !DILocation(line: 697, column: 14, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11497, file: !11271, line: 695, column: 3)
!11502 = !DILocation(line: 701, column: 13, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11486, file: !11271, line: 701, column: 6)
!11504 = !DILocation(line: 701, column: 6, scope: !11486)
!11505 = !DILocation(line: 704, column: 5, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11503, file: !11271, line: 702, column: 3)
!11507 = !DILocation(line: 705, column: 5, scope: !11506)
!11508 = !DILocation(line: 705, column: 12, scope: !11506)
!11509 = !DILocation(line: 705, column: 33, scope: !11506)
!11510 = distinct !{!11510, !11507, !11511}
!11511 = !DILocation(line: 708, column: 5, scope: !11506)
!11512 = !DILocation(line: 711, column: 49, scope: !11506)
!11513 = !DILocation(line: 711, column: 5, scope: !11506)
!11514 = !DILocation(line: 712, column: 5, scope: !11506)
!11515 = !DILocation(line: 713, column: 5, scope: !11506)
!11516 = !DILocation(line: 713, column: 12, scope: !11506)
!11517 = !DILocation(line: 713, column: 37, scope: !11506)
!11518 = distinct !{!11518, !11515, !11519}
!11519 = !DILocation(line: 716, column: 5, scope: !11506)
!11520 = !DILocation(line: 719, column: 50, scope: !11506)
!11521 = !DILocation(line: 719, column: 5, scope: !11506)
!11522 = !DILocation(line: 720, column: 50, scope: !11506)
!11523 = !DILocation(line: 720, column: 5, scope: !11506)
!11524 = !DILocation(line: 721, column: 3, scope: !11506)
!11525 = !DILocation(line: 724, column: 6, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11486, file: !11271, line: 724, column: 6)
!11527 = !DILocation(line: 724, column: 22, scope: !11526)
!11528 = !DILocation(line: 724, column: 6, scope: !11486)
!11529 = !DILocation(line: 727, column: 14, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11526, file: !11271, line: 725, column: 3)
!11531 = !DILocation(line: 728, column: 3, scope: !11530)
!11532 = !DILocation(line: 731, column: 13, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11486, file: !11271, line: 731, column: 6)
!11534 = !DILocation(line: 731, column: 6, scope: !11486)
!11535 = !DILocation(line: 733, column: 5, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11533, file: !11271, line: 732, column: 3)
!11537 = !DILocation(line: 734, column: 3, scope: !11536)
!11538 = !DILocation(line: 736, column: 3, scope: !11486)
!11539 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8298, file: !8298, line: 4184, type: !2802, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11540 = !DILocation(line: 4186, column: 3, scope: !11539)
!11541 = !DILocation(line: 4187, column: 1, scope: !11539)
!11542 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8298, file: !8298, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11543 = !DILocation(line: 4207, column: 11, scope: !11542)
!11544 = !DILocation(line: 4207, column: 44, scope: !11542)
!11545 = !DILocation(line: 4207, column: 3, scope: !11542)
!11546 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8298, file: !8298, line: 3224, type: !6357, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11547)
!11547 = !{!11548}
!11548 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11546, file: !8298, line: 3224, type: !137)
!11549 = !DILocation(line: 0, scope: !11546)
!11550 = !DILocation(line: 3226, column: 3, scope: !11546)
!11551 = !DILocation(line: 3227, column: 1, scope: !11546)
!11552 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8298, file: !8298, line: 3188, type: !6357, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11553)
!11553 = !{!11554}
!11554 = !DILocalVariable(name: "Source", arg: 1, scope: !11552, file: !8298, line: 3188, type: !137)
!11555 = !DILocation(line: 0, scope: !11552)
!11556 = !DILocation(line: 3190, column: 3, scope: !11552)
!11557 = !DILocation(line: 3191, column: 1, scope: !11552)
!11558 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8298, file: !8298, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11559 = !DILocation(line: 3206, column: 21, scope: !11558)
!11560 = !DILocation(line: 3206, column: 3, scope: !11558)
!11561 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8298, file: !8298, line: 3240, type: !6357, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11562)
!11562 = !{!11563}
!11563 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11561, file: !8298, line: 3240, type: !137)
!11564 = !DILocation(line: 0, scope: !11561)
!11565 = !DILocation(line: 3242, column: 3, scope: !11561)
!11566 = !DILocation(line: 3243, column: 1, scope: !11561)
!11567 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8298, file: !8298, line: 3256, type: !6357, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11568)
!11568 = !{!11569}
!11569 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11567, file: !8298, line: 3256, type: !137)
!11570 = !DILocation(line: 0, scope: !11567)
!11571 = !DILocation(line: 3258, column: 3, scope: !11567)
!11572 = !DILocation(line: 3259, column: 1, scope: !11567)
!11573 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8298, file: !8298, line: 5153, type: !135, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11574 = !DILocation(line: 5155, column: 11, scope: !11573)
!11575 = !DILocation(line: 5155, column: 47, scope: !11573)
!11576 = !DILocation(line: 5155, column: 3, scope: !11573)
!11577 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11271, file: !11271, line: 540, type: !11578, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !11580)
!11578 = !DISubroutineType(types: !11579)
!11579 = !{!11314, !137, !137, !11392, !11399}
!11580 = !{!11581, !11582, !11583, !11584, !11585, !11586}
!11581 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11577, file: !11271, line: 540, type: !137)
!11582 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11577, file: !11271, line: 540, type: !137)
!11583 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11577, file: !11271, line: 541, type: !11392)
!11584 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11577, file: !11271, line: 541, type: !11399)
!11585 = !DILocalVariable(name: "status", scope: !11577, file: !11271, line: 543, type: !11314)
!11586 = !DILocalVariable(name: "pllfreq", scope: !11577, file: !11271, line: 544, type: !137)
!11587 = !DILocation(line: 0, scope: !11577)
!11588 = !DILocation(line: 551, column: 6, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11577, file: !11271, line: 551, column: 6)
!11590 = !DILocation(line: 551, column: 25, scope: !11589)
!11591 = !DILocation(line: 551, column: 6, scope: !11577)
!11592 = !DILocation(line: 554, column: 15, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11589, file: !11271, line: 552, column: 3)
!11594 = !DILocation(line: 557, column: 8, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11593, file: !11271, line: 557, column: 8)
!11596 = !DILocation(line: 557, column: 29, scope: !11595)
!11597 = !DILocation(line: 557, column: 8, scope: !11593)
!11598 = !DILocation(line: 560, column: 20, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11600, file: !11271, line: 560, column: 10)
!11600 = distinct !DILexicalBlock(scope: !11595, file: !11271, line: 558, column: 5)
!11601 = !DILocation(line: 560, column: 10, scope: !11600)
!11602 = !DILocation(line: 562, column: 9, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11599, file: !11271, line: 561, column: 7)
!11604 = !DILocation(line: 563, column: 7, scope: !11603)
!11605 = !DILocation(line: 566, column: 9, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11599, file: !11271, line: 565, column: 7)
!11607 = !DILocation(line: 570, column: 7, scope: !11600)
!11608 = !DILocation(line: 571, column: 7, scope: !11600)
!11609 = !DILocation(line: 571, column: 14, scope: !11600)
!11610 = !DILocation(line: 571, column: 35, scope: !11600)
!11611 = distinct !{!11611, !11608, !11612}
!11612 = !DILocation(line: 574, column: 7, scope: !11600)
!11613 = !DILocation(line: 578, column: 76, scope: !11593)
!11614 = !DILocation(line: 578, column: 103, scope: !11593)
!11615 = !DILocation(line: 579, column: 54, scope: !11593)
!11616 = !DILocation(line: 578, column: 5, scope: !11593)
!11617 = !DILocation(line: 582, column: 14, scope: !11593)
!11618 = !DILocation(line: 583, column: 3, scope: !11593)
!11619 = !DILocation(line: 0, scope: !11589)
!11620 = !DILocation(line: 590, column: 3, scope: !11577)
!11621 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8298, file: !8298, line: 2969, type: !135, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11622 = !DILocation(line: 2971, column: 11, scope: !11621)
!11623 = !DILocation(line: 2971, column: 44, scope: !11621)
!11624 = !DILocation(line: 2971, column: 3, scope: !11621)
!11625 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8298, file: !8298, line: 2929, type: !2802, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11626 = !DILocation(line: 2931, column: 3, scope: !11625)
!11627 = !DILocation(line: 2932, column: 1, scope: !11625)
!11628 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8298, file: !8298, line: 2939, type: !2802, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11629 = !DILocation(line: 2941, column: 3, scope: !11628)
!11630 = !DILocation(line: 2942, column: 1, scope: !11628)
!11631 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8298, file: !8298, line: 2949, type: !2802, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !162)
!11632 = !DILocation(line: 2951, column: 3, scope: !11631)
!11633 = !DILocation(line: 2952, column: 1, scope: !11631)
!11634 = distinct !DISubprogram(name: "z_device_state_init", scope: !11635, file: !11635, line: 23, type: !2802, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !11636)
!11635 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11636 = !{!11637}
!11637 = !DILocalVariable(name: "dev", scope: !11634, file: !11635, line: 25, type: !11638)
!11638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11639, size: 32)
!11639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11640)
!11640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !11641)
!11641 = !{!11642, !11643, !11644, !11645, !11651, !11652}
!11642 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11640, file: !196, line: 380, baseType: !199, size: 32)
!11643 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11640, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!11644 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11640, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!11645 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11640, file: !196, line: 386, baseType: !11646, size: 32, offset: 96)
!11646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11647, size: 32)
!11647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !11648)
!11648 = !{!11649, !11650}
!11649 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11647, file: !196, line: 359, baseType: !208, size: 8)
!11650 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11647, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11651 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11640, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!11652 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11640, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!11653 = !DILocation(line: 0, scope: !11634)
!11654 = !DILocation(line: 31, column: 1, scope: !11634)
!11655 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11635, file: !11635, line: 33, type: !11656, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !11658)
!11656 = !DISubroutineType(types: !11657)
!11657 = !{!11638, !199}
!11658 = !{!11659, !11660}
!11659 = !DILocalVariable(name: "name", arg: 1, scope: !11655, file: !11635, line: 33, type: !199)
!11660 = !DILocalVariable(name: "dev", scope: !11655, file: !11635, line: 35, type: !11638)
!11661 = !DILocation(line: 0, scope: !11655)
!11662 = !DILocation(line: 40, column: 12, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11655, file: !11635, line: 40, column: 6)
!11664 = !DILocation(line: 40, column: 21, scope: !11663)
!11665 = !DILocation(line: 40, column: 25, scope: !11663)
!11666 = !DILocation(line: 40, column: 33, scope: !11663)
!11667 = !DILocation(line: 40, column: 6, scope: !11655)
!11668 = !DILocation(line: 55, column: 2, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11655, file: !11635, line: 55, column: 2)
!11670 = !DILocation(line: 50, column: 7, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11672, file: !11635, line: 50, column: 7)
!11672 = distinct !DILexicalBlock(scope: !11673, file: !11635, line: 49, column: 57)
!11673 = distinct !DILexicalBlock(scope: !11674, file: !11635, line: 49, column: 2)
!11674 = distinct !DILexicalBlock(scope: !11655, file: !11635, line: 49, column: 2)
!11675 = !DILocation(line: 50, column: 30, scope: !11671)
!11676 = !DILocation(line: 50, column: 39, scope: !11671)
!11677 = !DILocation(line: 50, column: 44, scope: !11671)
!11678 = !DILocation(line: 50, column: 7, scope: !11672)
!11679 = !DILocation(line: 49, column: 53, scope: !11673)
!11680 = !DILocation(line: 49, column: 33, scope: !11673)
!11681 = !DILocation(line: 49, column: 2, scope: !11674)
!11682 = distinct !{!11682, !11681, !11683}
!11683 = !DILocation(line: 53, column: 2, scope: !11674)
!11684 = !DILocation(line: 56, column: 7, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11686, file: !11635, line: 56, column: 7)
!11686 = distinct !DILexicalBlock(scope: !11687, file: !11635, line: 55, column: 57)
!11687 = distinct !DILexicalBlock(scope: !11669, file: !11635, line: 55, column: 2)
!11688 = !DILocation(line: 56, column: 30, scope: !11685)
!11689 = !DILocation(line: 56, column: 52, scope: !11685)
!11690 = !DILocation(line: 56, column: 34, scope: !11685)
!11691 = !DILocation(line: 56, column: 58, scope: !11685)
!11692 = !DILocation(line: 56, column: 7, scope: !11686)
!11693 = !DILocation(line: 55, column: 53, scope: !11687)
!11694 = !DILocation(line: 55, column: 33, scope: !11687)
!11695 = distinct !{!11695, !11668, !11696}
!11696 = !DILocation(line: 59, column: 2, scope: !11669)
!11697 = !DILocation(line: 62, column: 1, scope: !11655)
!11698 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11635, file: !11635, line: 93, type: !11699, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !11701)
!11699 = !DISubroutineType(types: !11700)
!11700 = !{!211, !11638}
!11701 = !{!11702}
!11702 = !DILocalVariable(name: "dev", arg: 1, scope: !11698, file: !11635, line: 93, type: !11638)
!11703 = !DILocation(line: 0, scope: !11698)
!11704 = !DILocation(line: 99, column: 10, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11698, file: !11635, line: 99, column: 6)
!11706 = !DILocation(line: 99, column: 6, scope: !11698)
!11707 = !DILocation(line: 103, column: 14, scope: !11698)
!11708 = !DILocation(line: 103, column: 21, scope: !11698)
!11709 = !DILocation(line: 103, column: 33, scope: !11698)
!11710 = !DILocation(line: 103, column: 49, scope: !11698)
!11711 = !DILocation(line: 103, column: 58, scope: !11698)
!11712 = !DILocation(line: 104, column: 1, scope: !11698)
!11713 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11635, file: !11635, line: 87, type: !11714, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !11717)
!11714 = !DISubroutineType(types: !11715)
!11715 = !{!120, !11716}
!11716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11638, size: 32)
!11717 = !{!11718}
!11718 = !DILocalVariable(name: "devices", arg: 1, scope: !11713, file: !11635, line: 87, type: !11716)
!11719 = !DILocation(line: 0, scope: !11713)
!11720 = !DILocation(line: 89, column: 11, scope: !11713)
!11721 = !DILocation(line: 90, column: 2, scope: !11713)
!11722 = distinct !DISubprogram(name: "device_required_foreach", scope: !11635, file: !11635, line: 125, type: !11723, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !11729)
!11723 = !DISubroutineType(types: !11724)
!11724 = !{!103, !11638, !11725, !102}
!11725 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !196, line: 471, baseType: !11726)
!11726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11727, size: 32)
!11727 = !DISubroutineType(types: !11728)
!11728 = !{!103, !11638, !102}
!11729 = !{!11730, !11731, !11732, !11733, !11734}
!11730 = !DILocalVariable(name: "dev", arg: 1, scope: !11722, file: !11635, line: 125, type: !11638)
!11731 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11722, file: !11635, line: 126, type: !11725)
!11732 = !DILocalVariable(name: "context", arg: 3, scope: !11722, file: !11635, line: 127, type: !102)
!11733 = !DILocalVariable(name: "handle_count", scope: !11722, file: !11635, line: 129, type: !120)
!11734 = !DILocalVariable(name: "handles", scope: !11722, file: !11635, line: 130, type: !214)
!11735 = !DILocation(line: 0, scope: !11722)
!11736 = !DILocation(line: 129, column: 2, scope: !11722)
!11737 = !DILocation(line: 129, column: 9, scope: !11722)
!11738 = !DILocation(line: 130, column: 35, scope: !11722)
!11739 = !DILocation(line: 132, column: 33, scope: !11722)
!11740 = !DILocation(line: 132, column: 9, scope: !11722)
!11741 = !DILocation(line: 133, column: 1, scope: !11722)
!11742 = !DILocation(line: 132, column: 2, scope: !11722)
!11743 = distinct !DISubprogram(name: "device_required_handles_get", scope: !196, file: !196, line: 493, type: !11744, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !11746)
!11744 = !DISubroutineType(types: !11745)
!11745 = !{!214, !11638, !2258}
!11746 = !{!11747, !11748, !11749, !11750}
!11747 = !DILocalVariable(name: "dev", arg: 1, scope: !11743, file: !196, line: 493, type: !11638)
!11748 = !DILocalVariable(name: "count", arg: 2, scope: !11743, file: !196, line: 493, type: !2258)
!11749 = !DILocalVariable(name: "rv", scope: !11743, file: !196, line: 495, type: !214)
!11750 = !DILocalVariable(name: "i", scope: !11751, file: !196, line: 498, type: !120)
!11751 = distinct !DILexicalBlock(scope: !11752, file: !196, line: 497, column: 18)
!11752 = distinct !DILexicalBlock(scope: !11743, file: !196, line: 497, column: 6)
!11753 = !DILocation(line: 0, scope: !11743)
!11754 = !DILocation(line: 495, column: 35, scope: !11743)
!11755 = !DILocation(line: 497, column: 9, scope: !11752)
!11756 = !DILocation(line: 497, column: 6, scope: !11743)
!11757 = !DILocation(line: 0, scope: !11751)
!11758 = !DILocation(line: 500, column: 11, scope: !11751)
!11759 = !DILocation(line: 500, column: 40, scope: !11751)
!11760 = !DILocation(line: 502, column: 4, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11751, file: !196, line: 501, column: 40)
!11762 = distinct !{!11762, !11763, !11764}
!11763 = !DILocation(line: 500, column: 3, scope: !11751)
!11764 = !DILocation(line: 503, column: 3, scope: !11751)
!11765 = !DILocation(line: 504, column: 10, scope: !11751)
!11766 = !DILocation(line: 505, column: 2, scope: !11751)
!11767 = !DILocation(line: 507, column: 2, scope: !11743)
!11768 = distinct !DISubprogram(name: "device_visitor", scope: !11635, file: !11635, line: 106, type: !11769, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !11771)
!11769 = !DISubroutineType(types: !11770)
!11770 = !{!103, !214, !120, !11725, !102}
!11771 = !{!11772, !11773, !11774, !11775, !11776, !11778, !11781, !11782}
!11772 = !DILocalVariable(name: "handles", arg: 1, scope: !11768, file: !11635, line: 106, type: !214)
!11773 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11768, file: !11635, line: 107, type: !120)
!11774 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11768, file: !11635, line: 108, type: !11725)
!11775 = !DILocalVariable(name: "context", arg: 4, scope: !11768, file: !11635, line: 109, type: !102)
!11776 = !DILocalVariable(name: "i", scope: !11777, file: !11635, line: 112, type: !120)
!11777 = distinct !DILexicalBlock(scope: !11768, file: !11635, line: 112, column: 2)
!11778 = !DILocalVariable(name: "dh", scope: !11779, file: !11635, line: 113, type: !216)
!11779 = distinct !DILexicalBlock(scope: !11780, file: !11635, line: 112, column: 44)
!11780 = distinct !DILexicalBlock(scope: !11777, file: !11635, line: 112, column: 2)
!11781 = !DILocalVariable(name: "rdev", scope: !11779, file: !11635, line: 114, type: !11638)
!11782 = !DILocalVariable(name: "rc", scope: !11779, file: !11635, line: 115, type: !103)
!11783 = !DILocation(line: 0, scope: !11768)
!11784 = !DILocation(line: 0, scope: !11777)
!11785 = !DILocation(line: 112, column: 23, scope: !11780)
!11786 = !DILocation(line: 112, column: 2, scope: !11777)
!11787 = distinct !{!11787, !11786, !11788}
!11788 = !DILocation(line: 120, column: 2, scope: !11777)
!11789 = !DILocation(line: 113, column: 24, scope: !11779)
!11790 = !DILocation(line: 0, scope: !11779)
!11791 = !DILocation(line: 114, column: 31, scope: !11779)
!11792 = !DILocation(line: 115, column: 12, scope: !11779)
!11793 = !DILocation(line: 117, column: 10, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11779, file: !11635, line: 117, column: 7)
!11795 = !DILocation(line: 112, column: 39, scope: !11780)
!11796 = !DILocation(line: 123, column: 1, scope: !11768)
!11797 = distinct !DISubprogram(name: "device_from_handle", scope: !196, file: !196, line: 439, type: !11798, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !11800)
!11798 = !DISubroutineType(types: !11799)
!11799 = !{!11638, !216}
!11800 = !{!11801, !11802, !11803}
!11801 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11797, file: !196, line: 439, type: !216)
!11802 = !DILocalVariable(name: "dev", scope: !11797, file: !196, line: 443, type: !11638)
!11803 = !DILocalVariable(name: "numdev", scope: !11797, file: !196, line: 444, type: !120)
!11804 = !DILocation(line: 0, scope: !11797)
!11805 = !DILocation(line: 446, column: 7, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11797, file: !196, line: 446, column: 6)
!11807 = !DILocation(line: 446, column: 18, scope: !11806)
!11808 = !DILocation(line: 446, column: 23, scope: !11806)
!11809 = !DILocation(line: 450, column: 2, scope: !11797)
!11810 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11635, file: !11635, line: 135, type: !11723, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !11811)
!11811 = !{!11812, !11813, !11814, !11815, !11816}
!11812 = !DILocalVariable(name: "dev", arg: 1, scope: !11810, file: !11635, line: 135, type: !11638)
!11813 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11810, file: !11635, line: 136, type: !11725)
!11814 = !DILocalVariable(name: "context", arg: 3, scope: !11810, file: !11635, line: 137, type: !102)
!11815 = !DILocalVariable(name: "handle_count", scope: !11810, file: !11635, line: 139, type: !120)
!11816 = !DILocalVariable(name: "handles", scope: !11810, file: !11635, line: 140, type: !214)
!11817 = !DILocation(line: 0, scope: !11810)
!11818 = !DILocation(line: 139, column: 2, scope: !11810)
!11819 = !DILocation(line: 139, column: 9, scope: !11810)
!11820 = !DILocation(line: 140, column: 35, scope: !11810)
!11821 = !DILocation(line: 142, column: 33, scope: !11810)
!11822 = !DILocation(line: 142, column: 9, scope: !11810)
!11823 = !DILocation(line: 143, column: 1, scope: !11810)
!11824 = !DILocation(line: 142, column: 2, scope: !11810)
!11825 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !196, file: !196, line: 573, type: !11744, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !11826)
!11826 = !{!11827, !11828, !11829, !11830, !11831}
!11827 = !DILocalVariable(name: "dev", arg: 1, scope: !11825, file: !196, line: 573, type: !11638)
!11828 = !DILocalVariable(name: "count", arg: 2, scope: !11825, file: !196, line: 573, type: !2258)
!11829 = !DILocalVariable(name: "rv", scope: !11825, file: !196, line: 575, type: !214)
!11830 = !DILocalVariable(name: "region", scope: !11825, file: !196, line: 576, type: !120)
!11831 = !DILocalVariable(name: "i", scope: !11825, file: !196, line: 577, type: !120)
!11832 = !DILocation(line: 0, scope: !11825)
!11833 = !DILocation(line: 575, column: 35, scope: !11825)
!11834 = !DILocation(line: 579, column: 9, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11825, file: !196, line: 579, column: 6)
!11836 = !DILocation(line: 579, column: 6, scope: !11825)
!11837 = !DILocation(line: 582, column: 8, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11839, file: !196, line: 582, column: 8)
!11839 = distinct !DILexicalBlock(scope: !11840, file: !196, line: 581, column: 23)
!11840 = distinct !DILexicalBlock(scope: !11835, file: !196, line: 579, column: 18)
!11841 = !DILocation(line: 582, column: 12, scope: !11838)
!11842 = !DILocation(line: 585, column: 6, scope: !11839)
!11843 = !DILocation(line: 0, scope: !11840)
!11844 = !DILocation(line: 581, column: 17, scope: !11840)
!11845 = !DILocation(line: 581, column: 3, scope: !11840)
!11846 = !DILocation(line: 588, column: 10, scope: !11840)
!11847 = !DILocation(line: 588, column: 16, scope: !11840)
!11848 = !DILocation(line: 589, column: 4, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11840, file: !196, line: 588, column: 39)
!11850 = !DILocation(line: 588, column: 3, scope: !11840)
!11851 = distinct !{!11851, !11850, !11852}
!11852 = !DILocation(line: 590, column: 3, scope: !11840)
!11853 = !DILocation(line: 591, column: 10, scope: !11840)
!11854 = !DILocation(line: 592, column: 2, scope: !11840)
!11855 = !DILocation(line: 575, column: 25, scope: !11825)
!11856 = !DILocation(line: 594, column: 2, scope: !11825)
!11857 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1653, file: !1653, line: 49, type: !11858, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1650, retainedNodes: !162)
!11858 = !DISubroutineType(types: !11859)
!11859 = !{!2251}
!11860 = !DILocation(line: 51, column: 10, scope: !11857)
!11861 = !DILocation(line: 51, column: 20, scope: !11857)
!11862 = !DILocation(line: 51, column: 2, scope: !11857)
!11863 = distinct !DISubprogram(name: "coredump", scope: !2769, file: !2769, line: 209, type: !11864, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12010)
!11864 = !DISubroutineType(types: !11865)
!11865 = !{null, !32, !11866, !11910}
!11866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11867, size: 32)
!11867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11868)
!11868 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2383, line: 141, baseType: !11869)
!11869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2383, line: 97, size: 256, elements: !11870)
!11870 = !{!11871}
!11871 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11869, file: !2383, line: 107, baseType: !11872, size: 256)
!11872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2383, line: 98, size: 256, elements: !11873)
!11873 = !{!11874, !11879, !11884, !11889, !11894, !11899, !11904, !11909}
!11874 = !DIDerivedType(tag: DW_TAG_member, scope: !11872, file: !2383, line: 99, baseType: !11875, size: 32)
!11875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11872, file: !2383, line: 99, size: 32, elements: !11876)
!11876 = !{!11877, !11878}
!11877 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11875, file: !2383, line: 99, baseType: !137, size: 32)
!11878 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11875, file: !2383, line: 99, baseType: !137, size: 32)
!11879 = !DIDerivedType(tag: DW_TAG_member, scope: !11872, file: !2383, line: 100, baseType: !11880, size: 32, offset: 32)
!11880 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11872, file: !2383, line: 100, size: 32, elements: !11881)
!11881 = !{!11882, !11883}
!11882 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11880, file: !2383, line: 100, baseType: !137, size: 32)
!11883 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11880, file: !2383, line: 100, baseType: !137, size: 32)
!11884 = !DIDerivedType(tag: DW_TAG_member, scope: !11872, file: !2383, line: 101, baseType: !11885, size: 32, offset: 64)
!11885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11872, file: !2383, line: 101, size: 32, elements: !11886)
!11886 = !{!11887, !11888}
!11887 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11885, file: !2383, line: 101, baseType: !137, size: 32)
!11888 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11885, file: !2383, line: 101, baseType: !137, size: 32)
!11889 = !DIDerivedType(tag: DW_TAG_member, scope: !11872, file: !2383, line: 102, baseType: !11890, size: 32, offset: 96)
!11890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11872, file: !2383, line: 102, size: 32, elements: !11891)
!11891 = !{!11892, !11893}
!11892 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11890, file: !2383, line: 102, baseType: !137, size: 32)
!11893 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11890, file: !2383, line: 102, baseType: !137, size: 32)
!11894 = !DIDerivedType(tag: DW_TAG_member, scope: !11872, file: !2383, line: 103, baseType: !11895, size: 32, offset: 128)
!11895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11872, file: !2383, line: 103, size: 32, elements: !11896)
!11896 = !{!11897, !11898}
!11897 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11895, file: !2383, line: 103, baseType: !137, size: 32)
!11898 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11895, file: !2383, line: 103, baseType: !137, size: 32)
!11899 = !DIDerivedType(tag: DW_TAG_member, scope: !11872, file: !2383, line: 104, baseType: !11900, size: 32, offset: 160)
!11900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11872, file: !2383, line: 104, size: 32, elements: !11901)
!11901 = !{!11902, !11903}
!11902 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11900, file: !2383, line: 104, baseType: !137, size: 32)
!11903 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11900, file: !2383, line: 104, baseType: !137, size: 32)
!11904 = !DIDerivedType(tag: DW_TAG_member, scope: !11872, file: !2383, line: 105, baseType: !11905, size: 32, offset: 192)
!11905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11872, file: !2383, line: 105, size: 32, elements: !11906)
!11906 = !{!11907, !11908}
!11907 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11905, file: !2383, line: 105, baseType: !137, size: 32)
!11908 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11905, file: !2383, line: 105, baseType: !137, size: 32)
!11909 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11872, file: !2383, line: 106, baseType: !137, size: 32, offset: 224)
!11910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11911, size: 32)
!11911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !11912)
!11912 = !{!11913, !11971, !11983, !11984, !11985, !11986, !11992, !12005}
!11913 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11911, file: !263, line: 247, baseType: !11914, size: 384)
!11914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !11915)
!11915 = !{!11916, !11940, !11947, !11948, !11949, !11958, !11959, !11960}
!11916 = !DIDerivedType(tag: DW_TAG_member, scope: !11914, file: !263, line: 60, baseType: !11917, size: 64)
!11917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11914, file: !263, line: 60, size: 64, elements: !11918)
!11918 = !{!11919, !11934}
!11919 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11917, file: !263, line: 61, baseType: !11920, size: 64)
!11920 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !11921)
!11921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !11922)
!11922 = !{!11923, !11929}
!11923 = !DIDerivedType(tag: DW_TAG_member, scope: !11921, file: !273, line: 38, baseType: !11924, size: 32)
!11924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11921, file: !273, line: 38, size: 32, elements: !11925)
!11925 = !{!11926, !11928}
!11926 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11924, file: !273, line: 39, baseType: !11927, size: 32)
!11927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11921, size: 32)
!11928 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11924, file: !273, line: 40, baseType: !11927, size: 32)
!11929 = !DIDerivedType(tag: DW_TAG_member, scope: !11921, file: !273, line: 42, baseType: !11930, size: 32, offset: 32)
!11930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11921, file: !273, line: 42, size: 32, elements: !11931)
!11931 = !{!11932, !11933}
!11932 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11930, file: !273, line: 43, baseType: !11927, size: 32)
!11933 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11930, file: !273, line: 44, baseType: !11927, size: 32)
!11934 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11917, file: !263, line: 62, baseType: !11935, size: 64)
!11935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !11936)
!11936 = !{!11937}
!11937 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11935, file: !289, line: 50, baseType: !11938, size: 64)
!11938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11939, size: 64, elements: !294)
!11939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11935, size: 32)
!11940 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11914, file: !263, line: 68, baseType: !11941, size: 32, offset: 64)
!11941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11942, size: 32)
!11942 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !11943)
!11943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !11944)
!11944 = !{!11945}
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11943, file: !299, line: 232, baseType: !11946, size: 64)
!11946 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !11921)
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11914, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!11948 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11914, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!11949 = !DIDerivedType(tag: DW_TAG_member, scope: !11914, file: !263, line: 90, baseType: !11950, size: 16, offset: 112)
!11950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11914, file: !263, line: 90, size: 16, elements: !11951)
!11951 = !{!11952, !11957}
!11952 = !DIDerivedType(tag: DW_TAG_member, scope: !11950, file: !263, line: 91, baseType: !11953, size: 16)
!11953 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11950, file: !263, line: 91, size: 16, elements: !11954)
!11954 = !{!11955, !11956}
!11955 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11953, file: !263, line: 96, baseType: !313, size: 8)
!11956 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11953, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!11957 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11950, file: !263, line: 100, baseType: !151, size: 16)
!11958 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11914, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!11959 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11914, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!11960 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11914, file: !263, line: 131, baseType: !11961, size: 192, offset: 192)
!11961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !11962)
!11962 = !{!11963, !11964, !11970}
!11963 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11961, file: !299, line: 245, baseType: !11920, size: 64)
!11964 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11961, file: !299, line: 246, baseType: !11965, size: 32, offset: 64)
!11965 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !11966)
!11966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11967, size: 32)
!11967 = !DISubroutineType(types: !11968)
!11968 = !{null, !11969}
!11969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11961, size: 32)
!11970 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11961, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!11971 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11911, file: !263, line: 250, baseType: !11972, size: 288, offset: 384)
!11972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !11973)
!11973 = !{!11974, !11975, !11976, !11977, !11978, !11979, !11980, !11981, !11982}
!11974 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11972, file: !334, line: 26, baseType: !137, size: 32)
!11975 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11972, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!11976 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11972, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!11977 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11972, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!11978 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11972, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!11979 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11972, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!11980 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11972, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!11981 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11972, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!11982 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11972, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!11983 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11911, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!11984 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11911, file: !263, line: 256, baseType: !11942, size: 64, offset: 704)
!11985 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11911, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!11986 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11911, file: !263, line: 300, baseType: !11987, size: 96, offset: 800)
!11987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !11988)
!11988 = !{!11989, !11990, !11991}
!11989 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11987, file: !263, line: 153, baseType: !22, size: 32)
!11990 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11987, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!11991 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11987, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!11992 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11911, file: !263, line: 325, baseType: !11993, size: 32, offset: 896)
!11993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11994, size: 32)
!11994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !11995)
!11995 = !{!11996, !12002, !12003}
!11996 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11994, file: !357, line: 5074, baseType: !11997, size: 96)
!11997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !11998)
!11998 = !{!11999, !12000, !12001}
!11999 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11997, file: !113, line: 57, baseType: !116, size: 32)
!12000 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11997, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!12001 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11997, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!12002 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11994, file: !357, line: 5075, baseType: !11942, size: 64, offset: 96)
!12003 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11994, file: !357, line: 5076, baseType: !12004, offset: 160)
!12004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!12005 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11911, file: !263, line: 343, baseType: !12006, size: 64, offset: 928)
!12006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !12007)
!12007 = !{!12008, !12009}
!12008 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12006, file: !334, line: 63, baseType: !137, size: 32)
!12009 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12006, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!12010 = !{!12011, !12012, !12013}
!12011 = !DILocalVariable(name: "reason", arg: 1, scope: !11863, file: !2769, line: 209, type: !32)
!12012 = !DILocalVariable(name: "esf", arg: 2, scope: !11863, file: !2769, line: 209, type: !11866)
!12013 = !DILocalVariable(name: "thread", arg: 3, scope: !11863, file: !2769, line: 210, type: !11910)
!12014 = !DILocation(line: 0, scope: !11863)
!12015 = !DILocation(line: 212, column: 1, scope: !11863)
!12016 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2769, file: !2769, line: 214, type: !12017, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12019)
!12017 = !DISubroutineType(types: !12018)
!12018 = !{null, !22, !22}
!12019 = !{!12020, !12021}
!12020 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12016, file: !2769, line: 214, type: !22)
!12021 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12016, file: !2769, line: 214, type: !22)
!12022 = !DILocation(line: 0, scope: !12016)
!12023 = !DILocation(line: 216, column: 1, scope: !12016)
!12024 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2769, file: !2769, line: 218, type: !12025, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12027)
!12025 = !DISubroutineType(types: !12026)
!12026 = !{null, !1694, !120}
!12027 = !{!12028, !12029}
!12028 = !DILocalVariable(name: "buf", arg: 1, scope: !12024, file: !2769, line: 218, type: !1694)
!12029 = !DILocalVariable(name: "buflen", arg: 2, scope: !12024, file: !2769, line: 218, type: !120)
!12030 = !DILocation(line: 0, scope: !12024)
!12031 = !DILocation(line: 220, column: 1, scope: !12024)
!12032 = distinct !DISubprogram(name: "coredump_query", scope: !2769, file: !2769, line: 222, type: !12033, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12035)
!12033 = !DISubroutineType(types: !12034)
!12034 = !{!103, !2768, !102}
!12035 = !{!12036, !12037}
!12036 = !DILocalVariable(name: "query_id", arg: 1, scope: !12032, file: !2769, line: 222, type: !2768)
!12037 = !DILocalVariable(name: "arg", arg: 2, scope: !12032, file: !2769, line: 222, type: !102)
!12038 = !DILocation(line: 0, scope: !12032)
!12039 = !DILocation(line: 224, column: 2, scope: !12032)
!12040 = distinct !DISubprogram(name: "coredump_cmd", scope: !2769, file: !2769, line: 227, type: !12041, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12043)
!12041 = !DISubroutineType(types: !12042)
!12042 = !{!103, !2775, !102}
!12043 = !{!12044, !12045}
!12044 = !DILocalVariable(name: "query_id", arg: 1, scope: !12040, file: !2769, line: 227, type: !2775)
!12045 = !DILocalVariable(name: "arg", arg: 2, scope: !12040, file: !2769, line: 227, type: !102)
!12046 = !DILocation(line: 0, scope: !12040)
!12047 = !DILocation(line: 229, column: 2, scope: !12040)
!12048 = distinct !DISubprogram(name: "arch_system_halt", scope: !12049, file: !12049, line: 23, type: !6105, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12050)
!12049 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12050 = !{!12051}
!12051 = !DILocalVariable(name: "reason", arg: 1, scope: !12048, file: !12049, line: 23, type: !32)
!12052 = !DILocation(line: 0, scope: !12048)
!12053 = !DILocation(line: 55, column: 2, scope: !12054, inlinedAt: !12058)
!12054 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6094, file: !6094, line: 42, type: !6095, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12055)
!12055 = !{!12056, !12057}
!12056 = !DILocalVariable(name: "key", scope: !12054, file: !6094, line: 44, type: !32)
!12057 = !DILocalVariable(name: "tmp", scope: !12054, file: !6094, line: 53, type: !32)
!12058 = distinct !DILocation(line: 31, column: 8, scope: !12048)
!12059 = !{i64 1949702}
!12060 = !DILocation(line: 0, scope: !12054, inlinedAt: !12058)
!12061 = !DILocation(line: 32, column: 2, scope: !12048)
!12062 = !DILocation(line: 32, column: 2, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12064, file: !12049, line: 32, column: 2)
!12064 = distinct !DILexicalBlock(scope: !12048, file: !12049, line: 32, column: 2)
!12065 = distinct !{!12065, !12066, !12067}
!12066 = !DILocation(line: 32, column: 2, scope: !12064)
!12067 = !DILocation(line: 34, column: 2, scope: !12064)
!12068 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12049, file: !12049, line: 39, type: !12069, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12071)
!12069 = !DISubroutineType(types: !12070)
!12070 = !{null, !32, !11866}
!12071 = !{!12072, !12073}
!12072 = !DILocalVariable(name: "reason", arg: 1, scope: !12068, file: !12049, line: 39, type: !32)
!12073 = !DILocalVariable(name: "esf", arg: 2, scope: !12068, file: !12049, line: 40, type: !11866)
!12074 = !DILocation(line: 0, scope: !12068)
!12075 = !DILocation(line: 46, column: 2, scope: !12068)
!12076 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12049, file: !12049, line: 81, type: !6105, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12077)
!12077 = !{!12078}
!12078 = !DILocalVariable(name: "reason", arg: 1, scope: !12076, file: !12049, line: 81, type: !32)
!12079 = !DILocation(line: 0, scope: !12076)
!12080 = !DILocation(line: 83, column: 2, scope: !12076)
!12081 = distinct !DISubprogram(name: "z_fatal_error", scope: !12049, file: !12049, line: 96, type: !12069, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12082)
!12082 = !{!12083, !12084, !12085, !12086}
!12083 = !DILocalVariable(name: "reason", arg: 1, scope: !12081, file: !12049, line: 96, type: !32)
!12084 = !DILocalVariable(name: "esf", arg: 2, scope: !12081, file: !12049, line: 96, type: !11866)
!12085 = !DILocalVariable(name: "key", scope: !12081, file: !12049, line: 102, type: !32)
!12086 = !DILocalVariable(name: "thread", scope: !12081, file: !12049, line: 103, type: !11910)
!12087 = !DILocation(line: 0, scope: !12081)
!12088 = !DILocation(line: 55, column: 2, scope: !12054, inlinedAt: !12089)
!12089 = distinct !DILocation(line: 102, column: 21, scope: !12081)
!12090 = !DILocation(line: 0, scope: !12054, inlinedAt: !12089)
!12091 = !DILocation(line: 119, column: 11, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12081, file: !12049, line: 119, column: 6)
!12093 = !DILocation(line: 119, column: 20, scope: !12092)
!12094 = !DILocation(line: 131, column: 2, scope: !12081)
!12095 = !DILocation(line: 151, column: 7, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12097, file: !12049, line: 146, column: 32)
!12097 = distinct !DILexicalBlock(scope: !12081, file: !12049, line: 146, column: 6)
!12098 = !DILocation(line: 151, column: 21, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12096, file: !12049, line: 151, column: 7)
!12100 = !DILocation(line: 104, column: 4, scope: !12081)
!12101 = !DILocalVariable(name: "key", arg: 1, scope: !12102, file: !6094, line: 84, type: !32)
!12102 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6094, file: !6094, line: 84, type: !6105, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12103)
!12103 = !{!12101}
!12104 = !DILocation(line: 0, scope: !12102, inlinedAt: !12105)
!12105 = distinct !DILocation(line: 186, column: 2, scope: !12081)
!12106 = !DILocation(line: 95, column: 2, scope: !12102, inlinedAt: !12105)
!12107 = !{i64 1950519}
!12108 = !DILocation(line: 189, column: 3, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12110, file: !12049, line: 188, column: 41)
!12110 = distinct !DILexicalBlock(scope: !12081, file: !12049, line: 188, column: 6)
!12111 = !DILocation(line: 191, column: 1, scope: !12081)
!12112 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !12113, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !162)
!12113 = !DISubroutineType(types: !12114)
!12114 = !{!12115}
!12115 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !11910)
!12116 = !DILocation(line: 535, column: 9, scope: !12112)
!12117 = !DILocation(line: 535, column: 2, scope: !12112)
!12118 = distinct !DISubprogram(name: "k_thread_abort", scope: !3252, file: !3252, line: 188, type: !12119, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !12121)
!12119 = !DISubroutineType(types: !12120)
!12120 = !{null, !12115}
!12121 = !{!12122}
!12122 = !DILocalVariable(name: "thread", arg: 1, scope: !12118, file: !3252, line: 188, type: !12115)
!12123 = !DILocation(line: 0, scope: !12118)
!12124 = !DILocation(line: 197, column: 2, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12118, file: !3252, line: 197, column: 2)
!12126 = !{i64 2154064742}
!12127 = !DILocation(line: 198, column: 2, scope: !12118)
!12128 = !DILocation(line: 199, column: 1, scope: !12118)
!12129 = distinct !DISubprogram(name: "z_current_get", scope: !3252, file: !3252, line: 173, type: !12113, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !162)
!12130 = !DILocation(line: 180, column: 2, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12129, file: !3252, line: 180, column: 2)
!12132 = !{i64 2154064674}
!12133 = !DILocation(line: 181, column: 9, scope: !12129)
!12134 = !DILocation(line: 181, column: 2, scope: !12129)
!12135 = distinct !DISubprogram(name: "z_early_memset", scope: !1661, file: !1661, line: 108, type: !12136, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12138)
!12136 = !DISubroutineType(types: !12137)
!12137 = !{null, !102, !103, !120}
!12138 = !{!12139, !12140, !12141}
!12139 = !DILocalVariable(name: "dst", arg: 1, scope: !12135, file: !1661, line: 108, type: !102)
!12140 = !DILocalVariable(name: "c", arg: 2, scope: !12135, file: !1661, line: 108, type: !103)
!12141 = !DILocalVariable(name: "n", arg: 3, scope: !12135, file: !1661, line: 108, type: !120)
!12142 = !DILocation(line: 0, scope: !12135)
!12143 = !DILocation(line: 110, column: 9, scope: !12135)
!12144 = !DILocation(line: 111, column: 1, scope: !12135)
!12145 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1661, file: !1661, line: 121, type: !12146, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12148)
!12146 = !DISubroutineType(types: !12147)
!12147 = !{null, !102, !13, !120}
!12148 = !{!12149, !12150, !12151}
!12149 = !DILocalVariable(name: "dst", arg: 1, scope: !12145, file: !1661, line: 121, type: !102)
!12150 = !DILocalVariable(name: "src", arg: 2, scope: !12145, file: !1661, line: 121, type: !13)
!12151 = !DILocalVariable(name: "n", arg: 3, scope: !12145, file: !1661, line: 121, type: !120)
!12152 = !DILocation(line: 0, scope: !12145)
!12153 = !DILocation(line: 123, column: 9, scope: !12145)
!12154 = !DILocation(line: 124, column: 1, scope: !12145)
!12155 = distinct !DISubprogram(name: "z_bss_zero", scope: !1661, file: !1661, line: 132, type: !2802, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !162)
!12156 = !DILocation(line: 143, column: 2, scope: !12155)
!12157 = !DILocation(line: 168, column: 1, scope: !12155)
!12158 = distinct !DISubprogram(name: "z_init_cpu", scope: !1661, file: !1661, line: 372, type: !7910, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12159)
!12159 = !{!12160}
!12160 = !DILocalVariable(name: "id", arg: 1, scope: !12158, file: !1661, line: 372, type: !103)
!12161 = !DILocation(line: 0, scope: !12158)
!12162 = !DILocation(line: 374, column: 2, scope: !12158)
!12163 = !DILocation(line: 375, column: 34, scope: !12158)
!12164 = !DILocation(line: 375, column: 19, scope: !12158)
!12165 = !DILocation(line: 375, column: 31, scope: !12158)
!12166 = !DILocation(line: 376, column: 24, scope: !12158)
!12167 = !DILocation(line: 376, column: 19, scope: !12158)
!12168 = !DILocation(line: 376, column: 22, scope: !12158)
!12169 = !DILocation(line: 378, column: 26, scope: !12158)
!12170 = !DILocation(line: 378, column: 4, scope: !12158)
!12171 = !DILocation(line: 378, column: 50, scope: !12158)
!12172 = !DILocation(line: 377, column: 19, scope: !12158)
!12173 = !DILocation(line: 377, column: 29, scope: !12158)
!12174 = !DILocation(line: 384, column: 1, scope: !12158)
!12175 = distinct !DISubprogram(name: "init_idle_thread", scope: !1661, file: !1661, line: 343, type: !7910, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12176)
!12176 = !{!12177, !12178, !12179, !12182}
!12177 = !DILocalVariable(name: "i", arg: 1, scope: !12175, file: !1661, line: 343, type: !103)
!12178 = !DILocalVariable(name: "thread", scope: !12175, file: !1661, line: 345, type: !1754)
!12179 = !DILocalVariable(name: "stack", scope: !12175, file: !1661, line: 346, type: !12180)
!12180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12181, size: 32)
!12181 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3131, line: 44, baseType: !1868)
!12182 = !DILocalVariable(name: "tname", scope: !12175, file: !1661, line: 358, type: !1002)
!12183 = !DILocation(line: 0, scope: !12175)
!12184 = !DILocation(line: 345, column: 29, scope: !12175)
!12185 = !DILocation(line: 346, column: 28, scope: !12175)
!12186 = !DILocation(line: 362, column: 37, scope: !12175)
!12187 = !DILocation(line: 362, column: 36, scope: !12175)
!12188 = !DILocation(line: 361, column: 2, scope: !12175)
!12189 = !DILocation(line: 365, column: 2, scope: !12175)
!12190 = !DILocation(line: 370, column: 1, scope: !12175)
!12191 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1869, file: !1869, line: 331, type: !12192, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12194)
!12192 = !DISubroutineType(types: !12193)
!12193 = !{!1002, !12180}
!12194 = !{!12195}
!12195 = !DILocalVariable(name: "sym", arg: 1, scope: !12191, file: !1869, line: 331, type: !12180)
!12196 = !DILocation(line: 0, scope: !12191)
!12197 = !DILocation(line: 333, column: 21, scope: !12191)
!12198 = !DILocation(line: 333, column: 2, scope: !12191)
!12199 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12200, file: !12200, line: 155, type: !12201, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12203)
!12200 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12201 = !DISubroutineType(types: !12202)
!12202 = !{null, !1754}
!12203 = !{!12204}
!12204 = !DILocalVariable(name: "thread", arg: 1, scope: !12199, file: !12200, line: 155, type: !1754)
!12205 = !DILocation(line: 0, scope: !12199)
!12206 = !DILocation(line: 157, column: 15, scope: !12199)
!12207 = !DILocation(line: 157, column: 28, scope: !12199)
!12208 = !DILocation(line: 158, column: 1, scope: !12199)
!12209 = distinct !DISubprogram(name: "z_cstart", scope: !1661, file: !1661, line: 501, type: !2802, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12210)
!12210 = !{!12211}
!12211 = !DILocalVariable(name: "dummy_thread", scope: !12209, file: !1661, line: 518, type: !1755)
!12212 = !DILocation(line: 507, column: 2, scope: !12209)
!12213 = !DILocation(line: 43, column: 14, scope: !12214, inlinedAt: !12218)
!12214 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12215, file: !12215, line: 40, type: !2802, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12216)
!12215 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12216 = !{!12217}
!12217 = !DILocalVariable(name: "msp", scope: !12214, file: !12215, line: 42, type: !137)
!12218 = distinct !DILocation(line: 44, column: 2, scope: !12219, inlinedAt: !12221)
!12219 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12220, file: !12220, line: 42, type: !2802, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !162)
!12220 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12221 = distinct !DILocation(line: 510, column: 2, scope: !12209)
!12222 = !DILocation(line: 43, column: 3, scope: !12214, inlinedAt: !12218)
!12223 = !DILocation(line: 43, column: 60, scope: !12214, inlinedAt: !12218)
!12224 = !DILocation(line: 0, scope: !12214, inlinedAt: !12218)
!12225 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12226, file: !6268, line: 1153, type: !137)
!12226 = distinct !DISubprogram(name: "__set_MSP", scope: !6268, file: !6268, line: 1153, type: !6357, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12227)
!12227 = !{!12225}
!12228 = !DILocation(line: 0, scope: !12226, inlinedAt: !12229)
!12229 = distinct !DILocation(line: 46, column: 2, scope: !12214, inlinedAt: !12218)
!12230 = !DILocation(line: 1155, column: 3, scope: !12226, inlinedAt: !12229)
!12231 = !{i64 2846946}
!12232 = !DILocation(line: 62, column: 11, scope: !12214, inlinedAt: !12218)
!12233 = !DILocation(line: 102, column: 2, scope: !12234, inlinedAt: !12235)
!12234 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7060, file: !7060, line: 97, type: !2802, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !162)
!12235 = distinct !DILocation(line: 45, column: 2, scope: !12219, inlinedAt: !12221)
!12236 = !DILocation(line: 108, column: 2, scope: !12234, inlinedAt: !12235)
!12237 = !DILocation(line: 112, column: 2, scope: !12234, inlinedAt: !12235)
!12238 = !DILocation(line: 113, column: 2, scope: !12234, inlinedAt: !12235)
!12239 = !DILocation(line: 114, column: 2, scope: !12234, inlinedAt: !12235)
!12240 = !DILocation(line: 116, column: 2, scope: !12234, inlinedAt: !12235)
!12241 = !DILocation(line: 123, column: 13, scope: !12234, inlinedAt: !12235)
!12242 = !DILocation(line: 46, column: 2, scope: !12219, inlinedAt: !12221)
!12243 = !DILocation(line: 47, column: 2, scope: !12219, inlinedAt: !12221)
!12244 = !DILocation(line: 174, column: 12, scope: !12245, inlinedAt: !12246)
!12245 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7060, file: !7060, line: 169, type: !2802, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !162)
!12246 = distinct !DILocation(line: 48, column: 2, scope: !12219, inlinedAt: !12221)
!12247 = !DILocation(line: 179, column: 12, scope: !12245, inlinedAt: !12246)
!12248 = !DILocation(line: 50, column: 2, scope: !12219, inlinedAt: !12221)
!12249 = !DILocation(line: 57, column: 2, scope: !12219, inlinedAt: !12221)
!12250 = !DILocation(line: 518, column: 2, scope: !12209)
!12251 = !DILocation(line: 518, column: 18, scope: !12209)
!12252 = !DILocation(line: 520, column: 2, scope: !12209)
!12253 = !DILocation(line: 523, column: 2, scope: !12209)
!12254 = !DILocation(line: 526, column: 2, scope: !12209)
!12255 = !DILocation(line: 527, column: 2, scope: !12209)
!12256 = !DILocation(line: 543, column: 24, scope: !12209)
!12257 = !DILocation(line: 543, column: 2, scope: !12209)
!12258 = !DILocation(line: 0, scope: !1888)
!12259 = !DILocation(line: 246, column: 15, scope: !1906)
!12260 = !DILocation(line: 246, column: 36, scope: !1905)
!12261 = !DILocation(line: 246, column: 2, scope: !1906)
!12262 = !DILocation(line: 247, column: 37, scope: !1904)
!12263 = !DILocation(line: 0, scope: !1904)
!12264 = !DILocation(line: 248, column: 19, scope: !1904)
!12265 = !DILocation(line: 248, column: 12, scope: !1904)
!12266 = !DILocation(line: 250, column: 11, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !1904, file: !1661, line: 250, column: 7)
!12268 = !DILocation(line: 250, column: 7, scope: !1904)
!12269 = !DILocation(line: 254, column: 11, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12271, file: !1661, line: 254, column: 8)
!12271 = distinct !DILexicalBlock(scope: !12267, file: !1661, line: 250, column: 20)
!12272 = !DILocation(line: 254, column: 8, scope: !12271)
!12273 = !DILocation(line: 255, column: 9, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12270, file: !1661, line: 254, column: 17)
!12275 = !DILocation(line: 258, column: 9, scope: !12274)
!12276 = !DILocation(line: 261, column: 28, scope: !12274)
!12277 = !DILocation(line: 261, column: 10, scope: !12274)
!12278 = !DILocation(line: 261, column: 17, scope: !12274)
!12279 = !DILocation(line: 261, column: 26, scope: !12274)
!12280 = !DILocation(line: 262, column: 4, scope: !12274)
!12281 = !DILocation(line: 263, column: 9, scope: !12271)
!12282 = !DILocation(line: 263, column: 16, scope: !12271)
!12283 = !DILocation(line: 263, column: 28, scope: !12271)
!12284 = !DILocation(line: 264, column: 3, scope: !12271)
!12285 = !DILocation(line: 246, column: 60, scope: !1905)
!12286 = distinct !{!12286, !12261, !12287}
!12287 = !DILocation(line: 265, column: 2, scope: !1906)
!12288 = !DILocation(line: 266, column: 1, scope: !1888)
!12289 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6302, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12290)
!12290 = !{!12291, !12292}
!12291 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12289, file: !402, line: 1814, type: !638)
!12292 = !DILocalVariable(name: "priority", arg: 2, scope: !12289, file: !402, line: 1814, type: !137)
!12293 = !DILocation(line: 0, scope: !12289)
!12294 = !DILocation(line: 1822, column: 48, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12296, file: !402, line: 1821, column: 3)
!12296 = distinct !DILexicalBlock(scope: !12289, file: !402, line: 1816, column: 7)
!12297 = !DILocation(line: 1822, column: 32, scope: !12295)
!12298 = !DILocation(line: 1822, column: 40, scope: !12295)
!12299 = !DILocation(line: 1822, column: 5, scope: !12295)
!12300 = !DILocation(line: 1822, column: 46, scope: !12295)
!12301 = !DILocation(line: 1824, column: 1, scope: !12289)
!12302 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12220, file: !12220, line: 32, type: !2802, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12303 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12304, file: !12304, line: 215, type: !12201, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12305)
!12304 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12305 = !{!12306}
!12306 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12303, file: !12304, line: 215, type: !1754)
!12307 = !DILocation(line: 0, scope: !12303)
!12308 = !DILocation(line: 217, column: 21, scope: !12303)
!12309 = !DILocation(line: 217, column: 34, scope: !12303)
!12310 = !DILocation(line: 221, column: 21, scope: !12303)
!12311 = !DILocation(line: 221, column: 34, scope: !12303)
!12312 = !DILocation(line: 223, column: 27, scope: !12303)
!12313 = !DILocation(line: 223, column: 33, scope: !12303)
!12314 = !DILocation(line: 224, column: 27, scope: !12303)
!12315 = !DILocation(line: 224, column: 32, scope: !12303)
!12316 = !DILocation(line: 232, column: 16, scope: !12303)
!12317 = !DILocation(line: 232, column: 30, scope: !12303)
!12318 = !DILocation(line: 239, column: 24, scope: !12303)
!12319 = !DILocation(line: 240, column: 1, scope: !12303)
!12320 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1661, file: !1661, line: 399, type: !12321, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12323)
!12321 = !DISubroutineType(types: !12322)
!12322 = !{!1002}
!12323 = !{!12324}
!12324 = !DILocalVariable(name: "stack_ptr", scope: !12320, file: !1661, line: 401, type: !1002)
!12325 = !DILocation(line: 404, column: 2, scope: !12320)
!12326 = !DILocation(line: 416, column: 24, scope: !12320)
!12327 = !DILocation(line: 418, column: 14, scope: !12320)
!12328 = !DILocation(line: 0, scope: !12320)
!12329 = !DILocation(line: 423, column: 2, scope: !12320)
!12330 = !DILocation(line: 424, column: 2, scope: !12320)
!12331 = !DILocation(line: 426, column: 2, scope: !12320)
!12332 = !DILocation(line: 428, column: 2, scope: !12320)
!12333 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1661, file: !1661, line: 432, type: !12334, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12336)
!12334 = !DISubroutineType(types: !12335)
!12335 = !{null, !1002}
!12336 = !{!12337}
!12337 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12333, file: !1661, line: 432, type: !1002)
!12338 = !DILocation(line: 0, scope: !12333)
!12339 = !DILocation(line: 435, column: 2, scope: !12333)
!12340 = !DILocation(line: 445, column: 2, scope: !12333)
!12341 = distinct !DISubprogram(name: "bg_thread_main", scope: !1661, file: !1661, line: 277, type: !3133, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !12342)
!12342 = !{!12343, !12344, !12345}
!12343 = !DILocalVariable(name: "unused1", arg: 1, scope: !12341, file: !1661, line: 277, type: !102)
!12344 = !DILocalVariable(name: "unused2", arg: 2, scope: !12341, file: !1661, line: 277, type: !102)
!12345 = !DILocalVariable(name: "unused3", arg: 3, scope: !12341, file: !1661, line: 277, type: !102)
!12346 = !DILocation(line: 0, scope: !12341)
!12347 = !DILocation(line: 291, column: 20, scope: !12341)
!12348 = !DILocation(line: 293, column: 2, scope: !12341)
!12349 = !DILocation(line: 297, column: 2, scope: !12341)
!12350 = !DILocation(line: 305, column: 2, scope: !12341)
!12351 = !DILocation(line: 307, column: 2, scope: !12341)
!12352 = !DILocation(line: 330, column: 8, scope: !12341)
!12353 = !DILocation(line: 333, column: 34, scope: !12341)
!12354 = !DILocation(line: 339, column: 1, scope: !12341)
!12355 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1917, file: !1917, line: 45, type: !12356, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12364)
!12356 = !DISubroutineType(types: !12357)
!12357 = !{null, !12358, !102}
!12358 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !357, line: 103, baseType: !12359)
!12359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12360, size: 32)
!12360 = !DISubroutineType(types: !12361)
!12361 = !{null, !12362, !102}
!12362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12363, size: 32)
!12363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1922)
!12364 = !{!12365, !12366}
!12365 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12355, file: !1917, line: 45, type: !12358)
!12366 = !DILocalVariable(name: "user_data", arg: 2, scope: !12355, file: !1917, line: 45, type: !102)
!12367 = !DILocation(line: 0, scope: !12355)
!12368 = !DILocation(line: 71, column: 1, scope: !12355)
!12369 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1917, file: !1917, line: 73, type: !12356, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12370)
!12370 = !{!12371, !12372}
!12371 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12369, file: !1917, line: 73, type: !12358)
!12372 = !DILocalVariable(name: "user_data", arg: 2, scope: !12369, file: !1917, line: 73, type: !102)
!12373 = !DILocation(line: 0, scope: !12369)
!12374 = !DILocation(line: 95, column: 1, scope: !12369)
!12375 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1917, file: !1917, line: 97, type: !7061, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !162)
!12376 = !DILocation(line: 1031, column: 3, scope: !12377, inlinedAt: !12380)
!12377 = distinct !DISubprogram(name: "__get_IPSR", scope: !6268, file: !6268, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12378)
!12378 = !{!12379}
!12379 = !DILocalVariable(name: "result", scope: !12377, file: !6268, line: 1029, type: !137)
!12380 = distinct !DILocation(line: 48, column: 10, scope: !12381, inlinedAt: !12382)
!12381 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7060, file: !7060, line: 46, type: !7061, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !162)
!12382 = distinct !DILocation(line: 99, column: 9, scope: !12375)
!12383 = !{i64 2852597}
!12384 = !DILocation(line: 0, scope: !12377, inlinedAt: !12380)
!12385 = !DILocation(line: 48, column: 9, scope: !12381, inlinedAt: !12382)
!12386 = !DILocation(line: 99, column: 2, scope: !12375)
!12387 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1917, file: !1917, line: 106, type: !2802, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !162)
!12388 = !DILocation(line: 108, column: 2, scope: !12387)
!12389 = !DILocation(line: 108, column: 17, scope: !12387)
!12390 = !DILocation(line: 108, column: 30, scope: !12387)
!12391 = !DILocation(line: 109, column: 1, scope: !12387)
!12392 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1917, file: !1917, line: 116, type: !2802, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !162)
!12393 = !DILocation(line: 118, column: 2, scope: !12392)
!12394 = !DILocation(line: 118, column: 17, scope: !12392)
!12395 = !DILocation(line: 118, column: 30, scope: !12392)
!12396 = !DILocation(line: 119, column: 1, scope: !12392)
!12397 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1917, file: !1917, line: 126, type: !7061, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !162)
!12398 = !DILocation(line: 128, column: 10, scope: !12397)
!12399 = !DILocation(line: 128, column: 25, scope: !12397)
!12400 = !DILocation(line: 128, column: 38, scope: !12397)
!12401 = !DILocation(line: 128, column: 53, scope: !12397)
!12402 = !DILocation(line: 128, column: 2, scope: !12397)
!12403 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1917, file: !1917, line: 187, type: !12404, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12406)
!12404 = !DISubroutineType(types: !12405)
!12405 = !{!103, !1921, !199}
!12406 = !{!12407, !12408}
!12407 = !DILocalVariable(name: "thread", arg: 1, scope: !12403, file: !1917, line: 187, type: !1921)
!12408 = !DILocalVariable(name: "value", arg: 2, scope: !12403, file: !1917, line: 187, type: !199)
!12409 = !DILocation(line: 0, scope: !12403)
!12410 = !DILocation(line: 206, column: 2, scope: !12403)
!12411 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1917, file: !1917, line: 238, type: !12412, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12414)
!12412 = !DISubroutineType(types: !12413)
!12413 = !{!199, !1921}
!12414 = !{!12415}
!12415 = !DILocalVariable(name: "thread", arg: 1, scope: !12411, file: !1917, line: 238, type: !1921)
!12416 = !DILocation(line: 0, scope: !12411)
!12417 = !DILocation(line: 244, column: 2, scope: !12411)
!12418 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1917, file: !1917, line: 248, type: !12419, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12421)
!12419 = !DISubroutineType(types: !12420)
!12420 = !{!103, !1920, !1002, !120}
!12421 = !{!12422, !12423, !12424}
!12422 = !DILocalVariable(name: "thread", arg: 1, scope: !12418, file: !1917, line: 248, type: !1920)
!12423 = !DILocalVariable(name: "buf", arg: 2, scope: !12418, file: !1917, line: 248, type: !1002)
!12424 = !DILocalVariable(name: "size", arg: 3, scope: !12418, file: !1917, line: 248, type: !120)
!12425 = !DILocation(line: 0, scope: !12418)
!12426 = !DILocation(line: 257, column: 2, scope: !12418)
!12427 = !DILocation(line: 0, scope: !1916)
!12428 = !DILocation(line: 281, column: 11, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !1916, file: !1917, line: 281, column: 6)
!12430 = !DILocation(line: 281, column: 20, scope: !12429)
!12431 = !DILocation(line: 275, column: 45, scope: !1916)
!12432 = !DILocation(line: 285, column: 10, scope: !1916)
!12433 = !DILocation(line: 0, scope: !2037)
!12434 = !DILocation(line: 293, column: 39, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !2037, file: !1917, line: 293, column: 2)
!12436 = !DILocation(line: 293, column: 2, scope: !2037)
!12437 = !DILocation(line: 273, column: 14, scope: !1916)
!12438 = !DILocation(line: 309, column: 2, scope: !1916)
!12439 = !DILocation(line: 309, column: 11, scope: !1916)
!12440 = !DILocation(line: 311, column: 2, scope: !1916)
!12441 = !DILocation(line: 293, column: 26, scope: !12435)
!12442 = !DILocation(line: 294, column: 9, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12435, file: !1917, line: 293, column: 54)
!12444 = !DILocation(line: 295, column: 21, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12443, file: !1917, line: 295, column: 7)
!12446 = !DILocation(line: 295, column: 28, scope: !12445)
!12447 = !DILocation(line: 295, column: 7, scope: !12443)
!12448 = !DILocation(line: 299, column: 25, scope: !12443)
!12449 = !DILocation(line: 299, column: 41, scope: !12443)
!12450 = !DILocation(line: 300, column: 7, scope: !12443)
!12451 = !DILocation(line: 300, column: 26, scope: !12443)
!12452 = !DILocation(line: 299, column: 10, scope: !12443)
!12453 = !DILocation(line: 299, column: 7, scope: !12443)
!12454 = !DILocation(line: 302, column: 16, scope: !12443)
!12455 = !DILocation(line: 304, column: 20, scope: !12456)
!12456 = distinct !DILexicalBlock(scope: !12443, file: !1917, line: 304, column: 7)
!12457 = !DILocation(line: 304, column: 7, scope: !12443)
!12458 = !DILocation(line: 305, column: 26, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12456, file: !1917, line: 304, column: 26)
!12460 = !DILocation(line: 305, column: 42, scope: !12459)
!12461 = !DILocation(line: 305, column: 11, scope: !12459)
!12462 = !DILocation(line: 305, column: 8, scope: !12459)
!12463 = !DILocation(line: 306, column: 3, scope: !12459)
!12464 = !DILocation(line: 293, column: 50, scope: !12435)
!12465 = !DILocation(line: 312, column: 1, scope: !1916)
!12466 = distinct !DISubprogram(name: "copy_bytes", scope: !1917, file: !1917, line: 261, type: !12467, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12469)
!12467 = !DISubroutineType(types: !12468)
!12468 = !{!120, !1002, !120, !199, !120}
!12469 = !{!12470, !12471, !12472, !12473, !12474}
!12470 = !DILocalVariable(name: "dest", arg: 1, scope: !12466, file: !1917, line: 261, type: !1002)
!12471 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12466, file: !1917, line: 261, type: !120)
!12472 = !DILocalVariable(name: "src", arg: 3, scope: !12466, file: !1917, line: 261, type: !199)
!12473 = !DILocalVariable(name: "src_size", arg: 4, scope: !12466, file: !1917, line: 261, type: !120)
!12474 = !DILocalVariable(name: "bytes_to_copy", scope: !12466, file: !1917, line: 263, type: !120)
!12475 = !DILocation(line: 0, scope: !12466)
!12476 = !DILocation(line: 265, column: 18, scope: !12466)
!12477 = !DILocation(line: 266, column: 2, scope: !12466)
!12478 = !DILocation(line: 268, column: 2, scope: !12466)
!12479 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1917, file: !1917, line: 383, type: !12480, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12482)
!12480 = !DISubroutineType(types: !12481)
!12481 = !{null, !1921}
!12482 = !{!12483}
!12483 = !DILocalVariable(name: "thread", arg: 1, scope: !12479, file: !1917, line: 383, type: !1921)
!12484 = !DILocation(line: 0, scope: !12479)
!12485 = !DILocation(line: 387, column: 2, scope: !12479)
!12486 = !DILocation(line: 388, column: 1, scope: !12479)
!12487 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1917, file: !1917, line: 528, type: !12488, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12495)
!12488 = !DISubroutineType(types: !12489)
!12489 = !{!1002, !1921, !12490, !120, !3130, !102, !102, !102, !103, !137, !199}
!12490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12491, size: 32)
!12491 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3131, line: 44, baseType: !12492)
!12492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1869, line: 47, size: 8, elements: !12493)
!12493 = !{!12494}
!12494 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12492, file: !1869, line: 48, baseType: !109, size: 8)
!12495 = !{!12496, !12497, !12498, !12499, !12500, !12501, !12502, !12503, !12504, !12505, !12506}
!12496 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12487, file: !1917, line: 528, type: !1921)
!12497 = !DILocalVariable(name: "stack", arg: 2, scope: !12487, file: !1917, line: 529, type: !12490)
!12498 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12487, file: !1917, line: 529, type: !120)
!12499 = !DILocalVariable(name: "entry", arg: 4, scope: !12487, file: !1917, line: 530, type: !3130)
!12500 = !DILocalVariable(name: "p1", arg: 5, scope: !12487, file: !1917, line: 531, type: !102)
!12501 = !DILocalVariable(name: "p2", arg: 6, scope: !12487, file: !1917, line: 531, type: !102)
!12502 = !DILocalVariable(name: "p3", arg: 7, scope: !12487, file: !1917, line: 531, type: !102)
!12503 = !DILocalVariable(name: "prio", arg: 8, scope: !12487, file: !1917, line: 532, type: !103)
!12504 = !DILocalVariable(name: "options", arg: 9, scope: !12487, file: !1917, line: 532, type: !137)
!12505 = !DILocalVariable(name: "name", arg: 10, scope: !12487, file: !1917, line: 532, type: !199)
!12506 = !DILocalVariable(name: "stack_ptr", scope: !12487, file: !1917, line: 534, type: !1002)
!12507 = !DILocation(line: 0, scope: !12487)
!12508 = !DILocation(line: 550, column: 28, scope: !12487)
!12509 = !DILocation(line: 550, column: 2, scope: !12487)
!12510 = !DILocation(line: 553, column: 34, scope: !12487)
!12511 = !DILocation(line: 553, column: 2, scope: !12487)
!12512 = !DILocation(line: 554, column: 14, scope: !12487)
!12513 = !DILocation(line: 564, column: 2, scope: !12487)
!12514 = !DILocation(line: 567, column: 14, scope: !12487)
!12515 = !DILocation(line: 567, column: 24, scope: !12487)
!12516 = !DILocation(line: 612, column: 7, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12487, file: !1917, line: 612, column: 6)
!12518 = !DILocation(line: 612, column: 6, scope: !12487)
!12519 = !DILocation(line: 627, column: 40, scope: !12487)
!12520 = !DILocation(line: 637, column: 2, scope: !12487)
!12521 = !DILocation(line: 613, column: 15, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12517, file: !1917, line: 612, column: 17)
!12523 = !DILocation(line: 613, column: 29, scope: !12522)
!12524 = !DILocation(line: 638, column: 1, scope: !12487)
!12525 = distinct !DISubprogram(name: "z_waitq_init", scope: !12526, file: !12526, line: 47, type: !12527, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12529)
!12526 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12527 = !DISubroutineType(types: !12528)
!12528 = !{null, !1952}
!12529 = !{!12530}
!12530 = !DILocalVariable(name: "w", arg: 1, scope: !12525, file: !12526, line: 47, type: !1952)
!12531 = !DILocation(line: 0, scope: !12525)
!12532 = !DILocation(line: 49, column: 21, scope: !12525)
!12533 = !DILocation(line: 49, column: 2, scope: !12525)
!12534 = !DILocation(line: 50, column: 1, scope: !12525)
!12535 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1917, file: !1917, line: 791, type: !12536, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12539)
!12536 = !DISubroutineType(types: !12537)
!12537 = !{null, !12538, !103, !137, !32}
!12538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!12539 = !{!12540, !12541, !12542, !12543}
!12540 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12535, file: !1917, line: 791, type: !12538)
!12541 = !DILocalVariable(name: "priority", arg: 2, scope: !12535, file: !1917, line: 791, type: !103)
!12542 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12535, file: !1917, line: 792, type: !137)
!12543 = !DILocalVariable(name: "options", arg: 4, scope: !12535, file: !1917, line: 792, type: !32)
!12544 = !DILocation(line: 0, scope: !12535)
!12545 = !DILocation(line: 795, column: 15, scope: !12535)
!12546 = !DILocation(line: 795, column: 25, scope: !12535)
!12547 = !DILocation(line: 796, column: 30, scope: !12535)
!12548 = !DILocation(line: 796, column: 15, scope: !12535)
!12549 = !DILocation(line: 796, column: 28, scope: !12535)
!12550 = !DILocation(line: 797, column: 30, scope: !12535)
!12551 = !DILocation(line: 797, column: 15, scope: !12535)
!12552 = !DILocation(line: 797, column: 28, scope: !12535)
!12553 = !DILocation(line: 799, column: 22, scope: !12535)
!12554 = !DILocation(line: 799, column: 15, scope: !12535)
!12555 = !DILocation(line: 799, column: 20, scope: !12535)
!12556 = !DILocation(line: 801, column: 15, scope: !12535)
!12557 = !DILocation(line: 801, column: 28, scope: !12535)
!12558 = !DILocation(line: 814, column: 2, scope: !12535)
!12559 = !DILocation(line: 815, column: 1, scope: !12535)
!12560 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1917, file: !1917, line: 449, type: !12561, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12563)
!12561 = !DISubroutineType(types: !12562)
!12562 = !{!1002, !1921, !12490, !120}
!12563 = !{!12564, !12565, !12566, !12567, !12568, !12569, !12570, !12571}
!12564 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12560, file: !1917, line: 449, type: !1921)
!12565 = !DILocalVariable(name: "stack", arg: 2, scope: !12560, file: !1917, line: 450, type: !12490)
!12566 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12560, file: !1917, line: 450, type: !120)
!12567 = !DILocalVariable(name: "stack_obj_size", scope: !12560, file: !1917, line: 452, type: !120)
!12568 = !DILocalVariable(name: "stack_buf_size", scope: !12560, file: !1917, line: 452, type: !120)
!12569 = !DILocalVariable(name: "stack_ptr", scope: !12560, file: !1917, line: 453, type: !1002)
!12570 = !DILocalVariable(name: "stack_buf_start", scope: !12560, file: !1917, line: 453, type: !1002)
!12571 = !DILocalVariable(name: "delta", scope: !12560, file: !1917, line: 454, type: !120)
!12572 = !DILocation(line: 0, scope: !12560)
!12573 = !DILocation(line: 465, column: 20, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12560, file: !1917, line: 463, column: 2)
!12575 = !DILocation(line: 466, column: 21, scope: !12574)
!12576 = !DILocation(line: 473, column: 28, scope: !12560)
!12577 = !DILocation(line: 514, column: 33, scope: !12560)
!12578 = !DILocation(line: 514, column: 25, scope: !12560)
!12579 = !DILocation(line: 514, column: 31, scope: !12560)
!12580 = !DILocation(line: 515, column: 25, scope: !12560)
!12581 = !DILocation(line: 515, column: 30, scope: !12560)
!12582 = !DILocation(line: 516, column: 25, scope: !12560)
!12583 = !DILocation(line: 516, column: 31, scope: !12560)
!12584 = !DILocation(line: 520, column: 2, scope: !12560)
!12585 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1869, file: !1869, line: 331, type: !12586, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12588)
!12586 = !DISubroutineType(types: !12587)
!12587 = !{!1002, !12490}
!12588 = !{!12589}
!12589 = !DILocalVariable(name: "sym", arg: 1, scope: !12585, file: !1869, line: 331, type: !12490)
!12590 = !DILocation(line: 0, scope: !12585)
!12591 = !DILocation(line: 333, column: 21, scope: !12585)
!12592 = !DILocation(line: 333, column: 2, scope: !12585)
!12593 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12594, file: !12594, line: 40, type: !12595, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12597)
!12594 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12595 = !DISubroutineType(types: !12596)
!12596 = !{null, !12538}
!12597 = !{!12598}
!12598 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12593, file: !12594, line: 40, type: !12538)
!12599 = !DILocation(line: 0, scope: !12593)
!12600 = !DILocation(line: 42, column: 31, scope: !12593)
!12601 = !DILocation(line: 42, column: 2, scope: !12593)
!12602 = !DILocation(line: 43, column: 1, scope: !12593)
!12603 = distinct !DISubprogram(name: "z_init_timeout", scope: !12594, file: !12594, line: 25, type: !1978, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12604)
!12604 = !{!12605}
!12605 = !DILocalVariable(name: "to", arg: 1, scope: !12603, file: !12594, line: 25, type: !1980)
!12606 = !DILocation(line: 0, scope: !12603)
!12607 = !DILocation(line: 27, column: 22, scope: !12603)
!12608 = !DILocation(line: 27, column: 2, scope: !12603)
!12609 = !DILocation(line: 28, column: 1, scope: !12603)
!12610 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !12611, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12613)
!12611 = !DISubroutineType(types: !12612)
!12612 = !{null, !2024}
!12613 = !{!12614}
!12614 = !DILocalVariable(name: "node", arg: 1, scope: !12610, file: !273, line: 211, type: !2024)
!12615 = !DILocation(line: 0, scope: !12610)
!12616 = !DILocation(line: 213, column: 8, scope: !12610)
!12617 = !DILocation(line: 213, column: 13, scope: !12610)
!12618 = !DILocation(line: 214, column: 8, scope: !12610)
!12619 = !DILocation(line: 214, column: 13, scope: !12610)
!12620 = !DILocation(line: 215, column: 1, scope: !12610)
!12621 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !12622, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12625)
!12622 = !DISubroutineType(types: !12623)
!12623 = !{null, !12624}
!12624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!12625 = !{!12626}
!12626 = !DILocalVariable(name: "list", arg: 1, scope: !12621, file: !273, line: 197, type: !12624)
!12627 = !DILocation(line: 0, scope: !12621)
!12628 = !DILocation(line: 199, column: 8, scope: !12621)
!12629 = !DILocation(line: 199, column: 13, scope: !12621)
!12630 = !DILocation(line: 200, column: 8, scope: !12621)
!12631 = !DILocation(line: 200, column: 13, scope: !12621)
!12632 = !DILocation(line: 201, column: 1, scope: !12621)
!12633 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1917, file: !1917, line: 641, type: !12634, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12640)
!12634 = !DISubroutineType(types: !12635)
!12635 = !{!1920, !1921, !12490, !120, !3130, !102, !102, !102, !103, !137, !12636}
!12636 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1400, line: 67, baseType: !12637)
!12637 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1400, line: 65, size: 64, elements: !12638)
!12638 = !{!12639}
!12639 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12637, file: !1400, line: 66, baseType: !1399, size: 64)
!12640 = !{!12641, !12642, !12643, !12644, !12645, !12646, !12647, !12648, !12649, !12650}
!12641 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12633, file: !1917, line: 641, type: !1921)
!12642 = !DILocalVariable(name: "stack", arg: 2, scope: !12633, file: !1917, line: 642, type: !12490)
!12643 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12633, file: !1917, line: 643, type: !120)
!12644 = !DILocalVariable(name: "entry", arg: 4, scope: !12633, file: !1917, line: 643, type: !3130)
!12645 = !DILocalVariable(name: "p1", arg: 5, scope: !12633, file: !1917, line: 644, type: !102)
!12646 = !DILocalVariable(name: "p2", arg: 6, scope: !12633, file: !1917, line: 644, type: !102)
!12647 = !DILocalVariable(name: "p3", arg: 7, scope: !12633, file: !1917, line: 644, type: !102)
!12648 = !DILocalVariable(name: "prio", arg: 8, scope: !12633, file: !1917, line: 645, type: !103)
!12649 = !DILocalVariable(name: "options", arg: 9, scope: !12633, file: !1917, line: 645, type: !137)
!12650 = !DILocalVariable(name: "delay", arg: 10, scope: !12633, file: !1917, line: 645, type: !12636)
!12651 = !DILocation(line: 0, scope: !12633)
!12652 = !DILocation(line: 649, column: 2, scope: !12633)
!12653 = !DILocation(line: 652, column: 7, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12633, file: !1917, line: 652, column: 6)
!12655 = !DILocation(line: 652, column: 6, scope: !12633)
!12656 = !DILocation(line: 653, column: 3, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12654, file: !1917, line: 652, column: 39)
!12658 = !DILocation(line: 654, column: 2, scope: !12657)
!12659 = !DILocation(line: 656, column: 2, scope: !12633)
!12660 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1917, file: !1917, line: 401, type: !12661, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12663)
!12661 = !DISubroutineType(types: !12662)
!12662 = !{null, !1921, !12636}
!12663 = !{!12664, !12665}
!12664 = !DILocalVariable(name: "thread", arg: 1, scope: !12660, file: !1917, line: 401, type: !1921)
!12665 = !DILocalVariable(name: "delay", arg: 2, scope: !12660, file: !1917, line: 401, type: !12636)
!12666 = !DILocation(line: 0, scope: !12660)
!12667 = !DILocation(line: 404, column: 6, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12660, file: !1917, line: 404, column: 6)
!12669 = !DILocation(line: 404, column: 6, scope: !12660)
!12670 = !DILocation(line: 405, column: 3, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12668, file: !1917, line: 404, column: 38)
!12672 = !DILocation(line: 406, column: 2, scope: !12671)
!12673 = !DILocation(line: 407, column: 3, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12668, file: !1917, line: 406, column: 9)
!12675 = !DILocation(line: 413, column: 1, scope: !12660)
!12676 = distinct !DISubprogram(name: "k_thread_start", scope: !3252, file: !3252, line: 205, type: !12677, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12679)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{null, !1920}
!12679 = !{!12680}
!12680 = !DILocalVariable(name: "thread", arg: 1, scope: !12676, file: !3252, line: 205, type: !1920)
!12681 = !DILocation(line: 0, scope: !12676)
!12682 = !DILocation(line: 214, column: 2, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12676, file: !3252, line: 214, column: 2)
!12684 = !{i64 2154089966}
!12685 = !DILocation(line: 215, column: 2, scope: !12676)
!12686 = !DILocation(line: 216, column: 1, scope: !12676)
!12687 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12594, file: !12594, line: 47, type: !12661, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12688)
!12688 = !{!12689, !12690}
!12689 = !DILocalVariable(name: "thread", arg: 1, scope: !12687, file: !12594, line: 47, type: !1921)
!12690 = !DILocalVariable(name: "ticks", arg: 2, scope: !12687, file: !12594, line: 47, type: !12636)
!12691 = !DILocation(line: 0, scope: !12687)
!12692 = !DILocation(line: 49, column: 30, scope: !12687)
!12693 = !DILocation(line: 49, column: 2, scope: !12687)
!12694 = !DILocation(line: 50, column: 1, scope: !12687)
!12695 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1917, file: !1917, line: 748, type: !2802, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12696)
!12696 = !{!12697, !12715}
!12697 = !DILocalVariable(name: "thread_data", scope: !12698, file: !1917, line: 750, type: !12699)
!12698 = distinct !DILexicalBlock(scope: !12695, file: !1917, line: 750, column: 2)
!12699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12700, size: 32)
!12700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !357, line: 620, size: 384, elements: !12701)
!12701 = !{!12702, !12703, !12704, !12705, !12706, !12707, !12708, !12709, !12710, !12711, !12712, !12714}
!12702 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12700, file: !357, line: 621, baseType: !1921, size: 32)
!12703 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12700, file: !357, line: 622, baseType: !12490, size: 32, offset: 32)
!12704 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12700, file: !357, line: 623, baseType: !32, size: 32, offset: 64)
!12705 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12700, file: !357, line: 624, baseType: !3130, size: 32, offset: 96)
!12706 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12700, file: !357, line: 625, baseType: !102, size: 32, offset: 128)
!12707 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12700, file: !357, line: 626, baseType: !102, size: 32, offset: 160)
!12708 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12700, file: !357, line: 627, baseType: !102, size: 32, offset: 192)
!12709 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12700, file: !357, line: 628, baseType: !103, size: 32, offset: 224)
!12710 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12700, file: !357, line: 629, baseType: !137, size: 32, offset: 256)
!12711 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12700, file: !357, line: 630, baseType: !612, size: 32, offset: 288)
!12712 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12700, file: !357, line: 631, baseType: !12713, size: 32, offset: 320)
!12713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 32)
!12714 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12700, file: !357, line: 632, baseType: !199, size: 32, offset: 352)
!12715 = !DILocalVariable(name: "thread_data", scope: !12716, file: !1917, line: 781, type: !12699)
!12716 = distinct !DILexicalBlock(scope: !12695, file: !1917, line: 781, column: 2)
!12717 = !DILocation(line: 0, scope: !12698)
!12718 = !DILocation(line: 750, column: 2, scope: !12698)
!12719 = !DILocation(line: 780, column: 2, scope: !12695)
!12720 = !DILocation(line: 0, scope: !12716)
!12721 = !DILocation(line: 781, column: 2, scope: !12716)
!12722 = !DILocation(line: 752, column: 17, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12724, file: !1917, line: 750, column: 38)
!12724 = distinct !DILexicalBlock(scope: !12698, file: !1917, line: 750, column: 2)
!12725 = !DILocation(line: 753, column: 17, scope: !12723)
!12726 = !DILocation(line: 754, column: 17, scope: !12723)
!12727 = !DILocation(line: 755, column: 17, scope: !12723)
!12728 = !DILocation(line: 756, column: 17, scope: !12723)
!12729 = !DILocation(line: 757, column: 17, scope: !12723)
!12730 = !DILocation(line: 758, column: 17, scope: !12723)
!12731 = !DILocation(line: 759, column: 17, scope: !12723)
!12732 = !DILocation(line: 760, column: 17, scope: !12723)
!12733 = !DILocation(line: 751, column: 3, scope: !12723)
!12734 = !DILocation(line: 763, column: 16, scope: !12723)
!12735 = !DILocation(line: 763, column: 29, scope: !12723)
!12736 = !DILocation(line: 763, column: 39, scope: !12723)
!12737 = !DILocation(line: 750, column: 2, scope: !12724)
!12738 = !DILocation(line: 750, column: 2, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12724, file: !1917, line: 750, column: 2)
!12740 = distinct !{!12740, !12718, !12741}
!12741 = !DILocation(line: 764, column: 2, scope: !12698)
!12742 = !DILocation(line: 787, column: 2, scope: !12695)
!12743 = !DILocation(line: 788, column: 1, scope: !12695)
!12744 = !DILocation(line: 782, column: 20, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12746, file: !1917, line: 782, column: 7)
!12746 = distinct !DILexicalBlock(scope: !12747, file: !1917, line: 781, column: 38)
!12747 = distinct !DILexicalBlock(scope: !12716, file: !1917, line: 781, column: 2)
!12748 = !DILocation(line: 782, column: 31, scope: !12745)
!12749 = !DILocation(line: 782, column: 7, scope: !12746)
!12750 = !DILocation(line: 783, column: 37, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12745, file: !1917, line: 782, column: 51)
!12752 = !DILocation(line: 784, column: 10, scope: !12751)
!12753 = !DILocation(line: 783, column: 4, scope: !12751)
!12754 = !DILocation(line: 785, column: 3, scope: !12751)
!12755 = !DILocation(line: 781, column: 2, scope: !12747)
!12756 = !DILocation(line: 781, column: 2, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12747, file: !1917, line: 781, column: 2)
!12758 = distinct !{!12758, !12721, !12759}
!12759 = !DILocation(line: 786, column: 2, scope: !12716)
!12760 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12761, file: !12761, line: 403, type: !12762, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12764)
!12761 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12762 = !DISubroutineType(types: !12763)
!12763 = !{!163, !163}
!12764 = !{!12765}
!12765 = !DILocalVariable(name: "t", arg: 1, scope: !12760, file: !12761, line: 403, type: !163)
!12766 = !DILocation(line: 0, scope: !12760)
!12767 = !DILocalVariable(name: "t", arg: 1, scope: !12768, file: !12761, line: 102, type: !163)
!12768 = distinct !DISubprogram(name: "z_tmcvt", scope: !12761, file: !12761, line: 102, type: !12769, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12771)
!12769 = !DISubroutineType(types: !12770)
!12770 = !{!163, !163, !137, !137, !211, !211, !211, !211}
!12771 = !{!12767, !12772, !12773, !12774, !12775, !12776, !12777, !12778, !12779, !12780, !12781}
!12772 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12768, file: !12761, line: 102, type: !137)
!12773 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12768, file: !12761, line: 103, type: !137)
!12774 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12768, file: !12761, line: 103, type: !211)
!12775 = !DILocalVariable(name: "result32", arg: 5, scope: !12768, file: !12761, line: 104, type: !211)
!12776 = !DILocalVariable(name: "round_up", arg: 6, scope: !12768, file: !12761, line: 104, type: !211)
!12777 = !DILocalVariable(name: "round_off", arg: 7, scope: !12768, file: !12761, line: 105, type: !211)
!12778 = !DILocalVariable(name: "mul_ratio", scope: !12768, file: !12761, line: 107, type: !211)
!12779 = !DILocalVariable(name: "div_ratio", scope: !12768, file: !12761, line: 109, type: !211)
!12780 = !DILocalVariable(name: "off", scope: !12768, file: !12761, line: 116, type: !163)
!12781 = !DILocalVariable(name: "rdivisor", scope: !12782, file: !12761, line: 119, type: !137)
!12782 = distinct !DILexicalBlock(scope: !12783, file: !12761, line: 118, column: 18)
!12783 = distinct !DILexicalBlock(scope: !12768, file: !12761, line: 118, column: 6)
!12784 = !DILocation(line: 0, scope: !12768, inlinedAt: !12785)
!12785 = distinct !DILocation(line: 406, column: 9, scope: !12760)
!12786 = !DILocation(line: 145, column: 13, scope: !12787, inlinedAt: !12785)
!12787 = distinct !DILexicalBlock(scope: !12788, file: !12761, line: 144, column: 10)
!12788 = distinct !DILexicalBlock(scope: !12789, file: !12761, line: 142, column: 7)
!12789 = distinct !DILexicalBlock(scope: !12790, file: !12761, line: 141, column: 24)
!12790 = distinct !DILexicalBlock(scope: !12791, file: !12761, line: 141, column: 13)
!12791 = distinct !DILexicalBlock(scope: !12768, file: !12761, line: 134, column: 6)
!12792 = !DILocation(line: 406, column: 2, scope: !12760)
!12793 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1917, file: !1917, line: 817, type: !3128, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12794)
!12794 = !{!12795, !12796, !12797, !12798}
!12795 = !DILocalVariable(name: "entry", arg: 1, scope: !12793, file: !1917, line: 817, type: !3130)
!12796 = !DILocalVariable(name: "p1", arg: 2, scope: !12793, file: !1917, line: 818, type: !102)
!12797 = !DILocalVariable(name: "p2", arg: 3, scope: !12793, file: !1917, line: 818, type: !102)
!12798 = !DILocalVariable(name: "p3", arg: 4, scope: !12793, file: !1917, line: 818, type: !102)
!12799 = !DILocation(line: 0, scope: !12793)
!12800 = !DILocation(line: 822, column: 2, scope: !12793)
!12801 = !DILocation(line: 822, column: 17, scope: !12793)
!12802 = !DILocation(line: 822, column: 30, scope: !12793)
!12803 = !DILocation(line: 823, column: 2, scope: !12793)
!12804 = !DILocation(line: 845, column: 2, scope: !12793)
!12805 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1917, file: !1917, line: 888, type: !12806, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12808)
!12806 = !DISubroutineType(types: !12807)
!12807 = !{!103, !1921}
!12808 = !{!12809}
!12809 = !DILocalVariable(name: "thread", arg: 1, scope: !12805, file: !1917, line: 888, type: !1921)
!12810 = !DILocation(line: 0, scope: !12805)
!12811 = !DILocation(line: 893, column: 2, scope: !12805)
!12812 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1917, file: !1917, line: 897, type: !12813, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12815)
!12813 = !DISubroutineType(types: !12814)
!12814 = !{!103, !1921, !32}
!12815 = !{!12816, !12817}
!12816 = !DILocalVariable(name: "thread", arg: 1, scope: !12812, file: !1917, line: 897, type: !1921)
!12817 = !DILocalVariable(name: "options", arg: 2, scope: !12812, file: !1917, line: 897, type: !32)
!12818 = !DILocation(line: 0, scope: !12812)
!12819 = !DILocation(line: 902, column: 2, scope: !12812)
!12820 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1917, file: !1917, line: 1072, type: !12821, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12826)
!12821 = !DISubroutineType(types: !12822)
!12822 = !{!103, !1920, !12823}
!12823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12824, size: 32)
!12824 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !263, line: 234, baseType: !12825)
!12825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !263, line: 192, elements: !162)
!12826 = !{!12827, !12828}
!12827 = !DILocalVariable(name: "thread", arg: 1, scope: !12820, file: !1917, line: 1072, type: !1920)
!12828 = !DILocalVariable(name: "stats", arg: 2, scope: !12820, file: !1917, line: 1073, type: !12823)
!12829 = !DILocation(line: 0, scope: !12820)
!12830 = !DILocation(line: 1075, column: 14, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12820, file: !1917, line: 1075, column: 6)
!12832 = !DILocation(line: 1075, column: 23, scope: !12831)
!12833 = !DILocation(line: 1086, column: 1, scope: !12820)
!12834 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1917, file: !1917, line: 1088, type: !12835, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2021, retainedNodes: !12837)
!12835 = !DISubroutineType(types: !12836)
!12836 = !{!103, !12823}
!12837 = !{!12838}
!12838 = !DILocalVariable(name: "stats", arg: 1, scope: !12834, file: !1917, line: 1088, type: !12823)
!12839 = !DILocation(line: 0, scope: !12834)
!12840 = !DILocation(line: 1094, column: 12, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12834, file: !1917, line: 1094, column: 6)
!12842 = !DILocation(line: 1120, column: 1, scope: !12834)
!12843 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12844, file: !12844, line: 20, type: !2802, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !162)
!12844 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12845 = !DILocation(line: 30, column: 2, scope: !12843)
!12846 = !DILocation(line: 31, column: 1, scope: !12843)
!12847 = distinct !DISubprogram(name: "idle", scope: !12844, file: !12844, line: 33, type: !3133, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !12848)
!12848 = !{!12849, !12850, !12851}
!12849 = !DILocalVariable(name: "unused1", arg: 1, scope: !12847, file: !12844, line: 33, type: !102)
!12850 = !DILocalVariable(name: "unused2", arg: 2, scope: !12847, file: !12844, line: 33, type: !102)
!12851 = !DILocalVariable(name: "unused3", arg: 3, scope: !12847, file: !12844, line: 33, type: !102)
!12852 = !DILocation(line: 0, scope: !12847)
!12853 = !DILocation(line: 41, column: 2, scope: !12847)
!12854 = !DILocation(line: 55, column: 2, scope: !12855, inlinedAt: !12859)
!12855 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6094, file: !6094, line: 42, type: !6095, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !12856)
!12856 = !{!12857, !12858}
!12857 = !DILocalVariable(name: "key", scope: !12855, file: !6094, line: 44, type: !32)
!12858 = !DILocalVariable(name: "tmp", scope: !12855, file: !6094, line: 53, type: !32)
!12859 = distinct !DILocation(line: 62, column: 10, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12847, file: !12844, line: 41, column: 15)
!12861 = !{i64 1948044}
!12862 = !DILocation(line: 0, scope: !12855, inlinedAt: !12859)
!12863 = !DILocation(line: 86, column: 3, scope: !12860)
!12864 = distinct !{!12864, !12853, !12865}
!12865 = !DILocation(line: 105, column: 2, scope: !12847)
!12866 = distinct !DISubprogram(name: "k_cpu_idle", scope: !357, file: !357, line: 5627, type: !2802, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !162)
!12867 = !DILocation(line: 5629, column: 2, scope: !12866)
!12868 = !DILocation(line: 5630, column: 1, scope: !12866)
!12869 = !DISubprogram(name: "arch_cpu_idle", scope: !3131, file: !3131, line: 167, type: !2802, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12870 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2149, file: !2149, line: 93, type: !12871, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12873)
!12871 = !DISubroutineType(types: !12872)
!12872 = !{!612, !2044, !2044}
!12873 = !{!12874, !12875, !12876, !12877}
!12874 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12870, file: !2149, line: 93, type: !2044)
!12875 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12870, file: !2149, line: 94, type: !2044)
!12876 = !DILocalVariable(name: "b1", scope: !12870, file: !2149, line: 97, type: !612)
!12877 = !DILocalVariable(name: "b2", scope: !12870, file: !2149, line: 98, type: !612)
!12878 = !DILocation(line: 0, scope: !12870)
!12879 = !DILocation(line: 97, column: 30, scope: !12870)
!12880 = !DILocation(line: 98, column: 30, scope: !12870)
!12881 = !DILocation(line: 100, column: 9, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12870, file: !2149, line: 100, column: 6)
!12883 = !DILocation(line: 100, column: 6, scope: !12870)
!12884 = !DILocation(line: 125, column: 1, scope: !12870)
!12885 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2149, file: !2149, line: 428, type: !12886, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12888)
!12886 = !DISubroutineType(types: !12887)
!12887 = !{null, !2044}
!12888 = !{!12889}
!12889 = !DILocalVariable(name: "curr", arg: 1, scope: !12885, file: !2149, line: 428, type: !2044)
!12890 = !DILocation(line: 0, scope: !12885)
!12891 = !DILocation(line: 434, column: 6, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12885, file: !2149, line: 434, column: 6)
!12893 = !DILocation(line: 434, column: 23, scope: !12892)
!12894 = !DILocation(line: 434, column: 6, scope: !12885)
!12895 = !DILocation(line: 435, column: 50, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12892, file: !2149, line: 434, column: 29)
!12897 = !DILocation(line: 435, column: 48, scope: !12896)
!12898 = !DILocation(line: 435, column: 29, scope: !12896)
!12899 = !DILocation(line: 436, column: 24, scope: !12896)
!12900 = !DILocation(line: 436, column: 3, scope: !12896)
!12901 = !DILocation(line: 437, column: 2, scope: !12896)
!12902 = !DILocation(line: 438, column: 1, scope: !12885)
!12903 = distinct !DISubprogram(name: "slice_time", scope: !2149, file: !2149, line: 407, type: !12904, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12906)
!12904 = !DISubroutineType(types: !12905)
!12905 = !{!103, !2044}
!12906 = !{!12907, !12908}
!12907 = !DILocalVariable(name: "curr", arg: 1, scope: !12903, file: !2149, line: 407, type: !2044)
!12908 = !DILocalVariable(name: "ret", scope: !12903, file: !2149, line: 409, type: !103)
!12909 = !DILocation(line: 0, scope: !12903)
!12910 = !DILocation(line: 409, column: 12, scope: !12903)
!12911 = !DILocation(line: 416, column: 2, scope: !12903)
!12912 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2149, file: !2149, line: 440, type: !12913, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12915)
!12913 = !DISubroutineType(types: !12914)
!12914 = !{null, !612, !103}
!12915 = !{!12916, !12917, !12918, !12924}
!12916 = !DILocalVariable(name: "slice", arg: 1, scope: !12912, file: !2149, line: 440, type: !612)
!12917 = !DILocalVariable(name: "prio", arg: 2, scope: !12912, file: !2149, line: 440, type: !103)
!12918 = !DILocalVariable(name: "__i", scope: !12919, file: !2149, line: 442, type: !12920)
!12919 = distinct !DILexicalBlock(scope: !12912, file: !2149, line: 442, column: 2)
!12920 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !12921)
!12921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !12922)
!12922 = !{!12923}
!12923 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12921, file: !368, line: 33, baseType: !103, size: 32)
!12924 = !DILocalVariable(name: "__key", scope: !12919, file: !2149, line: 442, type: !12920)
!12925 = !DILocation(line: 0, scope: !12912)
!12926 = !DILocation(line: 0, scope: !12919)
!12927 = !DILocalVariable(name: "l", arg: 1, scope: !12928, file: !368, line: 136, type: !12931)
!12928 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !12929, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12932)
!12929 = !DISubroutineType(types: !12930)
!12930 = !{!12920, !12931}
!12931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 32)
!12932 = !{!12927, !12933}
!12933 = !DILocalVariable(name: "k", scope: !12928, file: !368, line: 139, type: !12920)
!12934 = !DILocation(line: 0, scope: !12928, inlinedAt: !12935)
!12935 = distinct !DILocation(line: 442, column: 2, scope: !12919)
!12936 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !12941)
!12937 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6094, file: !6094, line: 42, type: !6095, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12938)
!12938 = !{!12939, !12940}
!12939 = !DILocalVariable(name: "key", scope: !12937, file: !6094, line: 44, type: !32)
!12940 = !DILocalVariable(name: "tmp", scope: !12937, file: !6094, line: 53, type: !32)
!12941 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !12935)
!12942 = !{i64 1992015}
!12943 = !DILocation(line: 0, scope: !12937, inlinedAt: !12941)
!12944 = !DILocation(line: 443, column: 29, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12946, file: !2149, line: 442, column: 26)
!12946 = distinct !DILexicalBlock(scope: !12919, file: !2149, line: 442, column: 2)
!12947 = !DILocation(line: 444, column: 17, scope: !12945)
!12948 = !DILocation(line: 445, column: 51, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12945, file: !2149, line: 445, column: 7)
!12950 = !DILocation(line: 445, column: 7, scope: !12945)
!12951 = !DILocation(line: 0, scope: !12945)
!12952 = !DILocation(line: 451, column: 18, scope: !12945)
!12953 = !DILocation(line: 452, column: 3, scope: !12945)
!12954 = !DILocalVariable(name: "key", arg: 2, scope: !12955, file: !368, line: 190, type: !12920)
!12955 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !12956, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12958)
!12956 = !DISubroutineType(types: !12957)
!12957 = !{null, !12931, !12920}
!12958 = !{!12959, !12954}
!12959 = !DILocalVariable(name: "l", arg: 1, scope: !12955, file: !368, line: 189, type: !12931)
!12960 = !DILocation(line: 0, scope: !12955, inlinedAt: !12961)
!12961 = distinct !DILocation(line: 442, column: 2, scope: !12946)
!12962 = !DILocalVariable(name: "key", arg: 1, scope: !12963, file: !6094, line: 84, type: !32)
!12963 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6094, file: !6094, line: 84, type: !6105, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12964)
!12964 = !{!12962}
!12965 = !DILocation(line: 0, scope: !12963, inlinedAt: !12966)
!12966 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !12961)
!12967 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !12966)
!12968 = !{i64 1992832}
!12969 = !DILocation(line: 454, column: 1, scope: !12912)
!12970 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12761, file: !12761, line: 389, type: !7273, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12971)
!12971 = !{!12972}
!12972 = !DILocalVariable(name: "t", arg: 1, scope: !12970, file: !12761, line: 389, type: !137)
!12973 = !DILocation(line: 0, scope: !12970)
!12974 = !DILocalVariable(name: "t", arg: 1, scope: !12975, file: !12761, line: 102, type: !163)
!12975 = distinct !DISubprogram(name: "z_tmcvt", scope: !12761, file: !12761, line: 102, type: !12769, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12976)
!12976 = !{!12974, !12977, !12978, !12979, !12980, !12981, !12982, !12983, !12984, !12985, !12986}
!12977 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12975, file: !12761, line: 102, type: !137)
!12978 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12975, file: !12761, line: 103, type: !137)
!12979 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12975, file: !12761, line: 103, type: !211)
!12980 = !DILocalVariable(name: "result32", arg: 5, scope: !12975, file: !12761, line: 104, type: !211)
!12981 = !DILocalVariable(name: "round_up", arg: 6, scope: !12975, file: !12761, line: 104, type: !211)
!12982 = !DILocalVariable(name: "round_off", arg: 7, scope: !12975, file: !12761, line: 105, type: !211)
!12983 = !DILocalVariable(name: "mul_ratio", scope: !12975, file: !12761, line: 107, type: !211)
!12984 = !DILocalVariable(name: "div_ratio", scope: !12975, file: !12761, line: 109, type: !211)
!12985 = !DILocalVariable(name: "off", scope: !12975, file: !12761, line: 116, type: !163)
!12986 = !DILocalVariable(name: "rdivisor", scope: !12987, file: !12761, line: 119, type: !137)
!12987 = distinct !DILexicalBlock(scope: !12988, file: !12761, line: 118, column: 18)
!12988 = distinct !DILexicalBlock(scope: !12975, file: !12761, line: 118, column: 6)
!12989 = !DILocation(line: 0, scope: !12975, inlinedAt: !12990)
!12990 = distinct !DILocation(line: 392, column: 9, scope: !12970)
!12991 = !DILocation(line: 143, column: 25, scope: !12992, inlinedAt: !12990)
!12992 = distinct !DILexicalBlock(scope: !12993, file: !12761, line: 142, column: 17)
!12993 = distinct !DILexicalBlock(scope: !12994, file: !12761, line: 142, column: 7)
!12994 = distinct !DILexicalBlock(scope: !12995, file: !12761, line: 141, column: 24)
!12995 = distinct !DILexicalBlock(scope: !12996, file: !12761, line: 141, column: 13)
!12996 = distinct !DILexicalBlock(scope: !12975, file: !12761, line: 134, column: 6)
!12997 = !DILocation(line: 392, column: 2, scope: !12970)
!12998 = distinct !DISubprogram(name: "z_time_slice", scope: !2149, file: !2149, line: 502, type: !7910, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12999)
!12999 = !{!13000, !13001}
!13000 = !DILocalVariable(name: "ticks", arg: 1, scope: !12998, file: !2149, line: 502, type: !103)
!13001 = !DILocalVariable(name: "key", scope: !12998, file: !2149, line: 511, type: !12920)
!13002 = !DILocation(line: 0, scope: !12998)
!13003 = !DILocation(line: 0, scope: !12928, inlinedAt: !13004)
!13004 = distinct !DILocation(line: 511, column: 25, scope: !12998)
!13005 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13006)
!13006 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13004)
!13007 = !DILocation(line: 0, scope: !12937, inlinedAt: !13006)
!13008 = !DILocation(line: 514, column: 6, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !12998, file: !2149, line: 514, column: 6)
!13010 = !DILocation(line: 514, column: 25, scope: !13009)
!13011 = !DILocation(line: 514, column: 22, scope: !13009)
!13012 = !DILocation(line: 514, column: 6, scope: !12998)
!13013 = !DILocation(line: 515, column: 3, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !13009, file: !2149, line: 514, column: 35)
!13015 = !DILocation(line: 0, scope: !12955, inlinedAt: !13016)
!13016 = distinct !DILocation(line: 516, column: 3, scope: !13014)
!13017 = !DILocation(line: 0, scope: !12963, inlinedAt: !13018)
!13018 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13016)
!13019 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13018)
!13020 = !DILocation(line: 517, column: 3, scope: !13014)
!13021 = !DILocation(line: 519, column: 18, scope: !12998)
!13022 = !DILocation(line: 522, column: 6, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !12998, file: !2149, line: 522, column: 6)
!13024 = !DILocation(line: 522, column: 27, scope: !13023)
!13025 = !DILocation(line: 522, column: 30, scope: !13023)
!13026 = !DILocation(line: 522, column: 6, scope: !12998)
!13027 = !DILocation(line: 523, column: 30, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !13029, file: !2149, line: 523, column: 7)
!13029 = distinct !DILexicalBlock(scope: !13023, file: !2149, line: 522, column: 51)
!13030 = !DILocation(line: 523, column: 13, scope: !13028)
!13031 = !DILocation(line: 523, column: 7, scope: !13029)
!13032 = !DILocation(line: 530, column: 10, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13028, file: !2149, line: 523, column: 43)
!13034 = !DILocation(line: 531, column: 3, scope: !13033)
!13035 = !DILocation(line: 532, column: 30, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13028, file: !2149, line: 531, column: 10)
!13037 = !DILocation(line: 535, column: 29, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13023, file: !2149, line: 534, column: 9)
!13039 = !DILocation(line: 0, scope: !12955, inlinedAt: !13040)
!13040 = distinct !DILocation(line: 537, column: 2, scope: !12998)
!13041 = !DILocation(line: 0, scope: !12963, inlinedAt: !13042)
!13042 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13040)
!13043 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13042)
!13044 = !DILocation(line: 538, column: 1, scope: !12998)
!13045 = distinct !DISubprogram(name: "sliceable", scope: !2149, file: !2149, line: 468, type: !13046, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13048)
!13046 = !DISubroutineType(types: !13047)
!13047 = !{!211, !2044}
!13048 = !{!13049, !13050}
!13049 = !DILocalVariable(name: "thread", arg: 1, scope: !13045, file: !2149, line: 468, type: !2044)
!13050 = !DILocalVariable(name: "ret", scope: !13045, file: !2149, line: 470, type: !211)
!13051 = !DILocation(line: 0, scope: !13045)
!13052 = !DILocation(line: 470, column: 13, scope: !13045)
!13053 = !DILocation(line: 471, column: 3, scope: !13045)
!13054 = !DILocation(line: 471, column: 7, scope: !13045)
!13055 = !DILocation(line: 472, column: 3, scope: !13045)
!13056 = !DILocation(line: 472, column: 37, scope: !13045)
!13057 = !DILocation(line: 472, column: 24, scope: !13045)
!13058 = !DILocation(line: 472, column: 43, scope: !13045)
!13059 = !DILocation(line: 472, column: 7, scope: !13045)
!13060 = !DILocation(line: 473, column: 3, scope: !13045)
!13061 = !DILocation(line: 473, column: 7, scope: !13045)
!13062 = !DILocation(line: 473, column: 6, scope: !13045)
!13063 = !DILocation(line: 479, column: 2, scope: !13045)
!13064 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2149, file: !2149, line: 482, type: !13065, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13067)
!13065 = !DISubroutineType(types: !13066)
!13066 = !{!12920, !12920}
!13067 = !{!13068, !13069}
!13068 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13064, file: !2149, line: 482, type: !12920)
!13069 = !DILocalVariable(name: "curr", scope: !13064, file: !2149, line: 484, type: !2044)
!13070 = !DILocation(line: 0, scope: !13064)
!13071 = !DILocation(line: 484, column: 26, scope: !13064)
!13072 = !DILocation(line: 493, column: 7, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13064, file: !2149, line: 493, column: 6)
!13074 = !DILocation(line: 493, column: 6, scope: !13064)
!13075 = !DILocation(line: 494, column: 3, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13073, file: !2149, line: 493, column: 49)
!13077 = !DILocation(line: 495, column: 2, scope: !13076)
!13078 = !DILocation(line: 496, column: 2, scope: !13064)
!13079 = !DILocation(line: 499, column: 1, scope: !13064)
!13080 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12200, file: !12200, line: 106, type: !13046, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13081)
!13081 = !{!13082, !13083}
!13082 = !DILocalVariable(name: "thread", arg: 1, scope: !13080, file: !12200, line: 106, type: !2044)
!13083 = !DILocalVariable(name: "state", scope: !13080, file: !12200, line: 108, type: !208)
!13084 = !DILocation(line: 0, scope: !13080)
!13085 = !DILocation(line: 108, column: 31, scope: !13080)
!13086 = !DILocation(line: 110, column: 16, scope: !13080)
!13087 = !DILocation(line: 111, column: 41, scope: !13080)
!13088 = !DILocation(line: 110, column: 2, scope: !13080)
!13089 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2149, file: !2149, line: 393, type: !12886, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13090)
!13090 = !{!13091}
!13091 = !DILocalVariable(name: "thread", arg: 1, scope: !13089, file: !2149, line: 393, type: !2044)
!13092 = !DILocation(line: 0, scope: !13089)
!13093 = !DILocation(line: 395, column: 6, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13089, file: !2149, line: 395, column: 6)
!13095 = !DILocation(line: 395, column: 6, scope: !13089)
!13096 = !DILocalVariable(name: "thread", arg: 1, scope: !13097, file: !2149, line: 264, type: !2044)
!13097 = distinct !DISubprogram(name: "dequeue_thread", scope: !2149, file: !2149, line: 264, type: !12886, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13098)
!13098 = !{!13096}
!13099 = !DILocation(line: 0, scope: !13097, inlinedAt: !13100)
!13100 = distinct !DILocation(line: 396, column: 3, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13094, file: !2149, line: 395, column: 34)
!13102 = !DILocation(line: 266, column: 15, scope: !13097, inlinedAt: !13100)
!13103 = !DILocation(line: 266, column: 28, scope: !13097, inlinedAt: !13100)
!13104 = !DILocalVariable(name: "thread", arg: 1, scope: !13105, file: !2149, line: 232, type: !2044)
!13105 = distinct !DISubprogram(name: "runq_remove", scope: !2149, file: !2149, line: 232, type: !12886, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13106)
!13106 = !{!13104}
!13107 = !DILocation(line: 0, scope: !13105, inlinedAt: !13108)
!13108 = distinct !DILocation(line: 268, column: 3, scope: !13109, inlinedAt: !13100)
!13109 = distinct !DILexicalBlock(scope: !13110, file: !2149, line: 267, column: 35)
!13110 = distinct !DILexicalBlock(scope: !13097, file: !2149, line: 267, column: 6)
!13111 = !DILocation(line: 234, column: 2, scope: !13105, inlinedAt: !13108)
!13112 = !DILocation(line: 397, column: 2, scope: !13101)
!13113 = !DILocalVariable(name: "thread", arg: 1, scope: !13114, file: !2149, line: 250, type: !2044)
!13114 = distinct !DISubprogram(name: "queue_thread", scope: !2149, file: !2149, line: 250, type: !12886, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13115)
!13115 = !{!13113}
!13116 = !DILocation(line: 0, scope: !13114, inlinedAt: !13117)
!13117 = distinct !DILocation(line: 398, column: 2, scope: !13089)
!13118 = !DILocation(line: 252, column: 15, scope: !13114, inlinedAt: !13117)
!13119 = !DILocation(line: 252, column: 28, scope: !13114, inlinedAt: !13117)
!13120 = !DILocalVariable(name: "thread", arg: 1, scope: !13121, file: !2149, line: 227, type: !2044)
!13121 = distinct !DISubprogram(name: "runq_add", scope: !2149, file: !2149, line: 227, type: !12886, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13122)
!13122 = !{!13120}
!13123 = !DILocation(line: 0, scope: !13121, inlinedAt: !13124)
!13124 = distinct !DILocation(line: 254, column: 3, scope: !13125, inlinedAt: !13117)
!13125 = distinct !DILexicalBlock(scope: !13126, file: !2149, line: 253, column: 35)
!13126 = distinct !DILexicalBlock(scope: !13114, file: !2149, line: 253, column: 6)
!13127 = !DILocalVariable(name: "pq", arg: 1, scope: !13128, file: !2149, line: 181, type: !13131)
!13128 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2149, file: !2149, line: 181, type: !13129, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13132)
!13129 = !DISubroutineType(types: !13130)
!13130 = !{null, !13131, !2044}
!13131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!13132 = !{!13127, !13133, !13134}
!13133 = !DILocalVariable(name: "thread", arg: 2, scope: !13128, file: !2149, line: 182, type: !2044)
!13134 = !DILocalVariable(name: "t", scope: !13128, file: !2149, line: 184, type: !2044)
!13135 = !DILocation(line: 0, scope: !13128, inlinedAt: !13136)
!13136 = distinct !DILocation(line: 229, column: 2, scope: !13121, inlinedAt: !13124)
!13137 = !DILocation(line: 188, column: 2, scope: !13138, inlinedAt: !13136)
!13138 = distinct !DILexicalBlock(scope: !13128, file: !2149, line: 188, column: 2)
!13139 = !DILocation(line: 188, column: 2, scope: !13140, inlinedAt: !13136)
!13140 = distinct !DILexicalBlock(scope: !13138, file: !2149, line: 188, column: 2)
!13141 = !DILocation(line: 0, scope: !13138, inlinedAt: !13136)
!13142 = !DILocation(line: 189, column: 7, scope: !13143, inlinedAt: !13136)
!13143 = distinct !DILexicalBlock(scope: !13144, file: !2149, line: 189, column: 7)
!13144 = distinct !DILexicalBlock(scope: !13140, file: !2149, line: 188, column: 56)
!13145 = !DILocation(line: 189, column: 35, scope: !13143, inlinedAt: !13136)
!13146 = !DILocation(line: 189, column: 7, scope: !13144, inlinedAt: !13136)
!13147 = !DILocation(line: 191, column: 21, scope: !13148, inlinedAt: !13136)
!13148 = distinct !DILexicalBlock(scope: !13143, file: !2149, line: 189, column: 40)
!13149 = !DILocation(line: 190, column: 4, scope: !13148, inlinedAt: !13136)
!13150 = !DILocation(line: 192, column: 4, scope: !13148, inlinedAt: !13136)
!13151 = distinct !{!13151, !13137, !13152}
!13152 = !DILocation(line: 194, column: 2, scope: !13138, inlinedAt: !13136)
!13153 = !DILocation(line: 196, column: 37, scope: !13128, inlinedAt: !13136)
!13154 = !DILocation(line: 196, column: 2, scope: !13128, inlinedAt: !13136)
!13155 = !DILocation(line: 197, column: 1, scope: !13128, inlinedAt: !13136)
!13156 = !DILocation(line: 399, column: 25, scope: !13089)
!13157 = !DILocation(line: 399, column: 22, scope: !13089)
!13158 = !DILocation(line: 399, column: 2, scope: !13089)
!13159 = !DILocation(line: 400, column: 1, scope: !13089)
!13160 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12200, file: !12200, line: 136, type: !13046, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13161)
!13161 = !{!13162}
!13162 = !DILocalVariable(name: "thread", arg: 1, scope: !13160, file: !12200, line: 136, type: !2044)
!13163 = !DILocation(line: 0, scope: !13160)
!13164 = !DILocation(line: 138, column: 9, scope: !13160)
!13165 = !DILocation(line: 138, column: 2, scope: !13160)
!13166 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2149, file: !2149, line: 1137, type: !13129, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13167)
!13167 = !{!13168, !13169}
!13168 = !DILocalVariable(name: "pq", arg: 1, scope: !13166, file: !2149, line: 1137, type: !13131)
!13169 = !DILocalVariable(name: "thread", arg: 2, scope: !13166, file: !2149, line: 1137, type: !2044)
!13170 = !DILocation(line: 0, scope: !13166)
!13171 = !DILocation(line: 1141, column: 33, scope: !13166)
!13172 = !DILocation(line: 1141, column: 2, scope: !13166)
!13173 = !DILocation(line: 1142, column: 1, scope: !13166)
!13174 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !13175, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13177)
!13175 = !DISubroutineType(types: !13176)
!13176 = !{!2145, !13131}
!13177 = !{!13178}
!13178 = !DILocalVariable(name: "list", arg: 1, scope: !13174, file: !273, line: 294, type: !13131)
!13179 = !DILocation(line: 0, scope: !13174)
!13180 = !DILocation(line: 296, column: 9, scope: !13174)
!13181 = !DILocation(line: 296, column: 49, scope: !13174)
!13182 = !DILocation(line: 296, column: 2, scope: !13174)
!13183 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !13184, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13186)
!13184 = !DISubroutineType(types: !13185)
!13185 = !{null, !2145, !2145}
!13186 = !{!13187, !13188, !13189}
!13187 = !DILocalVariable(name: "successor", arg: 1, scope: !13183, file: !273, line: 443, type: !2145)
!13188 = !DILocalVariable(name: "node", arg: 2, scope: !13183, file: !273, line: 443, type: !2145)
!13189 = !DILocalVariable(name: "prev", scope: !13183, file: !273, line: 445, type: !13190)
!13190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2145)
!13191 = !DILocation(line: 0, scope: !13183)
!13192 = !DILocation(line: 445, column: 39, scope: !13183)
!13193 = !DILocation(line: 447, column: 8, scope: !13183)
!13194 = !DILocation(line: 447, column: 13, scope: !13183)
!13195 = !DILocation(line: 448, column: 8, scope: !13183)
!13196 = !DILocation(line: 448, column: 13, scope: !13183)
!13197 = !DILocation(line: 449, column: 8, scope: !13183)
!13198 = !DILocation(line: 449, column: 13, scope: !13183)
!13199 = !DILocation(line: 450, column: 18, scope: !13183)
!13200 = !DILocation(line: 451, column: 1, scope: !13183)
!13201 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !13202, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13204)
!13202 = !DISubroutineType(types: !13203)
!13203 = !{!2145, !13131, !2145}
!13204 = !{!13205, !13206}
!13205 = !DILocalVariable(name: "list", arg: 1, scope: !13201, file: !273, line: 341, type: !13131)
!13206 = !DILocalVariable(name: "node", arg: 2, scope: !13201, file: !273, line: 342, type: !2145)
!13207 = !DILocation(line: 0, scope: !13201)
!13208 = !DILocation(line: 344, column: 15, scope: !13201)
!13209 = !DILocation(line: 344, column: 9, scope: !13201)
!13210 = !DILocation(line: 344, column: 26, scope: !13201)
!13211 = !DILocation(line: 344, column: 2, scope: !13201)
!13212 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !13213, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13215)
!13213 = !DISubroutineType(types: !13214)
!13214 = !{null, !13131, !2145}
!13215 = !{!13216, !13217, !13218}
!13216 = !DILocalVariable(name: "list", arg: 1, scope: !13212, file: !273, line: 404, type: !13131)
!13217 = !DILocalVariable(name: "node", arg: 2, scope: !13212, file: !273, line: 404, type: !2145)
!13218 = !DILocalVariable(name: "tail", scope: !13212, file: !273, line: 406, type: !13190)
!13219 = !DILocation(line: 0, scope: !13212)
!13220 = !DILocation(line: 406, column: 34, scope: !13212)
!13221 = !DILocation(line: 408, column: 8, scope: !13212)
!13222 = !DILocation(line: 408, column: 13, scope: !13212)
!13223 = !DILocation(line: 409, column: 8, scope: !13212)
!13224 = !DILocation(line: 409, column: 13, scope: !13212)
!13225 = !DILocation(line: 411, column: 8, scope: !13212)
!13226 = !DILocation(line: 411, column: 13, scope: !13212)
!13227 = !DILocation(line: 412, column: 13, scope: !13212)
!13228 = !DILocation(line: 413, column: 1, scope: !13212)
!13229 = distinct !DISubprogram(name: "update_cache", scope: !2149, file: !2149, line: 559, type: !7910, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13230)
!13230 = !{!13231, !13232}
!13231 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13229, file: !2149, line: 559, type: !103)
!13232 = !DILocalVariable(name: "thread", scope: !13229, file: !2149, line: 562, type: !2044)
!13233 = !DILocation(line: 0, scope: !13229)
!13234 = !DILocation(line: 239, column: 9, scope: !13235, inlinedAt: !13238)
!13235 = distinct !DISubprogram(name: "runq_best", scope: !2149, file: !2149, line: 237, type: !13236, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!13236 = !DISubroutineType(types: !13237)
!13237 = !{!2044}
!13238 = distinct !DILocation(line: 314, column: 28, scope: !13239, inlinedAt: !13242)
!13239 = distinct !DISubprogram(name: "next_up", scope: !2149, file: !2149, line: 312, type: !13236, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13240)
!13240 = !{!13241}
!13241 = !DILocalVariable(name: "thread", scope: !13239, file: !2149, line: 314, type: !2044)
!13242 = distinct !DILocation(line: 562, column: 28, scope: !13229)
!13243 = !DILocation(line: 0, scope: !13239, inlinedAt: !13242)
!13244 = !DILocation(line: 340, column: 17, scope: !13239, inlinedAt: !13242)
!13245 = !DILocation(line: 340, column: 9, scope: !13239, inlinedAt: !13242)
!13246 = !DILocalVariable(name: "thread", arg: 1, scope: !13247, file: !2149, line: 127, type: !2044)
!13247 = distinct !DISubprogram(name: "should_preempt", scope: !2149, file: !2149, line: 127, type: !13248, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13250)
!13248 = !DISubroutineType(types: !13249)
!13249 = !{!211, !2044, !103}
!13250 = !{!13246, !13251}
!13251 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13247, file: !2149, line: 128, type: !103)
!13252 = !DILocation(line: 0, scope: !13247, inlinedAt: !13253)
!13253 = distinct !DILocation(line: 564, column: 6, scope: !13254)
!13254 = distinct !DILexicalBlock(scope: !13229, file: !2149, line: 564, column: 6)
!13255 = !DILocation(line: 133, column: 17, scope: !13256, inlinedAt: !13253)
!13256 = distinct !DILexicalBlock(scope: !13247, file: !2149, line: 133, column: 6)
!13257 = !DILocation(line: 0, scope: !13254)
!13258 = !DILocation(line: 133, column: 6, scope: !13247, inlinedAt: !13253)
!13259 = !DILocation(line: 140, column: 6, scope: !13260, inlinedAt: !13253)
!13260 = distinct !DILexicalBlock(scope: !13247, file: !2149, line: 140, column: 6)
!13261 = !DILocation(line: 140, column: 6, scope: !13247, inlinedAt: !13253)
!13262 = !DILocation(line: 150, column: 9, scope: !13263, inlinedAt: !13253)
!13263 = distinct !DILexicalBlock(scope: !13247, file: !2149, line: 149, column: 6)
!13264 = !DILocation(line: 149, column: 6, scope: !13247, inlinedAt: !13253)
!13265 = !DILocation(line: 157, column: 6, scope: !13266, inlinedAt: !13253)
!13266 = distinct !DILexicalBlock(scope: !13247, file: !2149, line: 157, column: 6)
!13267 = !DILocation(line: 564, column: 6, scope: !13229)
!13268 = !DILocation(line: 566, column: 14, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13270, file: !2149, line: 566, column: 7)
!13270 = distinct !DILexicalBlock(scope: !13254, file: !2149, line: 564, column: 42)
!13271 = !DILocation(line: 566, column: 7, scope: !13270)
!13272 = !DILocation(line: 567, column: 4, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13269, file: !2149, line: 566, column: 27)
!13274 = !DILocation(line: 568, column: 3, scope: !13273)
!13275 = !DILocation(line: 585, column: 1, scope: !13229)
!13276 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2149, file: !2149, line: 1144, type: !13277, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13279)
!13277 = !DISubroutineType(types: !13278)
!13278 = !{!2044, !13131}
!13279 = !{!13280, !13281, !13282}
!13280 = !DILocalVariable(name: "pq", arg: 1, scope: !13276, file: !2149, line: 1144, type: !13131)
!13281 = !DILocalVariable(name: "thread", scope: !13276, file: !2149, line: 1146, type: !2044)
!13282 = !DILocalVariable(name: "n", scope: !13276, file: !2149, line: 1147, type: !2145)
!13283 = !DILocation(line: 0, scope: !13276)
!13284 = !DILocation(line: 1147, column: 19, scope: !13276)
!13285 = !DILocation(line: 1152, column: 2, scope: !13276)
!13286 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12200, file: !12200, line: 115, type: !13046, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13287)
!13287 = !{!13288}
!13288 = !DILocalVariable(name: "thread", arg: 1, scope: !13286, file: !12200, line: 115, type: !2044)
!13289 = !DILocation(line: 0, scope: !13286)
!13290 = !DILocation(line: 117, column: 46, scope: !13286)
!13291 = !DILocation(line: 117, column: 10, scope: !13286)
!13292 = !DILocation(line: 117, column: 9, scope: !13286)
!13293 = !DILocation(line: 117, column: 2, scope: !13286)
!13294 = distinct !DISubprogram(name: "is_preempt", scope: !2149, file: !2149, line: 62, type: !12904, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13295)
!13295 = !{!13296}
!13296 = !DILocalVariable(name: "thread", arg: 1, scope: !13294, file: !2149, line: 62, type: !2044)
!13297 = !DILocation(line: 0, scope: !13294)
!13298 = !DILocation(line: 65, column: 22, scope: !13294)
!13299 = !DILocation(line: 65, column: 30, scope: !13294)
!13300 = !DILocation(line: 65, column: 2, scope: !13294)
!13301 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12594, file: !12594, line: 35, type: !13302, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13306)
!13302 = !DISubroutineType(types: !13303)
!13303 = !{!211, !13304}
!13304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13305, size: 32)
!13305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2095)
!13306 = !{!13307}
!13307 = !DILocalVariable(name: "to", arg: 1, scope: !13301, file: !12594, line: 35, type: !13304)
!13308 = !DILocation(line: 0, scope: !13301)
!13309 = !DILocation(line: 37, column: 35, scope: !13301)
!13310 = !DILocation(line: 37, column: 10, scope: !13301)
!13311 = !DILocation(line: 37, column: 9, scope: !13301)
!13312 = !DILocation(line: 37, column: 2, scope: !13301)
!13313 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !13314, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13318)
!13314 = !DISubroutineType(types: !13315)
!13315 = !{!211, !13316}
!13316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13317, size: 32)
!13317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2054)
!13318 = !{!13319}
!13319 = !DILocalVariable(name: "node", arg: 1, scope: !13313, file: !273, line: 225, type: !13316)
!13320 = !DILocation(line: 0, scope: !13313)
!13321 = !DILocation(line: 227, column: 15, scope: !13313)
!13322 = !DILocation(line: 227, column: 20, scope: !13313)
!13323 = !DILocation(line: 227, column: 2, scope: !13313)
!13324 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !13202, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13325)
!13325 = !{!13326, !13327}
!13326 = !DILocalVariable(name: "list", arg: 1, scope: !13324, file: !273, line: 325, type: !13131)
!13327 = !DILocalVariable(name: "node", arg: 2, scope: !13324, file: !273, line: 326, type: !2145)
!13328 = !DILocation(line: 0, scope: !13324)
!13329 = !DILocation(line: 328, column: 24, scope: !13324)
!13330 = !DILocation(line: 328, column: 15, scope: !13324)
!13331 = !DILocation(line: 328, column: 9, scope: !13324)
!13332 = !DILocation(line: 328, column: 45, scope: !13324)
!13333 = !DILocation(line: 328, column: 2, scope: !13324)
!13334 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !13335, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13337)
!13335 = !DISubroutineType(types: !13336)
!13336 = !{!211, !13131}
!13337 = !{!13338}
!13338 = !DILocalVariable(name: "list", arg: 1, scope: !13334, file: !273, line: 266, type: !13131)
!13339 = !DILocation(line: 0, scope: !13334)
!13340 = !DILocation(line: 268, column: 15, scope: !13334)
!13341 = !DILocation(line: 268, column: 20, scope: !13334)
!13342 = !DILocation(line: 268, column: 2, scope: !13334)
!13343 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !13344, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13346)
!13344 = !DISubroutineType(types: !13345)
!13345 = !{null, !2145}
!13346 = !{!13347, !13348, !13349}
!13347 = !DILocalVariable(name: "node", arg: 1, scope: !13343, file: !273, line: 496, type: !2145)
!13348 = !DILocalVariable(name: "prev", scope: !13343, file: !273, line: 498, type: !13190)
!13349 = !DILocalVariable(name: "next", scope: !13343, file: !273, line: 499, type: !13190)
!13350 = !DILocation(line: 0, scope: !13343)
!13351 = !DILocation(line: 498, column: 34, scope: !13343)
!13352 = !DILocation(line: 499, column: 34, scope: !13343)
!13353 = !DILocation(line: 501, column: 8, scope: !13343)
!13354 = !DILocation(line: 501, column: 13, scope: !13343)
!13355 = !DILocation(line: 502, column: 8, scope: !13343)
!13356 = !DILocation(line: 502, column: 13, scope: !13343)
!13357 = !DILocation(line: 503, column: 2, scope: !13343)
!13358 = !DILocation(line: 504, column: 1, scope: !13343)
!13359 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !13344, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13360)
!13360 = !{!13361}
!13361 = !DILocalVariable(name: "node", arg: 1, scope: !13359, file: !273, line: 211, type: !2145)
!13362 = !DILocation(line: 0, scope: !13359)
!13363 = !DILocation(line: 213, column: 8, scope: !13359)
!13364 = !DILocation(line: 213, column: 13, scope: !13359)
!13365 = !DILocation(line: 214, column: 8, scope: !13359)
!13366 = !DILocation(line: 214, column: 13, scope: !13359)
!13367 = !DILocation(line: 215, column: 1, scope: !13359)
!13368 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12200, file: !12200, line: 131, type: !13369, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13371)
!13369 = !DISubroutineType(types: !13370)
!13370 = !{!211, !2044, !137}
!13371 = !{!13372, !13373}
!13372 = !DILocalVariable(name: "thread", arg: 1, scope: !13368, file: !12200, line: 131, type: !2044)
!13373 = !DILocalVariable(name: "state", arg: 2, scope: !13368, file: !12200, line: 131, type: !137)
!13374 = !DILocation(line: 0, scope: !13368)
!13375 = !DILocation(line: 133, column: 23, scope: !13368)
!13376 = !DILocation(line: 133, column: 45, scope: !13368)
!13377 = !DILocation(line: 133, column: 2, scope: !13368)
!13378 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12200, file: !12200, line: 211, type: !13379, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13381)
!13379 = !DISubroutineType(types: !13380)
!13380 = !{!211, !103, !103}
!13381 = !{!13382, !13383}
!13382 = !DILocalVariable(name: "prio", arg: 1, scope: !13378, file: !12200, line: 211, type: !103)
!13383 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13378, file: !12200, line: 211, type: !103)
!13384 = !DILocation(line: 0, scope: !13378)
!13385 = !DILocation(line: 213, column: 9, scope: !13378)
!13386 = !DILocation(line: 213, column: 2, scope: !13378)
!13387 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12200, file: !12200, line: 83, type: !13046, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13388)
!13388 = !{!13389}
!13389 = !DILocalVariable(name: "thread", arg: 1, scope: !13387, file: !12200, line: 83, type: !2044)
!13390 = !DILocation(line: 0, scope: !13387)
!13391 = !DILocation(line: 89, column: 16, scope: !13387)
!13392 = !DILocation(line: 89, column: 2, scope: !13387)
!13393 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12200, file: !12200, line: 206, type: !13379, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13394)
!13394 = !{!13395, !13396}
!13395 = !DILocalVariable(name: "prio1", arg: 1, scope: !13393, file: !12200, line: 206, type: !103)
!13396 = !DILocalVariable(name: "prio2", arg: 2, scope: !13393, file: !12200, line: 206, type: !103)
!13397 = !DILocation(line: 0, scope: !13393)
!13398 = !DILocation(line: 208, column: 15, scope: !13393)
!13399 = !DILocation(line: 208, column: 2, scope: !13393)
!13400 = distinct !DISubprogram(name: "z_ready_thread", scope: !2149, file: !2149, line: 635, type: !12886, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13401)
!13401 = !{!13402, !13403, !13405}
!13402 = !DILocalVariable(name: "thread", arg: 1, scope: !13400, file: !2149, line: 635, type: !2044)
!13403 = !DILocalVariable(name: "__i", scope: !13404, file: !2149, line: 637, type: !12920)
!13404 = distinct !DILexicalBlock(scope: !13400, file: !2149, line: 637, column: 2)
!13405 = !DILocalVariable(name: "__key", scope: !13404, file: !2149, line: 637, type: !12920)
!13406 = !DILocation(line: 0, scope: !13400)
!13407 = !DILocation(line: 0, scope: !13404)
!13408 = !DILocation(line: 0, scope: !12928, inlinedAt: !13409)
!13409 = distinct !DILocation(line: 637, column: 2, scope: !13404)
!13410 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13411)
!13411 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13409)
!13412 = !DILocation(line: 0, scope: !12937, inlinedAt: !13411)
!13413 = !DILocation(line: 639, column: 4, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13415, file: !2149, line: 638, column: 41)
!13415 = distinct !DILexicalBlock(scope: !13416, file: !2149, line: 638, column: 7)
!13416 = distinct !DILexicalBlock(scope: !13417, file: !2149, line: 637, column: 26)
!13417 = distinct !DILexicalBlock(scope: !13404, file: !2149, line: 637, column: 2)
!13418 = !DILocation(line: 0, scope: !12955, inlinedAt: !13419)
!13419 = distinct !DILocation(line: 637, column: 2, scope: !13417)
!13420 = !DILocation(line: 0, scope: !12963, inlinedAt: !13421)
!13421 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13419)
!13422 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13421)
!13423 = !DILocation(line: 642, column: 1, scope: !13400)
!13424 = distinct !DISubprogram(name: "ready_thread", scope: !2149, file: !2149, line: 617, type: !12886, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13425)
!13425 = !{!13426}
!13426 = !DILocalVariable(name: "thread", arg: 1, scope: !13424, file: !2149, line: 617, type: !2044)
!13427 = !DILocation(line: 0, scope: !13424)
!13428 = !DILocation(line: 626, column: 7, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13424, file: !2149, line: 626, column: 6)
!13430 = !DILocation(line: 626, column: 34, scope: !13429)
!13431 = !DILocation(line: 626, column: 37, scope: !13429)
!13432 = !DILocation(line: 626, column: 6, scope: !13424)
!13433 = !DILocation(line: 0, scope: !13114, inlinedAt: !13434)
!13434 = distinct !DILocation(line: 629, column: 3, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13429, file: !2149, line: 626, column: 64)
!13436 = !DILocation(line: 252, column: 15, scope: !13114, inlinedAt: !13434)
!13437 = !DILocation(line: 252, column: 28, scope: !13114, inlinedAt: !13434)
!13438 = !DILocation(line: 0, scope: !13121, inlinedAt: !13439)
!13439 = distinct !DILocation(line: 254, column: 3, scope: !13125, inlinedAt: !13434)
!13440 = !DILocation(line: 0, scope: !13128, inlinedAt: !13441)
!13441 = distinct !DILocation(line: 229, column: 2, scope: !13121, inlinedAt: !13439)
!13442 = !DILocation(line: 188, column: 2, scope: !13138, inlinedAt: !13441)
!13443 = !DILocation(line: 188, column: 2, scope: !13140, inlinedAt: !13441)
!13444 = !DILocation(line: 0, scope: !13138, inlinedAt: !13441)
!13445 = !DILocation(line: 189, column: 7, scope: !13143, inlinedAt: !13441)
!13446 = !DILocation(line: 189, column: 35, scope: !13143, inlinedAt: !13441)
!13447 = !DILocation(line: 189, column: 7, scope: !13144, inlinedAt: !13441)
!13448 = !DILocation(line: 191, column: 21, scope: !13148, inlinedAt: !13441)
!13449 = !DILocation(line: 190, column: 4, scope: !13148, inlinedAt: !13441)
!13450 = !DILocation(line: 192, column: 4, scope: !13148, inlinedAt: !13441)
!13451 = distinct !{!13451, !13442, !13452}
!13452 = !DILocation(line: 194, column: 2, scope: !13138, inlinedAt: !13441)
!13453 = !DILocation(line: 196, column: 37, scope: !13128, inlinedAt: !13441)
!13454 = !DILocation(line: 196, column: 2, scope: !13128, inlinedAt: !13441)
!13455 = !DILocation(line: 197, column: 1, scope: !13128, inlinedAt: !13441)
!13456 = !DILocation(line: 630, column: 3, scope: !13435)
!13457 = !DILocation(line: 632, column: 2, scope: !13435)
!13458 = !DILocation(line: 633, column: 1, scope: !13424)
!13459 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12200, file: !12200, line: 120, type: !13046, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13460)
!13460 = !{!13461}
!13461 = !DILocalVariable(name: "thread", arg: 1, scope: !13459, file: !12200, line: 120, type: !2044)
!13462 = !DILocation(line: 0, scope: !13459)
!13463 = !DILocation(line: 122, column: 12, scope: !13459)
!13464 = !DILocation(line: 122, column: 62, scope: !13459)
!13465 = !DILocation(line: 123, column: 4, scope: !13459)
!13466 = !DILocation(line: 122, column: 2, scope: !13459)
!13467 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2149, file: !2149, line: 644, type: !12886, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13468)
!13468 = !{!13469, !13470, !13472}
!13469 = !DILocalVariable(name: "thread", arg: 1, scope: !13467, file: !2149, line: 644, type: !2044)
!13470 = !DILocalVariable(name: "__i", scope: !13471, file: !2149, line: 646, type: !12920)
!13471 = distinct !DILexicalBlock(scope: !13467, file: !2149, line: 646, column: 2)
!13472 = !DILocalVariable(name: "__key", scope: !13471, file: !2149, line: 646, type: !12920)
!13473 = !DILocation(line: 0, scope: !13467)
!13474 = !DILocation(line: 0, scope: !13471)
!13475 = !DILocation(line: 0, scope: !12928, inlinedAt: !13476)
!13476 = distinct !DILocation(line: 646, column: 2, scope: !13471)
!13477 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13478)
!13478 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13476)
!13479 = !DILocation(line: 0, scope: !12937, inlinedAt: !13478)
!13480 = !DILocation(line: 647, column: 3, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13482, file: !2149, line: 646, column: 26)
!13482 = distinct !DILexicalBlock(scope: !13471, file: !2149, line: 646, column: 2)
!13483 = !DILocation(line: 0, scope: !12955, inlinedAt: !13484)
!13484 = distinct !DILocation(line: 646, column: 2, scope: !13482)
!13485 = !DILocation(line: 0, scope: !12963, inlinedAt: !13486)
!13486 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13484)
!13487 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13486)
!13488 = !DILocation(line: 649, column: 1, scope: !13467)
!13489 = distinct !DISubprogram(name: "z_sched_start", scope: !2149, file: !2149, line: 651, type: !12886, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13490)
!13490 = !{!13491, !13492}
!13491 = !DILocalVariable(name: "thread", arg: 1, scope: !13489, file: !2149, line: 651, type: !2044)
!13492 = !DILocalVariable(name: "key", scope: !13489, file: !2149, line: 653, type: !12920)
!13493 = !DILocation(line: 0, scope: !13489)
!13494 = !DILocation(line: 0, scope: !12928, inlinedAt: !13495)
!13495 = distinct !DILocation(line: 653, column: 25, scope: !13489)
!13496 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13497)
!13497 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13495)
!13498 = !DILocation(line: 0, scope: !12937, inlinedAt: !13497)
!13499 = !DILocation(line: 655, column: 6, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13489, file: !2149, line: 655, column: 6)
!13501 = !DILocation(line: 655, column: 6, scope: !13489)
!13502 = !DILocation(line: 0, scope: !12955, inlinedAt: !13503)
!13503 = distinct !DILocation(line: 656, column: 3, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13500, file: !2149, line: 655, column: 36)
!13505 = !DILocation(line: 0, scope: !12963, inlinedAt: !13506)
!13506 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13503)
!13507 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13506)
!13508 = !DILocation(line: 657, column: 3, scope: !13504)
!13509 = !DILocation(line: 660, column: 2, scope: !13489)
!13510 = !DILocation(line: 661, column: 2, scope: !13489)
!13511 = !DILocation(line: 662, column: 2, scope: !13489)
!13512 = !DILocation(line: 663, column: 1, scope: !13489)
!13513 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12200, file: !12200, line: 126, type: !13046, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13514)
!13514 = !{!13515}
!13515 = !DILocalVariable(name: "thread", arg: 1, scope: !13513, file: !12200, line: 126, type: !2044)
!13516 = !DILocation(line: 0, scope: !13513)
!13517 = !DILocation(line: 128, column: 23, scope: !13513)
!13518 = !DILocation(line: 128, column: 36, scope: !13513)
!13519 = !DILocation(line: 128, column: 56, scope: !13513)
!13520 = !DILocation(line: 128, column: 2, scope: !13513)
!13521 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12200, file: !12200, line: 155, type: !12886, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13522)
!13522 = !{!13523}
!13523 = !DILocalVariable(name: "thread", arg: 1, scope: !13521, file: !12200, line: 155, type: !2044)
!13524 = !DILocation(line: 0, scope: !13521)
!13525 = !DILocation(line: 157, column: 15, scope: !13521)
!13526 = !DILocation(line: 157, column: 28, scope: !13521)
!13527 = !DILocation(line: 158, column: 1, scope: !13521)
!13528 = distinct !DISubprogram(name: "z_reschedule", scope: !2149, file: !2149, line: 967, type: !12956, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13529)
!13529 = !{!13530, !13531}
!13530 = !DILocalVariable(name: "lock", arg: 1, scope: !13528, file: !2149, line: 967, type: !12931)
!13531 = !DILocalVariable(name: "key", arg: 2, scope: !13528, file: !2149, line: 967, type: !12920)
!13532 = !DILocation(line: 0, scope: !13528)
!13533 = !DILocation(line: 969, column: 6, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13528, file: !2149, line: 969, column: 6)
!13535 = !DILocation(line: 969, column: 23, scope: !13534)
!13536 = !DILocation(line: 969, column: 26, scope: !13534)
!13537 = !DILocation(line: 969, column: 6, scope: !13528)
!13538 = !DILocalVariable(name: "key", arg: 2, scope: !13539, file: !12304, line: 193, type: !12920)
!13539 = distinct !DISubprogram(name: "z_swap", scope: !12304, file: !12304, line: 193, type: !13540, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13542)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{!103, !12931, !12920}
!13542 = !{!13543, !13538}
!13543 = !DILocalVariable(name: "lock", arg: 1, scope: !13539, file: !12304, line: 193, type: !12931)
!13544 = !DILocation(line: 0, scope: !13539, inlinedAt: !13545)
!13545 = distinct !DILocation(line: 970, column: 3, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13534, file: !2149, line: 969, column: 39)
!13547 = !DILocation(line: 196, column: 9, scope: !13539, inlinedAt: !13545)
!13548 = !DILocation(line: 971, column: 2, scope: !13546)
!13549 = !DILocation(line: 0, scope: !12955, inlinedAt: !13550)
!13550 = distinct !DILocation(line: 972, column: 3, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13534, file: !2149, line: 971, column: 9)
!13552 = !DILocation(line: 0, scope: !12963, inlinedAt: !13553)
!13553 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13550)
!13554 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13553)
!13555 = !DILocation(line: 975, column: 1, scope: !13528)
!13556 = distinct !DISubprogram(name: "resched", scope: !2149, file: !2149, line: 940, type: !13557, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13559)
!13557 = !DISubroutineType(types: !13558)
!13558 = !{!211, !137}
!13559 = !{!13560}
!13560 = !DILocalVariable(name: "key", arg: 1, scope: !13556, file: !2149, line: 940, type: !137)
!13561 = !DILocation(line: 0, scope: !13556)
!13562 = !DILocalVariable(name: "key", arg: 1, scope: !13563, file: !6094, line: 112, type: !32)
!13563 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6094, file: !6094, line: 112, type: !13564, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13566)
!13564 = !DISubroutineType(types: !13565)
!13565 = !{!211, !32}
!13566 = !{!13562}
!13567 = !DILocation(line: 0, scope: !13563, inlinedAt: !13568)
!13568 = distinct !DILocation(line: 946, column: 9, scope: !13556)
!13569 = !DILocation(line: 115, column: 13, scope: !13563, inlinedAt: !13568)
!13570 = !DILocation(line: 946, column: 32, scope: !13556)
!13571 = !DILocation(line: 1031, column: 3, scope: !13572, inlinedAt: !13575)
!13572 = distinct !DISubprogram(name: "__get_IPSR", scope: !6268, file: !6268, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13573)
!13573 = !{!13574}
!13574 = !DILocalVariable(name: "result", scope: !13572, file: !6268, line: 1029, type: !137)
!13575 = distinct !DILocation(line: 48, column: 10, scope: !13576, inlinedAt: !13577)
!13576 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7060, file: !7060, line: 46, type: !7061, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!13577 = distinct !DILocation(line: 946, column: 36, scope: !13556)
!13578 = !{i64 2869754}
!13579 = !DILocation(line: 0, scope: !13572, inlinedAt: !13575)
!13580 = !DILocation(line: 48, column: 9, scope: !13576, inlinedAt: !13577)
!13581 = !DILocation(line: 946, column: 2, scope: !13556)
!13582 = distinct !DISubprogram(name: "need_swap", scope: !2149, file: !2149, line: 953, type: !7061, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13583)
!13583 = !{!13584}
!13584 = !DILocalVariable(name: "new_thread", scope: !13582, file: !2149, line: 959, type: !2044)
!13585 = !DILocation(line: 962, column: 31, scope: !13582)
!13586 = !DILocation(line: 0, scope: !13582)
!13587 = !DILocation(line: 963, column: 23, scope: !13582)
!13588 = !DILocation(line: 963, column: 20, scope: !13582)
!13589 = !DILocation(line: 963, column: 2, scope: !13582)
!13590 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12304, file: !12304, line: 181, type: !6278, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13591)
!13591 = !{!13592, !13593}
!13592 = !DILocalVariable(name: "key", arg: 1, scope: !13590, file: !12304, line: 181, type: !32)
!13593 = !DILocalVariable(name: "ret", scope: !13590, file: !12304, line: 183, type: !103)
!13594 = !DILocation(line: 0, scope: !13590)
!13595 = !DILocation(line: 185, column: 8, scope: !13590)
!13596 = !DILocation(line: 186, column: 2, scope: !13590)
!13597 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2149, file: !2149, line: 665, type: !12886, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13598)
!13598 = !{!13599, !13600, !13602}
!13599 = !DILocalVariable(name: "thread", arg: 1, scope: !13597, file: !2149, line: 665, type: !2044)
!13600 = !DILocalVariable(name: "__i", scope: !13601, file: !2149, line: 671, type: !12920)
!13601 = distinct !DILexicalBlock(scope: !13597, file: !2149, line: 671, column: 2)
!13602 = !DILocalVariable(name: "__key", scope: !13601, file: !2149, line: 671, type: !12920)
!13603 = !DILocation(line: 0, scope: !13597)
!13604 = !DILocation(line: 669, column: 8, scope: !13597)
!13605 = !DILocation(line: 0, scope: !13601)
!13606 = !DILocation(line: 0, scope: !12928, inlinedAt: !13607)
!13607 = distinct !DILocation(line: 671, column: 2, scope: !13601)
!13608 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13609)
!13609 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13607)
!13610 = !DILocation(line: 0, scope: !12937, inlinedAt: !13609)
!13611 = !DILocation(line: 672, column: 7, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13613, file: !2149, line: 672, column: 7)
!13613 = distinct !DILexicalBlock(scope: !13614, file: !2149, line: 671, column: 26)
!13614 = distinct !DILexicalBlock(scope: !13601, file: !2149, line: 671, column: 2)
!13615 = !DILocation(line: 672, column: 7, scope: !13613)
!13616 = !DILocation(line: 0, scope: !13097, inlinedAt: !13617)
!13617 = distinct !DILocation(line: 673, column: 4, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13612, file: !2149, line: 672, column: 35)
!13619 = !DILocation(line: 266, column: 15, scope: !13097, inlinedAt: !13617)
!13620 = !DILocation(line: 266, column: 28, scope: !13097, inlinedAt: !13617)
!13621 = !DILocation(line: 0, scope: !13105, inlinedAt: !13622)
!13622 = distinct !DILocation(line: 268, column: 3, scope: !13109, inlinedAt: !13617)
!13623 = !DILocation(line: 234, column: 2, scope: !13105, inlinedAt: !13622)
!13624 = !DILocation(line: 674, column: 3, scope: !13618)
!13625 = !DILocation(line: 675, column: 3, scope: !13613)
!13626 = !DILocation(line: 676, column: 26, scope: !13613)
!13627 = !DILocation(line: 676, column: 23, scope: !13613)
!13628 = !DILocation(line: 676, column: 3, scope: !13613)
!13629 = !DILocation(line: 0, scope: !12955, inlinedAt: !13630)
!13630 = distinct !DILocation(line: 671, column: 2, scope: !13614)
!13631 = !DILocation(line: 0, scope: !12963, inlinedAt: !13632)
!13632 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13630)
!13633 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13632)
!13634 = !DILocation(line: 679, column: 16, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13597, file: !2149, line: 679, column: 6)
!13636 = !DILocation(line: 679, column: 13, scope: !13635)
!13637 = !DILocation(line: 679, column: 6, scope: !13597)
!13638 = !DILocation(line: 680, column: 3, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13635, file: !2149, line: 679, column: 26)
!13640 = !DILocation(line: 681, column: 2, scope: !13639)
!13641 = !DILocation(line: 684, column: 1, scope: !13597)
!13642 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12594, file: !12594, line: 52, type: !12904, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13643)
!13643 = !{!13644}
!13644 = !DILocalVariable(name: "thread", arg: 1, scope: !13642, file: !12594, line: 52, type: !2044)
!13645 = !DILocation(line: 0, scope: !13642)
!13646 = !DILocation(line: 54, column: 39, scope: !13642)
!13647 = !DILocation(line: 54, column: 9, scope: !13642)
!13648 = !DILocation(line: 54, column: 2, scope: !13642)
!13649 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12200, file: !12200, line: 141, type: !12886, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13650)
!13650 = !{!13651}
!13651 = !DILocalVariable(name: "thread", arg: 1, scope: !13649, file: !12200, line: 141, type: !2044)
!13652 = !DILocation(line: 0, scope: !13649)
!13653 = !DILocation(line: 143, column: 15, scope: !13649)
!13654 = !DILocation(line: 143, column: 28, scope: !13649)
!13655 = !DILocation(line: 146, column: 1, scope: !13649)
!13656 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12200, file: !12200, line: 73, type: !2802, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!13657 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13658)
!13658 = distinct !DILocation(line: 75, column: 30, scope: !13656)
!13659 = !DILocation(line: 0, scope: !12937, inlinedAt: !13658)
!13660 = !DILocation(line: 75, column: 9, scope: !13656)
!13661 = !DILocation(line: 76, column: 1, scope: !13656)
!13662 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2149, file: !2149, line: 977, type: !6357, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13663)
!13663 = !{!13664}
!13664 = !DILocalVariable(name: "key", arg: 1, scope: !13662, file: !2149, line: 977, type: !137)
!13665 = !DILocation(line: 0, scope: !13662)
!13666 = !DILocation(line: 979, column: 6, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13662, file: !2149, line: 979, column: 6)
!13668 = !DILocation(line: 979, column: 6, scope: !13662)
!13669 = !DILocation(line: 980, column: 3, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13667, file: !2149, line: 979, column: 20)
!13671 = !DILocation(line: 981, column: 2, scope: !13670)
!13672 = !DILocation(line: 0, scope: !12963, inlinedAt: !13673)
!13673 = distinct !DILocation(line: 982, column: 3, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13667, file: !2149, line: 981, column: 9)
!13675 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13673)
!13676 = !DILocation(line: 985, column: 1, scope: !13662)
!13677 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2149, file: !2149, line: 695, type: !12886, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13678)
!13678 = !{!13679, !13680}
!13679 = !DILocalVariable(name: "thread", arg: 1, scope: !13677, file: !2149, line: 695, type: !2044)
!13680 = !DILocalVariable(name: "key", scope: !13677, file: !2149, line: 699, type: !12920)
!13681 = !DILocation(line: 0, scope: !13677)
!13682 = !DILocation(line: 0, scope: !12928, inlinedAt: !13683)
!13683 = distinct !DILocation(line: 699, column: 25, scope: !13677)
!13684 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13685)
!13685 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13683)
!13686 = !DILocation(line: 0, scope: !12937, inlinedAt: !13685)
!13687 = !DILocation(line: 702, column: 7, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13677, file: !2149, line: 702, column: 6)
!13689 = !DILocation(line: 702, column: 6, scope: !13677)
!13690 = !DILocation(line: 0, scope: !12955, inlinedAt: !13691)
!13691 = distinct !DILocation(line: 703, column: 3, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13688, file: !2149, line: 702, column: 38)
!13693 = !DILocation(line: 0, scope: !12963, inlinedAt: !13694)
!13694 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13691)
!13695 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13694)
!13696 = !DILocation(line: 704, column: 3, scope: !13692)
!13697 = !DILocation(line: 707, column: 2, scope: !13677)
!13698 = !DILocation(line: 708, column: 2, scope: !13677)
!13699 = !DILocation(line: 710, column: 2, scope: !13677)
!13700 = !DILocation(line: 713, column: 1, scope: !13677)
!13701 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12200, file: !12200, line: 96, type: !13046, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13702)
!13702 = !{!13703}
!13703 = !DILocalVariable(name: "thread", arg: 1, scope: !13701, file: !12200, line: 96, type: !2044)
!13704 = !DILocation(line: 0, scope: !13701)
!13705 = !DILocation(line: 98, column: 23, scope: !13701)
!13706 = !DILocation(line: 98, column: 36, scope: !13701)
!13707 = !DILocation(line: 98, column: 57, scope: !13701)
!13708 = !DILocation(line: 98, column: 2, scope: !13701)
!13709 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12200, file: !12200, line: 148, type: !12886, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13710)
!13710 = !{!13711}
!13711 = !DILocalVariable(name: "thread", arg: 1, scope: !13709, file: !12200, line: 148, type: !2044)
!13712 = !DILocation(line: 0, scope: !13709)
!13713 = !DILocation(line: 150, column: 15, scope: !13709)
!13714 = !DILocation(line: 150, column: 28, scope: !13709)
!13715 = !DILocation(line: 153, column: 1, scope: !13709)
!13716 = distinct !DISubprogram(name: "z_pend_thread", scope: !2149, file: !2149, line: 770, type: !13717, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13723)
!13717 = !DISubroutineType(types: !13718)
!13718 = !{null, !2044, !2075, !13719}
!13719 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1400, line: 67, baseType: !13720)
!13720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1400, line: 65, size: 64, elements: !13721)
!13721 = !{!13722}
!13722 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13720, file: !1400, line: 66, baseType: !1399, size: 64)
!13723 = !{!13724, !13725, !13726, !13727, !13729}
!13724 = !DILocalVariable(name: "thread", arg: 1, scope: !13716, file: !2149, line: 770, type: !2044)
!13725 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13716, file: !2149, line: 770, type: !2075)
!13726 = !DILocalVariable(name: "timeout", arg: 3, scope: !13716, file: !2149, line: 771, type: !13719)
!13727 = !DILocalVariable(name: "__i", scope: !13728, file: !2149, line: 774, type: !12920)
!13728 = distinct !DILexicalBlock(scope: !13716, file: !2149, line: 774, column: 2)
!13729 = !DILocalVariable(name: "__key", scope: !13728, file: !2149, line: 774, type: !12920)
!13730 = !DILocation(line: 0, scope: !13716)
!13731 = !DILocation(line: 0, scope: !13728)
!13732 = !DILocation(line: 0, scope: !12928, inlinedAt: !13733)
!13733 = distinct !DILocation(line: 774, column: 2, scope: !13728)
!13734 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13735)
!13735 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13733)
!13736 = !DILocation(line: 0, scope: !12937, inlinedAt: !13735)
!13737 = !DILocation(line: 775, column: 3, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13739, file: !2149, line: 774, column: 26)
!13739 = distinct !DILexicalBlock(scope: !13728, file: !2149, line: 774, column: 2)
!13740 = !DILocation(line: 0, scope: !12955, inlinedAt: !13741)
!13741 = distinct !DILocation(line: 774, column: 2, scope: !13739)
!13742 = !DILocation(line: 0, scope: !12963, inlinedAt: !13743)
!13743 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13741)
!13744 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13743)
!13745 = !DILocation(line: 777, column: 1, scope: !13716)
!13746 = distinct !DISubprogram(name: "pend_locked", scope: !2149, file: !2149, line: 760, type: !13717, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13747)
!13747 = !{!13748, !13749, !13750}
!13748 = !DILocalVariable(name: "thread", arg: 1, scope: !13746, file: !2149, line: 760, type: !2044)
!13749 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13746, file: !2149, line: 760, type: !2075)
!13750 = !DILocalVariable(name: "timeout", arg: 3, scope: !13746, file: !2149, line: 761, type: !13719)
!13751 = !DILocation(line: 0, scope: !13746)
!13752 = !DILocation(line: 766, column: 2, scope: !13746)
!13753 = !DILocation(line: 767, column: 2, scope: !13746)
!13754 = !DILocation(line: 768, column: 1, scope: !13746)
!13755 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2149, file: !2149, line: 740, type: !13756, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13758)
!13756 = !DISubroutineType(types: !13757)
!13757 = !{null, !2044, !2075}
!13758 = !{!13759, !13760}
!13759 = !DILocalVariable(name: "thread", arg: 1, scope: !13755, file: !2149, line: 740, type: !2044)
!13760 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13755, file: !2149, line: 740, type: !2075)
!13761 = !DILocation(line: 0, scope: !13755)
!13762 = !DILocation(line: 742, column: 2, scope: !13755)
!13763 = !DILocation(line: 743, column: 2, scope: !13755)
!13764 = !DILocation(line: 747, column: 13, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13755, file: !2149, line: 747, column: 6)
!13766 = !DILocation(line: 747, column: 6, scope: !13755)
!13767 = !DILocation(line: 748, column: 16, scope: !13768)
!13768 = distinct !DILexicalBlock(scope: !13765, file: !2149, line: 747, column: 22)
!13769 = !DILocation(line: 748, column: 26, scope: !13768)
!13770 = !DILocation(line: 749, column: 28, scope: !13768)
!13771 = !DILocation(line: 0, scope: !13128, inlinedAt: !13772)
!13772 = distinct !DILocation(line: 749, column: 3, scope: !13768)
!13773 = !DILocation(line: 188, column: 2, scope: !13138, inlinedAt: !13772)
!13774 = !DILocation(line: 188, column: 2, scope: !13140, inlinedAt: !13772)
!13775 = !DILocation(line: 0, scope: !13138, inlinedAt: !13772)
!13776 = !DILocation(line: 189, column: 7, scope: !13143, inlinedAt: !13772)
!13777 = !DILocation(line: 189, column: 35, scope: !13143, inlinedAt: !13772)
!13778 = !DILocation(line: 189, column: 7, scope: !13144, inlinedAt: !13772)
!13779 = !DILocation(line: 191, column: 21, scope: !13148, inlinedAt: !13772)
!13780 = !DILocation(line: 190, column: 4, scope: !13148, inlinedAt: !13772)
!13781 = !DILocation(line: 192, column: 4, scope: !13148, inlinedAt: !13772)
!13782 = distinct !{!13782, !13773, !13783}
!13783 = !DILocation(line: 194, column: 2, scope: !13138, inlinedAt: !13772)
!13784 = !DILocation(line: 196, column: 37, scope: !13128, inlinedAt: !13772)
!13785 = !DILocation(line: 196, column: 2, scope: !13128, inlinedAt: !13772)
!13786 = !DILocation(line: 197, column: 1, scope: !13128, inlinedAt: !13772)
!13787 = !DILocation(line: 751, column: 1, scope: !13755)
!13788 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2149, file: !2149, line: 753, type: !13789, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13791)
!13789 = !DISubroutineType(types: !13790)
!13790 = !{null, !2044, !13719}
!13791 = !{!13792, !13793}
!13792 = !DILocalVariable(name: "thread", arg: 1, scope: !13788, file: !2149, line: 753, type: !2044)
!13793 = !DILocalVariable(name: "timeout", arg: 2, scope: !13788, file: !2149, line: 753, type: !13719)
!13794 = !DILocation(line: 0, scope: !13788)
!13795 = !DILocation(line: 755, column: 7, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13788, file: !2149, line: 755, column: 6)
!13797 = !DILocation(line: 755, column: 6, scope: !13788)
!13798 = !DILocation(line: 756, column: 3, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13796, file: !2149, line: 755, column: 41)
!13800 = !DILocation(line: 757, column: 2, scope: !13799)
!13801 = !DILocation(line: 758, column: 1, scope: !13788)
!13802 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12594, file: !12594, line: 47, type: !13789, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13803)
!13803 = !{!13804, !13805}
!13804 = !DILocalVariable(name: "thread", arg: 1, scope: !13802, file: !12594, line: 47, type: !2044)
!13805 = !DILocalVariable(name: "ticks", arg: 2, scope: !13802, file: !12594, line: 47, type: !13719)
!13806 = !DILocation(line: 0, scope: !13802)
!13807 = !DILocation(line: 49, column: 30, scope: !13802)
!13808 = !DILocation(line: 49, column: 2, scope: !13802)
!13809 = !DILocation(line: 50, column: 1, scope: !13802)
!13810 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2149, file: !2149, line: 795, type: !2101, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13811)
!13811 = !{!13812, !13813, !13814, !13816, !13817}
!13812 = !DILocalVariable(name: "timeout", arg: 1, scope: !13810, file: !2149, line: 795, type: !2103)
!13813 = !DILocalVariable(name: "thread", scope: !13810, file: !2149, line: 797, type: !2044)
!13814 = !DILocalVariable(name: "__i", scope: !13815, file: !2149, line: 800, type: !12920)
!13815 = distinct !DILexicalBlock(scope: !13810, file: !2149, line: 800, column: 2)
!13816 = !DILocalVariable(name: "__key", scope: !13815, file: !2149, line: 800, type: !12920)
!13817 = !DILocalVariable(name: "killed", scope: !13818, file: !2149, line: 801, type: !211)
!13818 = distinct !DILexicalBlock(scope: !13819, file: !2149, line: 800, column: 26)
!13819 = distinct !DILexicalBlock(scope: !13815, file: !2149, line: 800, column: 2)
!13820 = !DILocation(line: 0, scope: !13810)
!13821 = !DILocation(line: 797, column: 28, scope: !13810)
!13822 = !DILocation(line: 0, scope: !13815)
!13823 = !DILocation(line: 0, scope: !12928, inlinedAt: !13824)
!13824 = distinct !DILocation(line: 800, column: 2, scope: !13815)
!13825 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13826)
!13826 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13824)
!13827 = !DILocation(line: 0, scope: !12937, inlinedAt: !13826)
!13828 = !DILocation(line: 801, column: 27, scope: !13818)
!13829 = !DILocation(line: 801, column: 32, scope: !13818)
!13830 = !DILocation(line: 801, column: 61, scope: !13818)
!13831 = !DILocation(line: 0, scope: !13818)
!13832 = !DILocation(line: 804, column: 7, scope: !13818)
!13833 = !DILocation(line: 805, column: 21, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13835, file: !2149, line: 805, column: 8)
!13835 = distinct !DILexicalBlock(scope: !13836, file: !2149, line: 804, column: 16)
!13836 = distinct !DILexicalBlock(scope: !13818, file: !2149, line: 804, column: 7)
!13837 = !DILocation(line: 805, column: 31, scope: !13834)
!13838 = !DILocation(line: 805, column: 8, scope: !13835)
!13839 = !DILocation(line: 806, column: 5, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13834, file: !2149, line: 805, column: 40)
!13841 = !DILocation(line: 807, column: 4, scope: !13840)
!13842 = !DILocation(line: 808, column: 4, scope: !13835)
!13843 = !DILocation(line: 809, column: 4, scope: !13835)
!13844 = !DILocation(line: 810, column: 4, scope: !13835)
!13845 = !DILocation(line: 811, column: 3, scope: !13835)
!13846 = !DILocation(line: 0, scope: !12955, inlinedAt: !13847)
!13847 = distinct !DILocation(line: 800, column: 2, scope: !13819)
!13848 = !DILocation(line: 0, scope: !12963, inlinedAt: !13849)
!13849 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13847)
!13850 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13849)
!13851 = !DILocation(line: 813, column: 1, scope: !13810)
!13852 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2149, file: !2149, line: 779, type: !12886, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13853)
!13853 = !{!13854}
!13854 = !DILocalVariable(name: "thread", arg: 1, scope: !13852, file: !2149, line: 779, type: !2044)
!13855 = !DILocation(line: 0, scope: !13852)
!13856 = !DILocation(line: 781, column: 2, scope: !13852)
!13857 = !DILocation(line: 782, column: 2, scope: !13852)
!13858 = !DILocation(line: 783, column: 15, scope: !13852)
!13859 = !DILocation(line: 783, column: 25, scope: !13852)
!13860 = !DILocation(line: 784, column: 1, scope: !13852)
!13861 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12200, file: !12200, line: 165, type: !12886, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13862)
!13862 = !{!13863}
!13863 = !DILocalVariable(name: "thread", arg: 1, scope: !13861, file: !12200, line: 165, type: !2044)
!13864 = !DILocation(line: 0, scope: !13861)
!13865 = !DILocation(line: 167, column: 15, scope: !13861)
!13866 = !DILocation(line: 167, column: 28, scope: !13861)
!13867 = !DILocation(line: 168, column: 1, scope: !13861)
!13868 = distinct !DISubprogram(name: "unready_thread", scope: !2149, file: !2149, line: 731, type: !12886, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13869)
!13869 = !{!13870}
!13870 = !DILocalVariable(name: "thread", arg: 1, scope: !13868, file: !2149, line: 731, type: !2044)
!13871 = !DILocation(line: 0, scope: !13868)
!13872 = !DILocation(line: 733, column: 6, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13868, file: !2149, line: 733, column: 6)
!13874 = !DILocation(line: 733, column: 6, scope: !13868)
!13875 = !DILocation(line: 0, scope: !13097, inlinedAt: !13876)
!13876 = distinct !DILocation(line: 734, column: 3, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13873, file: !2149, line: 733, column: 34)
!13878 = !DILocation(line: 266, column: 15, scope: !13097, inlinedAt: !13876)
!13879 = !DILocation(line: 266, column: 28, scope: !13097, inlinedAt: !13876)
!13880 = !DILocation(line: 0, scope: !13105, inlinedAt: !13881)
!13881 = distinct !DILocation(line: 268, column: 3, scope: !13109, inlinedAt: !13876)
!13882 = !DILocation(line: 234, column: 2, scope: !13105, inlinedAt: !13881)
!13883 = !DILocation(line: 735, column: 2, scope: !13877)
!13884 = !DILocation(line: 736, column: 25, scope: !13868)
!13885 = !DILocation(line: 736, column: 22, scope: !13868)
!13886 = !DILocation(line: 736, column: 2, scope: !13868)
!13887 = !DILocation(line: 737, column: 1, scope: !13868)
!13888 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12200, file: !12200, line: 160, type: !12886, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13889)
!13889 = !{!13890}
!13890 = !DILocalVariable(name: "thread", arg: 1, scope: !13888, file: !12200, line: 160, type: !2044)
!13891 = !DILocation(line: 0, scope: !13888)
!13892 = !DILocation(line: 162, column: 15, scope: !13888)
!13893 = !DILocation(line: 162, column: 28, scope: !13888)
!13894 = !DILocation(line: 163, column: 1, scope: !13888)
!13895 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2149, file: !2149, line: 786, type: !12886, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13896)
!13896 = !{!13897, !13898, !13900}
!13897 = !DILocalVariable(name: "thread", arg: 1, scope: !13895, file: !2149, line: 786, type: !2044)
!13898 = !DILocalVariable(name: "__i", scope: !13899, file: !2149, line: 788, type: !12920)
!13899 = distinct !DILexicalBlock(scope: !13895, file: !2149, line: 788, column: 2)
!13900 = !DILocalVariable(name: "__key", scope: !13899, file: !2149, line: 788, type: !12920)
!13901 = !DILocation(line: 0, scope: !13895)
!13902 = !DILocation(line: 0, scope: !13899)
!13903 = !DILocation(line: 0, scope: !12928, inlinedAt: !13904)
!13904 = distinct !DILocation(line: 788, column: 2, scope: !13899)
!13905 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13906)
!13906 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13904)
!13907 = !DILocation(line: 0, scope: !12937, inlinedAt: !13906)
!13908 = !DILocation(line: 789, column: 3, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13910, file: !2149, line: 788, column: 26)
!13910 = distinct !DILexicalBlock(scope: !13899, file: !2149, line: 788, column: 2)
!13911 = !DILocation(line: 0, scope: !12955, inlinedAt: !13912)
!13912 = distinct !DILocation(line: 788, column: 2, scope: !13910)
!13913 = !DILocation(line: 0, scope: !12963, inlinedAt: !13914)
!13914 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13912)
!13915 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13914)
!13916 = !DILocation(line: 791, column: 1, scope: !13895)
!13917 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2149, file: !2149, line: 816, type: !13918, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13920)
!13918 = !DISubroutineType(types: !13919)
!13919 = !{!103, !137, !2075, !13719}
!13920 = !{!13921, !13922, !13923, !13924, !13925, !13927}
!13921 = !DILocalVariable(name: "key", arg: 1, scope: !13917, file: !2149, line: 816, type: !137)
!13922 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13917, file: !2149, line: 816, type: !2075)
!13923 = !DILocalVariable(name: "timeout", arg: 3, scope: !13917, file: !2149, line: 816, type: !13719)
!13924 = !DILocalVariable(name: "ret", scope: !13917, file: !2149, line: 828, type: !103)
!13925 = !DILocalVariable(name: "__i", scope: !13926, file: !2149, line: 829, type: !12920)
!13926 = distinct !DILexicalBlock(scope: !13917, file: !2149, line: 829, column: 2)
!13927 = !DILocalVariable(name: "__key", scope: !13926, file: !2149, line: 829, type: !12920)
!13928 = !DILocation(line: 0, scope: !13917)
!13929 = !DILocation(line: 823, column: 14, scope: !13917)
!13930 = !DILocation(line: 823, column: 2, scope: !13917)
!13931 = !DILocation(line: 826, column: 20, scope: !13917)
!13932 = !DILocation(line: 826, column: 18, scope: !13917)
!13933 = !DILocation(line: 828, column: 12, scope: !13917)
!13934 = !DILocation(line: 0, scope: !13926)
!13935 = !DILocation(line: 0, scope: !12928, inlinedAt: !13936)
!13936 = distinct !DILocation(line: 829, column: 2, scope: !13926)
!13937 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13938)
!13938 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13936)
!13939 = !DILocation(line: 0, scope: !12937, inlinedAt: !13938)
!13940 = !DILocation(line: 830, column: 7, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13942, file: !2149, line: 830, column: 7)
!13942 = distinct !DILexicalBlock(scope: !13943, file: !2149, line: 829, column: 26)
!13943 = distinct !DILexicalBlock(scope: !13926, file: !2149, line: 829, column: 2)
!13944 = !DILocation(line: 830, column: 26, scope: !13941)
!13945 = !DILocation(line: 830, column: 23, scope: !13941)
!13946 = !DILocation(line: 830, column: 7, scope: !13942)
!13947 = !DILocation(line: 831, column: 20, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13941, file: !2149, line: 830, column: 36)
!13949 = !DILocation(line: 832, column: 3, scope: !13948)
!13950 = !DILocation(line: 0, scope: !12955, inlinedAt: !13951)
!13951 = distinct !DILocation(line: 829, column: 2, scope: !13943)
!13952 = !DILocation(line: 0, scope: !12963, inlinedAt: !13953)
!13953 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !13951)
!13954 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !13953)
!13955 = !DILocation(line: 834, column: 2, scope: !13917)
!13956 = distinct !DISubprogram(name: "z_pend_curr", scope: !2149, file: !2149, line: 840, type: !13957, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13959)
!13957 = !DISubroutineType(types: !13958)
!13958 = !{!103, !12931, !12920, !2075, !13719}
!13959 = !{!13960, !13961, !13962, !13963}
!13960 = !DILocalVariable(name: "lock", arg: 1, scope: !13956, file: !2149, line: 840, type: !12931)
!13961 = !DILocalVariable(name: "key", arg: 2, scope: !13956, file: !2149, line: 840, type: !12920)
!13962 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13956, file: !2149, line: 841, type: !2075)
!13963 = !DILocalVariable(name: "timeout", arg: 4, scope: !13956, file: !2149, line: 841, type: !13719)
!13964 = !DILocation(line: 0, scope: !13956)
!13965 = !DILocation(line: 844, column: 20, scope: !13956)
!13966 = !DILocation(line: 844, column: 18, scope: !13956)
!13967 = !DILocation(line: 0, scope: !12928, inlinedAt: !13968)
!13968 = distinct !DILocation(line: 856, column: 9, scope: !13956)
!13969 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13970)
!13970 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13968)
!13971 = !DILocation(line: 0, scope: !12937, inlinedAt: !13970)
!13972 = !DILocation(line: 857, column: 14, scope: !13956)
!13973 = !DILocation(line: 857, column: 2, scope: !13956)
!13974 = !DILocation(line: 0, scope: !13539, inlinedAt: !13975)
!13975 = distinct !DILocation(line: 859, column: 9, scope: !13956)
!13976 = !DILocation(line: 196, column: 9, scope: !13539, inlinedAt: !13975)
!13977 = !DILocation(line: 859, column: 2, scope: !13956)
!13978 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2149, file: !2149, line: 862, type: !13979, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13981)
!13979 = !DISubroutineType(types: !13980)
!13980 = !{!2044, !2075}
!13981 = !{!13982, !13983, !13984, !13986}
!13982 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13978, file: !2149, line: 862, type: !2075)
!13983 = !DILocalVariable(name: "thread", scope: !13978, file: !2149, line: 864, type: !2044)
!13984 = !DILocalVariable(name: "__i", scope: !13985, file: !2149, line: 866, type: !12920)
!13985 = distinct !DILexicalBlock(scope: !13978, file: !2149, line: 866, column: 2)
!13986 = !DILocalVariable(name: "__key", scope: !13985, file: !2149, line: 866, type: !12920)
!13987 = !DILocation(line: 0, scope: !13978)
!13988 = !DILocation(line: 0, scope: !13985)
!13989 = !DILocation(line: 0, scope: !12928, inlinedAt: !13990)
!13990 = distinct !DILocation(line: 866, column: 2, scope: !13985)
!13991 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !13992)
!13992 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !13990)
!13993 = !DILocation(line: 0, scope: !12937, inlinedAt: !13992)
!13994 = !DILocation(line: 867, column: 12, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13996, file: !2149, line: 866, column: 26)
!13996 = distinct !DILexicalBlock(scope: !13985, file: !2149, line: 866, column: 2)
!13997 = !DILocation(line: 869, column: 14, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13995, file: !2149, line: 869, column: 7)
!13999 = !DILocation(line: 869, column: 7, scope: !13995)
!14000 = !DILocation(line: 870, column: 4, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13998, file: !2149, line: 869, column: 23)
!14002 = !DILocation(line: 871, column: 3, scope: !14001)
!14003 = !DILocation(line: 0, scope: !12955, inlinedAt: !14004)
!14004 = distinct !DILocation(line: 866, column: 2, scope: !13996)
!14005 = !DILocation(line: 0, scope: !12963, inlinedAt: !14006)
!14006 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !14004)
!14007 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !14006)
!14008 = !DILocation(line: 874, column: 2, scope: !13978)
!14009 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2149, file: !2149, line: 877, type: !13979, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14010)
!14010 = !{!14011, !14012, !14013, !14015}
!14011 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14009, file: !2149, line: 877, type: !2075)
!14012 = !DILocalVariable(name: "thread", scope: !14009, file: !2149, line: 879, type: !2044)
!14013 = !DILocalVariable(name: "__i", scope: !14014, file: !2149, line: 881, type: !12920)
!14014 = distinct !DILexicalBlock(scope: !14009, file: !2149, line: 881, column: 2)
!14015 = !DILocalVariable(name: "__key", scope: !14014, file: !2149, line: 881, type: !12920)
!14016 = !DILocation(line: 0, scope: !14009)
!14017 = !DILocation(line: 0, scope: !14014)
!14018 = !DILocation(line: 0, scope: !12928, inlinedAt: !14019)
!14019 = distinct !DILocation(line: 881, column: 2, scope: !14014)
!14020 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !14021)
!14021 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !14019)
!14022 = !DILocation(line: 0, scope: !12937, inlinedAt: !14021)
!14023 = !DILocation(line: 882, column: 12, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !14025, file: !2149, line: 881, column: 26)
!14025 = distinct !DILexicalBlock(scope: !14014, file: !2149, line: 881, column: 2)
!14026 = !DILocation(line: 884, column: 14, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14024, file: !2149, line: 884, column: 7)
!14028 = !DILocation(line: 884, column: 7, scope: !14024)
!14029 = !DILocation(line: 885, column: 4, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14027, file: !2149, line: 884, column: 23)
!14031 = !DILocation(line: 886, column: 10, scope: !14030)
!14032 = !DILocation(line: 887, column: 3, scope: !14030)
!14033 = !DILocation(line: 0, scope: !12955, inlinedAt: !14034)
!14034 = distinct !DILocation(line: 881, column: 2, scope: !14025)
!14035 = !DILocation(line: 0, scope: !12963, inlinedAt: !14036)
!14036 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !14034)
!14037 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !14036)
!14038 = !DILocation(line: 890, column: 2, scope: !14009)
!14039 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2149, file: !2149, line: 893, type: !12886, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14040)
!14040 = !{!14041}
!14041 = !DILocalVariable(name: "thread", arg: 1, scope: !14039, file: !2149, line: 893, type: !2044)
!14042 = !DILocation(line: 0, scope: !14039)
!14043 = !DILocation(line: 0, scope: !13895, inlinedAt: !14044)
!14044 = distinct !DILocation(line: 895, column: 2, scope: !14039)
!14045 = !DILocation(line: 0, scope: !13899, inlinedAt: !14044)
!14046 = !DILocation(line: 0, scope: !12928, inlinedAt: !14047)
!14047 = distinct !DILocation(line: 788, column: 2, scope: !13899, inlinedAt: !14044)
!14048 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !14049)
!14049 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !14047)
!14050 = !DILocation(line: 0, scope: !12937, inlinedAt: !14049)
!14051 = !DILocation(line: 789, column: 3, scope: !13909, inlinedAt: !14044)
!14052 = !DILocation(line: 0, scope: !12955, inlinedAt: !14053)
!14053 = distinct !DILocation(line: 788, column: 2, scope: !13910, inlinedAt: !14044)
!14054 = !DILocation(line: 0, scope: !12963, inlinedAt: !14055)
!14055 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !14053)
!14056 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !14055)
!14057 = !DILocation(line: 896, column: 8, scope: !14039)
!14058 = !DILocation(line: 897, column: 1, scope: !14039)
!14059 = distinct !DISubprogram(name: "z_set_prio", scope: !2149, file: !2149, line: 902, type: !13248, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14060)
!14060 = !{!14061, !14062, !14063, !14064, !14066}
!14061 = !DILocalVariable(name: "thread", arg: 1, scope: !14059, file: !2149, line: 902, type: !2044)
!14062 = !DILocalVariable(name: "prio", arg: 2, scope: !14059, file: !2149, line: 902, type: !103)
!14063 = !DILocalVariable(name: "need_sched", scope: !14059, file: !2149, line: 904, type: !211)
!14064 = !DILocalVariable(name: "__i", scope: !14065, file: !2149, line: 906, type: !12920)
!14065 = distinct !DILexicalBlock(scope: !14059, file: !2149, line: 906, column: 2)
!14066 = !DILocalVariable(name: "__key", scope: !14065, file: !2149, line: 906, type: !12920)
!14067 = !DILocation(line: 0, scope: !14059)
!14068 = !DILocation(line: 0, scope: !14065)
!14069 = !DILocation(line: 0, scope: !12928, inlinedAt: !14070)
!14070 = distinct !DILocation(line: 906, column: 2, scope: !14065)
!14071 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !14072)
!14072 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !14070)
!14073 = !DILocation(line: 0, scope: !12937, inlinedAt: !14072)
!14074 = !DILocation(line: 907, column: 16, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14076, file: !2149, line: 906, column: 26)
!14076 = distinct !DILexicalBlock(scope: !14065, file: !2149, line: 906, column: 2)
!14077 = !DILocation(line: 909, column: 7, scope: !14075)
!14078 = !DILocation(line: 0, scope: !13097, inlinedAt: !14079)
!14079 = distinct !DILocation(line: 912, column: 5, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14081, file: !2149, line: 911, column: 63)
!14081 = distinct !DILexicalBlock(scope: !14082, file: !2149, line: 911, column: 8)
!14082 = distinct !DILexicalBlock(scope: !14083, file: !2149, line: 909, column: 19)
!14083 = distinct !DILexicalBlock(scope: !14075, file: !2149, line: 909, column: 7)
!14084 = !DILocation(line: 266, column: 28, scope: !13097, inlinedAt: !14079)
!14085 = !DILocation(line: 0, scope: !13105, inlinedAt: !14086)
!14086 = distinct !DILocation(line: 268, column: 3, scope: !13109, inlinedAt: !14079)
!14087 = !DILocation(line: 234, column: 2, scope: !13105, inlinedAt: !14086)
!14088 = !DILocation(line: 913, column: 23, scope: !14080)
!14089 = !DILocation(line: 0, scope: !13114, inlinedAt: !14090)
!14090 = distinct !DILocation(line: 914, column: 5, scope: !14080)
!14091 = !DILocation(line: 252, column: 28, scope: !13114, inlinedAt: !14090)
!14092 = !DILocation(line: 0, scope: !13121, inlinedAt: !14093)
!14093 = distinct !DILocation(line: 254, column: 3, scope: !13125, inlinedAt: !14090)
!14094 = !DILocation(line: 0, scope: !13128, inlinedAt: !14095)
!14095 = distinct !DILocation(line: 229, column: 2, scope: !13121, inlinedAt: !14093)
!14096 = !DILocation(line: 188, column: 2, scope: !13138, inlinedAt: !14095)
!14097 = !DILocation(line: 188, column: 2, scope: !13140, inlinedAt: !14095)
!14098 = !DILocation(line: 0, scope: !13138, inlinedAt: !14095)
!14099 = !DILocation(line: 189, column: 7, scope: !13143, inlinedAt: !14095)
!14100 = !DILocation(line: 189, column: 35, scope: !13143, inlinedAt: !14095)
!14101 = !DILocation(line: 189, column: 7, scope: !13144, inlinedAt: !14095)
!14102 = !DILocation(line: 190, column: 4, scope: !13148, inlinedAt: !14095)
!14103 = !DILocation(line: 192, column: 4, scope: !13148, inlinedAt: !14095)
!14104 = distinct !{!14104, !14096, !14105}
!14105 = !DILocation(line: 194, column: 2, scope: !13138, inlinedAt: !14095)
!14106 = !DILocation(line: 196, column: 2, scope: !13128, inlinedAt: !14095)
!14107 = !DILocation(line: 197, column: 1, scope: !13128, inlinedAt: !14095)
!14108 = !DILocation(line: 918, column: 4, scope: !14082)
!14109 = !DILocation(line: 919, column: 3, scope: !14082)
!14110 = !DILocation(line: 920, column: 22, scope: !14111)
!14111 = distinct !DILexicalBlock(scope: !14083, file: !2149, line: 919, column: 10)
!14112 = !DILocation(line: 0, scope: !12955, inlinedAt: !14113)
!14113 = distinct !DILocation(line: 906, column: 2, scope: !14076)
!14114 = !DILocation(line: 0, scope: !12963, inlinedAt: !14115)
!14115 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !14113)
!14116 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !14115)
!14117 = !DILocation(line: 926, column: 2, scope: !14059)
!14118 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2149, file: !2149, line: 929, type: !14119, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14121)
!14119 = !DISubroutineType(types: !14120)
!14120 = !{null, !2044, !103}
!14121 = !{!14122, !14123, !14124}
!14122 = !DILocalVariable(name: "thread", arg: 1, scope: !14118, file: !2149, line: 929, type: !2044)
!14123 = !DILocalVariable(name: "prio", arg: 2, scope: !14118, file: !2149, line: 929, type: !103)
!14124 = !DILocalVariable(name: "need_sched", scope: !14118, file: !2149, line: 931, type: !211)
!14125 = !DILocation(line: 0, scope: !14118)
!14126 = !DILocation(line: 931, column: 20, scope: !14118)
!14127 = !DILocation(line: 935, column: 17, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14118, file: !2149, line: 935, column: 6)
!14129 = !DILocation(line: 935, column: 20, scope: !14128)
!14130 = !DILocation(line: 935, column: 35, scope: !14128)
!14131 = !DILocation(line: 935, column: 48, scope: !14128)
!14132 = !DILocation(line: 935, column: 6, scope: !14118)
!14133 = !DILocation(line: 936, column: 3, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14128, file: !2149, line: 935, column: 55)
!14135 = !DILocation(line: 937, column: 2, scope: !14134)
!14136 = !DILocation(line: 938, column: 1, scope: !14118)
!14137 = distinct !DISubprogram(name: "k_sched_lock", scope: !2149, file: !2149, line: 987, type: !2802, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14138)
!14138 = !{!14139, !14141}
!14139 = !DILocalVariable(name: "__i", scope: !14140, file: !2149, line: 989, type: !12920)
!14140 = distinct !DILexicalBlock(scope: !14137, file: !2149, line: 989, column: 2)
!14141 = !DILocalVariable(name: "__key", scope: !14140, file: !2149, line: 989, type: !12920)
!14142 = !DILocation(line: 0, scope: !14140)
!14143 = !DILocation(line: 0, scope: !12928, inlinedAt: !14144)
!14144 = distinct !DILocation(line: 989, column: 2, scope: !14140)
!14145 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !14146)
!14146 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !14144)
!14147 = !DILocation(line: 0, scope: !12937, inlinedAt: !14146)
!14148 = !DILocation(line: 992, column: 3, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14150, file: !2149, line: 989, column: 26)
!14150 = distinct !DILexicalBlock(scope: !14140, file: !2149, line: 989, column: 2)
!14151 = !DILocation(line: 0, scope: !12955, inlinedAt: !14152)
!14152 = distinct !DILocation(line: 989, column: 2, scope: !14150)
!14153 = !DILocation(line: 0, scope: !12963, inlinedAt: !14154)
!14154 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !14152)
!14155 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !14154)
!14156 = !DILocation(line: 994, column: 1, scope: !14137)
!14157 = distinct !DISubprogram(name: "z_sched_lock", scope: !12200, file: !12200, line: 251, type: !2802, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!14158 = !DILocation(line: 256, column: 4, scope: !14157)
!14159 = !DILocation(line: 256, column: 19, scope: !14157)
!14160 = !DILocation(line: 256, column: 2, scope: !14157)
!14161 = !DILocation(line: 258, column: 2, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14157, file: !12200, line: 258, column: 2)
!14163 = !{i64 2154189142}
!14164 = !DILocation(line: 259, column: 1, scope: !14157)
!14165 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2149, file: !2149, line: 996, type: !2802, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14166)
!14166 = !{!14167, !14169}
!14167 = !DILocalVariable(name: "__i", scope: !14168, file: !2149, line: 998, type: !12920)
!14168 = distinct !DILexicalBlock(scope: !14165, file: !2149, line: 998, column: 2)
!14169 = !DILocalVariable(name: "__key", scope: !14168, file: !2149, line: 998, type: !12920)
!14170 = !DILocation(line: 0, scope: !14168)
!14171 = !DILocation(line: 0, scope: !12928, inlinedAt: !14172)
!14172 = distinct !DILocation(line: 998, column: 2, scope: !14168)
!14173 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !14174)
!14174 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !14172)
!14175 = !DILocation(line: 0, scope: !12937, inlinedAt: !14174)
!14176 = !DILocation(line: 1002, column: 5, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14178, file: !2149, line: 998, column: 26)
!14178 = distinct !DILexicalBlock(scope: !14168, file: !2149, line: 998, column: 2)
!14179 = !DILocation(line: 1002, column: 20, scope: !14177)
!14180 = !DILocation(line: 1002, column: 3, scope: !14177)
!14181 = !DILocation(line: 1003, column: 3, scope: !14177)
!14182 = !DILocation(line: 0, scope: !12955, inlinedAt: !14183)
!14183 = distinct !DILocation(line: 998, column: 2, scope: !14178)
!14184 = !DILocation(line: 0, scope: !12963, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !14183)
!14186 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !14185)
!14187 = !DILocation(line: 1011, column: 2, scope: !14165)
!14188 = !DILocation(line: 1012, column: 1, scope: !14165)
!14189 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2149, file: !2149, line: 1014, type: !13236, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!14190 = !DILocation(line: 1028, column: 25, scope: !14189)
!14191 = !DILocation(line: 1028, column: 2, scope: !14189)
!14192 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2149, file: !2149, line: 1155, type: !14193, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14195)
!14193 = !DISubroutineType(types: !14194)
!14194 = !{!211, !2073, !2073}
!14195 = !{!14196, !14197, !14198, !14199, !14200}
!14196 = !DILocalVariable(name: "a", arg: 1, scope: !14192, file: !2149, line: 1155, type: !2073)
!14197 = !DILocalVariable(name: "b", arg: 2, scope: !14192, file: !2149, line: 1155, type: !2073)
!14198 = !DILocalVariable(name: "thread_a", scope: !14192, file: !2149, line: 1157, type: !2044)
!14199 = !DILocalVariable(name: "thread_b", scope: !14192, file: !2149, line: 1157, type: !2044)
!14200 = !DILocalVariable(name: "cmp", scope: !14192, file: !2149, line: 1158, type: !612)
!14201 = !DILocation(line: 0, scope: !14192)
!14202 = !DILocation(line: 1160, column: 13, scope: !14192)
!14203 = !DILocation(line: 1161, column: 13, scope: !14192)
!14204 = !DILocation(line: 1163, column: 8, scope: !14192)
!14205 = !DILocation(line: 1165, column: 10, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14192, file: !2149, line: 1165, column: 6)
!14207 = !DILocation(line: 1165, column: 6, scope: !14192)
!14208 = !DILocation(line: 1167, column: 17, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14206, file: !2149, line: 1167, column: 13)
!14210 = !DILocation(line: 1167, column: 13, scope: !14206)
!14211 = !DILocation(line: 1170, column: 25, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14209, file: !2149, line: 1169, column: 9)
!14213 = !DILocation(line: 1170, column: 52, scope: !14212)
!14214 = !DILocation(line: 1170, column: 35, scope: !14212)
!14215 = !DILocation(line: 1170, column: 3, scope: !14212)
!14216 = !DILocation(line: 0, scope: !14206)
!14217 = !DILocation(line: 1173, column: 1, scope: !14192)
!14218 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2149, file: !2149, line: 1175, type: !14219, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14234)
!14219 = !DISubroutineType(types: !14220)
!14220 = !{null, !14221, !2044}
!14221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14222, size: 32)
!14222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14223, line: 37, size: 128, elements: !14224)
!14223 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14224 = !{!14225, !14233}
!14225 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14222, file: !14223, line: 38, baseType: !14226, size: 96)
!14226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !289, line: 83, size: 96, elements: !14227)
!14227 = !{!14228, !14229, !14232}
!14228 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14226, file: !289, line: 84, baseType: !2073, size: 32)
!14229 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14226, file: !289, line: 85, baseType: !14230, size: 32, offset: 32)
!14230 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !289, line: 81, baseType: !14231)
!14231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14193, size: 32)
!14232 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14226, file: !289, line: 86, baseType: !103, size: 32, offset: 64)
!14233 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14222, file: !14223, line: 39, baseType: !103, size: 32, offset: 96)
!14234 = !{!14235, !14236, !14237, !14238, !14247}
!14235 = !DILocalVariable(name: "pq", arg: 1, scope: !14218, file: !2149, line: 1175, type: !14221)
!14236 = !DILocalVariable(name: "thread", arg: 2, scope: !14218, file: !2149, line: 1175, type: !2044)
!14237 = !DILocalVariable(name: "t", scope: !14218, file: !2149, line: 1177, type: !2044)
!14238 = !DILocalVariable(name: "__f", scope: !14239, file: !2149, line: 1190, type: !14242)
!14239 = distinct !DILexicalBlock(scope: !14240, file: !2149, line: 1190, column: 3)
!14240 = distinct !DILexicalBlock(scope: !14241, file: !2149, line: 1189, column: 27)
!14241 = distinct !DILexicalBlock(scope: !14218, file: !2149, line: 1189, column: 6)
!14242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !289, line: 155, size: 96, elements: !14243)
!14243 = !{!14244, !14245, !14246}
!14244 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14242, file: !289, line: 156, baseType: !2144, size: 32)
!14245 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14242, file: !289, line: 157, baseType: !1694, size: 32, offset: 32)
!14246 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14242, file: !289, line: 158, baseType: !612, size: 32, offset: 64)
!14247 = !DILocalVariable(name: "n", scope: !14248, file: !2149, line: 1190, type: !2073)
!14248 = distinct !DILexicalBlock(scope: !14249, file: !2149, line: 1190, column: 3)
!14249 = distinct !DILexicalBlock(scope: !14239, file: !2149, line: 1190, column: 3)
!14250 = !DILocation(line: 0, scope: !14218)
!14251 = !DILocation(line: 1181, column: 31, scope: !14218)
!14252 = !DILocation(line: 1181, column: 45, scope: !14218)
!14253 = !DILocation(line: 1181, column: 15, scope: !14218)
!14254 = !DILocation(line: 1181, column: 25, scope: !14218)
!14255 = !DILocation(line: 1189, column: 11, scope: !14241)
!14256 = !DILocation(line: 1189, column: 7, scope: !14241)
!14257 = !DILocation(line: 1189, column: 6, scope: !14218)
!14258 = !DILocation(line: 1190, column: 3, scope: !14239)
!14259 = !DILocation(line: 1190, column: 3, scope: !14248)
!14260 = !DILocation(line: 0, scope: !14248)
!14261 = !DILocation(line: 1190, column: 3, scope: !14249)
!14262 = !DILocation(line: 1193, column: 2, scope: !14240)
!14263 = !DILocation(line: 1191, column: 42, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14249, file: !2149, line: 1190, column: 54)
!14265 = !DILocation(line: 1191, column: 12, scope: !14264)
!14266 = !DILocation(line: 1191, column: 22, scope: !14264)
!14267 = distinct !{!14267, !14258, !14268}
!14268 = !DILocation(line: 1192, column: 3, scope: !14239)
!14269 = !DILocation(line: 1195, column: 17, scope: !14218)
!14270 = !DILocation(line: 1195, column: 37, scope: !14218)
!14271 = !DILocation(line: 1195, column: 2, scope: !14218)
!14272 = !DILocation(line: 1196, column: 1, scope: !14218)
!14273 = !DISubprogram(name: "z_rb_foreach_next", scope: !289, file: !289, line: 176, type: !14274, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14274 = !DISubroutineType(types: !14275)
!14275 = !{!2073, !14276, !14277}
!14276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14226, size: 32)
!14277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14242, size: 32)
!14278 = !DISubprogram(name: "rb_insert", scope: !289, file: !289, line: 105, type: !14279, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14279 = !DISubroutineType(types: !14280)
!14280 = !{null, !14276, !2073}
!14281 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2149, file: !2149, line: 1198, type: !14219, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14282)
!14282 = !{!14283, !14284}
!14283 = !DILocalVariable(name: "pq", arg: 1, scope: !14281, file: !2149, line: 1198, type: !14221)
!14284 = !DILocalVariable(name: "thread", arg: 2, scope: !14281, file: !2149, line: 1198, type: !2044)
!14285 = !DILocation(line: 0, scope: !14281)
!14286 = !DILocation(line: 1202, column: 17, scope: !14281)
!14287 = !DILocation(line: 1202, column: 37, scope: !14281)
!14288 = !DILocation(line: 1202, column: 2, scope: !14281)
!14289 = !DILocation(line: 1204, column: 16, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14281, file: !2149, line: 1204, column: 6)
!14291 = !DILocation(line: 1204, column: 7, scope: !14290)
!14292 = !DILocation(line: 1204, column: 6, scope: !14281)
!14293 = !DILocation(line: 1205, column: 7, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14290, file: !2149, line: 1204, column: 22)
!14295 = !DILocation(line: 1205, column: 22, scope: !14294)
!14296 = !DILocation(line: 1206, column: 2, scope: !14294)
!14297 = !DILocation(line: 1207, column: 1, scope: !14281)
!14298 = !DISubprogram(name: "rb_remove", scope: !289, file: !289, line: 110, type: !14279, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14299 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2149, file: !2149, line: 1209, type: !14300, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14302)
!14300 = !DISubroutineType(types: !14301)
!14301 = !{!2044, !14221}
!14302 = !{!14303, !14304, !14305}
!14303 = !DILocalVariable(name: "pq", arg: 1, scope: !14299, file: !2149, line: 1209, type: !14221)
!14304 = !DILocalVariable(name: "thread", scope: !14299, file: !2149, line: 1211, type: !2044)
!14305 = !DILocalVariable(name: "n", scope: !14299, file: !2149, line: 1212, type: !2073)
!14306 = !DILocation(line: 0, scope: !14299)
!14307 = !DILocation(line: 1212, column: 37, scope: !14299)
!14308 = !DILocation(line: 1212, column: 21, scope: !14299)
!14309 = !DILocation(line: 1217, column: 2, scope: !14299)
!14310 = distinct !DISubprogram(name: "rb_get_min", scope: !289, file: !289, line: 115, type: !14311, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14313)
!14311 = !DISubroutineType(types: !14312)
!14312 = !{!2073, !14276}
!14313 = !{!14314}
!14314 = !DILocalVariable(name: "tree", arg: 1, scope: !14310, file: !289, line: 115, type: !14276)
!14315 = !DILocation(line: 0, scope: !14310)
!14316 = !DILocation(line: 117, column: 9, scope: !14310)
!14317 = !DILocation(line: 117, column: 2, scope: !14310)
!14318 = !DISubprogram(name: "z_rb_get_minmax", scope: !289, file: !289, line: 100, type: !14319, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14319 = !DISubroutineType(types: !14320)
!14320 = !{!2073, !14276, !208}
!14321 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2149, file: !2149, line: 1246, type: !14322, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14332)
!14322 = !DISubroutineType(types: !14323)
!14323 = !{!2044, !14324}
!14324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14325, size: 32)
!14325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14223, line: 53, size: 2080, elements: !14326)
!14326 = !{!14327, !14331}
!14327 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14325, file: !14223, line: 54, baseType: !14328, size: 2048)
!14328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2080, size: 2048, elements: !14329)
!14329 = !{!14330}
!14330 = !DISubrange(count: 32)
!14331 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14325, file: !14223, line: 55, baseType: !32, size: 32, offset: 2048)
!14332 = !{!14333, !14334, !14335, !14336}
!14333 = !DILocalVariable(name: "pq", arg: 1, scope: !14321, file: !2149, line: 1246, type: !14324)
!14334 = !DILocalVariable(name: "thread", scope: !14321, file: !2149, line: 1252, type: !2044)
!14335 = !DILocalVariable(name: "l", scope: !14321, file: !2149, line: 1253, type: !13131)
!14336 = !DILocalVariable(name: "n", scope: !14321, file: !2149, line: 1254, type: !2145)
!14337 = !DILocation(line: 0, scope: !14321)
!14338 = !DILocation(line: 1248, column: 11, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14321, file: !2149, line: 1248, column: 6)
!14340 = !DILocation(line: 1248, column: 7, scope: !14339)
!14341 = !DILocation(line: 1248, column: 6, scope: !14321)
!14342 = !DILocation(line: 1253, column: 31, scope: !14321)
!14343 = !DILocation(line: 1253, column: 20, scope: !14321)
!14344 = !DILocation(line: 1254, column: 19, scope: !14321)
!14345 = !DILocation(line: 1260, column: 1, scope: !14321)
!14346 = distinct !DISubprogram(name: "z_unpend_all", scope: !2149, file: !2149, line: 1262, type: !14347, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14349)
!14347 = !DISubroutineType(types: !14348)
!14348 = !{!103, !2075}
!14349 = !{!14350, !14351, !14352}
!14350 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14346, file: !2149, line: 1262, type: !2075)
!14351 = !DILocalVariable(name: "need_sched", scope: !14346, file: !2149, line: 1264, type: !103)
!14352 = !DILocalVariable(name: "thread", scope: !14346, file: !2149, line: 1265, type: !2044)
!14353 = !DILocation(line: 0, scope: !14346)
!14354 = !DILocation(line: 1267, column: 19, scope: !14346)
!14355 = !DILocation(line: 1267, column: 41, scope: !14346)
!14356 = !DILocation(line: 1267, column: 2, scope: !14346)
!14357 = !DILocation(line: 1268, column: 3, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14346, file: !2149, line: 1267, column: 50)
!14359 = !DILocation(line: 1269, column: 3, scope: !14358)
!14360 = distinct !{!14360, !14356, !14361}
!14361 = !DILocation(line: 1271, column: 2, scope: !14346)
!14362 = !DILocation(line: 1273, column: 2, scope: !14346)
!14363 = distinct !DISubprogram(name: "z_waitq_head", scope: !12526, file: !12526, line: 52, type: !13979, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14364)
!14364 = !{!14365}
!14365 = !DILocalVariable(name: "w", arg: 1, scope: !14363, file: !12526, line: 52, type: !2075)
!14366 = !DILocation(line: 0, scope: !14363)
!14367 = !DILocation(line: 54, column: 52, scope: !14363)
!14368 = !DILocation(line: 54, column: 28, scope: !14363)
!14369 = !DILocation(line: 54, column: 9, scope: !14363)
!14370 = !DILocation(line: 54, column: 2, scope: !14363)
!14371 = distinct !DISubprogram(name: "init_ready_q", scope: !2149, file: !2149, line: 1276, type: !14372, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14379)
!14372 = !DISubroutineType(types: !14373)
!14373 = !{null, !14374}
!14374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14375, size: 32)
!14375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !14376)
!14376 = !{!14377, !14378}
!14377 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14375, file: !299, line: 86, baseType: !2044, size: 32)
!14378 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14375, file: !299, line: 90, baseType: !2080, size: 64, offset: 32)
!14379 = !{!14380}
!14380 = !DILocalVariable(name: "rq", arg: 1, scope: !14371, file: !2149, line: 1276, type: !14374)
!14381 = !DILocation(line: 0, scope: !14371)
!14382 = !DILocation(line: 1289, column: 22, scope: !14371)
!14383 = !DILocation(line: 1289, column: 2, scope: !14371)
!14384 = !DILocation(line: 1291, column: 1, scope: !14371)
!14385 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !14386, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14388)
!14386 = !DISubroutineType(types: !14387)
!14387 = !{null, !13131}
!14388 = !{!14389}
!14389 = !DILocalVariable(name: "list", arg: 1, scope: !14385, file: !273, line: 197, type: !13131)
!14390 = !DILocation(line: 0, scope: !14385)
!14391 = !DILocation(line: 199, column: 8, scope: !14385)
!14392 = !DILocation(line: 199, column: 13, scope: !14385)
!14393 = !DILocation(line: 200, column: 8, scope: !14385)
!14394 = !DILocation(line: 200, column: 13, scope: !14385)
!14395 = !DILocation(line: 201, column: 1, scope: !14385)
!14396 = distinct !DISubprogram(name: "z_sched_init", scope: !2149, file: !2149, line: 1293, type: !2802, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!14397 = !DILocation(line: 1302, column: 2, scope: !14396)
!14398 = !DILocation(line: 1306, column: 2, scope: !14396)
!14399 = !DILocation(line: 1309, column: 1, scope: !14396)
!14400 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2149, file: !2149, line: 1311, type: !14401, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14404)
!14401 = !DISubroutineType(types: !14402)
!14402 = !{!103, !14403}
!14403 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !2044)
!14404 = !{!14405}
!14405 = !DILocalVariable(name: "thread", arg: 1, scope: !14400, file: !2149, line: 1311, type: !14403)
!14406 = !DILocation(line: 0, scope: !14400)
!14407 = !DILocation(line: 1313, column: 22, scope: !14400)
!14408 = !DILocation(line: 1313, column: 9, scope: !14400)
!14409 = !DILocation(line: 1313, column: 2, scope: !14400)
!14410 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2149, file: !2149, line: 1325, type: !14411, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14413)
!14411 = !DISubroutineType(types: !14412)
!14412 = !{null, !14403, !103}
!14413 = !{!14414, !14415, !14416}
!14414 = !DILocalVariable(name: "thread", arg: 1, scope: !14410, file: !2149, line: 1325, type: !14403)
!14415 = !DILocalVariable(name: "prio", arg: 2, scope: !14410, file: !2149, line: 1325, type: !103)
!14416 = !DILocalVariable(name: "th", scope: !14410, file: !2149, line: 1334, type: !2044)
!14417 = !DILocation(line: 0, scope: !14410)
!14418 = !DILocation(line: 1336, column: 2, scope: !14410)
!14419 = !DILocation(line: 1337, column: 1, scope: !14410)
!14420 = distinct !DISubprogram(name: "k_can_yield", scope: !2149, file: !2149, line: 1384, type: !7061, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!14421 = !DILocation(line: 1386, column: 11, scope: !14420)
!14422 = !DILocation(line: 1386, column: 29, scope: !14420)
!14423 = !DILocation(line: 1386, column: 32, scope: !14420)
!14424 = !DILocation(line: 1386, column: 46, scope: !14420)
!14425 = !DILocation(line: 1387, column: 28, scope: !14420)
!14426 = !DILocation(line: 1387, column: 4, scope: !14420)
!14427 = !DILocation(line: 1386, column: 2, scope: !14420)
!14428 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !357, file: !357, line: 989, type: !7061, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!14429 = !DILocation(line: 993, column: 10, scope: !14428)
!14430 = !DILocation(line: 993, column: 2, scope: !14428)
!14431 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2149, file: !2149, line: 1390, type: !2802, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14432)
!14432 = !{!14433}
!14433 = !DILocalVariable(name: "key", scope: !14431, file: !2149, line: 1396, type: !12920)
!14434 = !DILocation(line: 0, scope: !12928, inlinedAt: !14435)
!14435 = distinct !DILocation(line: 1396, column: 25, scope: !14431)
!14436 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !14437)
!14437 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !14435)
!14438 = !DILocation(line: 0, scope: !12937, inlinedAt: !14437)
!14439 = !DILocation(line: 0, scope: !14431)
!14440 = !DILocation(line: 1400, column: 18, scope: !14441)
!14441 = distinct !DILexicalBlock(scope: !14442, file: !2149, line: 1399, column: 36)
!14442 = distinct !DILexicalBlock(scope: !14431, file: !2149, line: 1398, column: 6)
!14443 = !DILocation(line: 0, scope: !13097, inlinedAt: !14444)
!14444 = distinct !DILocation(line: 1400, column: 3, scope: !14441)
!14445 = !DILocation(line: 266, column: 15, scope: !13097, inlinedAt: !14444)
!14446 = !DILocation(line: 266, column: 28, scope: !13097, inlinedAt: !14444)
!14447 = !DILocation(line: 0, scope: !13105, inlinedAt: !14448)
!14448 = distinct !DILocation(line: 268, column: 3, scope: !13109, inlinedAt: !14444)
!14449 = !DILocation(line: 234, column: 2, scope: !13105, inlinedAt: !14448)
!14450 = !DILocation(line: 1402, column: 15, scope: !14431)
!14451 = !DILocation(line: 0, scope: !13114, inlinedAt: !14452)
!14452 = distinct !DILocation(line: 1402, column: 2, scope: !14431)
!14453 = !DILocation(line: 252, column: 15, scope: !13114, inlinedAt: !14452)
!14454 = !DILocation(line: 252, column: 28, scope: !13114, inlinedAt: !14452)
!14455 = !DILocation(line: 0, scope: !13121, inlinedAt: !14456)
!14456 = distinct !DILocation(line: 254, column: 3, scope: !13125, inlinedAt: !14452)
!14457 = !DILocation(line: 0, scope: !13128, inlinedAt: !14458)
!14458 = distinct !DILocation(line: 229, column: 2, scope: !13121, inlinedAt: !14456)
!14459 = !DILocation(line: 188, column: 2, scope: !13138, inlinedAt: !14458)
!14460 = !DILocation(line: 188, column: 2, scope: !13140, inlinedAt: !14458)
!14461 = !DILocation(line: 0, scope: !13138, inlinedAt: !14458)
!14462 = !DILocation(line: 189, column: 7, scope: !13143, inlinedAt: !14458)
!14463 = !DILocation(line: 189, column: 35, scope: !13143, inlinedAt: !14458)
!14464 = !DILocation(line: 189, column: 7, scope: !13144, inlinedAt: !14458)
!14465 = !DILocation(line: 191, column: 21, scope: !13148, inlinedAt: !14458)
!14466 = !DILocation(line: 190, column: 4, scope: !13148, inlinedAt: !14458)
!14467 = !DILocation(line: 192, column: 4, scope: !13148, inlinedAt: !14458)
!14468 = distinct !{!14468, !14459, !14469}
!14469 = !DILocation(line: 194, column: 2, scope: !13138, inlinedAt: !14458)
!14470 = !DILocation(line: 196, column: 37, scope: !13128, inlinedAt: !14458)
!14471 = !DILocation(line: 196, column: 2, scope: !13128, inlinedAt: !14458)
!14472 = !DILocation(line: 197, column: 1, scope: !13128, inlinedAt: !14458)
!14473 = !DILocation(line: 1403, column: 2, scope: !14431)
!14474 = !DILocation(line: 0, scope: !13539, inlinedAt: !14475)
!14475 = distinct !DILocation(line: 1404, column: 2, scope: !14431)
!14476 = !DILocation(line: 196, column: 9, scope: !13539, inlinedAt: !14475)
!14477 = !DILocation(line: 1405, column: 1, scope: !14431)
!14478 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2149, file: !2149, line: 1459, type: !14479, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14481)
!14479 = !DISubroutineType(types: !14480)
!14480 = !{!612, !13719}
!14481 = !{!14482, !14483, !14484}
!14482 = !DILocalVariable(name: "timeout", arg: 1, scope: !14478, file: !2149, line: 1459, type: !13719)
!14483 = !DILocalVariable(name: "ticks", scope: !14478, file: !2149, line: 1461, type: !1399)
!14484 = !DILocalVariable(name: "ret", scope: !14478, file: !2149, line: 1480, type: !612)
!14485 = !DILocation(line: 0, scope: !14478)
!14486 = !DILocation(line: 1468, column: 6, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14478, file: !2149, line: 1468, column: 6)
!14488 = !DILocation(line: 1468, column: 6, scope: !14478)
!14489 = !DILocation(line: 1469, column: 20, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14487, file: !2149, line: 1468, column: 40)
!14491 = !DILocation(line: 1469, column: 3, scope: !14490)
!14492 = !DILocation(line: 1473, column: 3, scope: !14490)
!14493 = !DILocation(line: 1478, column: 10, scope: !14478)
!14494 = !DILocation(line: 1480, column: 16, scope: !14478)
!14495 = !DILocation(line: 1485, column: 1, scope: !14478)
!14496 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3252, file: !3252, line: 310, type: !14497, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14499)
!14497 = !DISubroutineType(types: !14498)
!14498 = !{null, !14403}
!14499 = !{!14500}
!14500 = !DILocalVariable(name: "thread", arg: 1, scope: !14496, file: !3252, line: 310, type: !14403)
!14501 = !DILocation(line: 0, scope: !14496)
!14502 = !DILocation(line: 319, column: 2, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14496, file: !3252, line: 319, column: 2)
!14504 = !{i64 2154107531}
!14505 = !DILocation(line: 320, column: 2, scope: !14496)
!14506 = !DILocation(line: 321, column: 1, scope: !14496)
!14507 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2149, file: !2149, line: 1415, type: !14508, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14510)
!14508 = !DISubroutineType(types: !14509)
!14509 = !{!612, !1399}
!14510 = !{!14511, !14512, !14513, !14514}
!14511 = !DILocalVariable(name: "ticks", arg: 1, scope: !14507, file: !2149, line: 1415, type: !1399)
!14512 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14507, file: !2149, line: 1418, type: !137)
!14513 = !DILocalVariable(name: "timeout", scope: !14507, file: !2149, line: 1430, type: !13719)
!14514 = !DILocalVariable(name: "key", scope: !14507, file: !2149, line: 1437, type: !12920)
!14515 = !DILocation(line: 0, scope: !14507)
!14516 = !DILocation(line: 1425, column: 12, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14507, file: !2149, line: 1425, column: 6)
!14518 = !DILocation(line: 1425, column: 6, scope: !14507)
!14519 = !DILocation(line: 1426, column: 3, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14517, file: !2149, line: 1425, column: 18)
!14521 = !DILocation(line: 1427, column: 3, scope: !14520)
!14522 = !DILocation(line: 1431, column: 24, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14507, file: !2149, line: 1431, column: 6)
!14524 = !DILocation(line: 1431, column: 6, scope: !14507)
!14525 = !DILocation(line: 1432, column: 35, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !14523, file: !2149, line: 1431, column: 30)
!14527 = !DILocation(line: 1432, column: 27, scope: !14526)
!14528 = !DILocation(line: 1433, column: 2, scope: !14526)
!14529 = !DILocation(line: 1434, column: 27, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14523, file: !2149, line: 1433, column: 9)
!14531 = !DILocation(line: 0, scope: !14523)
!14532 = !DILocation(line: 0, scope: !12928, inlinedAt: !14533)
!14533 = distinct !DILocation(line: 1437, column: 25, scope: !14507)
!14534 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !14535)
!14535 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !14533)
!14536 = !DILocation(line: 0, scope: !12937, inlinedAt: !14535)
!14537 = !DILocation(line: 1440, column: 20, scope: !14507)
!14538 = !DILocation(line: 1440, column: 18, scope: !14507)
!14539 = !DILocation(line: 1442, column: 2, scope: !14507)
!14540 = !DILocation(line: 1443, column: 23, scope: !14507)
!14541 = !DILocation(line: 1443, column: 2, scope: !14507)
!14542 = !DILocation(line: 1444, column: 29, scope: !14507)
!14543 = !DILocation(line: 1444, column: 2, scope: !14507)
!14544 = !DILocation(line: 0, scope: !13539, inlinedAt: !14545)
!14545 = distinct !DILocation(line: 1446, column: 8, scope: !14507)
!14546 = !DILocation(line: 196, column: 9, scope: !13539, inlinedAt: !14545)
!14547 = !DILocation(line: 1450, column: 10, scope: !14507)
!14548 = !DILocation(line: 1450, column: 45, scope: !14507)
!14549 = !DILocation(line: 1450, column: 43, scope: !14507)
!14550 = !DILocation(line: 1451, column: 6, scope: !14507)
!14551 = !DILocation(line: 1457, column: 1, scope: !14507)
!14552 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12761, file: !12761, line: 1103, type: !12762, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14553)
!14553 = !{!14554}
!14554 = !DILocalVariable(name: "t", arg: 1, scope: !14552, file: !12761, line: 1103, type: !163)
!14555 = !DILocation(line: 0, scope: !14552)
!14556 = !DILocation(line: 0, scope: !12975, inlinedAt: !14557)
!14557 = distinct !DILocation(line: 1106, column: 9, scope: !14552)
!14558 = !DILocation(line: 139, column: 13, scope: !14559, inlinedAt: !14557)
!14559 = distinct !DILexicalBlock(scope: !14560, file: !12761, line: 138, column: 10)
!14560 = distinct !DILexicalBlock(scope: !14561, file: !12761, line: 136, column: 7)
!14561 = distinct !DILexicalBlock(scope: !12996, file: !12761, line: 134, column: 17)
!14562 = !DILocation(line: 1106, column: 2, scope: !14552)
!14563 = distinct !DISubprogram(name: "k_yield", scope: !3252, file: !3252, line: 140, type: !2802, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!14564 = !DILocation(line: 148, column: 2, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14563, file: !3252, line: 148, column: 2)
!14566 = !{i64 2154106851}
!14567 = !DILocation(line: 149, column: 2, scope: !14563)
!14568 = !DILocation(line: 150, column: 1, scope: !14563)
!14569 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2149, file: !2149, line: 1495, type: !14570, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14572)
!14570 = !DISubroutineType(types: !14571)
!14571 = !{!612, !103}
!14572 = !{!14573, !14574}
!14573 = !DILocalVariable(name: "us", arg: 1, scope: !14569, file: !2149, line: 1495, type: !103)
!14574 = !DILocalVariable(name: "ticks", scope: !14569, file: !2149, line: 1497, type: !612)
!14575 = !DILocation(line: 0, scope: !14569)
!14576 = !DILocation(line: 1501, column: 31, scope: !14569)
!14577 = !DILocation(line: 1501, column: 10, scope: !14569)
!14578 = !DILocation(line: 1502, column: 23, scope: !14569)
!14579 = !DILocation(line: 1502, column: 10, scope: !14569)
!14580 = !DILocation(line: 1506, column: 31, scope: !14569)
!14581 = !DILocation(line: 1506, column: 9, scope: !14569)
!14582 = !DILocation(line: 1506, column: 2, scope: !14569)
!14583 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12761, file: !12761, line: 571, type: !12762, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14584)
!14584 = !{!14585}
!14585 = !DILocalVariable(name: "t", arg: 1, scope: !14583, file: !12761, line: 571, type: !163)
!14586 = !DILocation(line: 0, scope: !14583)
!14587 = !DILocation(line: 0, scope: !12975, inlinedAt: !14588)
!14588 = distinct !DILocation(line: 574, column: 9, scope: !14583)
!14589 = !DILocation(line: 135, column: 5, scope: !14561, inlinedAt: !14588)
!14590 = !DILocation(line: 139, column: 13, scope: !14559, inlinedAt: !14588)
!14591 = !DILocation(line: 574, column: 2, scope: !14583)
!14592 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12761, file: !12761, line: 1187, type: !12762, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14593)
!14593 = !{!14594}
!14594 = !DILocalVariable(name: "t", arg: 1, scope: !14592, file: !12761, line: 1187, type: !163)
!14595 = !DILocation(line: 0, scope: !14592)
!14596 = !DILocation(line: 0, scope: !12975, inlinedAt: !14597)
!14597 = distinct !DILocation(line: 1190, column: 9, scope: !14592)
!14598 = !DILocation(line: 145, column: 13, scope: !14599, inlinedAt: !14597)
!14599 = distinct !DILexicalBlock(scope: !12993, file: !12761, line: 144, column: 10)
!14600 = !DILocation(line: 1190, column: 2, scope: !14592)
!14601 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2149, file: !2149, line: 1517, type: !14497, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14602)
!14602 = !{!14603}
!14603 = !DILocalVariable(name: "thread", arg: 1, scope: !14601, file: !2149, line: 1517, type: !14403)
!14604 = !DILocation(line: 0, scope: !14601)
!14605 = !DILocation(line: 1521, column: 6, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14601, file: !2149, line: 1521, column: 6)
!14607 = !DILocation(line: 1521, column: 6, scope: !14601)
!14608 = !DILocation(line: 1525, column: 6, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14601, file: !2149, line: 1525, column: 6)
!14610 = !DILocation(line: 1525, column: 37, scope: !14609)
!14611 = !DILocation(line: 1525, column: 6, scope: !14601)
!14612 = !DILocation(line: 1527, column: 20, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14614, file: !2149, line: 1527, column: 7)
!14614 = distinct !DILexicalBlock(scope: !14609, file: !2149, line: 1525, column: 42)
!14615 = !DILocation(line: 1527, column: 33, scope: !14613)
!14616 = !DILocation(line: 1527, column: 7, scope: !14614)
!14617 = !DILocation(line: 1532, column: 2, scope: !14601)
!14618 = !DILocation(line: 1533, column: 2, scope: !14601)
!14619 = !DILocation(line: 1031, column: 3, scope: !13572, inlinedAt: !14620)
!14620 = distinct !DILocation(line: 48, column: 10, scope: !13576, inlinedAt: !14621)
!14621 = distinct !DILocation(line: 1537, column: 7, scope: !14622)
!14622 = distinct !DILexicalBlock(scope: !14601, file: !2149, line: 1537, column: 6)
!14623 = !DILocation(line: 0, scope: !13572, inlinedAt: !14620)
!14624 = !DILocation(line: 48, column: 9, scope: !13576, inlinedAt: !14621)
!14625 = !DILocation(line: 1537, column: 6, scope: !14601)
!14626 = !DILocation(line: 1538, column: 3, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14622, file: !2149, line: 1537, column: 25)
!14628 = !DILocation(line: 1539, column: 2, scope: !14627)
!14629 = !DILocation(line: 1540, column: 1, scope: !14601)
!14630 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12200, file: !12200, line: 101, type: !13046, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14631)
!14631 = !{!14632}
!14632 = !DILocalVariable(name: "thread", arg: 1, scope: !14630, file: !12200, line: 101, type: !2044)
!14633 = !DILocation(line: 0, scope: !14630)
!14634 = !DILocation(line: 103, column: 23, scope: !14630)
!14635 = !DILocation(line: 103, column: 36, scope: !14630)
!14636 = !DILocation(line: 103, column: 55, scope: !14630)
!14637 = !DILocation(line: 103, column: 2, scope: !14630)
!14638 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2149, file: !2149, line: 1567, type: !14639, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14641)
!14639 = !DISubroutineType(types: !14640)
!14640 = !{!14403}
!14641 = !{!14642}
!14642 = !DILocalVariable(name: "ret", scope: !14638, file: !2149, line: 1577, type: !14403)
!14643 = !DILocation(line: 1577, column: 30, scope: !14638)
!14644 = !DILocation(line: 0, scope: !14638)
!14645 = !DILocation(line: 1582, column: 2, scope: !14638)
!14646 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2149, file: !2149, line: 1593, type: !7335, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!14647 = !DILocation(line: 1031, column: 3, scope: !13572, inlinedAt: !14648)
!14648 = distinct !DILocation(line: 48, column: 10, scope: !13576, inlinedAt: !14649)
!14649 = distinct !DILocation(line: 1595, column: 10, scope: !14646)
!14650 = !DILocation(line: 0, scope: !13572, inlinedAt: !14648)
!14651 = !DILocation(line: 48, column: 9, scope: !13576, inlinedAt: !14649)
!14652 = !DILocation(line: 1595, column: 27, scope: !14646)
!14653 = !DILocation(line: 1595, column: 41, scope: !14646)
!14654 = !DILocation(line: 1595, column: 30, scope: !14646)
!14655 = !DILocation(line: 1595, column: 2, scope: !14646)
!14656 = distinct !DISubprogram(name: "z_thread_abort", scope: !2149, file: !2149, line: 1725, type: !12886, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14657)
!14657 = !{!14658, !14659}
!14658 = !DILocalVariable(name: "thread", arg: 1, scope: !14656, file: !2149, line: 1725, type: !2044)
!14659 = !DILocalVariable(name: "key", scope: !14656, file: !2149, line: 1727, type: !12920)
!14660 = !DILocation(line: 0, scope: !14656)
!14661 = !DILocation(line: 0, scope: !12928, inlinedAt: !14662)
!14662 = distinct !DILocation(line: 1727, column: 25, scope: !14656)
!14663 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !14664)
!14664 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !14662)
!14665 = !DILocation(line: 0, scope: !12937, inlinedAt: !14664)
!14666 = !DILocation(line: 1729, column: 20, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14656, file: !2149, line: 1729, column: 6)
!14668 = !DILocation(line: 1729, column: 33, scope: !14667)
!14669 = !DILocation(line: 1729, column: 48, scope: !14667)
!14670 = !DILocation(line: 1729, column: 6, scope: !14656)
!14671 = !DILocation(line: 0, scope: !12955, inlinedAt: !14672)
!14672 = distinct !DILocation(line: 1730, column: 3, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14667, file: !2149, line: 1729, column: 54)
!14674 = !DILocation(line: 0, scope: !12963, inlinedAt: !14675)
!14675 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !14672)
!14676 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !14675)
!14677 = !DILocation(line: 1732, column: 3, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !14673, file: !2149, line: 1732, column: 3)
!14679 = !{i64 2154844261, i64 2154844277, i64 2154844303, i64 2154844331, i64 2154844351}
!14680 = !DILocation(line: 1733, column: 3, scope: !14673)
!14681 = !DILocation(line: 1736, column: 20, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14656, file: !2149, line: 1736, column: 6)
!14683 = !DILocation(line: 1736, column: 33, scope: !14682)
!14684 = !DILocation(line: 1736, column: 49, scope: !14682)
!14685 = !DILocation(line: 1736, column: 6, scope: !14656)
!14686 = !DILocation(line: 0, scope: !12955, inlinedAt: !14687)
!14687 = distinct !DILocation(line: 1737, column: 3, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14682, file: !2149, line: 1736, column: 56)
!14689 = !DILocation(line: 0, scope: !12963, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !14687)
!14691 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !14690)
!14692 = !DILocation(line: 1738, column: 3, scope: !14688)
!14693 = !DILocation(line: 1775, column: 2, scope: !14656)
!14694 = !DILocation(line: 1776, column: 16, scope: !14695)
!14695 = distinct !DILexicalBlock(scope: !14656, file: !2149, line: 1776, column: 6)
!14696 = !DILocation(line: 1776, column: 13, scope: !14695)
!14697 = !DILocation(line: 1776, column: 25, scope: !14695)
!14698 = !DILocation(line: 1031, column: 3, scope: !13572, inlinedAt: !14699)
!14699 = distinct !DILocation(line: 48, column: 10, scope: !13576, inlinedAt: !14700)
!14700 = distinct !DILocation(line: 1776, column: 29, scope: !14695)
!14701 = !DILocation(line: 0, scope: !13572, inlinedAt: !14699)
!14702 = !DILocation(line: 48, column: 9, scope: !13576, inlinedAt: !14700)
!14703 = !DILocation(line: 1776, column: 6, scope: !14656)
!14704 = !DILocation(line: 0, scope: !13539, inlinedAt: !14705)
!14705 = distinct !DILocation(line: 1777, column: 3, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14695, file: !2149, line: 1776, column: 47)
!14707 = !DILocation(line: 196, column: 9, scope: !13539, inlinedAt: !14705)
!14708 = !DILocation(line: 1779, column: 2, scope: !14706)
!14709 = !DILocation(line: 0, scope: !12955, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 1780, column: 2, scope: !14656)
!14711 = !DILocation(line: 0, scope: !12963, inlinedAt: !14712)
!14712 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !14710)
!14713 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !14712)
!14714 = !DILocation(line: 1781, column: 1, scope: !14656)
!14715 = distinct !DISubprogram(name: "end_thread", scope: !2149, file: !2149, line: 1690, type: !12886, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14716)
!14716 = !{!14717}
!14717 = !DILocalVariable(name: "thread", arg: 1, scope: !14715, file: !2149, line: 1690, type: !2044)
!14718 = !DILocation(line: 0, scope: !14715)
!14719 = !DILocation(line: 1695, column: 20, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14715, file: !2149, line: 1695, column: 6)
!14721 = !DILocation(line: 1695, column: 33, scope: !14720)
!14722 = !DILocation(line: 1695, column: 49, scope: !14720)
!14723 = !DILocation(line: 1695, column: 6, scope: !14715)
!14724 = !DILocation(line: 1697, column: 29, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14720, file: !2149, line: 1695, column: 56)
!14726 = !DILocation(line: 1698, column: 7, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14725, file: !2149, line: 1698, column: 7)
!14728 = !DILocation(line: 1698, column: 7, scope: !14725)
!14729 = !DILocation(line: 0, scope: !13097, inlinedAt: !14730)
!14730 = distinct !DILocation(line: 1699, column: 4, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14727, file: !2149, line: 1698, column: 35)
!14732 = !DILocation(line: 266, column: 28, scope: !13097, inlinedAt: !14730)
!14733 = !DILocation(line: 0, scope: !13105, inlinedAt: !14734)
!14734 = distinct !DILocation(line: 268, column: 3, scope: !13109, inlinedAt: !14730)
!14735 = !DILocation(line: 234, column: 2, scope: !13105, inlinedAt: !14734)
!14736 = !DILocation(line: 1700, column: 3, scope: !14731)
!14737 = !DILocation(line: 1701, column: 20, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14725, file: !2149, line: 1701, column: 7)
!14739 = !DILocation(line: 1701, column: 30, scope: !14738)
!14740 = !DILocation(line: 1701, column: 7, scope: !14725)
!14741 = !DILocation(line: 1702, column: 4, scope: !14742)
!14742 = distinct !DILexicalBlock(scope: !14738, file: !2149, line: 1701, column: 39)
!14743 = !DILocation(line: 1703, column: 3, scope: !14742)
!14744 = !DILocation(line: 1704, column: 9, scope: !14725)
!14745 = !DILocation(line: 1705, column: 23, scope: !14725)
!14746 = !DILocation(line: 1705, column: 3, scope: !14725)
!14747 = !DILocation(line: 1706, column: 3, scope: !14725)
!14748 = !DILocation(line: 1722, column: 2, scope: !14725)
!14749 = !DILocation(line: 1723, column: 1, scope: !14715)
!14750 = distinct !DISubprogram(name: "unpend_all", scope: !2149, file: !2149, line: 1674, type: !14751, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14753)
!14751 = !DISubroutineType(types: !14752)
!14752 = !{null, !2075}
!14753 = !{!14754, !14755}
!14754 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14750, file: !2149, line: 1674, type: !2075)
!14755 = !DILocalVariable(name: "thread", scope: !14750, file: !2149, line: 1676, type: !2044)
!14756 = !DILocation(line: 0, scope: !14750)
!14757 = !DILocation(line: 1678, column: 19, scope: !14750)
!14758 = !DILocation(line: 1678, column: 41, scope: !14750)
!14759 = !DILocation(line: 1678, column: 2, scope: !14750)
!14760 = !DILocation(line: 1679, column: 3, scope: !14761)
!14761 = distinct !DILexicalBlock(scope: !14750, file: !2149, line: 1678, column: 50)
!14762 = !DILocation(line: 1680, column: 9, scope: !14761)
!14763 = !DILocalVariable(name: "thread", arg: 1, scope: !14764, file: !12220, line: 65, type: !2044)
!14764 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12220, file: !12220, line: 65, type: !14765, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14767)
!14765 = !DISubroutineType(types: !14766)
!14766 = !{null, !2044, !32}
!14767 = !{!14763, !14768}
!14768 = !DILocalVariable(name: "value", arg: 2, scope: !14764, file: !12220, line: 65, type: !32)
!14769 = !DILocation(line: 0, scope: !14764, inlinedAt: !14770)
!14770 = distinct !DILocation(line: 1681, column: 3, scope: !14761)
!14771 = !DILocation(line: 67, column: 15, scope: !14764, inlinedAt: !14770)
!14772 = !DILocation(line: 67, column: 33, scope: !14764, inlinedAt: !14770)
!14773 = !DILocation(line: 1682, column: 3, scope: !14761)
!14774 = distinct !{!14774, !14759, !14775}
!14775 = !DILocation(line: 1683, column: 2, scope: !14750)
!14776 = !DILocation(line: 1684, column: 1, scope: !14750)
!14777 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2149, file: !2149, line: 1794, type: !14778, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14780)
!14778 = !DISubroutineType(types: !14779)
!14779 = !{!103, !2044, !13719}
!14780 = !{!14781, !14782, !14783, !14784}
!14781 = !DILocalVariable(name: "thread", arg: 1, scope: !14777, file: !2149, line: 1794, type: !2044)
!14782 = !DILocalVariable(name: "timeout", arg: 2, scope: !14777, file: !2149, line: 1794, type: !13719)
!14783 = !DILocalVariable(name: "key", scope: !14777, file: !2149, line: 1796, type: !12920)
!14784 = !DILocalVariable(name: "ret", scope: !14777, file: !2149, line: 1797, type: !103)
!14785 = !DILocation(line: 0, scope: !14777)
!14786 = !DILocation(line: 0, scope: !12928, inlinedAt: !14787)
!14787 = distinct !DILocation(line: 1796, column: 25, scope: !14777)
!14788 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !14789)
!14789 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !14787)
!14790 = !DILocation(line: 0, scope: !12937, inlinedAt: !14789)
!14791 = !DILocation(line: 1801, column: 20, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14777, file: !2149, line: 1801, column: 6)
!14793 = !DILocation(line: 1801, column: 33, scope: !14792)
!14794 = !DILocation(line: 1801, column: 49, scope: !14792)
!14795 = !DILocation(line: 1801, column: 6, scope: !14777)
!14796 = !DILocation(line: 1803, column: 13, scope: !14797)
!14797 = distinct !DILexicalBlock(scope: !14792, file: !2149, line: 1803, column: 13)
!14798 = !DILocation(line: 1803, column: 13, scope: !14792)
!14799 = !DILocation(line: 1805, column: 24, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14797, file: !2149, line: 1805, column: 13)
!14801 = !DILocation(line: 1805, column: 21, scope: !14800)
!14802 = !DILocation(line: 1805, column: 34, scope: !14800)
!14803 = !DILocation(line: 1806, column: 20, scope: !14800)
!14804 = !DILocation(line: 1806, column: 44, scope: !14800)
!14805 = !DILocation(line: 1806, column: 30, scope: !14800)
!14806 = !DILocation(line: 1805, column: 13, scope: !14797)
!14807 = !DILocation(line: 1810, column: 42, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14800, file: !2149, line: 1808, column: 9)
!14809 = !DILocation(line: 1810, column: 3, scope: !14808)
!14810 = !DILocation(line: 1811, column: 22, scope: !14808)
!14811 = !DILocation(line: 1811, column: 3, scope: !14808)
!14812 = !DILocation(line: 0, scope: !13539, inlinedAt: !14813)
!14813 = distinct !DILocation(line: 1814, column: 9, scope: !14808)
!14814 = !DILocation(line: 196, column: 9, scope: !13539, inlinedAt: !14813)
!14815 = !DILocation(line: 1817, column: 3, scope: !14808)
!14816 = !DILocation(line: 0, scope: !14792)
!14817 = !DILocation(line: 0, scope: !12955, inlinedAt: !14818)
!14818 = distinct !DILocation(line: 1822, column: 2, scope: !14777)
!14819 = !DILocation(line: 0, scope: !12963, inlinedAt: !14820)
!14820 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !14818)
!14821 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !14820)
!14822 = !DILocation(line: 1823, column: 2, scope: !14777)
!14823 = !DILocation(line: 1824, column: 1, scope: !14777)
!14824 = distinct !DISubprogram(name: "z_sched_wake", scope: !2149, file: !2149, line: 1882, type: !14825, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14827)
!14825 = !DISubroutineType(types: !14826)
!14826 = !{!211, !2075, !103, !102}
!14827 = !{!14828, !14829, !14830, !14831, !14832, !14833, !14835}
!14828 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14824, file: !2149, line: 1882, type: !2075)
!14829 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14824, file: !2149, line: 1882, type: !103)
!14830 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14824, file: !2149, line: 1882, type: !102)
!14831 = !DILocalVariable(name: "thread", scope: !14824, file: !2149, line: 1884, type: !2044)
!14832 = !DILocalVariable(name: "ret", scope: !14824, file: !2149, line: 1885, type: !211)
!14833 = !DILocalVariable(name: "__i", scope: !14834, file: !2149, line: 1887, type: !12920)
!14834 = distinct !DILexicalBlock(scope: !14824, file: !2149, line: 1887, column: 2)
!14835 = !DILocalVariable(name: "__key", scope: !14834, file: !2149, line: 1887, type: !12920)
!14836 = !DILocation(line: 0, scope: !14824)
!14837 = !DILocation(line: 0, scope: !14834)
!14838 = !DILocation(line: 0, scope: !12928, inlinedAt: !14839)
!14839 = distinct !DILocation(line: 1887, column: 2, scope: !14834)
!14840 = !DILocation(line: 55, column: 2, scope: !12937, inlinedAt: !14841)
!14841 = distinct !DILocation(line: 145, column: 10, scope: !12928, inlinedAt: !14839)
!14842 = !DILocation(line: 0, scope: !12937, inlinedAt: !14841)
!14843 = !DILocation(line: 1888, column: 12, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14845, file: !2149, line: 1887, column: 26)
!14845 = distinct !DILexicalBlock(scope: !14834, file: !2149, line: 1887, column: 2)
!14846 = !DILocation(line: 1890, column: 14, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14844, file: !2149, line: 1890, column: 7)
!14848 = !DILocation(line: 1890, column: 7, scope: !14844)
!14849 = !DILocalVariable(name: "thread", arg: 1, scope: !14850, file: !14851, line: 134, type: !2044)
!14850 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14851, file: !14851, line: 134, type: !14852, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14854)
!14851 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14852 = !DISubroutineType(types: !14853)
!14853 = !{null, !2044, !32, !102}
!14854 = !{!14849, !14855, !14856}
!14855 = !DILocalVariable(name: "value", arg: 2, scope: !14850, file: !14851, line: 135, type: !32)
!14856 = !DILocalVariable(name: "data", arg: 3, scope: !14850, file: !14851, line: 136, type: !102)
!14857 = !DILocation(line: 0, scope: !14850, inlinedAt: !14858)
!14858 = distinct !DILocation(line: 1891, column: 4, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14847, file: !2149, line: 1890, column: 23)
!14860 = !DILocation(line: 0, scope: !14764, inlinedAt: !14861)
!14861 = distinct !DILocation(line: 138, column: 2, scope: !14850, inlinedAt: !14858)
!14862 = !DILocation(line: 67, column: 15, scope: !14764, inlinedAt: !14861)
!14863 = !DILocation(line: 67, column: 33, scope: !14764, inlinedAt: !14861)
!14864 = !DILocation(line: 139, column: 15, scope: !14850, inlinedAt: !14858)
!14865 = !DILocation(line: 139, column: 25, scope: !14850, inlinedAt: !14858)
!14866 = !DILocation(line: 1894, column: 4, scope: !14859)
!14867 = !DILocation(line: 1895, column: 10, scope: !14859)
!14868 = !DILocation(line: 1896, column: 4, scope: !14859)
!14869 = !DILocation(line: 1898, column: 3, scope: !14859)
!14870 = !DILocation(line: 0, scope: !12955, inlinedAt: !14871)
!14871 = distinct !DILocation(line: 1887, column: 2, scope: !14845)
!14872 = !DILocation(line: 0, scope: !12963, inlinedAt: !14873)
!14873 = distinct !DILocation(line: 215, column: 2, scope: !12955, inlinedAt: !14871)
!14874 = !DILocation(line: 95, column: 2, scope: !12963, inlinedAt: !14873)
!14875 = !DILocation(line: 1901, column: 2, scope: !14824)
!14876 = distinct !DISubprogram(name: "z_sched_wait", scope: !2149, file: !2149, line: 1904, type: !14877, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !14880)
!14877 = !DISubroutineType(types: !14878)
!14878 = !{!103, !12931, !12920, !2075, !13719, !14879}
!14879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!14880 = !{!14881, !14882, !14883, !14884, !14885, !14886}
!14881 = !DILocalVariable(name: "lock", arg: 1, scope: !14876, file: !2149, line: 1904, type: !12931)
!14882 = !DILocalVariable(name: "key", arg: 2, scope: !14876, file: !2149, line: 1904, type: !12920)
!14883 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14876, file: !2149, line: 1905, type: !2075)
!14884 = !DILocalVariable(name: "timeout", arg: 4, scope: !14876, file: !2149, line: 1905, type: !13719)
!14885 = !DILocalVariable(name: "data", arg: 5, scope: !14876, file: !2149, line: 1905, type: !14879)
!14886 = !DILocalVariable(name: "ret", scope: !14876, file: !2149, line: 1907, type: !103)
!14887 = !DILocation(line: 0, scope: !14876)
!14888 = !DILocation(line: 1907, column: 12, scope: !14876)
!14889 = !DILocation(line: 1909, column: 11, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14876, file: !2149, line: 1909, column: 6)
!14891 = !DILocation(line: 1909, column: 6, scope: !14876)
!14892 = !DILocation(line: 1910, column: 11, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14890, file: !2149, line: 1909, column: 20)
!14894 = !DILocation(line: 1910, column: 26, scope: !14893)
!14895 = !DILocation(line: 1910, column: 9, scope: !14893)
!14896 = !DILocation(line: 1911, column: 2, scope: !14893)
!14897 = !DILocation(line: 1912, column: 2, scope: !14876)
!14898 = distinct !DISubprogram(name: "z_data_copy", scope: !14899, file: !14899, line: 22, type: !2802, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !162)
!14899 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14900 = !DILocation(line: 24, column: 2, scope: !14898)
!14901 = !DILocation(line: 27, column: 2, scope: !14898)
!14902 = !DILocation(line: 71, column: 1, scope: !14898)
!14903 = distinct !DISubprogram(name: "z_add_timeout", scope: !2186, file: !2186, line: 88, type: !14904, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !14910)
!14904 = !DISubroutineType(types: !14905)
!14905 = !{null, !2159, !2178, !14906}
!14906 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1400, line: 67, baseType: !14907)
!14907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1400, line: 65, size: 64, elements: !14908)
!14908 = !{!14909}
!14909 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14907, file: !1400, line: 66, baseType: !1399, size: 64)
!14910 = !{!14911, !14912, !14913, !14914, !14920, !14921, !14924, !14927}
!14911 = !DILocalVariable(name: "to", arg: 1, scope: !14903, file: !2186, line: 88, type: !2159)
!14912 = !DILocalVariable(name: "fn", arg: 2, scope: !14903, file: !2186, line: 88, type: !2178)
!14913 = !DILocalVariable(name: "timeout", arg: 3, scope: !14903, file: !2186, line: 89, type: !14906)
!14914 = !DILocalVariable(name: "__i", scope: !14915, file: !2186, line: 102, type: !14916)
!14915 = distinct !DILexicalBlock(scope: !14903, file: !2186, line: 102, column: 2)
!14916 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !14917)
!14917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !14918)
!14918 = !{!14919}
!14919 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14917, file: !368, line: 33, baseType: !103, size: 32)
!14920 = !DILocalVariable(name: "__key", scope: !14915, file: !2186, line: 102, type: !14916)
!14921 = !DILocalVariable(name: "t", scope: !14922, file: !2186, line: 103, type: !2159)
!14922 = distinct !DILexicalBlock(scope: !14923, file: !2186, line: 102, column: 24)
!14923 = distinct !DILexicalBlock(scope: !14915, file: !2186, line: 102, column: 2)
!14924 = !DILocalVariable(name: "ticks", scope: !14925, file: !2186, line: 107, type: !1399)
!14925 = distinct !DILexicalBlock(scope: !14926, file: !2186, line: 106, column: 39)
!14926 = distinct !DILexicalBlock(scope: !14922, file: !2186, line: 105, column: 7)
!14927 = !DILocalVariable(name: "next_time", scope: !14928, file: !2186, line: 137, type: !612)
!14928 = distinct !DILexicalBlock(scope: !14929, file: !2186, line: 127, column: 22)
!14929 = distinct !DILexicalBlock(scope: !14922, file: !2186, line: 127, column: 7)
!14930 = !DILocation(line: 0, scope: !14903)
!14931 = !DILocation(line: 91, column: 6, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14903, file: !2186, line: 91, column: 6)
!14933 = !DILocation(line: 91, column: 6, scope: !14903)
!14934 = !DILocation(line: 100, column: 6, scope: !14903)
!14935 = !DILocation(line: 100, column: 9, scope: !14903)
!14936 = !DILocation(line: 0, scope: !14915)
!14937 = !DILocalVariable(name: "l", arg: 1, scope: !14938, file: !368, line: 136, type: !14941)
!14938 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !14939, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !14942)
!14939 = !DISubroutineType(types: !14940)
!14940 = !{!14916, !14941}
!14941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 32)
!14942 = !{!14937, !14943}
!14943 = !DILocalVariable(name: "k", scope: !14938, file: !368, line: 139, type: !14916)
!14944 = !DILocation(line: 0, scope: !14938, inlinedAt: !14945)
!14945 = distinct !DILocation(line: 102, column: 2, scope: !14915)
!14946 = !DILocation(line: 55, column: 2, scope: !14947, inlinedAt: !14951)
!14947 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6094, file: !6094, line: 42, type: !6095, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !14948)
!14948 = !{!14949, !14950}
!14949 = !DILocalVariable(name: "key", scope: !14947, file: !6094, line: 44, type: !32)
!14950 = !DILocalVariable(name: "tmp", scope: !14947, file: !6094, line: 53, type: !32)
!14951 = distinct !DILocation(line: 145, column: 10, scope: !14938, inlinedAt: !14945)
!14952 = !{i64 1953557}
!14953 = !DILocation(line: 0, scope: !14947, inlinedAt: !14951)
!14954 = !DILocation(line: 106, column: 33, scope: !14926)
!14955 = !DILocation(line: 105, column: 7, scope: !14922)
!14956 = !DILocation(line: 107, column: 50, scope: !14925)
!14957 = !DILocation(line: 107, column: 48, scope: !14925)
!14958 = !DILocation(line: 0, scope: !14925)
!14959 = !DILocation(line: 109, column: 17, scope: !14925)
!14960 = !DILocation(line: 110, column: 3, scope: !14925)
!14961 = !DILocation(line: 111, column: 31, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14926, file: !2186, line: 110, column: 10)
!14963 = !DILocation(line: 111, column: 37, scope: !14962)
!14964 = !DILocation(line: 111, column: 35, scope: !14962)
!14965 = !DILocation(line: 0, scope: !14926)
!14966 = !DILocation(line: 109, column: 8, scope: !14925)
!14967 = !DILocation(line: 109, column: 15, scope: !14925)
!14968 = !DILocation(line: 114, column: 12, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14922, file: !2186, line: 114, column: 3)
!14970 = !DILocation(line: 0, scope: !14922)
!14971 = !DILocation(line: 114, column: 3, scope: !14969)
!14972 = !DILocation(line: 115, column: 24, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14974, file: !2186, line: 115, column: 8)
!14974 = distinct !DILexicalBlock(scope: !14975, file: !2186, line: 114, column: 45)
!14975 = distinct !DILexicalBlock(scope: !14969, file: !2186, line: 114, column: 3)
!14976 = !DILocation(line: 115, column: 11, scope: !14973)
!14977 = !DILocation(line: 115, column: 18, scope: !14973)
!14978 = !DILocation(line: 115, column: 8, scope: !14974)
!14979 = !DILocation(line: 116, column: 15, scope: !14980)
!14980 = distinct !DILexicalBlock(scope: !14973, file: !2186, line: 115, column: 32)
!14981 = !DILocation(line: 117, column: 26, scope: !14980)
!14982 = !DILocation(line: 117, column: 37, scope: !14980)
!14983 = !DILocation(line: 117, column: 5, scope: !14980)
!14984 = !DILocation(line: 123, column: 7, scope: !14922)
!14985 = !DILocation(line: 120, column: 15, scope: !14974)
!14986 = !DILocation(line: 114, column: 36, scope: !14975)
!14987 = distinct !{!14987, !14971, !14988}
!14988 = !DILocation(line: 121, column: 3, scope: !14969)
!14989 = !DILocation(line: 124, column: 41, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14991, file: !2186, line: 123, column: 18)
!14991 = distinct !DILexicalBlock(scope: !14922, file: !2186, line: 123, column: 7)
!14992 = !DILocation(line: 124, column: 4, scope: !14990)
!14993 = !DILocation(line: 125, column: 3, scope: !14990)
!14994 = !DILocation(line: 127, column: 13, scope: !14929)
!14995 = !DILocation(line: 127, column: 10, scope: !14929)
!14996 = !DILocation(line: 127, column: 7, scope: !14922)
!14997 = !DILocation(line: 137, column: 24, scope: !14928)
!14998 = !DILocation(line: 0, scope: !14928)
!14999 = !DILocation(line: 139, column: 18, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14928, file: !2186, line: 139, column: 8)
!15001 = !DILocation(line: 139, column: 23, scope: !15000)
!15002 = !DILocation(line: 141, column: 5, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !15000, file: !2186, line: 140, column: 48)
!15004 = !DILocation(line: 142, column: 4, scope: !15003)
!15005 = !DILocalVariable(name: "key", arg: 2, scope: !15006, file: !368, line: 190, type: !14916)
!15006 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !15007, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15009)
!15007 = !DISubroutineType(types: !15008)
!15008 = !{null, !14941, !14916}
!15009 = !{!15010, !15005}
!15010 = !DILocalVariable(name: "l", arg: 1, scope: !15006, file: !368, line: 189, type: !14941)
!15011 = !DILocation(line: 0, scope: !15006, inlinedAt: !15012)
!15012 = distinct !DILocation(line: 102, column: 2, scope: !14923)
!15013 = !DILocalVariable(name: "key", arg: 1, scope: !15014, file: !6094, line: 84, type: !32)
!15014 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6094, file: !6094, line: 84, type: !6105, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15015)
!15015 = !{!15013}
!15016 = !DILocation(line: 0, scope: !15014, inlinedAt: !15017)
!15017 = distinct !DILocation(line: 215, column: 2, scope: !15006, inlinedAt: !15012)
!15018 = !DILocation(line: 95, column: 2, scope: !15014, inlinedAt: !15017)
!15019 = !{i64 1954374}
!15020 = !DILocation(line: 148, column: 1, scope: !14903)
!15021 = distinct !DISubprogram(name: "elapsed", scope: !2186, file: !2186, line: 62, type: !15022, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !162)
!15022 = !DISubroutineType(types: !15023)
!15023 = !{!612}
!15024 = !DILocation(line: 64, column: 9, scope: !15021)
!15025 = !DILocation(line: 64, column: 28, scope: !15021)
!15026 = !DILocation(line: 64, column: 35, scope: !15021)
!15027 = !DILocation(line: 64, column: 2, scope: !15021)
!15028 = distinct !DISubprogram(name: "first", scope: !2186, file: !2186, line: 39, type: !15029, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15031)
!15029 = !DISubroutineType(types: !15030)
!15030 = !{!2159}
!15031 = !{!15032}
!15032 = !DILocalVariable(name: "t", scope: !15028, file: !2186, line: 41, type: !15033)
!15033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 32)
!15034 = !DILocation(line: 41, column: 19, scope: !15028)
!15035 = !DILocation(line: 0, scope: !15028)
!15036 = !DILocation(line: 43, column: 9, scope: !15028)
!15037 = !DILocation(line: 43, column: 2, scope: !15028)
!15038 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !15039, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15041)
!15039 = !DISubroutineType(types: !15040)
!15040 = !{null, !15033, !15033}
!15041 = !{!15042, !15043, !15044}
!15042 = !DILocalVariable(name: "successor", arg: 1, scope: !15038, file: !273, line: 443, type: !15033)
!15043 = !DILocalVariable(name: "node", arg: 2, scope: !15038, file: !273, line: 443, type: !15033)
!15044 = !DILocalVariable(name: "prev", scope: !15038, file: !273, line: 445, type: !15045)
!15045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15033)
!15046 = !DILocation(line: 0, scope: !15038)
!15047 = !DILocation(line: 445, column: 39, scope: !15038)
!15048 = !DILocation(line: 447, column: 8, scope: !15038)
!15049 = !DILocation(line: 447, column: 13, scope: !15038)
!15050 = !DILocation(line: 448, column: 8, scope: !15038)
!15051 = !DILocation(line: 448, column: 13, scope: !15038)
!15052 = !DILocation(line: 449, column: 8, scope: !15038)
!15053 = !DILocation(line: 449, column: 13, scope: !15038)
!15054 = !DILocation(line: 450, column: 18, scope: !15038)
!15055 = !DILocation(line: 451, column: 1, scope: !15038)
!15056 = distinct !DISubprogram(name: "next", scope: !2186, file: !2186, line: 46, type: !15057, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15059)
!15057 = !DISubroutineType(types: !15058)
!15058 = !{!2159, !2159}
!15059 = !{!15060, !15061}
!15060 = !DILocalVariable(name: "t", arg: 1, scope: !15056, file: !2186, line: 46, type: !2159)
!15061 = !DILocalVariable(name: "n", scope: !15056, file: !2186, line: 48, type: !15033)
!15062 = !DILocation(line: 0, scope: !15056)
!15063 = !DILocation(line: 48, column: 58, scope: !15056)
!15064 = !DILocation(line: 48, column: 19, scope: !15056)
!15065 = !DILocation(line: 50, column: 9, scope: !15056)
!15066 = !DILocation(line: 50, column: 2, scope: !15056)
!15067 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !15068, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15071)
!15068 = !DISubroutineType(types: !15069)
!15069 = !{null, !15070, !15033}
!15070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!15071 = !{!15072, !15073, !15074}
!15072 = !DILocalVariable(name: "list", arg: 1, scope: !15067, file: !273, line: 404, type: !15070)
!15073 = !DILocalVariable(name: "node", arg: 2, scope: !15067, file: !273, line: 404, type: !15033)
!15074 = !DILocalVariable(name: "tail", scope: !15067, file: !273, line: 406, type: !15045)
!15075 = !DILocation(line: 0, scope: !15067)
!15076 = !DILocation(line: 406, column: 34, scope: !15067)
!15077 = !DILocation(line: 408, column: 8, scope: !15067)
!15078 = !DILocation(line: 408, column: 13, scope: !15067)
!15079 = !DILocation(line: 409, column: 8, scope: !15067)
!15080 = !DILocation(line: 409, column: 13, scope: !15067)
!15081 = !DILocation(line: 411, column: 8, scope: !15067)
!15082 = !DILocation(line: 411, column: 13, scope: !15067)
!15083 = !DILocation(line: 412, column: 13, scope: !15067)
!15084 = !DILocation(line: 413, column: 1, scope: !15067)
!15085 = distinct !DISubprogram(name: "next_timeout", scope: !2186, file: !2186, line: 67, type: !15022, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15086)
!15086 = !{!15087, !15088, !15089}
!15087 = !DILocalVariable(name: "to", scope: !15085, file: !2186, line: 69, type: !2159)
!15088 = !DILocalVariable(name: "ticks_elapsed", scope: !15085, file: !2186, line: 70, type: !612)
!15089 = !DILocalVariable(name: "ret", scope: !15085, file: !2186, line: 71, type: !612)
!15090 = !DILocation(line: 69, column: 24, scope: !15085)
!15091 = !DILocation(line: 0, scope: !15085)
!15092 = !DILocation(line: 70, column: 26, scope: !15085)
!15093 = !DILocation(line: 73, column: 10, scope: !15094)
!15094 = distinct !DILexicalBlock(scope: !15085, file: !2186, line: 73, column: 6)
!15095 = !DILocation(line: 73, column: 19, scope: !15094)
!15096 = !DILocation(line: 74, column: 21, scope: !15094)
!15097 = !DILocation(line: 74, column: 30, scope: !15094)
!15098 = !DILocation(line: 74, column: 28, scope: !15094)
!15099 = !DILocation(line: 74, column: 45, scope: !15094)
!15100 = !DILocation(line: 73, column: 6, scope: !15085)
!15101 = !DILocation(line: 77, column: 9, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15094, file: !2186, line: 76, column: 9)
!15103 = !DILocation(line: 0, scope: !15094)
!15104 = !DILocation(line: 81, column: 20, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15085, file: !2186, line: 81, column: 6)
!15106 = !DILocation(line: 81, column: 6, scope: !15105)
!15107 = !DILocation(line: 81, column: 32, scope: !15105)
!15108 = !DILocation(line: 85, column: 2, scope: !15085)
!15109 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !15110, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15112)
!15110 = !DISubroutineType(types: !15111)
!15111 = !{!15033, !15070, !15033}
!15112 = !{!15113, !15114}
!15113 = !DILocalVariable(name: "list", arg: 1, scope: !15109, file: !273, line: 341, type: !15070)
!15114 = !DILocalVariable(name: "node", arg: 2, scope: !15109, file: !273, line: 342, type: !15033)
!15115 = !DILocation(line: 0, scope: !15109)
!15116 = !DILocation(line: 344, column: 15, scope: !15109)
!15117 = !DILocation(line: 344, column: 9, scope: !15109)
!15118 = !DILocation(line: 344, column: 26, scope: !15109)
!15119 = !DILocation(line: 344, column: 2, scope: !15109)
!15120 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !15110, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15121)
!15121 = !{!15122, !15123}
!15122 = !DILocalVariable(name: "list", arg: 1, scope: !15120, file: !273, line: 325, type: !15070)
!15123 = !DILocalVariable(name: "node", arg: 2, scope: !15120, file: !273, line: 326, type: !15033)
!15124 = !DILocation(line: 0, scope: !15120)
!15125 = !DILocation(line: 328, column: 24, scope: !15120)
!15126 = !DILocation(line: 328, column: 15, scope: !15120)
!15127 = !DILocation(line: 328, column: 9, scope: !15120)
!15128 = !DILocation(line: 328, column: 45, scope: !15120)
!15129 = !DILocation(line: 328, column: 2, scope: !15120)
!15130 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !15131, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15133)
!15131 = !DISubroutineType(types: !15132)
!15132 = !{!15033, !15070}
!15133 = !{!15134}
!15134 = !DILocalVariable(name: "list", arg: 1, scope: !15130, file: !273, line: 294, type: !15070)
!15135 = !DILocation(line: 0, scope: !15130)
!15136 = !DILocation(line: 296, column: 9, scope: !15130)
!15137 = !DILocation(line: 296, column: 2, scope: !15130)
!15138 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !15139, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15141)
!15139 = !DISubroutineType(types: !15140)
!15140 = !{!211, !15070}
!15141 = !{!15142}
!15142 = !DILocalVariable(name: "list", arg: 1, scope: !15138, file: !273, line: 266, type: !15070)
!15143 = !DILocation(line: 0, scope: !15138)
!15144 = !DILocation(line: 268, column: 15, scope: !15138)
!15145 = !DILocation(line: 268, column: 20, scope: !15138)
!15146 = !DILocation(line: 268, column: 2, scope: !15138)
!15147 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2186, file: !2186, line: 150, type: !15148, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15150)
!15148 = !DISubroutineType(types: !15149)
!15149 = !{!103, !2159}
!15150 = !{!15151, !15152, !15153, !15155}
!15151 = !DILocalVariable(name: "to", arg: 1, scope: !15147, file: !2186, line: 150, type: !2159)
!15152 = !DILocalVariable(name: "ret", scope: !15147, file: !2186, line: 152, type: !103)
!15153 = !DILocalVariable(name: "__i", scope: !15154, file: !2186, line: 154, type: !14916)
!15154 = distinct !DILexicalBlock(scope: !15147, file: !2186, line: 154, column: 2)
!15155 = !DILocalVariable(name: "__key", scope: !15154, file: !2186, line: 154, type: !14916)
!15156 = !DILocation(line: 0, scope: !15147)
!15157 = !DILocation(line: 0, scope: !15154)
!15158 = !DILocation(line: 0, scope: !14938, inlinedAt: !15159)
!15159 = distinct !DILocation(line: 154, column: 2, scope: !15154)
!15160 = !DILocation(line: 55, column: 2, scope: !14947, inlinedAt: !15161)
!15161 = distinct !DILocation(line: 145, column: 10, scope: !14938, inlinedAt: !15159)
!15162 = !DILocation(line: 0, scope: !14947, inlinedAt: !15161)
!15163 = !DILocation(line: 155, column: 7, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15165, file: !2186, line: 155, column: 7)
!15165 = distinct !DILexicalBlock(scope: !15166, file: !2186, line: 154, column: 24)
!15166 = distinct !DILexicalBlock(scope: !15154, file: !2186, line: 154, column: 2)
!15167 = !DILocation(line: 155, column: 7, scope: !15165)
!15168 = !DILocation(line: 156, column: 4, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15164, file: !2186, line: 155, column: 39)
!15170 = !DILocation(line: 158, column: 3, scope: !15169)
!15171 = !DILocation(line: 0, scope: !15006, inlinedAt: !15172)
!15172 = distinct !DILocation(line: 154, column: 2, scope: !15166)
!15173 = !DILocation(line: 0, scope: !15014, inlinedAt: !15174)
!15174 = distinct !DILocation(line: 215, column: 2, scope: !15006, inlinedAt: !15172)
!15175 = !DILocation(line: 95, column: 2, scope: !15014, inlinedAt: !15174)
!15176 = !DILocation(line: 161, column: 2, scope: !15147)
!15177 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !15178, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15182)
!15178 = !DISubroutineType(types: !15179)
!15179 = !{!211, !15180}
!15180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15181, size: 32)
!15181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2163)
!15182 = !{!15183}
!15183 = !DILocalVariable(name: "node", arg: 1, scope: !15177, file: !273, line: 225, type: !15180)
!15184 = !DILocation(line: 0, scope: !15177)
!15185 = !DILocation(line: 227, column: 15, scope: !15177)
!15186 = !DILocation(line: 227, column: 20, scope: !15177)
!15187 = !DILocation(line: 227, column: 2, scope: !15177)
!15188 = distinct !DISubprogram(name: "remove_timeout", scope: !2186, file: !2186, line: 53, type: !2180, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15189)
!15189 = !{!15190}
!15190 = !DILocalVariable(name: "t", arg: 1, scope: !15188, file: !2186, line: 53, type: !2159)
!15191 = !DILocation(line: 0, scope: !15188)
!15192 = !DILocation(line: 55, column: 6, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15188, file: !2186, line: 55, column: 6)
!15194 = !DILocation(line: 55, column: 14, scope: !15193)
!15195 = !DILocation(line: 55, column: 6, scope: !15188)
!15196 = !DILocation(line: 56, column: 25, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !15193, file: !2186, line: 55, column: 23)
!15198 = !DILocation(line: 56, column: 12, scope: !15197)
!15199 = !DILocation(line: 56, column: 19, scope: !15197)
!15200 = !DILocation(line: 57, column: 2, scope: !15197)
!15201 = !DILocation(line: 59, column: 23, scope: !15188)
!15202 = !DILocation(line: 59, column: 2, scope: !15188)
!15203 = !DILocation(line: 60, column: 1, scope: !15188)
!15204 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !15205, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15207)
!15205 = !DISubroutineType(types: !15206)
!15206 = !{null, !15033}
!15207 = !{!15208, !15209, !15210}
!15208 = !DILocalVariable(name: "node", arg: 1, scope: !15204, file: !273, line: 496, type: !15033)
!15209 = !DILocalVariable(name: "prev", scope: !15204, file: !273, line: 498, type: !15045)
!15210 = !DILocalVariable(name: "next", scope: !15204, file: !273, line: 499, type: !15045)
!15211 = !DILocation(line: 0, scope: !15204)
!15212 = !DILocation(line: 498, column: 34, scope: !15204)
!15213 = !DILocation(line: 499, column: 34, scope: !15204)
!15214 = !DILocation(line: 501, column: 8, scope: !15204)
!15215 = !DILocation(line: 501, column: 13, scope: !15204)
!15216 = !DILocation(line: 502, column: 8, scope: !15204)
!15217 = !DILocation(line: 502, column: 13, scope: !15204)
!15218 = !DILocation(line: 503, column: 2, scope: !15204)
!15219 = !DILocation(line: 504, column: 1, scope: !15204)
!15220 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !15205, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15221)
!15221 = !{!15222}
!15222 = !DILocalVariable(name: "node", arg: 1, scope: !15220, file: !273, line: 211, type: !15033)
!15223 = !DILocation(line: 0, scope: !15220)
!15224 = !DILocation(line: 213, column: 8, scope: !15220)
!15225 = !DILocation(line: 213, column: 13, scope: !15220)
!15226 = !DILocation(line: 214, column: 8, scope: !15220)
!15227 = !DILocation(line: 214, column: 13, scope: !15220)
!15228 = !DILocation(line: 215, column: 1, scope: !15220)
!15229 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2186, file: !2186, line: 183, type: !15230, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15234)
!15230 = !DISubroutineType(types: !15231)
!15231 = !{!1399, !15232}
!15232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15233, size: 32)
!15233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2160)
!15234 = !{!15235, !15236, !15237, !15239}
!15235 = !DILocalVariable(name: "timeout", arg: 1, scope: !15229, file: !2186, line: 183, type: !15232)
!15236 = !DILocalVariable(name: "ticks", scope: !15229, file: !2186, line: 185, type: !1399)
!15237 = !DILocalVariable(name: "__i", scope: !15238, file: !2186, line: 187, type: !14916)
!15238 = distinct !DILexicalBlock(scope: !15229, file: !2186, line: 187, column: 2)
!15239 = !DILocalVariable(name: "__key", scope: !15238, file: !2186, line: 187, type: !14916)
!15240 = !DILocation(line: 0, scope: !15229)
!15241 = !DILocation(line: 0, scope: !15238)
!15242 = !DILocation(line: 0, scope: !14938, inlinedAt: !15243)
!15243 = distinct !DILocation(line: 187, column: 2, scope: !15238)
!15244 = !DILocation(line: 55, column: 2, scope: !14947, inlinedAt: !15245)
!15245 = distinct !DILocation(line: 145, column: 10, scope: !14938, inlinedAt: !15243)
!15246 = !DILocation(line: 0, scope: !14947, inlinedAt: !15245)
!15247 = !DILocation(line: 188, column: 11, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15249, file: !2186, line: 187, column: 24)
!15249 = distinct !DILexicalBlock(scope: !15238, file: !2186, line: 187, column: 2)
!15250 = !DILocation(line: 0, scope: !15006, inlinedAt: !15251)
!15251 = distinct !DILocation(line: 187, column: 2, scope: !15249)
!15252 = !DILocation(line: 0, scope: !15014, inlinedAt: !15253)
!15253 = distinct !DILocation(line: 215, column: 2, scope: !15006, inlinedAt: !15251)
!15254 = !DILocation(line: 95, column: 2, scope: !15014, inlinedAt: !15253)
!15255 = !DILocation(line: 191, column: 2, scope: !15229)
!15256 = distinct !DISubprogram(name: "timeout_rem", scope: !2186, file: !2186, line: 165, type: !15230, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15257)
!15257 = !{!15258, !15259, !15260}
!15258 = !DILocalVariable(name: "timeout", arg: 1, scope: !15256, file: !2186, line: 165, type: !15232)
!15259 = !DILocalVariable(name: "ticks", scope: !15256, file: !2186, line: 167, type: !1399)
!15260 = !DILocalVariable(name: "t", scope: !15261, file: !2186, line: 173, type: !2159)
!15261 = distinct !DILexicalBlock(scope: !15256, file: !2186, line: 173, column: 2)
!15262 = !DILocation(line: 0, scope: !15256)
!15263 = !DILocation(line: 169, column: 6, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15256, file: !2186, line: 169, column: 6)
!15265 = !DILocation(line: 169, column: 6, scope: !15256)
!15266 = !DILocation(line: 173, column: 28, scope: !15261)
!15267 = !DILocation(line: 0, scope: !15261)
!15268 = !DILocation(line: 173, column: 39, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15261, file: !2186, line: 173, column: 2)
!15270 = !DILocation(line: 173, column: 2, scope: !15261)
!15271 = !DILocation(line: 174, column: 15, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15269, file: !2186, line: 173, column: 61)
!15273 = !DILocation(line: 174, column: 9, scope: !15272)
!15274 = !DILocation(line: 175, column: 15, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15272, file: !2186, line: 175, column: 7)
!15276 = !DILocation(line: 175, column: 7, scope: !15272)
!15277 = !DILocation(line: 173, column: 52, scope: !15269)
!15278 = distinct !{!15278, !15270, !15279}
!15279 = !DILocation(line: 178, column: 2, scope: !15261)
!15280 = !DILocation(line: 180, column: 17, scope: !15256)
!15281 = !DILocation(line: 180, column: 15, scope: !15256)
!15282 = !DILocation(line: 180, column: 2, scope: !15256)
!15283 = !DILocation(line: 181, column: 1, scope: !15256)
!15284 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12594, file: !12594, line: 35, type: !15285, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15287)
!15285 = !DISubroutineType(types: !15286)
!15286 = !{!211, !15232}
!15287 = !{!15288}
!15288 = !DILocalVariable(name: "to", arg: 1, scope: !15284, file: !12594, line: 35, type: !15232)
!15289 = !DILocation(line: 0, scope: !15284)
!15290 = !DILocation(line: 37, column: 35, scope: !15284)
!15291 = !DILocation(line: 37, column: 10, scope: !15284)
!15292 = !DILocation(line: 37, column: 9, scope: !15284)
!15293 = !DILocation(line: 37, column: 2, scope: !15284)
!15294 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2186, file: !2186, line: 194, type: !15230, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15295)
!15295 = !{!15296, !15297, !15298, !15300}
!15296 = !DILocalVariable(name: "timeout", arg: 1, scope: !15294, file: !2186, line: 194, type: !15232)
!15297 = !DILocalVariable(name: "ticks", scope: !15294, file: !2186, line: 196, type: !1399)
!15298 = !DILocalVariable(name: "__i", scope: !15299, file: !2186, line: 198, type: !14916)
!15299 = distinct !DILexicalBlock(scope: !15294, file: !2186, line: 198, column: 2)
!15300 = !DILocalVariable(name: "__key", scope: !15299, file: !2186, line: 198, type: !14916)
!15301 = !DILocation(line: 0, scope: !15294)
!15302 = !DILocation(line: 0, scope: !15299)
!15303 = !DILocation(line: 0, scope: !14938, inlinedAt: !15304)
!15304 = distinct !DILocation(line: 198, column: 2, scope: !15299)
!15305 = !DILocation(line: 55, column: 2, scope: !14947, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 145, column: 10, scope: !14938, inlinedAt: !15304)
!15307 = !DILocation(line: 0, scope: !14947, inlinedAt: !15306)
!15308 = !DILocation(line: 199, column: 11, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15310, file: !2186, line: 198, column: 24)
!15310 = distinct !DILexicalBlock(scope: !15299, file: !2186, line: 198, column: 2)
!15311 = !DILocation(line: 199, column: 23, scope: !15309)
!15312 = !DILocation(line: 0, scope: !15006, inlinedAt: !15313)
!15313 = distinct !DILocation(line: 198, column: 2, scope: !15310)
!15314 = !DILocation(line: 0, scope: !15014, inlinedAt: !15315)
!15315 = distinct !DILocation(line: 215, column: 2, scope: !15006, inlinedAt: !15313)
!15316 = !DILocation(line: 95, column: 2, scope: !15014, inlinedAt: !15315)
!15317 = !DILocation(line: 199, column: 21, scope: !15309)
!15318 = !DILocation(line: 202, column: 2, scope: !15294)
!15319 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2186, file: !2186, line: 205, type: !15022, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15320)
!15320 = !{!15321, !15322, !15324}
!15321 = !DILocalVariable(name: "ret", scope: !15319, file: !2186, line: 207, type: !612)
!15322 = !DILocalVariable(name: "__i", scope: !15323, file: !2186, line: 209, type: !14916)
!15323 = distinct !DILexicalBlock(scope: !15319, file: !2186, line: 209, column: 2)
!15324 = !DILocalVariable(name: "__key", scope: !15323, file: !2186, line: 209, type: !14916)
!15325 = !DILocation(line: 0, scope: !15319)
!15326 = !DILocation(line: 0, scope: !15323)
!15327 = !DILocation(line: 0, scope: !14938, inlinedAt: !15328)
!15328 = distinct !DILocation(line: 209, column: 2, scope: !15323)
!15329 = !DILocation(line: 55, column: 2, scope: !14947, inlinedAt: !15330)
!15330 = distinct !DILocation(line: 145, column: 10, scope: !14938, inlinedAt: !15328)
!15331 = !DILocation(line: 0, scope: !14947, inlinedAt: !15330)
!15332 = !DILocation(line: 210, column: 9, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15334, file: !2186, line: 209, column: 24)
!15334 = distinct !DILexicalBlock(scope: !15323, file: !2186, line: 209, column: 2)
!15335 = !DILocation(line: 0, scope: !15006, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 209, column: 2, scope: !15334)
!15337 = !DILocation(line: 0, scope: !15014, inlinedAt: !15338)
!15338 = distinct !DILocation(line: 215, column: 2, scope: !15006, inlinedAt: !15336)
!15339 = !DILocation(line: 95, column: 2, scope: !15014, inlinedAt: !15338)
!15340 = !DILocation(line: 212, column: 2, scope: !15319)
!15341 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2186, file: !2186, line: 215, type: !10204, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15342)
!15342 = !{!15343, !15344, !15345, !15347, !15348, !15351, !15352}
!15343 = !DILocalVariable(name: "ticks", arg: 1, scope: !15341, file: !2186, line: 215, type: !612)
!15344 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15341, file: !2186, line: 215, type: !211)
!15345 = !DILocalVariable(name: "__i", scope: !15346, file: !2186, line: 217, type: !14916)
!15346 = distinct !DILexicalBlock(scope: !15341, file: !2186, line: 217, column: 2)
!15347 = !DILocalVariable(name: "__key", scope: !15346, file: !2186, line: 217, type: !14916)
!15348 = !DILocalVariable(name: "next_to", scope: !15349, file: !2186, line: 218, type: !103)
!15349 = distinct !DILexicalBlock(scope: !15350, file: !2186, line: 217, column: 24)
!15350 = distinct !DILexicalBlock(scope: !15346, file: !2186, line: 217, column: 2)
!15351 = !DILocalVariable(name: "sooner", scope: !15349, file: !2186, line: 219, type: !211)
!15352 = !DILocalVariable(name: "imminent", scope: !15349, file: !2186, line: 221, type: !211)
!15353 = !DILocation(line: 0, scope: !15341)
!15354 = !DILocation(line: 0, scope: !15346)
!15355 = !DILocation(line: 0, scope: !14938, inlinedAt: !15356)
!15356 = distinct !DILocation(line: 217, column: 2, scope: !15346)
!15357 = !DILocation(line: 55, column: 2, scope: !14947, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 145, column: 10, scope: !14938, inlinedAt: !15356)
!15359 = !DILocation(line: 0, scope: !14947, inlinedAt: !15358)
!15360 = !DILocation(line: 218, column: 17, scope: !15349)
!15361 = !DILocation(line: 0, scope: !15349)
!15362 = !DILocation(line: 221, column: 27, scope: !15349)
!15363 = !DILocation(line: 233, column: 17, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15349, file: !2186, line: 233, column: 7)
!15365 = !DILocation(line: 234, column: 26, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15364, file: !2186, line: 233, column: 56)
!15367 = !DILocation(line: 234, column: 4, scope: !15366)
!15368 = !DILocation(line: 235, column: 3, scope: !15366)
!15369 = !DILocation(line: 0, scope: !15006, inlinedAt: !15370)
!15370 = distinct !DILocation(line: 217, column: 2, scope: !15350)
!15371 = !DILocation(line: 0, scope: !15014, inlinedAt: !15372)
!15372 = distinct !DILocation(line: 215, column: 2, scope: !15006, inlinedAt: !15370)
!15373 = !DILocation(line: 95, column: 2, scope: !15014, inlinedAt: !15372)
!15374 = !DILocation(line: 237, column: 1, scope: !15341)
!15375 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2186, file: !2186, line: 239, type: !15376, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15378)
!15376 = !DISubroutineType(types: !15377)
!15377 = !{null, !612}
!15378 = !{!15379, !15380, !15381, !15383}
!15379 = !DILocalVariable(name: "ticks", arg: 1, scope: !15375, file: !2186, line: 239, type: !612)
!15380 = !DILocalVariable(name: "key", scope: !15375, file: !2186, line: 245, type: !14916)
!15381 = !DILocalVariable(name: "t", scope: !15382, file: !2186, line: 262, type: !2159)
!15382 = distinct !DILexicalBlock(scope: !15375, file: !2186, line: 261, column: 67)
!15383 = !DILocalVariable(name: "dt", scope: !15382, file: !2186, line: 263, type: !103)
!15384 = !DILocation(line: 0, scope: !15375)
!15385 = !DILocation(line: 242, column: 2, scope: !15375)
!15386 = !DILocation(line: 0, scope: !14938, inlinedAt: !15387)
!15387 = distinct !DILocation(line: 245, column: 25, scope: !15375)
!15388 = !DILocation(line: 55, column: 2, scope: !14947, inlinedAt: !15389)
!15389 = distinct !DILocation(line: 145, column: 10, scope: !14938, inlinedAt: !15387)
!15390 = !DILocation(line: 0, scope: !14947, inlinedAt: !15389)
!15391 = !DILocation(line: 261, column: 9, scope: !15375)
!15392 = !DILocation(line: 261, column: 17, scope: !15375)
!15393 = !DILocation(line: 261, column: 25, scope: !15375)
!15394 = !DILocation(line: 261, column: 37, scope: !15375)
!15395 = !DILocation(line: 261, column: 47, scope: !15375)
!15396 = !DILocation(line: 261, column: 44, scope: !15375)
!15397 = !DILocation(line: 261, column: 2, scope: !15375)
!15398 = !DILocation(line: 0, scope: !15382)
!15399 = !DILocation(line: 263, column: 12, scope: !15382)
!15400 = !DILocation(line: 265, column: 16, scope: !15382)
!15401 = !DILocation(line: 265, column: 13, scope: !15382)
!15402 = !DILocation(line: 266, column: 13, scope: !15382)
!15403 = !DILocation(line: 267, column: 3, scope: !15382)
!15404 = !DILocation(line: 0, scope: !15006, inlinedAt: !15405)
!15405 = distinct !DILocation(line: 269, column: 3, scope: !15382)
!15406 = !DILocation(line: 0, scope: !15014, inlinedAt: !15407)
!15407 = distinct !DILocation(line: 215, column: 2, scope: !15006, inlinedAt: !15405)
!15408 = !DILocation(line: 95, column: 2, scope: !15014, inlinedAt: !15407)
!15409 = !DILocation(line: 270, column: 6, scope: !15382)
!15410 = !DILocation(line: 270, column: 3, scope: !15382)
!15411 = !DILocation(line: 0, scope: !14938, inlinedAt: !15412)
!15412 = distinct !DILocation(line: 271, column: 9, scope: !15382)
!15413 = !DILocation(line: 55, column: 2, scope: !14947, inlinedAt: !15414)
!15414 = distinct !DILocation(line: 145, column: 10, scope: !14938, inlinedAt: !15412)
!15415 = !DILocation(line: 0, scope: !14947, inlinedAt: !15414)
!15416 = !DILocation(line: 272, column: 22, scope: !15382)
!15417 = distinct !{!15417, !15397, !15418}
!15418 = !DILocation(line: 273, column: 2, scope: !15375)
!15419 = !DILocation(line: 276, column: 19, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15421, file: !2186, line: 275, column: 23)
!15421 = distinct !DILexicalBlock(scope: !15375, file: !2186, line: 275, column: 6)
!15422 = !DILocation(line: 277, column: 2, scope: !15420)
!15423 = !DILocation(line: 279, column: 15, scope: !15375)
!15424 = !DILocation(line: 279, column: 12, scope: !15375)
!15425 = !DILocation(line: 280, column: 21, scope: !15375)
!15426 = !DILocation(line: 282, column: 24, scope: !15375)
!15427 = !DILocation(line: 282, column: 2, scope: !15375)
!15428 = !DILocation(line: 0, scope: !15006, inlinedAt: !15429)
!15429 = distinct !DILocation(line: 284, column: 2, scope: !15375)
!15430 = !DILocation(line: 0, scope: !15014, inlinedAt: !15431)
!15431 = distinct !DILocation(line: 215, column: 2, scope: !15006, inlinedAt: !15429)
!15432 = !DILocation(line: 95, column: 2, scope: !15014, inlinedAt: !15431)
!15433 = !DILocation(line: 285, column: 1, scope: !15375)
!15434 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2186, file: !2186, line: 287, type: !15435, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15437)
!15435 = !DISubroutineType(types: !15436)
!15436 = !{!330}
!15437 = !{!15438, !15439, !15441}
!15438 = !DILocalVariable(name: "t", scope: !15434, file: !2186, line: 289, type: !163)
!15439 = !DILocalVariable(name: "__i", scope: !15440, file: !2186, line: 291, type: !14916)
!15440 = distinct !DILexicalBlock(scope: !15434, file: !2186, line: 291, column: 2)
!15441 = !DILocalVariable(name: "__key", scope: !15440, file: !2186, line: 291, type: !14916)
!15442 = !DILocation(line: 0, scope: !15434)
!15443 = !DILocation(line: 0, scope: !15440)
!15444 = !DILocation(line: 0, scope: !14938, inlinedAt: !15445)
!15445 = distinct !DILocation(line: 291, column: 2, scope: !15440)
!15446 = !DILocation(line: 55, column: 2, scope: !14947, inlinedAt: !15447)
!15447 = distinct !DILocation(line: 145, column: 10, scope: !14938, inlinedAt: !15445)
!15448 = !DILocation(line: 0, scope: !14947, inlinedAt: !15447)
!15449 = !DILocation(line: 292, column: 7, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15451, file: !2186, line: 291, column: 24)
!15451 = distinct !DILexicalBlock(scope: !15440, file: !2186, line: 291, column: 2)
!15452 = !DILocation(line: 292, column: 19, scope: !15450)
!15453 = !DILocation(line: 0, scope: !15006, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 291, column: 2, scope: !15451)
!15455 = !DILocation(line: 0, scope: !15014, inlinedAt: !15456)
!15456 = distinct !DILocation(line: 215, column: 2, scope: !15006, inlinedAt: !15454)
!15457 = !DILocation(line: 95, column: 2, scope: !15014, inlinedAt: !15456)
!15458 = !DILocation(line: 292, column: 17, scope: !15450)
!15459 = !DILocation(line: 294, column: 2, scope: !15434)
!15460 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2186, file: !2186, line: 297, type: !135, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !162)
!15461 = !DILocation(line: 300, column: 19, scope: !15460)
!15462 = !DILocation(line: 300, column: 9, scope: !15460)
!15463 = !DILocation(line: 300, column: 2, scope: !15460)
!15464 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2186, file: !2186, line: 306, type: !15435, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !162)
!15465 = !DILocation(line: 308, column: 9, scope: !15464)
!15466 = !DILocation(line: 308, column: 2, scope: !15464)
!15467 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2186, file: !2186, line: 319, type: !6357, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15468)
!15468 = !{!15469, !15470, !15471, !15472}
!15469 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15467, file: !2186, line: 319, type: !137)
!15470 = !DILocalVariable(name: "start_cycles", scope: !15467, file: !2186, line: 328, type: !137)
!15471 = !DILocalVariable(name: "cycles_to_wait", scope: !15467, file: !2186, line: 331, type: !137)
!15472 = !DILocalVariable(name: "current_cycles", scope: !15473, file: !2186, line: 338, type: !137)
!15473 = distinct !DILexicalBlock(scope: !15474, file: !2186, line: 337, column: 11)
!15474 = distinct !DILexicalBlock(scope: !15475, file: !2186, line: 337, column: 2)
!15475 = distinct !DILexicalBlock(scope: !15467, file: !2186, line: 337, column: 2)
!15476 = !DILocation(line: 0, scope: !15467)
!15477 = !DILocation(line: 322, column: 19, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15467, file: !2186, line: 322, column: 6)
!15479 = !DILocation(line: 322, column: 6, scope: !15467)
!15480 = !DILocation(line: 328, column: 26, scope: !15467)
!15481 = !DILocation(line: 333, column: 43, scope: !15467)
!15482 = !DILocation(line: 337, column: 2, scope: !15467)
!15483 = !DILocation(line: 338, column: 29, scope: !15473)
!15484 = !DILocation(line: 0, scope: !15473)
!15485 = !DILocation(line: 341, column: 23, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15473, file: !2186, line: 341, column: 7)
!15487 = !DILocation(line: 341, column: 39, scope: !15486)
!15488 = !DILocation(line: 349, column: 1, scope: !15467)
!15489 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !357, file: !357, line: 1675, type: !135, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !162)
!15490 = !DILocation(line: 1677, column: 9, scope: !15489)
!15491 = !DILocation(line: 1677, column: 2, scope: !15489)
!15492 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !15493, file: !15493, line: 24, type: !135, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !162)
!15493 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15494 = !DILocation(line: 26, column: 9, scope: !15492)
!15495 = !DILocation(line: 26, column: 2, scope: !15492)
!15496 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2186, file: !2186, line: 364, type: !15497, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !15499)
!15497 = !DISubroutineType(types: !15498)
!15498 = !{!163, !14906}
!15499 = !{!15500, !15501}
!15500 = !DILocalVariable(name: "timeout", arg: 1, scope: !15496, file: !2186, line: 364, type: !14906)
!15501 = !DILocalVariable(name: "dt", scope: !15496, file: !2186, line: 366, type: !1399)
!15502 = !DILocation(line: 0, scope: !15496)
!15503 = !DILocation(line: 368, column: 6, scope: !15496)
!15504 = !DILocation(line: 371, column: 10, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15506, file: !2186, line: 370, column: 47)
!15506 = distinct !DILexicalBlock(scope: !15507, file: !2186, line: 370, column: 13)
!15507 = distinct !DILexicalBlock(scope: !15496, file: !2186, line: 368, column: 6)
!15508 = !DILocation(line: 371, column: 3, scope: !15505)
!15509 = !DILocation(line: 376, column: 58, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15511, file: !2186, line: 376, column: 7)
!15511 = distinct !DILexicalBlock(scope: !15506, file: !2186, line: 372, column: 9)
!15512 = !DILocation(line: 376, column: 7, scope: !15511)
!15513 = !DILocation(line: 376, column: 43, scope: !15510)
!15514 = !DILocation(line: 377, column: 4, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15510, file: !2186, line: 376, column: 64)
!15516 = !DILocation(line: 379, column: 10, scope: !15511)
!15517 = !DILocation(line: 379, column: 33, scope: !15511)
!15518 = !DILocation(line: 379, column: 31, scope: !15511)
!15519 = !DILocation(line: 379, column: 3, scope: !15511)
!15520 = !DILocation(line: 0, scope: !15507)
!15521 = !DILocation(line: 381, column: 1, scope: !15496)
!15522 = distinct !DISubprogram(name: "boot_banner", scope: !15523, file: !15523, line: 26, type: !2802, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2788, retainedNodes: !162)
!15523 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15524 = !DILocation(line: 34, column: 2, scope: !15522)
!15525 = !DILocation(line: 36, column: 1, scope: !15522)
