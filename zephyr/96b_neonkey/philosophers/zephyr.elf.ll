; ModuleID = 'build/96b_neonkey/philosophers/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, %struct.__thread_entry, %struct.k_thread*, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__thread_entry = type { void (i8*, i8*, i8*)*, i8*, i8*, i8* }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q, %struct.k_thread* }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._priq_rb }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238464 to i8*), void (i8*)* inttoptr (i32 134237055 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238464 to i8*), void (i8*)* inttoptr (i32 134237035 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238464 to i8*), void (i8*)* inttoptr (i32 134237025 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238464 to i8*), void (i8*)* inttoptr (i32 134237125 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238464 to i8*), void (i8*)* inttoptr (i32 134237115 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238464 to i8*), void (i8*)* inttoptr (i32 134237105 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238464 to i8*), void (i8*)* inttoptr (i32 134237095 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238464 to i8*), void (i8*)* inttoptr (i32 134237085 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238464 to i8*), void (i8*)* inttoptr (i32 134237075 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238464 to i8*), void (i8*)* inttoptr (i32 134237065 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238464 to i8*), void (i8*)* inttoptr (i32 134237045 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@forks = internal unnamed_addr constant [6 x %struct.k_mutex*] [%struct.k_mutex* getelementptr inbounds ([6 x %struct.k_mutex], [6 x %struct.k_mutex]* @fork_objs, i32 0, i32 0), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 20) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 40) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 60) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 80) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 100) to %struct.k_mutex*)], align 4, !dbg !25
@.str = private unnamed_addr constant [23 x i8] c"       STARVING       \00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"   HOLDING ONE FORK   \00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"  EATING  [ %s%d ms ] \00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"   DROPPED ONE FORK   \00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c" THINKING [ %s%d ms ] \00", align 1
@fork_objs = dso_local global [6 x %struct.k_mutex] zeroinitializer, align 4, !dbg !114
@.str.5 = private unnamed_addr constant [26 x i8] c"Philosopher %d [%s:%s%d] \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"\1B[%d;%dH\00", align 1
@.str.12 = private unnamed_addr constant [328 x i8] c"\1B[2J\1B[15;1HDemo Description\0A----------------\0AAn implementation of a solution to the Dining Philosophers\0Aproblem (a classic multi-thread synchronization problem).\0AThis particular implementation demonstrates the usage of multiple\0Apreemptible and cooperative threads of differing priorities, as\0Awell as %s %s and thread sleeping.\0A\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"dynamic\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"mutexes\00", align 1
@threads = internal global [6 x %struct.k_thread] zeroinitializer, align 8, !dbg !266
@stacks = internal global [6 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/phil_obj_abstract.h\22.0", align 64, !dbg !269
@.str.15 = private unnamed_addr constant [15 x i8] c"Philosopher %d\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !280
@.str.16 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.17 = private unnamed_addr constant [34 x i8] c"is_black(node) || is_black(child)\00", align 1
@.str.2.18 = private unnamed_addr constant [24 x i8] c"ZEPHYR_BASE/lib/os/rb.c\00", align 1
@.str.3.19 = private unnamed_addr constant [19 x i8] c"\09both nodes red?!\0A\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [40 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (i32* @_kernel_thread_info_num_offsets to i8*), i8* bitcast ([14 x i32]* @_kernel_thread_info_offsets to i8*), i8* @_kernel_thread_info_size_t_size, i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !290
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !343
@_kernel_thread_info_offsets = dso_local global [14 x i32] [i32 1, i32 8, i32 44, i32 96, i32 112, i32 13, i32 12, i32 14, i32 80, i32 116, i32 168, i32 -1, i32 -1, i32 -1], section ".dbg_thread_info", align 4, !dbg !372
@_kernel_thread_info_num_offsets = dso_local global i32 14, section ".dbg_thread_info", align 4, !dbg !377
@_kernel_thread_info_size_t_size = dso_local global i8 4, section ".dbg_thread_info", align 1, !dbg !380
@.str.31 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.32 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.33 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.34 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.38 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.39 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.40 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.44 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.6.45 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.7.41 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.8.42 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !385
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.55 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.56 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.57 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.58 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.61 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.62 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !529
@.str.6.63 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.64 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.74, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !565
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !570
@.str.73 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.74 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.77 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.78 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.79 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !590
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !763
@.str.4.75 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !724
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !707
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.75, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !680
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !696
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !726
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !740
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !742
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !744
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !746
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !748
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !750
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !752
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !754
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !756
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !758
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !768
@.str.80 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !795
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !892
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !881
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !933
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !788
@.str.89 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !999
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1276
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1246
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1232
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1177
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !786
@.str.1.92 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1278
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1250
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1248
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1194
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !784
@.str.2.93 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1291
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1254
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1252
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1200
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !782
@.str.3.94 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1293
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1258
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1256
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1206
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !780
@.str.4.95 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1295
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1262
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1260
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1212
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !778
@.str.5.96 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1297
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1266
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1264
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1218
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !776
@.str.6.97 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1299
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1270
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1268
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1224
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !774
@.str.7.98 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1301
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1274
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1272
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1230
@.str.8.90 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.91 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !790
@.str.104 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1303
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1496
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1457
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1498
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.104, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1448
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1450
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1459
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1467
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1490
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1493
@.str.1.105 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.106 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.3.107 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.4.108 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !865
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1520
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1629
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1631
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1627
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1622
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1596
@.str.115 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.116 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.117 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.118 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.119 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.120 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1633
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.89, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1175
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.92, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1192
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.93, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1198
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.94, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1204
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.95, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1210
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.96, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1216
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.97, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1222
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1228
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1723
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1765
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1768
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1775
@.str.151 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.152 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.2.153 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.3.154 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1782
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2019
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2027
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2034
@.str.4.162 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2039
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.166 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.167 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.168 = private unnamed_addr constant [23 x i8] c"user_cb != ((void *)0)\00", align 1
@.str.2.169 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.3.170 = private unnamed_addr constant [26 x i8] c"\09user_cb can not be NULL\0A\00", align 1
@z_thread_monitor_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2064
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.181, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.182, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.183, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.184, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.185, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9.186, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.180, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.187, i32 0, i32 0)], align 4, !dbg !2085
@.str.4.181 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.5.182 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.6.183 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.7.184 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.8.185 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.9.186 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.10.180 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11.187 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2199
@.str.12.179 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.13.192 = private unnamed_addr constant [128 x i8] c"((((prio)) == 40 && z_is_idle_thread_entry((entry))) || (((40 - 1) >= ((-29))) && ((prio)) >= ((-29)) && ((prio)) <= (40 - 1)))\00", align 1
@.str.14.193 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.15.197 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.16.198 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.17 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.20 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.205 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.206 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.207 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.214 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.215 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.216 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.217 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.218 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2202
@.str.4.226 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.219 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.220 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.221 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.222 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.223 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2321
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2439
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2442
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2444
@.str.229 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.248 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.236 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.258 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.270 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.237 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.265 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.238 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.276 = private unnamed_addr constant [134 x i8] c"((((prio)) == 40 && z_is_idle_thread_entry((((void *)0)))) || (((40 - 1) >= ((-29))) && ((prio)) >= ((-29)) && ((prio)) <= (40 - 1)))\00", align 1
@.str.9.277 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.286 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.287 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.288 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.289 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.230 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.231 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.232 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.233 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.234 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.235 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.253 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.266 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.267 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2029
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2032
@.str.23.281 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.295 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.296 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.297 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.298 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2446
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2476
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2481
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1870
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2479
@.str.4.299 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.300 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.301 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.305 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.306 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.326 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

@_kernel_openocd_offsets = dso_local alias i32, getelementptr inbounds ([14 x i32], [14 x i32]* @_kernel_thread_info_offsets, i32 0, i32 0)
@_kernel_openocd_num_offsets = dso_local alias i32, i32* @_kernel_thread_info_num_offsets
@_kernel_openocd_size_t_size = dso_local alias i8, i8* @_kernel_thread_info_size_t_size

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3084 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3088, !srcloc !3089
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3090, !srcloc !3091
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3092, !srcloc !3093
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3094, !srcloc !3095
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3096, !srcloc !3097
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3098, !srcloc !3099
  tail call void asm sideeffect ".globl\09___kernel_t_threads_OFFSET\0A\09.equ\09___kernel_t_threads_OFFSET,${0:B}\0A\09.type\09___kernel_t_threads_OFFSET,%object", "n"(i32 -45) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -49) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3116, !srcloc !3117
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3118, !srcloc !3119
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -169) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3128, !srcloc !3129
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -153) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09___thread_t_next_thread_OFFSET\0A\09.equ\09___thread_t_next_thread_OFFSET,${0:B}\0A\09.type\09___thread_t_next_thread_OFFSET,%object", "n"(i32 -113) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -177) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3138, !srcloc !3139
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3146, !srcloc !3149
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3188, !srcloc !3189
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3190, !srcloc !3191
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -177) #23, !dbg !3196, !srcloc !3197
  ret void, !dbg !3198
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @philosopher(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #2 !dbg !3201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3204, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata i8* undef, metadata !3205, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata i8* undef, metadata !3206, metadata !DIExpression()), !dbg !3212
  %4 = ptrtoint i8* %0 to i32, !dbg !3213
  call void @llvm.dbg.value(metadata i32 %4, metadata !3209, metadata !DIExpression()), !dbg !3212
  %5 = tail call fastcc i32 @is_last_philosopher(i32 noundef %4) #24, !dbg !3214
  %6 = icmp eq i32 %5, 0, !dbg !3214
  br i1 %6, label %7, label %11, !dbg !3216

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %4, !dbg !3217
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !3217
  call void @llvm.dbg.value(metadata %struct.k_mutex* %9, metadata !3207, metadata !DIExpression()), !dbg !3212
  %10 = add nsw i32 %4, 1, !dbg !3219
  call void @llvm.dbg.value(metadata %struct.k_mutex* undef, metadata !3208, metadata !DIExpression()), !dbg !3212
  br label %11

11:                                               ; preds = %3, %7
  %12 = phi i32 [ %10, %7 ], [ %4, %3 ]
  %13 = phi %struct.k_mutex* [ %9, %7 ], [ getelementptr inbounds ([6 x %struct.k_mutex], [6 x %struct.k_mutex]* @fork_objs, i32 0, i32 0), %3 ], !dbg !3220
  %14 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %12, !dbg !3220
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !3220
  call void @llvm.dbg.value(metadata %struct.k_mutex* %13, metadata !3207, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata %struct.k_mutex* %15, metadata !3208, metadata !DIExpression()), !dbg !3212
  br label %16, !dbg !3221

16:                                               ; preds = %16, %11
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0), i32 noundef 0) #24, !dbg !3222
  tail call fastcc void @k_mutex_lock(%struct.k_mutex* noundef %13) #24, !dbg !3223
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0), i32 noundef 0) #24, !dbg !3224
  tail call fastcc void @k_mutex_lock(%struct.k_mutex* noundef %15) #24, !dbg !3225
  %17 = tail call fastcc i32 @get_random_delay(i32 noundef %4) #24, !dbg !3226
  call void @llvm.dbg.value(metadata i32 %17, metadata !3210, metadata !DIExpression()), !dbg !3227
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0), i32 noundef %17) #24, !dbg !3228
  tail call fastcc void @k_msleep(i32 noundef %17) #24, !dbg !3229
  tail call fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %15) #24, !dbg !3230
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0), i32 noundef 0) #24, !dbg !3231
  tail call fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %13) #24, !dbg !3232
  %18 = tail call fastcc i32 @get_random_delay(i32 noundef %4) #24, !dbg !3233
  call void @llvm.dbg.value(metadata i32 %18, metadata !3210, metadata !DIExpression()), !dbg !3227
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 noundef %18) #24, !dbg !3234
  tail call fastcc void @k_msleep(i32 noundef %18) #24, !dbg !3235
  br label %16, !dbg !3221, !llvm.loop !3236
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @is_last_philosopher(i32 noundef %0) unnamed_addr #4 !dbg !3238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3240, metadata !DIExpression()), !dbg !3241
  %2 = icmp eq i32 %0, 5, !dbg !3242
  %3 = zext i1 %2 to i32, !dbg !3242
  ret i32 %3, !dbg !3243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_phil_state(i32 noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !3244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3248, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %1, metadata !3249, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %2, metadata !3250, metadata !DIExpression()), !dbg !3252
  %4 = tail call fastcc %struct.k_thread* @k_current_get() #25, !dbg !3253
  %5 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %4) #24, !dbg !3254
  call void @llvm.dbg.value(metadata i32 %5, metadata !3251, metadata !DIExpression()), !dbg !3252
  tail call fastcc void @set_phil_state_pos(i32 noundef %0) #24, !dbg !3255
  %6 = icmp slt i32 %5, 0, !dbg !3256
  %7 = select i1 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0), !dbg !3257
  %8 = select i1 %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), !dbg !3258
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0, i8* noundef %7, i8* noundef %8, i32 noundef %5) #26, !dbg !3259
  %9 = icmp eq i32 %2, 0, !dbg !3260
  br i1 %9, label %11, label %10, !dbg !3262

10:                                               ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef %1, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 noundef %2) #26, !dbg !3263
  br label %12, !dbg !3265

11:                                               ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef %1, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i32 0, i32 0)) #26, !dbg !3266
  br label %12

12:                                               ; preds = %11, %10
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0)) #26, !dbg !3268
  ret void, !dbg !3269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3270 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3280, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3279, metadata !DIExpression()), !dbg !3281
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3282, !srcloc !3284
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #26, !dbg !3285
  ret void, !dbg !3286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_random_delay(i32 noundef %0) unnamed_addr #1 !dbg !3287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3291, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i32 25, metadata !3292, metadata !DIExpression()), !dbg !3295
  %2 = tail call fastcc i32 @k_uptime_get_32() #24, !dbg !3296
  %3 = udiv i32 %2, 100, !dbg !3297
  %4 = add nsw i32 %0, 1, !dbg !3298
  %5 = mul i32 %3, %4, !dbg !3299
  %6 = and i32 %5, 31, !dbg !3300
  call void @llvm.dbg.value(metadata i32 %6, metadata !3293, metadata !DIExpression()), !dbg !3295
  %7 = mul nuw nsw i32 %6, 25, !dbg !3301
  %8 = add nuw nsw i32 %7, 25, !dbg !3301
  call void @llvm.dbg.value(metadata i32 %8, metadata !3294, metadata !DIExpression()), !dbg !3295
  ret i32 %8, !dbg !3302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3307, metadata !DIExpression()), !dbg !3308
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #24, !dbg !3309
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3310
  tail call fastcc void @k_sleep([1 x i64] %4) #24, !dbg !3310
  ret void, !dbg !3311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3312 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3316, metadata !DIExpression()), !dbg !3317
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3318, !srcloc !3320
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #26, !dbg !3321
  ret void, !dbg !3322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3323 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3328, metadata !DIExpression()), !dbg !3329
  call void @llvm.dbg.value(metadata i64 %0, metadata !3330, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i32 1000, metadata !3335, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i32 10000, metadata !3336, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i8 1, metadata !3337, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i8 0, metadata !3338, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i1 true, metadata !3339, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3347
  call void @llvm.dbg.value(metadata i8 0, metadata !3340, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i1 true, metadata !3341, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3347
  call void @llvm.dbg.value(metadata i1 false, metadata !3342, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3347
  call void @llvm.dbg.value(metadata i64 0, metadata !3343, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i64 0, metadata !3343, metadata !DIExpression()), !dbg !3347
  %2 = mul i64 %0, 10, !dbg !3349
  ret i64 %2, !dbg !3355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3356 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3360, metadata !DIExpression()), !dbg !3361
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3362, !srcloc !3364
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #26, !dbg !3365
  ret void, !dbg !3366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3367 {
  %1 = tail call fastcc i64 @k_uptime_get() #24, !dbg !3370
  %2 = trunc i64 %1 to i32, !dbg !3371
  ret i32 %2, !dbg !3372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3373 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !3376
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #24, !dbg !3377
  ret i64 %2, !dbg !3378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3379 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3380, !srcloc !3382
  %1 = tail call i64 @z_impl_k_uptime_ticks() #26, !dbg !3383
  ret i64 %1, !dbg !3384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !3385 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3387, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i64 %0, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 10000, metadata !3335, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 1000, metadata !3336, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 1, metadata !3337, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 0, metadata !3338, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i1 false, metadata !3339, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3389
  call void @llvm.dbg.value(metadata i8 0, metadata !3340, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i1 false, metadata !3341, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3389
  call void @llvm.dbg.value(metadata i1 true, metadata !3342, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3389
  call void @llvm.dbg.value(metadata i64 0, metadata !3343, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i64 0, metadata !3343, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3330, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3389
  call void @llvm.dbg.value(metadata i64 %0, metadata !3330, metadata !DIExpression()), !dbg !3389
  %2 = udiv i64 %0, 10, !dbg !3391
  ret i64 %2, !dbg !3395
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #5 !dbg !3396 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #25, !dbg !3400
  ret %struct.k_thread* %1, !dbg !3401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3402 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3406, metadata !DIExpression()), !dbg !3407
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3408, !srcloc !3410
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #26, !dbg !3411
  ret i32 %2, !dbg !3412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_phil_state_pos(i32 noundef %0) unnamed_addr #1 !dbg !3413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3417, metadata !DIExpression()), !dbg !3418
  %2 = add nsw i32 %0, 1, !dbg !3419
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i32 noundef %2, i32 noundef 1) #26, !dbg !3420
  ret void, !dbg !3421
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #5 !dbg !3422 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3423, !srcloc !3425
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3426
  ret %struct.k_thread* %1, !dbg !3427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3428 {
  tail call fastcc void @display_demo_description() #24, !dbg !3429
  tail call void @k_sched_time_slice_set(i32 noundef 5000, i32 noundef 0) #26, !dbg !3430
  tail call fastcc void @init_objects() #24, !dbg !3431
  tail call fastcc void @start_threads() #24, !dbg !3432
  ret void, !dbg !3433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @display_demo_description() unnamed_addr #1 !dbg !3434 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([328 x i8], [328 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0)) #26, !dbg !3435
  ret void, !dbg !3436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_objects() unnamed_addr #1 !dbg !3437 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3439, metadata !DIExpression()), !dbg !3441
  br label %2, !dbg !3442

1:                                                ; preds = %2
  ret void, !dbg !3443

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3439, metadata !DIExpression()), !dbg !3441
  %4 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %3, !dbg !3444
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !3444
  tail call fastcc void @k_mutex_init(%struct.k_mutex* noundef %5) #24, !dbg !3444
  %6 = add nuw nsw i32 %3, 1, !dbg !3447
  call void @llvm.dbg.value(metadata i32 %6, metadata !3439, metadata !DIExpression()), !dbg !3441
  %7 = icmp eq i32 %6, 6, !dbg !3448
  br i1 %7, label %1, label %2, !dbg !3442, !llvm.loop !3449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @start_threads() unnamed_addr #1 !dbg !3451 {
  %1 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i32 0, metadata !3453, metadata !DIExpression()), !dbg !3459
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0
  br label %4, !dbg !3460

3:                                                ; preds = %4
  ret void, !dbg !3461

4:                                                ; preds = %0, %4
  %5 = phi i32 [ 0, %0 ], [ %11, %4 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3453, metadata !DIExpression()), !dbg !3459
  %6 = call fastcc i32 @new_prio(i32 noundef %5) #24, !dbg !3462, !range !3463
  call void @llvm.dbg.value(metadata i32 %6, metadata !3455, metadata !DIExpression()), !dbg !3464
  %7 = getelementptr inbounds [6 x %struct.k_thread], [6 x %struct.k_thread]* @threads, i32 0, i32 %5, !dbg !3465
  %8 = getelementptr inbounds [6 x [2112 x %struct.z_thread_stack_element]], [6 x [2112 x %struct.z_thread_stack_element]]* @stacks, i32 0, i32 %5, i32 0, !dbg !3466
  %9 = inttoptr i32 %5 to i8*, !dbg !3467
  call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %7, %struct.z_thread_stack_element* noundef nonnull %8, i8* noundef %9, i32 noundef %6) #24, !dbg !3468
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #23, !dbg !3469
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !3458, metadata !DIExpression()), !dbg !3470
  %10 = call i32 (i8*, i32, i8*, ...) @snprintk(i8* noundef nonnull %2, i32 noundef 32, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), i32 noundef %5) #26, !dbg !3471
  call fastcc void @k_thread_name_set(%struct.k_thread* noundef nonnull %7, i8* noundef nonnull %2) #24, !dbg !3472
  call fastcc void @k_object_access_grant() #24, !dbg !3473
  %11 = add nuw nsw i32 %5, 1, !dbg !3474
  call fastcc void @k_object_access_grant() #24, !dbg !3475
  call fastcc void @k_thread_start(%struct.k_thread* noundef nonnull %7) #24, !dbg !3476
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #23, !dbg !3477
  call void @llvm.dbg.value(metadata i32 %11, metadata !3453, metadata !DIExpression()), !dbg !3459
  %12 = icmp eq i32 %11, 6, !dbg !3478
  br i1 %12, label %3, label %4, !dbg !3460, !llvm.loop !3479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio(i32 noundef %0) unnamed_addr #4 !dbg !3481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3483, metadata !DIExpression()), !dbg !3484
  %2 = sub i32 3, %0, !dbg !3485
  ret i32 %2, !dbg !3486
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3487 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3502, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3493, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3494, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 2048, metadata !3495, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @philosopher, metadata !3496, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i8* %2, metadata !3497, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i8* null, metadata !3498, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i8* null, metadata !3499, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %3, metadata !3500, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 4, metadata !3501, metadata !DIExpression()), !dbg !3503
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3504, !srcloc !3506
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @philosopher, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 4, [1 x i64] [i64 -1]) #26, !dbg !3507
  ret void, !dbg !3508
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3509 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3513, metadata !DIExpression()), !dbg !3515
  call void @llvm.dbg.value(metadata i8* %1, metadata !3514, metadata !DIExpression()), !dbg !3515
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3516, !srcloc !3518
  %3 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) #26, !dbg !3519
  ret void, !dbg !3520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !3521 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !3526, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !3527, metadata !DIExpression()), !dbg !3528
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3529, !srcloc !3531
  ret void, !dbg !3532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3537, metadata !DIExpression()), !dbg !3538
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3539, !srcloc !3541
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !3542
  ret void, !dbg !3543
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_init(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3544 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3546, metadata !DIExpression()), !dbg !3547
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3548, !srcloc !3550
  %2 = tail call i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) #26, !dbg !3551
  ret void, !dbg !3552
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3555, metadata !DIExpression()), !dbg !3556
  ret i32 0, !dbg !3557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !3558 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3562, metadata !DIExpression()), !dbg !3563
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3564
  ret void, !dbg !3565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !3566 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3569
  ret i8* %1, !dbg !3570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3571 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3583, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i8* %0, metadata !3582, metadata !DIExpression()), !dbg !3594
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !3595
  ret void, !dbg !3597
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3602, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i8* %1, metadata !3603, metadata !DIExpression()), !dbg !3604
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3605
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3605
  ret i32 %4, !dbg !3606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3607 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3619, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3616, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i8* %1, metadata !3617, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i8* %2, metadata !3618, metadata !DIExpression()), !dbg !3620
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3621
  ret void, !dbg !3622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3623 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3627, metadata !DIExpression()), !dbg !3630
  call void @llvm.dbg.value(metadata i32 %1, metadata !3628, metadata !DIExpression()), !dbg !3630
  call void @llvm.dbg.value(metadata i32 0, metadata !3629, metadata !DIExpression()), !dbg !3630
  %3 = icmp eq i32 %1, 0, !dbg !3631
  br i1 %3, label %13, label %4, !dbg !3634

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3629, metadata !DIExpression()), !dbg !3630
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3635
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3637
  %8 = load i8, i8* %7, align 1, !dbg !3637
  %9 = zext i8 %8 to i32, !dbg !3637
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3635
  %11 = add nuw i32 %5, 1, !dbg !3638
  call void @llvm.dbg.value(metadata i32 %11, metadata !3629, metadata !DIExpression()), !dbg !3630
  %12 = icmp eq i32 %11, %1, !dbg !3631
  br i1 %12, label %13, label %4, !dbg !3634, !llvm.loop !3639

13:                                               ; preds = %4, %2
  ret void, !dbg !3641
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3642 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3646, metadata !DIExpression()), !dbg !3648
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3649
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3649
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3647, metadata !DIExpression()), !dbg !3650
  call void @llvm.va_start(i8* nonnull %3), !dbg !3651
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3652
  %5 = load i32, i32* %4, align 4, !dbg !3652
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3652
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3652
  call void @llvm.va_end(i8* nonnull %3), !dbg !3653
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3654
  ret void, !dbg !3654
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #9

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #9

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3655 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3659, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata i32 %1, metadata !3660, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata i8* %2, metadata !3661, metadata !DIExpression()), !dbg !3664
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3665
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3665
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3662, metadata !DIExpression()), !dbg !3666
  call void @llvm.va_start(i8* nonnull %5), !dbg !3667
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3668
  %7 = load i32, i32* %6, align 4, !dbg !3668
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3668
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3668
  call void @llvm.dbg.value(metadata i32 %9, metadata !3663, metadata !DIExpression()), !dbg !3664
  call void @llvm.va_end(i8* nonnull %5), !dbg !3669
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3670
  ret i32 %9, !dbg !3671
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3672 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3679, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i8* %0, metadata !3676, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i32 %1, metadata !3677, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i8* %2, metadata !3678, metadata !DIExpression()), !dbg !3686
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3687
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3687
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3680, metadata !DIExpression()), !dbg !3688
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3689
  store i8* %0, i8** %7, align 4, !dbg !3689
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3689
  store i32 %1, i32* %8, align 4, !dbg !3689
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3689
  store i32 0, i32* %9, align 4, !dbg !3689
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3690
  %10 = load i32, i32* %9, align 4, !dbg !3691
  %11 = load i32, i32* %8, align 4, !dbg !3693
  %12 = icmp slt i32 %10, %11, !dbg !3694
  br i1 %12, label %13, label %15, !dbg !3695

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3696
  store i8 0, i8* %14, align 1, !dbg !3698
  br label %15, !dbg !3699

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3700
  ret i32 %10, !dbg !3701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #10 !dbg !3702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3707, metadata !DIExpression()), !dbg !3709
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3708, metadata !DIExpression()), !dbg !3709
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3710
  %4 = load i8*, i8** %3, align 4, !dbg !3710
  %5 = icmp eq i8* %4, null, !dbg !3712
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3713
  br i1 %5, label %12, label %8, !dbg !3714

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3715
  %10 = load i32, i32* %9, align 4, !dbg !3715
  %11 = icmp slt i32 %7, %10, !dbg !3716
  br i1 %11, label %15, label %12, !dbg !3717

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3718
  %14 = add nsw i32 %7, 1, !dbg !3720
  store i32 %14, i32* %13, align 4, !dbg !3720
  br label %25, !dbg !3721

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3722
  %17 = icmp eq i32 %7, %16, !dbg !3724
  br i1 %17, label %18, label %21, !dbg !3725

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3726
  store i32 %19, i32* %6, align 4, !dbg !3726
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3728
  store i8 0, i8* %20, align 1, !dbg !3729
  br label %25, !dbg !3730

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3731
  %23 = add nsw i32 %7, 1, !dbg !3733
  store i32 %23, i32* %6, align 4, !dbg !3733
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3734
  store i8 %22, i8* %24, align 1, !dbg !3735
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3736
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #11 !dbg !3737 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3751, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i8 %1, metadata !3752, metadata !DIExpression()), !dbg !3754
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3755
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !3755
  call void @llvm.dbg.value(metadata %struct.rbnode* %4, metadata !3753, metadata !DIExpression()), !dbg !3754
  br label %5, !dbg !3757

5:                                                ; preds = %8, %2
  %6 = phi %struct.rbnode* [ %4, %2 ], [ %9, %8 ], !dbg !3758
  call void @llvm.dbg.value(metadata %struct.rbnode* %6, metadata !3753, metadata !DIExpression()), !dbg !3754
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !3759
  br i1 %7, label %11, label %8, !dbg !3761

8:                                                ; preds = %5
  %9 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext %1) #24, !dbg !3762
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !3763
  br i1 %10, label %11, label %5, !dbg !3764, !llvm.loop !3765

11:                                               ; preds = %5, %8
  ret %struct.rbnode* %6, !dbg !3767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.rbnode* @get_child(%struct.rbnode* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #8 !dbg !3768 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3772, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i8 %1, metadata !3773, metadata !DIExpression()), !dbg !3775
  %3 = icmp eq i8 %1, 0, !dbg !3776
  br i1 %3, label %7, label %4, !dbg !3778

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 1, !dbg !3779
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !3779
  br label %13, !dbg !3781

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !3782
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !3782
  %10 = ptrtoint %struct.rbnode* %9 to i32, !dbg !3783
  call void @llvm.dbg.value(metadata i32 %10, metadata !3774, metadata !DIExpression()), !dbg !3775
  %11 = and i32 %10, -2, !dbg !3784
  call void @llvm.dbg.value(metadata i32 %11, metadata !3774, metadata !DIExpression()), !dbg !3775
  %12 = inttoptr i32 %11 to %struct.rbnode*, !dbg !3785
  br label %13

13:                                               ; preds = %7, %4
  %14 = phi %struct.rbnode* [ %6, %4 ], [ %12, %7 ], !dbg !3775
  ret %struct.rbnode* %14, !dbg !3786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rb_insert(%struct.rbtree* nocapture noundef %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !3787 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3791, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3792, metadata !DIExpression()), !dbg !3801
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0, i8* noundef null) #24, !dbg !3802
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1, i8* noundef null) #24, !dbg !3803
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3804
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !3804
  %5 = icmp eq %struct.rbnode* %4, null, !dbg !3806
  br i1 %5, label %6, label %8, !dbg !3807

6:                                                ; preds = %2
  store %struct.rbnode* %1, %struct.rbnode** %3, align 4, !dbg !3808
  %7 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !3810
  store i32 1, i32* %7, align 4, !dbg !3811
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef 1) #24, !dbg !3812
  br label %31, !dbg !3813

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !3814
  %10 = load i32, i32* %9, align 4, !dbg !3814
  %11 = add nsw i32 %10, 1, !dbg !3815
  %12 = tail call i8* @llvm.stacksave(), !dbg !3816
  %13 = alloca %struct.rbnode*, i32 %11, align 4, !dbg !3816
  call void @llvm.dbg.value(metadata i32 %11, metadata !3793, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.declare(metadata %struct.rbnode** %13, metadata !3794, metadata !DIExpression()), !dbg !3817
  %14 = call fastcc i32 @find_and_stack(%struct.rbtree* noundef nonnull %0, %struct.rbnode* noundef %1, %struct.rbnode** noundef nonnull %13) #24, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %14, metadata !3798, metadata !DIExpression()), !dbg !3801
  %15 = add nsw i32 %14, -1, !dbg !3819
  %16 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %13, i32 %15, !dbg !3820
  %17 = load %struct.rbnode*, %struct.rbnode** %16, align 4, !dbg !3820
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3799, metadata !DIExpression()), !dbg !3801
  %18 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1, !dbg !3821
  %19 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %18, align 4, !dbg !3821
  %20 = tail call zeroext i1 %19(%struct.rbnode* noundef %1, %struct.rbnode* noundef %17) #26, !dbg !3822
  %21 = xor i1 %20, true, !dbg !3822
  %22 = zext i1 %21 to i8, !dbg !3822
  call void @llvm.dbg.value(metadata i8 %22, metadata !3800, metadata !DIExpression()), !dbg !3801
  %23 = bitcast %struct.rbnode* %1 to i8*, !dbg !3823
  tail call fastcc void @set_child(%struct.rbnode* noundef %17, i8 noundef zeroext %22, i8* noundef %23) #24, !dbg !3824
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef 0) #24, !dbg !3825
  %24 = add nsw i32 %14, 1, !dbg !3826
  call void @llvm.dbg.value(metadata i32 %24, metadata !3798, metadata !DIExpression()), !dbg !3801
  %25 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %13, i32 %14, !dbg !3827
  store %struct.rbnode* %1, %struct.rbnode** %25, align 4, !dbg !3828
  call fastcc void @fix_extra_red(%struct.rbnode** noundef nonnull %13, i32 noundef %24) #24, !dbg !3829
  %26 = load i32, i32* %9, align 4, !dbg !3830
  %27 = icmp slt i32 %14, %26, !dbg !3832
  br i1 %27, label %29, label %28, !dbg !3833

28:                                               ; preds = %8
  store i32 %24, i32* %9, align 4, !dbg !3834
  br label %29, !dbg !3836

29:                                               ; preds = %28, %8
  %30 = load %struct.rbnode*, %struct.rbnode** %13, align 4, !dbg !3837
  store %struct.rbnode* %30, %struct.rbnode** %3, align 4, !dbg !3838
  tail call void @llvm.stackrestore(i8* %12), !dbg !3839
  br label %31

31:                                               ; preds = %29, %6
  ret void, !dbg !3839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_child(%struct.rbnode* nocapture noundef %0, i8 noundef zeroext %1, i8* noundef %2) unnamed_addr #10 !dbg !3840 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3844, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 %1, metadata !3845, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %2, metadata !3846, metadata !DIExpression()), !dbg !3851
  %4 = icmp eq i8 %1, 0, !dbg !3852
  br i1 %4, label %8, label %5, !dbg !3853

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 1, !dbg !3854
  %7 = bitcast %struct.rbnode** %6 to i8**, !dbg !3856
  store i8* %2, i8** %7, align 4, !dbg !3856
  br label %16, !dbg !3857

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !3858
  %10 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !3858
  %11 = ptrtoint %struct.rbnode* %10 to i32, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %11, metadata !3847, metadata !DIExpression()), !dbg !3860
  %12 = ptrtoint i8* %2 to i32, !dbg !3861
  call void @llvm.dbg.value(metadata i32 %12, metadata !3850, metadata !DIExpression()), !dbg !3860
  %13 = and i32 %11, 1, !dbg !3862
  %14 = or i32 %13, %12, !dbg !3863
  %15 = inttoptr i32 %14 to %struct.rbnode*, !dbg !3864
  store %struct.rbnode* %15, %struct.rbnode** %9, align 4, !dbg !3865
  br label %16

16:                                               ; preds = %8, %5
  ret void, !dbg !3866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_color(%struct.rbnode* nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3867 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3871, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata i32 %1, metadata !3872, metadata !DIExpression()), !dbg !3875
  %3 = bitcast %struct.rbnode* %0 to i32*, !dbg !3876
  call void @llvm.dbg.value(metadata i32* %3, metadata !3873, metadata !DIExpression()), !dbg !3875
  %4 = load i32, i32* %3, align 4, !dbg !3877
  %5 = and i32 %4, -2, !dbg !3878
  %6 = and i32 %1, 255, !dbg !3879
  %7 = or i32 %5, %6, !dbg !3880
  store i32 %7, i32* %3, align 4, !dbg !3881
  ret void, !dbg !3882
}

; Function Attrs: nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #9

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @find_and_stack(%struct.rbtree* nocapture noundef readonly %0, %struct.rbnode* noundef %1, %struct.rbnode** nocapture noundef %2) unnamed_addr #1 !dbg !3883 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3888, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3889, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.value(metadata %struct.rbnode** %2, metadata !3890, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.value(metadata i32 0, metadata !3891, metadata !DIExpression()), !dbg !3895
  %4 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3896
  %5 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !3896
  call void @llvm.dbg.value(metadata i32 1, metadata !3891, metadata !DIExpression()), !dbg !3895
  store %struct.rbnode* %5, %struct.rbnode** %2, align 4, !dbg !3897
  %6 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1, !dbg !3898
  call void @llvm.dbg.value(metadata i32 1, metadata !3891, metadata !DIExpression()), !dbg !3895
  %7 = icmp eq %struct.rbnode* %5, %1, !dbg !3899
  br i1 %7, label %23, label %8, !dbg !3900

8:                                                ; preds = %3, %19
  %9 = phi %struct.rbnode* [ %17, %19 ], [ %5, %3 ]
  %10 = phi %struct.rbnode** [ %21, %19 ], [ %2, %3 ]
  %11 = phi i32 [ %20, %19 ], [ 1, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3891, metadata !DIExpression()), !dbg !3895
  %12 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %6, align 4, !dbg !3898
  %13 = tail call zeroext i1 %12(%struct.rbnode* noundef %1, %struct.rbnode* noundef %9) #26, !dbg !3901
  %14 = xor i1 %13, true, !dbg !3901
  %15 = zext i1 %14 to i8, !dbg !3901
  call void @llvm.dbg.value(metadata i8 %15, metadata !3892, metadata !DIExpression()), !dbg !3902
  %16 = load %struct.rbnode*, %struct.rbnode** %10, align 4, !dbg !3903
  %17 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext %15) #24, !dbg !3904
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3894, metadata !DIExpression()), !dbg !3902
  %18 = icmp eq %struct.rbnode* %17, null, !dbg !3905
  br i1 %18, label %23, label %19, !dbg !3907

19:                                               ; preds = %8
  %20 = add nuw nsw i32 %11, 1, !dbg !3908
  call void @llvm.dbg.value(metadata i32 %20, metadata !3891, metadata !DIExpression()), !dbg !3895
  %21 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %2, i32 %11, !dbg !3910
  store %struct.rbnode* %17, %struct.rbnode** %21, align 4, !dbg !3911
  %22 = icmp eq %struct.rbnode* %17, %1, !dbg !3899
  br i1 %22, label %23, label %8, !dbg !3900

23:                                               ; preds = %19, %8, %3
  %24 = phi i32 [ 1, %3 ], [ %11, %8 ], [ %20, %19 ], !dbg !3895
  call void @llvm.dbg.value(metadata i32 %24, metadata !3891, metadata !DIExpression()), !dbg !3895
  ret i32 %24, !dbg !3912
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @fix_extra_red(%struct.rbnode** nocapture noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3913 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !3917, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.value(metadata i32 %1, metadata !3918, metadata !DIExpression()), !dbg !3926
  %3 = icmp sgt i32 %1, 1, !dbg !3927
  br i1 %3, label %4, label %34, !dbg !3928

4:                                                ; preds = %2, %32
  %5 = phi i32 [ %9, %32 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3918, metadata !DIExpression()), !dbg !3926
  %6 = add nsw i32 %5, -1, !dbg !3929
  %7 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !3930
  %8 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !3930
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !3919, metadata !DIExpression()), !dbg !3931
  %9 = add nsw i32 %5, -2, !dbg !3932
  %10 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %9, !dbg !3933
  %11 = load %struct.rbnode*, %struct.rbnode** %10, align 4, !dbg !3933
  call void @llvm.dbg.value(metadata %struct.rbnode* %11, metadata !3921, metadata !DIExpression()), !dbg !3931
  %12 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %11) #24, !dbg !3934
  br i1 %12, label %38, label %13, !dbg !3936

13:                                               ; preds = %4
  %14 = add nsw i32 %5, -3, !dbg !3937
  %15 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %14, !dbg !3938
  %16 = load %struct.rbnode*, %struct.rbnode** %15, align 4, !dbg !3938
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !3922, metadata !DIExpression()), !dbg !3931
  %17 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %16, %struct.rbnode* noundef %11) #24, !dbg !3939
  call void @llvm.dbg.value(metadata i8 %17, metadata !3923, metadata !DIExpression()), !dbg !3931
  %18 = icmp eq i8 %17, 0, !dbg !3940
  %19 = zext i1 %18 to i8, !dbg !3941
  %20 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext %19) #24, !dbg !3942
  call void @llvm.dbg.value(metadata %struct.rbnode* %20, metadata !3924, metadata !DIExpression()), !dbg !3931
  %21 = icmp eq %struct.rbnode* %20, null, !dbg !3943
  br i1 %21, label %24, label %22, !dbg !3945

22:                                               ; preds = %13
  %23 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %20) #24, !dbg !3946
  br i1 %23, label %32, label %24, !dbg !3947

24:                                               ; preds = %22, %13
  %25 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %9, !dbg !3933
  %26 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %14, !dbg !3938
  %27 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %11, %struct.rbnode* noundef %8) #24, !dbg !3948
  call void @llvm.dbg.value(metadata i8 %27, metadata !3925, metadata !DIExpression()), !dbg !3931
  %28 = icmp eq i8 %27, %17, !dbg !3949
  br i1 %28, label %30, label %29, !dbg !3951

29:                                               ; preds = %24
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %5) #24, !dbg !3952
  br label %30, !dbg !3954

30:                                               ; preds = %29, %24
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %6) #24, !dbg !3955
  %31 = load %struct.rbnode*, %struct.rbnode** %26, align 4, !dbg !3956
  tail call fastcc void @set_color(%struct.rbnode* noundef %31, i32 noundef 1) #24, !dbg !3957
  br label %34

32:                                               ; preds = %22
  tail call fastcc void @set_color(%struct.rbnode* noundef %16, i32 noundef 0) #24, !dbg !3958
  tail call fastcc void @set_color(%struct.rbnode* noundef %11, i32 noundef 1) #24, !dbg !3960
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %20, i32 noundef 1) #24, !dbg !3961
  call void @llvm.dbg.value(metadata i32 %9, metadata !3918, metadata !DIExpression()), !dbg !3926
  %33 = icmp ugt i32 %5, 3, !dbg !3927
  br i1 %33, label %4, label %34, !dbg !3928

34:                                               ; preds = %32, %2, %30
  %35 = phi %struct.rbnode** [ %25, %30 ], [ %0, %2 ], [ %0, %32 ]
  %36 = phi i32 [ 0, %30 ], [ 1, %2 ], [ 1, %32 ]
  %37 = load %struct.rbnode*, %struct.rbnode** %35, align 4, !dbg !3926
  tail call fastcc void @set_color(%struct.rbnode* noundef %37, i32 noundef %36) #24, !dbg !3926
  br label %38, !dbg !3962

38:                                               ; preds = %4, %34
  ret void, !dbg !3962
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #9

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_black(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !3963 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3967, metadata !DIExpression()), !dbg !3968
  %2 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %0) #24, !dbg !3969
  %3 = icmp eq i32 %2, 1, !dbg !3970
  ret i1 %3, !dbg !3971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @get_side(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* noundef readnone %1) unnamed_addr #8 !dbg !3972 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3976, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3977, metadata !DIExpression()), !dbg !3978
  %3 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext 1) #24, !dbg !3979
  %4 = icmp eq %struct.rbnode* %3, %1, !dbg !3980
  %5 = zext i1 %4 to i8, !dbg !3981
  ret i8 %5, !dbg !3982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_red(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !3983 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3985, metadata !DIExpression()), !dbg !3986
  %2 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %0) #24, !dbg !3987
  %3 = icmp eq i32 %2, 0, !dbg !3988
  ret i1 %3, !dbg !3989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @rotate(%struct.rbnode** nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3990 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !3992, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i32 %1, metadata !3993, metadata !DIExpression()), !dbg !4002
  %3 = add nsw i32 %1, -2, !dbg !4003
  %4 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %3, !dbg !4004
  %5 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !4004
  call void @llvm.dbg.value(metadata %struct.rbnode* %5, metadata !3994, metadata !DIExpression()), !dbg !4002
  %6 = add nsw i32 %1, -1, !dbg !4005
  %7 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !4006
  %8 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !4006
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !3995, metadata !DIExpression()), !dbg !4002
  %9 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %5, %struct.rbnode* noundef %8) #24, !dbg !4007, !range !4008
  call void @llvm.dbg.value(metadata i8 %9, metadata !3996, metadata !DIExpression()), !dbg !4002
  %10 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %8, i8 noundef zeroext %9) #24, !dbg !4009
  call void @llvm.dbg.value(metadata %struct.rbnode* %10, metadata !3997, metadata !DIExpression()), !dbg !4002
  %11 = xor i8 %9, 1, !dbg !4010
  %12 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %8, i8 noundef zeroext %11) #24, !dbg !4011
  call void @llvm.dbg.value(metadata %struct.rbnode* %12, metadata !3998, metadata !DIExpression()), !dbg !4002
  %13 = icmp sgt i32 %1, 2, !dbg !4012
  br i1 %13, label %14, label %20, !dbg !4013

14:                                               ; preds = %2
  %15 = add nsw i32 %1, -3, !dbg !4014
  %16 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %15, !dbg !4015
  %17 = load %struct.rbnode*, %struct.rbnode** %16, align 4, !dbg !4015
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3999, metadata !DIExpression()), !dbg !4016
  %18 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %17, %struct.rbnode* noundef %5) #24, !dbg !4017, !range !4008
  %19 = bitcast %struct.rbnode* %8 to i8*, !dbg !4018
  tail call fastcc void @set_child(%struct.rbnode* noundef %17, i8 noundef zeroext %18, i8* noundef %19) #24, !dbg !4019
  br label %20, !dbg !4020

20:                                               ; preds = %14, %2
  %21 = bitcast %struct.rbnode* %10 to i8*, !dbg !4021
  tail call fastcc void @set_child(%struct.rbnode* noundef %8, i8 noundef zeroext %9, i8* noundef %21) #24, !dbg !4022
  %22 = bitcast %struct.rbnode* %5 to i8*, !dbg !4023
  tail call fastcc void @set_child(%struct.rbnode* noundef %8, i8 noundef zeroext %11, i8* noundef %22) #24, !dbg !4024
  %23 = bitcast %struct.rbnode* %12 to i8*, !dbg !4025
  tail call fastcc void @set_child(%struct.rbnode* noundef %5, i8 noundef zeroext %9, i8* noundef %23) #24, !dbg !4026
  store %struct.rbnode* %8, %struct.rbnode** %4, align 4, !dbg !4027
  store %struct.rbnode* %5, %struct.rbnode** %7, align 4, !dbg !4028
  ret void, !dbg !4029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @get_color(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !4030 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4034, metadata !DIExpression()), !dbg !4035
  %2 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !4036
  %3 = load %struct.rbnode*, %struct.rbnode** %2, align 4, !dbg !4036
  %4 = ptrtoint %struct.rbnode* %3 to i32, !dbg !4037
  %5 = and i32 %4, 1, !dbg !4038
  ret i32 %5, !dbg !4039
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rb_remove(%struct.rbtree* nocapture noundef %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !4040 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4042, metadata !DIExpression()), !dbg !4060
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !4043, metadata !DIExpression()), !dbg !4060
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !4061
  %4 = load i32, i32* %3, align 4, !dbg !4061
  %5 = add nsw i32 %4, 1, !dbg !4062
  %6 = alloca %struct.rbnode*, i32 %5, align 4, !dbg !4063
  call void @llvm.dbg.value(metadata i32 %5, metadata !4045, metadata !DIExpression()), !dbg !4060
  call void @llvm.dbg.declare(metadata %struct.rbnode** %6, metadata !4046, metadata !DIExpression()), !dbg !4064
  %7 = call fastcc i32 @find_and_stack(%struct.rbtree* noundef %0, %struct.rbnode* noundef %1, %struct.rbnode** noundef nonnull %6) #24, !dbg !4065
  call void @llvm.dbg.value(metadata i32 %7, metadata !4050, metadata !DIExpression()), !dbg !4060
  %8 = add nsw i32 %7, -1, !dbg !4066
  %9 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %8, !dbg !4068
  %10 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !4068
  %11 = icmp eq %struct.rbnode* %10, %1, !dbg !4069
  br i1 %11, label %12, label %108, !dbg !4070

12:                                               ; preds = %2
  %13 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4071
  %14 = icmp eq %struct.rbnode* %13, null, !dbg !4072
  br i1 %14, label %69, label %15, !dbg !4073

15:                                               ; preds = %12
  %16 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4074
  %17 = icmp eq %struct.rbnode* %16, null, !dbg !4075
  br i1 %17, label %69, label %18, !dbg !4076

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %7, metadata !4051, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4056, metadata !DIExpression()), !dbg !4077
  %19 = icmp sgt i32 %7, 1, !dbg !4078
  br i1 %19, label %20, label %24, !dbg !4079

20:                                               ; preds = %18
  %21 = add nsw i32 %7, -2, !dbg !4080
  %22 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %21, !dbg !4081
  %23 = load %struct.rbnode*, %struct.rbnode** %22, align 4, !dbg !4081
  br label %24, !dbg !4079

24:                                               ; preds = %18, %20
  %25 = phi %struct.rbnode* [ %23, %20 ], [ null, %18 ], !dbg !4079
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !4054, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i32 %7, metadata !4050, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4060
  %26 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %7, !dbg !4082
  store %struct.rbnode* %13, %struct.rbnode** %26, align 4, !dbg !4083
  %27 = add nsw i32 %7, 1, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %27, metadata !4050, metadata !DIExpression()), !dbg !4060
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4056, metadata !DIExpression()), !dbg !4077
  %28 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %13, i8 noundef zeroext 1) #24, !dbg !4084
  %29 = icmp eq %struct.rbnode* %28, null, !dbg !4085
  br i1 %29, label %41, label %30, !dbg !4086

30:                                               ; preds = %24, %30
  %31 = phi %struct.rbnode* [ %35, %30 ], [ %28, %24 ]
  %32 = phi i32 [ %34, %30 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %31, metadata !4056, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i32 %32, metadata !4050, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4060
  %33 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %32, !dbg !4087
  store %struct.rbnode* %31, %struct.rbnode** %33, align 4, !dbg !4089
  %34 = add nsw i32 %32, 1, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %34, metadata !4050, metadata !DIExpression()), !dbg !4060
  %35 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %31, i8 noundef zeroext 1) #24, !dbg !4084
  %36 = icmp eq %struct.rbnode* %35, null, !dbg !4085
  br i1 %36, label %37, label %30, !dbg !4086, !llvm.loop !4090

37:                                               ; preds = %30
  %38 = add nsw i32 %32, -1, !dbg !4092
  %39 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %38
  %40 = load %struct.rbnode*, %struct.rbnode** %39, align 4, !dbg !4093
  br label %41, !dbg !4092

41:                                               ; preds = %37, %24
  %42 = phi %struct.rbnode* [ %40, %37 ], [ %1, %24 ], !dbg !4093
  %43 = phi %struct.rbnode* [ %31, %37 ], [ %13, %24 ], !dbg !4077
  %44 = phi i32 [ %32, %37 ], [ %7, %24 ]
  %45 = phi i32 [ %34, %37 ], [ %27, %24 ], !dbg !4077
  call void @llvm.dbg.value(metadata %struct.rbnode* %42, metadata !4055, metadata !DIExpression()), !dbg !4077
  %46 = icmp eq %struct.rbnode* %25, null, !dbg !4094
  br i1 %46, label %50, label %47, !dbg !4096

47:                                               ; preds = %41
  %48 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef nonnull %25, %struct.rbnode* noundef %1) #24, !dbg !4097, !range !4008
  %49 = bitcast %struct.rbnode* %43 to i8*, !dbg !4099
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %25, i8 noundef zeroext %48, i8* noundef nonnull %49) #24, !dbg !4100
  br label %52, !dbg !4101

50:                                               ; preds = %41
  %51 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4102
  store %struct.rbnode* %43, %struct.rbnode** %51, align 4, !dbg !4104
  br label %52

52:                                               ; preds = %50, %47
  %53 = icmp eq %struct.rbnode* %42, %1, !dbg !4105
  br i1 %53, label %58, label %54, !dbg !4107

54:                                               ; preds = %52
  %55 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %42, %struct.rbnode* noundef nonnull %43) #24, !dbg !4108, !range !4008
  %56 = bitcast %struct.rbnode* %1 to i8*, !dbg !4110
  tail call fastcc void @set_child(%struct.rbnode* noundef %42, i8 noundef zeroext %55, i8* noundef %56) #24, !dbg !4111
  %57 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4112
  call void @llvm.dbg.value(metadata %struct.rbnode* %57, metadata !4044, metadata !DIExpression()), !dbg !4060
  br label %58

58:                                               ; preds = %52, %54
  %59 = phi %struct.rbnode* [ %57, %54 ], [ %1, %52 ]
  %60 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 0) #24, !dbg !4113
  %61 = bitcast %struct.rbnode* %60 to i8*, !dbg !4113
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0, i8* noundef %61) #24, !dbg !4113
  %62 = bitcast %struct.rbnode* %59 to i8*, !dbg !4113
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 0, i8* noundef %62) #24, !dbg !4113
  %63 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4114
  %64 = bitcast %struct.rbnode* %63 to i8*, !dbg !4114
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 1, i8* noundef %64) #24, !dbg !4115
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1, i8* noundef null) #24, !dbg !4116
  %65 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !4117
  call void @llvm.dbg.value(metadata %struct.rbnode* %65, metadata !4044, metadata !DIExpression()), !dbg !4060
  %66 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %44, !dbg !4118
  store %struct.rbnode* %43, %struct.rbnode** %9, align 4, !dbg !4119
  store %struct.rbnode* %65, %struct.rbnode** %66, align 4, !dbg !4120
  %67 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %1) #24, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %67, metadata !4057, metadata !DIExpression()), !dbg !4077
  %68 = tail call fastcc i32 @get_color(%struct.rbnode* noundef nonnull %43) #24, !dbg !4122, !range !4123
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef %68) #24, !dbg !4124
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %43, i32 noundef %67) #24, !dbg !4125
  br label %69, !dbg !4126

69:                                               ; preds = %58, %15, %12
  %70 = phi i32 [ %45, %58 ], [ %7, %15 ], [ %7, %12 ], !dbg !4060
  call void @llvm.dbg.value(metadata i32 %70, metadata !4050, metadata !DIExpression()), !dbg !4060
  %71 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4127
  call void @llvm.dbg.value(metadata %struct.rbnode* %71, metadata !4058, metadata !DIExpression()), !dbg !4060
  %72 = icmp eq %struct.rbnode* %71, null, !dbg !4128
  br i1 %72, label %73, label %75, !dbg !4130

73:                                               ; preds = %69
  %74 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4131
  call void @llvm.dbg.value(metadata %struct.rbnode* %74, metadata !4058, metadata !DIExpression()), !dbg !4060
  br label %75, !dbg !4133

75:                                               ; preds = %73, %69
  %76 = phi %struct.rbnode* [ %74, %73 ], [ %71, %69 ], !dbg !4060
  call void @llvm.dbg.value(metadata %struct.rbnode* %76, metadata !4058, metadata !DIExpression()), !dbg !4060
  %77 = icmp slt i32 %70, 2, !dbg !4134
  br i1 %77, label %78, label %83, !dbg !4136

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4137
  store %struct.rbnode* %76, %struct.rbnode** %79, align 4, !dbg !4139
  %80 = icmp eq %struct.rbnode* %76, null, !dbg !4140
  br i1 %80, label %82, label %81, !dbg !4142

81:                                               ; preds = %78
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %76, i32 noundef 1) #24, !dbg !4143
  br label %108, !dbg !4145

82:                                               ; preds = %78
  store i32 0, i32* %3, align 4, !dbg !4146
  br label %108

83:                                               ; preds = %75
  %84 = add nsw i32 %70, -2, !dbg !4148
  %85 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %84, !dbg !4149
  %86 = load %struct.rbnode*, %struct.rbnode** %85, align 4, !dbg !4149
  call void @llvm.dbg.value(metadata %struct.rbnode* %86, metadata !4059, metadata !DIExpression()), !dbg !4060
  %87 = icmp eq %struct.rbnode* %76, null, !dbg !4150
  br i1 %87, label %88, label %93, !dbg !4152

88:                                               ; preds = %83
  %89 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %1) #24, !dbg !4153
  br i1 %89, label %90, label %91, !dbg !4156

90:                                               ; preds = %88
  call fastcc void @fix_missing_black(%struct.rbnode** noundef nonnull %6, i32 noundef %70, %struct.rbnode* noundef %1) #24, !dbg !4157
  br label %105, !dbg !4159

91:                                               ; preds = %88
  %92 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %86, %struct.rbnode* noundef %1) #24, !dbg !4160, !range !4008
  tail call fastcc void @set_child(%struct.rbnode* noundef %86, i8 noundef zeroext %92, i8* noundef null) #24, !dbg !4162
  br label %105

93:                                               ; preds = %83
  %94 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %86, %struct.rbnode* noundef %1) #24, !dbg !4163, !range !4008
  %95 = bitcast %struct.rbnode* %76 to i8*, !dbg !4165
  tail call fastcc void @set_child(%struct.rbnode* noundef %86, i8 noundef zeroext %94, i8* noundef nonnull %95) #24, !dbg !4166
  %96 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %1) #24, !dbg !4167
  br i1 %96, label %100, label %97, !dbg !4167

97:                                               ; preds = %93
  %98 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %76) #24, !dbg !4167
  br i1 %98, label %100, label %99, !dbg !4170

99:                                               ; preds = %97
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.18, i32 0, i32 0), i32 noundef 486) #26, !dbg !4171
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.19, i32 0, i32 0)) #26, !dbg !4171
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.18, i32 0, i32 0), i32 noundef 486) #26, !dbg !4171
  unreachable, !dbg !4171

100:                                              ; preds = %97, %93
  %101 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef %1) #24, !dbg !4173
  br i1 %101, label %104, label %102, !dbg !4175

102:                                              ; preds = %100
  %103 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %76) #24, !dbg !4176
  br i1 %103, label %104, label %105, !dbg !4177

104:                                              ; preds = %102, %100
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %76, i32 noundef 1) #24, !dbg !4178
  br label %105, !dbg !4180

105:                                              ; preds = %102, %104, %90, %91
  %106 = load %struct.rbnode*, %struct.rbnode** %6, align 4, !dbg !4181
  %107 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4182
  store %struct.rbnode* %106, %struct.rbnode** %107, align 4, !dbg !4183
  br label %108, !dbg !4184

108:                                              ; preds = %105, %82, %81, %2
  ret void, !dbg !4184
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @fix_missing_black(%struct.rbnode** nocapture noundef %0, i32 noundef %1, %struct.rbnode* noundef readnone %2) unnamed_addr #12 !dbg !4185 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !4189, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata i32 %1, metadata !4190, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata %struct.rbnode* %2, metadata !4191, metadata !DIExpression()), !dbg !4201
  %4 = icmp sgt i32 %1, 1, !dbg !4202
  br i1 %4, label %5, label %68, !dbg !4203

5:                                                ; preds = %3, %65
  %6 = phi i32 [ %66, %65 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4190, metadata !DIExpression()), !dbg !4201
  %7 = add nsw i32 %6, -1, !dbg !4204
  %8 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %7, !dbg !4205
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !4205
  call void @llvm.dbg.value(metadata %struct.rbnode* %9, metadata !4197, metadata !DIExpression()), !dbg !4206
  %10 = add nsw i32 %6, -2, !dbg !4207
  %11 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %10, !dbg !4208
  %12 = load %struct.rbnode*, %struct.rbnode** %11, align 4, !dbg !4208
  call void @llvm.dbg.value(metadata %struct.rbnode* %12, metadata !4198, metadata !DIExpression()), !dbg !4206
  %13 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %12, %struct.rbnode* noundef %9) #24, !dbg !4209
  call void @llvm.dbg.value(metadata i8 %13, metadata !4199, metadata !DIExpression()), !dbg !4206
  %14 = icmp eq i8 %13, 0, !dbg !4210
  %15 = zext i1 %14 to i8, !dbg !4211
  %16 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %12, i8 noundef zeroext %15) #24, !dbg !4212
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !4200, metadata !DIExpression()), !dbg !4206
  %17 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %16) #24, !dbg !4213
  br i1 %17, label %23, label %18, !dbg !4215

18:                                               ; preds = %5
  store %struct.rbnode* %16, %struct.rbnode** %8, align 4, !dbg !4216
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %6) #24, !dbg !4218
  tail call fastcc void @set_color(%struct.rbnode* noundef %12, i32 noundef 0) #24, !dbg !4219
  tail call fastcc void @set_color(%struct.rbnode* noundef %16, i32 noundef 1) #24, !dbg !4220
  %19 = add nuw nsw i32 %6, 1, !dbg !4221
  call void @llvm.dbg.value(metadata i32 %19, metadata !4190, metadata !DIExpression()), !dbg !4201
  %20 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !4222
  store %struct.rbnode* %9, %struct.rbnode** %20, align 4, !dbg !4223
  %21 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !4224
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !4198, metadata !DIExpression()), !dbg !4206
  %22 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %21, i8 noundef zeroext %15) #24, !dbg !4225
  call void @llvm.dbg.value(metadata %struct.rbnode* %22, metadata !4200, metadata !DIExpression()), !dbg !4206
  br label %23, !dbg !4226

23:                                               ; preds = %18, %5
  %24 = phi %struct.rbnode* [ %12, %5 ], [ %21, %18 ], !dbg !4206
  %25 = phi i32 [ %6, %5 ], [ %19, %18 ]
  %26 = phi %struct.rbnode* [ %16, %5 ], [ %22, %18 ], !dbg !4206
  call void @llvm.dbg.value(metadata %struct.rbnode* %26, metadata !4200, metadata !DIExpression()), !dbg !4206
  call void @llvm.dbg.value(metadata i32 %25, metadata !4190, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !4198, metadata !DIExpression()), !dbg !4206
  %27 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext 0) #24, !dbg !4227
  call void @llvm.dbg.value(metadata %struct.rbnode* %27, metadata !4192, metadata !DIExpression()), !dbg !4206
  %28 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext 1) #24, !dbg !4228
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !4194, metadata !DIExpression()), !dbg !4206
  %29 = icmp eq %struct.rbnode* %27, null, !dbg !4229
  br i1 %29, label %32, label %30, !dbg !4231

30:                                               ; preds = %23
  %31 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %27) #24, !dbg !4232
  br i1 %31, label %32, label %42, !dbg !4233

32:                                               ; preds = %30, %23
  %33 = icmp eq %struct.rbnode* %28, null, !dbg !4234
  br i1 %33, label %36, label %34, !dbg !4235

34:                                               ; preds = %32
  %35 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %28) #24, !dbg !4236
  br i1 %35, label %36, label %42, !dbg !4237

36:                                               ; preds = %34, %32
  %37 = icmp eq %struct.rbnode* %9, %2, !dbg !4238
  br i1 %37, label %38, label %39, !dbg !4241

38:                                               ; preds = %36
  tail call fastcc void @set_child(%struct.rbnode* noundef %24, i8 noundef zeroext %13, i8* noundef null) #24, !dbg !4242
  br label %39, !dbg !4244

39:                                               ; preds = %38, %36
  tail call fastcc void @set_color(%struct.rbnode* noundef %26, i32 noundef 0) #24, !dbg !4245
  %40 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %24) #24, !dbg !4246
  br i1 %40, label %65, label %41, !dbg !4248

41:                                               ; preds = %39
  tail call fastcc void @set_color(%struct.rbnode* noundef %24, i32 noundef 1) #24, !dbg !4249
  br label %68, !dbg !4251

42:                                               ; preds = %34, %30
  %43 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext %15) #24, !dbg !4252
  call void @llvm.dbg.value(metadata %struct.rbnode* %43, metadata !4196, metadata !DIExpression()), !dbg !4206
  %44 = icmp eq %struct.rbnode* %43, null, !dbg !4253
  br i1 %44, label %49, label %45, !dbg !4255

45:                                               ; preds = %42
  %46 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %43) #24, !dbg !4256
  br i1 %46, label %47, label %49, !dbg !4257

47:                                               ; preds = %45
  %48 = add nsw i32 %25, -1, !dbg !4258
  br label %57, !dbg !4257

49:                                               ; preds = %45, %42
  %50 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext %13) #24, !dbg !4259
  call void @llvm.dbg.value(metadata %struct.rbnode* %50, metadata !4195, metadata !DIExpression()), !dbg !4206
  %51 = add nsw i32 %25, -1, !dbg !4261
  %52 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %51, !dbg !4262
  store %struct.rbnode* %26, %struct.rbnode** %52, align 4, !dbg !4263
  %53 = add nuw nsw i32 %25, 1, !dbg !4264
  call void @llvm.dbg.value(metadata i32 %53, metadata !4190, metadata !DIExpression()), !dbg !4201
  %54 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %25, !dbg !4265
  store %struct.rbnode* %50, %struct.rbnode** %54, align 4, !dbg !4266
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %53) #24, !dbg !4267
  tail call fastcc void @set_color(%struct.rbnode* noundef %26, i32 noundef 0) #24, !dbg !4268
  tail call fastcc void @set_color(%struct.rbnode* noundef %50, i32 noundef 1) #24, !dbg !4269
  %55 = load %struct.rbnode*, %struct.rbnode** %52, align 4, !dbg !4270
  call void @llvm.dbg.value(metadata %struct.rbnode* %55, metadata !4200, metadata !DIExpression()), !dbg !4206
  %56 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %55, i8 noundef zeroext %15) #24, !dbg !4271
  call void @llvm.dbg.value(metadata %struct.rbnode* %56, metadata !4196, metadata !DIExpression()), !dbg !4206
  store %struct.rbnode* %9, %struct.rbnode** %52, align 4, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %25, metadata !4190, metadata !DIExpression()), !dbg !4201
  br label %57, !dbg !4273

57:                                               ; preds = %47, %49
  %58 = phi i32 [ %48, %47 ], [ %51, %49 ], !dbg !4258
  %59 = phi %struct.rbnode* [ %43, %47 ], [ %56, %49 ], !dbg !4206
  %60 = phi %struct.rbnode* [ %26, %47 ], [ %55, %49 ], !dbg !4206
  call void @llvm.dbg.value(metadata %struct.rbnode* %60, metadata !4200, metadata !DIExpression()), !dbg !4206
  call void @llvm.dbg.value(metadata i32 %25, metadata !4190, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata %struct.rbnode* %59, metadata !4196, metadata !DIExpression()), !dbg !4206
  %61 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %24) #24, !dbg !4274, !range !4123
  tail call fastcc void @set_color(%struct.rbnode* noundef %60, i32 noundef %61) #24, !dbg !4275
  tail call fastcc void @set_color(%struct.rbnode* noundef %24, i32 noundef 1) #24, !dbg !4276
  tail call fastcc void @set_color(%struct.rbnode* noundef %59, i32 noundef 1) #24, !dbg !4277
  %62 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %58, !dbg !4278
  store %struct.rbnode* %60, %struct.rbnode** %62, align 4, !dbg !4279
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %25) #24, !dbg !4280
  %63 = icmp eq %struct.rbnode* %9, %2, !dbg !4281
  br i1 %63, label %64, label %68, !dbg !4283

64:                                               ; preds = %57
  tail call fastcc void @set_child(%struct.rbnode* noundef %24, i8 noundef zeroext %13, i8* noundef null) #24, !dbg !4284
  br label %68, !dbg !4286

65:                                               ; preds = %39
  %66 = add nsw i32 %25, -1, !dbg !4287
  call void @llvm.dbg.value(metadata i32 %66, metadata !4190, metadata !DIExpression()), !dbg !4201
  %67 = icmp sgt i32 %25, 2, !dbg !4202
  br i1 %67, label %5, label %68, !dbg !4203

68:                                               ; preds = %65, %3, %57, %64, %41
  ret void, !dbg !4289
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_rb_walk(%struct.rbnode* noundef %0, void (%struct.rbnode*, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !4290 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4298, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata void (%struct.rbnode*, i8*)* %1, metadata !4299, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i8* %2, metadata !4300, metadata !DIExpression()), !dbg !4301
  %4 = icmp eq %struct.rbnode* %0, null, !dbg !4302
  br i1 %4, label %10, label %5, !dbg !4304

5:                                                ; preds = %3, %5
  %6 = phi %struct.rbnode* [ %8, %5 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %6, metadata !4298, metadata !DIExpression()), !dbg !4301
  %7 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext 0) #24, !dbg !4305
  tail call void @z_rb_walk(%struct.rbnode* noundef %7, void (%struct.rbnode*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !4307
  tail call void %1(%struct.rbnode* noundef nonnull %6, i8* noundef %2) #26, !dbg !4308
  %8 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext 1) #24, !dbg !4309
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !4298, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata void (%struct.rbnode*, i8*)* %1, metadata !4299, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i8* %2, metadata !4300, metadata !DIExpression()), !dbg !4301
  %9 = icmp eq %struct.rbnode* %8, null, !dbg !4302
  br i1 %9, label %10, label %5, !dbg !4304

10:                                               ; preds = %5, %3
  ret void, !dbg !4310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.rbnode* @z_rb_child(%struct.rbnode* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #8 !dbg !4311 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4313, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i8 %1, metadata !4314, metadata !DIExpression()), !dbg !4315
  %3 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext %1) #24, !dbg !4316
  ret %struct.rbnode* %3, !dbg !4317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_rb_is_black(%struct.rbnode* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4318 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4322, metadata !DIExpression()), !dbg !4323
  %2 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %0) #24, !dbg !4324
  %3 = zext i1 %2 to i32, !dbg !4324
  ret i32 %3, !dbg !4325
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @rb_contains(%struct.rbtree* nocapture noundef readonly %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !4326 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4330, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !4331, metadata !DIExpression()), !dbg !4333
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4334
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !4334
  call void @llvm.dbg.value(metadata %struct.rbnode* %4, metadata !4332, metadata !DIExpression()), !dbg !4333
  %5 = icmp ne %struct.rbnode* %4, null, !dbg !4335
  %6 = icmp ne %struct.rbnode* %4, %1, !dbg !4336
  %7 = and i1 %5, %6, !dbg !4336
  br i1 %7, label %8, label %19, !dbg !4337

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1
  br label %10, !dbg !4337

10:                                               ; preds = %8, %10
  %11 = phi %struct.rbnode* [ %4, %8 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %11, metadata !4332, metadata !DIExpression()), !dbg !4333
  %12 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %9, align 4, !dbg !4338
  %13 = tail call zeroext i1 %12(%struct.rbnode* noundef nonnull %11, %struct.rbnode* noundef %1) #26, !dbg !4340
  %14 = zext i1 %13 to i8, !dbg !4340
  %15 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %11, i8 noundef zeroext %14) #24, !dbg !4341
  call void @llvm.dbg.value(metadata %struct.rbnode* %15, metadata !4332, metadata !DIExpression()), !dbg !4333
  %16 = icmp ne %struct.rbnode* %15, null, !dbg !4335
  %17 = icmp ne %struct.rbnode* %15, %1, !dbg !4336
  %18 = and i1 %16, %17, !dbg !4336
  br i1 %18, label %10, label %19, !dbg !4337, !llvm.loop !4342

19:                                               ; preds = %10, %2
  %20 = phi %struct.rbnode* [ %4, %2 ], [ %15, %10 ], !dbg !4333
  %21 = icmp eq %struct.rbnode* %20, %1, !dbg !4344
  ret i1 %21, !dbg !4345
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* nocapture noundef readonly %0, %struct._rb_foreach* nocapture noundef %1) local_unnamed_addr #12 !dbg !4346 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4356, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.value(metadata %struct._rb_foreach* %1, metadata !4357, metadata !DIExpression()), !dbg !4359
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4360
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !4360
  %5 = icmp eq %struct.rbnode* %4, null, !dbg !4362
  br i1 %5, label %48, label %6, !dbg !4363

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 2, !dbg !4364
  %8 = load i32, i32* %7, align 4, !dbg !4364
  %9 = icmp eq i32 %8, -1, !dbg !4366
  br i1 %9, label %10, label %12, !dbg !4367

10:                                               ; preds = %6
  %11 = tail call fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef nonnull %4, %struct._rb_foreach* noundef nonnull %1) #24, !dbg !4368
  br label %48, !dbg !4370

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 0, !dbg !4371
  %14 = load %struct.rbnode**, %struct.rbnode*** %13, align 4, !dbg !4371
  %15 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %8, !dbg !4372
  %16 = load %struct.rbnode*, %struct.rbnode** %15, align 4, !dbg !4372
  %17 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext 1) #24, !dbg !4373
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !4358, metadata !DIExpression()), !dbg !4359
  %18 = icmp eq %struct.rbnode* %17, null, !dbg !4374
  br i1 %18, label %21, label %19, !dbg !4376

19:                                               ; preds = %12
  %20 = tail call fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef nonnull %17, %struct._rb_foreach* noundef nonnull %1) #24, !dbg !4377
  br label %48, !dbg !4379

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 1, !dbg !4380
  %23 = load i8*, i8** %22, align 4, !dbg !4380
  %24 = getelementptr inbounds i8, i8* %23, i32 %8, !dbg !4382
  %25 = load i8, i8* %24, align 1, !dbg !4382
  %26 = icmp eq i8 %25, 0, !dbg !4383
  br i1 %26, label %31, label %27, !dbg !4384

27:                                               ; preds = %21
  %28 = add nsw i32 %8, -1, !dbg !4385
  store i32 %28, i32* %7, align 4, !dbg !4385
  %29 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %28, !dbg !4387
  %30 = load %struct.rbnode*, %struct.rbnode** %29, align 4, !dbg !4387
  br label %48, !dbg !4388

31:                                               ; preds = %21
  %32 = icmp sgt i32 %8, 0, !dbg !4389
  br i1 %32, label %33, label %41, !dbg !4390

33:                                               ; preds = %31, %37
  %34 = phi i32 [ %35, %37 ], [ %8, %31 ]
  %35 = add nsw i32 %34, -1, !dbg !4391
  store i32 %35, i32* %7, align 4, !dbg !4391
  %36 = icmp sgt i32 %34, 1, !dbg !4389
  br i1 %36, label %37, label %41, !dbg !4390, !llvm.loop !4393

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %23, i32 %35
  %39 = load i8, i8* %38, align 1, !dbg !4396
  %40 = icmp eq i8 %39, 0, !dbg !4397
  br i1 %40, label %33, label %44, !dbg !4394

41:                                               ; preds = %33, %31
  %42 = phi i32 [ %8, %31 ], [ 0, %33 ], !dbg !4398
  %43 = add nsw i32 %42, -1, !dbg !4399
  store i32 %43, i32* %7, align 4, !dbg !4399
  br label %48, !dbg !4400

44:                                               ; preds = %37
  %45 = add nsw i32 %34, -2, !dbg !4399
  store i32 %45, i32* %7, align 4, !dbg !4399
  %46 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %45, !dbg !4401
  %47 = load %struct.rbnode*, %struct.rbnode** %46, align 4, !dbg !4401
  br label %48, !dbg !4400

48:                                               ; preds = %41, %44, %2, %27, %19, %10
  %49 = phi %struct.rbnode* [ %11, %10 ], [ %20, %19 ], [ %30, %27 ], [ null, %2 ], [ %47, %44 ], [ null, %41 ], !dbg !4359
  ret %struct.rbnode* %49, !dbg !4402
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef %0, %struct._rb_foreach* nocapture noundef %1) unnamed_addr #12 !dbg !4403 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4407, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.value(metadata %struct._rb_foreach* %1, metadata !4408, metadata !DIExpression()), !dbg !4409
  %3 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 2, !dbg !4410
  %4 = load i32, i32* %3, align 4, !dbg !4411
  %5 = add nsw i32 %4, 1, !dbg !4411
  store i32 %5, i32* %3, align 4, !dbg !4411
  %6 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 0, !dbg !4412
  %7 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4412
  %8 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %7, i32 %5, !dbg !4413
  store %struct.rbnode* %0, %struct.rbnode** %8, align 4, !dbg !4414
  %9 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 1, !dbg !4415
  %10 = load i8*, i8** %9, align 4, !dbg !4415
  %11 = load i32, i32* %3, align 4, !dbg !4416
  %12 = getelementptr inbounds i8, i8* %10, i32 %11, !dbg !4417
  store i8 0, i8* %12, align 1, !dbg !4418
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4407, metadata !DIExpression()), !dbg !4409
  %13 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext 0) #24, !dbg !4419
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4407, metadata !DIExpression()), !dbg !4409
  %14 = icmp eq %struct.rbnode* %13, null, !dbg !4420
  br i1 %14, label %26, label %15, !dbg !4421

15:                                               ; preds = %2, %15
  %16 = phi %struct.rbnode* [ %24, %15 ], [ %13, %2 ]
  %17 = load i32, i32* %3, align 4, !dbg !4422
  %18 = add nsw i32 %17, 1, !dbg !4422
  store i32 %18, i32* %3, align 4, !dbg !4422
  %19 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4424
  %20 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %19, i32 %18, !dbg !4425
  store %struct.rbnode* %16, %struct.rbnode** %20, align 4, !dbg !4426
  %21 = load i8*, i8** %9, align 4, !dbg !4427
  %22 = load i32, i32* %3, align 4, !dbg !4428
  %23 = getelementptr inbounds i8, i8* %21, i32 %22, !dbg !4429
  store i8 1, i8* %23, align 1, !dbg !4430
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !4407, metadata !DIExpression()), !dbg !4409
  %24 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %16, i8 noundef zeroext 0) #24, !dbg !4419
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !4407, metadata !DIExpression()), !dbg !4409
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !4420
  br i1 %25, label %26, label %15, !dbg !4421, !llvm.loop !4431

26:                                               ; preds = %15, %2
  %27 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4433
  %28 = load i32, i32* %3, align 4, !dbg !4434
  %29 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %27, i32 %28, !dbg !4435
  %30 = load %struct.rbnode*, %struct.rbnode** %29, align 4, !dbg !4435
  ret %struct.rbnode* %30, !dbg !4436
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !4437 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4442, metadata !DIExpression()), !dbg !4446
  call void @llvm.dbg.value(metadata i8* %1, metadata !4443, metadata !DIExpression()), !dbg !4446
  call void @llvm.dbg.value(metadata i8* %2, metadata !4444, metadata !DIExpression()), !dbg !4446
  call void @llvm.dbg.value(metadata i8* %3, metadata !4445, metadata !DIExpression()), !dbg !4446
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !4447
  %5 = tail call fastcc %struct.k_thread* @k_current_get.20() #25, !dbg !4448
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4449
  unreachable, !dbg !4450
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.20() unnamed_addr #5 !dbg !4451 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.21() #25, !dbg !4566
  ret %struct.k_thread* %1, !dbg !4567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4568 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4572, metadata !DIExpression()), !dbg !4573
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4574, !srcloc !4576
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !4577
  ret void, !dbg !4578
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.21() unnamed_addr #5 !dbg !4579 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4580, !srcloc !4582
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !4583
  ret %struct.k_thread* %1, !dbg !4584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4585 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4598, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4595, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i8* %1, metadata !4596, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i8* %2, metadata !4597, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 %4, metadata !4599, metadata !DIExpression()), !dbg !4726
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4727
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4727
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4600, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i32 0, metadata !4604, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i1 undef, metadata !4606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4726
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4729

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4729

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4730
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4598, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i8* %30, metadata !4597, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 %29, metadata !4604, metadata !DIExpression()), !dbg !4726
  %31 = load i8, i8* %30, align 1, !dbg !4731
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4729

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4731
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4732
  call void @llvm.dbg.value(metadata i8* %34, metadata !4597, metadata !DIExpression()), !dbg !4726
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !4732
  call void @llvm.dbg.value(metadata i32 %35, metadata !4608, metadata !DIExpression()), !dbg !4733
  %36 = icmp slt i32 %35, 0, !dbg !4734
  %37 = add i32 %29, 1, !dbg !4732
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4726
  br i1 %36, label %365, label %28, !llvm.loop !4736

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4738
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4613, metadata !DIExpression()), !dbg !4739
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4739
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4658, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4661, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8* %30, metadata !4664, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i32 -1, metadata !4665, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i32 -1, metadata !4666, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8* null, metadata !4667, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8* %14, metadata !4668, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8 0, metadata !4669, metadata !DIExpression()), !dbg !4740
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4741
  call void @llvm.dbg.value(metadata i8* %39, metadata !4597, metadata !DIExpression()), !dbg !4726
  %40 = load i24, i24* %15, align 8, !dbg !4742
  %41 = and i24 %40, 256, !dbg !4742
  %42 = icmp eq i24 %41, 0, !dbg !4742
  br i1 %42, label %51, label %43, !dbg !4744

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4745
  call void @llvm.dbg.value(metadata i8* %44, metadata !4598, metadata !DIExpression()), !dbg !4726
  %45 = bitcast i8* %27 to i32*, !dbg !4745
  %46 = load i32, i32* %45, align 4, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %46, metadata !4665, metadata !DIExpression()), !dbg !4740
  %47 = icmp slt i32 %46, 0, !dbg !4747
  br i1 %47, label %48, label %56, !dbg !4749

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4750
  store i24 %49, i24* %15, align 8, !dbg !4750
  %50 = sub nsw i32 0, %46, !dbg !4752
  call void @llvm.dbg.value(metadata i32 %50, metadata !4665, metadata !DIExpression()), !dbg !4740
  br label %56, !dbg !4753

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4754
  %53 = icmp eq i24 %52, 0, !dbg !4754
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4756
  br label %56, !dbg !4756

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4757
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4740
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4598, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 %58, metadata !4665, metadata !DIExpression()), !dbg !4740
  %60 = and i24 %57, 1024, !dbg !4757
  %61 = icmp eq i24 %60, 0, !dbg !4757
  br i1 %61, label %69, label %62, !dbg !4758

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4759
  call void @llvm.dbg.value(metadata i8* %63, metadata !4598, metadata !DIExpression()), !dbg !4726
  %64 = bitcast i8* %59 to i32*, !dbg !4759
  %65 = load i32, i32* %64, align 4, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %65, metadata !4670, metadata !DIExpression()), !dbg !4760
  %66 = icmp slt i32 %65, 0, !dbg !4761
  br i1 %66, label %67, label %74, !dbg !4763

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4764
  store i24 %68, i24* %15, align 8, !dbg !4764
  br label %74, !dbg !4766

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4767
  %71 = icmp eq i24 %70, 0, !dbg !4767
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4769
  br label %74, !dbg !4769

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4770
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4740
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4740
  call void @llvm.dbg.value(metadata i8* %77, metadata !4598, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 %76, metadata !4666, metadata !DIExpression()), !dbg !4740
  store i32 0, i32* %16, align 4, !dbg !4771
  store i32 0, i32* %17, align 8, !dbg !4772
  %78 = lshr i24 %75, 16, !dbg !4770
  call void @llvm.dbg.value(metadata i24 %78, metadata !4673, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4740
  %79 = lshr i24 %75, 11, !dbg !4773
  %80 = and i24 %79, 15, !dbg !4773
  %81 = zext i24 %80 to i32, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %81, metadata !4674, metadata !DIExpression()), !dbg !4740
  %82 = trunc i24 %78 to i3, !dbg !4774
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4774

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4775

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4778
  call void @llvm.dbg.value(metadata i8* %85, metadata !4598, metadata !DIExpression()), !dbg !4726
  %86 = bitcast i8* %77 to i32*, !dbg !4778
  %87 = load i32, i32* %86, align 4, !dbg !4778
  %88 = sext i32 %87 to i64, !dbg !4778
  store i64 %88, i64* %20, align 8, !dbg !4780
  br label %115, !dbg !4781

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4782
  call void @llvm.dbg.value(metadata i8* %90, metadata !4598, metadata !DIExpression()), !dbg !4726
  %91 = bitcast i8* %77 to i32*, !dbg !4782
  %92 = load i32, i32* %91, align 4, !dbg !4782
  %93 = sext i32 %92 to i64, !dbg !4782
  store i64 %93, i64* %20, align 8, !dbg !4785
  br label %115, !dbg !4786

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4787
  %96 = add i32 %95, 7, !dbg !4787
  %97 = and i32 %96, -8, !dbg !4787
  %98 = inttoptr i32 %97 to i8*, !dbg !4787
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4787
  call void @llvm.dbg.value(metadata i8* %99, metadata !4598, metadata !DIExpression()), !dbg !4726
  %100 = inttoptr i32 %97 to i64*, !dbg !4787
  %101 = load i64, i64* %100, align 8, !dbg !4787
  store i64 %101, i64* %20, align 8, !dbg !4788
  br label %115, !dbg !4789

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4790
  %104 = add i32 %103, 7, !dbg !4790
  %105 = and i32 %104, -8, !dbg !4790
  %106 = inttoptr i32 %105 to i8*, !dbg !4790
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4790
  call void @llvm.dbg.value(metadata i8* %107, metadata !4598, metadata !DIExpression()), !dbg !4726
  %108 = inttoptr i32 %105 to i64*, !dbg !4790
  %109 = load i64, i64* %108, align 8, !dbg !4790
  store i64 %109, i64* %20, align 8, !dbg !4791
  br label %115, !dbg !4792

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4793
  call void @llvm.dbg.value(metadata i8* %111, metadata !4598, metadata !DIExpression()), !dbg !4726
  %112 = bitcast i8* %77 to i32*, !dbg !4793
  %113 = load i32, i32* %112, align 4, !dbg !4793
  %114 = sext i32 %113 to i64, !dbg !4794
  store i64 %114, i64* %20, align 8, !dbg !4795
  br label %115, !dbg !4796

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4797
  call void @llvm.dbg.value(metadata i8* %117, metadata !4598, metadata !DIExpression()), !dbg !4726
  %118 = trunc i24 %79 to i4, !dbg !4798
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4798

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4799
  %121 = ashr exact i64 %120, 56, !dbg !4799
  store i64 %121, i64* %20, align 8, !dbg !4802
  br label %177, !dbg !4803

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4804
  %124 = ashr exact i64 %123, 48, !dbg !4804
  store i64 %124, i64* %20, align 8, !dbg !4807
  br label %177, !dbg !4808

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4809

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4812
  call void @llvm.dbg.value(metadata i8* %127, metadata !4598, metadata !DIExpression()), !dbg !4726
  %128 = bitcast i8* %77 to i32*, !dbg !4812
  %129 = load i32, i32* %128, align 4, !dbg !4812
  %130 = zext i32 %129 to i64, !dbg !4812
  store i64 %130, i64* %20, align 8, !dbg !4814
  br label %157, !dbg !4815

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4816
  call void @llvm.dbg.value(metadata i8* %132, metadata !4598, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i8* %132, metadata !4598, metadata !DIExpression()), !dbg !4726
  %133 = bitcast i8* %77 to i32*, !dbg !4816
  %134 = load i32, i32* %133, align 4, !dbg !4816
  %135 = zext i32 %134 to i64, !dbg !4816
  store i64 %135, i64* %20, align 8, !dbg !4816
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4818
  %138 = add i32 %137, 7, !dbg !4818
  %139 = and i32 %138, -8, !dbg !4818
  %140 = inttoptr i32 %139 to i8*, !dbg !4818
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4818
  call void @llvm.dbg.value(metadata i8* %141, metadata !4598, metadata !DIExpression()), !dbg !4726
  %142 = inttoptr i32 %139 to i64*, !dbg !4818
  %143 = load i64, i64* %142, align 8, !dbg !4818
  store i64 %143, i64* %20, align 8, !dbg !4819
  br label %157, !dbg !4820

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4821
  %146 = add i32 %145, 7, !dbg !4821
  %147 = and i32 %146, -8, !dbg !4821
  %148 = inttoptr i32 %147 to i8*, !dbg !4821
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4821
  call void @llvm.dbg.value(metadata i8* %149, metadata !4598, metadata !DIExpression()), !dbg !4726
  %150 = inttoptr i32 %147 to i64*, !dbg !4821
  %151 = load i64, i64* %150, align 8, !dbg !4821
  store i64 %151, i64* %20, align 8, !dbg !4822
  br label %157, !dbg !4823

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4824
  call void @llvm.dbg.value(metadata i8* %153, metadata !4598, metadata !DIExpression()), !dbg !4726
  %154 = bitcast i8* %77 to i32*, !dbg !4824
  %155 = load i32, i32* %154, align 4, !dbg !4824
  %156 = zext i32 %155 to i64, !dbg !4825
  store i64 %156, i64* %20, align 8, !dbg !4826
  br label %157, !dbg !4827

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4828
  call void @llvm.dbg.value(metadata i8* %159, metadata !4598, metadata !DIExpression()), !dbg !4726
  %160 = trunc i24 %79 to i4, !dbg !4829
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4829

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4830
  store i64 %162, i64* %20, align 8, !dbg !4833
  br label %177, !dbg !4834

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4835
  store i64 %164, i64* %20, align 8, !dbg !4838
  br label %177, !dbg !4839

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4840
  %167 = add i32 %166, 7, !dbg !4840
  %168 = and i32 %167, -8, !dbg !4840
  %169 = inttoptr i32 %168 to i8*, !dbg !4840
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4840
  call void @llvm.dbg.value(metadata i8* %170, metadata !4598, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i8* %170, metadata !4598, metadata !DIExpression()), !dbg !4726
  %171 = inttoptr i32 %168 to double*, !dbg !4840
  %172 = load double, double* %171, align 8, !dbg !4840
  store double %172, double* %19, align 8, !dbg !4840
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %174, metadata !4598, metadata !DIExpression()), !dbg !4726
  %175 = bitcast i8* %77 to i8**, !dbg !4844
  %176 = load i8*, i8** %175, align 4, !dbg !4844
  store i8* %176, i8** %18, align 8, !dbg !4847
  br label %177, !dbg !4848

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4740
  call void @llvm.dbg.value(metadata i8* %178, metadata !4598, metadata !DIExpression()), !dbg !4726
  %179 = and i24 %75, 3, !dbg !4849
  %180 = icmp eq i24 %179, 0, !dbg !4849
  br i1 %180, label %185, label %181, !dbg !4849

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4850
  call void @llvm.dbg.value(metadata i32 %182, metadata !4675, metadata !DIExpression()), !dbg !4851
  %183 = icmp slt i32 %182, 0, !dbg !4852
  %184 = add i32 %182, %29, !dbg !4850
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4726
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4854
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4855

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !4856
  call void @llvm.dbg.value(metadata i32 %188, metadata !4679, metadata !DIExpression()), !dbg !4857
  %189 = icmp slt i32 %188, 0, !dbg !4858
  %190 = add i32 %29, 1, !dbg !4856
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4726
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4860
  call void @llvm.dbg.value(metadata i8* %192, metadata !4667, metadata !DIExpression()), !dbg !4740
  %193 = icmp sgt i32 %76, -1, !dbg !4861
  br i1 %193, label %194, label %196, !dbg !4863

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %195, metadata !4682, metadata !DIExpression()), !dbg !4866
  br label %241, !dbg !4867

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %197, metadata !4682, metadata !DIExpression()), !dbg !4866
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4667, metadata !DIExpression()), !dbg !4740
  %199 = load i64, i64* %20, align 8, !dbg !4870
  %200 = trunc i64 %199 to i8, !dbg !4871
  store i8 %200, i8* %10, align 1, !dbg !4872
  call void @llvm.dbg.value(metadata i8* %23, metadata !4668, metadata !DIExpression()), !dbg !4740
  br label %245, !dbg !4873

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4874
  %203 = icmp eq i24 %202, 0, !dbg !4874
  %204 = trunc i24 %75 to i8, !dbg !4876
  %205 = shl i8 %204, 1, !dbg !4876
  %206 = and i8 %205, 32, !dbg !4876
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4876
  call void @llvm.dbg.value(metadata i8 %207, metadata !4669, metadata !DIExpression()), !dbg !4740
  %208 = load i64, i64* %20, align 8, !dbg !4877
  call void @llvm.dbg.value(metadata i64 %208, metadata !4605, metadata !DIExpression()), !dbg !4726
  %209 = icmp slt i64 %208, 0, !dbg !4878
  br i1 %209, label %210, label %212, !dbg !4880

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4669, metadata !DIExpression()), !dbg !4740
  %211 = sub nsw i64 0, %208, !dbg !4881
  store i64 %211, i64* %20, align 8, !dbg !4883
  br label %212, !dbg !4884

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4740
  call void @llvm.dbg.value(metadata i8 %213, metadata !4669, metadata !DIExpression()), !dbg !4740
  %214 = load i64, i64* %20, align 8, !dbg !4885
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4886
  call void @llvm.dbg.value(metadata i8* %215, metadata !4667, metadata !DIExpression()), !dbg !4740
  br label %216, !dbg !4887

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4888
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4889
  call void @llvm.dbg.value(metadata i8* %218, metadata !4667, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8 %217, metadata !4669, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.label(metadata !4725), !dbg !4890
  %219 = icmp sgt i32 %76, -1, !dbg !4891
  br i1 %219, label %222, label %220, !dbg !4892

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4893
  br label %245, !dbg !4892

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4895
  %224 = sub i32 %22, %223, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %224, metadata !4684, metadata !DIExpression()), !dbg !4896
  %225 = load i24, i24* %15, align 8, !dbg !4897
  %226 = and i24 %225, -65, !dbg !4897
  store i24 %226, i24* %15, align 8, !dbg !4897
  %227 = icmp ugt i32 %76, %224, !dbg !4898
  br i1 %227, label %228, label %245, !dbg !4900

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4901
  store i32 %229, i32* %16, align 4, !dbg !4903
  br label %245, !dbg !4904

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4905
  %232 = icmp eq i8* %231, null, !dbg !4907
  br i1 %232, label %245, label %233, !dbg !4908

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4909
  %235 = zext i32 %234 to i64, !dbg !4909
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4911
  call void @llvm.dbg.value(metadata i8* %236, metadata !4667, metadata !DIExpression()), !dbg !4740
  %237 = load i24, i24* %15, align 8, !dbg !4912
  %238 = or i24 %237, 1048576, !dbg !4912
  store i24 %238, i24* %15, align 8, !dbg !4912
  store i8 120, i8* %21, align 1, !dbg !4913
  br label %216, !dbg !4914

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4915
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4918
  br label %363, !dbg !4919

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4920
  call void @llvm.dbg.value(metadata i32 %242, metadata !4682, metadata !DIExpression()), !dbg !4866
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4921
  call void @llvm.dbg.value(metadata i32 -1, metadata !4666, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i32 %29, metadata !4604, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i8* %192, metadata !4667, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8* %243, metadata !4668, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8 0, metadata !4669, metadata !DIExpression()), !dbg !4740
  %244 = icmp eq i8* %192, null, !dbg !4922
  br i1 %244, label %363, label %245, !dbg !4924, !llvm.loop !4736

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4893
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4740
  call void @llvm.dbg.value(metadata i32 0, metadata !4688, metadata !DIExpression()), !dbg !4740
  %250 = zext i8 %249 to i32, !dbg !4925
  %251 = icmp eq i8 %249, 0, !dbg !4927
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4740
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4740
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4740
  %252 = icmp sgt i32 %58, 0, !dbg !4928
  br i1 %252, label %253, label %302, !dbg !4929

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4893
  %255 = icmp eq i24 %254, 0, !dbg !4893
  %256 = ptrtoint i8* %248 to i32, !dbg !4930
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4740
  %257 = ptrtoint i8* %247 to i32, !dbg !4930
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4740
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4740
  %258 = xor i1 %251, true, !dbg !4931
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4740
  %259 = sext i1 %258 to i32, !dbg !4931
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4740
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4740
  %260 = lshr i24 %246, 19, !dbg !4932
  %261 = and i24 %260, 1, !dbg !4932
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4932
  %263 = zext i24 %262 to i32, !dbg !4932
  %264 = add i32 %257, %259, !dbg !4932
  %265 = add i32 %256, %263, !dbg !4932
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4740
  %266 = and i24 %246, 4194304, !dbg !4933
  %267 = icmp eq i24 %266, 0, !dbg !4933
  %268 = load i32, i32* %16, align 4, !dbg !4935
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4740
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4740
  %269 = load i32, i32* %17, align 8, !dbg !4936
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4936
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4740
  %271 = add i32 %264, %58, !dbg !4936
  %272 = add i32 %265, %268, !dbg !4936
  %273 = add i32 %272, %270, !dbg !4937
  %274 = sub i32 %271, %273, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %274, metadata !4665, metadata !DIExpression()), !dbg !4740
  %275 = and i24 %246, 4, !dbg !4938
  %276 = icmp eq i24 %275, 0, !dbg !4938
  br i1 %276, label %277, label %302, !dbg !4939

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4689, metadata !DIExpression()), !dbg !4940
  %278 = and i24 %246, 64, !dbg !4941
  %279 = icmp eq i24 %278, 0, !dbg !4941
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4942
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4942
  %282 = select i1 %279, i32 32, i32 48, !dbg !4942
  br i1 %280, label %287, label %283, !dbg !4942

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !4943
  call void @llvm.dbg.value(metadata i32 %284, metadata !4694, metadata !DIExpression()), !dbg !4944
  %285 = icmp slt i32 %284, 0, !dbg !4945
  %286 = add i32 %29, 1, !dbg !4943
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4726
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4740
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4730
  call void @llvm.dbg.value(metadata i32 %290, metadata !4604, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i8 undef, metadata !4689, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.value(metadata i8 %288, metadata !4669, metadata !DIExpression()), !dbg !4740
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4947
  %292 = add i32 %291, -1, !dbg !4947
  br label %293, !dbg !4947

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4948
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4730
  call void @llvm.dbg.value(metadata i32 %295, metadata !4604, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 %294, metadata !4665, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i32 %294, metadata !4665, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4740
  %296 = icmp sgt i32 %294, 0, !dbg !4949
  br i1 %296, label %297, label %302, !dbg !4947

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4950
  call void @llvm.dbg.value(metadata i32 %298, metadata !4665, metadata !DIExpression()), !dbg !4740
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %299, metadata !4700, metadata !DIExpression()), !dbg !4952
  %300 = icmp slt i32 %299, 0, !dbg !4953
  %301 = add i32 %295, 1, !dbg !4951
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4726
  br i1 %300, label %361, label %293, !llvm.loop !4955

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4740
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4740
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4730
  call void @llvm.dbg.value(metadata i32 %305, metadata !4604, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 %304, metadata !4665, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8 %303, metadata !4669, metadata !DIExpression()), !dbg !4740
  %306 = icmp eq i8 %303, 0, !dbg !4957
  br i1 %306, label %312, label %307, !dbg !4958

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4959
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !4960
  call void @llvm.dbg.value(metadata i32 %309, metadata !4703, metadata !DIExpression()), !dbg !4961
  %310 = icmp slt i32 %309, 0, !dbg !4962
  %311 = add i32 %305, 1, !dbg !4960
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4726
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4730
  call void @llvm.dbg.value(metadata i32 %313, metadata !4604, metadata !DIExpression()), !dbg !4726
  %314 = lshr i24 %246, 20, !dbg !4964
  %315 = lshr i24 %246, 19, !dbg !4965
  %316 = or i24 %314, %315, !dbg !4966
  %317 = and i24 %316, 1, !dbg !4966
  %318 = icmp eq i24 %317, 0, !dbg !4966
  br i1 %318, label %323, label %319, !dbg !4967

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %320, metadata !4707, metadata !DIExpression()), !dbg !4969
  %321 = icmp slt i32 %320, 0, !dbg !4970
  %322 = add i32 %313, 1, !dbg !4968
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4726
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4730
  call void @llvm.dbg.value(metadata i32 %324, metadata !4604, metadata !DIExpression()), !dbg !4726
  %325 = and i24 %246, 1048576, !dbg !4972
  %326 = icmp eq i24 %325, 0, !dbg !4972
  br i1 %326, label %333, label %327, !dbg !4973

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4974
  %329 = zext i8 %328 to i32, !dbg !4974
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !4974
  call void @llvm.dbg.value(metadata i32 %330, metadata !4713, metadata !DIExpression()), !dbg !4975
  %331 = icmp slt i32 %330, 0, !dbg !4976
  %332 = add i32 %324, 1, !dbg !4974
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4726
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4730
  call void @llvm.dbg.value(metadata i32 %334, metadata !4604, metadata !DIExpression()), !dbg !4726
  %335 = load i32, i32* %16, align 4, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %335, metadata !4688, metadata !DIExpression()), !dbg !4740
  br label %336, !dbg !4979

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4980
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4730
  call void @llvm.dbg.value(metadata i32 %338, metadata !4604, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 %337, metadata !4688, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4740
  %339 = icmp sgt i32 %337, 0, !dbg !4981
  br i1 %339, label %340, label %345, !dbg !4979

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %341, metadata !4688, metadata !DIExpression()), !dbg !4740
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4983
  call void @llvm.dbg.value(metadata i32 %342, metadata !4717, metadata !DIExpression()), !dbg !4984
  %343 = icmp slt i32 %342, 0, !dbg !4985
  %344 = add i32 %338, 1, !dbg !4983
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4726
  br i1 %343, label %361, label %336, !llvm.loop !4987

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4989
  call void @llvm.dbg.value(metadata i32 %346, metadata !4720, metadata !DIExpression()), !dbg !4990
  %347 = icmp slt i32 %346, 0, !dbg !4991
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4726
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4989
  call void @llvm.dbg.value(metadata i32 %349, metadata !4604, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 %304, metadata !4665, metadata !DIExpression()), !dbg !4740
  %350 = icmp sgt i32 %304, 0, !dbg !4993
  br i1 %350, label %351, label %363, !dbg !4994

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4994
  %353 = add i32 %352, %338, !dbg !4994
  br label %354, !dbg !4994

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 %355, metadata !4665, metadata !DIExpression()), !dbg !4740
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !4995
  call void @llvm.dbg.value(metadata i32 %356, metadata !4722, metadata !DIExpression()), !dbg !4996
  %357 = icmp slt i32 %356, 0, !dbg !4997
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4999
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4726
  call void @llvm.dbg.value(metadata i32 %359, metadata !4665, metadata !DIExpression()), !dbg !4740
  %360 = icmp sgt i32 %355, 1, !dbg !4993
  br i1 %360, label %354, label %363, !dbg !4994, !llvm.loop !5000

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4604, metadata !DIExpression()), !dbg !4726
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4737
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4730
  call void @llvm.dbg.value(metadata i32 %364, metadata !4604, metadata !DIExpression()), !dbg !4726
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4737
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4726
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5002
  ret i32 %366, !dbg !5002
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5003 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5007, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i8* %1, metadata !5008, metadata !DIExpression()), !dbg !5009
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5010
  store i24 0, i24* %3, align 4, !dbg !5010
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5010
  store i8 0, i8* %4, align 1, !dbg !5010
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5010
  store i32 0, i32* %5, align 4, !dbg !5010
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5010
  store i32 0, i32* %6, align 4, !dbg !5010
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5011
  call void @llvm.dbg.value(metadata i8* %7, metadata !5008, metadata !DIExpression()), !dbg !5009
  %8 = load i8, i8* %7, align 1, !dbg !5012
  %9 = icmp eq i8 %8, 37, !dbg !5014
  br i1 %9, label %10, label %12, !dbg !5015

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5016
  call void @llvm.dbg.value(metadata i8* %11, metadata !5008, metadata !DIExpression()), !dbg !5009
  store i8 37, i8* %4, align 1, !dbg !5018
  br label %18, !dbg !5019

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5020
  call void @llvm.dbg.value(metadata i8* %13, metadata !5008, metadata !DIExpression()), !dbg !5009
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5021
  call void @llvm.dbg.value(metadata i8* %14, metadata !5008, metadata !DIExpression()), !dbg !5009
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5022
  call void @llvm.dbg.value(metadata i8* %15, metadata !5008, metadata !DIExpression()), !dbg !5009
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5023
  call void @llvm.dbg.value(metadata i8* %16, metadata !5008, metadata !DIExpression()), !dbg !5009
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %17, metadata !5008, metadata !DIExpression()), !dbg !5009
  br label %18, !dbg !5025

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5009
  ret i8* %19, !dbg !5026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5027 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5031, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i8* %1, metadata !5032, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i8* %2, metadata !5033, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i8* %3, metadata !5034, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i32 0, metadata !5035, metadata !DIExpression()), !dbg !5038
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5039

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5040
  call void @llvm.dbg.value(metadata i32 %9, metadata !5035, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i8* %8, metadata !5033, metadata !DIExpression()), !dbg !5038
  %10 = icmp ult i8* %8, %3, !dbg !5041
  br i1 %10, label %11, label %13, !dbg !5042

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5043
  br label %17, !dbg !5042

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5044

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5045
  %16 = icmp eq i8 %15, 0, !dbg !5044
  br i1 %16, label %24, label %17, !dbg !5039

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5043
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5046
  call void @llvm.dbg.value(metadata i8* %19, metadata !5033, metadata !DIExpression()), !dbg !5038
  %20 = zext i8 %18 to i32, !dbg !5047
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !5048
  call void @llvm.dbg.value(metadata i32 %21, metadata !5036, metadata !DIExpression()), !dbg !5049
  %22 = icmp slt i32 %21, 0, !dbg !5050
  %23 = add i32 %9, 1, !dbg !5052
  call void @llvm.dbg.value(metadata i32 undef, metadata !5035, metadata !DIExpression()), !dbg !5038
  br i1 %22, label %24, label %7, !llvm.loop !5053

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5038
  ret i32 %25, !dbg !5055
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #12 !dbg !5056 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5060, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5061, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata i8* %2, metadata !5062, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata i8* %3, metadata !5063, metadata !DIExpression()), !dbg !5070
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5071
  %6 = load i8, i8* %5, align 1, !dbg !5071
  %7 = zext i8 %6 to i32, !dbg !5072
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5073
  %9 = icmp eq i32 %8, 0, !dbg !5073
  call void @llvm.dbg.value(metadata i1 %9, metadata !5064, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5070
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5074
  call void @llvm.dbg.value(metadata i32 %10, metadata !5065, metadata !DIExpression()), !dbg !5070
  %11 = ptrtoint i8* %3 to i32, !dbg !5075
  %12 = ptrtoint i8* %2 to i32, !dbg !5075
  %13 = sub i32 %11, %12, !dbg !5075
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5076
  call void @llvm.dbg.value(metadata i8* %14, metadata !5067, metadata !DIExpression()), !dbg !5070
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5077

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5070
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5060, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata i8* %18, metadata !5067, metadata !DIExpression()), !dbg !5070
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5078
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5079
  call void @llvm.dbg.value(metadata i32 %25, metadata !5068, metadata !DIExpression()), !dbg !5080
  %26 = icmp ult i32 %25, 10, !dbg !5081
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5082
  %28 = add i32 %27, %25, !dbg !5080
  %29 = trunc i32 %28 to i8, !dbg !5082
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5083
  call void @llvm.dbg.value(metadata i8* %30, metadata !5067, metadata !DIExpression()), !dbg !5070
  store i8 %29, i8* %30, align 1, !dbg !5084
  call void @llvm.dbg.value(metadata i64 %22, metadata !5060, metadata !DIExpression()), !dbg !5070
  %31 = icmp uge i64 %19, %15, !dbg !5085
  %32 = icmp ugt i8* %30, %2, !dbg !5086
  %33 = and i1 %31, %32, !dbg !5086
  br i1 %33, label %17, label %34, !dbg !5087, !llvm.loop !5088

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5090
  %36 = load i24, i24* %35, align 4, !dbg !5090
  %37 = and i24 %36, 32, !dbg !5090
  %38 = icmp eq i24 %37, 0, !dbg !5090
  br i1 %38, label %44, label %39, !dbg !5092

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5093

40:                                               ; preds = %39
  br label %41, !dbg !5095

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5099
  store i24 %43, i24* %35, align 4, !dbg !5099
  br label %44, !dbg !5100

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5100
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #10 !dbg !5101 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5107, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i8* %1, metadata !5108, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i32 %2, metadata !5109, metadata !DIExpression()), !dbg !5110
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5111
  %5 = load i24, i24* %4, align 4, !dbg !5111
  %6 = lshr i24 %5, 11, !dbg !5111
  %7 = and i24 %6, 15, !dbg !5111
  %8 = zext i24 %7 to i32, !dbg !5111
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5112

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5113
  store i32 %2, i32* %10, align 4, !dbg !5115
  br label %28, !dbg !5116

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5117
  store i8 %12, i8* %1, align 1, !dbg !5118
  br label %28, !dbg !5119

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5120
  %15 = bitcast i8* %1 to i16*, !dbg !5121
  store i16 %14, i16* %15, align 2, !dbg !5122
  br label %28, !dbg !5123

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5124
  store i32 %2, i32* %17, align 4, !dbg !5125
  br label %28, !dbg !5126

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5127
  %20 = bitcast i8* %1 to i64*, !dbg !5128
  store i64 %19, i64* %20, align 8, !dbg !5129
  br label %28, !dbg !5130

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5131
  %23 = bitcast i8* %1 to i64*, !dbg !5132
  store i64 %22, i64* %23, align 8, !dbg !5133
  br label %28, !dbg !5134

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5135
  store i32 %2, i32* %25, align 4, !dbg !5136
  br label %28, !dbg !5137

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5138
  store i32 %2, i32* %27, align 4, !dbg !5139
  br label %28, !dbg !5140

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5141
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5145, metadata !DIExpression()), !dbg !5146
  %2 = add i32 %0, -65, !dbg !5147
  %3 = icmp ult i32 %2, 26, !dbg !5148
  %4 = zext i1 %3 to i32, !dbg !5148
  ret i32 %4, !dbg !5149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5150 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5154, metadata !DIExpression()), !dbg !5155
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5156

2:                                                ; preds = %1
  br label %4, !dbg !5157

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5159

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5160
  ret i32 %5, !dbg !5161
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #12 !dbg !5162 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5164, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i8* %1, metadata !5165, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i8 1, metadata !5166, metadata !DIExpression()), !dbg !5167
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5168

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5166, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i8* %5, metadata !5165, metadata !DIExpression()), !dbg !5167
  %6 = load i8, i8* %5, align 1, !dbg !5169
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5171

7:                                                ; preds = %4
  br label %11, !dbg !5172

8:                                                ; preds = %4
  br label %11, !dbg !5174

9:                                                ; preds = %4
  br label %11, !dbg !5175

10:                                               ; preds = %4
  br label %11, !dbg !5176

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5177
  %14 = or i24 %13, %12, !dbg !5177
  store i24 %14, i24* %3, align 4, !dbg !5177
  call void @llvm.dbg.value(metadata i8 poison, metadata !5166, metadata !DIExpression()), !dbg !5167
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5165, metadata !DIExpression()), !dbg !5167
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5166, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i8* %15, metadata !5165, metadata !DIExpression()), !dbg !5167
  %17 = load i24, i24* %3, align 4, !dbg !5178
  %18 = and i24 %17, 68, !dbg !5180
  %19 = icmp eq i24 %18, 68, !dbg !5180
  br i1 %19, label %20, label %22, !dbg !5180

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5181
  store i24 %21, i24* %3, align 4, !dbg !5181
  br label %22, !dbg !5183

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5184
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5185 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5187, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.value(metadata i8* %1, metadata !5188, metadata !DIExpression()), !dbg !5191
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5192
  %5 = load i24, i24* %4, align 4, !dbg !5193
  %6 = or i24 %5, 128, !dbg !5193
  store i24 %6, i24* %4, align 4, !dbg !5193
  call void @llvm.dbg.value(metadata i8* %1, metadata !5188, metadata !DIExpression()), !dbg !5191
  %7 = load i8, i8* %1, align 1, !dbg !5194
  %8 = icmp eq i8 %7, 42, !dbg !5196
  br i1 %8, label %9, label %12, !dbg !5197

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5198
  store i24 %10, i24* %4, align 4, !dbg !5198
  call void @llvm.dbg.value(metadata i8* %1, metadata !5188, metadata !DIExpression()), !dbg !5191
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5200
  call void @llvm.dbg.value(metadata i8* %11, metadata !5188, metadata !DIExpression()), !dbg !5191
  store i8* %11, i8** %3, align 4, !dbg !5200
  br label %29, !dbg !5201

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5189, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.value(metadata i8** %3, metadata !5188, metadata !DIExpression(DW_OP_deref)), !dbg !5191
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5202
  call void @llvm.dbg.value(metadata i32 %13, metadata !5190, metadata !DIExpression()), !dbg !5191
  %14 = load i8*, i8** %3, align 4, !dbg !5203
  call void @llvm.dbg.value(metadata i8* %14, metadata !5188, metadata !DIExpression()), !dbg !5191
  %15 = icmp eq i8* %14, %1, !dbg !5205
  br i1 %15, label %29, label %16, !dbg !5206

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5207
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5209
  store i32 %13, i32* %18, align 4, !dbg !5210
  %19 = lshr i32 %13, 31, !dbg !5211
  %20 = lshr i24 %17, 1, !dbg !5212
  %21 = and i24 %20, 1, !dbg !5212
  %22 = zext i24 %21 to i32, !dbg !5212
  %23 = or i32 %19, %22, !dbg !5212
  %24 = trunc i32 %23 to i24, !dbg !5212
  %25 = shl nuw nsw i24 %24, 1, !dbg !5212
  %26 = and i24 %17, -131, !dbg !5212
  %27 = or i24 %26, 128, !dbg !5212
  %28 = or i24 %25, %27, !dbg !5212
  store i24 %28, i24* %4, align 4, !dbg !5212
  br label %29, !dbg !5213

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5191
  ret i8* %30, !dbg !5214
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5215 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5217, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.value(metadata i8* %1, metadata !5218, metadata !DIExpression()), !dbg !5220
  %4 = load i8, i8* %1, align 1, !dbg !5221
  %5 = icmp eq i8 %4, 46, !dbg !5222
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5223
  %7 = load i24, i24* %6, align 4, !dbg !5224
  %8 = select i1 %5, i24 512, i24 0, !dbg !5224
  %9 = and i24 %7, -513, !dbg !5224
  %10 = or i24 %9, %8, !dbg !5224
  store i24 %10, i24* %6, align 4, !dbg !5224
  br i1 %5, label %11, label %32, !dbg !5225

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5218, metadata !DIExpression()), !dbg !5220
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5226
  call void @llvm.dbg.value(metadata i8* %12, metadata !5218, metadata !DIExpression()), !dbg !5220
  store i8* %12, i8** %3, align 4, !dbg !5226
  %13 = load i8, i8* %12, align 1, !dbg !5227
  %14 = icmp eq i8 %13, 42, !dbg !5229
  br i1 %14, label %15, label %18, !dbg !5230

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5231
  store i24 %16, i24* %6, align 4, !dbg !5231
  call void @llvm.dbg.value(metadata i8* %12, metadata !5218, metadata !DIExpression()), !dbg !5220
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5233
  call void @llvm.dbg.value(metadata i8* %17, metadata !5218, metadata !DIExpression()), !dbg !5220
  store i8* %17, i8** %3, align 4, !dbg !5233
  br label %32, !dbg !5234

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5218, metadata !DIExpression(DW_OP_deref)), !dbg !5220
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5235
  call void @llvm.dbg.value(metadata i32 %19, metadata !5219, metadata !DIExpression()), !dbg !5220
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5236
  store i32 %19, i32* %20, align 4, !dbg !5237
  %21 = lshr i32 %19, 31, !dbg !5238
  %22 = load i24, i24* %6, align 4, !dbg !5239
  %23 = lshr i24 %22, 1, !dbg !5239
  %24 = and i24 %23, 1, !dbg !5239
  %25 = zext i24 %24 to i32, !dbg !5239
  %26 = or i32 %21, %25, !dbg !5239
  %27 = trunc i32 %26 to i24, !dbg !5239
  %28 = shl nuw nsw i24 %27, 1, !dbg !5239
  %29 = and i24 %22, -3, !dbg !5239
  %30 = or i24 %28, %29, !dbg !5239
  store i24 %30, i24* %6, align 4, !dbg !5239
  %31 = load i8*, i8** %3, align 4, !dbg !5240
  call void @llvm.dbg.value(metadata i8* %31, metadata !5218, metadata !DIExpression()), !dbg !5220
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5220
  ret i8* %33, !dbg !5241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !5242 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5244, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.value(metadata i8* %1, metadata !5245, metadata !DIExpression()), !dbg !5246
  %3 = load i8, i8* %1, align 1, !dbg !5247
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5248

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5249
  call void @llvm.dbg.value(metadata i8* %5, metadata !5245, metadata !DIExpression()), !dbg !5246
  %6 = load i8, i8* %5, align 1, !dbg !5252
  %7 = icmp eq i8 %6, 104, !dbg !5253
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5254
  %9 = load i24, i24* %8, align 4, !dbg !5254
  %10 = and i24 %9, -30721, !dbg !5254
  br i1 %7, label %11, label %14, !dbg !5255

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5256
  store i24 %12, i24* %8, align 4, !dbg !5256
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5258
  call void @llvm.dbg.value(metadata i8* %13, metadata !5245, metadata !DIExpression()), !dbg !5246
  br label %56, !dbg !5259

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5260
  store i24 %15, i24* %8, align 4, !dbg !5260
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5262
  call void @llvm.dbg.value(metadata i8* %17, metadata !5245, metadata !DIExpression()), !dbg !5246
  %18 = load i8, i8* %17, align 1, !dbg !5264
  %19 = icmp eq i8 %18, 108, !dbg !5265
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5266
  %21 = load i24, i24* %20, align 4, !dbg !5266
  %22 = and i24 %21, -30721, !dbg !5266
  br i1 %19, label %23, label %26, !dbg !5267

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5268
  store i24 %24, i24* %20, align 4, !dbg !5268
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5270
  call void @llvm.dbg.value(metadata i8* %25, metadata !5245, metadata !DIExpression()), !dbg !5246
  br label %56, !dbg !5271

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5272
  store i24 %27, i24* %20, align 4, !dbg !5272
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5274
  %30 = load i24, i24* %29, align 4, !dbg !5275
  %31 = and i24 %30, -30721, !dbg !5275
  %32 = or i24 %31, 10240, !dbg !5275
  store i24 %32, i24* %29, align 4, !dbg !5275
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5276
  call void @llvm.dbg.value(metadata i8* %33, metadata !5245, metadata !DIExpression()), !dbg !5246
  br label %56, !dbg !5277

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5278
  %36 = load i24, i24* %35, align 4, !dbg !5279
  %37 = and i24 %36, -30721, !dbg !5279
  %38 = or i24 %37, 12288, !dbg !5279
  store i24 %38, i24* %35, align 4, !dbg !5279
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5280
  call void @llvm.dbg.value(metadata i8* %39, metadata !5245, metadata !DIExpression()), !dbg !5246
  br label %56, !dbg !5281

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5282
  %42 = load i24, i24* %41, align 4, !dbg !5283
  %43 = and i24 %42, -30721, !dbg !5283
  %44 = or i24 %43, 14336, !dbg !5283
  store i24 %44, i24* %41, align 4, !dbg !5283
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5284
  call void @llvm.dbg.value(metadata i8* %45, metadata !5245, metadata !DIExpression()), !dbg !5246
  br label %56, !dbg !5285

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5286
  %48 = load i24, i24* %47, align 4, !dbg !5287
  %49 = and i24 %48, -30723, !dbg !5287
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5288
  call void @llvm.dbg.value(metadata i8* %50, metadata !5245, metadata !DIExpression()), !dbg !5246
  %51 = or i24 %49, 16386, !dbg !5289
  store i24 %51, i24* %47, align 4, !dbg !5289
  br label %56, !dbg !5290

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5291
  %54 = load i24, i24* %53, align 4, !dbg !5292
  %55 = and i24 %54, -30721, !dbg !5292
  store i24 %55, i24* %53, align 4, !dbg !5292
  br label %56, !dbg !5293

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5245, metadata !DIExpression()), !dbg !5246
  ret i8* %57, !dbg !5294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !5295 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5297, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.value(metadata i8* %1, metadata !5298, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.value(metadata i8 0, metadata !5299, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.value(metadata i8* %1, metadata !5298, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5302
  %3 = load i8, i8* %1, align 1, !dbg !5303
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5304
  store i8 %3, i8* %4, align 1, !dbg !5305
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5306

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5307

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5308
  %9 = load i24, i24* %8, align 4, !dbg !5308
  %10 = and i24 %9, -458753, !dbg !5308
  %11 = or i24 %10, %7, !dbg !5308
  call void @llvm.dbg.label(metadata !5300), !dbg !5309
  %12 = and i24 %9, 30720, !dbg !5310
  %13 = icmp eq i24 %12, 16384, !dbg !5310
  %14 = zext i1 %13 to i24, !dbg !5312
  %15 = or i24 %11, %14, !dbg !5312
  %16 = icmp eq i8 %3, 99, !dbg !5313
  br i1 %16, label %17, label %43, !dbg !5315

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5316
  %19 = icmp ne i24 %18, 0, !dbg !5316
  call void @llvm.dbg.value(metadata i1 %19, metadata !5299, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5302
  br label %43, !dbg !5318

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5319
  %22 = load i24, i24* %21, align 4, !dbg !5320
  %23 = and i24 %22, -458753, !dbg !5320
  %24 = or i24 %23, 262144, !dbg !5320
  call void @llvm.dbg.value(metadata i8 1, metadata !5299, metadata !DIExpression()), !dbg !5302
  br label %43, !dbg !5321

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5324
  %27 = load i24, i24* %26, align 4, !dbg !5325
  %28 = and i24 %27, -458753, !dbg !5325
  %29 = or i24 %28, 196608, !dbg !5325
  %30 = and i24 %27, 30720, !dbg !5326
  %31 = icmp eq i24 %30, 16384, !dbg !5326
  br label %43, !dbg !5328

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5329
  %34 = load i24, i24* %33, align 4, !dbg !5330
  %35 = and i24 %34, -458753, !dbg !5330
  %36 = or i24 %35, 196608, !dbg !5330
  %37 = and i24 %34, 30720, !dbg !5331
  %38 = icmp ne i24 %37, 0, !dbg !5331
  br label %43, !dbg !5333

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5334
  %41 = load i24, i24* %40, align 4, !dbg !5335
  %42 = or i24 %41, 1, !dbg !5335
  br label %43, !dbg !5336

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5337
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5338
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5339
  call void @llvm.dbg.value(metadata i8* %48, metadata !5298, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.value(metadata i8 poison, metadata !5299, metadata !DIExpression()), !dbg !5302
  %49 = lshr i24 %44, 1, !dbg !5337
  %50 = and i24 %49, 1, !dbg !5337
  %51 = zext i24 %50 to i32, !dbg !5337
  %52 = or i32 %51, %47, !dbg !5337
  %53 = trunc i32 %52 to i24, !dbg !5337
  %54 = shl nuw nsw i24 %53, 1, !dbg !5337
  %55 = and i24 %44, -3, !dbg !5337
  %56 = or i24 %54, %55, !dbg !5337
  store i24 %56, i24* %46, align 4, !dbg !5337
  ret i8* %48, !dbg !5340
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #12 !dbg !5341 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5346, metadata !DIExpression()), !dbg !5349
  %2 = load i8*, i8** %0, align 4, !dbg !5350
  call void @llvm.dbg.value(metadata i8* %2, metadata !5347, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 0, metadata !5348, metadata !DIExpression()), !dbg !5349
  %3 = load i8, i8* %2, align 1, !dbg !5351
  %4 = zext i8 %3 to i32, !dbg !5352
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5353
  %6 = icmp eq i32 %5, 0, !dbg !5354
  br i1 %6, label %19, label %7, !dbg !5354

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5348, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i8* %10, metadata !5347, metadata !DIExpression()), !dbg !5349
  %11 = mul i32 %9, 10, !dbg !5355
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5357
  call void @llvm.dbg.value(metadata i8* %12, metadata !5347, metadata !DIExpression()), !dbg !5349
  %13 = add i32 %11, -48, !dbg !5358
  %14 = add i32 %13, %8, !dbg !5359
  call void @llvm.dbg.value(metadata i32 %14, metadata !5348, metadata !DIExpression()), !dbg !5349
  %15 = load i8, i8* %12, align 1, !dbg !5351
  %16 = zext i8 %15 to i32, !dbg !5352
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5353
  %18 = icmp eq i32 %17, 0, !dbg !5354
  br i1 %18, label %19, label %7, !dbg !5354, !llvm.loop !5360

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5349
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5349
  store i8* %20, i8** %0, align 4, !dbg !5362
  ret i32 %21, !dbg !5363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5366, metadata !DIExpression()), !dbg !5367
  %2 = add i32 %0, -48, !dbg !5368
  %3 = icmp ult i32 %2, 10, !dbg !5369
  %4 = zext i1 %3 to i32, !dbg !5369
  ret i32 %4, !dbg !5370
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5371 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5376, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i32 %1, metadata !5377, metadata !DIExpression()), !dbg !5378
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5379, !srcloc !5381
  ret void, !dbg !5382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5383 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5385, metadata !DIExpression()), !dbg !5393
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5394
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5394
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5386, metadata !DIExpression()), !dbg !5395
  call void @llvm.va_start(i8* nonnull %3), !dbg !5396
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5397
  %5 = load i32, i32* %4, align 4, !dbg !5397
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5397
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !5397
  call void @llvm.va_end(i8* nonnull %3), !dbg !5398
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5399
  ret void, !dbg !5399
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5400 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,29\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,40\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_SCALABLE\0A\09.equ\09CONFIG_SCHED_SCALABLE,1\0A\09.type\09CONFIG_SCHED_SCALABLE,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MONITOR\0A\09.equ\09CONFIG_THREAD_MONITOR,1\0A\09.type\09CONFIG_THREAD_MONITOR,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_DEBUG_THREAD_INFO\0A\09.equ\09CONFIG_DEBUG_THREAD_INFO,1\0A\09.type\09CONFIG_DEBUG_THREAD_INFO,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5958, !srcloc !5959
  ret void, !dbg !5960
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5961 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5963, metadata !DIExpression()), !dbg !5965
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5966
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5967
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5968, !srcloc !5977
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5968
  call void @llvm.dbg.value(metadata i32 %3, metadata !5974, metadata !DIExpression()) #23, !dbg !5978
  call void @llvm.dbg.value(metadata i32 undef, metadata !5975, metadata !DIExpression()) #23, !dbg !5978
  call void @llvm.dbg.value(metadata i32 %3, metadata !5964, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.value(metadata i32 %3, metadata !5979, metadata !DIExpression()) #23, !dbg !5984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5986, !srcloc !5987
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5988
  ret i32 0, !dbg !5989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !5990 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5992
  %2 = or i32 %1, 512, !dbg !5992
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5992
  ret void, !dbg !5993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !5994 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5995
  %2 = or i32 %1, 1024, !dbg !5995
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5995
  ret void, !dbg !5996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !5997 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5999, metadata !DIExpression()), !dbg !6000
  ret i32 0, !dbg !6001
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6051, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6052, metadata !DIExpression()), !dbg !6053
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !6054
  ret void, !dbg !6055
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6056 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6073, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6074, metadata !DIExpression()), !dbg !6076
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6077
  %4 = load i32, i32* %3, align 4, !dbg !6077
  call void @llvm.dbg.value(metadata i32 %4, metadata !6075, metadata !DIExpression()), !dbg !6076
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6078
  ret void, !dbg !6079
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6080 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6084, metadata !DIExpression()), !dbg !6087
  call void @llvm.dbg.value(metadata i8* %0, metadata !6085, metadata !DIExpression()), !dbg !6087
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6088
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6088
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6086, metadata !DIExpression()), !dbg !6089
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6089
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6090
  %5 = bitcast i8* %4 to i32*, !dbg !6090
  %6 = load i32, i32* %5, align 4, !dbg !6090
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6091
  store i32 %6, i32* %7, align 4, !dbg !6092
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6093
  unreachable, !dbg !6094
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6098, metadata !DIExpression()), !dbg !6099
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6100
  ret void, !dbg !6101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6106, metadata !DIExpression()), !dbg !6107
  %2 = icmp sgt i32 %0, -1, !dbg !6108
  br i1 %2, label %3, label %8, !dbg !6110

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6111, !srcloc !6113
  %4 = and i32 %0, 31, !dbg !6114
  %5 = shl nuw i32 1, %4, !dbg !6115
  %6 = lshr i32 %0, 5, !dbg !6116
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6117
  store volatile i32 %5, i32* %7, align 4, !dbg !6118
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6119, !srcloc !6120
  br label %8, !dbg !6121

8:                                                ; preds = %3, %1
  ret void, !dbg !6122
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6125, metadata !DIExpression()), !dbg !6126
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6127
  ret void, !dbg !6128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6131, metadata !DIExpression()), !dbg !6132
  %2 = icmp sgt i32 %0, -1, !dbg !6133
  br i1 %2, label %3, label %8, !dbg !6135

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6136
  %5 = shl nuw i32 1, %4, !dbg !6138
  %6 = lshr i32 %0, 5, !dbg !6139
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6140
  store volatile i32 %5, i32* %7, align 4, !dbg !6141
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6142, !srcloc !6146
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6147, !srcloc !6150
  br label %8, !dbg !6151

8:                                                ; preds = %3, %1
  ret void, !dbg !6152
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6157, metadata !DIExpression()), !dbg !6158
  %2 = lshr i32 %0, 5, !dbg !6159
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6160
  %4 = load volatile i32, i32* %3, align 4, !dbg !6160
  %5 = and i32 %0, 31, !dbg !6161
  %6 = shl nuw i32 1, %5, !dbg !6161
  %7 = and i32 %4, %6, !dbg !6162
  ret i32 %7, !dbg !6163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6168, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.value(metadata i32 %1, metadata !6169, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.value(metadata i32 %2, metadata !6170, metadata !DIExpression()), !dbg !6171
  %4 = add i32 %1, 1, !dbg !6172
  call void @llvm.dbg.value(metadata i32 %4, metadata !6169, metadata !DIExpression()), !dbg !6171
  %5 = icmp ult i32 %4, 16, !dbg !6175
  br i1 %5, label %7, label %6, !dbg !6178

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.32, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.33, i32 0, i32 0), i32 noundef 94) #26, !dbg !6179
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.34, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #26, !dbg !6179
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.33, i32 0, i32 0), i32 noundef 94) #26, !dbg !6179
  unreachable, !dbg !6179

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6181
  ret void, !dbg !6182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6187, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.value(metadata i32 %1, metadata !6188, metadata !DIExpression()), !dbg !6189
  %3 = trunc i32 %1 to i8, !dbg !6190
  %4 = shl i8 %3, 4, !dbg !6190
  %5 = and i32 %0, 15, !dbg !6192
  %6 = add nsw i32 %5, -4, !dbg !6192
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6192
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6192
  %9 = icmp slt i32 %0, 0, !dbg !6192
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6192
  store volatile i8 %4, i8* %10, align 1, !dbg !6190
  ret void, !dbg !6193
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6194 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6196, metadata !DIExpression()), !dbg !6197
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !6198
  ret void, !dbg !6199
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6200 {
  tail call void @z_SysNmiOnReset() #26, !dbg !6202
  tail call void @z_arm_int_exit() #26, !dbg !6203
  ret void, !dbg !6204
}

; Function Attrs: optsize
declare !dbg !6205 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6206 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6208 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6210
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6211
  tail call void @z_bss_zero() #26, !dbg !6212
  tail call void @z_data_copy() #26, !dbg !6213
  tail call void @z_arm_interrupt_init() #26, !dbg !6214
  tail call void @z_cstart() #27, !dbg !6215
  unreachable, !dbg !6215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6216 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6217
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6218, !srcloc !6221
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6222, !srcloc !6225
  ret void, !dbg !6226
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6227 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6228
  %2 = and i32 %1, -15728641, !dbg !6228
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6228
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6229, !srcloc !6234
  call void @llvm.dbg.value(metadata i32 %3, metadata !6232, metadata !DIExpression()) #23, !dbg !6235
  %4 = and i32 %3, -5, !dbg !6236
  call void @llvm.dbg.value(metadata i32 %4, metadata !6237, metadata !DIExpression()) #23, !dbg !6242
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6246, !srcloc !6225
  ret void, !dbg !6248
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6252, metadata !DIExpression()), !dbg !6253
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6254
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 10, i32 0, !dbg !6255
  store i32 %0, i32* %3, align 8, !dbg !6256
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6257
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 10, i32 1, !dbg !6258
  store i32 %4, i32* %5, align 4, !dbg !6259
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6260
  %7 = or i32 %6, 268435456, !dbg !6260
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6260
  call void @llvm.dbg.value(metadata i32 0, metadata !6261, metadata !DIExpression()) #23, !dbg !6264
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6266, !srcloc !6267
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6268
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 10, i32 1, !dbg !6269
  %10 = load i32, i32* %9, align 4, !dbg !6269
  ret i32 %10, !dbg !6270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6271 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6392, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6393, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i8* %2, metadata !6394, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6395, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i8* %4, metadata !6396, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i8* %5, metadata !6397, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i8* %6, metadata !6398, metadata !DIExpression()), !dbg !6400
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6401
  call void @llvm.dbg.value(metadata i8* %8, metadata !6399, metadata !DIExpression()), !dbg !6400
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6402
  %10 = bitcast i8* %9 to i32*, !dbg !6402
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6403
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6404
  %12 = bitcast i8* %8 to i32*, !dbg !6405
  store i32 %11, i32* %12, align 4, !dbg !6406
  %13 = ptrtoint i8* %4 to i32, !dbg !6407
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6408
  %15 = bitcast i8* %14 to i32*, !dbg !6408
  store i32 %13, i32* %15, align 4, !dbg !6409
  %16 = ptrtoint i8* %5 to i32, !dbg !6410
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6411
  %18 = bitcast i8* %17 to i32*, !dbg !6411
  store i32 %16, i32* %18, align 4, !dbg !6412
  %19 = ptrtoint i8* %6 to i32, !dbg !6413
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6414
  %21 = bitcast i8* %20 to i32*, !dbg !6414
  store i32 %19, i32* %21, align 4, !dbg !6415
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6416
  %23 = bitcast i8* %22 to i32*, !dbg !6416
  store i32 16777216, i32* %23, align 4, !dbg !6417
  %24 = ptrtoint i8* %8 to i32, !dbg !6418
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6419
  store i32 %24, i32* %25, align 8, !dbg !6420
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 10, i32 0, !dbg !6421
  store i32 0, i32* %26, align 8, !dbg !6422
  ret void, !dbg !6423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6429, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i32 %1, metadata !6430, metadata !DIExpression()), !dbg !6435
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6436
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6431, metadata !DIExpression()), !dbg !6435
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6437
  br i1 %4, label %19, label %5, !dbg !6439

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6434, metadata !DIExpression()), !dbg !6435
  %6 = icmp eq i32 %0, -22, !dbg !6440
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 8, i32 0, !dbg !6440
  %8 = load i32, i32* %7, align 8, !dbg !6440
  br i1 %6, label %16, label %9, !dbg !6442

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6440
  %11 = icmp ule i32 %10, %0, !dbg !6440
  %12 = icmp ugt i32 %8, %0, !dbg !6440
  %13 = and i1 %12, %11, !dbg !6440
  %14 = icmp ugt i32 %8, %1, !dbg !6440
  %15 = and i1 %14, %13, !dbg !6440
  br i1 %15, label %18, label %19, !dbg !6440

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6440
  br i1 %17, label %18, label %19, !dbg !6442

18:                                               ; preds = %9, %16
  br label %19, !dbg !6443

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6435
  ret i32 %20, !dbg !6445
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6446 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6450, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.value(metadata i8* %1, metadata !6451, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6452, metadata !DIExpression()), !dbg !6453
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6454
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !6455
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6456, !srcloc !6457
  unreachable, !dbg !6458
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6459 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6477, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 %1, metadata !6478, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 %2, metadata !6479, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6480, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 0, metadata !6481, metadata !DIExpression()), !dbg !6487
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6488
  call void @llvm.dbg.value(metadata i32 %8, metadata !6482, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6487
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6489
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6489
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6490
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6490
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6486, metadata !DIExpression()), !dbg !6491
  call void @llvm.dbg.value(metadata i32 0, metadata !6492, metadata !DIExpression()) #23, !dbg !6495
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6497, !srcloc !6498
  call void @llvm.dbg.value(metadata i8* %6, metadata !6484, metadata !DIExpression(DW_OP_deref)), !dbg !6487
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6499
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6485, metadata !DIExpression()), !dbg !6487
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6500
  br i1 %11, label %12, label %13, !dbg !6503

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 1057) #26, !dbg !6504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.40, i32 0, i32 0)) #26, !dbg !6504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 1057) #26, !dbg !6504
  unreachable, !dbg !6504

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6506
  call void @llvm.dbg.value(metadata i32 %14, metadata !6482, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i8* %5, metadata !6483, metadata !DIExpression(DW_OP_deref)), !dbg !6487
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6507
  call void @llvm.dbg.value(metadata i32 %15, metadata !6481, metadata !DIExpression()), !dbg !6487
  %16 = load i8, i8* %5, align 1, !dbg !6508, !range !4008
  call void @llvm.dbg.value(metadata i8 %16, metadata !6483, metadata !DIExpression()), !dbg !6487
  %17 = icmp eq i8 %16, 0, !dbg !6508
  br i1 %17, label %18, label %35, !dbg !6510

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6511
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #26, !dbg !6512
  %21 = load i8, i8* %6, align 1, !dbg !6513, !range !4008
  call void @llvm.dbg.value(metadata i8 %21, metadata !6484, metadata !DIExpression()), !dbg !6487
  %22 = icmp eq i8 %21, 0, !dbg !6513
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6515
  %24 = load i32, i32* %23, align 4, !dbg !6515
  br i1 %22, label %30, label %25, !dbg !6516

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6517
  %27 = icmp eq i32 %26, 0, !dbg !6520
  br i1 %27, label %28, label %34, !dbg !6521

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6522
  br label %32, !dbg !6524

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6525
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6515
  br label %34, !dbg !6527

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #26, !dbg !6527
  br label %35, !dbg !6528

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6528
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6528
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6528
  ret void, !dbg !6528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #7 !dbg !6529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6534, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata i32 %1, metadata !6535, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata i32 %2, metadata !6536, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata i8* %3, metadata !6537, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata i8 0, metadata !6538, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6539, metadata !DIExpression()), !dbg !6540
  store i8 0, i8* %3, align 1, !dbg !6541
  %5 = icmp ult i32 %2, -16777216, !dbg !6542
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6544
  br i1 %8, label %16, label %9, !dbg !6544

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6545
  %11 = icmp eq i32 %10, 0, !dbg !6545
  br i1 %11, label %12, label %13, !dbg !6547

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6539, metadata !DIExpression()), !dbg !6540
  store i8 1, i8* %3, align 1, !dbg !6550
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6540
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6539, metadata !DIExpression()), !dbg !6540
  br label %16, !dbg !6553

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6540
  ret %struct.__esf* %17, !dbg !6554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6555 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6559, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i32 %1, metadata !6560, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i8* %2, metadata !6561, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i32 0, metadata !6562, metadata !DIExpression()), !dbg !6563
  store i8 0, i8* %2, align 1, !dbg !6564
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6565

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6566
  call void @llvm.dbg.value(metadata i32 %5, metadata !6562, metadata !DIExpression()), !dbg !6563
  br label %11, !dbg !6568

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6569
  call void @llvm.dbg.value(metadata i32 %7, metadata !6562, metadata !DIExpression()), !dbg !6563
  br label %11, !dbg !6570

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6571
  call void @llvm.dbg.value(metadata i32 0, metadata !6562, metadata !DIExpression()), !dbg !6563
  br label %11, !dbg !6572

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6573
  call void @llvm.dbg.value(metadata i32 0, metadata !6562, metadata !DIExpression()), !dbg !6563
  br label %11, !dbg !6574

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6575
  br label %11, !dbg !6576

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6578 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6582, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i8* %1, metadata !6583, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i32 0, metadata !6584, metadata !DIExpression()), !dbg !6585
  store i8 0, i8* %1, align 1, !dbg !6586
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6587
  %4 = and i32 %3, 2, !dbg !6589
  %5 = icmp eq i32 %4, 0, !dbg !6590
  br i1 %5, label %6, label %35, !dbg !6591

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6592
  %8 = icmp sgt i32 %7, -1, !dbg !6594
  br i1 %8, label %9, label %35, !dbg !6595

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6596
  %11 = and i32 %10, 1073741824, !dbg !6598
  %12 = icmp eq i32 %11, 0, !dbg !6599
  br i1 %12, label %34, label %13, !dbg !6600

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6601
  br i1 %14, label %15, label %18, !dbg !6604

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6605
  %17 = load i32, i32* %16, align 4, !dbg !6605
  call void @llvm.dbg.value(metadata i32 %17, metadata !6584, metadata !DIExpression()), !dbg !6585
  br label %35, !dbg !6607

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6608
  %20 = and i32 %19, 255, !dbg !6610
  %21 = icmp eq i32 %20, 0, !dbg !6611
  br i1 %21, label %24, label %22, !dbg !6612

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6613
  call void @llvm.dbg.value(metadata i32 %23, metadata !6584, metadata !DIExpression()), !dbg !6585
  br label %35, !dbg !6615

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6616
  %26 = and i32 %25, 65280, !dbg !6618
  %27 = icmp eq i32 %26, 0, !dbg !6619
  br i1 %27, label %29, label %28, !dbg !6620

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6621
  call void @llvm.dbg.value(metadata i32 0, metadata !6584, metadata !DIExpression()), !dbg !6585
  br label %35, !dbg !6623

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6624
  %31 = icmp ult i32 %30, 65536, !dbg !6626
  br i1 %31, label %33, label %32, !dbg !6627

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #24, !dbg !6628
  call void @llvm.dbg.value(metadata i32 0, metadata !6584, metadata !DIExpression()), !dbg !6585
  br label %35

33:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 755) #26, !dbg !6630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.44, i32 0, i32 0)) #26, !dbg !6630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 755) #26, !dbg !6630
  unreachable, !dbg !6630

34:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 760) #26, !dbg !6635
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6.45, i32 0, i32 0)) #26, !dbg !6635
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 760) #26, !dbg !6635
  unreachable, !dbg !6635

35:                                               ; preds = %6, %15, %28, %32, %22, %2
  %36 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], !dbg !6585
  call void @llvm.dbg.value(metadata i32 %36, metadata !6584, metadata !DIExpression()), !dbg !6585
  ret i32 %36, !dbg !6640
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6641 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6643, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 %1, metadata !6644, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i8* %2, metadata !6645, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 0, metadata !6646, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 -22, metadata !6647, metadata !DIExpression()), !dbg !6656
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6657
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6659
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6661
  %7 = and i32 %6, 2, !dbg !6662
  %8 = icmp eq i32 %7, 0, !dbg !6663
  br i1 %8, label %19, label %9, !dbg !6664

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6665
  call void @llvm.dbg.value(metadata i32 %10, metadata !6648, metadata !DIExpression()), !dbg !6666
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6667
  %12 = and i32 %11, 128, !dbg !6669
  %13 = icmp eq i32 %12, 0, !dbg !6670
  br i1 %13, label %19, label %14, !dbg !6671

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6647, metadata !DIExpression()), !dbg !6656
  %15 = icmp eq i32 %1, 0, !dbg !6672
  br i1 %15, label %19, label %16, !dbg !6675

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6676
  %18 = and i32 %17, -129, !dbg !6676
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6676
  br label %19, !dbg !6678

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6656
  call void @llvm.dbg.value(metadata i32 %20, metadata !6647, metadata !DIExpression()), !dbg !6656
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6679
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6681
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6683
  %24 = and i32 %23, 16, !dbg !6684
  %25 = icmp eq i32 %24, 0, !dbg !6684
  br i1 %25, label %26, label %30, !dbg !6685

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6686
  %28 = and i32 %27, 2, !dbg !6687
  %29 = icmp eq i32 %28, 0, !dbg !6687
  br i1 %29, label %44, label %30, !dbg !6688

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6689
  %32 = and i32 %31, 2048, !dbg !6690
  %33 = icmp eq i32 %32, 0, !dbg !6690
  br i1 %33, label %44, label %34, !dbg !6691

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6692
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #26, !dbg !6693
  call void @llvm.dbg.value(metadata i32 %36, metadata !6651, metadata !DIExpression()), !dbg !6694
  %37 = icmp eq i32 %36, 0, !dbg !6695
  br i1 %37, label %39, label %38, !dbg !6697

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6698, metadata !DIExpression()) #23, !dbg !6701
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !6704, !srcloc !6705
  call void @llvm.dbg.value(metadata i32 2, metadata !6646, metadata !DIExpression()), !dbg !6656
  br label %44, !dbg !6706

39:                                               ; preds = %34
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6707
  %41 = and i32 %40, 16, !dbg !6707
  %42 = icmp eq i32 %41, 0, !dbg !6707
  br i1 %42, label %44, label %43, !dbg !6711

43:                                               ; preds = %39
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7.41, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 343) #26, !dbg !6712
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.42, i32 0, i32 0)) #26, !dbg !6712
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 343) #26, !dbg !6712
  unreachable, !dbg !6712

44:                                               ; preds = %38, %39, %30, %26
  %45 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %39 ], !dbg !6656
  call void @llvm.dbg.value(metadata i32 %45, metadata !6646, metadata !DIExpression()), !dbg !6656
  %46 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6714
  %47 = and i32 %46, 32, !dbg !6716
  %48 = icmp eq i32 %47, 0, !dbg !6717
  br i1 %48, label %52, label %49, !dbg !6718

49:                                               ; preds = %44
  %50 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6719
  %51 = and i32 %50, -8193, !dbg !6719
  store volatile i32 %51, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6719
  br label %52, !dbg !6721

52:                                               ; preds = %49, %44
  %53 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6722
  %54 = or i32 %53, 255, !dbg !6722
  store volatile i32 %54, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6722
  store i8 0, i8* %2, align 1, !dbg !6723
  ret i32 %45, !dbg !6724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !6725 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6729, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %0, metadata !6730, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i8* %1, metadata !6731, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 0, metadata !6732, metadata !DIExpression()), !dbg !6736
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6737
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6739
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6741
  %6 = and i32 %5, 512, !dbg !6742
  %7 = icmp eq i32 %6, 0, !dbg !6742
  br i1 %7, label %18, label %8, !dbg !6743

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6744
  call void @llvm.dbg.value(metadata i32 %9, metadata !6733, metadata !DIExpression()), !dbg !6745
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6746
  %11 = and i32 %10, 32768, !dbg !6748
  %12 = icmp ne i32 %11, 0, !dbg !6749
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6750
  br i1 %14, label %15, label %18, !dbg !6750

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6751
  %17 = and i32 %16, -32769, !dbg !6751
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6751
  br label %18, !dbg !6755

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6756
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6758
  %21 = and i32 %20, 256, !dbg !6760
  %22 = icmp eq i32 %21, 0, !dbg !6761
  br i1 %22, label %23, label %25, !dbg !6762

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6763
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6765
  %27 = or i32 %26, 65280, !dbg !6765
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6765
  store i8 0, i8* %1, align 1, !dbg !6766
  ret void, !dbg !6767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #14 !dbg !6768 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6774, metadata !DIExpression()), !dbg !6776
  call void @llvm.dbg.value(metadata i32 0, metadata !6775, metadata !DIExpression()), !dbg !6776
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6777
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6779
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6781
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6783
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6785
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6787
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6789
  %8 = or i32 %7, -65536, !dbg !6789
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6789
  ret void, !dbg !6790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !6791 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6795, metadata !DIExpression()), !dbg !6797
  call void @llvm.dbg.value(metadata i8* %0, metadata !6796, metadata !DIExpression()), !dbg !6797
  store i8 0, i8* %0, align 1, !dbg !6798
  ret void, !dbg !6799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6800 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6804, metadata !DIExpression()), !dbg !6807
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6808
  %3 = load i32, i32* %2, align 4, !dbg !6808
  %4 = inttoptr i32 %3 to i16*, !dbg !6809
  call void @llvm.dbg.value(metadata i16* %4, metadata !6805, metadata !DIExpression()), !dbg !6807
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6810
  %6 = or i32 %5, 256, !dbg !6810
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6810
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6811, !srcloc !6814
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6815, !srcloc !6818
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6819
  %8 = load i16, i16* %7, align 2, !dbg !6820
  call void @llvm.dbg.value(metadata i16 %8, metadata !6806, metadata !DIExpression()), !dbg !6807
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6821
  %10 = and i32 %9, -257, !dbg !6821
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6821
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6822, !srcloc !6814
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6824, !srcloc !6818
  %11 = icmp eq i16 %8, -8446, !dbg !6826
  ret i1 %11, !dbg !6828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !6829 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6830
  %2 = or i32 %1, 16, !dbg !6830
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6830
  ret void, !dbg !6831
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !6832 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6835, metadata !DIExpression()), !dbg !6836
  br label %1, !dbg !6837

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6835, metadata !DIExpression()), !dbg !6836
  tail call fastcc void @__NVIC_SetPriority.48(i32 noundef %2) #24, !dbg !6839
  %3 = add nuw nsw i32 %2, 1, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %3, metadata !6835, metadata !DIExpression()), !dbg !6836
  %4 = icmp eq i32 %3, 86, !dbg !6843
  br i1 %4, label %5, label %1, !dbg !6837, !llvm.loop !6844

5:                                                ; preds = %1
  ret void, !dbg !6846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.48(i32 noundef %0) unnamed_addr #14 !dbg !6847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6849, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.value(metadata i32 1, metadata !6850, metadata !DIExpression()), !dbg !6851
  %2 = and i32 %0, 15, !dbg !6852
  %3 = add nsw i32 %2, -4, !dbg !6852
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6852
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6852
  %6 = icmp slt i32 %0, 0, !dbg !6852
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6852
  store volatile i8 16, i8* %7, align 1, !dbg !6853
  ret void, !dbg !6855
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6856 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6973, metadata !DIExpression()), !dbg !6974
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6975
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6977
  br i1 %3, label %4, label %12, !dbg !6978

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !6979, !srcloc !6991
  call void @llvm.dbg.value(metadata i32 %5, metadata !6982, metadata !DIExpression()) #23, !dbg !6992
  %6 = icmp eq i32 %5, 0, !dbg !6993
  br i1 %6, label %12, label %7, !dbg !6994

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6995
  %9 = or i32 %8, 268435456, !dbg !6995
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6995
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6997
  %11 = and i32 %10, -32769, !dbg !6997
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6997
  br label %12, !dbg !6998

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !6999
  ret void, !dbg !7000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7001 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !7002
  ret void, !dbg !7003
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !509, metadata !DIExpression()), !dbg !7004
  call void @llvm.dbg.value(metadata i8 0, metadata !510, metadata !DIExpression()), !dbg !7004
  call void @llvm.dbg.value(metadata i32 64, metadata !512, metadata !DIExpression()), !dbg !7004
  call void @llvm.dbg.value(metadata i32 undef, metadata !511, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7004
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !7005
  %3 = load i32, i32* %2, align 8, !dbg !7005
  call void @llvm.dbg.value(metadata i32 %3, metadata !511, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7004
  %4 = add i32 %3, -64, !dbg !7007
  call void @llvm.dbg.value(metadata i32 %4, metadata !511, metadata !DIExpression()), !dbg !7004
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7008
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7009
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7010
  call void @llvm.dbg.value(metadata i8 1, metadata !510, metadata !DIExpression()), !dbg !7004
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !7011
  ret void, !dbg !7012
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7013 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7014
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7015, !srcloc !7018
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7019, !srcloc !7022
  ret void, !dbg !7023
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7024 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7025, !srcloc !7028
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7029
  ret void, !dbg !7030
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7031 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7046, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i8 %1, metadata !7047, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 %2, metadata !7048, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 %3, metadata !7049, metadata !DIExpression()), !dbg !7050
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7051
  %6 = icmp eq i32 %5, -22, !dbg !7053
  br i1 %6, label %7, label %9, !dbg !7054

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 283) #26, !dbg !7055
  %8 = zext i8 %1 to i32, !dbg !7055
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.58, i32 0, i32 0), i32 noundef %8) #26, !dbg !7055
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 283) #26, !dbg !7055
  unreachable, !dbg !7055

9:                                                ; preds = %4
  ret void, !dbg !7060
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !7061 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7066, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i8 %1, metadata !7067, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i32 undef, metadata !7068, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i32 undef, metadata !7069, metadata !DIExpression()), !dbg !7071
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7072
  call void @llvm.dbg.value(metadata i8 %3, metadata !7070, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7071
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7073
  call void @llvm.dbg.value(metadata i32 %4, metadata !7070, metadata !DIExpression()), !dbg !7071
  %5 = trunc i32 %4 to i8, !dbg !7074
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7075
  ret i32 %4, !dbg !7076
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #16 !dbg !7077 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7081, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i8 %1, metadata !7082, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i8 %2, metadata !7083, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i1 %3, metadata !7084, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7087
  %5 = zext i8 %2 to i32, !dbg !7088
  call void @llvm.dbg.value(metadata i32 %5, metadata !7086, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i32 0, metadata !7085, metadata !DIExpression()), !dbg !7087
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7086, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i32 0, metadata !7085, metadata !DIExpression()), !dbg !7087
  %7 = icmp eq i8 %1, 0, !dbg !7089
  br i1 %7, label %29, label %8, !dbg !7092

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7086, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i32 %10, metadata !7085, metadata !DIExpression()), !dbg !7087
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7093
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7096
  %13 = load i32, i32* %12, align 4, !dbg !7096
  %14 = icmp eq i32 %13, 0, !dbg !7097
  br i1 %14, label %25, label %15, !dbg !7098

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7099

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7101
  %18 = icmp eq i32 %17, 0, !dbg !7101
  br i1 %18, label %29, label %19, !dbg !7102

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7103
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7104
  call void @llvm.dbg.value(metadata i32 %21, metadata !7086, metadata !DIExpression()), !dbg !7087
  %22 = icmp eq i32 %21, -22, !dbg !7105
  br i1 %22, label %29, label %23, !dbg !7107

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7108
  call void @llvm.dbg.value(metadata i32 %24, metadata !7086, metadata !DIExpression()), !dbg !7087
  br label %25, !dbg !7109

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7087
  call void @llvm.dbg.value(metadata i32 %26, metadata !7086, metadata !DIExpression()), !dbg !7087
  %27 = add nuw nsw i32 %10, 1, !dbg !7110
  call void @llvm.dbg.value(metadata i32 %27, metadata !7085, metadata !DIExpression()), !dbg !7087
  %28 = icmp eq i32 %27, %6, !dbg !7089
  br i1 %28, label %29, label %8, !dbg !7092, !llvm.loop !7111

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7087
  ret i32 %30, !dbg !7113
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #17 !dbg !7114 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7118, metadata !DIExpression()), !dbg !7120
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7121
  %3 = load i32, i32* %2, align 4, !dbg !7121
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7122, !range !7123
  %5 = icmp ult i32 %4, 2, !dbg !7122
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7124
  br i1 %7, label %8, label %15, !dbg !7124

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7125
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7126
  %11 = load i32, i32* %10, align 4, !dbg !7126
  %12 = and i32 %11, %9, !dbg !7127
  %13 = icmp eq i32 %12, 0, !dbg !7128
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7119, metadata !DIExpression()), !dbg !7120
  ret i32 %16, !dbg !7129
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #16 !dbg !7130 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7134, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7135, metadata !DIExpression()), !dbg !7137
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7138
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7138
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7136, metadata !DIExpression()), !dbg !7139
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7140
  %6 = load i32, i32* %5, align 4, !dbg !7140
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7141
  store i32 %6, i32* %7, align 4, !dbg !7142
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7143
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7144
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7145
  %11 = load i32, i32* %10, align 4, !dbg !7145
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7146
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7147
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7148
  ret i32 %12, !dbg !7149
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #18 !dbg !7150 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7157, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7158, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.value(metadata i32 undef, metadata !7159, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.value(metadata i32 %2, metadata !7160, metadata !DIExpression()), !dbg !7161
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7162
  %5 = load i32, i32* %4, align 4, !dbg !7162
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7163
  %7 = or i32 %6, %5, !dbg !7164
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7165
  store i32 %7, i32* %8, align 4, !dbg !7166
  ret void, !dbg !7167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7168 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7172, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7173, metadata !DIExpression()), !dbg !7174
  %3 = zext i8 %0 to i32, !dbg !7175
  %4 = icmp ugt i8 %0, 7, !dbg !7177
  br i1 %4, label %6, label %5, !dbg !7178

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7179
  br label %6, !dbg !7180

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7174
  ret i32 %7, !dbg !7181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7186, metadata !DIExpression()), !dbg !7188
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7187, metadata !DIExpression()), !dbg !7188
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7189
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7190
  %4 = load i32, i32* %3, align 4, !dbg !7190
  %5 = and i32 %4, -32, !dbg !7191
  %6 = or i32 %5, %0, !dbg !7192
  %7 = or i32 %6, 16, !dbg !7192
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7193
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7194
  %9 = load i32, i32* %8, align 4, !dbg !7194
  %10 = or i32 %9, 1, !dbg !7195
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7196
  ret void, !dbg !7197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7201, metadata !DIExpression()), !dbg !7202
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7203
  ret void, !dbg !7204
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #5 !dbg !7205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7209, metadata !DIExpression()), !dbg !7210
  %2 = icmp ult i32 %0, 33, !dbg !7211
  br i1 %2, label %11, label %3, !dbg !7213

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7214
  br i1 %4, label %11, label %5, !dbg !7216

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7217
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7218, !range !7123
  %8 = mul nsw i32 %7, -2, !dbg !7219
  %9 = add nsw i32 %8, 62, !dbg !7219
  %10 = and i32 %9, 62, !dbg !7220
  br label %11, !dbg !7221

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7210
  ret i32 %12, !dbg !7222
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7223 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7227, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.value(metadata i8 %1, metadata !7228, metadata !DIExpression()), !dbg !7229
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7230
  %4 = icmp eq i32 %3, -22, !dbg !7232
  br i1 %4, label %5, label %7, !dbg !7233

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 314) #26, !dbg !7234
  %6 = zext i8 %1 to i32, !dbg !7234
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.61, i32 0, i32 0), i32 noundef %6) #26, !dbg !7234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 314) #26, !dbg !7234
  unreachable, !dbg !7234

7:                                                ; preds = %2
  ret void, !dbg !7239
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !7240 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7244, metadata !DIExpression()), !dbg !7251
  call void @llvm.dbg.value(metadata i8 %1, metadata !7245, metadata !DIExpression()), !dbg !7251
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7252
  call void @llvm.dbg.value(metadata i8 %3, metadata !7246, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7251
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7253
  call void @llvm.dbg.value(metadata i32 %4, metadata !7246, metadata !DIExpression()), !dbg !7251
  %5 = icmp ne i32 %4, -22, !dbg !7254
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7255
  call void @llvm.dbg.value(metadata i32 %4, metadata !7247, metadata !DIExpression()), !dbg !7256
  br i1 %7, label %8, label %12, !dbg !7255

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7247, metadata !DIExpression()), !dbg !7256
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7257
  %10 = add i32 %9, 1, !dbg !7260
  call void @llvm.dbg.value(metadata i32 %10, metadata !7247, metadata !DIExpression()), !dbg !7256
  %11 = icmp eq i32 %10, 8, !dbg !7261
  br i1 %11, label %12, label %8, !dbg !7262, !llvm.loop !7263

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7265
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7269, metadata !DIExpression()), !dbg !7270
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7271
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7272
  ret void, !dbg !7273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7274 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7279
  %2 = icmp ugt i32 %1, 8, !dbg !7281
  br i1 %2, label %3, label %4, !dbg !7282

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 341) #26, !dbg !7283
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.62, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #26, !dbg !7283
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 341) #26, !dbg !7283
  unreachable, !dbg !7283

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7288
  call void @llvm.dbg.value(metadata i32 0, metadata !7278, metadata !DIExpression()), !dbg !7289
  %5 = icmp eq i32 %1, 0, !dbg !7290
  br i1 %5, label %13, label %6, !dbg !7293

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7293

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7278, metadata !DIExpression()), !dbg !7289
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7294
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7296
  %11 = add nuw i32 %9, 1, !dbg !7297
  call void @llvm.dbg.value(metadata i32 %11, metadata !7278, metadata !DIExpression()), !dbg !7289
  %12 = icmp eq i32 %11, %1, !dbg !7290
  br i1 %12, label %13, label %8, !dbg !7293, !llvm.loop !7298

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7300
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7301
  tail call void @arm_core_mpu_enable() #24, !dbg !7302
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7303
  %16 = and i32 %15, 65280, !dbg !7303
  %17 = icmp eq i32 %16, 2048, !dbg !7303
  br i1 %17, label %19, label %18, !dbg !7306

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 435) #26, !dbg !7307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.64, i32 0, i32 0)) #26, !dbg !7307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 435) #26, !dbg !7307
  unreachable, !dbg !7307

19:                                               ; preds = %13
  ret i32 0, !dbg !7309
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !7310 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7317, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i8* %1, metadata !7318, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i8* %0, metadata !7319, metadata !DIExpression()), !dbg !7320
  %3 = load i8, i8* %1, align 1, !dbg !7321
  %4 = icmp eq i8 %3, 0, !dbg !7322
  br i1 %4, label %13, label %5, !dbg !7323

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7317, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i8* %8, metadata !7318, metadata !DIExpression()), !dbg !7320
  store i8 %6, i8* %7, align 1, !dbg !7324
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7326
  call void @llvm.dbg.value(metadata i8* %9, metadata !7317, metadata !DIExpression()), !dbg !7320
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7327
  call void @llvm.dbg.value(metadata i8* %10, metadata !7318, metadata !DIExpression()), !dbg !7320
  %11 = load i8, i8* %10, align 1, !dbg !7321
  %12 = icmp eq i8 %11, 0, !dbg !7322
  br i1 %12, label %13, label %5, !dbg !7323, !llvm.loop !7328

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7330
  ret i8* %0, !dbg !7331
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7332 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7336, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i8* %1, metadata !7337, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i32 %2, metadata !7338, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i8* %0, metadata !7339, metadata !DIExpression()), !dbg !7340
  %4 = icmp eq i32 %2, 0, !dbg !7341
  br i1 %4, label %22, label %5, !dbg !7342

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7336, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i32 %7, metadata !7338, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i8* %8, metadata !7337, metadata !DIExpression()), !dbg !7340
  %9 = load i8, i8* %8, align 1, !dbg !7343
  %10 = icmp eq i8 %9, 0, !dbg !7344
  br i1 %10, label %16, label %11, !dbg !7345

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7346
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7348
  call void @llvm.dbg.value(metadata i8* %12, metadata !7337, metadata !DIExpression()), !dbg !7340
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7349
  call void @llvm.dbg.value(metadata i8* %13, metadata !7336, metadata !DIExpression()), !dbg !7340
  %14 = add i32 %7, -1, !dbg !7350
  call void @llvm.dbg.value(metadata i32 %14, metadata !7338, metadata !DIExpression()), !dbg !7340
  %15 = icmp eq i32 %14, 0, !dbg !7341
  br i1 %15, label %22, label %5, !dbg !7342, !llvm.loop !7351

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7336, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i32 %18, metadata !7338, metadata !DIExpression()), !dbg !7340
  store i8 0, i8* %17, align 1, !dbg !7353
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7355
  call void @llvm.dbg.value(metadata i8* %19, metadata !7336, metadata !DIExpression()), !dbg !7340
  %20 = add i32 %18, -1, !dbg !7356
  call void @llvm.dbg.value(metadata i32 %20, metadata !7338, metadata !DIExpression()), !dbg !7340
  %21 = icmp eq i32 %20, 0, !dbg !7357
  br i1 %21, label %22, label %16, !dbg !7358, !llvm.loop !7359

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7361
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7362 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7366, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i32 %1, metadata !7367, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i32 %1, metadata !7368, metadata !DIExpression()), !dbg !7369
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7370

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7366, metadata !DIExpression()), !dbg !7369
  %6 = load i8, i8* %5, align 1, !dbg !7371
  %7 = icmp eq i8 %6, %3, !dbg !7372
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7373
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7374
  call void @llvm.dbg.value(metadata i8* %10, metadata !7366, metadata !DIExpression()), !dbg !7369
  br i1 %9, label %11, label %4, !dbg !7373, !llvm.loop !7376

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7378
  ret i8* %12, !dbg !7379
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7380 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7382, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i32 %1, metadata !7383, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i8* null, metadata !7384, metadata !DIExpression()), !dbg !7385
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7386

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7385
  call void @llvm.dbg.value(metadata i8* %6, metadata !7384, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i8* %5, metadata !7382, metadata !DIExpression()), !dbg !7385
  %7 = load i8, i8* %5, align 1, !dbg !7387
  %8 = icmp eq i8 %7, %3, !dbg !7390
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7391
  call void @llvm.dbg.value(metadata i8* %9, metadata !7384, metadata !DIExpression()), !dbg !7385
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7392
  call void @llvm.dbg.value(metadata i8* %10, metadata !7382, metadata !DIExpression()), !dbg !7385
  %11 = icmp eq i8 %7, 0, !dbg !7393
  br i1 %11, label %12, label %4, !dbg !7393, !llvm.loop !7394

12:                                               ; preds = %4
  ret i8* %9, !dbg !7396
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !7397 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7401, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.value(metadata i32 0, metadata !7402, metadata !DIExpression()), !dbg !7403
  %2 = load i8, i8* %0, align 1, !dbg !7404
  %3 = icmp eq i8 %2, 0, !dbg !7405
  br i1 %3, label %11, label %4, !dbg !7406

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7402, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.value(metadata i8* %6, metadata !7401, metadata !DIExpression()), !dbg !7403
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7407
  call void @llvm.dbg.value(metadata i8* %7, metadata !7401, metadata !DIExpression()), !dbg !7403
  %8 = add i32 %5, 1, !dbg !7409
  call void @llvm.dbg.value(metadata i32 %8, metadata !7402, metadata !DIExpression()), !dbg !7403
  %9 = load i8, i8* %7, align 1, !dbg !7404
  %10 = icmp eq i8 %9, 0, !dbg !7405
  br i1 %10, label %11, label %4, !dbg !7406, !llvm.loop !7410

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7403
  ret i32 %12, !dbg !7412
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7413 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7417, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.value(metadata i32 %1, metadata !7418, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.value(metadata i32 0, metadata !7419, metadata !DIExpression()), !dbg !7420
  %3 = load i8, i8* %0, align 1, !dbg !7421
  %4 = icmp ne i8 %3, 0, !dbg !7422
  %5 = icmp ne i32 %1, 0, !dbg !7423
  %6 = and i1 %4, %5, !dbg !7423
  br i1 %6, label %7, label %16, !dbg !7424

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7419, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.value(metadata i8* %9, metadata !7417, metadata !DIExpression()), !dbg !7420
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7425
  call void @llvm.dbg.value(metadata i8* %10, metadata !7417, metadata !DIExpression()), !dbg !7420
  %11 = add nuw i32 %8, 1, !dbg !7427
  call void @llvm.dbg.value(metadata i32 %11, metadata !7419, metadata !DIExpression()), !dbg !7420
  %12 = load i8, i8* %10, align 1, !dbg !7421
  %13 = icmp ne i8 %12, 0, !dbg !7422
  %14 = icmp ult i32 %11, %1, !dbg !7423
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7423
  br i1 %15, label %7, label %16, !dbg !7424, !llvm.loop !7428

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7420
  ret i32 %17, !dbg !7430
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !7431 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7435, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8* %1, metadata !7436, metadata !DIExpression()), !dbg !7437
  %3 = load i8, i8* %0, align 1, !dbg !7438
  %4 = load i8, i8* %1, align 1, !dbg !7439
  %5 = icmp ne i8 %3, %4, !dbg !7440
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7441
  br i1 %7, label %18, label %8, !dbg !7441

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7436, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8* %10, metadata !7435, metadata !DIExpression()), !dbg !7437
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7442
  call void @llvm.dbg.value(metadata i8* %11, metadata !7435, metadata !DIExpression()), !dbg !7437
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7444
  call void @llvm.dbg.value(metadata i8* %12, metadata !7436, metadata !DIExpression()), !dbg !7437
  %13 = load i8, i8* %11, align 1, !dbg !7438
  %14 = load i8, i8* %12, align 1, !dbg !7439
  %15 = icmp ne i8 %13, %14, !dbg !7440
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7441
  br i1 %17, label %18, label %8, !dbg !7441, !llvm.loop !7445

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7438
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7439
  %21 = zext i8 %19 to i32, !dbg !7448
  %22 = zext i8 %20 to i32, !dbg !7449
  %23 = sub nsw i32 %21, %22, !dbg !7450
  ret i32 %23, !dbg !7451
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7452 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7456, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i8* %1, metadata !7457, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 %2, metadata !7458, metadata !DIExpression()), !dbg !7459
  %4 = icmp eq i32 %2, 0, !dbg !7460
  br i1 %4, label %23, label %5, !dbg !7460

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7458, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i8* %7, metadata !7457, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i8* %8, metadata !7456, metadata !DIExpression()), !dbg !7459
  %9 = load i8, i8* %8, align 1, !dbg !7461
  %10 = load i8, i8* %7, align 1, !dbg !7462
  %11 = icmp ne i8 %9, %10, !dbg !7463
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7464
  br i1 %13, label %19, label %14, !dbg !7464

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7465
  call void @llvm.dbg.value(metadata i8* %15, metadata !7456, metadata !DIExpression()), !dbg !7459
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7467
  call void @llvm.dbg.value(metadata i8* %16, metadata !7457, metadata !DIExpression()), !dbg !7459
  %17 = add i32 %6, -1, !dbg !7468
  call void @llvm.dbg.value(metadata i32 %17, metadata !7458, metadata !DIExpression()), !dbg !7459
  %18 = icmp eq i32 %17, 0, !dbg !7460
  br i1 %18, label %23, label %5, !dbg !7460, !llvm.loop !7469

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7472
  %21 = zext i8 %10 to i32, !dbg !7473
  %22 = sub nsw i32 %20, %21, !dbg !7474
  br label %23, !dbg !7475

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7475
  ret i32 %24, !dbg !7476
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #12 !dbg !7477 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7482, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.value(metadata i8* %1, metadata !7483, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.value(metadata i8** %2, metadata !7484, metadata !DIExpression()), !dbg !7487
  %4 = icmp eq i8* %0, null, !dbg !7488
  br i1 %4, label %5, label %7, !dbg !7488

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7489
  br label %7, !dbg !7488

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7488
  call void @llvm.dbg.value(metadata i8* %8, metadata !7485, metadata !DIExpression()), !dbg !7487
  %9 = load i8, i8* %8, align 1, !dbg !7490
  %10 = icmp eq i8 %9, 0, !dbg !7490
  br i1 %10, label %33, label %11, !dbg !7491

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7485, metadata !DIExpression()), !dbg !7487
  %14 = zext i8 %12 to i32, !dbg !7490
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7492
  %16 = icmp eq i8* %15, null, !dbg !7491
  br i1 %16, label %21, label %17, !dbg !7493

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7494
  call void @llvm.dbg.value(metadata i8* %18, metadata !7485, metadata !DIExpression()), !dbg !7487
  %19 = load i8, i8* %18, align 1, !dbg !7490
  %20 = icmp eq i8 %19, 0, !dbg !7490
  br i1 %20, label %33, label %11, !dbg !7491, !llvm.loop !7496

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7486, metadata !DIExpression()), !dbg !7487
  %24 = zext i8 %22 to i32, !dbg !7498
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7499
  %26 = icmp eq i8* %25, null, !dbg !7500
  br i1 %26, label %27, label %31, !dbg !7501

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7502
  call void @llvm.dbg.value(metadata i8* %28, metadata !7486, metadata !DIExpression()), !dbg !7487
  %29 = load i8, i8* %28, align 1, !dbg !7498
  %30 = icmp eq i8 %29, 0, !dbg !7498
  br i1 %30, label %33, label %21, !dbg !7504, !llvm.loop !7505

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7507
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7510
  br label %33, !dbg !7511

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7487
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7487
  store i8* %34, i8** %2, align 4, !dbg !7487
  ret i8* %35, !dbg !7512
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !7513 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7515, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.value(metadata i8* %1, metadata !7516, metadata !DIExpression()), !dbg !7517
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7518
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7519
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7520
  ret i8* %0, !dbg !7521
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7522 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7524, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i8* %1, metadata !7525, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 %2, metadata !7526, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i8* %0, metadata !7527, metadata !DIExpression()), !dbg !7529
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7530
  call void @llvm.dbg.value(metadata i32 %4, metadata !7528, metadata !DIExpression()), !dbg !7529
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7531
  call void @llvm.dbg.value(metadata i8* %5, metadata !7524, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i8* %1, metadata !7525, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 %2, metadata !7526, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 %2, metadata !7526, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7529
  %6 = icmp eq i32 %2, 0, !dbg !7532
  br i1 %6, label %18, label %7, !dbg !7533

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7534
  call void @llvm.dbg.value(metadata i8* %9, metadata !7524, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i8* %10, metadata !7525, metadata !DIExpression()), !dbg !7529
  %12 = load i8, i8* %10, align 1, !dbg !7535
  %13 = icmp eq i8 %12, 0, !dbg !7536
  br i1 %13, label %18, label %14, !dbg !7537

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7538
  call void @llvm.dbg.value(metadata i8* %15, metadata !7525, metadata !DIExpression()), !dbg !7529
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7540
  call void @llvm.dbg.value(metadata i8* %16, metadata !7524, metadata !DIExpression()), !dbg !7529
  store i8 %12, i8* %9, align 1, !dbg !7541
  call void @llvm.dbg.value(metadata i32 %11, metadata !7526, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 %11, metadata !7526, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7529
  %17 = icmp eq i32 %11, 0, !dbg !7532
  br i1 %17, label %18, label %7, !dbg !7533, !llvm.loop !7542

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7529
  store i8 0, i8* %19, align 1, !dbg !7544
  ret i8* %0, !dbg !7545
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7546 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7550, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i8* %1, metadata !7551, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32 %2, metadata !7552, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i8* %0, metadata !7553, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i8* %1, metadata !7554, metadata !DIExpression()), !dbg !7555
  %4 = icmp eq i32 %2, 0, !dbg !7556
  br i1 %4, label %31, label %5, !dbg !7558

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7554, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i8* %0, metadata !7553, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32 %2, metadata !7552, metadata !DIExpression()), !dbg !7555
  %6 = add i32 %2, -1, !dbg !7559
  call void @llvm.dbg.value(metadata i32 %6, metadata !7552, metadata !DIExpression()), !dbg !7555
  %7 = icmp eq i32 %6, 0, !dbg !7560
  br i1 %7, label %23, label %8, !dbg !7561

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7562
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7562
  br label %11, !dbg !7562

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7554, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i8* %14, metadata !7553, metadata !DIExpression()), !dbg !7555
  %15 = load i8, i8* %14, align 1, !dbg !7563
  %16 = load i8, i8* %13, align 1, !dbg !7564
  %17 = icmp eq i8 %15, %16, !dbg !7565
  br i1 %17, label %18, label %23, !dbg !7562

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7566
  call void @llvm.dbg.value(metadata i8* %19, metadata !7553, metadata !DIExpression()), !dbg !7555
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7568
  call void @llvm.dbg.value(metadata i8* %20, metadata !7554, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32 %12, metadata !7552, metadata !DIExpression()), !dbg !7555
  %21 = add i32 %12, -1, !dbg !7559
  call void @llvm.dbg.value(metadata i32 %21, metadata !7552, metadata !DIExpression()), !dbg !7555
  %22 = icmp eq i32 %21, 0, !dbg !7560
  br i1 %22, label %23, label %11, !dbg !7561, !llvm.loop !7569

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7555
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7555
  %26 = load i8, i8* %24, align 1, !dbg !7571
  %27 = zext i8 %26 to i32, !dbg !7571
  %28 = load i8, i8* %25, align 1, !dbg !7572
  %29 = zext i8 %28 to i32, !dbg !7572
  %30 = sub nsw i32 %27, %29, !dbg !7573
  br label %31, !dbg !7574

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7555
  ret i32 %32, !dbg !7575
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7576 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7580, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i8* %1, metadata !7581, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i32 %2, metadata !7582, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i8* %0, metadata !7583, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i8* %1, metadata !7584, metadata !DIExpression()), !dbg !7585
  %4 = ptrtoint i8* %0 to i32, !dbg !7586
  %5 = ptrtoint i8* %1 to i32, !dbg !7586
  %6 = sub i32 %4, %5, !dbg !7586
  %7 = icmp ult i32 %6, %2, !dbg !7588
  br i1 %7, label %10, label %8, !dbg !7589

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7584, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i8* %0, metadata !7583, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i32 %2, metadata !7582, metadata !DIExpression()), !dbg !7585
  %9 = icmp eq i32 %2, 0, !dbg !7590
  br i1 %9, label %26, label %17, !dbg !7592

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7582, metadata !DIExpression()), !dbg !7585
  %12 = add i32 %11, -1, !dbg !7593
  call void @llvm.dbg.value(metadata i32 %12, metadata !7582, metadata !DIExpression()), !dbg !7585
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7596
  %14 = load i8, i8* %13, align 1, !dbg !7596
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7597
  store i8 %14, i8* %15, align 1, !dbg !7598
  %16 = icmp eq i32 %12, 0, !dbg !7599
  br i1 %16, label %26, label %10, !dbg !7600, !llvm.loop !7601

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7584, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i8* %19, metadata !7583, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i32 %20, metadata !7582, metadata !DIExpression()), !dbg !7585
  %21 = load i8, i8* %18, align 1, !dbg !7603
  store i8 %21, i8* %19, align 1, !dbg !7605
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7606
  call void @llvm.dbg.value(metadata i8* %22, metadata !7583, metadata !DIExpression()), !dbg !7585
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7607
  call void @llvm.dbg.value(metadata i8* %23, metadata !7584, metadata !DIExpression()), !dbg !7585
  %24 = add i32 %20, -1, !dbg !7608
  call void @llvm.dbg.value(metadata i32 %24, metadata !7582, metadata !DIExpression()), !dbg !7585
  %25 = icmp eq i32 %24, 0, !dbg !7590
  br i1 %25, label %26, label %17, !dbg !7592, !llvm.loop !7609

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7611
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7612 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7618, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i8* %1, metadata !7619, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i32 %2, metadata !7620, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i8* %0, metadata !7621, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i8* %1, metadata !7622, metadata !DIExpression()), !dbg !7623
  %4 = icmp eq i32 %2, 0, !dbg !7624
  br i1 %4, label %14, label %5, !dbg !7625

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7622, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i8* %7, metadata !7621, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i32 %8, metadata !7620, metadata !DIExpression()), !dbg !7623
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7626
  call void @llvm.dbg.value(metadata i8* %9, metadata !7622, metadata !DIExpression()), !dbg !7623
  %10 = load i8, i8* %6, align 1, !dbg !7628
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7629
  call void @llvm.dbg.value(metadata i8* %11, metadata !7621, metadata !DIExpression()), !dbg !7623
  store i8 %10, i8* %7, align 1, !dbg !7630
  %12 = add i32 %8, -1, !dbg !7631
  call void @llvm.dbg.value(metadata i32 %12, metadata !7620, metadata !DIExpression()), !dbg !7623
  %13 = icmp eq i32 %12, 0, !dbg !7624
  br i1 %13, label %14, label %5, !dbg !7625, !llvm.loop !7632

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7634
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7635 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7639, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i32 %1, metadata !7640, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i32 %2, metadata !7641, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i8* %0, metadata !7642, metadata !DIExpression()), !dbg !7644
  %4 = trunc i32 %1 to i8, !dbg !7645
  call void @llvm.dbg.value(metadata i8 %4, metadata !7643, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i32 %2, metadata !7641, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i8* %0, metadata !7642, metadata !DIExpression()), !dbg !7644
  %5 = icmp eq i32 %2, 0, !dbg !7646
  br i1 %5, label %12, label %6, !dbg !7647

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7641, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i8* %8, metadata !7642, metadata !DIExpression()), !dbg !7644
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7648
  call void @llvm.dbg.value(metadata i8* %9, metadata !7642, metadata !DIExpression()), !dbg !7644
  store i8 %4, i8* %8, align 1, !dbg !7650
  %10 = add i32 %7, -1, !dbg !7651
  call void @llvm.dbg.value(metadata i32 %10, metadata !7641, metadata !DIExpression()), !dbg !7644
  %11 = icmp eq i32 %10, 0, !dbg !7646
  br i1 %11, label %12, label %6, !dbg !7647, !llvm.loop !7652

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7654
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7655 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7659, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.value(metadata i32 %1, metadata !7660, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.value(metadata i32 %2, metadata !7661, metadata !DIExpression()), !dbg !7665
  %4 = icmp eq i32 %2, 0, !dbg !7666
  br i1 %4, label %17, label %5, !dbg !7667

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7668

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7669
  call void @llvm.dbg.value(metadata i8* %9, metadata !7662, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %8, metadata !7661, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.value(metadata i8* %9, metadata !7662, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7669
  %10 = load i8, i8* %9, align 1, !dbg !7670
  %11 = icmp eq i8 %10, %6, !dbg !7673
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7674
  call void @llvm.dbg.value(metadata i8* %12, metadata !7662, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %13, metadata !7661, metadata !DIExpression()), !dbg !7665
  br i1 %15, label %16, label %7, !dbg !7674, !llvm.loop !7675

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7677

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7665
  ret i8* %19, !dbg !7678
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7679 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7681, metadata !DIExpression()), !dbg !7682
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !7683
  ret void, !dbg !7684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7689, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i32 %1, metadata !7690, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7691, metadata !DIExpression()), !dbg !7695
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7696
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7696
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7696
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7692, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i32 %0, metadata !7694, metadata !DIExpression()), !dbg !7695
  %7 = icmp slt i32 %0, %1, !dbg !7697
  br i1 %7, label %8, label %22, !dbg !7700

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7694, metadata !DIExpression()), !dbg !7695
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !7701
  %11 = icmp eq i32 %10, 0, !dbg !7701
  br i1 %11, label %19, label %12, !dbg !7704

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !7705
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7707
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7707
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7709
  br i1 %15, label %19, label %16, !dbg !7710

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7711
  %18 = load i8*, i8** %17, align 4, !dbg !7711
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !7712
  br label %19, !dbg !7713

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7714
  call void @llvm.dbg.value(metadata i32 %20, metadata !7694, metadata !DIExpression()), !dbg !7695
  %21 = icmp eq i32 %20, %1, !dbg !7697
  br i1 %21, label %22, label %8, !dbg !7700, !llvm.loop !7715

22:                                               ; preds = %19, %3
  ret void, !dbg !7717
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !7718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7720, metadata !DIExpression()), !dbg !7721
  %2 = shl nuw i32 1, %0, !dbg !7722
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !7725
  ret i32 %3, !dbg !7726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !7727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7729, metadata !DIExpression()), !dbg !7730
  %2 = shl nuw i32 1, %0, !dbg !7731
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !7734
  ret void, !dbg !7735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7739, metadata !DIExpression()), !dbg !7740
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7741
  ret void, !dbg !7742
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7745, metadata !DIExpression()), !dbg !7746
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7747
  %3 = and i32 %2, %0, !dbg !7747
  %4 = icmp eq i32 %3, %0, !dbg !7748
  %5 = zext i1 %4 to i32, !dbg !7748
  ret i32 %5, !dbg !7749
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7750 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7752, metadata !DIExpression()), !dbg !7753
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !7754
  ret void, !dbg !7755
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7756 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7758, metadata !DIExpression()), !dbg !7759
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !7760
  ret void, !dbg !7761
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7762 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7764, metadata !DIExpression()), !dbg !7765
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !7766
  ret void, !dbg !7767
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7770, metadata !DIExpression()), !dbg !7771
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !7772
  ret void, !dbg !7773
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7774 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7776, metadata !DIExpression()), !dbg !7777
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !7778
  ret void, !dbg !7779
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7780 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7782, metadata !DIExpression()), !dbg !7783
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !7784
  ret void, !dbg !7785
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7786 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7788, metadata !DIExpression()), !dbg !7789
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !7790
  ret void, !dbg !7791
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7794, metadata !DIExpression()), !dbg !7795
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !7796
  ret void, !dbg !7797
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7798 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7800, metadata !DIExpression()), !dbg !7801
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !7802
  ret void, !dbg !7803
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7804 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7806, metadata !DIExpression()), !dbg !7807
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !7808
  ret void, !dbg !7809
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7812, metadata !DIExpression()), !dbg !7813
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !7814
  ret i32 0, !dbg !7815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !728 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !732, metadata !DIExpression()), !dbg !7816
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !7817
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !7819
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !7821
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !7823
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !7825
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !7827
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !7829
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !7831
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !7833
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !7835
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !7837
  ret void, !dbg !7839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7842, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 0, metadata !7843, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 undef, metadata !7843, metadata !DIExpression()), !dbg !7844
  %2 = lshr i32 6684671, %0, !dbg !7845
  %3 = and i32 %2, 1, !dbg !7845
  %4 = or i32 %3, %0, !dbg !7847
  %5 = icmp eq i32 %4, 0, !dbg !7847
  br i1 %5, label %6, label %7, !dbg !7847

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.79, i32 0, i32 0), i32 noundef 123) #26, !dbg !7848
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.79, i32 0, i32 0), i32 noundef 123) #26, !dbg !7848
  unreachable, !dbg !7848

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7853
  %9 = load i32, i32* %8, align 4, !dbg !7853
  call void @llvm.dbg.value(metadata i32 %9, metadata !7843, metadata !DIExpression()), !dbg !7844
  %10 = shl nuw i32 1, %0, !dbg !7854
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !7855
  tail call void @arch_irq_enable(i32 noundef %9) #26, !dbg !7856
  ret void, !dbg !7857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7860, metadata !DIExpression()), !dbg !7861
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7862
  %3 = or i32 %2, %0, !dbg !7862
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7862
  ret void, !dbg !7863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !7864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7866, metadata !DIExpression()), !dbg !7867
  %2 = icmp slt i32 %0, 32, !dbg !7868
  br i1 %2, label %3, label %5, !dbg !7870

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7871
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !7873
  br label %5, !dbg !7874

5:                                                ; preds = %1, %3
  ret void, !dbg !7875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7878, metadata !DIExpression()), !dbg !7879
  %2 = xor i32 %0, -1, !dbg !7880
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7880
  %4 = and i32 %3, %2, !dbg !7880
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7880
  ret void, !dbg !7881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !7882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7886, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 %1, metadata !7887, metadata !DIExpression()), !dbg !7888
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7889

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7890
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !7892
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !7893
  br label %11, !dbg !7894

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7895
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !7896
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !7897
  br label %11, !dbg !7898

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7899
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !7900
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !7901
  br label %11, !dbg !7902

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7903
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !7904
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !7905
  br label %11, !dbg !7906

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7910, metadata !DIExpression()), !dbg !7911
  %2 = xor i32 %0, -1, !dbg !7912
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7912
  %4 = and i32 %3, %2, !dbg !7912
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7912
  ret void, !dbg !7913
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7914 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7916, metadata !DIExpression()), !dbg !7917
  %2 = xor i32 %0, -1, !dbg !7918
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7918
  %4 = and i32 %3, %2, !dbg !7918
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7918
  ret void, !dbg !7919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7922, metadata !DIExpression()), !dbg !7923
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7924
  %3 = or i32 %2, %0, !dbg !7924
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7924
  ret void, !dbg !7925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7928, metadata !DIExpression()), !dbg !7929
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7930
  %3 = or i32 %2, %0, !dbg !7930
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7930
  ret void, !dbg !7931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #10 !dbg !7932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7936, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7937, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i8* %2, metadata !7938, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7939, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7941, metadata !DIExpression()), !dbg !7942
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7943
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7943
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7945
  br i1 %6, label %7, label %9, !dbg !7946

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7947
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7948
  store i8* %2, i8** %8, align 4, !dbg !7949
  br label %9, !dbg !7950

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7942
  ret i32 %10, !dbg !7951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !7952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7954, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7955, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7956, metadata !DIExpression()), !dbg !7957
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7958
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7959
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7960
  store i8* null, i8** %3, align 4, !dbg !7961
  ret void, !dbg !7962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !7963 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7965, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata i8* %1, metadata !7966, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata i8* %1, metadata !7967, metadata !DIExpression()), !dbg !7970
  %3 = bitcast i8* %1 to i32*, !dbg !7971
  %4 = load i32, i32* %3, align 4, !dbg !7971
  %5 = add i32 %4, -169, !dbg !7971
  %6 = icmp ult i32 %5, -121, !dbg !7971
  br i1 %6, label %15, label %7, !dbg !7973

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7974
  %9 = inttoptr i32 %8 to i32*, !dbg !7975
  call void @llvm.dbg.value(metadata i32* %9, metadata !7968, metadata !DIExpression()), !dbg !7970
  %10 = load volatile i32, i32* %9, align 4, !dbg !7976
  call void @llvm.dbg.value(metadata i32 %10, metadata !7969, metadata !DIExpression()), !dbg !7970
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7977
  %12 = bitcast i8* %11 to i32*, !dbg !7977
  %13 = load i32, i32* %12, align 4, !dbg !7977
  %14 = or i32 %13, %10, !dbg !7978
  call void @llvm.dbg.value(metadata i32 %14, metadata !7969, metadata !DIExpression()), !dbg !7970
  store volatile i32 %14, i32* %9, align 4, !dbg !7979
  br label %15, !dbg !7980

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7970
  ret i32 %16, !dbg !7981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !7982 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7984, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata i8* %1, metadata !7985, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata i8* %1, metadata !7986, metadata !DIExpression()), !dbg !7989
  %3 = bitcast i8* %1 to i32*, !dbg !7990
  %4 = load i32, i32* %3, align 4, !dbg !7990
  %5 = add i32 %4, -169, !dbg !7990
  %6 = icmp ult i32 %5, -121, !dbg !7990
  br i1 %6, label %16, label %7, !dbg !7992

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7993
  %9 = inttoptr i32 %8 to i32*, !dbg !7994
  call void @llvm.dbg.value(metadata i32* %9, metadata !7987, metadata !DIExpression()), !dbg !7989
  %10 = load volatile i32, i32* %9, align 4, !dbg !7995
  call void @llvm.dbg.value(metadata i32 %10, metadata !7988, metadata !DIExpression()), !dbg !7989
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7996
  %12 = bitcast i8* %11 to i32*, !dbg !7996
  %13 = load i32, i32* %12, align 4, !dbg !7996
  %14 = xor i32 %13, -1, !dbg !7997
  %15 = and i32 %10, %14, !dbg !7998
  call void @llvm.dbg.value(metadata i32 %15, metadata !7988, metadata !DIExpression()), !dbg !7989
  store volatile i32 %15, i32* %9, align 4, !dbg !7999
  br label %16, !dbg !8000

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7989
  ret i32 %17, !dbg !8001
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8002 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8004, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %1, metadata !8005, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32* %2, metadata !8006, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %1, metadata !8007, metadata !DIExpression()), !dbg !8012
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8013
  call void @llvm.dbg.value(metadata i32 %4, metadata !8008, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 undef, metadata !8009, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 undef, metadata !8010, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 %4, metadata !8011, metadata !DIExpression()), !dbg !8012
  %5 = bitcast i8* %1 to i32*, !dbg !8014
  %6 = load i32, i32* %5, align 4, !dbg !8014
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !8015

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !8016
  call void @llvm.dbg.value(metadata i32 %8, metadata !8009, metadata !DIExpression()), !dbg !8012
  br label %16, !dbg !8017

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !8019
  call void @llvm.dbg.value(metadata i32 %10, metadata !8010, metadata !DIExpression()), !dbg !8012
  br label %16, !dbg !8020

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #26, !dbg !8021
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #24, !dbg !8022
  br label %16, !dbg !8023

14:                                               ; preds = %3
  br label %16, !dbg !8024

15:                                               ; preds = %3
  br label %16, !dbg !8025

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !8026
  br label %18, !dbg !8027

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !8012
  ret i32 %19, !dbg !8027
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8030, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i8* %1, metadata !8031, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i8* %2, metadata !8032, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i8* %1, metadata !8033, metadata !DIExpression()), !dbg !8038
  %4 = bitcast i8* %1 to i32*, !dbg !8039
  %5 = load i32, i32* %4, align 4, !dbg !8039
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %6, metadata !8037, metadata !DIExpression()), !dbg !8038
  %7 = icmp slt i32 %6, 0, !dbg !8041
  br i1 %7, label %22, label %8, !dbg !8043

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8033, metadata !DIExpression()), !dbg !8038
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8044
  %10 = bitcast i8* %9 to i32*, !dbg !8044
  %11 = load i32, i32* %10, align 4, !dbg !8044
  %12 = lshr i32 %11, 16, !dbg !8044
  %13 = and i32 %12, 7, !dbg !8044
  %14 = lshr i32 %11, 8, !dbg !8045
  %15 = and i32 %14, 31, !dbg !8045
  %16 = shl i32 %13, %15, !dbg !8046
  call void @llvm.dbg.value(metadata i32 %16, metadata !8036, metadata !DIExpression()), !dbg !8038
  %17 = and i32 %11, 255, !dbg !8047
  %18 = or i32 %17, 1073887232, !dbg !8048
  %19 = inttoptr i32 %18 to i32*, !dbg !8049
  call void @llvm.dbg.value(metadata i32* %19, metadata !8034, metadata !DIExpression()), !dbg !8038
  %20 = load volatile i32, i32* %19, align 4, !dbg !8050
  call void @llvm.dbg.value(metadata i32 %20, metadata !8035, metadata !DIExpression()), !dbg !8038
  %21 = or i32 %16, %20, !dbg !8051
  call void @llvm.dbg.value(metadata i32 %21, metadata !8035, metadata !DIExpression()), !dbg !8038
  store volatile i32 %21, i32* %19, align 4, !dbg !8052
  br label %22, !dbg !8053

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8038
  ret i32 %23, !dbg !8054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8059, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.value(metadata i32 0, metadata !8060, metadata !DIExpression()), !dbg !8061
  %2 = add i32 %0, -1, !dbg !8062
  %3 = icmp ult i32 %2, 6, !dbg !8062
  br i1 %3, label %4, label %7, !dbg !8062

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8062
  %6 = load i32, i32* %5, align 4, !dbg !8062
  call void @llvm.dbg.value(metadata i32 %6, metadata !8060, metadata !DIExpression()), !dbg !8061
  br label %7, !dbg !8063

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8061
  ret i32 %8, !dbg !8064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8069, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 %1, metadata !8070, metadata !DIExpression()), !dbg !8071
  %3 = udiv i32 %0, %1, !dbg !8072
  ret i32 %3, !dbg !8073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #4 !dbg !8074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8078, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 16, metadata !8079, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 336, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 4, metadata !8081, metadata !DIExpression()), !dbg !8082
  %2 = mul i32 %0, 336, !dbg !8083
  %3 = lshr i32 %2, 6, !dbg !8084
  ret i32 %3, !dbg !8085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8086 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8088, metadata !DIExpression()), !dbg !8091
  tail call void @config_enable_default_clocks() #26, !dbg !8092
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !8093
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8093
  %4 = lshr i32 %3, 4, !dbg !8093
  %5 = and i32 %4, 15, !dbg !8093
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8093
  %7 = load i8, i8* %6, align 1, !dbg !8093
  %8 = zext i8 %7 to i32, !dbg !8093
  %9 = lshr i32 %2, %8, !dbg !8093
  call void @llvm.dbg.value(metadata i32 %9, metadata !8089, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8090, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8091
  %10 = icmp ult i32 %9, 84000000, !dbg !8094
  br i1 %10, label %11, label %13, !dbg !8096

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !8097
  br label %13, !dbg !8099

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8100
  tail call fastcc void @set_up_plls() #24, !dbg !8101
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8102
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8105
  br label %14, !dbg !8106

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8107
  %16 = icmp eq i32 %15, 8, !dbg !8108
  br i1 %16, label %17, label %14, !dbg !8106, !llvm.loop !8109

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8111
  br i1 %18, label %19, label %21, !dbg !8113

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !8114
  br label %21, !dbg !8116

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8117
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8118
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8119
  ret i32 0, !dbg !8120
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8121 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8123
  %2 = and i32 %1, 240, !dbg !8123
  ret i32 %2, !dbg !8124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8125 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8126
  %2 = icmp eq i32 %1, 1, !dbg !8130
  br i1 %2, label %7, label %3, !dbg !8131

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8132
  br label %4, !dbg !8134

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8135
  %6 = icmp eq i32 %5, 1, !dbg !8136
  br i1 %6, label %7, label %4, !dbg !8134, !llvm.loop !8137

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8139
  br label %8, !dbg !8142

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8143
  %10 = icmp eq i32 %9, 1, !dbg !8144
  br i1 %10, label %11, label %8, !dbg !8142, !llvm.loop !8145

11:                                               ; preds = %8
  ret void, !dbg !8147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8148 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8149
  %2 = icmp eq i32 %1, 8, !dbg !8151
  br i1 %2, label %3, label %4, !dbg !8152

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8153
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8155
  br label %4, !dbg !8156

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8157
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8158
  %6 = and i32 %5, -196609, !dbg !8158
  %7 = or i32 %6, 65536, !dbg !8158
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8158
  tail call void @config_pll_sysclock() #26, !dbg !8159
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8160
  br label %8, !dbg !8161

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8162
  %10 = icmp eq i32 %9, 1, !dbg !8163
  br i1 %10, label %11, label %8, !dbg !8161, !llvm.loop !8164

11:                                               ; preds = %8
  ret void, !dbg !8166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8167 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8169, metadata !DIExpression()), !dbg !8170
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8171
  %2 = and i32 %1, -241, !dbg !8171
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8171
  ret void, !dbg !8172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8175, metadata !DIExpression()), !dbg !8176
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8177
  %3 = and i32 %2, -4, !dbg !8177
  %4 = or i32 %3, %0, !dbg !8177
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8177
  ret void, !dbg !8178
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8179 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8180
  %2 = and i32 %1, 12, !dbg !8180
  ret i32 %2, !dbg !8181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8182 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8184, metadata !DIExpression()), !dbg !8185
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8186
  %2 = and i32 %1, -7169, !dbg !8186
  %3 = or i32 %2, 4096, !dbg !8186
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8186
  ret void, !dbg !8187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8188 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8190, metadata !DIExpression()), !dbg !8191
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8192
  %2 = and i32 %1, -57345, !dbg !8192
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8192
  ret void, !dbg !8193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8194 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8195
  %2 = icmp eq i32 %1, 1, !dbg !8197
  br i1 %2, label %7, label %3, !dbg !8198

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8199
  br label %4, !dbg !8201

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8202
  %6 = icmp eq i32 %5, 1, !dbg !8203
  br i1 %6, label %7, label %4, !dbg !8201, !llvm.loop !8204

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8206
  br label %8, !dbg !8207

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8208
  %10 = icmp eq i32 %9, 0, !dbg !8209
  br i1 %10, label %11, label %8, !dbg !8207, !llvm.loop !8210

11:                                               ; preds = %8
  ret void, !dbg !8212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8213 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8214
  %2 = and i32 %1, -16777217, !dbg !8214
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8214
  ret void, !dbg !8215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8216 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8217
  %2 = or i32 %1, 16777216, !dbg !8217
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8217
  ret void, !dbg !8218
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8219 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8220
  %2 = lshr i32 %1, 25, !dbg !8221
  %3 = and i32 %2, 1, !dbg !8221
  ret i32 %3, !dbg !8222
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8223 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8224
  %2 = lshr i32 %1, 1, !dbg !8225
  %3 = and i32 %2, 1, !dbg !8225
  ret i32 %3, !dbg !8226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8227 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8228
  %2 = or i32 %1, 1, !dbg !8228
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8228
  ret void, !dbg !8229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8230 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8231
  %2 = or i32 %1, 1, !dbg !8231
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8231
  ret void, !dbg !8232
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8233 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8234
  %2 = lshr i32 %1, 1, !dbg !8235
  %3 = and i32 %2, 1, !dbg !8235
  ret i32 %3, !dbg !8236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8237 {
  ret i32 16000000, !dbg !8239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8242 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8243
  ret void, !dbg !8244
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8245 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8249, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i32 16, metadata !8250, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i32 336, metadata !8251, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i32 65536, metadata !8252, metadata !DIExpression()), !dbg !8253
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8254
  %2 = and i32 %1, -4227072, !dbg !8254
  %3 = or i32 %2, 21520, !dbg !8254
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8254
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8255
  %5 = and i32 %4, -196609, !dbg !8255
  %6 = or i32 %5, 65536, !dbg !8255
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8255
  ret void, !dbg !8256
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #16 !dbg !8257 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8258
  ret void, !dbg !8259
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #16 !dbg !8260 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8263, metadata !DIExpression()), !dbg !8265
  %2 = bitcast i32* %1 to i8*, !dbg !8266
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8266
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8264, metadata !DIExpression()), !dbg !8267
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8268
  %4 = or i32 %3, 268435456, !dbg !8268
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8268
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8269
  %6 = and i32 %5, 268435456, !dbg !8269
  store volatile i32 %6, i32* %1, align 4, !dbg !8270
  %7 = load volatile i32, i32* %1, align 4, !dbg !8271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8272
  ret void, !dbg !8272
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8273 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8275, metadata !DIExpression()), !dbg !8276
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8277
  br i1 %2, label %3, label %4, !dbg !8279

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8280
  br label %4, !dbg !8281

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8276
  ret i32 %5, !dbg !8282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8283 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8288, metadata !DIExpression()), !dbg !8289
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8290, !srcloc !8292
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !8293
  ret i1 %1, !dbg !8294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8295 {
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8296
  ret void, !dbg !8297
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8300, metadata !DIExpression()), !dbg !8301
  %2 = icmp eq i32 %0, 10, !dbg !8302
  br i1 %2, label %3, label %4, !dbg !8304

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8305
  br label %4, !dbg !8307

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8308
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8309
  ret i32 %0, !dbg !8310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8311 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8314, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.value(metadata i8 %0, metadata !8315, metadata !DIExpression()), !dbg !8316
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8317, !srcloc !8319
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8320
  ret void, !dbg !8321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8322 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8324, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i8 %0, metadata !8325, metadata !DIExpression()), !dbg !8327
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8328
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8326, metadata !DIExpression()), !dbg !8327
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8329
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8329
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #26, !dbg !8330
  ret void, !dbg !8331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8332 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8334, metadata !DIExpression()), !dbg !8335
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8336
  ret i1 %1, !dbg !8337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8338 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8387, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8388, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8389, metadata !DIExpression()), !dbg !8390
  ret void, !dbg !8391
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8392 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8394, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i8 %1, metadata !8395, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 %2, metadata !8396, metadata !DIExpression()), !dbg !8399
  %5 = bitcast i32* %4 to i8*, !dbg !8400
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8400
  call void @llvm.dbg.value(metadata i32* %4, metadata !8398, metadata !DIExpression(DW_OP_deref)), !dbg !8399
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !8401
  call void @llvm.dbg.value(metadata i32 %6, metadata !8397, metadata !DIExpression()), !dbg !8399
  %7 = icmp eq i32 %6, 0, !dbg !8402
  br i1 %7, label %8, label %31, !dbg !8404

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8397, metadata !DIExpression()), !dbg !8399
  %9 = and i32 %2, 131072, !dbg !8405
  %10 = icmp eq i32 %9, 0, !dbg !8407
  br i1 %10, label %28, label %11, !dbg !8408

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8409
  %13 = icmp eq i32 %12, 0, !dbg !8412
  br i1 %13, label %18, label %14, !dbg !8413

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8414
  %16 = shl nuw i32 1, %15, !dbg !8414
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !8416
  br label %25, !dbg !8417

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8418
  %20 = icmp eq i32 %19, 0, !dbg !8420
  %21 = zext i8 %1 to i32, !dbg !8399
  br i1 %20, label %25, label %22, !dbg !8421

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8422
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !8424
  br label %25, !dbg !8425

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8426
  %27 = load i32, i32* %4, align 4, !dbg !8427
  call void @llvm.dbg.value(metadata i32 %30, metadata !8398, metadata !DIExpression()), !dbg !8399
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !8428
  br label %31, !dbg !8429

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8426
  %30 = load i32, i32* %4, align 4, !dbg !8427
  call void @llvm.dbg.value(metadata i32 %30, metadata !8398, metadata !DIExpression()), !dbg !8399
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !8428
  call void @llvm.dbg.value(metadata i32 0, metadata !8397, metadata !DIExpression()), !dbg !8399
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8430
  ret i32 %6, !dbg !8430
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !8431 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8435, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata i32* %1, metadata !8436, metadata !DIExpression()), !dbg !8440
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8441
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8441
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8441
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8437, metadata !DIExpression()), !dbg !8440
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8442
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8442
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8442
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8439, metadata !DIExpression()), !dbg !8440
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !8443
  store i32 %9, i32* %1, align 4, !dbg !8444
  ret i32 0, !dbg !8445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !8446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8448, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32 %1, metadata !8449, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32 %2, metadata !8450, metadata !DIExpression()), !dbg !8454
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8455
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8455
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8455
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8451, metadata !DIExpression()), !dbg !8454
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8456
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8456
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8456
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8452, metadata !DIExpression()), !dbg !8454
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !8457
  call void @llvm.dbg.value(metadata i32 %10, metadata !8453, metadata !DIExpression()), !dbg !8454
  %11 = xor i32 %1, -1, !dbg !8458
  %12 = and i32 %10, %11, !dbg !8459
  %13 = and i32 %2, %1, !dbg !8460
  %14 = or i32 %12, %13, !dbg !8461
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !8462
  ret i32 0, !dbg !8463
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8466, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata i32 %1, metadata !8467, metadata !DIExpression()), !dbg !8470
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8471
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8471
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8471
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8468, metadata !DIExpression()), !dbg !8470
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8472
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8472
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8472
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8469, metadata !DIExpression()), !dbg !8470
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8473
  store volatile i32 %1, i32* %9, align 4, !dbg !8473
  ret i32 0, !dbg !8474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8477, metadata !DIExpression()), !dbg !8481
  call void @llvm.dbg.value(metadata i32 %1, metadata !8478, metadata !DIExpression()), !dbg !8481
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8482
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8482
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8482
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8479, metadata !DIExpression()), !dbg !8481
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8483
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8483
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8483
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8480, metadata !DIExpression()), !dbg !8481
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !8484
  ret i32 0, !dbg !8485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8486 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8488, metadata !DIExpression()), !dbg !8492
  call void @llvm.dbg.value(metadata i32 %1, metadata !8489, metadata !DIExpression()), !dbg !8492
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8493
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8493
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8493
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8490, metadata !DIExpression()), !dbg !8492
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8494
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8494
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8494
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8491, metadata !DIExpression()), !dbg !8492
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8495
  %10 = load volatile i32, i32* %9, align 4, !dbg !8495
  %11 = xor i32 %10, %1, !dbg !8495
  store volatile i32 %11, i32* %9, align 4, !dbg !8495
  ret i32 0, !dbg !8496
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8497 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8499, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata i8 %1, metadata !8500, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata i32 %2, metadata !8501, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata i32 %3, metadata !8502, metadata !DIExpression()), !dbg !8509
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8510
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8510
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8510
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8503, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata i8* undef, metadata !8504, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata i32 0, metadata !8506, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata i32 0, metadata !8507, metadata !DIExpression()), !dbg !8509
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8511

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8512
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !8516
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8517
  %12 = load i32, i32* %11, align 4, !dbg !8517
  %13 = icmp eq i32 %10, %12, !dbg !8518
  br i1 %13, label %14, label %29, !dbg !8519

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !8520
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !8522
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !8523
  br label %29, !dbg !8524

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8525
  %17 = load i8*, i8** %16, align 4, !dbg !8525
  call void @llvm.dbg.value(metadata i8* %17, metadata !8504, metadata !DIExpression()), !dbg !8509
  %18 = zext i8 %1 to i32, !dbg !8526
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !8528
  %20 = icmp eq i32 %19, 0, !dbg !8529
  br i1 %20, label %21, label %29, !dbg !8530

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8531
  %23 = load i32, i32* %22, align 4, !dbg !8531
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !8532
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8533

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8506, metadata !DIExpression()), !dbg !8509
  br label %27, !dbg !8534

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8506, metadata !DIExpression()), !dbg !8509
  br label %27, !dbg !8536

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8506, metadata !DIExpression()), !dbg !8509
  br label %27, !dbg !8537

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8509
  call void @llvm.dbg.value(metadata i32 %28, metadata !8506, metadata !DIExpression()), !dbg !8509
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !8538
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !8539
  br label %29, !dbg !8539

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8509
  call void @llvm.dbg.value(metadata i32 %30, metadata !8507, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.label(metadata !8508), !dbg !8540
  ret i32 %30, !dbg !8541
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !8542 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8544, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8545, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata i1 %2, metadata !8546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8548
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8549
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8549
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8549
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8547, metadata !DIExpression()), !dbg !8548
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8550
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !8551
  ret i32 %8, !dbg !8552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !8553 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8559, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i1 %2, metadata !8561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8562
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !8563
  br i1 %4, label %5, label %6, !dbg !8566

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #26, !dbg !8567
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0)) #26, !dbg !8567
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #26, !dbg !8567
  unreachable, !dbg !8567

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !8569
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !8569
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !8569
  br i1 %9, label %10, label %11, !dbg !8572

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #26, !dbg !8573
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #26, !dbg !8573
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #26, !dbg !8573
  unreachable, !dbg !8573

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !8575
  br i1 %12, label %18, label %13, !dbg !8577

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8578
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !8581
  %16 = or i1 %15, %2, !dbg !8582
  %17 = select i1 %16, i32 0, i32 -22, !dbg !8582
  br i1 %2, label %19, label %21, !dbg !8582

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !8583

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8584
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !8587
  br label %21, !dbg !8588

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !8562
  ret i32 %22, !dbg !8589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8590 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8594, metadata !DIExpression()), !dbg !8595
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8596
  %3 = icmp eq %struct._snode* %2, null, !dbg !8596
  ret i1 %3, !dbg !8596
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !8597 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8601, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8602, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8603, metadata !DIExpression()), !dbg !8605
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8606
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8604, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8603, metadata !DIExpression()), !dbg !8605
  %4 = icmp eq %struct._snode* %3, null, !dbg !8608
  br i1 %4, label %15, label %5, !dbg !8606

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8604, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8603, metadata !DIExpression()), !dbg !8605
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8610
  br i1 %6, label %9, label %11, !dbg !8613

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8604, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8603, metadata !DIExpression()), !dbg !8605
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8610
  br i1 %8, label %9, label %11, !dbg !8613, !llvm.loop !8614

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !8615
  br label %15, !dbg !8615

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8604, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8603, metadata !DIExpression()), !dbg !8605
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !8608
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8604, metadata !DIExpression()), !dbg !8605
  %14 = icmp eq %struct._snode* %13, null, !dbg !8608
  br i1 %14, label %15, label %7, !dbg !8606, !llvm.loop !8614

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !8618 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8622, metadata !DIExpression()), !dbg !8624
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8623, metadata !DIExpression()), !dbg !8624
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8625
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !8625
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !8625
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8626
  %5 = icmp eq %struct._snode* %4, null, !dbg !8626
  br i1 %5, label %6, label %8, !dbg !8625

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8628
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !8628
  br label %8, !dbg !8628

8:                                                ; preds = %6, %2
  ret void, !dbg !8625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8630 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8634, metadata !DIExpression()), !dbg !8635
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8636
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8636
  ret %struct._snode* %3, !dbg !8637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8638 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8642, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8643, metadata !DIExpression()), !dbg !8644
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8645
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8646
  ret void, !dbg !8647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8648 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8650, metadata !DIExpression()), !dbg !8652
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8651, metadata !DIExpression()), !dbg !8652
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8653
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8654
  ret void, !dbg !8655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8656 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8658, metadata !DIExpression()), !dbg !8659
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8660
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8660
  ret %struct._snode* %3, !dbg !8661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8662 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8664, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8665, metadata !DIExpression()), !dbg !8666
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8667
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8668
  ret void, !dbg !8669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !8670 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8674, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8675, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8676, metadata !DIExpression()), !dbg !8677
  %4 = icmp eq %struct._snode* %1, null, !dbg !8678
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !8680
  br i1 %4, label %6, label %11, !dbg !8681

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !8682
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8684
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8684
  br i1 %8, label %9, label %15, !dbg !8682

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8686
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !8686
  br label %15, !dbg !8686

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !8688
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8690
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8690
  br i1 %13, label %14, label %15, !dbg !8688

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !8692
  br label %15, !dbg !8692

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !8681
  ret void, !dbg !8681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !8694 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8698, metadata !DIExpression()), !dbg !8699
  %2 = icmp eq %struct._snode* %0, null, !dbg !8700
  br i1 %2, label %5, label %3, !dbg !8700

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !8700
  br label %5, !dbg !8700

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8700
  ret %struct._snode* %6, !dbg !8700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8701 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8703, metadata !DIExpression()), !dbg !8704
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !8705
  ret %struct._snode* %2, !dbg !8705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8706 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8708, metadata !DIExpression()), !dbg !8709
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8710
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8710
  ret %struct._snode* %3, !dbg !8711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8714, metadata !DIExpression()), !dbg !8717
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !8718, !range !8719
  call void @llvm.dbg.value(metadata i32 %2, metadata !8715, metadata !DIExpression()), !dbg !8717
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !8720
  call void @llvm.dbg.value(metadata i32 %3, metadata !8716, metadata !DIExpression()), !dbg !8717
  ret i32 %3, !dbg !8721
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8724, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %1, metadata !8725, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %1, metadata !8726, metadata !DIExpression()), !dbg !8727
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8728
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8728
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8729
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8729
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8729
  %8 = shl nuw i32 1, %0, !dbg !8730
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !8731
  ret void, !dbg !8732
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8733 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8737, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i32 %1, metadata !8738, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8739, metadata !DIExpression()), !dbg !8743
  %4 = bitcast i64* %3 to i8*, !dbg !8744
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8744
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8741, metadata !DIExpression()), !dbg !8743
  store i64 70368744177732, i64* %3, align 8, !dbg !8745
  call void @llvm.dbg.value(metadata i64* %3, metadata !8741, metadata !DIExpression(DW_OP_deref)), !dbg !8743
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %5, metadata !8742, metadata !DIExpression()), !dbg !8743
  %6 = icmp eq i32 %5, 0, !dbg !8747
  br i1 %6, label %7, label %8, !dbg !8749

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !8750
  br label %8, !dbg !8751

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8752
  ret void, !dbg !8752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8753 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8755, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8* %0, metadata !8756, metadata !DIExpression()), !dbg !8758
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8759
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8757, metadata !DIExpression()), !dbg !8758
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8760
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8760
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #26, !dbg !8761
  ret i32 %5, !dbg !8762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8765, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata i32 %1, metadata !8766, metadata !DIExpression()), !dbg !8768
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !8769
  call void @llvm.dbg.value(metadata i32 %3, metadata !8767, metadata !DIExpression()), !dbg !8768
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !8770
  ret void, !dbg !8771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !8772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8776, metadata !DIExpression()), !dbg !8777
  %2 = sdiv i32 %0, 4, !dbg !8778
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8779
  %6 = add nsw i32 %5, 16, !dbg !8780
  %7 = shl i32 15, %6, !dbg !8781
  %8 = or i32 %7, %2, !dbg !8782
  ret i32 %8, !dbg !8783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8788, metadata !DIExpression()), !dbg !8790
  call void @llvm.dbg.value(metadata i32 %1, metadata !8789, metadata !DIExpression()), !dbg !8790
  %3 = and i32 %1, 255, !dbg !8791
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8791
  %5 = load volatile i32, i32* %4, align 4, !dbg !8791
  %6 = lshr i32 %1, 16, !dbg !8791
  %7 = xor i32 %6, -1, !dbg !8791
  %8 = and i32 %5, %7, !dbg !8791
  call void @llvm.dbg.value(metadata i32 %6, metadata !8792, metadata !DIExpression()) #23, !dbg !8796
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !8798, !srcloc !8799
  call void @llvm.dbg.value(metadata i32 %9, metadata !8795, metadata !DIExpression()) #23, !dbg !8796
  call void @llvm.dbg.value(metadata i32 %9, metadata !8800, metadata !DIExpression()) #23, !dbg !8805
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !8807, !range !7123
  %11 = shl i32 %0, %10, !dbg !8791
  %12 = or i32 %11, %8, !dbg !8791
  store volatile i32 %12, i32* %4, align 4, !dbg !8791
  ret void, !dbg !8808
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8809 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8813, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8814, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata i32 %2, metadata !8815, metadata !DIExpression()), !dbg !8818
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8819
  %5 = icmp eq %struct._snode* %4, null, !dbg !8819
  br i1 %5, label %24, label %6, !dbg !8819

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !8821
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8817, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !8816, metadata !DIExpression()), !dbg !8818
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8822
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !8822
  %12 = load i32, i32* %11, align 4, !dbg !8822
  %13 = and i32 %12, %2, !dbg !8826
  %14 = icmp eq i32 %13, 0, !dbg !8826
  br i1 %14, label %22, label %15, !dbg !8827

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8828
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8828
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8828
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !8828
  br i1 %19, label %20, label %21, !dbg !8832

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.91, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #26, !dbg !8833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #26, !dbg !8833
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #26, !dbg !8833
  unreachable, !dbg !8833

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #26, !dbg !8835
  br label %22, !dbg !8836

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8816, metadata !DIExpression()), !dbg !8818
  %23 = icmp eq %struct._snode* %8, null, !dbg !8837
  br i1 %23, label %24, label %6, !dbg !8837

24:                                               ; preds = %22, %3
  ret void, !dbg !8838
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8841, metadata !DIExpression()), !dbg !8842
  %2 = and i32 %0, 255, !dbg !8843
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !8843
  %4 = load volatile i32, i32* %3, align 4, !dbg !8843
  %5 = lshr i32 %0, 16, !dbg !8843
  %6 = and i32 %4, %5, !dbg !8843
  call void @llvm.dbg.value(metadata i32 %5, metadata !8792, metadata !DIExpression()) #23, !dbg !8844
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !8846, !srcloc !8799
  call void @llvm.dbg.value(metadata i32 %7, metadata !8795, metadata !DIExpression()) #23, !dbg !8844
  call void @llvm.dbg.value(metadata i32 %7, metadata !8800, metadata !DIExpression()) #23, !dbg !8847
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8849, !range !7123
  %9 = lshr i32 %6, %8, !dbg !8850
  ret i32 %9, !dbg !8851
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8852 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8857, metadata !DIExpression()), !dbg !8859
  call void @llvm.dbg.value(metadata i32 %1, metadata !8858, metadata !DIExpression()), !dbg !8859
  %3 = shl i32 %1, 16, !dbg !8860
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8860
  store volatile i32 %3, i32* %4, align 4, !dbg !8860
  ret void, !dbg !8861
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !8862 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8866, metadata !DIExpression()), !dbg !8867
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8868
  %3 = load volatile i32, i32* %2, align 4, !dbg !8868
  ret i32 %3, !dbg !8869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8870 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8872, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata i32 %1, metadata !8873, metadata !DIExpression()), !dbg !8874
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8875
  store volatile i32 %1, i32* %3, align 4, !dbg !8875
  ret void, !dbg !8876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !8877 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8879, metadata !DIExpression()), !dbg !8880
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8881
  %3 = load volatile i32, i32* %2, align 4, !dbg !8881
  ret i32 %3, !dbg !8882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #10 !dbg !8883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8887, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata i32* %1, metadata !8888, metadata !DIExpression()), !dbg !8889
  %3 = and i32 %0, 131072, !dbg !8890
  %4 = icmp eq i32 %3, 0, !dbg !8892
  br i1 %4, label %22, label %5, !dbg !8893

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8894
  %6 = and i32 %0, 2, !dbg !8896
  %7 = icmp eq i32 %6, 0, !dbg !8898
  br i1 %7, label %11, label %8, !dbg !8899

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8900
  %10 = icmp eq i32 %9, 0, !dbg !8900
  br i1 %10, label %33, label %11, !dbg !8903

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8904
  store i32 %12, i32* %1, align 4, !dbg !8904
  %13 = and i32 %0, 16, !dbg !8905
  %14 = icmp eq i32 %13, 0, !dbg !8907
  br i1 %14, label %17, label %15, !dbg !8908

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8909
  br label %31, !dbg !8911

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8912
  %19 = icmp eq i32 %18, 0, !dbg !8914
  br i1 %19, label %33, label %20, !dbg !8915

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8916
  br label %31, !dbg !8918

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8919
  %24 = icmp eq i32 %23, 0, !dbg !8921
  br i1 %24, label %31, label %25, !dbg !8922

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8923
  %27 = icmp eq i32 %26, 0, !dbg !8926
  br i1 %27, label %28, label %31, !dbg !8927

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8928
  br label %33, !dbg !8929

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8889
  ret i32 %34, !dbg !8929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8930 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8934, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i32 %1, metadata !8935, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i32 %2, metadata !8936, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i32 %3, metadata !8937, metadata !DIExpression()), !dbg !8945
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8946
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8946
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8946
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8938, metadata !DIExpression()), !dbg !8945
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8947
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8947
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8947
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8939, metadata !DIExpression()), !dbg !8945
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !8948
  call void @llvm.dbg.value(metadata i32 %11, metadata !8940, metadata !DIExpression()), !dbg !8945
  %12 = and i32 %2, 48, !dbg !8949
  call void @llvm.dbg.value(metadata i32 %12, metadata !8941, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i32 %2, metadata !8942, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8945
  call void @llvm.dbg.value(metadata i32 %2, metadata !8943, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8945
  call void @llvm.dbg.value(metadata i32 %2, metadata !8944, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8945
  %13 = lshr i32 %2, 6, !dbg !8950
  %14 = and i32 %13, 1, !dbg !8950
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !8951
  %15 = lshr i32 %2, 7, !dbg !8952
  %16 = and i32 %15, 3, !dbg !8952
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !8953
  %17 = lshr i32 %2, 9, !dbg !8954
  %18 = and i32 %17, 3, !dbg !8954
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !8955
  %19 = icmp eq i32 %12, 32, !dbg !8956
  br i1 %19, label %20, label %24, !dbg !8958

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !8959
  br i1 %21, label %22, label %23, !dbg !8962

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !8963
  br label %24, !dbg !8965

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !8966
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !8968
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !8969
  ret void, !dbg !8970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !8971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8973, metadata !DIExpression()), !dbg !8975
  %2 = shl nuw i32 1, %0, !dbg !8976
  call void @llvm.dbg.value(metadata i32 %2, metadata !8974, metadata !DIExpression()), !dbg !8975
  ret i32 %2, !dbg !8977
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !8978 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8982, metadata !DIExpression()), !dbg !8985
  call void @llvm.dbg.value(metadata i32 %1, metadata !8983, metadata !DIExpression()), !dbg !8985
  call void @llvm.dbg.value(metadata i32 %2, metadata !8984, metadata !DIExpression()), !dbg !8985
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !8986
  %5 = load volatile i32, i32* %4, align 4, !dbg !8986
  %6 = xor i32 %1, -1, !dbg !8986
  %7 = and i32 %5, %6, !dbg !8986
  %8 = mul i32 %2, %1, !dbg !8986
  %9 = or i32 %7, %8, !dbg !8986
  store volatile i32 %9, i32* %4, align 4, !dbg !8986
  ret void, !dbg !8987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8988 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8990, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata i32 %1, metadata !8991, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata i32 %2, metadata !8992, metadata !DIExpression()), !dbg !8993
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !8994
  %5 = load volatile i32, i32* %4, align 4, !dbg !8994
  call void @llvm.dbg.value(metadata i32 %1, metadata !8792, metadata !DIExpression()) #23, !dbg !8995
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !8997, !srcloc !8799
  call void @llvm.dbg.value(metadata i32 %6, metadata !8795, metadata !DIExpression()) #23, !dbg !8995
  call void @llvm.dbg.value(metadata i32 %6, metadata !8800, metadata !DIExpression()) #23, !dbg !8998
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9000, !range !7123
  %8 = shl nuw nsw i32 %7, 1, !dbg !8994
  %9 = shl i32 3, %8, !dbg !8994
  %10 = xor i32 %9, -1, !dbg !8994
  %11 = and i32 %5, %10, !dbg !8994
  call void @llvm.dbg.value(metadata i32 %1, metadata !8792, metadata !DIExpression()) #23, !dbg !9001
  call void @llvm.dbg.value(metadata i32 %6, metadata !8795, metadata !DIExpression()) #23, !dbg !9001
  call void @llvm.dbg.value(metadata i32 %6, metadata !8800, metadata !DIExpression()) #23, !dbg !9003
  %12 = shl i32 %2, %8, !dbg !8994
  %13 = or i32 %11, %12, !dbg !8994
  store volatile i32 %13, i32* %4, align 4, !dbg !8994
  ret void, !dbg !9005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9006 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9008, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.value(metadata i32 %1, metadata !9009, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.value(metadata i32 %2, metadata !9010, metadata !DIExpression()), !dbg !9011
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9012
  %5 = load volatile i32, i32* %4, align 4, !dbg !9012
  call void @llvm.dbg.value(metadata i32 %1, metadata !8792, metadata !DIExpression()) #23, !dbg !9013
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9015, !srcloc !8799
  call void @llvm.dbg.value(metadata i32 %6, metadata !8795, metadata !DIExpression()) #23, !dbg !9013
  call void @llvm.dbg.value(metadata i32 %6, metadata !8800, metadata !DIExpression()) #23, !dbg !9016
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9018, !range !7123
  %8 = shl nuw nsw i32 %7, 1, !dbg !9012
  %9 = shl i32 3, %8, !dbg !9012
  %10 = xor i32 %9, -1, !dbg !9012
  %11 = and i32 %5, %10, !dbg !9012
  call void @llvm.dbg.value(metadata i32 %1, metadata !8792, metadata !DIExpression()) #23, !dbg !9019
  call void @llvm.dbg.value(metadata i32 %6, metadata !8795, metadata !DIExpression()) #23, !dbg !9019
  call void @llvm.dbg.value(metadata i32 %6, metadata !8800, metadata !DIExpression()) #23, !dbg !9021
  %12 = shl i32 %2, %8, !dbg !9012
  %13 = or i32 %11, %12, !dbg !9012
  store volatile i32 %13, i32* %4, align 4, !dbg !9012
  ret void, !dbg !9023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9024 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9026, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata i32 %1, metadata !9027, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata i32 %2, metadata !9028, metadata !DIExpression()), !dbg !9029
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9030
  %5 = load volatile i32, i32* %4, align 4, !dbg !9030
  call void @llvm.dbg.value(metadata i32 %1, metadata !8792, metadata !DIExpression()) #23, !dbg !9031
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9033, !srcloc !8799
  call void @llvm.dbg.value(metadata i32 %6, metadata !8795, metadata !DIExpression()) #23, !dbg !9031
  call void @llvm.dbg.value(metadata i32 %6, metadata !8800, metadata !DIExpression()) #23, !dbg !9034
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9036, !range !7123
  %8 = shl nuw nsw i32 %7, 2, !dbg !9030
  %9 = shl i32 15, %8, !dbg !9030
  %10 = xor i32 %9, -1, !dbg !9030
  %11 = and i32 %5, %10, !dbg !9030
  call void @llvm.dbg.value(metadata i32 %1, metadata !8792, metadata !DIExpression()) #23, !dbg !9037
  call void @llvm.dbg.value(metadata i32 %6, metadata !8795, metadata !DIExpression()) #23, !dbg !9037
  call void @llvm.dbg.value(metadata i32 %6, metadata !8800, metadata !DIExpression()) #23, !dbg !9039
  %12 = shl i32 %2, %8, !dbg !9030
  %13 = or i32 %11, %12, !dbg !9030
  store volatile i32 %13, i32* %4, align 4, !dbg !9030
  ret void, !dbg !9041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9042 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9044, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.value(metadata i32 %1, metadata !9045, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.value(metadata i32 %2, metadata !9046, metadata !DIExpression()), !dbg !9047
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9048
  %5 = load volatile i32, i32* %4, align 4, !dbg !9048
  %6 = lshr i32 %1, 8, !dbg !9048
  call void @llvm.dbg.value(metadata i32 %6, metadata !8792, metadata !DIExpression()) #23, !dbg !9049
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9051, !srcloc !8799
  call void @llvm.dbg.value(metadata i32 %7, metadata !8795, metadata !DIExpression()) #23, !dbg !9049
  call void @llvm.dbg.value(metadata i32 %7, metadata !8800, metadata !DIExpression()) #23, !dbg !9052
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9054, !range !7123
  %9 = shl nuw nsw i32 %8, 2, !dbg !9048
  %10 = shl i32 15, %9, !dbg !9048
  %11 = xor i32 %10, -1, !dbg !9048
  %12 = and i32 %5, %11, !dbg !9048
  call void @llvm.dbg.value(metadata i32 %6, metadata !8792, metadata !DIExpression()) #23, !dbg !9055
  call void @llvm.dbg.value(metadata i32 %7, metadata !8795, metadata !DIExpression()) #23, !dbg !9055
  call void @llvm.dbg.value(metadata i32 %7, metadata !8800, metadata !DIExpression()) #23, !dbg !9057
  %13 = shl i32 %2, %9, !dbg !9048
  %14 = or i32 %12, %13, !dbg !9048
  store volatile i32 %14, i32* %4, align 4, !dbg !9048
  ret void, !dbg !9059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9060 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9062, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %1, metadata !9063, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %2, metadata !9064, metadata !DIExpression()), !dbg !9065
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9066
  %5 = load volatile i32, i32* %4, align 4, !dbg !9066
  call void @llvm.dbg.value(metadata i32 %1, metadata !8792, metadata !DIExpression()) #23, !dbg !9067
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9069, !srcloc !8799
  call void @llvm.dbg.value(metadata i32 %6, metadata !8795, metadata !DIExpression()) #23, !dbg !9067
  call void @llvm.dbg.value(metadata i32 %6, metadata !8800, metadata !DIExpression()) #23, !dbg !9070
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9072, !range !7123
  %8 = shl nuw nsw i32 %7, 1, !dbg !9066
  %9 = shl i32 3, %8, !dbg !9066
  %10 = xor i32 %9, -1, !dbg !9066
  %11 = and i32 %5, %10, !dbg !9066
  call void @llvm.dbg.value(metadata i32 %1, metadata !8792, metadata !DIExpression()) #23, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %6, metadata !8795, metadata !DIExpression()) #23, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %6, metadata !8800, metadata !DIExpression()) #23, !dbg !9075
  %12 = shl i32 %2, %8, !dbg !9066
  %13 = or i32 %11, %12, !dbg !9066
  store volatile i32 %13, i32* %4, align 4, !dbg !9066
  ret void, !dbg !9077
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9078 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9080, metadata !DIExpression()), !dbg !9083
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9084
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9084
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9084
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9081, metadata !DIExpression()), !dbg !9083
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9085
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9086
  %6 = tail call fastcc zeroext i1 @device_is_ready.100() #24, !dbg !9087
  br i1 %6, label %7, label %11, !dbg !9089

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9090
  call void @llvm.dbg.value(metadata i32 %8, metadata !9082, metadata !DIExpression()), !dbg !9083
  %9 = icmp slt i32 %8, 0, !dbg !9091
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9093
  br label %11, !dbg !9093

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9083
  ret i32 %12, !dbg !9094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.100() unnamed_addr #1 !dbg !9095 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9099, metadata !DIExpression()), !dbg !9100
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9101, !srcloc !9103
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.101() #24, !dbg !9104
  ret i1 %1, !dbg !9105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9106 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9110, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata i8 1, metadata !9111, metadata !DIExpression()), !dbg !9115
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9116
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9116
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9116
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9112, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata i32 0, metadata !9113, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9114, metadata !DIExpression()), !dbg !9115
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9117
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9120
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9121
  call void @llvm.dbg.value(metadata i32 %7, metadata !9113, metadata !DIExpression()), !dbg !9115
  ret i32 %7, !dbg !9122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.101() unnamed_addr #1 !dbg !9123 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9125, metadata !DIExpression()), !dbg !9126
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #26, !dbg !9127
  ret i1 %1, !dbg !9128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9129 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9133, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata i32 %1, metadata !9134, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata i32 %2, metadata !9135, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata i32 %3, metadata !9136, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata i32 0, metadata !9137, metadata !DIExpression()), !dbg !9141
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9142
  %5 = icmp eq i32 %3, 17, !dbg !9143
  br i1 %5, label %6, label %14, !dbg !9144

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9145
  call void @llvm.dbg.value(metadata i32 %7, metadata !9138, metadata !DIExpression()), !dbg !9146
  %8 = icmp eq i32 %7, 0, !dbg !9147
  %9 = shl nuw i32 1, %1, !dbg !9149
  br i1 %8, label %12, label %10, !dbg !9150

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9151
  br label %14, !dbg !9153

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9154
  br label %14, !dbg !9157

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9158
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #16 !dbg !9159 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9161, metadata !DIExpression()), !dbg !9165
  call void @llvm.dbg.value(metadata i8* %1, metadata !9162, metadata !DIExpression()), !dbg !9165
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9166
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9166
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9166
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9163, metadata !DIExpression()), !dbg !9165
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9167
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9167
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9169
  %9 = icmp eq i32 %8, 0, !dbg !9169
  br i1 %9, label %12, label %10, !dbg !9170

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9171
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9173
  br label %12, !dbg !9174

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9175
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9177
  %15 = icmp eq i32 %14, 0, !dbg !9177
  br i1 %15, label %19, label %16, !dbg !9178

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9179
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9180
  store i8 %18, i8* %1, align 1, !dbg !9181
  br label %19, !dbg !9182

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9165
  ret i32 %20, !dbg !9183
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9184 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9186, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata i8 %1, metadata !9187, metadata !DIExpression()), !dbg !9190
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9191
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9191
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9191
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9188, metadata !DIExpression()), !dbg !9190
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9192

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9193
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9196
  %10 = icmp eq i32 %9, 0, !dbg !9196
  br i1 %10, label %18, label %11, !dbg !9197

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9198, !srcloc !9205
  call void @llvm.dbg.value(metadata i32 undef, metadata !9201, metadata !DIExpression()) #23, !dbg !9206
  call void @llvm.dbg.value(metadata i32 undef, metadata !9202, metadata !DIExpression()) #23, !dbg !9206
  call void @llvm.dbg.value(metadata i32 undef, metadata !9189, metadata !DIExpression()), !dbg !9190
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9207
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9209
  %15 = icmp eq i32 %14, 0, !dbg !9209
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9198
  br i1 %15, label %17, label %19, !dbg !9210

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9201, metadata !DIExpression()) #23, !dbg !9206
  call void @llvm.dbg.value(metadata i32 %16, metadata !9189, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata i32 undef, metadata !9211, metadata !DIExpression()) #23, !dbg !9214
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9216, !srcloc !9217
  br label %18, !dbg !9218

18:                                               ; preds = %17, %7
  br label %7, !dbg !9193, !llvm.loop !9219

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9198
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9221
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9222
  call void @llvm.dbg.value(metadata i32 %20, metadata !9211, metadata !DIExpression()) #23, !dbg !9223
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9225, !srcloc !9217
  ret void, !dbg !9226
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #16 !dbg !9227 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9229, metadata !DIExpression()), !dbg !9232
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9233
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9233
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9233
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9230, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.value(metadata i32 0, metadata !9231, metadata !DIExpression()), !dbg !9232
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9234
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9234
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9236
  %8 = icmp ne i32 %7, 0, !dbg !9236
  %9 = zext i1 %8 to i32, !dbg !9237
  call void @llvm.dbg.value(metadata i32 %9, metadata !9231, metadata !DIExpression()), !dbg !9232
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9238
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9240
  %12 = icmp eq i32 %11, 0, !dbg !9240
  %13 = or i32 %9, 2, !dbg !9241
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9241
  call void @llvm.dbg.value(metadata i32 %14, metadata !9231, metadata !DIExpression()), !dbg !9232
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9242
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9244
  %17 = icmp eq i32 %16, 0, !dbg !9244
  %18 = or i32 %14, 4, !dbg !9245
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9245
  call void @llvm.dbg.value(metadata i32 %19, metadata !9231, metadata !DIExpression()), !dbg !9232
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9246
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9248
  %22 = icmp eq i32 %21, 0, !dbg !9248
  %23 = or i32 %19, 8, !dbg !9249
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9249
  call void @llvm.dbg.value(metadata i32 %24, metadata !9231, metadata !DIExpression()), !dbg !9232
  %25 = and i32 %24, 8, !dbg !9250
  %26 = icmp eq i32 %25, 0, !dbg !9250
  br i1 %26, label %29, label %27, !dbg !9252

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9253
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9255
  br label %29, !dbg !9256

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9257
  %31 = icmp eq i32 %30, 0, !dbg !9257
  br i1 %31, label %34, label %32, !dbg !9259

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9260
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9262
  br label %34, !dbg !9263

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9264
  %36 = icmp eq i32 %35, 0, !dbg !9264
  br i1 %36, label %39, label %37, !dbg !9266

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9267
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9269
  br label %39, !dbg !9270

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9271
  %41 = icmp eq i32 %40, 0, !dbg !9271
  br i1 %41, label %44, label %42, !dbg !9273

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9274
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9276
  br label %44, !dbg !9277

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9278
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9279
  ret i32 %24, !dbg !9280
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9281 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9283, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9284, metadata !DIExpression()), !dbg !9292
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9293
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9293
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9293
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9285, metadata !DIExpression()), !dbg !9292
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9294
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9294
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9294
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9286, metadata !DIExpression()), !dbg !9292
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9295
  %10 = load i8, i8* %9, align 4, !dbg !9295
  %11 = zext i8 %10 to i32, !dbg !9296
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9297
  call void @llvm.dbg.value(metadata i32 %12, metadata !9288, metadata !DIExpression()), !dbg !9292
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9298
  %14 = load i8, i8* %13, align 1, !dbg !9298
  %15 = zext i8 %14 to i32, !dbg !9299
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9300
  call void @llvm.dbg.value(metadata i32 %16, metadata !9289, metadata !DIExpression()), !dbg !9292
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9301
  %18 = load i8, i8* %17, align 2, !dbg !9301
  %19 = zext i8 %18 to i32, !dbg !9302
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9303
  call void @llvm.dbg.value(metadata i32 %20, metadata !9290, metadata !DIExpression()), !dbg !9292
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9304
  %22 = load i8, i8* %21, align 1, !dbg !9304
  %23 = zext i8 %22 to i32, !dbg !9305
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9306
  call void @llvm.dbg.value(metadata i32 %24, metadata !9291, metadata !DIExpression()), !dbg !9292
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9307

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9309
  br i1 %26, label %69, label %27, !dbg !9311

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9312

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9313
  br i1 %29, label %65, label %30, !dbg !9313

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9315
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9292
  br i1 %31, label %38, label %34, !dbg !9317

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9318
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9318

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9321
  br i1 %37, label %38, label %69, !dbg !9322

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9323
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9324
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9325
  %41 = icmp eq i32 %12, %40, !dbg !9327
  br i1 %41, label %43, label %42, !dbg !9328

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9329
  br label %43, !dbg !9331

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9332
  %45 = icmp eq i32 %16, %44, !dbg !9334
  br i1 %45, label %47, label %46, !dbg !9335

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9336
  br label %47, !dbg !9338

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9339
  %49 = icmp eq i32 %20, %48, !dbg !9341
  br i1 %49, label %51, label %50, !dbg !9342

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9343
  br label %51, !dbg !9345

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9346
  %53 = icmp eq i32 %24, %52, !dbg !9348
  br i1 %53, label %55, label %54, !dbg !9349

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !9350
  br label %55, !dbg !9352

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9353
  %57 = load i32, i32* %56, align 4, !dbg !9353
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9355
  %59 = load i32, i32* %58, align 4, !dbg !9355
  %60 = icmp eq i32 %57, %59, !dbg !9356
  br i1 %60, label %63, label %61, !dbg !9357

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !9358
  %62 = load i32, i32* %56, align 4, !dbg !9360
  store i32 %62, i32* %58, align 4, !dbg !9361
  br label %63, !dbg !9362

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9363
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !9364
  br label %69, !dbg !9365

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9313
  %67 = and i8 %66, 1, !dbg !9313
  %68 = icmp eq i8 %67, 0, !dbg !9313
  br i1 %68, label %30, label %69, !dbg !9313

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9292
  ret i32 %70, !dbg !9366
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !9367 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9369, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9370, metadata !DIExpression()), !dbg !9372
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9373
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9373
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9373
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9371, metadata !DIExpression()), !dbg !9372
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9374
  %7 = load i32, i32* %6, align 4, !dbg !9374
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9375
  store i32 %7, i32* %8, align 4, !dbg !9376
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9377, !range !9378
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !9379
  %11 = trunc i32 %10 to i8, !dbg !9379
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9380
  store i8 %11, i8* %12, align 4, !dbg !9381
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !9382, !range !9383
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !9384
  %15 = trunc i32 %14 to i8, !dbg !9384
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9385
  store i8 %15, i8* %16, align 1, !dbg !9386
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !9387
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9388, !range !9378
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !9389
  %20 = trunc i32 %19 to i8, !dbg !9389
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9390
  store i8 %20, i8* %21, align 2, !dbg !9391
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !9392, !range !9393
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !9394
  %24 = trunc i32 %23 to i8, !dbg !9394
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9395
  store i8 %24, i8* %25, align 1, !dbg !9396
  ret i32 0, !dbg !9397
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9398 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9402, metadata !DIExpression()), !dbg !9404
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9405
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9405
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9405
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9403, metadata !DIExpression()), !dbg !9404
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9406
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9406
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !9407
  ret i32 %7, !dbg !9408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !9409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9413, metadata !DIExpression()), !dbg !9414
  %2 = icmp eq i32 %0, 1024, !dbg !9415
  %3 = select i1 %2, i32 2, i32 0, !dbg !9415
  %4 = icmp eq i32 %0, 1536, !dbg !9415
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9415
  ret i32 %5, !dbg !9416
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9417 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9419, metadata !DIExpression()), !dbg !9421
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9422
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9422
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9422
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9420, metadata !DIExpression()), !dbg !9421
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9423
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9423
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !9424
  ret i32 %7, !dbg !9425
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !9426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9430, metadata !DIExpression()), !dbg !9431
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9432
  %3 = icmp ult i32 %2, 4, !dbg !9432
  br i1 %3, label %4, label %7, !dbg !9432

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9432
  %6 = load i32, i32* %5, align 4, !dbg !9432
  br label %7, !dbg !9432

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9433
  ret i32 %8, !dbg !9435
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9436 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9438, metadata !DIExpression()), !dbg !9440
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9441
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9441
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9441
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9439, metadata !DIExpression()), !dbg !9440
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9442
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9442
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !9443
  ret i32 %7, !dbg !9444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9449, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %1, metadata !9450, metadata !DIExpression()), !dbg !9451
  %3 = icmp eq i32 %0, 4096, !dbg !9452
  %4 = icmp eq i32 %1, 0, !dbg !9452
  %5 = select i1 %4, i32 4, i32 3, !dbg !9452
  %6 = select i1 %4, i32 3, i32 2, !dbg !9452
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9452
  ret i32 %7, !dbg !9453
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9454 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9456, metadata !DIExpression()), !dbg !9458
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9459
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9459
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9459
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9457, metadata !DIExpression()), !dbg !9458
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9460
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9460
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !9461
  ret i32 %7, !dbg !9462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9467, metadata !DIExpression()), !dbg !9468
  %2 = icmp eq i32 %0, 768, !dbg !9469
  %3 = zext i1 %2 to i32, !dbg !9468
  ret i32 %3, !dbg !9471
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9472 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9477, metadata !DIExpression()), !dbg !9478
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9479
  %3 = load volatile i32, i32* %2, align 4, !dbg !9479
  %4 = and i32 %3, 768, !dbg !9479
  ret i32 %4, !dbg !9480
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9481 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9483, metadata !DIExpression()), !dbg !9484
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9485
  %3 = load volatile i32, i32* %2, align 4, !dbg !9485
  %4 = and i32 %3, 4096, !dbg !9485
  ret i32 %4, !dbg !9486
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9487 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9489, metadata !DIExpression()), !dbg !9490
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9491
  %3 = load volatile i32, i32* %2, align 4, !dbg !9491
  %4 = and i32 %3, 12288, !dbg !9491
  ret i32 %4, !dbg !9492
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9493 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9495, metadata !DIExpression()), !dbg !9496
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9497
  %3 = load volatile i32, i32* %2, align 4, !dbg !9497
  %4 = and i32 %3, 1536, !dbg !9497
  ret i32 %4, !dbg !9498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !9499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9503, metadata !DIExpression()), !dbg !9504
  %2 = icmp eq i32 %0, 2, !dbg !9505
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9505
  %4 = icmp eq i32 %0, 1, !dbg !9505
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9505
  ret i32 %5, !dbg !9506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !9507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9511, metadata !DIExpression()), !dbg !9512
  %2 = icmp ult i32 %0, 3, !dbg !9513
  br i1 %2, label %3, label %6, !dbg !9513

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9513
  %5 = load i32, i32* %4, align 4, !dbg !9513
  br label %6, !dbg !9513

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9514
  ret i32 %7, !dbg !9516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9521, metadata !DIExpression()), !dbg !9523
  call void @llvm.dbg.value(metadata i32 %1, metadata !9522, metadata !DIExpression()), !dbg !9523
  %3 = icmp eq i32 %0, 4, !dbg !9524
  %4 = icmp eq i32 %1, 0, !dbg !9524
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9524
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9524
  ret i32 %6, !dbg !9525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9530, metadata !DIExpression()), !dbg !9531
  %2 = icmp eq i32 %0, 1, !dbg !9532
  %3 = select i1 %2, i32 768, i32 0, !dbg !9531
  ret i32 %3, !dbg !9534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9535 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9539, metadata !DIExpression()), !dbg !9540
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9541
  %3 = load volatile i32, i32* %2, align 4, !dbg !9541
  %4 = and i32 %3, -8193, !dbg !9541
  store volatile i32 %4, i32* %2, align 4, !dbg !9541
  ret void, !dbg !9542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9543 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9547, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i32 %1, metadata !9548, metadata !DIExpression()), !dbg !9550
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9551
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9551
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9551
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9549, metadata !DIExpression()), !dbg !9550
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9552
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9552
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9553
  ret void, !dbg !9554
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9555 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9557, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i32 %1, metadata !9558, metadata !DIExpression()), !dbg !9560
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9561
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9561
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9561
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9559, metadata !DIExpression()), !dbg !9560
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9562
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9562
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9563
  ret void, !dbg !9564
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9565 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9567, metadata !DIExpression()), !dbg !9570
  call void @llvm.dbg.value(metadata i32 %1, metadata !9568, metadata !DIExpression()), !dbg !9570
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9571
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9571
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9571
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9569, metadata !DIExpression()), !dbg !9570
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9572
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9572
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9573
  ret void, !dbg !9574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9575 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9577, metadata !DIExpression()), !dbg !9580
  call void @llvm.dbg.value(metadata i32 %1, metadata !9578, metadata !DIExpression()), !dbg !9580
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9581
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9581
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9581
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9579, metadata !DIExpression()), !dbg !9580
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9582
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9582
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9583
  ret void, !dbg !9584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9585 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9587, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %1, metadata !9588, metadata !DIExpression()), !dbg !9592
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9593
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9593
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9593
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9589, metadata !DIExpression()), !dbg !9592
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9594
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9594
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9594
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9590, metadata !DIExpression()), !dbg !9592
  %10 = bitcast i32* %3 to i8*, !dbg !9595
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9595
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9596
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9596
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9600
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9600
  %15 = load i8*, i8** %14, align 4, !dbg !9600
  call void @llvm.dbg.value(metadata i32* %3, metadata !9591, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !9601
  %17 = icmp slt i32 %16, 0, !dbg !9602
  br i1 %17, label %28, label %18, !dbg !9603

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9604
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9604
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #24, !dbg !9605
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9606
  %22 = load i32, i32* %3, align 4, !dbg !9607
  call void @llvm.dbg.value(metadata i32 %22, metadata !9591, metadata !DIExpression()), !dbg !9592
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #24, !dbg !9608
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9609
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 2, !dbg !9609
  %25 = load volatile i32, i32* %24, align 4, !dbg !9609
  %26 = icmp ugt i32 %25, 16, !dbg !9609
  br i1 %26, label %28, label %27, !dbg !9612

27:                                               ; preds = %18
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.106, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.107, i32 0, i32 0), i32 noundef 190) #26, !dbg !9613
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.108, i32 0, i32 0)) #26, !dbg !9613
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.107, i32 0, i32 0), i32 noundef 190) #26, !dbg !9613
  unreachable, !dbg !9613

28:                                               ; preds = %18, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9615
  ret void, !dbg !9615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9616 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9618, metadata !DIExpression()), !dbg !9619
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9620
  %3 = load volatile i32, i32* %2, align 4, !dbg !9620
  %4 = or i32 %3, 8192, !dbg !9620
  store volatile i32 %4, i32* %2, align 4, !dbg !9620
  ret void, !dbg !9621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9622 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9624, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.value(metadata i8* %1, metadata !9625, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.value(metadata i32* %2, metadata !9626, metadata !DIExpression()), !dbg !9628
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9629
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9629
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9629
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9627, metadata !DIExpression()), !dbg !9628
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9630
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9630
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9632
  br i1 %9, label %12, label %10, !dbg !9633

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !9634
  br label %12, !dbg !9635

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9628
  ret i32 %13, !dbg !9636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9637 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9641, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i32 0, metadata !9642, metadata !DIExpression()), !dbg !9643
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9644
  %3 = load volatile i32, i32* %2, align 4, !dbg !9644
  %4 = and i32 %3, -32769, !dbg !9644
  store volatile i32 %4, i32* %2, align 4, !dbg !9644
  ret void, !dbg !9645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9646 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9650, metadata !DIExpression()), !dbg !9654
  call void @llvm.dbg.value(metadata i32 %1, metadata !9651, metadata !DIExpression()), !dbg !9654
  call void @llvm.dbg.value(metadata i32 0, metadata !9652, metadata !DIExpression()), !dbg !9654
  call void @llvm.dbg.value(metadata i32 %2, metadata !9653, metadata !DIExpression()), !dbg !9654
  %4 = zext i32 %1 to i64, !dbg !9655
  %5 = mul nuw nsw i64 %4, 25, !dbg !9655
  %6 = zext i32 %2 to i64, !dbg !9655
  %7 = shl nuw nsw i64 %6, 2, !dbg !9655
  %8 = udiv i64 %5, %7, !dbg !9655
  %9 = trunc i64 %8 to i32, !dbg !9655
  %10 = udiv i32 %9, 100, !dbg !9655
  %11 = shl nuw nsw i32 %10, 4, !dbg !9655
  %12 = mul i32 %10, -100, !dbg !9655
  %13 = add i32 %12, %9, !dbg !9655
  %14 = shl i32 %13, 4, !dbg !9655
  %15 = add i32 %14, 50, !dbg !9655
  %16 = udiv i32 %15, 100, !dbg !9655
  %17 = and i32 %16, 240, !dbg !9655
  %18 = add nuw nsw i32 %17, %11, !dbg !9655
  %19 = and i32 %16, 15, !dbg !9655
  %20 = and i32 %18, 65520, !dbg !9658
  %21 = or i32 %20, %19, !dbg !9658
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9659
  store volatile i32 %21, i32* %22, align 4, !dbg !9660
  ret void, !dbg !9661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9662 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9664, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.value(metadata i32 %1, metadata !9665, metadata !DIExpression()), !dbg !9666
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9667
  %4 = load volatile i32, i32* %3, align 4, !dbg !9667
  %5 = and i32 %4, -769, !dbg !9667
  %6 = or i32 %5, %1, !dbg !9667
  store volatile i32 %6, i32* %3, align 4, !dbg !9667
  ret void, !dbg !9668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9669 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9671, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata i32 %1, metadata !9672, metadata !DIExpression()), !dbg !9673
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9674
  %4 = load volatile i32, i32* %3, align 4, !dbg !9674
  %5 = and i32 %4, -4097, !dbg !9674
  %6 = or i32 %5, %1, !dbg !9674
  store volatile i32 %6, i32* %3, align 4, !dbg !9674
  ret void, !dbg !9675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9676 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9678, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 %1, metadata !9679, metadata !DIExpression()), !dbg !9680
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9681
  %4 = load volatile i32, i32* %3, align 4, !dbg !9681
  %5 = and i32 %4, -12289, !dbg !9681
  %6 = or i32 %5, %1, !dbg !9681
  store volatile i32 %6, i32* %3, align 4, !dbg !9681
  ret void, !dbg !9682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9683 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9685, metadata !DIExpression()), !dbg !9687
  call void @llvm.dbg.value(metadata i32 %1, metadata !9686, metadata !DIExpression()), !dbg !9687
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9688
  %4 = load volatile i32, i32* %3, align 4, !dbg !9688
  %5 = and i32 %4, -1537, !dbg !9688
  %6 = or i32 %5, %1, !dbg !9688
  store volatile i32 %6, i32* %3, align 4, !dbg !9688
  ret void, !dbg !9689
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9690 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9692, metadata !DIExpression()), !dbg !9693
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9694
  %3 = load volatile i32, i32* %2, align 4, !dbg !9694
  %4 = lshr i32 %3, 3, !dbg !9695
  %5 = and i32 %4, 1, !dbg !9695
  ret i32 %5, !dbg !9696
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9697 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9699, metadata !DIExpression()), !dbg !9700
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9701
  %3 = load volatile i32, i32* %2, align 4, !dbg !9701
  %4 = and i32 %3, 1, !dbg !9701
  ret i32 %4, !dbg !9702
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9703 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9705, metadata !DIExpression()), !dbg !9706
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9707
  %3 = load volatile i32, i32* %2, align 4, !dbg !9707
  %4 = lshr i32 %3, 1, !dbg !9708
  %5 = and i32 %4, 1, !dbg !9708
  ret i32 %5, !dbg !9709
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9710 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9712, metadata !DIExpression()), !dbg !9713
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9714
  %3 = load volatile i32, i32* %2, align 4, !dbg !9714
  %4 = lshr i32 %3, 8, !dbg !9715
  %5 = and i32 %4, 1, !dbg !9715
  ret i32 %5, !dbg !9716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9717 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9719, metadata !DIExpression()), !dbg !9720
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9721
  store volatile i32 -257, i32* %2, align 4, !dbg !9721
  ret void, !dbg !9722
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9723 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9725, metadata !DIExpression()), !dbg !9727
  %3 = bitcast i32* %2 to i8*, !dbg !9728
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9728
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9726, metadata !DIExpression()), !dbg !9729
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9730
  %5 = load volatile i32, i32* %4, align 4, !dbg !9730
  store volatile i32 %5, i32* %2, align 4, !dbg !9731
  %6 = load volatile i32, i32* %2, align 4, !dbg !9732
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9733
  %8 = load volatile i32, i32* %7, align 4, !dbg !9733
  store volatile i32 %8, i32* %2, align 4, !dbg !9734
  %9 = load volatile i32, i32* %2, align 4, !dbg !9735
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9736
  ret void, !dbg !9736
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9737 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9739, metadata !DIExpression()), !dbg !9741
  %3 = bitcast i32* %2 to i8*, !dbg !9742
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9742
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9740, metadata !DIExpression()), !dbg !9743
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9744
  %5 = load volatile i32, i32* %4, align 4, !dbg !9744
  store volatile i32 %5, i32* %2, align 4, !dbg !9745
  %6 = load volatile i32, i32* %2, align 4, !dbg !9746
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9747
  %8 = load volatile i32, i32* %7, align 4, !dbg !9747
  store volatile i32 %8, i32* %2, align 4, !dbg !9748
  %9 = load volatile i32, i32* %2, align 4, !dbg !9749
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9750
  ret void, !dbg !9750
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9751 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9753, metadata !DIExpression()), !dbg !9755
  %3 = bitcast i32* %2 to i8*, !dbg !9756
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9756
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9754, metadata !DIExpression()), !dbg !9757
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9758
  %5 = load volatile i32, i32* %4, align 4, !dbg !9758
  store volatile i32 %5, i32* %2, align 4, !dbg !9759
  %6 = load volatile i32, i32* %2, align 4, !dbg !9760
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9761
  %8 = load volatile i32, i32* %7, align 4, !dbg !9761
  store volatile i32 %8, i32* %2, align 4, !dbg !9762
  %9 = load volatile i32, i32* %2, align 4, !dbg !9763
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9764
  ret void, !dbg !9764
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9765 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9767, metadata !DIExpression()), !dbg !9769
  %3 = bitcast i32* %2 to i8*, !dbg !9770
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9770
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9768, metadata !DIExpression()), !dbg !9771
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9772
  %5 = load volatile i32, i32* %4, align 4, !dbg !9772
  store volatile i32 %5, i32* %2, align 4, !dbg !9773
  %6 = load volatile i32, i32* %2, align 4, !dbg !9774
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9775
  %8 = load volatile i32, i32* %7, align 4, !dbg !9775
  store volatile i32 %8, i32* %2, align 4, !dbg !9776
  %9 = load volatile i32, i32* %2, align 4, !dbg !9777
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9778
  ret void, !dbg !9778
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9779 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9781, metadata !DIExpression()), !dbg !9782
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9783
  %3 = load volatile i32, i32* %2, align 4, !dbg !9783
  %4 = lshr i32 %3, 7, !dbg !9784
  %5 = and i32 %4, 1, !dbg !9784
  ret i32 %5, !dbg !9785
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !9786 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9790, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata i8 %1, metadata !9791, metadata !DIExpression()), !dbg !9792
  %3 = zext i8 %1 to i32, !dbg !9793
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9794
  store volatile i32 %3, i32* %4, align 4, !dbg !9795
  ret void, !dbg !9796
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9797 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9799, metadata !DIExpression()), !dbg !9800
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9801
  %3 = load volatile i32, i32* %2, align 4, !dbg !9801
  %4 = lshr i32 %3, 5, !dbg !9802
  %5 = and i32 %4, 1, !dbg !9802
  ret i32 %5, !dbg !9803
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9804 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9808, metadata !DIExpression()), !dbg !9809
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9810
  %3 = load volatile i32, i32* %2, align 4, !dbg !9810
  %4 = trunc i32 %3 to i8, !dbg !9811
  ret i8 %4, !dbg !9812
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9813 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9815, metadata !DIExpression()), !dbg !9821
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9822
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9822
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9822
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9816, metadata !DIExpression()), !dbg !9821
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9823
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !9823
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !9823
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !9817, metadata !DIExpression()), !dbg !9821
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !9824
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !9825
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !9825
  %10 = tail call fastcc zeroext i1 @device_is_ready.110(%struct.device* noundef %9) #24, !dbg !9827
  br i1 %10, label %11, label %49, !dbg !9828

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !9829
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !9830
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9830
  %15 = load i8*, i8** %14, align 4, !dbg !9830
  %16 = tail call fastcc i32 @clock_control_on.111(%struct.device* noundef %12, i8* noundef %15) #24, !dbg !9831
  call void @llvm.dbg.value(metadata i32 %16, metadata !9820, metadata !DIExpression()), !dbg !9821
  %17 = icmp eq i32 %16, 0, !dbg !9832
  br i1 %17, label %18, label %49, !dbg !9834

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !9835
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !9835
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #24, !dbg !9836
  call void @llvm.dbg.value(metadata i32 %21, metadata !9820, metadata !DIExpression()), !dbg !9821
  %22 = icmp slt i32 %21, 0, !dbg !9837
  br i1 %22, label %49, label %23, !dbg !9839

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9840
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9840
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #24, !dbg !9841
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9842
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #24, !dbg !9843
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !9844
  %28 = load i32, i32* %27, align 4, !dbg !9844
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !9846

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !9818, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i32 4096, metadata !9819, metadata !DIExpression()), !dbg !9821
  br label %31, !dbg !9847

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !9818, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i32 0, metadata !9819, metadata !DIExpression()), !dbg !9821
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !9850
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !9850
  call void @llvm.dbg.value(metadata i32 %33, metadata !9819, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i32 %32, metadata !9818, metadata !DIExpression()), !dbg !9821
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9851
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #24, !dbg !9852
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !9853
  %36 = load i8, i8* %35, align 4, !dbg !9853, !range !4008
  %37 = icmp eq i8 %36, 0, !dbg !9853
  br i1 %37, label %39, label %38, !dbg !9855

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !9856
  br label %39, !dbg !9858

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !9859
  %41 = load i32, i32* %40, align 4, !dbg !9859
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #24, !dbg !9860
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !9861
  %43 = load i8, i8* %42, align 4, !dbg !9861, !range !4008
  %44 = icmp eq i8 %43, 0, !dbg !9861
  br i1 %44, label %47, label %45, !dbg !9863

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9864
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #24, !dbg !9866
  br label %47, !dbg !9867

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9868
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #24, !dbg !9869
  br label %49, !dbg !9870

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !9821
  ret i32 %50, !dbg !9871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9872 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9876, metadata !DIExpression()), !dbg !9880
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9881
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !9881
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !9881
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !9877, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9878, metadata !DIExpression()), !dbg !9880
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !9882
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !9883
  ret void, !dbg !9884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.110(%struct.device* noundef %0) unnamed_addr #1 !dbg !9885 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9889, metadata !DIExpression()), !dbg !9890
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9891, !srcloc !9893
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.112(%struct.device* noundef %0) #24, !dbg !9894
  ret i1 %2, !dbg !9895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.111(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !9896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9898, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.value(metadata i8* %1, metadata !9899, metadata !DIExpression()), !dbg !9901
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9902
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !9902
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !9902
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !9900, metadata !DIExpression()), !dbg !9901
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !9903
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !9903
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !9904
  ret i32 %8, !dbg !9905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9906 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9910, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.value(metadata i8 0, metadata !9911, metadata !DIExpression()), !dbg !9914
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9915
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9915
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9913, metadata !DIExpression(DW_OP_deref)), !dbg !9914
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !9916
  call void @llvm.dbg.value(metadata i32 %4, metadata !9912, metadata !DIExpression()), !dbg !9914
  %5 = icmp slt i32 %4, 0, !dbg !9917
  br i1 %5, label %9, label %6, !dbg !9919

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9920
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9913, metadata !DIExpression()), !dbg !9914
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !9921
  br label %9, !dbg !9922

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9914
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9923
  ret i32 %10, !dbg !9923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9924 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9926, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.value(metadata i32 12, metadata !9927, metadata !DIExpression()), !dbg !9930
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9931

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9932, metadata !DIExpression()) #23, !dbg !9938
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !9941, !srcloc !9942
  call void @llvm.dbg.value(metadata i32 %4, metadata !9937, metadata !DIExpression()) #23, !dbg !9938
  %5 = or i32 %4, 12, !dbg !9943
  call void @llvm.dbg.value(metadata i32 %5, metadata !9928, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i32 %5, metadata !9945, metadata !DIExpression()) #23, !dbg !9952
  call void @llvm.dbg.value(metadata i32* %2, metadata !9950, metadata !DIExpression()) #23, !dbg !9952
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !9954, !srcloc !9955
  call void @llvm.dbg.value(metadata i32 %6, metadata !9951, metadata !DIExpression()) #23, !dbg !9952
  %7 = icmp eq i32 %6, 0, !dbg !9931
  br i1 %7, label %8, label %3, !dbg !9943, !llvm.loop !9956

8:                                                ; preds = %3
  ret void, !dbg !9957
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9958 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9960, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i32 %1, metadata !9961, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i32 %2, metadata !9962, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i32 0, metadata !9963, metadata !DIExpression()), !dbg !9964
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9965
  %5 = load volatile i32, i32* %4, align 4, !dbg !9965
  %6 = and i32 %5, -5633, !dbg !9965
  %7 = or i32 %2, %1, !dbg !9965
  %8 = or i32 %7, %6, !dbg !9965
  store volatile i32 %8, i32* %4, align 4, !dbg !9965
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9966
  %10 = load volatile i32, i32* %9, align 4, !dbg !9966
  %11 = and i32 %10, -12289, !dbg !9966
  store volatile i32 %11, i32* %9, align 4, !dbg !9966
  ret void, !dbg !9967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9968 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9970, metadata !DIExpression()), !dbg !9971
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9972
  %3 = load volatile i32, i32* %2, align 4, !dbg !9972
  %4 = or i32 %3, 8, !dbg !9972
  store volatile i32 %4, i32* %2, align 4, !dbg !9972
  ret void, !dbg !9973
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9974 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9978, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9979, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.value(metadata i32 0, metadata !9980, metadata !DIExpression()), !dbg !9981
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9982
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !9982
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9983
  %5 = load i8, i8* %4, align 4, !dbg !9983
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !9984
  ret i32 %6, !dbg !9985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.112(%struct.device* noundef %0) unnamed_addr #1 !dbg !9986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9988, metadata !DIExpression()), !dbg !9989
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !9990
  ret i1 %2, !dbg !9991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !9992 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9994, metadata !DIExpression()), !dbg !9995
  tail call fastcc void @__NVIC_SetPriority.114() #24, !dbg !9996
  store i32 8399, i32* @last_load, align 4, !dbg !9997
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9998
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9999
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10000
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10001
  %3 = or i32 %2, 7, !dbg !10001
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10001
  ret i32 0, !dbg !10002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.114() unnamed_addr #14 !dbg !10003 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10005, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.value(metadata i32 1, metadata !10006, metadata !DIExpression()), !dbg !10007
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10008
  ret void, !dbg !10011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10012 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10014, metadata !DIExpression()), !dbg !10016
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10017
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10018
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10019
  %5 = add i32 %4, %3, !dbg !10019
  store i32 %5, i32* @cycle_count, align 4, !dbg !10019
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10020
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10021
  %7 = sub i32 %5, %6, !dbg !10024
  %8 = udiv i32 %7, 8400, !dbg !10025
  call void @llvm.dbg.value(metadata i32 %8, metadata !10015, metadata !DIExpression()), !dbg !10016
  %9 = mul nuw i32 %8, 8400, !dbg !10026
  %10 = add i32 %9, %6, !dbg !10027
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10027
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !10028
  tail call void @z_arm_int_exit() #26, !dbg !10029
  ret void, !dbg !10030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10031 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10036
  call void @llvm.dbg.value(metadata i32 %1, metadata !10033, metadata !DIExpression()), !dbg !10037
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10038
  call void @llvm.dbg.value(metadata i32 %2, metadata !10034, metadata !DIExpression()), !dbg !10037
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10039
  call void @llvm.dbg.value(metadata i32 %3, metadata !10035, metadata !DIExpression()), !dbg !10037
  %4 = and i32 %2, 65536, !dbg !10040
  %5 = icmp ne i32 %4, 0, !dbg !10040
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10042
  %8 = load i32, i32* @last_load, align 4, !dbg !10037
  br i1 %7, label %9, label %13, !dbg !10042

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10043
  %11 = add i32 %10, %8, !dbg !10043
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10043
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10045
  br label %13, !dbg !10046

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10047
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10048
  %16 = add i32 %14, %15, !dbg !10049
  ret i32 %16, !dbg !10050
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10055, metadata !DIExpression()), !dbg !10068
  call void @llvm.dbg.value(metadata i1 %1, metadata !10056, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10068
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10069
  br i1 %4, label %5, label %8, !dbg !10069

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10071
  %7 = and i32 %6, -2, !dbg !10071
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10071
  store i32 -16777216, i32* @last_load, align 4, !dbg !10073
  br label %60, !dbg !10074

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10075
  call void @llvm.dbg.value(metadata i32 %9, metadata !10060, metadata !DIExpression()), !dbg !10068
  br i1 %3, label %18, label %10, !dbg !10076

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10076
  call void @llvm.dbg.value(metadata i32 undef, metadata !10055, metadata !DIExpression()), !dbg !10068
  %12 = icmp slt i32 %11, 1, !dbg !10077
  br i1 %12, label %18, label %13, !dbg !10077

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10077
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10077
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10077
  %17 = add nuw nsw i32 %16, 8399, !dbg !10077
  br label %18, !dbg !10077

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10055, metadata !DIExpression()), !dbg !10068
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10078, metadata !DIExpression()) #23, !dbg !10085
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10087, !srcloc !10093
  call void @llvm.dbg.value(metadata i32 undef, metadata !10090, metadata !DIExpression()) #23, !dbg !10094
  call void @llvm.dbg.value(metadata i32 undef, metadata !10091, metadata !DIExpression()) #23, !dbg !10094
  call void @llvm.dbg.value(metadata i32 undef, metadata !10084, metadata !DIExpression()) #23, !dbg !10085
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10095
  br i1 %21, label %23, label %22, !dbg !10098

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10099
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.118, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10099
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10099
  unreachable, !dbg !10099

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10087
  call void @llvm.dbg.value(metadata i32 %24, metadata !10090, metadata !DIExpression()) #23, !dbg !10094
  call void @llvm.dbg.value(metadata i32 %24, metadata !10084, metadata !DIExpression()) #23, !dbg !10085
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10101
  call void @llvm.dbg.value(metadata i32 %24, metadata !10061, metadata !DIExpression()), !dbg !10068
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10102
  call void @llvm.dbg.value(metadata i32 %25, metadata !10066, metadata !DIExpression()), !dbg !10068
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10103
  call void @llvm.dbg.value(metadata i32 %26, metadata !10058, metadata !DIExpression()), !dbg !10068
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10104
  %28 = add i32 %27, %25, !dbg !10104
  store i32 %28, i32* @cycle_count, align 4, !dbg !10104
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10105
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10106
  %30 = sub i32 %28, %29, !dbg !10107
  call void @llvm.dbg.value(metadata i32 %30, metadata !10067, metadata !DIExpression()), !dbg !10068
  %31 = icmp slt i32 %30, 0, !dbg !10108
  br i1 %31, label %41, label %32, !dbg !10110

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10057, metadata !DIExpression()), !dbg !10068
  call void @llvm.dbg.value(metadata i32 undef, metadata !10057, metadata !DIExpression()), !dbg !10068
  %33 = add nuw i32 %19, %30, !dbg !10111
  %34 = urem i32 %33, 8400, !dbg !10113
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10057, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10068
  %35 = sub nuw nsw i32 %19, %34, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %35, metadata !10057, metadata !DIExpression()), !dbg !10068
  %36 = icmp ugt i32 %35, 1024, !dbg !10115
  br i1 %36, label %37, label %39, !dbg !10115

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10057, metadata !DIExpression()), !dbg !10068
  %38 = icmp ugt i32 %35, 16766400, !dbg !10116
  br i1 %38, label %41, label %39, !dbg !10118

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10119
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10120
  call void @llvm.dbg.value(metadata i32 %43, metadata !10059, metadata !DIExpression()), !dbg !10068
  %44 = add nsw i32 %42, -1, !dbg !10121
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10122
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10123
  %45 = icmp ult i32 %26, %43, !dbg !10124
  br i1 %45, label %46, label %51, !dbg !10126

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10127
  %48 = add i32 %26, %9, !dbg !10129
  %49 = sub i32 %48, %43, !dbg !10130
  %50 = add i32 %49, %47, !dbg !10127
  br label %55, !dbg !10131

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10132
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10134
  %54 = add i32 %52, %53, !dbg !10134
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10135
  store i32 %56, i32* @cycle_count, align 4, !dbg !10135
  call void @llvm.dbg.value(metadata i32 undef, metadata !10136, metadata !DIExpression()) #23, !dbg !10142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10141, metadata !DIExpression()) #23, !dbg !10142
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10144
  br i1 %57, label %59, label %58, !dbg !10147

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10148
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.120, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10148
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10148
  unreachable, !dbg !10148

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10136, metadata !DIExpression()) #23, !dbg !10142
  call void @llvm.dbg.value(metadata i32 %24, metadata !10150, metadata !DIExpression()) #23, !dbg !10153
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10155, !srcloc !10156
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10157
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10158 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10078, metadata !DIExpression()) #23, !dbg !10162
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10164, !srcloc !10093
  call void @llvm.dbg.value(metadata i32 undef, metadata !10090, metadata !DIExpression()) #23, !dbg !10166
  call void @llvm.dbg.value(metadata i32 undef, metadata !10091, metadata !DIExpression()) #23, !dbg !10166
  call void @llvm.dbg.value(metadata i32 undef, metadata !10084, metadata !DIExpression()) #23, !dbg !10162
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10167
  br i1 %2, label %4, label %3, !dbg !10168

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10169
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.118, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10169
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10169
  unreachable, !dbg !10169

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10090, metadata !DIExpression()) #23, !dbg !10166
  call void @llvm.dbg.value(metadata i32 undef, metadata !10084, metadata !DIExpression()) #23, !dbg !10162
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10170
  call void @llvm.dbg.value(metadata i32 undef, metadata !10160, metadata !DIExpression()), !dbg !10171
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10172
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10173
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10174
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10161, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10171
  call void @llvm.dbg.value(metadata i32 undef, metadata !10136, metadata !DIExpression()) #23, !dbg !10175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10141, metadata !DIExpression()) #23, !dbg !10175
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10177
  br i1 %8, label %10, label %9, !dbg !10178

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10179
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.120, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10179
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10179
  unreachable, !dbg !10179

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10180
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10161, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10171
  %12 = sub i32 %11, %7, !dbg !10181
  call void @llvm.dbg.value(metadata i32 %12, metadata !10161, metadata !DIExpression()), !dbg !10171
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10164
  call void @llvm.dbg.value(metadata i32 %13, metadata !10090, metadata !DIExpression()) #23, !dbg !10166
  call void @llvm.dbg.value(metadata i32 %13, metadata !10084, metadata !DIExpression()) #23, !dbg !10162
  call void @llvm.dbg.value(metadata i32 %13, metadata !10160, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.value(metadata i32 undef, metadata !10136, metadata !DIExpression()) #23, !dbg !10175
  call void @llvm.dbg.value(metadata i32 undef, metadata !10150, metadata !DIExpression()) #23, !dbg !10182
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10184, !srcloc !10156
  %14 = udiv i32 %12, 8400, !dbg !10185
  ret i32 %14, !dbg !10186
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10187 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10078, metadata !DIExpression()) #23, !dbg !10191
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10193, !srcloc !10093
  call void @llvm.dbg.value(metadata i32 undef, metadata !10090, metadata !DIExpression()) #23, !dbg !10195
  call void @llvm.dbg.value(metadata i32 undef, metadata !10091, metadata !DIExpression()) #23, !dbg !10195
  call void @llvm.dbg.value(metadata i32 undef, metadata !10084, metadata !DIExpression()) #23, !dbg !10191
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10196
  br i1 %2, label %4, label %3, !dbg !10197

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10198
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.118, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10198
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10198
  unreachable, !dbg !10198

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10090, metadata !DIExpression()) #23, !dbg !10195
  call void @llvm.dbg.value(metadata i32 undef, metadata !10084, metadata !DIExpression()) #23, !dbg !10191
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10199
  call void @llvm.dbg.value(metadata i32 undef, metadata !10189, metadata !DIExpression()), !dbg !10200
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10201
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10202
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10190, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10200
  call void @llvm.dbg.value(metadata i32 undef, metadata !10136, metadata !DIExpression()) #23, !dbg !10203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10141, metadata !DIExpression()) #23, !dbg !10203
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10205
  br i1 %7, label %9, label %8, !dbg !10206

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.120, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10207
  unreachable, !dbg !10207

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10208
  call void @llvm.dbg.value(metadata i32 %10, metadata !10190, metadata !DIExpression()), !dbg !10200
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10193
  call void @llvm.dbg.value(metadata i32 %11, metadata !10090, metadata !DIExpression()) #23, !dbg !10195
  call void @llvm.dbg.value(metadata i32 %11, metadata !10084, metadata !DIExpression()) #23, !dbg !10191
  call void @llvm.dbg.value(metadata i32 %11, metadata !10189, metadata !DIExpression()), !dbg !10200
  call void @llvm.dbg.value(metadata i32 undef, metadata !10136, metadata !DIExpression()) #23, !dbg !10203
  call void @llvm.dbg.value(metadata i32 undef, metadata !10150, metadata !DIExpression()) #23, !dbg !10209
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10211, !srcloc !10156
  ret i32 %10, !dbg !10212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10213 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10214
  %2 = icmp eq i32 %1, -16777216, !dbg !10216
  br i1 %2, label %3, label %6, !dbg !10217

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10218
  %5 = or i32 %4, 1, !dbg !10218
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10218
  br label %6, !dbg !10220

6:                                                ; preds = %3, %0
  ret void, !dbg !10221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10222 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10223
  %2 = and i32 %1, -2, !dbg !10223
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10223
  ret void, !dbg !10224
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #12 !dbg !10225 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10251, metadata !DIExpression()), !dbg !10254
  call void @llvm.dbg.value(metadata i8 %1, metadata !10252, metadata !DIExpression()), !dbg !10254
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10253, metadata !DIExpression()), !dbg !10254
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10255
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10255
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10254
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10256
  %8 = load i8, i8* %6, align 4, !dbg !10257
  %9 = zext i8 %8 to i32, !dbg !10258
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10258
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10259
  br i1 %11, label %18, label %24, !dbg !10260

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10254
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10256
  %14 = load i8, i8* %6, align 4, !dbg !10257
  %15 = zext i8 %14 to i32, !dbg !10258
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10258
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10259
  br i1 %17, label %18, label %24, !dbg !10260, !llvm.loop !10261

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10263
  %21 = load i8, i8* %20, align 1, !dbg !10263
  %22 = icmp eq i8 %21, %1, !dbg !10266
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10267
  br i1 %22, label %24, label %12, !dbg !10268

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10254
  ret i32 %25, !dbg !10269
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10270 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10281, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i8 %1, metadata !10282, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i32 %2, metadata !10283, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i32 0, metadata !10286, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i32 0, metadata !10287, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i8 0, metadata !10288, metadata !DIExpression()), !dbg !10298
  %4 = icmp eq i8 %1, 0, !dbg !10299
  br i1 %4, label %35, label %5, !dbg !10300

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10299
  br label %9, !dbg !10300

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10288, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i32 %29, metadata !10286, metadata !DIExpression()), !dbg !10297
  %8 = icmp eq i32 %34, %6, !dbg !10299
  br i1 %8, label %35, label %9, !dbg !10300, !llvm.loop !10301

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10288, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i32 %11, metadata !10286, metadata !DIExpression()), !dbg !10297
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10303
  %13 = load i32, i32* %12, align 4, !dbg !10303
  call void @llvm.dbg.value(metadata i32 %13, metadata !10285, metadata !DIExpression()), !dbg !10297
  %14 = and i32 %13, 31, !dbg !10304
  %15 = icmp ult i32 %14, 16, !dbg !10305
  br i1 %15, label %16, label %20, !dbg !10306

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10307
  %18 = load i32, i32* %17, align 4, !dbg !10307
  %19 = or i32 %18, 32, !dbg !10309
  call void @llvm.dbg.value(metadata i32 %19, metadata !10286, metadata !DIExpression()), !dbg !10297
  br label %28, !dbg !10310

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10311

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10312
  %23 = load i32, i32* %22, align 4, !dbg !10312
  call void @llvm.dbg.value(metadata i32 %23, metadata !10290, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10313
  %24 = lshr i32 %23, 7, !dbg !10314
  %25 = and i32 %24, 16, !dbg !10314
  %26 = or i32 %25, %23, !dbg !10314
  call void @llvm.dbg.value(metadata i32 %26, metadata !10286, metadata !DIExpression()), !dbg !10297
  br label %28, !dbg !10315

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10297
  call void @llvm.dbg.value(metadata i32 %29, metadata !10286, metadata !DIExpression()), !dbg !10297
  %30 = lshr i32 %13, 5, !dbg !10316
  %31 = and i32 %30, 255, !dbg !10316
  call void @llvm.dbg.value(metadata i32 %31, metadata !10284, metadata !DIExpression()), !dbg !10297
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !10317
  call void @llvm.dbg.value(metadata i32 %32, metadata !10287, metadata !DIExpression()), !dbg !10297
  %33 = icmp slt i32 %32, 0, !dbg !10318
  %34 = add nuw nsw i32 %10, 1, !dbg !10320
  call void @llvm.dbg.value(metadata i32 %34, metadata !10288, metadata !DIExpression()), !dbg !10298
  br i1 %33, label %35, label %7, !dbg !10321

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10327, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %1, metadata !10328, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %2, metadata !10329, metadata !DIExpression()), !dbg !10331
  %4 = icmp ugt i32 %0, 175, !dbg !10332
  br i1 %4, label %16, label %5, !dbg !10334

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10335
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10336
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10336
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10330, metadata !DIExpression()), !dbg !10331
  %9 = add nsw i32 %6, -8, !dbg !10337
  %10 = icmp ult i32 %9, 3, !dbg !10337
  br i1 %10, label %16, label %11, !dbg !10339

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.125(%struct.device* noundef %8) #24, !dbg !10340
  br i1 %12, label %13, label %16, !dbg !10341

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10342
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !10343
  br label %16, !dbg !10344

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10331
  ret i32 %17, !dbg !10345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.125(%struct.device* noundef %0) unnamed_addr #1 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10350, metadata !DIExpression()), !dbg !10351
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10352, !srcloc !10354
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.126(%struct.device* noundef %0) #24, !dbg !10355
  ret i1 %2, !dbg !10356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.126(%struct.device* noundef %0) unnamed_addr #1 !dbg !10357 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10359, metadata !DIExpression()), !dbg !10360
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10361
  ret i1 %2, !dbg !10362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !10363 {
  ret void, !dbg !10364
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !10365 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10367, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.value(metadata i32 0, metadata !10368, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.value(metadata i32 2, metadata !10369, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.value(metadata i32 0, metadata !10370, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.value(metadata i32 2, metadata !10371, metadata !DIExpression()), !dbg !10372
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10373
  %2 = and i32 %1, 12, !dbg !10374
  call void @llvm.dbg.value(metadata i32 %2, metadata !10367, metadata !DIExpression()), !dbg !10372
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !10375

3:                                                ; preds = %0
  br label %21, !dbg !10376

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10378
  call void @llvm.dbg.value(metadata i32 %5, metadata !10370, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10372
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10379
  %7 = and i32 %6, 63, !dbg !10380
  call void @llvm.dbg.value(metadata i32 %7, metadata !10371, metadata !DIExpression()), !dbg !10372
  %8 = and i32 %5, 4194304, !dbg !10381
  %9 = icmp eq i32 %8, 0, !dbg !10381
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !10383
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10383
  %13 = lshr i32 %12, 6, !dbg !10383
  %14 = and i32 %13, 511, !dbg !10383
  %15 = mul i32 %14, %11, !dbg !10383
  call void @llvm.dbg.value(metadata i32 %15, metadata !10368, metadata !DIExpression()), !dbg !10372
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10384
  %17 = lshr i32 %16, 15, !dbg !10385
  %18 = and i32 %17, 6, !dbg !10385
  %19 = add nuw nsw i32 %18, 2, !dbg !10385
  call void @llvm.dbg.value(metadata i32 %19, metadata !10369, metadata !DIExpression()), !dbg !10372
  %20 = udiv i32 %15, %19, !dbg !10386
  br label %21, !dbg !10387

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !10388
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10389
  %24 = lshr i32 %23, 4, !dbg !10390
  %25 = and i32 %24, 15, !dbg !10390
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !10391
  %27 = load i8, i8* %26, align 1, !dbg !10391
  %28 = zext i8 %27 to i32, !dbg !10391
  call void @llvm.dbg.value(metadata i32 %28, metadata !10367, metadata !DIExpression()), !dbg !10372
  %29 = lshr i32 %22, %28, !dbg !10392
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !10392
  ret void, !dbg !10393
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10394 {
  ret i32 0, !dbg !10399
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10400 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10426, metadata !DIExpression()), !dbg !10437
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10438
  br i1 %3, label %311, label %4, !dbg !10440

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10441
  %6 = load i32, i32* %5, align 4, !dbg !10441
  %7 = and i32 %6, 1, !dbg !10443
  %8 = icmp eq i32 %7, 0, !dbg !10444
  br i1 %8, label %66, label %9, !dbg !10445

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10446
  %11 = and i32 %10, 12, !dbg !10446
  %12 = icmp eq i32 %11, 4, !dbg !10449
  br i1 %12, label %21, label %13, !dbg !10450

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10451
  %15 = and i32 %14, 12, !dbg !10451
  %16 = icmp eq i32 %15, 8, !dbg !10452
  br i1 %16, label %17, label %29, !dbg !10453

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10454
  %19 = and i32 %18, 4194304, !dbg !10455
  %20 = icmp eq i32 %19, 0, !dbg !10456
  br i1 %20, label %29, label %21, !dbg !10457

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10458
  %23 = and i32 %22, 131072, !dbg !10458
  %24 = icmp eq i32 %23, 0, !dbg !10458
  br i1 %24, label %66, label %25, !dbg !10461

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10462
  %27 = load i32, i32* %26, align 4, !dbg !10462
  %28 = icmp eq i32 %27, 0, !dbg !10463
  br i1 %28, label %311, label %66, !dbg !10464

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10465
  %31 = load i32, i32* %30, align 4, !dbg !10465
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10469

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10470
  %34 = or i32 %33, 65536, !dbg !10470
  br label %45, !dbg !10470

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10472
  %37 = or i32 %36, 262144, !dbg !10472
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10472
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10472
  %39 = or i32 %38, 65536, !dbg !10472
  br label %45, !dbg !10472

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10475
  %42 = and i32 %41, -65537, !dbg !10475
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10475
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10475
  %44 = and i32 %43, -262145, !dbg !10475
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10477
  %47 = load i32, i32* %30, align 4, !dbg !10478
  %48 = icmp eq i32 %47, 0, !dbg !10480
  %49 = tail call i32 @HAL_GetTick() #26, !dbg !10481
  call void @llvm.dbg.value(metadata i32 %49, metadata !10427, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.value(metadata i32 %49, metadata !10427, metadata !DIExpression()), !dbg !10437
  br i1 %48, label %58, label %50, !dbg !10482

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10483
  %52 = and i32 %51, 131072, !dbg !10485
  %53 = icmp eq i32 %52, 0, !dbg !10485
  br i1 %53, label %54, label %66, !dbg !10486

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #26, !dbg !10487
  %56 = sub i32 %55, %49, !dbg !10490
  %57 = icmp ugt i32 %56, 100, !dbg !10491
  br i1 %57, label %311, label %50, !dbg !10492, !llvm.loop !10493

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10495
  %60 = and i32 %59, 131072, !dbg !10495
  %61 = icmp eq i32 %60, 0, !dbg !10495
  br i1 %61, label %66, label %62, !dbg !10497

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !10498
  %64 = sub i32 %63, %49, !dbg !10501
  %65 = icmp ugt i32 %64, 100, !dbg !10502
  br i1 %65, label %311, label %58, !dbg !10503, !llvm.loop !10504

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10506
  %68 = and i32 %67, 2, !dbg !10508
  %69 = icmp eq i32 %68, 0, !dbg !10509
  br i1 %69, label %121, label %70, !dbg !10510

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10511
  %72 = and i32 %71, 12, !dbg !10511
  %73 = icmp eq i32 %72, 0, !dbg !10514
  br i1 %73, label %82, label %74, !dbg !10515

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10516
  %76 = and i32 %75, 12, !dbg !10516
  %77 = icmp eq i32 %76, 8, !dbg !10517
  br i1 %77, label %78, label %90, !dbg !10518

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10519
  %80 = and i32 %79, 4194304, !dbg !10520
  %81 = icmp eq i32 %80, 0, !dbg !10521
  br i1 %81, label %82, label %90, !dbg !10522

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10523
  %84 = and i32 %83, 2, !dbg !10523
  %85 = icmp eq i32 %84, 0, !dbg !10523
  br i1 %85, label %114, label %86, !dbg !10526

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10527
  %88 = load i32, i32* %87, align 4, !dbg !10527
  %89 = icmp eq i32 %88, 1, !dbg !10528
  br i1 %89, label %114, label %311, !dbg !10529

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10530
  %92 = load i32, i32* %91, align 4, !dbg !10530
  %93 = icmp eq i32 %92, 0, !dbg !10533
  br i1 %93, label %104, label %94, !dbg !10534

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10535
  %95 = tail call i32 @HAL_GetTick() #26, !dbg !10537
  call void @llvm.dbg.value(metadata i32 %95, metadata !10427, metadata !DIExpression()), !dbg !10437
  br label %96, !dbg !10538

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10539
  %98 = and i32 %97, 2, !dbg !10540
  %99 = icmp eq i32 %98, 0, !dbg !10540
  br i1 %99, label %100, label %114, !dbg !10538

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #26, !dbg !10541
  %102 = sub i32 %101, %95, !dbg !10544
  %103 = icmp ugt i32 %102, 2, !dbg !10545
  br i1 %103, label %311, label %96, !dbg !10546, !llvm.loop !10547

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10549
  %105 = tail call i32 @HAL_GetTick() #26, !dbg !10551
  call void @llvm.dbg.value(metadata i32 %105, metadata !10427, metadata !DIExpression()), !dbg !10437
  br label %106, !dbg !10552

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10553
  %108 = and i32 %107, 2, !dbg !10553
  %109 = icmp eq i32 %108, 0, !dbg !10553
  br i1 %109, label %121, label %110, !dbg !10552

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !10554
  %112 = sub i32 %111, %105, !dbg !10557
  %113 = icmp ugt i32 %112, 2, !dbg !10558
  br i1 %113, label %311, label %106, !dbg !10559, !llvm.loop !10560

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10562
  %116 = and i32 %115, -249, !dbg !10562
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10562
  %118 = load i32, i32* %117, align 4, !dbg !10562
  %119 = shl i32 %118, 3, !dbg !10562
  %120 = or i32 %119, %116, !dbg !10562
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10562
  br label %121, !dbg !10563

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10563
  %123 = and i32 %122, 8, !dbg !10565
  %124 = icmp eq i32 %123, 0, !dbg !10566
  br i1 %124, label %149, label %125, !dbg !10567

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10568
  %127 = load i32, i32* %126, align 4, !dbg !10568
  %128 = icmp eq i32 %127, 0, !dbg !10571
  br i1 %128, label %139, label %129, !dbg !10572

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10573
  %130 = tail call i32 @HAL_GetTick() #26, !dbg !10575
  call void @llvm.dbg.value(metadata i32 %130, metadata !10427, metadata !DIExpression()), !dbg !10437
  br label %131, !dbg !10576

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10577
  %133 = and i32 %132, 2, !dbg !10578
  %134 = icmp eq i32 %133, 0, !dbg !10578
  br i1 %134, label %135, label %149, !dbg !10576

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #26, !dbg !10579
  %137 = sub i32 %136, %130, !dbg !10582
  %138 = icmp ugt i32 %137, 2, !dbg !10583
  br i1 %138, label %311, label %131, !dbg !10584, !llvm.loop !10585

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10587
  %140 = tail call i32 @HAL_GetTick() #26, !dbg !10589
  call void @llvm.dbg.value(metadata i32 %140, metadata !10427, metadata !DIExpression()), !dbg !10437
  br label %141, !dbg !10590

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10591
  %143 = and i32 %142, 2, !dbg !10591
  %144 = icmp eq i32 %143, 0, !dbg !10591
  br i1 %144, label %149, label %145, !dbg !10590

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !10592
  %147 = sub i32 %146, %140, !dbg !10595
  %148 = icmp ugt i32 %147, 2, !dbg !10596
  br i1 %148, label %311, label %141, !dbg !10597, !llvm.loop !10598

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10600
  %151 = and i32 %150, 4, !dbg !10601
  %152 = icmp eq i32 %151, 0, !dbg !10602
  br i1 %152, label %221, label %153, !dbg !10603

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10429, metadata !DIExpression()), !dbg !10604
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10605
  %155 = and i32 %154, 268435456, !dbg !10605
  %156 = icmp eq i32 %155, 0, !dbg !10605
  br i1 %156, label %157, label %164, !dbg !10606

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10607
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10607
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10433, metadata !DIExpression()), !dbg !10607
  store volatile i32 0, i32* %2, align 4, !dbg !10607
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10607
  %160 = or i32 %159, 268435456, !dbg !10607
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10607
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10607
  %162 = and i32 %161, 268435456, !dbg !10607
  store volatile i32 %162, i32* %2, align 4, !dbg !10607
  %163 = load volatile i32, i32* %2, align 4, !dbg !10607
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10608
  call void @llvm.dbg.value(metadata i32 1, metadata !10429, metadata !DIExpression()), !dbg !10604
  br label %164, !dbg !10609

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10429, metadata !DIExpression()), !dbg !10604
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10610
  %166 = and i32 %165, 256, !dbg !10610
  %167 = icmp eq i32 %166, 0, !dbg !10610
  br i1 %167, label %168, label %180, !dbg !10612

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10613
  %170 = or i32 %169, 256, !dbg !10613
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10613
  %171 = tail call i32 @HAL_GetTick() #26, !dbg !10615
  call void @llvm.dbg.value(metadata i32 %171, metadata !10427, metadata !DIExpression()), !dbg !10437
  br label %172, !dbg !10616

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10617
  %174 = and i32 %173, 256, !dbg !10617
  %175 = icmp eq i32 %174, 0, !dbg !10617
  br i1 %175, label %176, label %180, !dbg !10616

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #26, !dbg !10618
  %178 = sub i32 %177, %171, !dbg !10621
  %179 = icmp ugt i32 %178, 2, !dbg !10622
  br i1 %179, label %311, label %172, !dbg !10623, !llvm.loop !10624

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10626
  %182 = load i32, i32* %181, align 4, !dbg !10626
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10629

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10630
  %185 = or i32 %184, 1, !dbg !10630
  br label %196, !dbg !10630

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10632
  %188 = or i32 %187, 4, !dbg !10632
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10632
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10632
  %190 = or i32 %189, 1, !dbg !10632
  br label %196, !dbg !10632

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10635
  %193 = and i32 %192, -2, !dbg !10635
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10635
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10635
  %195 = and i32 %194, -5, !dbg !10635
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10637
  %198 = load i32, i32* %181, align 4, !dbg !10638
  %199 = icmp eq i32 %198, 0, !dbg !10640
  %200 = tail call i32 @HAL_GetTick() #26, !dbg !10641
  call void @llvm.dbg.value(metadata i32 %200, metadata !10427, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.value(metadata i32 %200, metadata !10427, metadata !DIExpression()), !dbg !10437
  br i1 %199, label %209, label %201, !dbg !10642

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10643
  %203 = and i32 %202, 2, !dbg !10645
  %204 = icmp eq i32 %203, 0, !dbg !10645
  br i1 %204, label %205, label %217, !dbg !10646

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !10647
  %207 = sub i32 %206, %200, !dbg !10650
  %208 = icmp ugt i32 %207, 5000, !dbg !10651
  br i1 %208, label %311, label %201, !dbg !10652, !llvm.loop !10653

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10655
  %211 = and i32 %210, 2, !dbg !10655
  %212 = icmp eq i32 %211, 0, !dbg !10655
  br i1 %212, label %217, label %213, !dbg !10657

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #26, !dbg !10658
  %215 = sub i32 %214, %200, !dbg !10661
  %216 = icmp ugt i32 %215, 5000, !dbg !10662
  br i1 %216, label %311, label %209, !dbg !10663, !llvm.loop !10664

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10666

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10667
  %220 = and i32 %219, -268435457, !dbg !10667
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10667
  br label %221, !dbg !10670

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10671
  %223 = load i32, i32* %222, align 4, !dbg !10671
  %224 = icmp eq i32 %223, 0, !dbg !10673
  br i1 %224, label %310, label %225, !dbg !10674

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10675
  %227 = and i32 %226, 12, !dbg !10675
  %228 = icmp eq i32 %227, 8, !dbg !10678
  br i1 %228, label %277, label %229, !dbg !10679

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !10680
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10683
  %231 = tail call i32 @HAL_GetTick() #26, !dbg !10683
  call void @llvm.dbg.value(metadata i32 %231, metadata !10427, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.value(metadata i32 %231, metadata !10427, metadata !DIExpression()), !dbg !10437
  br i1 %230, label %232, label %269, !dbg !10684

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10685
  %234 = and i32 %233, 33554432, !dbg !10685
  %235 = icmp eq i32 %234, 0, !dbg !10685
  br i1 %235, label %240, label %236, !dbg !10687

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #26, !dbg !10688
  %238 = sub i32 %237, %231, !dbg !10691
  %239 = icmp ugt i32 %238, 2, !dbg !10692
  br i1 %239, label %311, label %232, !dbg !10693, !llvm.loop !10694

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10696
  %242 = load i32, i32* %241, align 4, !dbg !10696
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10696
  %244 = load i32, i32* %243, align 4, !dbg !10696
  %245 = or i32 %244, %242, !dbg !10696
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10696
  %247 = load i32, i32* %246, align 4, !dbg !10696
  %248 = shl i32 %247, 6, !dbg !10696
  %249 = or i32 %245, %248, !dbg !10696
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10696
  %251 = load i32, i32* %250, align 4, !dbg !10696
  %252 = shl i32 %251, 15, !dbg !10696
  %253 = add i32 %252, -65536, !dbg !10696
  %254 = and i32 %253, -65536, !dbg !10696
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10696
  %256 = load i32, i32* %255, align 4, !dbg !10696
  %257 = shl i32 %256, 24, !dbg !10696
  %258 = or i32 %249, %257, !dbg !10696
  %259 = or i32 %258, %254, !dbg !10696
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10696
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10697
  %260 = tail call i32 @HAL_GetTick() #26, !dbg !10698
  call void @llvm.dbg.value(metadata i32 %260, metadata !10427, metadata !DIExpression()), !dbg !10437
  br label %261, !dbg !10699

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10700
  %263 = and i32 %262, 33554432, !dbg !10701
  %264 = icmp eq i32 %263, 0, !dbg !10701
  br i1 %264, label %265, label %310, !dbg !10699

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #26, !dbg !10702
  %267 = sub i32 %266, %260, !dbg !10705
  %268 = icmp ugt i32 %267, 2, !dbg !10706
  br i1 %268, label %311, label %261, !dbg !10707, !llvm.loop !10708

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10710
  %271 = and i32 %270, 33554432, !dbg !10710
  %272 = icmp eq i32 %271, 0, !dbg !10710
  br i1 %272, label %310, label %273, !dbg !10712

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #26, !dbg !10713
  %275 = sub i32 %274, %231, !dbg !10716
  %276 = icmp ugt i32 %275, 2, !dbg !10717
  br i1 %276, label %311, label %269, !dbg !10718, !llvm.loop !10719

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !10721
  br i1 %278, label %311, label %279, !dbg !10724

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10725
  call void @llvm.dbg.value(metadata i32 %280, metadata !10428, metadata !DIExpression()), !dbg !10437
  %281 = and i32 %280, 4194304, !dbg !10727
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10729
  %283 = load i32, i32* %282, align 4, !dbg !10729
  %284 = icmp eq i32 %281, %283, !dbg !10730
  br i1 %284, label %285, label %311, !dbg !10731

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !10732
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10733
  %288 = load i32, i32* %287, align 4, !dbg !10733
  %289 = icmp eq i32 %286, %288, !dbg !10734
  br i1 %289, label %290, label %311, !dbg !10735

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !10736
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10737
  %293 = load i32, i32* %292, align 4, !dbg !10737
  %294 = shl i32 %293, 6, !dbg !10738
  %295 = icmp eq i32 %291, %294, !dbg !10739
  br i1 %295, label %296, label %311, !dbg !10740

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !10741
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10742
  %299 = load i32, i32* %298, align 4, !dbg !10742
  %300 = shl i32 %299, 15, !dbg !10743
  %301 = add i32 %300, -65536, !dbg !10743
  %302 = and i32 %301, -65536, !dbg !10743
  %303 = icmp eq i32 %297, %302, !dbg !10744
  br i1 %303, label %304, label %311, !dbg !10745

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !10746
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10747
  %307 = load i32, i32* %306, align 4, !dbg !10747
  %308 = shl i32 %307, 24, !dbg !10748
  %309 = icmp eq i32 %305, %308, !dbg !10749
  br i1 %309, label %310, label %311, !dbg !10750

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !10751

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10437
  ret i32 %312, !dbg !10752
}

; Function Attrs: optsize
declare !dbg !10753 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10755 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10768, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.value(metadata i32 %1, metadata !10769, metadata !DIExpression()), !dbg !10771
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !10772
  br i1 %3, label %115, label %4, !dbg !10774

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10775
  %6 = and i32 %5, 7, !dbg !10775
  %7 = icmp ult i32 %6, %1, !dbg !10777
  br i1 %7, label %8, label %13, !dbg !10778

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !10779
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10779
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10781
  %11 = and i32 %10, 7, !dbg !10781
  %12 = icmp eq i32 %11, %1, !dbg !10783
  br i1 %12, label %13, label %115, !dbg !10784

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10785
  %15 = load i32, i32* %14, align 4, !dbg !10785
  %16 = and i32 %15, 2, !dbg !10787
  %17 = icmp eq i32 %16, 0, !dbg !10788
  br i1 %17, label %39, label %18, !dbg !10789

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !10790
  %20 = icmp eq i32 %19, 0, !dbg !10793
  br i1 %20, label %25, label %21, !dbg !10794

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10795
  %23 = or i32 %22, 7168, !dbg !10795
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10795
  %24 = load i32, i32* %14, align 4, !dbg !10797
  br label %25, !dbg !10799

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !10797
  %27 = and i32 %26, 8, !dbg !10800
  %28 = icmp eq i32 %27, 0, !dbg !10801
  br i1 %28, label %32, label %29, !dbg !10802

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10803
  %31 = or i32 %30, 57344, !dbg !10803
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10803
  br label %32, !dbg !10805

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10806
  %34 = and i32 %33, -241, !dbg !10806
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10806
  %36 = load i32, i32* %35, align 4, !dbg !10806
  %37 = or i32 %34, %36, !dbg !10806
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10806
  %38 = load i32, i32* %14, align 4, !dbg !10807
  br label %39, !dbg !10809

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !10807
  %41 = and i32 %40, 1, !dbg !10810
  %42 = icmp eq i32 %41, 0, !dbg !10811
  br i1 %42, label %73, label %43, !dbg !10812

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10813
  %45 = load i32, i32* %44, align 4, !dbg !10813
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !10816

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10817
  %48 = and i32 %47, 131072, !dbg !10820
  %49 = icmp eq i32 %48, 0, !dbg !10820
  br i1 %49, label %115, label %58, !dbg !10821

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10822
  %52 = and i32 %51, 33554432, !dbg !10826
  %53 = icmp eq i32 %52, 0, !dbg !10826
  br i1 %53, label %115, label %58, !dbg !10827

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10828
  %56 = and i32 %55, 2, !dbg !10831
  %57 = icmp eq i32 %56, 0, !dbg !10831
  br i1 %57, label %115, label %58, !dbg !10832

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10833
  %60 = and i32 %59, -4, !dbg !10833
  %61 = or i32 %60, %45, !dbg !10833
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10833
  %62 = tail call i32 @HAL_GetTick() #26, !dbg !10834
  call void @llvm.dbg.value(metadata i32 %62, metadata !10770, metadata !DIExpression()), !dbg !10771
  br label %63, !dbg !10835

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10836
  %65 = and i32 %64, 12, !dbg !10836
  %66 = load i32, i32* %44, align 4, !dbg !10837
  %67 = shl i32 %66, 2, !dbg !10838
  %68 = icmp eq i32 %65, %67, !dbg !10839
  br i1 %68, label %73, label %69, !dbg !10835

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #26, !dbg !10840
  %71 = sub i32 %70, %62, !dbg !10843
  %72 = icmp ugt i32 %71, 5000, !dbg !10844
  br i1 %72, label %115, label %63, !dbg !10845, !llvm.loop !10846

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10848
  %75 = and i32 %74, 7, !dbg !10848
  %76 = icmp ugt i32 %75, %1, !dbg !10850
  br i1 %76, label %77, label %82, !dbg !10851

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !10852
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10852
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10854
  %80 = and i32 %79, 7, !dbg !10854
  %81 = icmp eq i32 %80, %1, !dbg !10856
  br i1 %81, label %82, label %115, !dbg !10857

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !10858
  %84 = and i32 %83, 4, !dbg !10860
  %85 = icmp eq i32 %84, 0, !dbg !10861
  br i1 %85, label %93, label %86, !dbg !10862

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10863
  %88 = and i32 %87, -7169, !dbg !10863
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !10863
  %90 = load i32, i32* %89, align 4, !dbg !10863
  %91 = or i32 %88, %90, !dbg !10863
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10863
  %92 = load i32, i32* %14, align 4, !dbg !10865
  br label %93, !dbg !10867

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !10865
  %95 = and i32 %94, 8, !dbg !10868
  %96 = icmp eq i32 %95, 0, !dbg !10869
  br i1 %96, label %104, label %97, !dbg !10870

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10871
  %99 = and i32 %98, -57345, !dbg !10871
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !10871
  %101 = load i32, i32* %100, align 4, !dbg !10871
  %102 = shl i32 %101, 3, !dbg !10871
  %103 = or i32 %102, %99, !dbg !10871
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10871
  br label %104, !dbg !10873

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !10874
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10875
  %107 = lshr i32 %106, 4, !dbg !10876
  %108 = and i32 %107, 15, !dbg !10876
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !10877
  %110 = load i8, i8* %109, align 1, !dbg !10877
  %111 = zext i8 %110 to i32, !dbg !10877
  %112 = lshr i32 %105, %111, !dbg !10878
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !10879
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !10880
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #26, !dbg !10881
  br label %115, !dbg !10882

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !10771
  ret i32 %116, !dbg !10883
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !10884 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10886, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.value(metadata i32 0, metadata !10887, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.value(metadata i32 0, metadata !10888, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.value(metadata i32 0, metadata !10889, metadata !DIExpression()), !dbg !10890
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10891
  %2 = and i32 %1, 12, !dbg !10892
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !10893

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !10889, metadata !DIExpression()), !dbg !10890
  br label %29, !dbg !10894

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10897
  %6 = and i32 %5, 63, !dbg !10899
  call void @llvm.dbg.value(metadata i32 %6, metadata !10886, metadata !DIExpression()), !dbg !10890
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10900
  %8 = and i32 %7, 4194304, !dbg !10900
  %9 = icmp eq i32 %8, 0, !dbg !10902
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10903
  %11 = lshr i32 %10, 6, !dbg !10903
  %12 = and i32 %11, 511, !dbg !10903
  br i1 %9, label %16, label %13, !dbg !10904

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !10905
  %15 = udiv i32 %14, %6, !dbg !10907
  call void @llvm.dbg.value(metadata i32 %15, metadata !10887, metadata !DIExpression()), !dbg !10890
  br label %22, !dbg !10908

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !10909
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !10911
  %19 = zext i32 %6 to i64, !dbg !10912
  %20 = udiv i64 %18, %19, !dbg !10913
  %21 = trunc i64 %20 to i32, !dbg !10914
  call void @llvm.dbg.value(metadata i32 %21, metadata !10887, metadata !DIExpression()), !dbg !10890
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !10903
  call void @llvm.dbg.value(metadata i32 %23, metadata !10887, metadata !DIExpression()), !dbg !10890
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10915
  %25 = lshr i32 %24, 15, !dbg !10916
  %26 = and i32 %25, 6, !dbg !10916
  %27 = add nuw nsw i32 %26, 2, !dbg !10916
  call void @llvm.dbg.value(metadata i32 %27, metadata !10888, metadata !DIExpression()), !dbg !10890
  %28 = udiv i32 %23, %27, !dbg !10917
  call void @llvm.dbg.value(metadata i32 %28, metadata !10889, metadata !DIExpression()), !dbg !10890
  br label %29, !dbg !10918

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !10919
  call void @llvm.dbg.value(metadata i32 %30, metadata !10889, metadata !DIExpression()), !dbg !10890
  ret i32 %30, !dbg !10920
}

; Function Attrs: optsize
declare !dbg !10921 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10924 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10928, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.value(metadata i32 %1, metadata !10929, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.value(metadata i32 %2, metadata !10930, metadata !DIExpression()), !dbg !10948
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !10949
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !10949
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !10931, metadata !DIExpression()), !dbg !10950
  %8 = icmp eq i32 %0, 0, !dbg !10951
  br i1 %8, label %9, label %23, !dbg !10952

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !10953
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !10953
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10941, metadata !DIExpression()), !dbg !10953
  store volatile i32 0, i32* %5, align 4, !dbg !10953
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10953
  %12 = or i32 %11, 1, !dbg !10953
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10953
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10953
  %14 = and i32 %13, 1, !dbg !10953
  store volatile i32 %14, i32* %5, align 4, !dbg !10953
  %15 = load volatile i32, i32* %5, align 4, !dbg !10953
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !10954
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !10955
  store i32 256, i32* %16, align 4, !dbg !10956
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !10957
  store i32 2, i32* %17, align 4, !dbg !10958
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !10959
  store i32 3, i32* %18, align 4, !dbg !10960
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !10961
  store i32 0, i32* %19, align 4, !dbg !10962
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !10963
  store i32 0, i32* %20, align 4, !dbg !10964
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !10965
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10966
  %22 = and i32 %21, -123731969, !dbg !10966
  br label %38, !dbg !10967

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !10968
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !10968
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10945, metadata !DIExpression()), !dbg !10968
  store volatile i32 0, i32* %6, align 4, !dbg !10968
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10968
  %26 = or i32 %25, 4, !dbg !10968
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10968
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10968
  %28 = and i32 %27, 4, !dbg !10968
  store volatile i32 %28, i32* %6, align 4, !dbg !10968
  %29 = load volatile i32, i32* %6, align 4, !dbg !10968
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !10969
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !10970
  store i32 512, i32* %30, align 4, !dbg !10971
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !10972
  store i32 2, i32* %31, align 4, !dbg !10973
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !10974
  store i32 3, i32* %32, align 4, !dbg !10975
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !10976
  store i32 0, i32* %33, align 4, !dbg !10977
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !10978
  store i32 0, i32* %34, align 4, !dbg !10979
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !10980
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10981
  %36 = and i32 %35, 134217727, !dbg !10981
  %37 = shl i32 %2, 3, !dbg !10981
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !10982
  %42 = or i32 %41, %40, !dbg !10982
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10982
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !10983
  ret void, !dbg !10983
}

; Function Attrs: optsize
declare !dbg !10984 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !10988 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !10989
  ret void, !dbg !10990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !10991 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !10992
  ret void, !dbg !10993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !10994 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !10995
  ret i32 %1, !dbg !10996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !10997 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !10998
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10999
  %3 = lshr i32 %2, 10, !dbg !11000
  %4 = and i32 %3, 7, !dbg !11000
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11001
  %6 = load i8, i8* %5, align 1, !dbg !11001
  %7 = zext i8 %6 to i32, !dbg !11001
  %8 = lshr i32 %1, %7, !dbg !11002
  ret i32 %8, !dbg !11003
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !11004 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11005
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11006
  %3 = lshr i32 %2, 13, !dbg !11007
  %4 = and i32 %3, 7, !dbg !11007
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11008
  %6 = load i8, i8* %5, align 1, !dbg !11008
  %7 = zext i8 %6 to i32, !dbg !11008
  %8 = lshr i32 %1, %7, !dbg !11009
  ret i32 %8, !dbg !11010
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11011 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11015, metadata !DIExpression()), !dbg !11016
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11017
  store i32 15, i32* %2, align 4, !dbg !11018
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11019
  %4 = and i32 %3, 262144, !dbg !11021
  %5 = icmp eq i32 %4, 0, !dbg !11022
  br i1 %5, label %8, label %6, !dbg !11023

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11024
  store i32 327680, i32* %7, align 4, !dbg !11026
  br label %15, !dbg !11027

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11028
  %10 = and i32 %9, 65536, !dbg !11030
  %11 = icmp eq i32 %10, 0, !dbg !11031
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11032
  br i1 %11, label %14, label %13, !dbg !11033

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11034
  br label %15, !dbg !11036

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11037
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11039
  %17 = and i32 %16, 1, !dbg !11041
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11042
  store i32 %17, i32* %18, align 4, !dbg !11044
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11045
  %20 = lshr i32 %19, 3, !dbg !11046
  %21 = and i32 %20, 31, !dbg !11046
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11047
  store i32 %21, i32* %22, align 4, !dbg !11048
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11049
  %24 = and i32 %23, 4, !dbg !11051
  %25 = icmp eq i32 %24, 0, !dbg !11052
  br i1 %25, label %28, label %26, !dbg !11053

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11054
  store i32 5, i32* %27, align 4, !dbg !11056
  br label %35, !dbg !11057

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11058
  %30 = and i32 %29, 1, !dbg !11060
  %31 = icmp eq i32 %30, 0, !dbg !11061
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11062
  br i1 %31, label %34, label %33, !dbg !11063

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11064
  br label %35, !dbg !11066

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11067
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11069
  %37 = and i32 %36, 1, !dbg !11071
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11072
  store i32 %37, i32* %38, align 4, !dbg !11074
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11075
  %40 = and i32 %39, 16777216, !dbg !11077
  %41 = icmp eq i32 %40, 0, !dbg !11078
  %42 = select i1 %41, i32 1, i32 2, !dbg !11079
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11080
  store i32 %42, i32* %43, align 4, !dbg !11082
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11083
  %45 = and i32 %44, 4194304, !dbg !11084
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11085
  store i32 %45, i32* %46, align 4, !dbg !11086
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11087
  %48 = and i32 %47, 63, !dbg !11088
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11089
  store i32 %48, i32* %49, align 4, !dbg !11090
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11091
  %51 = lshr i32 %50, 6, !dbg !11092
  %52 = and i32 %51, 511, !dbg !11092
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11093
  store i32 %52, i32* %53, align 4, !dbg !11094
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11095
  %55 = shl i32 %54, 1, !dbg !11096
  %56 = and i32 %55, 393216, !dbg !11096
  %57 = add nuw nsw i32 %56, 131072, !dbg !11096
  %58 = lshr exact i32 %57, 16, !dbg !11097
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11098
  store i32 %58, i32* %59, align 4, !dbg !11099
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11100
  %61 = lshr i32 %60, 24, !dbg !11101
  %62 = and i32 %61, 15, !dbg !11101
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11102
  store i32 %62, i32* %63, align 4, !dbg !11103
  ret void, !dbg !11104
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !11105 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11109, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32* %1, metadata !11110, metadata !DIExpression()), !dbg !11111
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11112
  store i32 15, i32* %3, align 4, !dbg !11113
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11114
  %5 = and i32 %4, 3, !dbg !11115
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11116
  store i32 %5, i32* %6, align 4, !dbg !11117
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11118
  %8 = and i32 %7, 240, !dbg !11119
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11120
  store i32 %8, i32* %9, align 4, !dbg !11121
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11122
  %11 = and i32 %10, 7168, !dbg !11123
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11124
  store i32 %11, i32* %12, align 4, !dbg !11125
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11126
  %14 = lshr i32 %13, 3, !dbg !11127
  %15 = and i32 %14, 7168, !dbg !11127
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11128
  store i32 %15, i32* %16, align 4, !dbg !11129
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11130
  %18 = and i32 %17, 7, !dbg !11131
  store i32 %18, i32* %1, align 4, !dbg !11132
  ret void, !dbg !11133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11134 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11135
  %2 = and i32 %1, 128, !dbg !11135
  %3 = icmp eq i32 %2, 0, !dbg !11135
  br i1 %3, label %5, label %4, !dbg !11137

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11138
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11140
  br label %5, !dbg !11141

5:                                                ; preds = %4, %0
  ret void, !dbg !11142
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11143 {
  ret void, !dbg !11144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !11145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11148, metadata !DIExpression()), !dbg !11149
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11150
  ret void, !dbg !11151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !11152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11155, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 1000, metadata !11156, metadata !DIExpression()), !dbg !11157
  %2 = udiv i32 %0, 1000, !dbg !11158
  %3 = add nsw i32 %2, -1, !dbg !11159
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11160
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11161
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11162
  ret void, !dbg !11163
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #16 !dbg !11164 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11166, metadata !DIExpression()), !dbg !11168
  %3 = bitcast i32* %2 to i8*, !dbg !11169
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11169
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11167, metadata !DIExpression()), !dbg !11170
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11171
  store volatile i32 %4, i32* %2, align 4, !dbg !11170
  %5 = load volatile i32, i32* %2, align 4, !dbg !11172
  %6 = icmp eq i32 %0, -1, !dbg !11173
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11166, metadata !DIExpression()), !dbg !11168
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11168
  call void @llvm.dbg.value(metadata i32 %8, metadata !11166, metadata !DIExpression()), !dbg !11168
  br label %9, !dbg !11175

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11166, metadata !DIExpression()), !dbg !11168
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11176
  call void @llvm.dbg.value(metadata i32 undef, metadata !11166, metadata !DIExpression()), !dbg !11168
  %12 = shl i32 %11, 15, !dbg !11168
  %13 = ashr i32 %12, 31, !dbg !11168
  %14 = add i32 %13, %10, !dbg !11168
  call void @llvm.dbg.value(metadata i32 %14, metadata !11166, metadata !DIExpression()), !dbg !11168
  %15 = icmp eq i32 %14, 0, !dbg !11175
  br i1 %15, label %16, label %9, !dbg !11175

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11179
  ret void, !dbg !11179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !11180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11182, metadata !DIExpression()), !dbg !11183
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11184
  ret void, !dbg !11185
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !11186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11191, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.value(metadata i32 0, metadata !11194, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.value(metadata i32 0, metadata !11195, metadata !DIExpression()), !dbg !11196
  %2 = icmp eq i32 %0, 0, !dbg !11197
  br i1 %2, label %50, label %3, !dbg !11199

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11200
  %5 = icmp eq i32 %4, 49152, !dbg !11203
  br i1 %5, label %6, label %15, !dbg !11204

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11194, metadata !DIExpression()), !dbg !11196
  %7 = add i32 %0, -64000001, !dbg !11205
  %8 = icmp ult i32 %7, 26000000, !dbg !11205
  br i1 %8, label %15, label %9, !dbg !11205

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11208
  %11 = select i1 %10, i32 0, i32 3, !dbg !11210
  call void @llvm.dbg.value(metadata i32 %11, metadata !11194, metadata !DIExpression()), !dbg !11196
  %12 = add i32 %0, -30000001, !dbg !11211
  %13 = icmp ult i32 %12, 60000000, !dbg !11211
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11211
  call void @llvm.dbg.value(metadata i32 %14, metadata !11194, metadata !DIExpression()), !dbg !11196
  br label %15, !dbg !11211

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11196
  call void @llvm.dbg.value(metadata i32 %16, metadata !11194, metadata !DIExpression()), !dbg !11196
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11214
  %18 = icmp eq i32 %17, 32768, !dbg !11216
  br i1 %18, label %19, label %27, !dbg !11217

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11218
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11221
  br i1 %22, label %27, label %23, !dbg !11221

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11222
  %25 = and i1 %24, %21, !dbg !11225
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11225
  call void @llvm.dbg.value(metadata i32 %26, metadata !11194, metadata !DIExpression()), !dbg !11196
  br label %27, !dbg !11225

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11226
  call void @llvm.dbg.value(metadata i32 %28, metadata !11194, metadata !DIExpression()), !dbg !11196
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11227
  %30 = icmp eq i32 %29, 16384, !dbg !11229
  br i1 %30, label %31, label %39, !dbg !11230

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11231
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11234
  br i1 %34, label %39, label %35, !dbg !11234

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11235
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11238
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11238
  call void @llvm.dbg.value(metadata i32 %38, metadata !11194, metadata !DIExpression()), !dbg !11196
  br label %39, !dbg !11238

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11226
  call void @llvm.dbg.value(metadata i32 %40, metadata !11194, metadata !DIExpression()), !dbg !11196
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !11239
  call void @llvm.dbg.value(metadata i32 2, metadata !11192, metadata !DIExpression()), !dbg !11196
  br label %41, !dbg !11240

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11226
  call void @llvm.dbg.value(metadata i32 %42, metadata !11192, metadata !DIExpression()), !dbg !11196
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11241
  call void @llvm.dbg.value(metadata i32 %43, metadata !11193, metadata !DIExpression()), !dbg !11196
  %44 = add nsw i32 %42, -1, !dbg !11243
  call void @llvm.dbg.value(metadata i32 %44, metadata !11192, metadata !DIExpression()), !dbg !11196
  %45 = icmp ne i32 %43, %40, !dbg !11244
  %46 = icmp ne i32 %44, 0, !dbg !11245
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11245
  br i1 %47, label %41, label %48, !dbg !11246, !llvm.loop !11247

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11249
  call void @llvm.dbg.value(metadata i32 %51, metadata !11195, metadata !DIExpression()), !dbg !11196
  ret i32 %51, !dbg !11250
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !11251 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11253
  %2 = and i32 %1, 49152, !dbg !11253
  ret i32 %2, !dbg !11254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !11255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11257, metadata !DIExpression()), !dbg !11258
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11259
  %3 = and i32 %2, -8, !dbg !11259
  %4 = or i32 %3, %0, !dbg !11259
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11259
  ret void, !dbg !11260
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !11261 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11262
  %2 = and i32 %1, 7, !dbg !11262
  ret i32 %2, !dbg !11263
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !11264 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11282, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11283, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32 0, metadata !11284, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32 0, metadata !11285, metadata !DIExpression()), !dbg !11286
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11287
  %4 = icmp eq i32 %3, 0, !dbg !11289
  br i1 %4, label %5, label %21, !dbg !11290

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !11291
  call void @llvm.dbg.value(metadata i32 %6, metadata !11285, metadata !DIExpression()), !dbg !11286
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.135() #24, !dbg !11293
  %8 = icmp eq i32 %7, 1, !dbg !11295
  br i1 %8, label %13, label %9, !dbg !11296

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.136() #24, !dbg !11297
  br label %10, !dbg !11299

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.135() #24, !dbg !11300
  %12 = icmp eq i32 %11, 1, !dbg !11301
  br i1 %12, label %13, label %10, !dbg !11299, !llvm.loop !11302

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11304
  %15 = load i32, i32* %14, align 4, !dbg !11304
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11305
  %17 = load i32, i32* %16, align 4, !dbg !11305
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11306
  %19 = load i32, i32* %18, align 4, !dbg !11306
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.137(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !11307
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11308
  call void @llvm.dbg.value(metadata i32 %20, metadata !11284, metadata !DIExpression()), !dbg !11286
  br label %21, !dbg !11309

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11310
  call void @llvm.dbg.value(metadata i32 %22, metadata !11284, metadata !DIExpression()), !dbg !11286
  ret i32 %22, !dbg !11311
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !11312 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11316, metadata !DIExpression()), !dbg !11317
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.139() #24, !dbg !11318
  %2 = icmp ne i32 %1, 0, !dbg !11320
  call void @llvm.dbg.value(metadata i1 %2, metadata !11316, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11317
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !11321
  %4 = icmp ne i32 %3, 0, !dbg !11323
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11324
  %6 = zext i1 %5 to i32, !dbg !11324
  call void @llvm.dbg.value(metadata i32 %6, metadata !11316, metadata !DIExpression()), !dbg !11317
  ret i32 %6, !dbg !11325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !11326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11330, metadata !DIExpression()), !dbg !11333
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11331, metadata !DIExpression()), !dbg !11333
  call void @llvm.dbg.value(metadata i32 0, metadata !11332, metadata !DIExpression()), !dbg !11333
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11334
  %4 = load i32, i32* %3, align 4, !dbg !11334
  %5 = and i32 %4, 63, !dbg !11335
  %6 = udiv i32 %0, %5, !dbg !11336
  call void @llvm.dbg.value(metadata i32 %6, metadata !11332, metadata !DIExpression()), !dbg !11333
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11337
  %8 = load i32, i32* %7, align 4, !dbg !11337
  %9 = and i32 %8, 511, !dbg !11338
  %10 = mul i32 %9, %6, !dbg !11339
  call void @llvm.dbg.value(metadata i32 %10, metadata !11332, metadata !DIExpression()), !dbg !11333
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11340
  %12 = load i32, i32* %11, align 4, !dbg !11340
  %13 = lshr i32 %12, 15, !dbg !11341
  %14 = and i32 %13, 131070, !dbg !11341
  %15 = add nuw nsw i32 %14, 2, !dbg !11341
  %16 = udiv i32 %10, %15, !dbg !11342
  call void @llvm.dbg.value(metadata i32 %16, metadata !11332, metadata !DIExpression()), !dbg !11333
  ret i32 %16, !dbg !11343
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.135() unnamed_addr #15 !dbg !11344 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11345
  %2 = lshr i32 %1, 1, !dbg !11346
  %3 = and i32 %2, 1, !dbg !11346
  ret i32 %3, !dbg !11347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.136() unnamed_addr #14 !dbg !11348 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11349
  %2 = or i32 %1, 1, !dbg !11349
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11349
  ret void, !dbg !11350
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.137(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !11351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11353, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata i32 %1, metadata !11354, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata i32 %2, metadata !11355, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata i32 %3, metadata !11356, metadata !DIExpression()), !dbg !11357
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11358
  %6 = and i32 %5, -4227072, !dbg !11358
  %7 = or i32 %1, %0, !dbg !11358
  %8 = shl i32 %2, 6, !dbg !11358
  %9 = or i32 %7, %8, !dbg !11358
  %10 = or i32 %9, %6, !dbg !11358
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11358
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11359
  %12 = and i32 %11, -196609, !dbg !11359
  %13 = or i32 %12, %3, !dbg !11359
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11359
  ret void, !dbg !11360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !11361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11365, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11366, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.value(metadata i32 0, metadata !11367, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.value(metadata i32 0, metadata !11368, metadata !DIExpression()), !dbg !11369
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11370
  %4 = load i32, i32* %3, align 4, !dbg !11370
  %5 = lshr i32 %4, 4, !dbg !11370
  %6 = and i32 %5, 15, !dbg !11370
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11370
  %8 = load i8, i8* %7, align 1, !dbg !11370
  %9 = zext i8 %8 to i32, !dbg !11370
  %10 = lshr i32 %0, %9, !dbg !11370
  call void @llvm.dbg.value(metadata i32 %10, metadata !11368, metadata !DIExpression()), !dbg !11369
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11371
  %12 = icmp ult i32 %11, %10, !dbg !11373
  br i1 %12, label %13, label %16, !dbg !11374

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !11375
  call void @llvm.dbg.value(metadata i32 %14, metadata !11367, metadata !DIExpression()), !dbg !11369
  %15 = icmp eq i32 %14, 0, !dbg !11377
  br i1 %15, label %16, label %30, !dbg !11379

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.138() #24, !dbg !11380
  br label %17, !dbg !11382

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.139() #24, !dbg !11383
  %19 = icmp eq i32 %18, 1, !dbg !11384
  br i1 %19, label %20, label %17, !dbg !11382, !llvm.loop !11385

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11387
  tail call fastcc void @LL_RCC_SetAHBPrescaler.140(i32 noundef %21) #24, !dbg !11388
  tail call fastcc void @LL_RCC_SetSysClkSource.141() #24, !dbg !11389
  br label %22, !dbg !11390

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.142() #24, !dbg !11391
  %24 = icmp eq i32 %23, 8, !dbg !11392
  br i1 %24, label %25, label %22, !dbg !11390, !llvm.loop !11393

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11395
  %27 = load i32, i32* %26, align 4, !dbg !11395
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.143(i32 noundef %27) #24, !dbg !11396
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11397
  %29 = load i32, i32* %28, align 4, !dbg !11397
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.144(i32 noundef %29) #24, !dbg !11398
  br label %30, !dbg !11399

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11400
  %33 = icmp ugt i32 %32, %10, !dbg !11402
  br i1 %33, label %34, label %36, !dbg !11403

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !11404
  call void @llvm.dbg.value(metadata i32 %35, metadata !11367, metadata !DIExpression()), !dbg !11369
  br label %36, !dbg !11406

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11369
  call void @llvm.dbg.value(metadata i32 %37, metadata !11367, metadata !DIExpression()), !dbg !11369
  %38 = icmp eq i32 %37, 0, !dbg !11407
  br i1 %38, label %39, label %40, !dbg !11409

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !11410
  br label %40, !dbg !11412

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11413
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.138() unnamed_addr #14 !dbg !11414 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11415
  %2 = or i32 %1, 16777216, !dbg !11415
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11415
  ret void, !dbg !11416
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.139() unnamed_addr #15 !dbg !11417 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11418
  %2 = lshr i32 %1, 25, !dbg !11419
  %3 = and i32 %2, 1, !dbg !11419
  ret i32 %3, !dbg !11420
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.140(i32 noundef %0) unnamed_addr #14 !dbg !11421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11423, metadata !DIExpression()), !dbg !11424
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11425
  %3 = and i32 %2, -241, !dbg !11425
  %4 = or i32 %3, %0, !dbg !11425
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11425
  ret void, !dbg !11426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.141() unnamed_addr #14 !dbg !11427 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11429, metadata !DIExpression()), !dbg !11430
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11431
  %2 = and i32 %1, -4, !dbg !11431
  %3 = or i32 %2, 2, !dbg !11431
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11431
  ret void, !dbg !11432
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.142() unnamed_addr #15 !dbg !11433 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11434
  %2 = and i32 %1, 12, !dbg !11434
  ret i32 %2, !dbg !11435
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.143(i32 noundef %0) unnamed_addr #14 !dbg !11436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11438, metadata !DIExpression()), !dbg !11439
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11440
  %3 = and i32 %2, -7169, !dbg !11440
  %4 = or i32 %3, %0, !dbg !11440
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11440
  ret void, !dbg !11441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.144(i32 noundef %0) unnamed_addr #14 !dbg !11442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11444, metadata !DIExpression()), !dbg !11445
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11446
  %3 = and i32 %2, -57345, !dbg !11446
  %4 = or i32 %3, %0, !dbg !11446
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11446
  ret void, !dbg !11447
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !11448 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11449
  %2 = lshr i32 %1, 27, !dbg !11450
  %3 = and i32 %2, 1, !dbg !11450
  ret i32 %3, !dbg !11451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !11452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11456, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata i32 %1, metadata !11457, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !11458, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11459, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata i32 0, metadata !11460, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata i32 0, metadata !11461, metadata !DIExpression()), !dbg !11462
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11463
  %6 = icmp eq i32 %5, 0, !dbg !11465
  br i1 %6, label %7, label %27, !dbg !11466

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !11467
  call void @llvm.dbg.value(metadata i32 %8, metadata !11461, metadata !DIExpression()), !dbg !11462
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !11469
  %10 = icmp eq i32 %9, 1, !dbg !11471
  br i1 %10, label %19, label %11, !dbg !11472

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11473
  br i1 %12, label %13, label %14, !dbg !11476

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !11477
  br label %15, !dbg !11479

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !11480
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !11482
  br label %16, !dbg !11483

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !11484
  %18 = icmp eq i32 %17, 1, !dbg !11485
  br i1 %18, label %19, label %16, !dbg !11483, !llvm.loop !11486

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !11488
  %21 = load i32, i32* %20, align 4, !dbg !11488
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !11489
  %23 = load i32, i32* %22, align 4, !dbg !11489
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !11490
  %25 = load i32, i32* %24, align 4, !dbg !11490
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.137(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !11491
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !11492
  call void @llvm.dbg.value(metadata i32 %26, metadata !11460, metadata !DIExpression()), !dbg !11462
  br label %27, !dbg !11493

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11494
  call void @llvm.dbg.value(metadata i32 %28, metadata !11460, metadata !DIExpression()), !dbg !11462
  ret i32 %28, !dbg !11495
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !11496 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11497
  %2 = lshr i32 %1, 17, !dbg !11498
  %3 = and i32 %2, 1, !dbg !11498
  ret i32 %3, !dbg !11499
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !11500 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11501
  %2 = or i32 %1, 262144, !dbg !11501
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11501
  ret void, !dbg !11502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !11503 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11504
  %2 = and i32 %1, -262145, !dbg !11504
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11504
  ret void, !dbg !11505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !11506 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11507
  %2 = or i32 %1, 65536, !dbg !11507
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11507
  ret void, !dbg !11508
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !11509 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11512, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i32 undef, metadata !11512, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i32 undef, metadata !11512, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11528
  ret void, !dbg !11529
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11530 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11534, metadata !DIExpression()), !dbg !11536
  %2 = icmp eq i8* %0, null, !dbg !11537
  br i1 %2, label %29, label %3, !dbg !11539

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11540
  %5 = icmp eq i8 %4, 0, !dbg !11541
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11542
  br i1 %6, label %29, label %8, !dbg !11542

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11535, metadata !DIExpression()), !dbg !11536
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11543

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11535, metadata !DIExpression()), !dbg !11536
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !11545
  br i1 %10, label %11, label %15, !dbg !11550

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11551
  %13 = load i8*, i8** %12, align 4, !dbg !11551
  %14 = icmp eq i8* %13, %0, !dbg !11552
  br i1 %14, label %29, label %15, !dbg !11553

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11554
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11535, metadata !DIExpression()), !dbg !11536
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11555
  br i1 %17, label %7, label %8, !dbg !11556, !llvm.loop !11557

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11535, metadata !DIExpression()), !dbg !11536
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !11559
  br i1 %20, label %21, label %26, !dbg !11563

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11564
  %23 = load i8*, i8** %22, align 4, !dbg !11564
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !11565
  %25 = icmp eq i32 %24, 0, !dbg !11566
  br i1 %25, label %29, label %26, !dbg !11567

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11568
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11535, metadata !DIExpression()), !dbg !11536
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11569
  br i1 %28, label %29, label %18, !dbg !11543, !llvm.loop !11570

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11536
  ret %struct.device* %30, !dbg !11572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !11573 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11577, metadata !DIExpression()), !dbg !11578
  %2 = icmp eq %struct.device* %0, null, !dbg !11579
  br i1 %2, label %14, label %3, !dbg !11581

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11582
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11582
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11583
  %7 = load i8, i8* %6, align 1, !dbg !11583
  %8 = and i8 %7, 1, !dbg !11583
  %9 = icmp eq i8 %8, 0, !dbg !11583
  br i1 %9, label %14, label %10, !dbg !11584

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11585
  %12 = load i8, i8* %11, align 1, !dbg !11585
  %13 = icmp eq i8 %12, 0, !dbg !11586
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11578
  ret i1 %15, !dbg !11587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !11588 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11593, metadata !DIExpression()), !dbg !11594
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11595
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11596
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11597 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11605, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11606, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata i8* %2, metadata !11607, metadata !DIExpression()), !dbg !11610
  %5 = bitcast i32* %4 to i8*, !dbg !11611
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11611
  call void @llvm.dbg.value(metadata i32 0, metadata !11608, metadata !DIExpression()), !dbg !11610
  store i32 0, i32* %4, align 4, !dbg !11612
  call void @llvm.dbg.value(metadata i32* %4, metadata !11608, metadata !DIExpression(DW_OP_deref)), !dbg !11610
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11613
  call void @llvm.dbg.value(metadata i16* %6, metadata !11609, metadata !DIExpression()), !dbg !11610
  %7 = load i32, i32* %4, align 4, !dbg !11614
  call void @llvm.dbg.value(metadata i32 %7, metadata !11608, metadata !DIExpression()), !dbg !11610
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11615
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11616
  ret i32 %8, !dbg !11617
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !11618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11622, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata i32* %1, metadata !11623, metadata !DIExpression()), !dbg !11628
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11629
  %4 = load i16*, i16** %3, align 4, !dbg !11629
  call void @llvm.dbg.value(metadata i16* %4, metadata !11624, metadata !DIExpression()), !dbg !11628
  %5 = icmp eq i16* %4, null, !dbg !11630
  br i1 %5, label %14, label %6, !dbg !11631

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11632
  call void @llvm.dbg.value(metadata i32 %7, metadata !11625, metadata !DIExpression()), !dbg !11632
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11633
  %9 = load i16, i16* %8, align 2, !dbg !11633
  %10 = add i16 %9, -32767, !dbg !11634
  %11 = icmp ult i16 %10, 2, !dbg !11634
  %12 = add i32 %7, 1, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %12, metadata !11625, metadata !DIExpression()), !dbg !11632
  br i1 %11, label %13, label %6, !dbg !11634, !llvm.loop !11637

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11640
  br label %14, !dbg !11641

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11643 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11647, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 %1, metadata !11648, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11649, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i8* %3, metadata !11650, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 0, metadata !11651, metadata !DIExpression()), !dbg !11659
  %5 = icmp eq i32 %1, 0, !dbg !11660
  br i1 %5, label %16, label %8, !dbg !11661

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11651, metadata !DIExpression()), !dbg !11659
  %7 = icmp eq i32 %15, %1, !dbg !11660
  br i1 %7, label %16, label %8, !dbg !11661, !llvm.loop !11662

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11651, metadata !DIExpression()), !dbg !11659
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11664
  %11 = load i16, i16* %10, align 2, !dbg !11664
  call void @llvm.dbg.value(metadata i16 %11, metadata !11653, metadata !DIExpression()), !dbg !11665
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !11666
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11656, metadata !DIExpression()), !dbg !11665
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !11667
  call void @llvm.dbg.value(metadata i32 %13, metadata !11657, metadata !DIExpression()), !dbg !11665
  %14 = icmp slt i32 %13, 0, !dbg !11668
  %15 = add nuw i32 %9, 1, !dbg !11670
  call void @llvm.dbg.value(metadata i32 %15, metadata !11651, metadata !DIExpression()), !dbg !11659
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !11672 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11676, metadata !DIExpression()), !dbg !11679
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11677, metadata !DIExpression()), !dbg !11679
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11678, metadata !DIExpression()), !dbg !11679
  %2 = sext i16 %0 to i32, !dbg !11680
  %3 = icmp slt i16 %0, 1, !dbg !11682
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11683
  %6 = add nsw i32 %2, -1, !dbg !11683
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11683
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11683
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11677, metadata !DIExpression()), !dbg !11679
  ret %struct.device* %8, !dbg !11684
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11685 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11687, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11688, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata i8* %2, metadata !11689, metadata !DIExpression()), !dbg !11692
  %5 = bitcast i32* %4 to i8*, !dbg !11693
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11693
  call void @llvm.dbg.value(metadata i32 0, metadata !11690, metadata !DIExpression()), !dbg !11692
  store i32 0, i32* %4, align 4, !dbg !11694
  call void @llvm.dbg.value(metadata i32* %4, metadata !11690, metadata !DIExpression(DW_OP_deref)), !dbg !11692
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11695
  call void @llvm.dbg.value(metadata i16* %6, metadata !11691, metadata !DIExpression()), !dbg !11692
  %7 = load i32, i32* %4, align 4, !dbg !11696
  call void @llvm.dbg.value(metadata i32 %7, metadata !11690, metadata !DIExpression()), !dbg !11692
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11697
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11698
  ret i32 %8, !dbg !11699
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !11700 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11702, metadata !DIExpression()), !dbg !11707
  call void @llvm.dbg.value(metadata i32* %1, metadata !11703, metadata !DIExpression()), !dbg !11707
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11708
  %4 = load i16*, i16** %3, align 4, !dbg !11708
  call void @llvm.dbg.value(metadata i16* %4, metadata !11704, metadata !DIExpression()), !dbg !11707
  call void @llvm.dbg.value(metadata i32 0, metadata !11705, metadata !DIExpression()), !dbg !11707
  call void @llvm.dbg.value(metadata i32 0, metadata !11706, metadata !DIExpression()), !dbg !11707
  %5 = icmp eq i16* %4, null, !dbg !11709
  br i1 %5, label %22, label %6, !dbg !11711

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11705, metadata !DIExpression()), !dbg !11707
  call void @llvm.dbg.value(metadata i16* %8, metadata !11704, metadata !DIExpression()), !dbg !11707
  %9 = load i16, i16* %8, align 2, !dbg !11712
  %10 = icmp eq i16 %9, -32768, !dbg !11716
  call void @llvm.dbg.value(metadata i32 undef, metadata !11705, metadata !DIExpression()), !dbg !11707
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11717
  call void @llvm.dbg.value(metadata i16* %11, metadata !11704, metadata !DIExpression()), !dbg !11707
  %12 = zext i1 %10 to i32, !dbg !11718
  %13 = add i32 %7, %12, !dbg !11718
  call void @llvm.dbg.value(metadata i32 %13, metadata !11705, metadata !DIExpression()), !dbg !11707
  %14 = icmp eq i32 %13, 2, !dbg !11719
  br i1 %14, label %15, label %6, !dbg !11720

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11707
  call void @llvm.dbg.value(metadata i32 %16, metadata !11706, metadata !DIExpression()), !dbg !11707
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11721
  %18 = load i16, i16* %17, align 2, !dbg !11721
  %19 = icmp eq i16 %18, 32767, !dbg !11722
  %20 = add i32 %16, 1, !dbg !11723
  call void @llvm.dbg.value(metadata i32 %20, metadata !11706, metadata !DIExpression()), !dbg !11707
  br i1 %19, label %21, label %15, !dbg !11725, !llvm.loop !11726

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11728
  br label %22, !dbg !11729

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11730
  call void @llvm.dbg.value(metadata i16* %23, metadata !11704, metadata !DIExpression()), !dbg !11707
  ret i16* %23, !dbg !11731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !11732 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11735
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 7, !dbg !11736
  ret i32* %2, !dbg !11737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !11738 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11897, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11898, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11899, metadata !DIExpression()), !dbg !11900
  ret void, !dbg !11901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !11902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11906, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.value(metadata i32 %1, metadata !11907, metadata !DIExpression()), !dbg !11908
  ret void, !dbg !11909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !11910 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11914, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.value(metadata i32 %1, metadata !11915, metadata !DIExpression()), !dbg !11916
  ret void, !dbg !11917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !11918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11922, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i8* %1, metadata !11923, metadata !DIExpression()), !dbg !11924
  ret i32 -134, !dbg !11925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !11926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11930, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i8* %1, metadata !11931, metadata !DIExpression()), !dbg !11932
  ret i32 -134, !dbg !11933
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11937, metadata !DIExpression()), !dbg !11938
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11939, !srcloc !11945
  call void @llvm.dbg.value(metadata i32 undef, metadata !11942, metadata !DIExpression()) #23, !dbg !11946
  call void @llvm.dbg.value(metadata i32 undef, metadata !11943, metadata !DIExpression()) #23, !dbg !11946
  br label %3, !dbg !11947

3:                                                ; preds = %3, %1
  br label %3, !dbg !11948, !llvm.loop !11951
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11958, metadata !DIExpression()), !dbg !11960
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11959, metadata !DIExpression()), !dbg !11960
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11961
  unreachable, !dbg !11961
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11964, metadata !DIExpression()), !dbg !11965
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11966
  unreachable, !dbg !11966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11969, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11970, metadata !DIExpression()), !dbg !11973
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11974, !srcloc !11945
  call void @llvm.dbg.value(metadata i32 undef, metadata !11942, metadata !DIExpression()) #23, !dbg !11976
  call void @llvm.dbg.value(metadata i32 undef, metadata !11943, metadata !DIExpression()) #23, !dbg !11976
  call void @llvm.dbg.value(metadata i32 undef, metadata !11971, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11972, metadata !DIExpression()), !dbg !11973
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !11977
  %4 = icmp eq i32 %0, 4, !dbg !11978
  br i1 %4, label %5, label %6, !dbg !11983

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #26, !dbg !11984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3.154, i32 0, i32 0)) #26, !dbg !11984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #26, !dbg !11984
  unreachable, !dbg !11984

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !11974
  call void @llvm.dbg.value(metadata i32 %7, metadata !11942, metadata !DIExpression()) #23, !dbg !11976
  call void @llvm.dbg.value(metadata i32 %7, metadata !11971, metadata !DIExpression()), !dbg !11973
  %8 = tail call fastcc %struct.k_thread* @k_current_get.155() #25, !dbg !11986
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !11972, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.value(metadata i32 undef, metadata !11987, metadata !DIExpression()) #23, !dbg !11990
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !11992, !srcloc !11993
  tail call fastcc void @k_thread_abort.156(%struct.k_thread* noundef %8) #24, !dbg !11994
  ret void, !dbg !11997
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.155() unnamed_addr #5 !dbg !11998 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.157() #25, !dbg !12002
  ret %struct.k_thread* %1, !dbg !12003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.156(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12004 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12008, metadata !DIExpression()), !dbg !12009
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12010, !srcloc !12012
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !12013
  ret void, !dbg !12014
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.157() unnamed_addr #5 !dbg !12015 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12016, !srcloc !12018
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !12019
  ret %struct.k_thread* %1, !dbg !12020
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12021 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12025, metadata !DIExpression()), !dbg !12028
  call void @llvm.dbg.value(metadata i32 %1, metadata !12026, metadata !DIExpression()), !dbg !12028
  call void @llvm.dbg.value(metadata i32 %2, metadata !12027, metadata !DIExpression()), !dbg !12028
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !12029
  ret void, !dbg !12030
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12031 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12035, metadata !DIExpression()), !dbg !12038
  call void @llvm.dbg.value(metadata i8* %1, metadata !12036, metadata !DIExpression()), !dbg !12038
  call void @llvm.dbg.value(metadata i32 %2, metadata !12037, metadata !DIExpression()), !dbg !12038
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !12039
  ret void, !dbg !12040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12041 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12042
  ret void, !dbg !12043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12046, metadata !DIExpression()), !dbg !12047
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12048
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12049
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12050
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12051
  %4 = trunc i32 %0 to i8, !dbg !12052
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12053
  store i8 %4, i8* %5, align 4, !dbg !12054
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12055
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12056
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12057
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12058
  store i8* %8, i8** %9, align 4, !dbg !12059
  ret void, !dbg !12060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12063, metadata !DIExpression()), !dbg !12069
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12070
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12064, metadata !DIExpression()), !dbg !12069
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12071
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12065, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.162, i32 0, i32 0), metadata !12068, metadata !DIExpression()), !dbg !12069
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12072
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12073
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 40, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.162, i32 0, i32 0)) #26, !dbg !12074
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12075
  ret void, !dbg !12076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12077 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12081, metadata !DIExpression()), !dbg !12082
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12083
  ret i8* %2, !dbg !12084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !12085 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12090, metadata !DIExpression()), !dbg !12091
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12092
  %3 = load i8, i8* %2, align 1, !dbg !12093
  %4 = and i8 %3, -5, !dbg !12093
  store i8 %4, i8* %2, align 1, !dbg !12093
  ret void, !dbg !12094
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !12095 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12098
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !12099
  %3 = ptrtoint i8* %2 to i32, !dbg !12108
  %4 = add i32 %3, 2048, !dbg !12109
  call void @llvm.dbg.value(metadata i32 %4, metadata !12103, metadata !DIExpression()) #23, !dbg !12110
  call void @llvm.dbg.value(metadata i32 %4, metadata !12111, metadata !DIExpression()) #23, !dbg !12114
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12116, !srcloc !12117
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12118
  %6 = or i32 %5, 512, !dbg !12118
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12118
  tail call fastcc void @__NVIC_SetPriority.165(i32 noundef -2, i32 noundef 255) #26, !dbg !12119
  tail call fastcc void @__NVIC_SetPriority.165(i32 noundef -5, i32 noundef 0) #26, !dbg !12122
  tail call fastcc void @__NVIC_SetPriority.165(i32 noundef -12, i32 noundef 0) #26, !dbg !12123
  tail call fastcc void @__NVIC_SetPriority.165(i32 noundef -11, i32 noundef 0) #26, !dbg !12124
  tail call fastcc void @__NVIC_SetPriority.165(i32 noundef -10, i32 noundef 0) #26, !dbg !12125
  tail call fastcc void @__NVIC_SetPriority.165(i32 noundef -4, i32 noundef 0) #26, !dbg !12126
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12127
  %8 = or i32 %7, 458752, !dbg !12127
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12127
  tail call void @z_arm_fault_init() #26, !dbg !12128
  tail call void @z_arm_cpu_idle_init() #26, !dbg !12129
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12130
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12133
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !12134
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !12135
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12136
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %10) #23, !dbg !12136
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12097, metadata !DIExpression()), !dbg !12137
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12138
  call void @z_device_state_init() #26, !dbg !12139
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12140
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12141
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12142
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12143
  unreachable, !dbg !12143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2045, metadata !DIExpression()), !dbg !12144
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12145
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12145
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2046, metadata !DIExpression()), !dbg !12144
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2046, metadata !DIExpression()), !dbg !12144
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12146
  br i1 %7, label %8, label %35, !dbg !12147

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2046, metadata !DIExpression()), !dbg !12144
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12148
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12148
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2056, metadata !DIExpression()), !dbg !12149
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12150
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12150
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %14, metadata !2060, metadata !DIExpression()), !dbg !12149
  %15 = icmp eq %struct.device* %11, null, !dbg !12152
  br i1 %15, label %32, label %16, !dbg !12154

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12155
  br i1 %17, label %26, label %18, !dbg !12158

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12159
  call void @llvm.dbg.value(metadata i32 %19, metadata !2060, metadata !DIExpression()), !dbg !12149
  %20 = icmp ult i32 %19, 255, !dbg !12161
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12161
  call void @llvm.dbg.value(metadata i32 %21, metadata !2060, metadata !DIExpression()), !dbg !12149
  %22 = trunc i32 %21 to i8, !dbg !12162
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12163
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12163
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12164
  store i8 %22, i8* %25, align 1, !dbg !12165
  br label %26, !dbg !12166

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12167
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12167
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12168
  %30 = load i8, i8* %29, align 1, !dbg !12169
  %31 = or i8 %30, 1, !dbg !12169
  store i8 %31, i8* %29, align 1, !dbg !12169
  br label %32, !dbg !12170

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12171
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2046, metadata !DIExpression()), !dbg !12144
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12146
  br i1 %34, label %8, label %35, !dbg !12147, !llvm.loop !12172

35:                                               ; preds = %32, %1
  ret void, !dbg !12174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.165(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !12175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12177, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata i32 %1, metadata !12178, metadata !DIExpression()), !dbg !12179
  %3 = trunc i32 %1 to i8, !dbg !12180
  %4 = shl i8 %3, 4, !dbg !12180
  %5 = and i32 %0, 15, !dbg !12183
  %6 = add nsw i32 %5, -4, !dbg !12184
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12185
  store volatile i8 %4, i8* %7, align 1, !dbg !12186
  ret void, !dbg !12187
}

; Function Attrs: optsize
declare !dbg !12188 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12192, metadata !DIExpression()), !dbg !12193
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12194
  store i8 1, i8* %2, align 1, !dbg !12195
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12196
  store i8 1, i8* %3, align 4, !dbg !12197
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !12198
  store i32 0, i32* %4, align 8, !dbg !12199
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 1, !dbg !12200
  store i32 0, i32* %5, align 4, !dbg !12201
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 9, !dbg !12202
  store %struct.k_heap* null, %struct.k_heap** %6, align 4, !dbg !12203
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12204
  ret void, !dbg !12205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12206 {
  tail call void @z_sched_init() #26, !dbg !12211
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12212
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.166, i32 0, i32 0)) #26, !dbg !12213
  call void @llvm.dbg.value(metadata i8* %1, metadata !12210, metadata !DIExpression()), !dbg !12214
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12215
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12216
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12217
  ret i8* %1, !dbg !12218
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !12219 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12223, metadata !DIExpression()), !dbg !12224
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !12225
  unreachable, !dbg !12226
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12227 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12229, metadata !DIExpression()), !dbg !12232
  call void @llvm.dbg.value(metadata i8* %1, metadata !12230, metadata !DIExpression()), !dbg !12232
  call void @llvm.dbg.value(metadata i8* %2, metadata !12231, metadata !DIExpression()), !dbg !12232
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12233
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12234
  tail call void @boot_banner() #26, !dbg !12235
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12236
  tail call void @z_init_static_threads() #26, !dbg !12237
  tail call void @main() #26, !dbg !12238
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12239
  %5 = and i8 %4, -2, !dbg !12239
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12239
  ret void, !dbg !12240
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12241 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12251, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i8* %1, metadata !12252, metadata !DIExpression()), !dbg !12259
  %3 = icmp eq void (%struct.k_thread*, i8*)* %0, null, !dbg !12260
  br i1 %3, label %4, label %5, !dbg !12263

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 51) #26, !dbg !12264
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.170, i32 0, i32 0)) #26, !dbg !12264
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 51) #26, !dbg !12264
  unreachable, !dbg !12264

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12266, metadata !DIExpression()) #23, !dbg !12273
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12275, !srcloc !12281
  call void @llvm.dbg.value(metadata i32 undef, metadata !12278, metadata !DIExpression()) #23, !dbg !12282
  call void @llvm.dbg.value(metadata i32 undef, metadata !12279, metadata !DIExpression()) #23, !dbg !12282
  call void @llvm.dbg.value(metadata i32 undef, metadata !12272, metadata !DIExpression()) #23, !dbg !12273
  %7 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12283
  br i1 %7, label %9, label %8, !dbg !12286

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12287
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12287
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12287
  unreachable, !dbg !12287

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12278, metadata !DIExpression()) #23, !dbg !12282
  call void @llvm.dbg.value(metadata i32 undef, metadata !12272, metadata !DIExpression()) #23, !dbg !12273
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12289
  call void @llvm.dbg.value(metadata i32 undef, metadata !12254, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12253, metadata !DIExpression()), !dbg !12259
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12290
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !12253, metadata !DIExpression()), !dbg !12259
  %11 = icmp eq %struct.k_thread* %10, null, !dbg !12292
  br i1 %11, label %17, label %12, !dbg !12292

12:                                               ; preds = %9, %12
  %13 = phi %struct.k_thread* [ %15, %12 ], [ %10, %9 ]
  tail call void %0(%struct.k_thread* noundef nonnull %13, i8* noundef %1) #26, !dbg !12293
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 5, !dbg !12296
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12253, metadata !DIExpression()), !dbg !12259
  %15 = load %struct.k_thread*, %struct.k_thread** %14, align 4, !dbg !12290
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12253, metadata !DIExpression()), !dbg !12259
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12292
  br i1 %16, label %17, label %12, !dbg !12292, !llvm.loop !12297

17:                                               ; preds = %12, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12304, metadata !DIExpression()) #23, !dbg !12305
  %18 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12307
  br i1 %18, label %20, label %19, !dbg !12310

19:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12311
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12311
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12311
  unreachable, !dbg !12311

20:                                               ; preds = %17
  %21 = extractvalue { i32, i32 } %6, 0, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %21, metadata !12278, metadata !DIExpression()) #23, !dbg !12282
  call void @llvm.dbg.value(metadata i32 %21, metadata !12272, metadata !DIExpression()) #23, !dbg !12273
  call void @llvm.dbg.value(metadata i32 %21, metadata !12254, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12305
  call void @llvm.dbg.value(metadata i32 undef, metadata !12313, metadata !DIExpression()) #23, !dbg !12316
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !12318, !srcloc !12319
  ret void, !dbg !12320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !12321 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12325, metadata !DIExpression()), !dbg !12327
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12328
  %3 = load i32, i32* %2, align 4, !dbg !12328
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()), !dbg !12327
  %4 = icmp eq i32 %3, 0, !dbg !12329
  br i1 %4, label %10, label %5, !dbg !12331

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !12332
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12335
  %8 = zext i8 %7 to i32, !dbg !12336
  %9 = icmp eq i32 %6, %8, !dbg !12337
  br i1 %9, label %11, label %10, !dbg !12338

10:                                               ; preds = %5, %1
  br label %11, !dbg !12339

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !12327
  ret i1 %12, !dbg !12340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #10 !dbg !12341 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12345, metadata !DIExpression()), !dbg !12346
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12347
  %3 = zext i8 %2 to i32, !dbg !12348
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12349
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !12350
  %6 = or i32 %5, %3, !dbg !12351
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12352
  store i32 %6, i32* %7, align 4, !dbg !12353
  ret void, !dbg !12354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #10 !dbg !12355 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12357, metadata !DIExpression()), !dbg !12358
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12359
  %3 = load i32, i32* %2, align 4, !dbg !12359
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12361
  %5 = zext i8 %4 to i32, !dbg !12362
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12363
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !12364
  %8 = or i32 %7, %5, !dbg !12365
  %9 = icmp eq i32 %3, %8, !dbg !12366
  br i1 %9, label %10, label %11, !dbg !12367

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !12368
  br label %11, !dbg !12369

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !12370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12371 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12373, metadata !DIExpression()), !dbg !12377
  call void @llvm.dbg.value(metadata i8* %1, metadata !12374, metadata !DIExpression()), !dbg !12377
  %3 = icmp eq void (%struct.k_thread*, i8*)* %0, null, !dbg !12378
  br i1 %3, label %4, label %5, !dbg !12381

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 79) #26, !dbg !12382
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.170, i32 0, i32 0)) #26, !dbg !12382
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 79) #26, !dbg !12382
  unreachable, !dbg !12382

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12266, metadata !DIExpression()) #23, !dbg !12384
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12386, !srcloc !12281
  call void @llvm.dbg.value(metadata i32 undef, metadata !12278, metadata !DIExpression()) #23, !dbg !12388
  call void @llvm.dbg.value(metadata i32 undef, metadata !12279, metadata !DIExpression()) #23, !dbg !12388
  call void @llvm.dbg.value(metadata i32 undef, metadata !12272, metadata !DIExpression()) #23, !dbg !12384
  %7 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12389
  br i1 %7, label %9, label %8, !dbg !12390

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12391
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12391
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12391
  unreachable, !dbg !12391

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12278, metadata !DIExpression()) #23, !dbg !12388
  call void @llvm.dbg.value(metadata i32 undef, metadata !12272, metadata !DIExpression()) #23, !dbg !12384
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12392
  call void @llvm.dbg.value(metadata i32 undef, metadata !12376, metadata !DIExpression()), !dbg !12377
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12375, metadata !DIExpression()), !dbg !12377
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12393
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !12375, metadata !DIExpression()), !dbg !12377
  call void @llvm.dbg.value(metadata i32 undef, metadata !12376, metadata !DIExpression()), !dbg !12377
  %11 = icmp eq %struct.k_thread* %10, null, !dbg !12395
  br i1 %11, label %26, label %12, !dbg !12395

12:                                               ; preds = %9, %22
  %13 = phi %struct.k_thread* [ %24, %22 ], [ %10, %9 ]
  %14 = phi { i32, i32 } [ %19, %22 ], [ %6, %9 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12304, metadata !DIExpression()) #23, !dbg !12396
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12400
  br i1 %15, label %17, label %16, !dbg !12401

16:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12402
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12402
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12402
  unreachable, !dbg !12402

17:                                               ; preds = %12
  %18 = extractvalue { i32, i32 } %14, 0, !dbg !12377
  call void @llvm.dbg.value(metadata i32 %18, metadata !12299, metadata !DIExpression()) #23, !dbg !12396
  call void @llvm.dbg.value(metadata i32 %18, metadata !12313, metadata !DIExpression()) #23, !dbg !12403
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12405, !srcloc !12319
  tail call void %0(%struct.k_thread* noundef nonnull %13, i8* noundef %1) #26, !dbg !12406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12266, metadata !DIExpression()) #23, !dbg !12407
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12409, !srcloc !12281
  call void @llvm.dbg.value(metadata i32 undef, metadata !12278, metadata !DIExpression()) #23, !dbg !12411
  call void @llvm.dbg.value(metadata i32 undef, metadata !12279, metadata !DIExpression()) #23, !dbg !12411
  call void @llvm.dbg.value(metadata i32 undef, metadata !12272, metadata !DIExpression()) #23, !dbg !12407
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12412
  br i1 %20, label %22, label %21, !dbg !12413

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12414
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12414
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12414
  unreachable, !dbg !12414

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !12278, metadata !DIExpression()) #23, !dbg !12411
  call void @llvm.dbg.value(metadata i32 undef, metadata !12272, metadata !DIExpression()) #23, !dbg !12407
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12415
  call void @llvm.dbg.value(metadata i32 undef, metadata !12376, metadata !DIExpression()), !dbg !12377
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 5, !dbg !12416
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12375, metadata !DIExpression()), !dbg !12377
  %24 = load %struct.k_thread*, %struct.k_thread** %23, align 4, !dbg !12393
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !12375, metadata !DIExpression()), !dbg !12377
  call void @llvm.dbg.value(metadata i32 undef, metadata !12376, metadata !DIExpression()), !dbg !12377
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !12395
  br i1 %25, label %26, label %12, !dbg !12395, !llvm.loop !12417

26:                                               ; preds = %22, %9
  %27 = phi { i32, i32 } [ %6, %9 ], [ %19, %22 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12419
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12304, metadata !DIExpression()) #23, !dbg !12419
  %28 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12421
  br i1 %28, label %30, label %29, !dbg !12422

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12423
  unreachable, !dbg !12423

30:                                               ; preds = %26
  %31 = extractvalue { i32, i32 } %27, 0, !dbg !12377
  call void @llvm.dbg.value(metadata i32 %31, metadata !12299, metadata !DIExpression()) #23, !dbg !12419
  call void @llvm.dbg.value(metadata i32 %31, metadata !12313, metadata !DIExpression()) #23, !dbg !12424
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %31) #23, !dbg !12426, !srcloc !12319
  ret void, !dbg !12427
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12428 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12429, !srcloc !12436
  call void @llvm.dbg.value(metadata i32 %1, metadata !12432, metadata !DIExpression()) #23, !dbg !12437
  %2 = icmp ne i32 %1, 0, !dbg !12438
  ret i1 %2, !dbg !12439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #10 !dbg !12440 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12441
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12442
  %3 = load i8, i8* %2, align 4, !dbg !12443
  %4 = or i8 %3, 1, !dbg !12443
  store i8 %4, i8* %2, align 4, !dbg !12443
  ret void, !dbg !12444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #10 !dbg !12445 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12446
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12447
  %3 = load i8, i8* %2, align 4, !dbg !12448
  %4 = and i8 %3, -2, !dbg !12448
  store i8 %4, i8* %2, align 4, !dbg !12448
  ret void, !dbg !12449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !12450 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12451
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12452
  %3 = load i8, i8* %2, align 4, !dbg !12452
  %4 = and i8 %3, 1, !dbg !12453
  %5 = icmp ne i8 %4, 0, !dbg !12454
  ret i1 %5, !dbg !12455
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_monitor_exit(%struct.k_thread* noundef readonly %0) local_unnamed_addr #1 !dbg !12456 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12460, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12266, metadata !DIExpression()) #23, !dbg !12466
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12468, !srcloc !12281
  call void @llvm.dbg.value(metadata i32 undef, metadata !12278, metadata !DIExpression()) #23, !dbg !12470
  call void @llvm.dbg.value(metadata i32 undef, metadata !12279, metadata !DIExpression()) #23, !dbg !12470
  call void @llvm.dbg.value(metadata i32 undef, metadata !12272, metadata !DIExpression()) #23, !dbg !12466
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12471
  br i1 %3, label %5, label %4, !dbg !12472

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12473
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12473
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12473
  unreachable, !dbg !12473

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12278, metadata !DIExpression()) #23, !dbg !12470
  call void @llvm.dbg.value(metadata i32 undef, metadata !12272, metadata !DIExpression()) #23, !dbg !12466
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12474
  call void @llvm.dbg.value(metadata i32 undef, metadata !12461, metadata !DIExpression()), !dbg !12465
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12475
  %7 = icmp eq %struct.k_thread* %6, %0, !dbg !12476
  br i1 %7, label %8, label %11, !dbg !12477

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12478
  %10 = load %struct.k_thread*, %struct.k_thread** %9, align 8, !dbg !12478
  store %struct.k_thread* %10, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12480
  br label %22, !dbg !12481

11:                                               ; preds = %5, %14
  %12 = phi %struct.k_thread* [ %16, %14 ], [ %6, %5 ], !dbg !12482
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !12462, metadata !DIExpression()), !dbg !12482
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !12483
  br i1 %13, label %22, label %14, !dbg !12484

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 5, !dbg !12485
  %16 = load %struct.k_thread*, %struct.k_thread** %15, align 8, !dbg !12485
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !12486
  br i1 %17, label %18, label %11, !dbg !12487, !llvm.loop !12488

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 5, !dbg !12485
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12490
  %21 = load %struct.k_thread*, %struct.k_thread** %20, align 8, !dbg !12490
  store %struct.k_thread* %21, %struct.k_thread** %19, align 8, !dbg !12493
  br label %22, !dbg !12494

22:                                               ; preds = %11, %18, %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12304, metadata !DIExpression()) #23, !dbg !12495
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12497
  br i1 %23, label %25, label %24, !dbg !12498

24:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12499
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12499
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12499
  unreachable, !dbg !12499

25:                                               ; preds = %22
  %26 = extractvalue { i32, i32 } %2, 0, !dbg !12468
  call void @llvm.dbg.value(metadata i32 %26, metadata !12278, metadata !DIExpression()) #23, !dbg !12470
  call void @llvm.dbg.value(metadata i32 %26, metadata !12272, metadata !DIExpression()) #23, !dbg !12466
  call void @llvm.dbg.value(metadata i32 %26, metadata !12461, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12495
  call void @llvm.dbg.value(metadata i32 undef, metadata !12313, metadata !DIExpression()) #23, !dbg !12500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !12502, !srcloc !12319
  ret void, !dbg !12503
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12504 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12508, metadata !DIExpression()), !dbg !12510
  call void @llvm.dbg.value(metadata i8* %1, metadata !12509, metadata !DIExpression()), !dbg !12510
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12511
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !12513
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12508, metadata !DIExpression()), !dbg !12510
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 0, !dbg !12514
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #26, !dbg !12515
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 31, !dbg !12516
  store i8 0, i8* %8, align 1, !dbg !12517
  ret i32 0, !dbg !12518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !12519 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12523, metadata !DIExpression()), !dbg !12524
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12525
  ret i8* %2, !dbg !12526
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12527 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12531, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i8* %1, metadata !12532, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 %2, metadata !12533, metadata !DIExpression()), !dbg !12534
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12535
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #26, !dbg !12536
  ret i32 0, !dbg !12537
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2190, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i8* %1, metadata !2191, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i32 %2, metadata !2192, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i32 0, metadata !2193, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i8 undef, metadata !2195, metadata !DIExpression()), !dbg !12538
  %4 = icmp eq i8* %1, null, !dbg !12539
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12541
  br i1 %6, label %46, label %7, !dbg !12541

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12542
  %9 = load i8, i8* %8, align 1, !dbg !12542
  call void @llvm.dbg.value(metadata i8 %9, metadata !2195, metadata !DIExpression()), !dbg !12538
  %10 = add i32 %2, -1, !dbg !12543
  call void @llvm.dbg.value(metadata i32 %10, metadata !2192, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i8 0, metadata !2196, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata i8 %9, metadata !2195, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i32 0, metadata !2193, metadata !DIExpression()), !dbg !12538
  %11 = icmp eq i8 %9, 0, !dbg !12545
  br i1 %11, label %12, label %15, !dbg !12547

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12548
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12549
  store i8 0, i8* %14, align 1, !dbg !12550
  br label %46, !dbg !12551

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2196, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata i8 %17, metadata !2195, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i32 %18, metadata !2193, metadata !DIExpression()), !dbg !12538
  %19 = zext i8 %17 to i32, !dbg !12552
  %20 = zext i8 %16 to i32, !dbg !12553
  %21 = shl nuw i32 1, %20, !dbg !12553
  call void @llvm.dbg.value(metadata i32 %21, metadata !2194, metadata !DIExpression()), !dbg !12538
  %22 = and i32 %21, %19, !dbg !12555
  %23 = icmp eq i32 %22, 0, !dbg !12557
  br i1 %23, label %42, label %24, !dbg !12558

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12559
  %26 = sub i32 %10, %18, !dbg !12560
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12561
  %28 = load i8*, i8** %27, align 4, !dbg !12561
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12562
  %30 = load i32, i32* %29, align 4, !dbg !12562
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !12563
  %32 = add i32 %31, %18, !dbg !12564
  call void @llvm.dbg.value(metadata i32 %32, metadata !2193, metadata !DIExpression()), !dbg !12538
  %33 = trunc i32 %21 to i8, !dbg !12565
  %34 = xor i8 %33, -1, !dbg !12565
  %35 = and i8 %17, %34, !dbg !12565
  call void @llvm.dbg.value(metadata i8 %35, metadata !2195, metadata !DIExpression()), !dbg !12538
  %36 = icmp eq i8 %35, 0, !dbg !12566
  br i1 %36, label %12, label %37, !dbg !12568

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12569
  %39 = sub i32 %10, %32, !dbg !12571
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.179, i32 0, i32 0), i32 noundef 1) #24, !dbg !12572
  %41 = add i32 %40, %32, !dbg !12573
  call void @llvm.dbg.value(metadata i32 %41, metadata !2193, metadata !DIExpression()), !dbg !12538
  br label %42, !dbg !12574

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12538
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12538
  call void @llvm.dbg.value(metadata i8 %44, metadata !2195, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i32 %43, metadata !2193, metadata !DIExpression()), !dbg !12538
  %45 = add i8 %16, 1, !dbg !12575
  call void @llvm.dbg.value(metadata i8 %45, metadata !2196, metadata !DIExpression()), !dbg !12544
  br label %15, !dbg !12547

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.180, i32 0, i32 0), %3 ], !dbg !12538
  ret i8* %47, !dbg !12576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12577 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12581, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i32 %1, metadata !12582, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i8* %2, metadata !12583, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i32 %3, metadata !12584, metadata !DIExpression()), !dbg !12586
  %5 = icmp ult i32 %1, %3, !dbg !12587
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12587
  call void @llvm.dbg.value(metadata i32 %6, metadata !12585, metadata !DIExpression()), !dbg !12586
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !12588
  ret i32 %6, !dbg !12589
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12590 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12592, metadata !DIExpression()), !dbg !12593
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !12594
  ret void, !dbg !12595
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !12596 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12605, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12606, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i32 %2, metadata !12607, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12608, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i8* %4, metadata !12609, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i8* %5, metadata !12610, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i8* %6, metadata !12611, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i32 %7, metadata !12612, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i32 %8, metadata !12613, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i8* %9, metadata !12614, metadata !DIExpression()), !dbg !12617
  %11 = icmp eq i32 %7, 40, !dbg !12618
  br i1 %11, label %12, label %15, !dbg !12618

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !12618
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !12618
  br i1 %14, label %19, label %18, !dbg !12618

15:                                               ; preds = %10
  %16 = add i32 %7, 29, !dbg !12618
  %17 = icmp ult i32 %16, 69, !dbg !12618
  br i1 %17, label %19, label %18, !dbg !12618

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.13.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 536) #26, !dbg !12622
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14.193, i32 0, i32 0), i32 noundef %7, i32 noundef 39, i32 noundef -29) #26, !dbg !12622
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 536) #26, !dbg !12622
  unreachable, !dbg !12622

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12624
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !12625
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12626
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !12627
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !12628
  call void @llvm.dbg.value(metadata i8* %22, metadata !12615, metadata !DIExpression()), !dbg !12617
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !12629
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12630
  store i8* null, i8** %23, align 4, !dbg !12631
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !12632
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %24, align 8, !dbg !12633
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 1, !dbg !12634
  store i8* %4, i8** %25, align 4, !dbg !12635
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 2, !dbg !12636
  store i8* %5, i8** %26, align 8, !dbg !12637
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 3, !dbg !12638
  store i8* %6, i8** %27, align 4, !dbg !12639
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12266, metadata !DIExpression()) #23, !dbg !12640
  %28 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12642, !srcloc !12281
  call void @llvm.dbg.value(metadata i32 undef, metadata !12278, metadata !DIExpression()) #23, !dbg !12644
  call void @llvm.dbg.value(metadata i32 undef, metadata !12279, metadata !DIExpression()) #23, !dbg !12644
  call void @llvm.dbg.value(metadata i32 undef, metadata !12272, metadata !DIExpression()) #23, !dbg !12640
  %29 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12645
  br i1 %29, label %31, label %30, !dbg !12646

30:                                               ; preds = %19
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12647
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12647
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12647
  unreachable, !dbg !12647

31:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !12278, metadata !DIExpression()) #23, !dbg !12644
  call void @llvm.dbg.value(metadata i32 undef, metadata !12272, metadata !DIExpression()) #23, !dbg !12640
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12648
  call void @llvm.dbg.value(metadata i32 undef, metadata !12616, metadata !DIExpression()), !dbg !12617
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12649
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12650
  store %struct.k_thread* %32, %struct.k_thread** %33, align 8, !dbg !12651
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12652
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12304, metadata !DIExpression()) #23, !dbg !12653
  %34 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12655
  br i1 %34, label %36, label %35, !dbg !12656

35:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12657
  unreachable, !dbg !12657

36:                                               ; preds = %31
  %37 = extractvalue { i32, i32 } %28, 0, !dbg !12642
  call void @llvm.dbg.value(metadata i32 %37, metadata !12278, metadata !DIExpression()) #23, !dbg !12644
  call void @llvm.dbg.value(metadata i32 %37, metadata !12272, metadata !DIExpression()) #23, !dbg !12640
  call void @llvm.dbg.value(metadata i32 %37, metadata !12616, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12653
  call void @llvm.dbg.value(metadata i32 undef, metadata !12313, metadata !DIExpression()) #23, !dbg !12658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %37) #23, !dbg !12660, !srcloc !12319
  %38 = icmp eq i8* %9, null, !dbg !12661
  %39 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12663
  br i1 %38, label %43, label %40, !dbg !12664

40:                                               ; preds = %36
  %41 = tail call i8* @strncpy(i8* noundef nonnull %39, i8* noundef nonnull %9, i32 noundef 31) #26, !dbg !12665
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 31, !dbg !12667
  store i8 0, i8* %42, align 1, !dbg !12668
  br label %44, !dbg !12669

43:                                               ; preds = %36
  store i8 0, i8* %39, align 4, !dbg !12670
  br label %44

44:                                               ; preds = %43, %40
  %45 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12672
  %46 = icmp eq %struct.k_thread* %45, null, !dbg !12672
  br i1 %46, label %50, label %47, !dbg !12674

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %45, i32 0, i32 9, !dbg !12675
  %49 = load %struct.k_heap*, %struct.k_heap** %48, align 4, !dbg !12675
  br label %50, !dbg !12676

50:                                               ; preds = %44, %47
  %51 = phi %struct.k_heap* [ %49, %47 ], [ null, %44 ], !dbg !12617
  %52 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 9, !dbg !12677
  store %struct.k_heap* %51, %struct.k_heap** %52, align 4, !dbg !12679
  ret i8* %22, !dbg !12680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !12681 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12685, metadata !DIExpression()), !dbg !12686
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !12687
  ret i1 %2, !dbg !12688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !12689 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12694, metadata !DIExpression()), !dbg !12695
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12696
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !12697
  ret void, !dbg !12698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !12699 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12704, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.value(metadata i32 %1, metadata !12705, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.value(metadata i32 %2, metadata !12706, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.value(metadata i32 %3, metadata !12707, metadata !DIExpression()), !dbg !12708
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12709
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12710
  %6 = trunc i32 %3 to i8, !dbg !12711
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12712
  store i8 %6, i8* %7, align 4, !dbg !12713
  %8 = trunc i32 %2 to i8, !dbg !12714
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12715
  store i8 %8, i8* %9, align 1, !dbg !12716
  %10 = trunc i32 %1 to i8, !dbg !12717
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12718
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12718
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12718
  store i8 %10, i8* %13, align 2, !dbg !12719
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12720
  store i8 0, i8* %14, align 1, !dbg !12721
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !12722
  ret void, !dbg !12723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !12724 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12728, metadata !DIExpression()), !dbg !12736
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12729, metadata !DIExpression()), !dbg !12736
  call void @llvm.dbg.value(metadata i32 %2, metadata !12730, metadata !DIExpression()), !dbg !12736
  call void @llvm.dbg.value(metadata i32 0, metadata !12735, metadata !DIExpression()), !dbg !12736
  %4 = add i32 %2, 7, !dbg !12737
  %5 = and i32 %4, -8, !dbg !12737
  %6 = add i32 %5, 64, !dbg !12737
  call void @llvm.dbg.value(metadata i32 %6, metadata !12731, metadata !DIExpression()), !dbg !12736
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.194(%struct.z_thread_stack_element* noundef %1) #24, !dbg !12739
  call void @llvm.dbg.value(metadata i8* %7, metadata !12734, metadata !DIExpression()), !dbg !12736
  call void @llvm.dbg.value(metadata i32 %5, metadata !12732, metadata !DIExpression()), !dbg !12736
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12740
  call void @llvm.dbg.value(metadata i8* %8, metadata !12733, metadata !DIExpression()), !dbg !12736
  call void @llvm.dbg.value(metadata i32 0, metadata !12735, metadata !DIExpression()), !dbg !12736
  %9 = ptrtoint i8* %7 to i32, !dbg !12741
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !12742
  store i32 %9, i32* %10, align 8, !dbg !12743
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 1, !dbg !12744
  store i32 %5, i32* %11, align 4, !dbg !12745
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 2, !dbg !12746
  store i32 0, i32* %12, align 8, !dbg !12747
  call void @llvm.dbg.value(metadata i8* %8, metadata !12733, metadata !DIExpression()), !dbg !12736
  ret i8* %8, !dbg !12748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.194(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12749 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12753, metadata !DIExpression()), !dbg !12754
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12755
  ret i8* %2, !dbg !12756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12757 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12762, metadata !DIExpression()), !dbg !12763
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12764
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12765
  ret void, !dbg !12766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12767 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12769, metadata !DIExpression()), !dbg !12770
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12771
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !12772
  ret void, !dbg !12773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12774 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12778, metadata !DIExpression()), !dbg !12779
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12780
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12781
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12782
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12783
  ret void, !dbg !12784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !12785 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12790, metadata !DIExpression()), !dbg !12791
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12792
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12793
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12794
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12795
  ret void, !dbg !12796
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12797 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12814, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12805, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12806, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata i32 %2, metadata !12807, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12808, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata i8* %4, metadata !12809, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata i8* %5, metadata !12810, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata i8* %6, metadata !12811, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata i32 %7, metadata !12812, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata i32 %8, metadata !12813, metadata !DIExpression()), !dbg !12815
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12816, !srcloc !12436
  call void @llvm.dbg.value(metadata i32 %11, metadata !12432, metadata !DIExpression()) #23, !dbg !12821
  %12 = icmp eq i32 %11, 0, !dbg !12822
  br i1 %12, label %14, label %13, !dbg !12823

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15.197, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 647) #26, !dbg !12824
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16.198, i32 0, i32 0)) #26, !dbg !12824
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 647) #26, !dbg !12824
  unreachable, !dbg !12824

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !12814, metadata !DIExpression()), !dbg !12815
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !12826
  %17 = icmp eq i64 %15, -1, !dbg !12827
  br i1 %17, label %19, label %18, !dbg !12829

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !12830
  br label %19, !dbg !12832

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !12833
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12834 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12839, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12838, metadata !DIExpression()), !dbg !12840
  %4 = icmp eq i64 %3, 0, !dbg !12841
  br i1 %4, label %5, label %6, !dbg !12843

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.199(%struct.k_thread* noundef %0) #24, !dbg !12844
  br label %7, !dbg !12846

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !12847
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.199(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12854, metadata !DIExpression()), !dbg !12855
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12856, !srcloc !12858
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !12859
  ret void, !dbg !12860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12861 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12864, metadata !DIExpression()), !dbg !12865
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12863, metadata !DIExpression()), !dbg !12865
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12866
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !12867
  ret void, !dbg !12868
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12869 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12871, metadata !DIExpression()), !dbg !12891
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !12892

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 750) #26, !dbg !12896
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)) #26, !dbg !12896
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 750) #26, !dbg !12896
  unreachable, !dbg !12896

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12871, metadata !DIExpression()), !dbg !12891
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12899
  br i1 %4, label %6, label %5, !dbg !12900

5:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !12901
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12889, metadata !DIExpression()), !dbg !12902
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !12903

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12907
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12907
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12909
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !12909
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12910
  %12 = load i32, i32* %11, align 4, !dbg !12910
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12911
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !12911
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12912
  %16 = load i8*, i8** %15, align 4, !dbg !12912
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12913
  %18 = load i8*, i8** %17, align 4, !dbg !12913
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12914
  %20 = load i8*, i8** %19, align 4, !dbg !12914
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12915
  %22 = load i32, i32* %21, align 4, !dbg !12915
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12916
  %24 = load i32, i32* %23, align 4, !dbg !12916
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !12917
  %26 = load i8*, i8** %25, align 4, !dbg !12917
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !12918
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12919
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !12920
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !12921
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !12921
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12922
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12871, metadata !DIExpression()), !dbg !12891
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12923
  br i1 %32, label %1, label %2, !dbg !12892, !llvm.loop !12924

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 781) #26, !dbg !12926
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)) #26, !dbg !12926
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 781) #26, !dbg !12926
  unreachable, !dbg !12926

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !12889, metadata !DIExpression()), !dbg !12902
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12929
  br i1 %36, label %38, label %37, !dbg !12930

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #26, !dbg !12931
  ret void, !dbg !12932

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !12933
  %40 = load i32, i32* %39, align 4, !dbg !12933
  %41 = icmp eq i32 %40, -1, !dbg !12936
  br i1 %41, label %50, label %42, !dbg !12937

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !12938
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !12938
  %45 = icmp sgt i32 %40, 0, !dbg !12940
  %46 = select i1 %45, i32 %40, i32 0, !dbg !12940
  %47 = zext i32 %46 to i64, !dbg !12940
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.202(i64 noundef %47) #24, !dbg !12940
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !12941
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !12941
  br label %50, !dbg !12942

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !12943
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !12889, metadata !DIExpression()), !dbg !12902
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12944
  br i1 %52, label %33, label %34, !dbg !12903, !llvm.loop !12945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.202(i64 noundef %0) unnamed_addr #4 !dbg !12947 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12949, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.value(metadata i64 %0, metadata !12951, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i32 1000, metadata !12954, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i32 10000, metadata !12955, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i8 1, metadata !12956, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i8 0, metadata !12957, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i8 1, metadata !12958, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i8 0, metadata !12959, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i8 1, metadata !12960, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i8 0, metadata !12961, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i64 0, metadata !12962, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i64 0, metadata !12962, metadata !DIExpression()), !dbg !12966
  %2 = mul i64 %0, 10, !dbg !12968
  ret i64 %2, !dbg !12974
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !12975 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12977, metadata !DIExpression()), !dbg !12981
  call void @llvm.dbg.value(metadata i8* %1, metadata !12978, metadata !DIExpression()), !dbg !12981
  call void @llvm.dbg.value(metadata i8* %2, metadata !12979, metadata !DIExpression()), !dbg !12981
  call void @llvm.dbg.value(metadata i8* %3, metadata !12980, metadata !DIExpression()), !dbg !12981
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12982
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12983
  %7 = load i8, i8* %6, align 4, !dbg !12984
  %8 = or i8 %7, 4, !dbg !12984
  store i8 %8, i8* %6, align 4, !dbg !12984
  tail call void @z_thread_essential_clear() #24, !dbg !12985
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12986
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 0, !dbg !12987
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %10, align 8, !dbg !12988
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 1, !dbg !12989
  store i8* %1, i8** %11, align 4, !dbg !12990
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 2, !dbg !12991
  store i8* %2, i8** %12, align 8, !dbg !12992
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 3, !dbg !12993
  store i8* %3, i8** %13, align 4, !dbg !12994
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !12995
  unreachable, !dbg !12995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !12996 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13000, metadata !DIExpression()), !dbg !13001
  ret i32 -134, !dbg !13002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13007, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i32 %1, metadata !13008, metadata !DIExpression()), !dbg !13009
  ret i32 -134, !dbg !13010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13011 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13018, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13019, metadata !DIExpression()), !dbg !13020
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13021
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13023
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13020
  ret i32 %6, !dbg !13024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13025 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13029, metadata !DIExpression()), !dbg !13030
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13031
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13030
  ret i32 %3, !dbg !13033
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13034 {
  tail call void @sys_clock_idle_exit() #26, !dbg !13036
  ret void, !dbg !13037
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !13038 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13040, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.value(metadata i8* %1, metadata !13041, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.value(metadata i8* %2, metadata !13042, metadata !DIExpression()), !dbg !13043
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13044
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13044
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13044
  %7 = load i8, i8* %6, align 2, !dbg !13044
  %8 = icmp sgt i8 %7, -1, !dbg !13044
  br i1 %8, label %10, label %9, !dbg !13047

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.206, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.207, i32 0, i32 0), i32 noundef 39) #26, !dbg !13048
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.207, i32 0, i32 0), i32 noundef 39) #26, !dbg !13048
  unreachable, !dbg !13048

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13050, !srcloc !13057
  call void @llvm.dbg.value(metadata i32 undef, metadata !13053, metadata !DIExpression()) #23, !dbg !13058
  call void @llvm.dbg.value(metadata i32 undef, metadata !13054, metadata !DIExpression()) #23, !dbg !13058
  tail call fastcc void @k_cpu_idle() #24, !dbg !13059
  br label %10, !dbg !13060, !llvm.loop !13061
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13063 {
  tail call void @arch_cpu_idle() #26, !dbg !13064
  ret void, !dbg !13065
}

; Function Attrs: optsize
declare !dbg !13066 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13067 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13078, metadata !DIExpression()), !dbg !13079
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13080
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13081
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13082
  store i32 0, i32* %3, align 4, !dbg !13083
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13084
  tail call fastcc void @z_waitq_init.210(%struct._wait_q_t* noundef %4) #24, !dbg !13085
  ret i32 0, !dbg !13086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.210(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13087 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13091, metadata !DIExpression()), !dbg !13092
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13093
  tail call fastcc void @sys_dlist_init.211(%struct._dnode* noundef %2) #24, !dbg !13094
  ret void, !dbg !13095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.211(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13096 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13101, metadata !DIExpression()), !dbg !13102
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13103
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13104
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13105
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13106
  ret void, !dbg !13107
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13108 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13117, metadata !DIExpression()), !dbg !13129
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13116, metadata !DIExpression()), !dbg !13129
  call void @llvm.dbg.value(metadata i8 0, metadata !13124, metadata !DIExpression()), !dbg !13129
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13130, !srcloc !13139
  call void @llvm.dbg.value(metadata i32 %4, metadata !13133, metadata !DIExpression()) #23, !dbg !13140
  %5 = icmp eq i32 %4, 0, !dbg !13141
  br i1 %5, label %7, label %6, !dbg !13142

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.215, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.216, i32 0, i32 0), i32 noundef 101) #26, !dbg !13143
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.217, i32 0, i32 0)) #26, !dbg !13143
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.216, i32 0, i32 0), i32 noundef 101) #26, !dbg !13143
  unreachable, !dbg !13143

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.218, metadata !13145, metadata !DIExpression()) #23, !dbg !13152
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13154, !srcloc !13160
  call void @llvm.dbg.value(metadata i32 undef, metadata !13157, metadata !DIExpression()) #23, !dbg !13161
  call void @llvm.dbg.value(metadata i32 undef, metadata !13158, metadata !DIExpression()) #23, !dbg !13161
  call void @llvm.dbg.value(metadata i32 undef, metadata !13151, metadata !DIExpression()) #23, !dbg !13152
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13162
  br i1 %9, label %11, label %10, !dbg !13165

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 148) #26, !dbg !13166
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.221, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13166
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 148) #26, !dbg !13166
  unreachable, !dbg !13166

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13154
  call void @llvm.dbg.value(metadata i32 %12, metadata !13157, metadata !DIExpression()) #23, !dbg !13161
  call void @llvm.dbg.value(metadata i32 %12, metadata !13151, metadata !DIExpression()) #23, !dbg !13152
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13168
  call void @llvm.dbg.value(metadata i32 %12, metadata !13119, metadata !DIExpression()), !dbg !13129
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13169
  %14 = load i32, i32* %13, align 4, !dbg !13169
  %15 = icmp eq i32 %14, 0, !dbg !13169
  br i1 %15, label %21, label %16, !dbg !13169

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13169
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13169
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13169
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13169
  br i1 %20, label %27, label %39, !dbg !13171, !prof !13172

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13173
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13175
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13175
  %25 = load i8, i8* %24, align 2, !dbg !13175
  %26 = sext i8 %25 to i32, !dbg !13173
  br label %30, !dbg !13176

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13177
  %29 = load i32, i32* %28, align 4, !dbg !13177
  br label %30, !dbg !13176

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13178
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13176
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13179
  store i32 %32, i32* %33, align 4, !dbg !13180
  %34 = add i32 %14, 1, !dbg !13181
  store i32 %34, i32* %13, align 4, !dbg !13181
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13182
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13183
  call void @llvm.dbg.value(metadata i32 undef, metadata !13184, metadata !DIExpression()) #23, !dbg !13190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.218, metadata !13189, metadata !DIExpression()) #23, !dbg !13190
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13192
  br i1 %36, label %38, label %37, !dbg !13195

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 194) #26, !dbg !13196
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.223, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13196
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 194) #26, !dbg !13196
  unreachable, !dbg !13196

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13184, metadata !DIExpression()) #23, !dbg !13190
  call void @llvm.dbg.value(metadata i32 %12, metadata !13198, metadata !DIExpression()) #23, !dbg !13201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13203, !srcloc !13204
  br label %97, !dbg !13205

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13206
  br i1 %40, label %41, label %45, !dbg !13208, !prof !13209

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13184, metadata !DIExpression()) #23, !dbg !13210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.218, metadata !13189, metadata !DIExpression()) #23, !dbg !13210
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13213
  br i1 %42, label %44, label %43, !dbg !13214

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 194) #26, !dbg !13215
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.223, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13215
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 194) #26, !dbg !13215
  unreachable, !dbg !13215

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13184, metadata !DIExpression()) #23, !dbg !13210
  call void @llvm.dbg.value(metadata i32 %12, metadata !13198, metadata !DIExpression()) #23, !dbg !13216
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13218, !srcloc !13204
  br label %97, !dbg !13219

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13220
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13220
  %48 = load i8, i8* %47, align 2, !dbg !13220
  %49 = sext i8 %48 to i32, !dbg !13221
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13222
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13222
  %52 = load i8, i8* %51, align 2, !dbg !13222
  %53 = sext i8 %52 to i32, !dbg !13223
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13224
  call void @llvm.dbg.value(metadata i32 %54, metadata !13118, metadata !DIExpression()), !dbg !13129
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13225
  br i1 %55, label %56, label %58, !dbg !13227

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13228
  call void @llvm.dbg.value(metadata i1 %57, metadata !13124, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13129
  br label %58, !dbg !13230

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13124, metadata !DIExpression()), !dbg !13129
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13231
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13232
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.218, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #26, !dbg !13232
  call void @llvm.dbg.value(metadata i32 %62, metadata !13125, metadata !DIExpression()), !dbg !13129
  %63 = icmp eq i32 %62, 0, !dbg !13233
  br i1 %63, label %97, label %64, !dbg !13235

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.218, metadata !13145, metadata !DIExpression()) #23, !dbg !13236
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13238, !srcloc !13160
  call void @llvm.dbg.value(metadata i32 undef, metadata !13157, metadata !DIExpression()) #23, !dbg !13240
  call void @llvm.dbg.value(metadata i32 undef, metadata !13158, metadata !DIExpression()) #23, !dbg !13240
  call void @llvm.dbg.value(metadata i32 undef, metadata !13151, metadata !DIExpression()) #23, !dbg !13236
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13241
  br i1 %66, label %68, label %67, !dbg !13242

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 148) #26, !dbg !13243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.221, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 148) #26, !dbg !13243
  unreachable, !dbg !13243

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13238
  call void @llvm.dbg.value(metadata i32 %69, metadata !13157, metadata !DIExpression()) #23, !dbg !13240
  call void @llvm.dbg.value(metadata i32 %69, metadata !13151, metadata !DIExpression()) #23, !dbg !13236
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13244
  call void @llvm.dbg.value(metadata i32 %69, metadata !13119, metadata !DIExpression()), !dbg !13129
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13245
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13245
  br i1 %71, label %90, label %72, !dbg !13246, !prof !13209

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13247
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13126, metadata !DIExpression()), !dbg !13248
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13249
  br i1 %74, label %83, label %75, !dbg !13250

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13251
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13251
  %78 = load i8, i8* %77, align 2, !dbg !13251
  %79 = sext i8 %78 to i32, !dbg !13252
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13253
  %81 = load i32, i32* %80, align 4, !dbg !13253
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13254
  br label %86, !dbg !13250

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13255
  %85 = load i32, i32* %84, align 4, !dbg !13255
  br label %86, !dbg !13250

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13250
  call void @llvm.dbg.value(metadata i32 %87, metadata !13118, metadata !DIExpression()), !dbg !13129
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13256
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13257
  call void @llvm.dbg.value(metadata i1 %89, metadata !13124, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13129
  call void @llvm.dbg.value(metadata i8 poison, metadata !13124, metadata !DIExpression()), !dbg !13129
  br i1 %89, label %91, label %93, !dbg !13258

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13124, metadata !DIExpression()), !dbg !13129
  br i1 %59, label %91, label %93, !dbg !13258

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13259
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.218, [1 x i32] %92) #26, !dbg !13259
  br label %97, !dbg !13262

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13184, metadata !DIExpression()) #23, !dbg !13263
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.218, metadata !13189, metadata !DIExpression()) #23, !dbg !13263
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13266
  br i1 %94, label %96, label %95, !dbg !13267

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 194) #26, !dbg !13268
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.223, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13268
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 194) #26, !dbg !13268
  unreachable, !dbg !13268

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13184, metadata !DIExpression()) #23, !dbg !13263
  call void @llvm.dbg.value(metadata i32 %69, metadata !13198, metadata !DIExpression()) #23, !dbg !13269
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13271, !srcloc !13204
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13129
  ret i32 %98, !dbg !13272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13277, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.value(metadata i32 %1, metadata !13278, metadata !DIExpression()), !dbg !13280
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13281
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13281
  call void @llvm.dbg.value(metadata i32 %4, metadata !13279, metadata !DIExpression()), !dbg !13280
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13282
  call void @llvm.dbg.value(metadata i32 %5, metadata !13279, metadata !DIExpression()), !dbg !13280
  ret i32 %5, !dbg !13283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13288, metadata !DIExpression()), !dbg !13290
  call void @llvm.dbg.value(metadata i32 %1, metadata !13289, metadata !DIExpression()), !dbg !13290
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13291
  ret i1 %3, !dbg !13292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13293 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13297, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i32 %1, metadata !13298, metadata !DIExpression()), !dbg !13299
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13300
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13300
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13302
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13302
  %7 = load i8, i8* %6, align 2, !dbg !13302
  %8 = sext i8 %7 to i32, !dbg !13303
  %9 = icmp eq i32 %8, %1, !dbg !13304
  br i1 %9, label %12, label %10, !dbg !13305

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #26, !dbg !13306
  br label %12, !dbg !13308

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13299
  ret i1 %13, !dbg !13309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13310 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13314, metadata !DIExpression()), !dbg !13315
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13316
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13317
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13318
  ret %struct.k_thread* %4, !dbg !13319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13320 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13324, metadata !DIExpression()), !dbg !13325
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !13326
  br i1 %2, label %6, label %3, !dbg !13326

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13327
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13327
  br label %6, !dbg !13326

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13326
  ret %struct._dnode* %7, !dbg !13328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !13329 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13333, metadata !DIExpression()), !dbg !13334
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13335
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13335
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13336
  ret i1 %4, !dbg !13337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13340, metadata !DIExpression()), !dbg !13342
  call void @llvm.dbg.value(metadata i32 %1, metadata !13341, metadata !DIExpression()), !dbg !13342
  %3 = icmp slt i32 %0, %1, !dbg !13343
  ret i1 %3, !dbg !13344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13347, metadata !DIExpression()), !dbg !13348
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13349
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13349
  ret i32 %3, !dbg !13350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13355, metadata !DIExpression()), !dbg !13356
  %2 = icmp sgt i32 %0, -128, !dbg !13357
  ret i1 %2, !dbg !13358
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13359 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13361, metadata !DIExpression()), !dbg !13365
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13366, !srcloc !13139
  call void @llvm.dbg.value(metadata i32 %2, metadata !13133, metadata !DIExpression()) #23, !dbg !13371
  %3 = icmp eq i32 %2, 0, !dbg !13372
  br i1 %3, label %5, label %4, !dbg !13373

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.215, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.216, i32 0, i32 0), i32 noundef 205) #26, !dbg !13374
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.217, i32 0, i32 0)) #26, !dbg !13374
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.216, i32 0, i32 0), i32 noundef 205) #26, !dbg !13374
  unreachable, !dbg !13374

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13376
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !13376
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13376
  br i1 %8, label %41, label %9, !dbg !13378

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13379
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !13379
  br i1 %11, label %12, label %41, !dbg !13381

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13382
  %14 = load i32, i32* %13, align 4, !dbg !13382
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !13385

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.216, i32 0, i32 0), i32 noundef 229) #26, !dbg !13386
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.216, i32 0, i32 0), i32 noundef 229) #26, !dbg !13386
  unreachable, !dbg !13386

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !13388
  store i32 %17, i32* %13, align 4, !dbg !13388
  br label %41, !dbg !13391

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.218, metadata !13145, metadata !DIExpression()) #23, !dbg !13392
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13394, !srcloc !13160
  call void @llvm.dbg.value(metadata i32 undef, metadata !13157, metadata !DIExpression()) #23, !dbg !13396
  call void @llvm.dbg.value(metadata i32 undef, metadata !13158, metadata !DIExpression()) #23, !dbg !13396
  call void @llvm.dbg.value(metadata i32 undef, metadata !13151, metadata !DIExpression()) #23, !dbg !13392
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13397
  br i1 %20, label %22, label %21, !dbg !13398

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 148) #26, !dbg !13399
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.221, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13399
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 148) #26, !dbg !13399
  unreachable, !dbg !13399

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !13394
  call void @llvm.dbg.value(metadata i32 %23, metadata !13157, metadata !DIExpression()) #23, !dbg !13396
  call void @llvm.dbg.value(metadata i32 %23, metadata !13151, metadata !DIExpression()) #23, !dbg !13392
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13400
  call void @llvm.dbg.value(metadata i32 %23, metadata !13363, metadata !DIExpression()), !dbg !13365
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13401
  %25 = load i32, i32* %24, align 4, !dbg !13401
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !13402
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13403
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #26, !dbg !13404
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13362, metadata !DIExpression()), !dbg !13365
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !13405
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !13406
  br i1 %29, label %37, label %30, !dbg !13408

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !13409
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !13409
  %33 = load i8, i8* %32, align 2, !dbg !13409
  %34 = sext i8 %33 to i32, !dbg !13411
  store i32 %34, i32* %24, align 4, !dbg !13412
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13413, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i32 0, metadata !13418, metadata !DIExpression()), !dbg !13419
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 10, i32 1, !dbg !13421
  store i32 0, i32* %35, align 4, !dbg !13422
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #26, !dbg !13423
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !13424
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.218, [1 x i32] %36) #26, !dbg !13424
  br label %41, !dbg !13425

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !13426
  call void @llvm.dbg.value(metadata i32 undef, metadata !13184, metadata !DIExpression()) #23, !dbg !13428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.218, metadata !13189, metadata !DIExpression()) #23, !dbg !13428
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13430
  br i1 %38, label %40, label %39, !dbg !13431

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 194) #26, !dbg !13432
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.223, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.218) #26, !dbg !13432
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.220, i32 0, i32 0), i32 noundef 194) #26, !dbg !13432
  unreachable, !dbg !13432

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13184, metadata !DIExpression()) #23, !dbg !13428
  call void @llvm.dbg.value(metadata i32 %23, metadata !13198, metadata !DIExpression()) #23, !dbg !13433
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13435, !srcloc !13204
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !13365
  ret i32 %42, !dbg !13436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13437 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13441, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13442, metadata !DIExpression()), !dbg !13445
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13446
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13446
  %5 = load i8, i8* %4, align 2, !dbg !13446
  call void @llvm.dbg.value(metadata i8 %5, metadata !13443, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13445
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13447
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13447
  %8 = load i8, i8* %7, align 2, !dbg !13447
  call void @llvm.dbg.value(metadata i8 %8, metadata !13444, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13445
  %9 = icmp eq i8 %8, %5, !dbg !13448
  %10 = sext i8 %5 to i32, !dbg !13450
  %11 = sext i8 %8 to i32, !dbg !13450
  %12 = sub nsw i32 %11, %10, !dbg !13450
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13450
  ret i32 %13, !dbg !13451
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13452 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13456, metadata !DIExpression()), !dbg !13457
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !13458
  %3 = icmp eq i32 %2, 0, !dbg !13460
  br i1 %3, label %8, label %4, !dbg !13461

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !13462
  %6 = add i32 %5, %2, !dbg !13464
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13465
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !13466
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !13467
  br label %8, !dbg !13468

8:                                                ; preds = %4, %1
  ret void, !dbg !13469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !13470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13474, metadata !DIExpression()), !dbg !13476
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13477
  call void @llvm.dbg.value(metadata i32 %1, metadata !13475, metadata !DIExpression()), !dbg !13476
  ret i32 %1, !dbg !13478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13483, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata i32 %1, metadata !13484, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata i32 0, metadata !13485, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !13501
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13503, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !13510
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !13510
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !13501
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13511
  br i1 %4, label %6, label %5, !dbg !13514

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !13515
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13515
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !13515
  unreachable, !dbg !13515

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !13510
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !13501
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13517
  call void @llvm.dbg.value(metadata i32 undef, metadata !13491, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.value(metadata i32 undef, metadata !13485, metadata !DIExpression()), !dbg !13493
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13518
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !13521
  %8 = icmp sgt i32 %0, 0, !dbg !13522
  %9 = icmp sgt i32 %7, 2, !dbg !13524
  %10 = select i1 %9, i32 %7, i32 2, !dbg !13524
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !13524
  store i32 %11, i32* @slice_ticks, align 4, !dbg !13525
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13526
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13527
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !13534
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !13534
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13536
  br i1 %12, label %14, label %13, !dbg !13539

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !13540
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13540
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !13540
  unreachable, !dbg !13540

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13503
  call void @llvm.dbg.value(metadata i32 %15, metadata !13506, metadata !DIExpression()) #23, !dbg !13510
  call void @llvm.dbg.value(metadata i32 %15, metadata !13500, metadata !DIExpression()) #23, !dbg !13501
  call void @llvm.dbg.value(metadata i32 %15, metadata !13491, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !13534
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !13545
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !13547, !srcloc !13548
  call void @llvm.dbg.value(metadata i32 1, metadata !13485, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.value(metadata i32 undef, metadata !13485, metadata !DIExpression()), !dbg !13493
  ret void, !dbg !13549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !13550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13552, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.value(metadata i32 %0, metadata !13554, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13569
  call void @llvm.dbg.value(metadata i32 1000, metadata !13557, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.value(metadata i32 10000, metadata !13558, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.value(metadata i8 1, metadata !13559, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.value(metadata i1 true, metadata !13560, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13569
  call void @llvm.dbg.value(metadata i1 true, metadata !13561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13569
  call void @llvm.dbg.value(metadata i8 0, metadata !13562, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.value(metadata i1 true, metadata !13563, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13569
  call void @llvm.dbg.value(metadata i1 false, metadata !13564, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13569
  call void @llvm.dbg.value(metadata i64 0, metadata !13565, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.value(metadata i64 0, metadata !13565, metadata !DIExpression()), !dbg !13569
  %2 = mul i32 %0, 10, !dbg !13571
  ret i32 %2, !dbg !13577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13580, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !13583
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13585, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !13587
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !13587
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !13583
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13588
  br i1 %3, label %5, label %4, !dbg !13589

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !13590
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13590
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !13590
  unreachable, !dbg !13590

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13585
  call void @llvm.dbg.value(metadata i32 %6, metadata !13506, metadata !DIExpression()) #23, !dbg !13587
  call void @llvm.dbg.value(metadata i32 %6, metadata !13500, metadata !DIExpression()) #23, !dbg !13583
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13591
  call void @llvm.dbg.value(metadata i32 %6, metadata !13581, metadata !DIExpression()), !dbg !13582
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13592
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13594
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !13595
  br i1 %9, label %10, label %14, !dbg !13596

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13597
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !13599
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !13599
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13601
  br i1 %11, label %13, label %12, !dbg !13602

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !13603
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13603
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !13603
  unreachable, !dbg !13603

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !13528, metadata !DIExpression()) #23, !dbg !13599
  call void @llvm.dbg.value(metadata i32 %6, metadata !13542, metadata !DIExpression()) #23, !dbg !13604
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !13606, !srcloc !13548
  br label %33, !dbg !13607

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13608
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !13609
  %16 = icmp eq i32 %15, 0, !dbg !13609
  br i1 %16, label %27, label %17, !dbg !13611

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !13612
  br i1 %18, label %19, label %27, !dbg !13613

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13614
  %21 = icmp sgt i32 %20, %0, !dbg !13617
  br i1 %21, label %25, label %22, !dbg !13618

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13619
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !13619
  call void @llvm.dbg.value(metadata i32 %24, metadata !13581, metadata !DIExpression()), !dbg !13582
  br label %28, !dbg !13621

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !13622
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13622
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13624
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !13582
  call void @llvm.dbg.value(metadata i32 %29, metadata !13581, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !13626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !13626
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13628
  br i1 %30, label %32, label %31, !dbg !13629

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !13630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !13630
  unreachable, !dbg !13630

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !13528, metadata !DIExpression()) #23, !dbg !13626
  call void @llvm.dbg.value(metadata i32 %29, metadata !13542, metadata !DIExpression()) #23, !dbg !13631
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !13633, !srcloc !13548
  br label %33, !dbg !13634

33:                                               ; preds = %32, %13
  ret void, !dbg !13634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !13635 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13639, metadata !DIExpression()), !dbg !13641
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !13642
  %3 = icmp eq i32 %2, 0, !dbg !13642
  br i1 %3, label %16, label %4, !dbg !13643

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !13644
  br i1 %5, label %16, label %6, !dbg !13645

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13646
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13646
  %9 = load i8, i8* %8, align 2, !dbg !13646
  %10 = sext i8 %9 to i32, !dbg !13647
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13648
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.239(i32 noundef %10, i32 noundef %11) #24, !dbg !13649
  br i1 %12, label %16, label %13, !dbg !13650

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !13651
  %15 = xor i1 %14, true, !dbg !13652
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13641
  call void @llvm.dbg.value(metadata i1 %17, metadata !13640, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13641
  ret i1 %17, !dbg !13653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13654 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13658, metadata !DIExpression()), !dbg !13660
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13661
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13659, metadata !DIExpression()), !dbg !13660
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !13662
  br i1 %3, label %5, label %4, !dbg !13664

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !13665
  br label %5, !dbg !13667

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13658, metadata !DIExpression()), !dbg !13660
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13668
  ret i32 %6, !dbg !13669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13672, metadata !DIExpression()), !dbg !13674
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13675
  %3 = load i8, i8* %2, align 1, !dbg !13675
  call void @llvm.dbg.value(metadata i8 %3, metadata !13673, metadata !DIExpression()), !dbg !13674
  %4 = and i8 %3, 31, !dbg !13676
  %5 = icmp ne i8 %4, 0, !dbg !13677
  ret i1 %5, !dbg !13678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13681, metadata !DIExpression()), !dbg !13682
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13683
  br i1 %2, label %3, label %7, !dbg !13685

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13686, metadata !DIExpression()) #23, !dbg !13689
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13692
  %5 = load i8, i8* %4, align 1, !dbg !13693
  %6 = and i8 %5, 127, !dbg !13693
  store i8 %6, i8* %4, align 1, !dbg !13693
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13694, metadata !DIExpression()) #23, !dbg !13697
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !13701
  br label %7, !dbg !13702

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13703, metadata !DIExpression()) #23, !dbg !13706
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13708
  %9 = load i8, i8* %8, align 1, !dbg !13709
  %10 = or i8 %9, -128, !dbg !13709
  store i8 %10, i8* %8, align 1, !dbg !13709
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13710, metadata !DIExpression()) #23, !dbg !13713
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !13717
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13718
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !13719
  %13 = zext i1 %12 to i32, !dbg !13719
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !13720
  ret void, !dbg !13721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13722 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13724, metadata !DIExpression()), !dbg !13725
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !13726
  ret i1 %2, !dbg !13727
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13728 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13746, metadata !DIExpression()), !dbg !13748
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13747, metadata !DIExpression()), !dbg !13748
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !13749
  br i1 %3, label %4, label %5, !dbg !13752

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.238, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1200) #26, !dbg !13753
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1200) #26, !dbg !13753
  unreachable, !dbg !13753

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13755
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13756
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #26, !dbg !13757
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13758
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !13758
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !13760
  br i1 %10, label %11, label %13, !dbg !13761

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13762
  store i32 0, i32* %12, align 4, !dbg !13764
  br label %13, !dbg !13765

13:                                               ; preds = %11, %5
  ret void, !dbg !13766
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13767 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13769, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13770, metadata !DIExpression()), !dbg !13784
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !13785
  br i1 %4, label %5, label %6, !dbg !13788

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.238, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1179) #26, !dbg !13789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1179) #26, !dbg !13789
  unreachable, !dbg !13789

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13791
  %8 = load i32, i32* %7, align 4, !dbg !13792
  %9 = add nsw i32 %8, 1, !dbg !13792
  store i32 %9, i32* %7, align 4, !dbg !13792
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13793
  store i32 %8, i32* %10, align 8, !dbg !13794
  %11 = load i32, i32* %7, align 4, !dbg !13795
  %12 = icmp eq i32 %11, 0, !dbg !13796
  br i1 %12, label %13, label %35, !dbg !13797

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13798
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !13798
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13772, metadata !DIExpression()), !dbg !13798
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13798
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13798
  %17 = load i32, i32* %16, align 4, !dbg !13798
  %18 = shl i32 %17, 2, !dbg !13798
  %19 = alloca i8, i32 %18, align 8, !dbg !13798
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13798
  store i8* %19, i8** %20, align 4, !dbg !13798
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13798
  %22 = alloca i8, i32 %17, align 8, !dbg !13798
  store i8* %22, i8** %21, align 4, !dbg !13798
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13798
  store i32 -1, i32* %23, align 4, !dbg !13798
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !13799
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !13781, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !13771, metadata !DIExpression()), !dbg !13784
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !13801
  br i1 %25, label %26, label %27, !dbg !13798

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !13801
  br label %35, !dbg !13802

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !13771, metadata !DIExpression()), !dbg !13784
  %29 = load i32, i32* %7, align 4, !dbg !13803
  %30 = add nsw i32 %29, 1, !dbg !13803
  store i32 %30, i32* %7, align 4, !dbg !13803
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !13805
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !13805
  store i32 %29, i32* %32, align 8, !dbg !13806
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !13799
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !13781, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !13771, metadata !DIExpression()), !dbg !13784
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !13801
  br i1 %34, label %26, label %27, !dbg !13798, !llvm.loop !13807

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13809
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13810
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #26, !dbg !13811
  ret void, !dbg !13812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13815, metadata !DIExpression()), !dbg !13817
  %2 = tail call %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !13818
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13825, metadata !DIExpression()) #23, !dbg !13827
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13828
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13829
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13829
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13816, metadata !DIExpression()), !dbg !13817
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13830, metadata !DIExpression()) #23, !dbg !13836
  call void @llvm.dbg.value(metadata i32 %0, metadata !13835, metadata !DIExpression()) #23, !dbg !13836
  %6 = icmp eq i32 %0, 0, !dbg !13839
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13841
  br i1 %6, label %8, label %18, !dbg !13842

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !13843
  br i1 %9, label %10, label %11, !dbg !13846

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 137) #26, !dbg !13847
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.237, i32 0, i32 0)) #26, !dbg !13847
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 137) #26, !dbg !13847
  unreachable, !dbg !13847

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #26, !dbg !13849
  br i1 %12, label %18, label %13, !dbg !13851

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !13852
  br i1 %14, label %18, label %15, !dbg !13854

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #26, !dbg !13855
  %17 = icmp eq i32 %16, 0, !dbg !13855
  br i1 %17, label %21, label %18, !dbg !13857

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !13858
  br i1 %19, label %21, label %20, !dbg !13861

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13862
  br label %21, !dbg !13864

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !13841
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13841
  ret void, !dbg !13865
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13866 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13870, metadata !DIExpression()), !dbg !13873
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13871, metadata !DIExpression()), !dbg !13873
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13874
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !13875
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13872, metadata !DIExpression()), !dbg !13873
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13871, metadata !DIExpression()), !dbg !13873
  ret %struct.k_thread* %4, !dbg !13876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13877 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13879, metadata !DIExpression()), !dbg !13880
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13881
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13882
  %4 = xor i1 %3, true, !dbg !13883
  ret i1 %4, !dbg !13884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13887, metadata !DIExpression()), !dbg !13888
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13889
  %3 = load i16, i16* %2, align 2, !dbg !13889
  %4 = icmp ult i16 %3, 128, !dbg !13890
  %5 = zext i1 %4 to i32, !dbg !13890
  ret i32 %5, !dbg !13891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13892 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13898, metadata !DIExpression()), !dbg !13899
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13900
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !13901
  %4 = xor i1 %3, true, !dbg !13902
  ret i1 %4, !dbg !13903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13904 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13910, metadata !DIExpression()), !dbg !13911
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13912
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13912
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13913
  ret i1 %4, !dbg !13914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13915 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13920, metadata !DIExpression()), !dbg !13921
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !13922
  ret %struct.rbnode* %2, !dbg !13923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !13924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13926, metadata !DIExpression()), !dbg !13927
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13928
  ret i1 %2, !dbg !13929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !13930 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13934, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata i32 %1, metadata !13935, metadata !DIExpression()), !dbg !13936
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13937
  %4 = load i8, i8* %3, align 1, !dbg !13937
  %5 = zext i8 %4 to i32, !dbg !13938
  %6 = and i32 %5, %1, !dbg !13939
  %7 = icmp ne i32 %6, 0, !dbg !13940
  ret i1 %7, !dbg !13941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.239(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13942 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13944, metadata !DIExpression()), !dbg !13946
  call void @llvm.dbg.value(metadata i32 %1, metadata !13945, metadata !DIExpression()), !dbg !13946
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.240(i32 noundef %0, i32 noundef %1) #24, !dbg !13947
  ret i1 %3, !dbg !13948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.240(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13951, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %1, metadata !13952, metadata !DIExpression()), !dbg !13953
  %3 = icmp slt i32 %0, %1, !dbg !13954
  ret i1 %3, !dbg !13955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13956 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13958, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata i32 0, metadata !13959, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !13964
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13966, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !13968
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !13968
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !13964
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13969
  br i1 %3, label %5, label %4, !dbg !13970

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !13971
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13971
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !13971
  unreachable, !dbg !13971

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !13968
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !13964
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13972
  call void @llvm.dbg.value(metadata i32 undef, metadata !13961, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.value(metadata i32 undef, metadata !13959, metadata !DIExpression()), !dbg !13963
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13973
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !13978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !13978
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13980
  br i1 %6, label %8, label %7, !dbg !13981

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !13982
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13982
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !13982
  unreachable, !dbg !13982

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13966
  call void @llvm.dbg.value(metadata i32 %9, metadata !13506, metadata !DIExpression()) #23, !dbg !13968
  call void @llvm.dbg.value(metadata i32 %9, metadata !13500, metadata !DIExpression()) #23, !dbg !13964
  call void @llvm.dbg.value(metadata i32 %9, metadata !13961, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !13978
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !13983
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13985, !srcloc !13548
  call void @llvm.dbg.value(metadata i32 1, metadata !13959, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.value(metadata i32 undef, metadata !13959, metadata !DIExpression()), !dbg !13963
  ret void, !dbg !13986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13987 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13989, metadata !DIExpression()), !dbg !13990
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13991
  br i1 %2, label %9, label %3, !dbg !13993

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !13994
  br i1 %4, label %5, label %9, !dbg !13995

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13703, metadata !DIExpression()) #23, !dbg !13996
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13999
  %7 = load i8, i8* %6, align 1, !dbg !14000
  %8 = or i8 %7, -128, !dbg !14000
  store i8 %8, i8* %6, align 1, !dbg !14000
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13710, metadata !DIExpression()) #23, !dbg !14001
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14003
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14004
  br label %9, !dbg !14005

9:                                                ; preds = %5, %3, %1
  ret void, !dbg !14006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14007 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14009, metadata !DIExpression()), !dbg !14010
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14011
  br i1 %2, label %6, label %3, !dbg !14012

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14013
  %5 = xor i1 %4, true, !dbg !14012
  br label %6, !dbg !14012

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14014
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14015 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14017, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 0, metadata !14018, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14023
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14025, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14027
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14027
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14023
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14028
  br i1 %3, label %5, label %4, !dbg !14029

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14030
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14030
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14030
  unreachable, !dbg !14030

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14027
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14023
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14031
  call void @llvm.dbg.value(metadata i32 undef, metadata !14020, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i32 undef, metadata !14018, metadata !DIExpression()), !dbg !14022
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14032
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14035
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14037
  br i1 %6, label %8, label %7, !dbg !14038

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14039
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14039
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14039
  unreachable, !dbg !14039

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14025
  call void @llvm.dbg.value(metadata i32 %9, metadata !13506, metadata !DIExpression()) #23, !dbg !14027
  call void @llvm.dbg.value(metadata i32 %9, metadata !13500, metadata !DIExpression()) #23, !dbg !14023
  call void @llvm.dbg.value(metadata i32 %9, metadata !14020, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !14040
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14042, !srcloc !13548
  call void @llvm.dbg.value(metadata i32 1, metadata !14018, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i32 undef, metadata !14018, metadata !DIExpression()), !dbg !14022
  ret void, !dbg !14043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14044 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14046, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14049
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14051, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14053
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14053
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14049
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14054
  br i1 %3, label %5, label %4, !dbg !14055

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14056
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14056
  unreachable, !dbg !14056

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14051
  call void @llvm.dbg.value(metadata i32 %6, metadata !13506, metadata !DIExpression()) #23, !dbg !14053
  call void @llvm.dbg.value(metadata i32 %6, metadata !13500, metadata !DIExpression()) #23, !dbg !14049
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14057
  call void @llvm.dbg.value(metadata i32 %6, metadata !14047, metadata !DIExpression()), !dbg !14048
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14058
  br i1 %7, label %8, label %12, !dbg !14060

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14061
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14064
  br i1 %9, label %11, label %10, !dbg !14065

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14066
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14066
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14066
  unreachable, !dbg !14066

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13528, metadata !DIExpression()) #23, !dbg !14061
  call void @llvm.dbg.value(metadata i32 %6, metadata !13542, metadata !DIExpression()) #23, !dbg !14067
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14069, !srcloc !13548
  br label %14, !dbg !14070

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.245(%struct.k_thread* noundef %0) #24, !dbg !14071
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14072
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14073
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14073
  br label %14, !dbg !14074

14:                                               ; preds = %12, %11
  ret void, !dbg !14074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14077, metadata !DIExpression()), !dbg !14078
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14079
  %3 = load i8, i8* %2, align 1, !dbg !14079
  %4 = and i8 %3, 4, !dbg !14080
  %5 = icmp eq i8 %4, 0, !dbg !14081
  ret i1 %5, !dbg !14082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.245(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14085, metadata !DIExpression()), !dbg !14086
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14087
  %3 = load i8, i8* %2, align 1, !dbg !14088
  %4 = and i8 %3, -5, !dbg !14088
  store i8 %4, i8* %2, align 1, !dbg !14088
  ret void, !dbg !14089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14090 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14093, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14092, metadata !DIExpression()), !dbg !14094
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14095
  br i1 %4, label %5, label %12, !dbg !14097

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14098
  br i1 %6, label %7, label %12, !dbg !14099

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14100, metadata !DIExpression()) #23, !dbg !14106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14105, metadata !DIExpression()) #23, !dbg !14106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14109, metadata !DIExpression()) #23, !dbg !14114
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !14116
  br i1 %8, label %10, label %9, !dbg !14119

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !14120
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !14120
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !14120
  unreachable, !dbg !14120

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14100, metadata !DIExpression()) #23, !dbg !14106
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !14122
  br label %16, !dbg !14123

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13533, metadata !DIExpression()) #23, !dbg !14124
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !14127
  br i1 %13, label %15, label %14, !dbg !14128

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !14129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14129
  unreachable, !dbg !14129

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !13528, metadata !DIExpression()) #23, !dbg !14124
  call void @llvm.dbg.value(metadata i32 %3, metadata !13542, metadata !DIExpression()) #23, !dbg !14130
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14132, !srcloc !13548
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14133
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14138, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.value(metadata i32 %0, metadata !14140, metadata !DIExpression()), !dbg !14145
  %2 = icmp eq i32 %0, 0, !dbg !14147
  br i1 %2, label %3, label %6, !dbg !14148

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14149, !srcloc !14156
  call void @llvm.dbg.value(metadata i32 %4, metadata !14152, metadata !DIExpression()) #23, !dbg !14157
  %5 = icmp eq i32 %4, 0, !dbg !14158
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14139
  ret i1 %7, !dbg !14159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14160 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14163
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14162, metadata !DIExpression()), !dbg !14164
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14165
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14166
  ret i1 %3, !dbg !14167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14170, metadata !DIExpression()), !dbg !14172
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !14173
  call void @llvm.dbg.value(metadata i32 %2, metadata !14171, metadata !DIExpression()), !dbg !14172
  ret i32 %2, !dbg !14174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14175 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14177, metadata !DIExpression()), !dbg !14181
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14182
  call void @llvm.dbg.value(metadata i32 0, metadata !14178, metadata !DIExpression()), !dbg !14183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14184
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14186, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14184
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14189
  br i1 %4, label %6, label %5, !dbg !14190

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14191
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14191
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14191
  unreachable, !dbg !14191

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14186
  call void @llvm.dbg.value(metadata i32 %7, metadata !13506, metadata !DIExpression()) #23, !dbg !14188
  call void @llvm.dbg.value(metadata i32 %7, metadata !13500, metadata !DIExpression()) #23, !dbg !14184
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14192
  call void @llvm.dbg.value(metadata i32 %7, metadata !14180, metadata !DIExpression()), !dbg !14183
  call void @llvm.dbg.value(metadata i32 undef, metadata !14178, metadata !DIExpression()), !dbg !14183
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14193
  br i1 %8, label %9, label %13, !dbg !14197

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13686, metadata !DIExpression()) #23, !dbg !14198
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14201
  %11 = load i8, i8* %10, align 1, !dbg !14202
  %12 = and i8 %11, 127, !dbg !14202
  store i8 %12, i8* %10, align 1, !dbg !14202
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13694, metadata !DIExpression()) #23, !dbg !14203
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14205
  br label %13, !dbg !14206

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14207
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14208
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14209
  %16 = zext i1 %15 to i32, !dbg !14209
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14210
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14211
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14213
  br i1 %17, label %19, label %18, !dbg !14214

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14215
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14215
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14215
  unreachable, !dbg !14215

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !13528, metadata !DIExpression()) #23, !dbg !14211
  call void @llvm.dbg.value(metadata i32 %7, metadata !13542, metadata !DIExpression()) #23, !dbg !14216
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14218, !srcloc !13548
  call void @llvm.dbg.value(metadata i32 1, metadata !14178, metadata !DIExpression()), !dbg !14183
  call void @llvm.dbg.value(metadata i32 undef, metadata !14178, metadata !DIExpression()), !dbg !14183
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14219
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14221
  br i1 %21, label %22, label %23, !dbg !14222

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14223
  br label %23, !dbg !14225

23:                                               ; preds = %22, %19
  ret void, !dbg !14226
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14227 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14229, metadata !DIExpression()), !dbg !14230
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14231
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14232
  ret i32 %3, !dbg !14233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14236, metadata !DIExpression()), !dbg !14237
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14238
  %3 = load i8, i8* %2, align 1, !dbg !14239
  %4 = or i8 %3, 16, !dbg !14239
  store i8 %4, i8* %2, align 1, !dbg !14239
  ret void, !dbg !14240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14241 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14242, !srcloc !13509
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14242
  call void @llvm.dbg.value(metadata i32 %2, metadata !13506, metadata !DIExpression()) #23, !dbg !14244
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14244
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14245
  ret void, !dbg !14246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14249, metadata !DIExpression()), !dbg !14250
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14251
  br i1 %2, label %3, label %5, !dbg !14253

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14254
  br label %6, !dbg !14256

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13542, metadata !DIExpression()) #23, !dbg !14257
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14260, !srcloc !13548
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14261
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14262 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14264, metadata !DIExpression()), !dbg !14266
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14267
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14269, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14271
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14271
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14267
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14272
  br i1 %3, label %5, label %4, !dbg !14273

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14274
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14274
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14274
  unreachable, !dbg !14274

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14269
  call void @llvm.dbg.value(metadata i32 %6, metadata !13506, metadata !DIExpression()) #23, !dbg !14271
  call void @llvm.dbg.value(metadata i32 %6, metadata !13500, metadata !DIExpression()) #23, !dbg !14267
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14275
  call void @llvm.dbg.value(metadata i32 %6, metadata !14265, metadata !DIExpression()), !dbg !14266
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14276
  br i1 %7, label %12, label %8, !dbg !14278

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14279
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14282
  br i1 %9, label %11, label %10, !dbg !14283

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14284
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14284
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14284
  unreachable, !dbg !14284

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13528, metadata !DIExpression()) #23, !dbg !14279
  call void @llvm.dbg.value(metadata i32 %6, metadata !13542, metadata !DIExpression()) #23, !dbg !14285
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14287, !srcloc !13548
  br label %14, !dbg !14288

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14289
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14290
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14291
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14291
  br label %14, !dbg !14292

14:                                               ; preds = %12, %11
  ret void, !dbg !14292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14293 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14295, metadata !DIExpression()), !dbg !14296
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14297
  %3 = load i8, i8* %2, align 1, !dbg !14297
  %4 = and i8 %3, 16, !dbg !14298
  %5 = icmp ne i8 %4, 0, !dbg !14299
  ret i1 %5, !dbg !14300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14301 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14303, metadata !DIExpression()), !dbg !14304
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14305
  %3 = load i8, i8* %2, align 1, !dbg !14306
  %4 = and i8 %3, -17, !dbg !14306
  store i8 %4, i8* %2, align 1, !dbg !14306
  ret void, !dbg !14307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14308 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14318, metadata !DIExpression()), !dbg !14322
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14316, metadata !DIExpression()), !dbg !14322
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14317, metadata !DIExpression()), !dbg !14322
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14323
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14323
  br i1 %5, label %9, label %6, !dbg !14323

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !14323
  br i1 %7, label %9, label %8, !dbg !14326

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 773) #26, !dbg !14327
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 773) #26, !dbg !14327
  unreachable, !dbg !14327

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14319, metadata !DIExpression()), !dbg !14329
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14330
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14332, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14334
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14334
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14330
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14335
  br i1 %11, label %13, label %12, !dbg !14336

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14337
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14337
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14337
  unreachable, !dbg !14337

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14334
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14330
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14338
  call void @llvm.dbg.value(metadata i32 undef, metadata !14321, metadata !DIExpression()), !dbg !14329
  call void @llvm.dbg.value(metadata i32 undef, metadata !14319, metadata !DIExpression()), !dbg !14329
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14339
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14342
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14344
  br i1 %14, label %16, label %15, !dbg !14345

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14346
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14346
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14346
  unreachable, !dbg !14346

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14332
  call void @llvm.dbg.value(metadata i32 %17, metadata !13506, metadata !DIExpression()) #23, !dbg !14334
  call void @llvm.dbg.value(metadata i32 %17, metadata !13500, metadata !DIExpression()) #23, !dbg !14330
  call void @llvm.dbg.value(metadata i32 %17, metadata !14321, metadata !DIExpression()), !dbg !14329
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14342
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !14347
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14349, !srcloc !13548
  call void @llvm.dbg.value(metadata i32 1, metadata !14319, metadata !DIExpression()), !dbg !14329
  call void @llvm.dbg.value(metadata i32 undef, metadata !14319, metadata !DIExpression()), !dbg !14329
  ret void, !dbg !14350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14351 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14353, metadata !DIExpression()), !dbg !14354
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14355
  %3 = load i8, i8* %2, align 1, !dbg !14355
  %4 = and i8 %3, 1, !dbg !14356
  %5 = icmp ne i8 %4, 0, !dbg !14357
  ret i1 %5, !dbg !14358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14359 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14363, metadata !DIExpression()), !dbg !14364
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14361, metadata !DIExpression()), !dbg !14364
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14362, metadata !DIExpression()), !dbg !14364
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !14365
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14366
  ret void, !dbg !14367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14368 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14372, metadata !DIExpression()), !dbg !14374
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14373, metadata !DIExpression()), !dbg !14374
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14375
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14376
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14377
  br i1 %3, label %24, label %4, !dbg !14379

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14380
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14382
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14383
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14384, metadata !DIExpression()) #23, !dbg !14392
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14390, metadata !DIExpression()) #23, !dbg !14392
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !14394
  br i1 %7, label %8, label %9, !dbg !14397

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.238, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #26, !dbg !14398
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #26, !dbg !14398
  unreachable, !dbg !14398

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.254(%struct._dnode* noundef nonnull %6) #26, !dbg !14400
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14391, metadata !DIExpression()) #23, !dbg !14392
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14402
  br i1 %11, label %22, label %12, !dbg !14400

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14391, metadata !DIExpression()) #23, !dbg !14392
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14404
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14391, metadata !DIExpression()) #23, !dbg !14392
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #26, !dbg !14405
  %16 = icmp sgt i32 %15, 0, !dbg !14408
  br i1 %16, label %17, label %19, !dbg !14409

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14410
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !14412
  br label %24, !dbg !14413

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #26, !dbg !14402
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14391, metadata !DIExpression()) #23, !dbg !14392
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14402
  br i1 %21, label %22, label %12, !dbg !14400, !llvm.loop !14414

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14416
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #26, !dbg !14417
  br label %24, !dbg !14418

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14420 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14425, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14424, metadata !DIExpression()), !dbg !14426
  %4 = icmp eq i64 %3, -1, !dbg !14427
  br i1 %4, label %6, label %5, !dbg !14429

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.249(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14430
  br label %6, !dbg !14432

6:                                                ; preds = %5, %2
  ret void, !dbg !14433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.249(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14434 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14437, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14436, metadata !DIExpression()), !dbg !14438
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14439
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !14440
  ret void, !dbg !14441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14442 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14444, metadata !DIExpression()), !dbg !14452
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14453
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14453
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14445, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 0, metadata !14446, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14455
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14457, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14459
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14459
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14455
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14460
  br i1 %5, label %7, label %6, !dbg !14461

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14462
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14462
  unreachable, !dbg !14462

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14459
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14455
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14463
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14446, metadata !DIExpression()), !dbg !14454
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14464
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !14465
  %10 = load i8, i8* %9, align 1, !dbg !14465
  %11 = and i8 %10, 40, !dbg !14466
  %12 = icmp eq i8 %11, 0, !dbg !14466
  call void @llvm.dbg.value(metadata i1 %12, metadata !14449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14467
  br i1 %12, label %13, label %20, !dbg !14468

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14469
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !14469
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !14469
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !14473
  br i1 %17, label %19, label %18, !dbg !14474

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !14475
  br label %19, !dbg !14477

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.245(%struct.k_thread* noundef nonnull %3) #24, !dbg !14478
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !14479
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !14480
  br label %20, !dbg !14481

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14482
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14484
  br i1 %21, label %23, label %22, !dbg !14485

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14486
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14486
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14486
  unreachable, !dbg !14486

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !14457
  call void @llvm.dbg.value(metadata i32 %24, metadata !13506, metadata !DIExpression()) #23, !dbg !14459
  call void @llvm.dbg.value(metadata i32 %24, metadata !13500, metadata !DIExpression()) #23, !dbg !14455
  call void @llvm.dbg.value(metadata i32 %24, metadata !14448, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14482
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !14487
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !14489, !srcloc !13548
  call void @llvm.dbg.value(metadata i32 1, metadata !14446, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14446, metadata !DIExpression()), !dbg !14454
  ret void, !dbg !14490
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14493, metadata !DIExpression()), !dbg !14494
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !14495
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14496
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !14497
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14498
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !14499
  ret void, !dbg !14500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !14501 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14505, metadata !DIExpression()), !dbg !14506
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14507
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !14507
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !14507
  br i1 %4, label %5, label %6, !dbg !14510

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 726) #26, !dbg !14511
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 726) #26, !dbg !14511
  unreachable, !dbg !14511

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !14513
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14514 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14516, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14517, metadata !DIExpression()), !dbg !14518
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14519
  br i1 %3, label %4, label %5, !dbg !14522

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.238, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1139) #26, !dbg !14523
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1139) #26, !dbg !14523
  unreachable, !dbg !14523

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14525
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14526
  ret void, !dbg !14527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14528 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14530, metadata !DIExpression()), !dbg !14531
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14532
  %3 = load i8, i8* %2, align 1, !dbg !14533
  %4 = and i8 %3, -3, !dbg !14533
  store i8 %4, i8* %2, align 1, !dbg !14533
  ret void, !dbg !14534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !14535 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14540, metadata !DIExpression()), !dbg !14544
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14545
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14545
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14541, metadata !DIExpression()), !dbg !14544
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14546
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14546
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14543, metadata !DIExpression()), !dbg !14544
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14547
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14548
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14549
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14550
  tail call fastcc void @sys_dnode_init.252(%struct._dnode* noundef %0) #24, !dbg !14551
  ret void, !dbg !14552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.252(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14553 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14555, metadata !DIExpression()), !dbg !14556
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14557
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14558
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14559
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14560
  ret void, !dbg !14561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14562 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14564, metadata !DIExpression()), !dbg !14565
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14566
  br i1 %2, label %3, label %7, !dbg !14568

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13686, metadata !DIExpression()) #23, !dbg !14569
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14572
  %5 = load i8, i8* %4, align 1, !dbg !14573
  %6 = and i8 %5, 127, !dbg !14573
  store i8 %6, i8* %4, align 1, !dbg !14573
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13694, metadata !DIExpression()) #23, !dbg !14574
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14576
  br label %7, !dbg !14577

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14578
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14579
  %10 = zext i1 %9 to i32, !dbg !14579
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !14580
  ret void, !dbg !14581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14582 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14584, metadata !DIExpression()), !dbg !14585
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14586
  %3 = load i8, i8* %2, align 1, !dbg !14587
  %4 = or i8 %3, 2, !dbg !14587
  store i8 %4, i8* %2, align 1, !dbg !14587
  ret void, !dbg !14588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.254(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14589 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14593, metadata !DIExpression()), !dbg !14594
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.255(%struct._dnode* noundef %0) #24, !dbg !14595
  br i1 %2, label %6, label %3, !dbg !14595

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14596
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14596
  br label %6, !dbg !14595

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14595
  ret %struct._dnode* %7, !dbg !14597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !14598 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14602, metadata !DIExpression()), !dbg !14605
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14603, metadata !DIExpression()), !dbg !14605
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14606
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14606
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14604, metadata !DIExpression()), !dbg !14605
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14607
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14608
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14609
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14610
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14611
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14612
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14613
  ret void, !dbg !14614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14615 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14619, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14620, metadata !DIExpression()), !dbg !14621
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14622
  br i1 %3, label %6, label %4, !dbg !14623

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14624
  br label %6, !dbg !14623

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14623
  ret %struct._dnode* %7, !dbg !14625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !14626 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14630, metadata !DIExpression()), !dbg !14633
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14631, metadata !DIExpression()), !dbg !14633
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14634
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14634
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14632, metadata !DIExpression()), !dbg !14633
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14635
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14636
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14637
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14638
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14639
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14640
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14641
  ret void, !dbg !14642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14643 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14645, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14646, metadata !DIExpression()), !dbg !14647
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14648
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14648
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14649
  br i1 %5, label %9, label %6, !dbg !14650

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14651
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14651
  br label %9, !dbg !14650

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14650
  ret %struct._dnode* %10, !dbg !14652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.255(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14653 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14657, metadata !DIExpression()), !dbg !14658
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14659
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14659
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14660
  ret i1 %4, !dbg !14661
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !14662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14664, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata i32 0, metadata !14665, metadata !DIExpression()), !dbg !14669
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14670
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14672, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14674
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14674
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14670
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14675
  br i1 %3, label %5, label %4, !dbg !14676

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14677
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14677
  unreachable, !dbg !14677

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14674
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14670
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14678
  call void @llvm.dbg.value(metadata i32 undef, metadata !14667, metadata !DIExpression()), !dbg !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14665, metadata !DIExpression()), !dbg !14669
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !14679
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14682
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14684
  br i1 %6, label %8, label %7, !dbg !14685

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14686
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14686
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14686
  unreachable, !dbg !14686

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14672
  call void @llvm.dbg.value(metadata i32 %9, metadata !13506, metadata !DIExpression()) #23, !dbg !14674
  call void @llvm.dbg.value(metadata i32 %9, metadata !13500, metadata !DIExpression()) #23, !dbg !14670
  call void @llvm.dbg.value(metadata i32 %9, metadata !14667, metadata !DIExpression()), !dbg !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14682
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !14687
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14689, !srcloc !13548
  call void @llvm.dbg.value(metadata i32 1, metadata !14665, metadata !DIExpression()), !dbg !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14665, metadata !DIExpression()), !dbg !14669
  ret void, !dbg !14690
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14691 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14697, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.value(metadata i32 %0, metadata !14695, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14696, metadata !DIExpression()), !dbg !14702
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14703
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14704
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14705
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14706
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14707
  call void @llvm.dbg.value(metadata i32 %6, metadata !14698, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.value(metadata i32 0, metadata !14699, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14709
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14711, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14709
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14714
  br i1 %8, label %10, label %9, !dbg !14715

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14716
  unreachable, !dbg !14716

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14709
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata i32 undef, metadata !14699, metadata !DIExpression()), !dbg !14708
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14718
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14722
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !14723
  br i1 %13, label %14, label %15, !dbg !14724

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14725
  br label %15, !dbg !14727

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14728
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14730
  br i1 %16, label %18, label %17, !dbg !14731

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14732
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14732
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14732
  unreachable, !dbg !14732

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !14711
  call void @llvm.dbg.value(metadata i32 %19, metadata !13506, metadata !DIExpression()) #23, !dbg !14713
  call void @llvm.dbg.value(metadata i32 %19, metadata !13500, metadata !DIExpression()) #23, !dbg !14709
  call void @llvm.dbg.value(metadata i32 %19, metadata !14701, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14728
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !14733
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !14735, !srcloc !13548
  call void @llvm.dbg.value(metadata i32 1, metadata !14699, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata i32 undef, metadata !14699, metadata !DIExpression()), !dbg !14708
  ret i32 %6, !dbg !14736
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14737 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()), !dbg !14745
  call void @llvm.dbg.value(metadata i64 undef, metadata !14744, metadata !DIExpression()), !dbg !14745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14741, metadata !DIExpression()), !dbg !14745
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14743, metadata !DIExpression()), !dbg !14745
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14746
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14747
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !14748
  br i1 %6, label %7, label %8, !dbg !14751

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 846) #26, !dbg !14752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 846) #26, !dbg !14752
  unreachable, !dbg !14752

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14754
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14756, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14758
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14758
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14754
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14759
  br i1 %10, label %12, label %11, !dbg !14760

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14761
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14761
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14761
  unreachable, !dbg !14761

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14758
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14754
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14762
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14763
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !14764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14109, metadata !DIExpression()) #23, !dbg !14765
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !14767
  br i1 %14, label %16, label %15, !dbg !14768

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !14769
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !14769
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !14769
  unreachable, !dbg !14769

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14100, metadata !DIExpression()) #23, !dbg !14770
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14105, metadata !DIExpression()) #23, !dbg !14770
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14109, metadata !DIExpression()) #23, !dbg !14772
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14774
  br i1 %17, label %19, label %18, !dbg !14775

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !14776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !14776
  unreachable, !dbg !14776

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14100, metadata !DIExpression()) #23, !dbg !14770
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !14777
  ret i32 %21, !dbg !14778
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14779 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14783, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14784, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata i32 0, metadata !14785, metadata !DIExpression()), !dbg !14789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14790
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14792, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14790
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14795
  br i1 %3, label %5, label %4, !dbg !14796

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14797
  unreachable, !dbg !14797

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14790
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14798
  call void @llvm.dbg.value(metadata i32 undef, metadata !14787, metadata !DIExpression()), !dbg !14789
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14784, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14785, metadata !DIExpression()), !dbg !14789
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !14799
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14784, metadata !DIExpression()), !dbg !14788
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14802
  br i1 %8, label %10, label %9, !dbg !14804

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !14805
  br label %10, !dbg !14807

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14808
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14810
  br i1 %11, label %13, label %12, !dbg !14811

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14812
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14812
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14812
  unreachable, !dbg !14812

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !14792
  call void @llvm.dbg.value(metadata i32 %14, metadata !13506, metadata !DIExpression()) #23, !dbg !14794
  call void @llvm.dbg.value(metadata i32 %14, metadata !13500, metadata !DIExpression()) #23, !dbg !14790
  call void @llvm.dbg.value(metadata i32 %14, metadata !14787, metadata !DIExpression()), !dbg !14789
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14808
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !14813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14815, !srcloc !13548
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14784, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14785, metadata !DIExpression()), !dbg !14789
  ret %struct.k_thread* %7, !dbg !14816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14817 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14821, metadata !DIExpression()), !dbg !14824
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14822, metadata !DIExpression()), !dbg !14824
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.254(%struct._dnode* noundef %0) #24, !dbg !14825
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14823, metadata !DIExpression()), !dbg !14824
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14822, metadata !DIExpression()), !dbg !14824
  ret %struct.k_thread* %3, !dbg !14826
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14827 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14829, metadata !DIExpression()), !dbg !14834
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14830, metadata !DIExpression()), !dbg !14834
  call void @llvm.dbg.value(metadata i32 0, metadata !14831, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14836
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14838, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14840
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14840
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14836
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14841
  br i1 %3, label %5, label %4, !dbg !14842

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14843
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14843
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14843
  unreachable, !dbg !14843

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14840
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14836
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14844
  call void @llvm.dbg.value(metadata i32 undef, metadata !14833, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14830, metadata !DIExpression()), !dbg !14834
  call void @llvm.dbg.value(metadata i32 undef, metadata !14831, metadata !DIExpression()), !dbg !14835
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !14845
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14830, metadata !DIExpression()), !dbg !14834
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14848
  br i1 %8, label %11, label %9, !dbg !14850

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !14851
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !14853
  br label %11, !dbg !14854

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14855
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14857
  br i1 %12, label %14, label %13, !dbg !14858

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14859
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14859
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14859
  unreachable, !dbg !14859

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !14838
  call void @llvm.dbg.value(metadata i32 %15, metadata !13506, metadata !DIExpression()) #23, !dbg !14840
  call void @llvm.dbg.value(metadata i32 %15, metadata !13500, metadata !DIExpression()) #23, !dbg !14836
  call void @llvm.dbg.value(metadata i32 %15, metadata !14833, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14855
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !14860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14862, !srcloc !13548
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14830, metadata !DIExpression()), !dbg !14834
  call void @llvm.dbg.value(metadata i32 undef, metadata !14831, metadata !DIExpression()), !dbg !14835
  ret %struct.k_thread* %7, !dbg !14863
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14864 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14866, metadata !DIExpression()), !dbg !14867
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14664, metadata !DIExpression()) #23, !dbg !14868
  call void @llvm.dbg.value(metadata i32 0, metadata !14665, metadata !DIExpression()) #23, !dbg !14870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14871
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14873, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14875
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14875
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14871
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14876
  br i1 %3, label %5, label %4, !dbg !14877

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14878
  unreachable, !dbg !14878

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14875
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14871
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14667, metadata !DIExpression()) #23, !dbg !14870
  call void @llvm.dbg.value(metadata i32 undef, metadata !14665, metadata !DIExpression()) #23, !dbg !14870
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !14880
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14881
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14881
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14883
  br i1 %6, label %8, label %7, !dbg !14884

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14885
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14885
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14885
  unreachable, !dbg !14885

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14873
  call void @llvm.dbg.value(metadata i32 %9, metadata !13506, metadata !DIExpression()) #23, !dbg !14875
  call void @llvm.dbg.value(metadata i32 %9, metadata !13500, metadata !DIExpression()) #23, !dbg !14871
  call void @llvm.dbg.value(metadata i32 %9, metadata !14667, metadata !DIExpression()) #23, !dbg !14870
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14881
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !14886
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14888, !srcloc !13548
  call void @llvm.dbg.value(metadata i32 1, metadata !14665, metadata !DIExpression()) #23, !dbg !14870
  call void @llvm.dbg.value(metadata i32 undef, metadata !14665, metadata !DIExpression()) #23, !dbg !14870
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14889
  ret void, !dbg !14890
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14893, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata i32 %1, metadata !14894, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata i8 0, metadata !14895, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata i32 0, metadata !14896, metadata !DIExpression()), !dbg !14900
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14901
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14903, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14905
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14905
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14901
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14906
  br i1 %4, label %6, label %5, !dbg !14907

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14908
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14908
  unreachable, !dbg !14908

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14905
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14901
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14898, metadata !DIExpression()), !dbg !14900
  call void @llvm.dbg.value(metadata i8 poison, metadata !14895, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14896, metadata !DIExpression()), !dbg !14900
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14910
  call void @llvm.dbg.value(metadata i1 %8, metadata !14895, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14899
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %10 = bitcast %union.anon.2* %9 to i8*
  %11 = trunc i32 %1 to i8
  br i1 %8, label %12, label %17, !dbg !14913

12:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13686, metadata !DIExpression()) #23, !dbg !14914
  %13 = load i8, i8* %7, align 1, !dbg !14920
  %14 = and i8 %13, 127, !dbg !14920
  store i8 %14, i8* %7, align 1, !dbg !14920
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13694, metadata !DIExpression()) #23, !dbg !14921
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14923
  store i8 %11, i8* %10, align 2, !dbg !14924
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13703, metadata !DIExpression()) #23, !dbg !14925
  %15 = load i8, i8* %7, align 1, !dbg !14927
  %16 = or i8 %15, -128, !dbg !14927
  store i8 %16, i8* %7, align 1, !dbg !14927
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13710, metadata !DIExpression()) #23, !dbg !14928
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14930
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !14931
  br label %18, !dbg !14932

17:                                               ; preds = %6
  store i8 %11, i8* %10, align 2, !dbg !14933
  br label %18

18:                                               ; preds = %12, %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14935
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14935
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14937
  br i1 %19, label %21, label %20, !dbg !14938

20:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14939
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14939
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14939
  unreachable, !dbg !14939

21:                                               ; preds = %18
  %22 = extractvalue { i32, i32 } %3, 0, !dbg !14903
  call void @llvm.dbg.value(metadata i32 %22, metadata !13506, metadata !DIExpression()) #23, !dbg !14905
  call void @llvm.dbg.value(metadata i32 %22, metadata !13500, metadata !DIExpression()) #23, !dbg !14901
  call void @llvm.dbg.value(metadata i32 %22, metadata !14898, metadata !DIExpression()), !dbg !14900
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14935
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !14940
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #23, !dbg !14942, !srcloc !13548
  call void @llvm.dbg.value(metadata i8 poison, metadata !14895, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14896, metadata !DIExpression()), !dbg !14900
  ret i1 %8, !dbg !14943
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14944 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()), !dbg !14951
  call void @llvm.dbg.value(metadata i32 %1, metadata !14949, metadata !DIExpression()), !dbg !14951
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !14952
  call void @llvm.dbg.value(metadata i1 %3, metadata !14950, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14951
  br i1 %3, label %4, label %12, !dbg !14953

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14955
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14956
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14956
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14956
  %9 = load i8, i8* %8, align 1, !dbg !14956
  %10 = icmp eq i8 %9, 0, !dbg !14957
  br i1 %10, label %11, label %12, !dbg !14958

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14959
  br label %12, !dbg !14961

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14962
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14963 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14965, metadata !DIExpression()), !dbg !14968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !14969
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14971, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14973
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !14973
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14969
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14974
  br i1 %2, label %4, label %3, !dbg !14975

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14976
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14976
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !14976
  unreachable, !dbg !14976

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !14973
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !14969
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14977
  call void @llvm.dbg.value(metadata i32 undef, metadata !14967, metadata !DIExpression()), !dbg !14968
  call void @llvm.dbg.value(metadata i32 undef, metadata !14965, metadata !DIExpression()), !dbg !14968
  tail call fastcc void @z_sched_lock() #24, !dbg !14978
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !14981
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14983
  br i1 %5, label %7, label %6, !dbg !14984

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14985
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14985
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !14985
  unreachable, !dbg !14985

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !14971
  call void @llvm.dbg.value(metadata i32 %8, metadata !13506, metadata !DIExpression()) #23, !dbg !14973
  call void @llvm.dbg.value(metadata i32 %8, metadata !13500, metadata !DIExpression()) #23, !dbg !14969
  call void @llvm.dbg.value(metadata i32 %8, metadata !14967, metadata !DIExpression()), !dbg !14968
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !14981
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !14986
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14988, !srcloc !13548
  call void @llvm.dbg.value(metadata i32 1, metadata !14965, metadata !DIExpression()), !dbg !14968
  call void @llvm.dbg.value(metadata i32 undef, metadata !14965, metadata !DIExpression()), !dbg !14968
  ret void, !dbg !14989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14990 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14991, !srcloc !14156
  call void @llvm.dbg.value(metadata i32 %1, metadata !14152, metadata !DIExpression()) #23, !dbg !14996
  %2 = icmp eq i32 %1, 0, !dbg !14997
  br i1 %2, label %4, label %3, !dbg !14998

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.266, i32 0, i32 0), i32 noundef 253) #26, !dbg !14999
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.237, i32 0, i32 0)) #26, !dbg !14999
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.266, i32 0, i32 0), i32 noundef 253) #26, !dbg !14999
  unreachable, !dbg !14999

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15001
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15001
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15001
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15001
  %9 = load i8, i8* %8, align 1, !dbg !15001
  %10 = icmp eq i8 %9, 1, !dbg !15001
  br i1 %10, label %11, label %12, !dbg !15004

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.266, i32 0, i32 0), i32 noundef 254) #26, !dbg !15005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.237, i32 0, i32 0)) #26, !dbg !15005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.266, i32 0, i32 0), i32 noundef 254) #26, !dbg !15005
  unreachable, !dbg !15005

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15007
  store i8 %13, i8* %8, align 1, !dbg !15007
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15008, !srcloc !15010
  ret void, !dbg !15011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15012 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15014, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !15018
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15020, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !15018
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15023
  br i1 %2, label %4, label %3, !dbg !15024

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15025
  unreachable, !dbg !15025

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !15018
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15026
  call void @llvm.dbg.value(metadata i32 undef, metadata !15016, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata i32 undef, metadata !15014, metadata !DIExpression()), !dbg !15017
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15027
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15027
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15027
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15027
  %9 = load i8, i8* %8, align 1, !dbg !15027
  %10 = icmp eq i8 %9, 0, !dbg !15027
  br i1 %10, label %11, label %12, !dbg !15032

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 999) #26, !dbg !15033
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.237, i32 0, i32 0)) #26, !dbg !15033
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 999) #26, !dbg !15033
  unreachable, !dbg !15033

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15035, !srcloc !14156
  call void @llvm.dbg.value(metadata i32 %13, metadata !14152, metadata !DIExpression()) #23, !dbg !15040
  %14 = icmp eq i32 %13, 0, !dbg !15041
  br i1 %14, label %16, label %15, !dbg !15042

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1000) #26, !dbg !15043
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.237, i32 0, i32 0)) #26, !dbg !15043
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1000) #26, !dbg !15043
  unreachable, !dbg !15043

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15045
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15046
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15046
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15046
  %21 = load i8, i8* %20, align 1, !dbg !15047
  %22 = add i8 %21, 1, !dbg !15047
  store i8 %22, i8* %20, align 1, !dbg !15047
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15048
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !15049
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !15049
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15051
  br i1 %23, label %25, label %24, !dbg !15052

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15053
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15053
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15053
  unreachable, !dbg !15053

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15020
  call void @llvm.dbg.value(metadata i32 %26, metadata !13506, metadata !DIExpression()) #23, !dbg !15022
  call void @llvm.dbg.value(metadata i32 %26, metadata !13500, metadata !DIExpression()) #23, !dbg !15018
  call void @llvm.dbg.value(metadata i32 %26, metadata !15016, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !15049
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !15054
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15056, !srcloc !13548
  call void @llvm.dbg.value(metadata i32 1, metadata !15014, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata i32 undef, metadata !15014, metadata !DIExpression()), !dbg !15017
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15057
  ret void, !dbg !15058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15059 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15060
  ret %struct.k_thread* %1, !dbg !15061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) #8 !dbg !15062 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15064, metadata !DIExpression()), !dbg !15069
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15065, metadata !DIExpression()), !dbg !15069
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15070
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15066, metadata !DIExpression()), !dbg !15069
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15071
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15067, metadata !DIExpression()), !dbg !15069
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15072
  call void @llvm.dbg.value(metadata i32 %5, metadata !15068, metadata !DIExpression()), !dbg !15069
  %6 = icmp sgt i32 %5, 0, !dbg !15073
  br i1 %6, label %17, label %7, !dbg !15075

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15076
  br i1 %8, label %17, label %9, !dbg !15078

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15079
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15079
  %12 = load i32, i32* %11, align 8, !dbg !15079
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15081
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15081
  %15 = load i32, i32* %14, align 8, !dbg !15081
  %16 = icmp ult i32 %12, %15, !dbg !15082
  br label %17, !dbg !15083

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15084
  ret i1 %18, !dbg !15085
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #17 !dbg !15086 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15096, metadata !DIExpression()), !dbg !15100
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15101
  %3 = load i32, i32* %2, align 4, !dbg !15101
  %4 = icmp eq i32 %3, 0, !dbg !15103
  br i1 %4, label %10, label %5, !dbg !15104

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15097, metadata !DIExpression()), !dbg !15100
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15105, !range !7123
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15106
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15098, metadata !DIExpression()), !dbg !15100
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.254(%struct._dnode* noundef %7) #24, !dbg !15107
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15099, metadata !DIExpression()), !dbg !15100
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15097, metadata !DIExpression()), !dbg !15100
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15100
  ret %struct.k_thread* %11, !dbg !15108
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15109 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15113, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata i32 0, metadata !15114, metadata !DIExpression()), !dbg !15116
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.271(%struct._wait_q_t* noundef %0) #24, !dbg !15117
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15115, metadata !DIExpression()), !dbg !15116
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15118
  br i1 %3, label %8, label %4, !dbg !15119

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15120
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15122
  call void @llvm.dbg.value(metadata i32 1, metadata !15114, metadata !DIExpression()), !dbg !15116
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.271(%struct._wait_q_t* noundef %0) #24, !dbg !15117
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15115, metadata !DIExpression()), !dbg !15116
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15118
  br i1 %7, label %8, label %4, !dbg !15119, !llvm.loop !15123

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15116
  ret i32 %9, !dbg !15125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.271(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15126 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15128, metadata !DIExpression()), !dbg !15129
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15130
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.254(%struct._dnode* noundef %2) #24, !dbg !15131
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15132
  ret %struct.k_thread* %4, !dbg !15133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !15134 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15143, metadata !DIExpression()), !dbg !15144
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 0, !dbg !15145
  store %struct.rbnode* null, %struct.rbnode** %2, align 4, !dbg !15145
  %3 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 1, !dbg !15145
  store i1 (%struct.rbnode*, %struct.rbnode*)* @z_priq_rb_lessthan, i1 (%struct.rbnode*, %struct.rbnode*)** %3, align 4, !dbg !15145
  %4 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 2, !dbg !15145
  store i32 0, i32* %4, align 4, !dbg !15145
  %5 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 1, !dbg !15145
  store i32 0, i32* %5, align 4, !dbg !15145
  ret void, !dbg !15146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15147 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15148
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15149
  ret void, !dbg !15150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15151 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15156, metadata !DIExpression()), !dbg !15157
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15158
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15158
  %4 = load i8, i8* %3, align 2, !dbg !15158
  %5 = sext i8 %4 to i32, !dbg !15159
  ret i32 %5, !dbg !15160
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15161 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15165, metadata !DIExpression()), !dbg !15168
  call void @llvm.dbg.value(metadata i32 %1, metadata !15166, metadata !DIExpression()), !dbg !15168
  %3 = add i32 %1, 29, !dbg !15169
  %4 = icmp ult i32 %3, 69, !dbg !15169
  br i1 %4, label %6, label %5, !dbg !15169

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1331) #26, !dbg !15173
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.277, i32 0, i32 0), i32 noundef %1, i32 noundef 39, i32 noundef -29) #26, !dbg !15173
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1331) #26, !dbg !15173
  unreachable, !dbg !15173

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15175, !srcloc !14156
  call void @llvm.dbg.value(metadata i32 %7, metadata !14152, metadata !DIExpression()) #23, !dbg !15180
  %8 = icmp eq i32 %7, 0, !dbg !15181
  br i1 %8, label %10, label %9, !dbg !15182

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1332) #26, !dbg !15183
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.237, i32 0, i32 0)) #26, !dbg !15183
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1332) #26, !dbg !15183
  unreachable, !dbg !15183

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15167, metadata !DIExpression()), !dbg !15168
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15185
  ret void, !dbg !15186
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15187 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15188
  br i1 %1, label %8, label %2, !dbg !15189

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !15190
  br i1 %3, label %8, label %4, !dbg !15191

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15192
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15193
  %7 = xor i1 %6, true, !dbg !15191
  br label %8, !dbg !15191

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15195 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15196, !range !4008
  %2 = icmp eq i8 %1, 0, !dbg !15196
  ret i1 %2, !dbg !15197
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15198 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15201, !srcloc !14156
  call void @llvm.dbg.value(metadata i32 %1, metadata !14152, metadata !DIExpression()) #23, !dbg !15206
  %2 = icmp eq i32 %1, 0, !dbg !15207
  br i1 %2, label %4, label %3, !dbg !15208

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1392) #26, !dbg !15209
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.237, i32 0, i32 0)) #26, !dbg !15209
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1392) #26, !dbg !15209
  unreachable, !dbg !15209

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !15211
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15213, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !15215
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !15215
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !15211
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15216
  br i1 %6, label %8, label %7, !dbg !15217

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15218
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15218
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15218
  unreachable, !dbg !15218

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !15215
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !15211
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15219
  call void @llvm.dbg.value(metadata i32 undef, metadata !15200, metadata !DIExpression()), !dbg !15220
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15221
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13686, metadata !DIExpression()) #23, !dbg !15224
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15226
  %11 = load i8, i8* %10, align 1, !dbg !15227
  %12 = and i8 %11, 127, !dbg !15227
  store i8 %12, i8* %10, align 1, !dbg !15227
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13694, metadata !DIExpression()) #23, !dbg !15228
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %9) #26, !dbg !15230
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15231
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13703, metadata !DIExpression()) #23, !dbg !15232
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15234
  %15 = load i8, i8* %14, align 1, !dbg !15235
  %16 = or i8 %15, -128, !dbg !15235
  store i8 %16, i8* %14, align 1, !dbg !15235
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13710, metadata !DIExpression()) #23, !dbg !15236
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %13) #26, !dbg !15238
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15239
  call void @llvm.dbg.value(metadata i32 undef, metadata !14100, metadata !DIExpression()) #23, !dbg !15240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14105, metadata !DIExpression()) #23, !dbg !15240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14109, metadata !DIExpression()) #23, !dbg !15242
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15244
  br i1 %17, label %19, label %18, !dbg !15245

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !15246
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15246
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !15246
  unreachable, !dbg !15246

19:                                               ; preds = %8
  %20 = extractvalue { i32, i32 } %5, 0, !dbg !15213
  call void @llvm.dbg.value(metadata i32 %20, metadata !13506, metadata !DIExpression()) #23, !dbg !15215
  call void @llvm.dbg.value(metadata i32 %20, metadata !13500, metadata !DIExpression()) #23, !dbg !15211
  call void @llvm.dbg.value(metadata i32 %20, metadata !15200, metadata !DIExpression()), !dbg !15220
  call void @llvm.dbg.value(metadata i32 undef, metadata !14100, metadata !DIExpression()) #23, !dbg !15240
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !15247
  ret void, !dbg !15248
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15249 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15253, metadata !DIExpression()), !dbg !15256
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15257, !srcloc !14156
  call void @llvm.dbg.value(metadata i32 %3, metadata !14152, metadata !DIExpression()) #23, !dbg !15262
  %4 = icmp eq i32 %3, 0, !dbg !15263
  br i1 %4, label %6, label %5, !dbg !15264

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1463) #26, !dbg !15265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.237, i32 0, i32 0)) #26, !dbg !15265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1463) #26, !dbg !15265
  unreachable, !dbg !15265

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15267
  br i1 %7, label %8, label %10, !dbg !15269

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15270
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !15272
  br label %15, !dbg !15273

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15254, metadata !DIExpression()), !dbg !15256
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15274
  %12 = sext i32 %11 to i64, !dbg !15274
  call void @llvm.dbg.value(metadata i64 %12, metadata !15254, metadata !DIExpression()), !dbg !15256
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64.280(i64 noundef %12) #24, !dbg !15275
  %14 = trunc i64 %13 to i32, !dbg !15275
  call void @llvm.dbg.value(metadata i32 %14, metadata !15255, metadata !DIExpression()), !dbg !15256
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15256
  ret i32 %16, !dbg !15276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15277 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15281, metadata !DIExpression()), !dbg !15282
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15283, !srcloc !15285
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15286
  ret void, !dbg !15287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15288 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15292, metadata !DIExpression()), !dbg !15296
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15297, !srcloc !14156
  call void @llvm.dbg.value(metadata i32 %2, metadata !14152, metadata !DIExpression()) #23, !dbg !15302
  %3 = icmp eq i32 %2, 0, !dbg !15303
  br i1 %3, label %5, label %4, !dbg !15304

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1420) #26, !dbg !15305
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.237, i32 0, i32 0)) #26, !dbg !15305
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1420) #26, !dbg !15305
  unreachable, !dbg !15305

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15307
  br i1 %6, label %7, label %8, !dbg !15309

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !15310
  br label %43, !dbg !15312

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15294, metadata !DIExpression()), !dbg !15296
  %9 = icmp sgt i64 %0, -3, !dbg !15313
  br i1 %9, label %10, label %14, !dbg !15315

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15316
  %12 = trunc i64 %0 to i32, !dbg !15318
  %13 = add i32 %11, %12, !dbg !15318
  call void @llvm.dbg.value(metadata i32 %13, metadata !15293, metadata !DIExpression()), !dbg !15296
  br label %17, !dbg !15319

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15320
  %16 = sub i32 -2, %15, !dbg !15320
  call void @llvm.dbg.value(metadata i32 %16, metadata !15293, metadata !DIExpression()), !dbg !15296
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15322
  call void @llvm.dbg.value(metadata i32 %18, metadata !15293, metadata !DIExpression()), !dbg !15296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !15323
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15325, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !15323
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15328
  br i1 %20, label %22, label %21, !dbg !15329

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15330
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15330
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15330
  unreachable, !dbg !15330

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !15323
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15331
  call void @llvm.dbg.value(metadata i32 undef, metadata !15295, metadata !DIExpression()), !dbg !15296
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15332
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15333
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !15334
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15335
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15336
  tail call fastcc void @z_add_thread_timeout.249(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !15336
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15337
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !15338
  call void @llvm.dbg.value(metadata i32 undef, metadata !14100, metadata !DIExpression()) #23, !dbg !15339
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14105, metadata !DIExpression()) #23, !dbg !15339
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14109, metadata !DIExpression()) #23, !dbg !15341
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15343
  br i1 %27, label %29, label %28, !dbg !15344

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !15345
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15345
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !15345
  unreachable, !dbg !15345

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15325
  call void @llvm.dbg.value(metadata i32 %30, metadata !13506, metadata !DIExpression()) #23, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %30, metadata !13500, metadata !DIExpression()) #23, !dbg !15323
  call void @llvm.dbg.value(metadata i32 %30, metadata !15295, metadata !DIExpression()), !dbg !15296
  call void @llvm.dbg.value(metadata i32 undef, metadata !14100, metadata !DIExpression()) #23, !dbg !15339
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #26, !dbg !15346
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15347
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !15347
  br i1 %33, label %34, label %35, !dbg !15350

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1448) #26, !dbg !15351
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.237, i32 0, i32 0)) #26, !dbg !15351
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1448) #26, !dbg !15351
  unreachable, !dbg !15351

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15353
  %37 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15354
  %38 = zext i32 %37 to i64, !dbg !15354
  %39 = sub nsw i64 %36, %38, !dbg !15355
  call void @llvm.dbg.value(metadata i64 %39, metadata !15292, metadata !DIExpression()), !dbg !15296
  %40 = icmp sgt i64 %39, 0, !dbg !15356
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15356
  %42 = trunc i64 %41 to i32, !dbg !15356
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15296
  ret i32 %44, !dbg !15357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.280(i64 noundef %0) unnamed_addr #4 !dbg !15358 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15360, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata i64 %0, metadata !13554, metadata !DIExpression()), !dbg !15362
  call void @llvm.dbg.value(metadata i32 10000, metadata !13557, metadata !DIExpression()), !dbg !15362
  call void @llvm.dbg.value(metadata i32 1000, metadata !13558, metadata !DIExpression()), !dbg !15362
  call void @llvm.dbg.value(metadata i8 1, metadata !13559, metadata !DIExpression()), !dbg !15362
  call void @llvm.dbg.value(metadata i1 false, metadata !13560, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15362
  call void @llvm.dbg.value(metadata i1 false, metadata !13561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15362
  call void @llvm.dbg.value(metadata i8 0, metadata !13562, metadata !DIExpression()), !dbg !15362
  call void @llvm.dbg.value(metadata i1 false, metadata !13563, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15362
  call void @llvm.dbg.value(metadata i1 true, metadata !13564, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15362
  call void @llvm.dbg.value(metadata i64 0, metadata !13565, metadata !DIExpression()), !dbg !15362
  call void @llvm.dbg.value(metadata i64 0, metadata !13565, metadata !DIExpression()), !dbg !15362
  call void @llvm.dbg.value(metadata i64 %0, metadata !13554, metadata !DIExpression()), !dbg !15362
  %2 = udiv i64 %0, 10, !dbg !15364
  ret i64 %2, !dbg !15368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15369 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15370, !srcloc !15372
  tail call void @z_impl_k_yield() #24, !dbg !15373
  ret void, !dbg !15374
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15379, metadata !DIExpression()), !dbg !15381
  %2 = sext i32 %0 to i64, !dbg !15382
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !15383
  call void @llvm.dbg.value(metadata i64 %3, metadata !15380, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15381
  %4 = shl i64 %3, 32, !dbg !15384
  %5 = ashr exact i64 %4, 32, !dbg !15384
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !15385
  call void @llvm.dbg.value(metadata i32 %6, metadata !15380, metadata !DIExpression()), !dbg !15381
  %7 = sext i32 %6 to i64, !dbg !15386
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !15387
  %9 = trunc i64 %8 to i32, !dbg !15387
  ret i32 %9, !dbg !15388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !15389 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15391, metadata !DIExpression()), !dbg !15392
  call void @llvm.dbg.value(metadata i64 %0, metadata !13554, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13557, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 10000, metadata !13558, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i8 1, metadata !13559, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i1 false, metadata !13560, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15393
  call void @llvm.dbg.value(metadata i1 true, metadata !13561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15393
  call void @llvm.dbg.value(metadata i8 0, metadata !13562, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i1 false, metadata !13563, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15393
  call void @llvm.dbg.value(metadata i1 true, metadata !13564, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15393
  call void @llvm.dbg.value(metadata i64 0, metadata !13565, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i64 0, metadata !13565, metadata !DIExpression()), !dbg !15393
  %2 = add i64 %0, 99, !dbg !15395
  call void @llvm.dbg.value(metadata i64 %2, metadata !13554, metadata !DIExpression()), !dbg !15393
  %3 = udiv i64 %2, 100, !dbg !15396
  ret i64 %3, !dbg !15397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15398 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15400, metadata !DIExpression()), !dbg !15401
  call void @llvm.dbg.value(metadata i64 %0, metadata !13554, metadata !DIExpression()), !dbg !15402
  call void @llvm.dbg.value(metadata i32 10000, metadata !13557, metadata !DIExpression()), !dbg !15402
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13558, metadata !DIExpression()), !dbg !15402
  call void @llvm.dbg.value(metadata i8 1, metadata !13559, metadata !DIExpression()), !dbg !15402
  call void @llvm.dbg.value(metadata i1 false, metadata !13560, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15402
  call void @llvm.dbg.value(metadata i1 false, metadata !13561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15402
  call void @llvm.dbg.value(metadata i8 0, metadata !13562, metadata !DIExpression()), !dbg !15402
  call void @llvm.dbg.value(metadata i1 true, metadata !13563, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15402
  call void @llvm.dbg.value(metadata i1 false, metadata !13564, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15402
  call void @llvm.dbg.value(metadata i64 0, metadata !13565, metadata !DIExpression()), !dbg !15402
  call void @llvm.dbg.value(metadata i64 0, metadata !13565, metadata !DIExpression()), !dbg !15402
  %2 = mul i64 %0, 100, !dbg !15404
  ret i64 %2, !dbg !15406
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15407 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15409, metadata !DIExpression()), !dbg !15410
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !15411
  br i1 %2, label %14, label %3, !dbg !15413

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15414
  %5 = icmp slt i32 %4, 0, !dbg !15416
  br i1 %5, label %6, label %10, !dbg !15417

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15418
  %8 = load i8, i8* %7, align 1, !dbg !15418
  %9 = icmp eq i8 %8, 16, !dbg !15421
  br i1 %9, label %10, label %14, !dbg !15422

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15423
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15424
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15425, !srcloc !14156
  call void @llvm.dbg.value(metadata i32 %11, metadata !14152, metadata !DIExpression()) #23, !dbg !15429
  %12 = icmp eq i32 %11, 0, !dbg !15430
  br i1 %12, label %13, label %14, !dbg !15431

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15432
  br label %14, !dbg !15434

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15436 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15438, metadata !DIExpression()), !dbg !15439
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15440
  %3 = load i8, i8* %2, align 1, !dbg !15440
  %4 = and i8 %3, 2, !dbg !15441
  %5 = icmp ne i8 %4, 0, !dbg !15442
  ret i1 %5, !dbg !15443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !15444 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15449
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15448, metadata !DIExpression()), !dbg !15450
  ret %struct.k_thread* %1, !dbg !15451
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15452 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15453, !srcloc !14156
  call void @llvm.dbg.value(metadata i32 %1, metadata !14152, metadata !DIExpression()) #23, !dbg !15456
  %2 = icmp eq i32 %1, 0, !dbg !15457
  br i1 %2, label %3, label %8, !dbg !15458

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15459
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !15460
  %6 = icmp ne i32 %5, 0, !dbg !15458
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15462 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15464, metadata !DIExpression()), !dbg !15466
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !15467
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15469, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !15471
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !15471
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !15467
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15472
  br i1 %3, label %5, label %4, !dbg !15473

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15474
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15474
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15474
  unreachable, !dbg !15474

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15469
  call void @llvm.dbg.value(metadata i32 %6, metadata !13506, metadata !DIExpression()) #23, !dbg !15471
  call void @llvm.dbg.value(metadata i32 %6, metadata !13500, metadata !DIExpression()) #23, !dbg !15467
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15475
  call void @llvm.dbg.value(metadata i32 %6, metadata !15465, metadata !DIExpression()), !dbg !15466
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15476
  %8 = load i8, i8* %7, align 4, !dbg !15476
  %9 = and i8 %8, 1, !dbg !15478
  %10 = icmp eq i8 %9, 0, !dbg !15479
  br i1 %10, label %15, label %11, !dbg !15480

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !15481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !15481
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15484
  br i1 %12, label %14, label %13, !dbg !15485

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15486
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15486
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15486
  unreachable, !dbg !15486

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !13528, metadata !DIExpression()) #23, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %6, metadata !13542, metadata !DIExpression()) #23, !dbg !15487
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15489, !srcloc !13548
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1731) #26, !dbg !15490
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.287, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #26, !dbg !15490
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1731) #26, !dbg !15490
  unreachable, !dbg !15490

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15494
  %17 = load i8, i8* %16, align 1, !dbg !15494
  %18 = and i8 %17, 8, !dbg !15496
  %19 = icmp eq i8 %18, 0, !dbg !15497
  br i1 %19, label %24, label %20, !dbg !15498

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !15499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !15499
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15502
  br i1 %21, label %23, label %22, !dbg !15503

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15504
  unreachable, !dbg !15504

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !13528, metadata !DIExpression()) #23, !dbg !15499
  call void @llvm.dbg.value(metadata i32 %6, metadata !13542, metadata !DIExpression()) #23, !dbg !15505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15507, !srcloc !13548
  br label %39, !dbg !15508

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !15509
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15510
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !15512
  br i1 %26, label %27, label %35, !dbg !15513

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15514, !srcloc !14156
  call void @llvm.dbg.value(metadata i32 %28, metadata !14152, metadata !DIExpression()) #23, !dbg !15517
  %29 = icmp eq i32 %28, 0, !dbg !15518
  br i1 %29, label %30, label %35, !dbg !15519

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14100, metadata !DIExpression()) #23, !dbg !15520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14105, metadata !DIExpression()) #23, !dbg !15520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14109, metadata !DIExpression()) #23, !dbg !15523
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15525
  br i1 %31, label %33, label %32, !dbg !15526

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !15527
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15527
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !15527
  unreachable, !dbg !15527

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14100, metadata !DIExpression()) #23, !dbg !15520
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #26, !dbg !15528
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1778) #26, !dbg !15529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.288, i32 0, i32 0)) #26, !dbg !15529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1778) #26, !dbg !15529
  unreachable, !dbg !15529

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !15533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !15533
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15535
  br i1 %36, label %38, label %37, !dbg !15536

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15537
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15537
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15537
  unreachable, !dbg !15537

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !13528, metadata !DIExpression()) #23, !dbg !15533
  call void @llvm.dbg.value(metadata i32 %6, metadata !13542, metadata !DIExpression()) #23, !dbg !15538
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15540, !srcloc !13548
  br label %39, !dbg !15541

39:                                               ; preds = %38, %23
  ret void, !dbg !15541
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15542 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15544, metadata !DIExpression()), !dbg !15545
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15546
  %3 = load i8, i8* %2, align 1, !dbg !15546
  %4 = and i8 %3, 8, !dbg !15548
  %5 = icmp eq i8 %4, 0, !dbg !15549
  br i1 %5, label %6, label %20, !dbg !15550

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15551
  %8 = or i8 %7, 8, !dbg !15551
  store i8 %8, i8* %2, align 1, !dbg !15551
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !15553
  br i1 %9, label %10, label %12, !dbg !15555

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13686, metadata !DIExpression()) #23, !dbg !15556
  %11 = and i8 %8, 95, !dbg !15559
  store i8 %11, i8* %2, align 1, !dbg !15559
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13694, metadata !DIExpression()) #23, !dbg !15560
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef nonnull %0) #26, !dbg !15562
  br label %12, !dbg !15563

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15564
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !15564
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !15566
  br i1 %15, label %17, label %16, !dbg !15567

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !15568
  br label %17, !dbg !15570

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !15571
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15572
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !15573
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15574
  tail call void @z_thread_monitor_exit(%struct.k_thread* noundef nonnull %0) #26, !dbg !15575
  br label %20, !dbg !15576

20:                                               ; preds = %17, %1
  ret void, !dbg !15577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !15578 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15582, metadata !DIExpression()), !dbg !15584
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.271(%struct._wait_q_t* noundef %0) #24, !dbg !15585
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15583, metadata !DIExpression()), !dbg !15584
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15586
  br i1 %3, label %10, label %4, !dbg !15587

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !15588
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !15590
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15591, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 0, metadata !15596, metadata !DIExpression()), !dbg !15597
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 10, i32 1, !dbg !15599
  store i32 0, i32* %7, align 4, !dbg !15600
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15601
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.271(%struct._wait_q_t* noundef %0) #24, !dbg !15585
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15583, metadata !DIExpression()), !dbg !15584
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15586
  br i1 %9, label %10, label %4, !dbg !15587, !llvm.loop !15602

10:                                               ; preds = %4, %1
  ret void, !dbg !15604
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15605 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15610, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15609, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !15614
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15616, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !15618
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !15618
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !15614
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15619
  br i1 %4, label %6, label %5, !dbg !15620

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15621
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15621
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15621
  unreachable, !dbg !15621

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15616
  call void @llvm.dbg.value(metadata i32 %7, metadata !13506, metadata !DIExpression()) #23, !dbg !15618
  call void @llvm.dbg.value(metadata i32 %7, metadata !13500, metadata !DIExpression()) #23, !dbg !15614
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15622
  call void @llvm.dbg.value(metadata i32 %7, metadata !15611, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 0, metadata !15612, metadata !DIExpression()), !dbg !15613
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15623
  %9 = load i8, i8* %8, align 1, !dbg !15623
  %10 = and i8 %9, 8, !dbg !15625
  %11 = icmp eq i8 %10, 0, !dbg !15626
  br i1 %11, label %12, label %35, !dbg !15627

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !15610, metadata !DIExpression()), !dbg !15613
  %14 = icmp eq i64 %13, 0, !dbg !15628
  br i1 %14, label %35, label %15, !dbg !15630

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15631
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15633
  br i1 %17, label %35, label %18, !dbg !15634

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15635
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !15635
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !15636
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !15637
  br i1 %22, label %35, label %23, !dbg !15638

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15639, !srcloc !14156
  call void @llvm.dbg.value(metadata i32 %24, metadata !14152, metadata !DIExpression()) #23, !dbg !15645
  %25 = icmp eq i32 %24, 0, !dbg !15646
  br i1 %25, label %27, label %26, !dbg !15647

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1809) #26, !dbg !15648
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.289, i32 0, i32 0)) #26, !dbg !15648
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1809) #26, !dbg !15648
  unreachable, !dbg !15648

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15650
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15651
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !15652
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15653
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !15654
  call void @llvm.dbg.value(metadata i32 undef, metadata !14100, metadata !DIExpression()) #23, !dbg !15655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14105, metadata !DIExpression()) #23, !dbg !15655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14109, metadata !DIExpression()) #23, !dbg !15657
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15659
  br i1 %31, label %33, label %32, !dbg !15660

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !15661
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15661
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 225) #26, !dbg !15661
  unreachable, !dbg !15661

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14100, metadata !DIExpression()) #23, !dbg !15655
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #26, !dbg !15662
  call void @llvm.dbg.value(metadata i32 %34, metadata !15612, metadata !DIExpression()), !dbg !15613
  br label %40, !dbg !15663

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !15664
  call void @llvm.dbg.value(metadata i32 %36, metadata !15612, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !15665
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !15665
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15667
  br i1 %37, label %39, label %38, !dbg !15668

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15669
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15669
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15669
  unreachable, !dbg !15669

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !13528, metadata !DIExpression()) #23, !dbg !15665
  call void @llvm.dbg.value(metadata i32 %7, metadata !13542, metadata !DIExpression()) #23, !dbg !15670
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15672, !srcloc !13548
  br label %40, !dbg !15673

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !15613
  ret i32 %41, !dbg !15674
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15675 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15679, metadata !DIExpression()), !dbg !15687
  call void @llvm.dbg.value(metadata i32 %1, metadata !15680, metadata !DIExpression()), !dbg !15687
  call void @llvm.dbg.value(metadata i8* %2, metadata !15681, metadata !DIExpression()), !dbg !15687
  call void @llvm.dbg.value(metadata i8 0, metadata !15683, metadata !DIExpression()), !dbg !15687
  call void @llvm.dbg.value(metadata i32 0, metadata !15684, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13494, metadata !DIExpression()) #23, !dbg !15689
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15691, !srcloc !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !13507, metadata !DIExpression()) #23, !dbg !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !15689
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15694
  br i1 %5, label %7, label %6, !dbg !15695

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15696
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.232, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 148) #26, !dbg !15696
  unreachable, !dbg !15696

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13506, metadata !DIExpression()) #23, !dbg !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #23, !dbg !15689
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15697
  call void @llvm.dbg.value(metadata i32 undef, metadata !15686, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i8 poison, metadata !15683, metadata !DIExpression()), !dbg !15687
  call void @llvm.dbg.value(metadata i32 undef, metadata !15684, metadata !DIExpression()), !dbg !15688
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !15698
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15682, metadata !DIExpression()), !dbg !15687
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15701
  br i1 %10, label %15, label %11, !dbg !15703

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15704, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i32 %1, metadata !15710, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i8* %2, metadata !15711, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15591, metadata !DIExpression()), !dbg !15715
  call void @llvm.dbg.value(metadata i32 %1, metadata !15596, metadata !DIExpression()), !dbg !15715
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 10, i32 1, !dbg !15717
  store i32 %1, i32* %12, align 4, !dbg !15718
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15719
  store i8* %2, i8** %13, align 4, !dbg !15720
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !15721
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !15722
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !15723
  call void @llvm.dbg.value(metadata i8 1, metadata !15683, metadata !DIExpression()), !dbg !15687
  br label %15, !dbg !15724

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !15683, metadata !DIExpression()), !dbg !15687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !15725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13533, metadata !DIExpression()) #23, !dbg !15725
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15727
  br i1 %16, label %18, label %17, !dbg !15728

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15729
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15729
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.231, i32 0, i32 0), i32 noundef 194) #26, !dbg !15729
  unreachable, !dbg !15729

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !15687
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !15691
  call void @llvm.dbg.value(metadata i32 %20, metadata !13506, metadata !DIExpression()) #23, !dbg !15693
  call void @llvm.dbg.value(metadata i32 %20, metadata !13500, metadata !DIExpression()) #23, !dbg !15689
  call void @llvm.dbg.value(metadata i32 %20, metadata !15686, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i32 undef, metadata !13528, metadata !DIExpression()) #23, !dbg !15725
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()) #23, !dbg !15730
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !15732, !srcloc !13548
  call void @llvm.dbg.value(metadata i8 poison, metadata !15683, metadata !DIExpression()), !dbg !15687
  call void @llvm.dbg.value(metadata i32 undef, metadata !15684, metadata !DIExpression()), !dbg !15688
  ret i1 %19, !dbg !15733
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15734 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.value(metadata i64 undef, metadata !15742, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15739, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15741, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.value(metadata i8** %4, metadata !15743, metadata !DIExpression()), !dbg !15745
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15746
  call void @llvm.dbg.value(metadata i32 %6, metadata !15744, metadata !DIExpression()), !dbg !15745
  %7 = icmp eq i8** %4, null, !dbg !15747
  br i1 %7, label %12, label %8, !dbg !15749

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15750
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15752
  %11 = load i8*, i8** %10, align 4, !dbg !15752
  store i8* %11, i8** %4, align 4, !dbg !15753
  br label %12, !dbg !15754

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15755
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15756 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !15758
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !15759
  ret void, !dbg !15760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15761 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15771, metadata !DIExpression()), !dbg !15788
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15769, metadata !DIExpression()), !dbg !15788
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15770, metadata !DIExpression()), !dbg !15788
  %5 = icmp eq i64 %4, -1, !dbg !15789
  br i1 %5, label %63, label %6, !dbg !15791

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15792
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.294(%struct._dnode* noundef %7) #24, !dbg !15792
  br i1 %8, label %9, label %10, !dbg !15795

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.297, i32 0, i32 0), i32 noundef 99) #26, !dbg !15796
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.298, i32 0, i32 0)) #26, !dbg !15796
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.297, i32 0, i32 0), i32 noundef 99) #26, !dbg !15796
  unreachable, !dbg !15796

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15798
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !15799
  call void @llvm.dbg.value(metadata i32 0, metadata !15772, metadata !DIExpression()), !dbg !15800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15801, metadata !DIExpression()) #23, !dbg !15808
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15810, !srcloc !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()) #23, !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !15808
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !15818
  br i1 %13, label %15, label %14, !dbg !15821

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !15822
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !15822
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !15822
  unreachable, !dbg !15822

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15810
  call void @llvm.dbg.value(metadata i32 %16, metadata !15813, metadata !DIExpression()) #23, !dbg !15817
  call void @llvm.dbg.value(metadata i32 %16, metadata !15807, metadata !DIExpression()) #23, !dbg !15808
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !15824
  call void @llvm.dbg.value(metadata i32 %16, metadata !15778, metadata !DIExpression()), !dbg !15800
  call void @llvm.dbg.value(metadata i32 undef, metadata !15772, metadata !DIExpression()), !dbg !15800
  %17 = icmp slt i64 %4, -1, !dbg !15825
  br i1 %17, label %18, label %24, !dbg !15826

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !15827
  %20 = add i64 %4, %19, !dbg !15828
  %21 = sub i64 -2, %20, !dbg !15828
  call void @llvm.dbg.value(metadata i64 %21, metadata !15782, metadata !DIExpression()), !dbg !15829
  %22 = icmp sgt i64 %21, 1, !dbg !15830
  %23 = select i1 %22, i64 %21, i64 1, !dbg !15830
  br label %29, !dbg !15831

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !15832
  %26 = tail call fastcc i32 @elapsed.302() #24, !dbg !15834
  %27 = sext i32 %26 to i64, !dbg !15834
  %28 = add nsw i64 %25, %27, !dbg !15835
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !15836
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15837
  store i64 %30, i64* %31, align 8, !dbg !15838
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !15839
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !15779, metadata !DIExpression()), !dbg !15841
  %33 = icmp eq %struct._timeout* %32, null, !dbg !15842
  br i1 %33, label %48, label %34, !dbg !15842

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !15843
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !15779, metadata !DIExpression()), !dbg !15841
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !15847
  %38 = load i64, i64* %37, align 8, !dbg !15847
  %39 = icmp slt i64 %35, %38, !dbg !15848
  br i1 %39, label %40, label %44, !dbg !15849

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !15847
  %42 = sub nsw i64 %38, %35, !dbg !15850
  store i64 %42, i64* %41, align 8, !dbg !15850
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !15852
  tail call fastcc void @sys_dlist_insert.303(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !15853
  br label %49, !dbg !15854

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !15855
  store i64 %45, i64* %31, align 8, !dbg !15855
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !15856
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !15779, metadata !DIExpression()), !dbg !15841
  %47 = icmp eq %struct._timeout* %46, null, !dbg !15842
  br i1 %47, label %48, label %34, !dbg !15842, !llvm.loop !15857

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.304(%struct._dnode* noundef nonnull %7) #24, !dbg !15859
  br label %49, !dbg !15862

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !15863
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !15864
  br i1 %51, label %52, label %59, !dbg !15865

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !15866
  call void @llvm.dbg.value(metadata i32 %53, metadata !15785, metadata !DIExpression()), !dbg !15867
  %54 = icmp ne i32 %53, 0, !dbg !15868
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !15870
  br i1 %57, label %59, label %58, !dbg !15870

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #26, !dbg !15871
  br label %59, !dbg !15873

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !15880
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15879, metadata !DIExpression()) #23, !dbg !15880
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !15882
  br i1 %60, label %62, label %61, !dbg !15885

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !15886
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !15886
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !15886
  unreachable, !dbg !15886

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !15874, metadata !DIExpression()) #23, !dbg !15880
  call void @llvm.dbg.value(metadata i32 %16, metadata !15888, metadata !DIExpression()) #23, !dbg !15891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !15893, !srcloc !15894
  call void @llvm.dbg.value(metadata i32 undef, metadata !15772, metadata !DIExpression()), !dbg !15800
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !15895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.294(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15896 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15902, metadata !DIExpression()), !dbg !15903
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15904
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15904
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15905
  ret i1 %4, !dbg !15906
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.302() unnamed_addr #1 !dbg !15907 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15910
  %2 = icmp eq i32 %1, 0, !dbg !15911
  br i1 %2, label %3, label %5, !dbg !15910

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !15912
  br label %5, !dbg !15910

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15910
  ret i32 %6, !dbg !15913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !15914 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.309() #24, !dbg !15920
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15918, metadata !DIExpression()), !dbg !15921
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15922
  ret %struct._timeout* %2, !dbg !15923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.303(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !15924 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15928, metadata !DIExpression()), !dbg !15932
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15929, metadata !DIExpression()), !dbg !15932
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15933
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15933
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15930, metadata !DIExpression()), !dbg !15932
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15934
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15935
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15936
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15937
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15938
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15939
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15940
  ret void, !dbg !15941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !15942 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15946, metadata !DIExpression()), !dbg !15948
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15949
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.307(%struct._dnode* noundef %2) #24, !dbg !15950
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15947, metadata !DIExpression()), !dbg !15948
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15951
  ret %struct._timeout* %4, !dbg !15952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.304(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15953 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15958, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15959, metadata !DIExpression()), !dbg !15961
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15962
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15960, metadata !DIExpression()), !dbg !15961
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15963
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15964
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15965
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15966
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15967
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15968
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15969
  ret void, !dbg !15970
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15971 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !15976
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15973, metadata !DIExpression()), !dbg !15977
  %2 = tail call fastcc i32 @elapsed.302() #24, !dbg !15978
  call void @llvm.dbg.value(metadata i32 %2, metadata !15974, metadata !DIExpression()), !dbg !15977
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15979
  br i1 %3, label %14, label %4, !dbg !15981

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15982
  %6 = load i64, i64* %5, align 8, !dbg !15982
  %7 = sext i32 %2 to i64, !dbg !15983
  %8 = sub nsw i64 %6, %7, !dbg !15984
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15985
  br i1 %9, label %14, label %10, !dbg !15986

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15987
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15987
  %13 = trunc i64 %12 to i32, !dbg !15987
  call void @llvm.dbg.value(metadata i32 %13, metadata !15975, metadata !DIExpression()), !dbg !15977
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15989
  call void @llvm.dbg.value(metadata i32 %15, metadata !15975, metadata !DIExpression()), !dbg !15977
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15990
  %17 = icmp ne i32 %16, 0, !dbg !15992
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15993
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15993
  call void @llvm.dbg.value(metadata i32 %20, metadata !15975, metadata !DIExpression()), !dbg !15977
  ret i32 %20, !dbg !15994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.307(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15995 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15999, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16000, metadata !DIExpression()), !dbg !16001
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16002
  br i1 %2, label %5, label %3, !dbg !16003

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.308(%struct._dnode* noundef nonnull %0) #24, !dbg !16004
  br label %5, !dbg !16003

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16003
  ret %struct._dnode* %6, !dbg !16005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.308(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16006 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16008, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16009, metadata !DIExpression()), !dbg !16010
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16011
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16012
  br i1 %3, label %7, label %4, !dbg !16013

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16014
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16014
  br label %7, !dbg !16013

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16013
  ret %struct._dnode* %8, !dbg !16015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.309() unnamed_addr #8 !dbg !16016 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16020, metadata !DIExpression()), !dbg !16021
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.310() #24, !dbg !16022
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16022
  ret %struct._dnode* %3, !dbg !16023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.310() unnamed_addr #8 !dbg !16024 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16028, metadata !DIExpression()), !dbg !16029
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16030
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16031
  ret i1 %2, !dbg !16032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16033 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16037, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 -22, metadata !16038, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 0, metadata !16039, metadata !DIExpression()), !dbg !16043
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15801, metadata !DIExpression()) #23, !dbg !16044
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16046, !srcloc !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16048
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()) #23, !dbg !16048
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16044
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16049
  br i1 %3, label %5, label %4, !dbg !16050

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16051
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16051
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16051
  unreachable, !dbg !16051

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16048
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16044
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16052
  call void @llvm.dbg.value(metadata i32 undef, metadata !16041, metadata !DIExpression()), !dbg !16043
  call void @llvm.dbg.value(metadata i32 -22, metadata !16038, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 undef, metadata !16039, metadata !DIExpression()), !dbg !16043
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16038, metadata !DIExpression()), !dbg !16042
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.294(%struct._dnode* noundef %6) #24, !dbg !16053
  br i1 %7, label %8, label %9, !dbg !16057

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16058
  call void @llvm.dbg.value(metadata i32 0, metadata !16038, metadata !DIExpression()), !dbg !16042
  br label %9, !dbg !16060

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16042
  call void @llvm.dbg.value(metadata i32 %10, metadata !16038, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15879, metadata !DIExpression()) #23, !dbg !16061
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16063
  br i1 %11, label %13, label %12, !dbg !16064

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16065
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16065
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16065
  unreachable, !dbg !16065

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16046
  call void @llvm.dbg.value(metadata i32 %14, metadata !15813, metadata !DIExpression()) #23, !dbg !16048
  call void @llvm.dbg.value(metadata i32 %14, metadata !15807, metadata !DIExpression()) #23, !dbg !16044
  call void @llvm.dbg.value(metadata i32 %14, metadata !16041, metadata !DIExpression()), !dbg !16043
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16061
  call void @llvm.dbg.value(metadata i32 undef, metadata !15888, metadata !DIExpression()) #23, !dbg !16066
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16068, !srcloc !15894
  call void @llvm.dbg.value(metadata i32 %10, metadata !16038, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 undef, metadata !16039, metadata !DIExpression()), !dbg !16043
  ret i32 %10, !dbg !16069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #10 !dbg !16070 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16072, metadata !DIExpression()), !dbg !16073
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16074
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16076
  br i1 %3, label %10, label %4, !dbg !16077

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16078
  %6 = load i64, i64* %5, align 8, !dbg !16078
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16080
  %8 = load i64, i64* %7, align 8, !dbg !16081
  %9 = add nsw i64 %8, %6, !dbg !16081
  store i64 %9, i64* %7, align 8, !dbg !16081
  br label %10, !dbg !16082

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16083
  tail call fastcc void @sys_dlist_remove.313(%struct._dnode* noundef %11) #24, !dbg !16084
  ret void, !dbg !16085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.313(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !16086 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16090, metadata !DIExpression()), !dbg !16093
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16094
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16094
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16091, metadata !DIExpression()), !dbg !16093
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16095
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16095
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16092, metadata !DIExpression()), !dbg !16093
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16096
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16097
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16098
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16099
  tail call fastcc void @sys_dnode_init.314(%struct._dnode* noundef %0) #24, !dbg !16100
  ret void, !dbg !16101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.314(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !16102 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16104, metadata !DIExpression()), !dbg !16105
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16106
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16107
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16108
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16109
  ret void, !dbg !16110
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16111 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16117, metadata !DIExpression()), !dbg !16122
  call void @llvm.dbg.value(metadata i64 0, metadata !16118, metadata !DIExpression()), !dbg !16122
  call void @llvm.dbg.value(metadata i32 0, metadata !16119, metadata !DIExpression()), !dbg !16123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15801, metadata !DIExpression()) #23, !dbg !16124
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16126, !srcloc !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16128
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()) #23, !dbg !16128
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16124
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16129
  br i1 %3, label %5, label %4, !dbg !16130

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16131
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16131
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16131
  unreachable, !dbg !16131

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16128
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16124
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16132
  call void @llvm.dbg.value(metadata i32 undef, metadata !16121, metadata !DIExpression()), !dbg !16123
  call void @llvm.dbg.value(metadata i64 0, metadata !16118, metadata !DIExpression()), !dbg !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()), !dbg !16123
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !16133
  call void @llvm.dbg.value(metadata i64 %6, metadata !16118, metadata !DIExpression()), !dbg !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15879, metadata !DIExpression()) #23, !dbg !16136
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16138
  br i1 %7, label %9, label %8, !dbg !16139

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16140
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16140
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16140
  unreachable, !dbg !16140

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16126
  call void @llvm.dbg.value(metadata i32 %10, metadata !15813, metadata !DIExpression()) #23, !dbg !16128
  call void @llvm.dbg.value(metadata i32 %10, metadata !15807, metadata !DIExpression()) #23, !dbg !16124
  call void @llvm.dbg.value(metadata i32 %10, metadata !16121, metadata !DIExpression()), !dbg !16123
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16136
  call void @llvm.dbg.value(metadata i32 undef, metadata !15888, metadata !DIExpression()) #23, !dbg !16141
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16143, !srcloc !15894
  call void @llvm.dbg.value(metadata i64 %6, metadata !16118, metadata !DIExpression()), !dbg !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()), !dbg !16123
  ret i64 %6, !dbg !16144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16145 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16147, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.value(metadata i64 0, metadata !16148, metadata !DIExpression()), !dbg !16151
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.315(%struct._timeout* noundef %0) #24, !dbg !16152
  br i1 %2, label %21, label %3, !dbg !16154

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !16155
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16149, metadata !DIExpression()), !dbg !16156
  call void @llvm.dbg.value(metadata i64 0, metadata !16148, metadata !DIExpression()), !dbg !16151
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16157
  br i1 %5, label %16, label %6, !dbg !16159

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16149, metadata !DIExpression()), !dbg !16156
  call void @llvm.dbg.value(metadata i64 %8, metadata !16148, metadata !DIExpression()), !dbg !16151
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16160
  %10 = load i64, i64* %9, align 8, !dbg !16160
  %11 = add nsw i64 %10, %8, !dbg !16162
  call void @llvm.dbg.value(metadata i64 %11, metadata !16148, metadata !DIExpression()), !dbg !16151
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16163
  br i1 %12, label %16, label %13, !dbg !16165

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !16166
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16149, metadata !DIExpression()), !dbg !16156
  call void @llvm.dbg.value(metadata i64 %11, metadata !16148, metadata !DIExpression()), !dbg !16151
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16157
  br i1 %15, label %16, label %6, !dbg !16159, !llvm.loop !16167

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16151
  call void @llvm.dbg.value(metadata i64 %17, metadata !16148, metadata !DIExpression()), !dbg !16151
  %18 = tail call fastcc i32 @elapsed.302() #24, !dbg !16169
  %19 = sext i32 %18 to i64, !dbg !16169
  %20 = sub nsw i64 %17, %19, !dbg !16170
  br label %21, !dbg !16171

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16151
  ret i64 %22, !dbg !16172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.315(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16173 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16177, metadata !DIExpression()), !dbg !16178
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16179
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.294(%struct._dnode* noundef %2) #24, !dbg !16180
  %4 = xor i1 %3, true, !dbg !16181
  ret i1 %4, !dbg !16182
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16183 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16185, metadata !DIExpression()), !dbg !16190
  call void @llvm.dbg.value(metadata i64 0, metadata !16186, metadata !DIExpression()), !dbg !16190
  call void @llvm.dbg.value(metadata i32 0, metadata !16187, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15801, metadata !DIExpression()) #23, !dbg !16192
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16194, !srcloc !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16196
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()) #23, !dbg !16196
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16192
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16197
  br i1 %3, label %5, label %4, !dbg !16198

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16199
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16199
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16199
  unreachable, !dbg !16199

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16196
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16192
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16189, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata i64 0, metadata !16186, metadata !DIExpression()), !dbg !16190
  call void @llvm.dbg.value(metadata i32 undef, metadata !16187, metadata !DIExpression()), !dbg !16191
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16201
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !16204
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16186, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16190
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16205
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15879, metadata !DIExpression()) #23, !dbg !16205
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16207
  br i1 %8, label %10, label %9, !dbg !16208

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16209
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16209
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16209
  unreachable, !dbg !16209

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16194
  call void @llvm.dbg.value(metadata i32 %11, metadata !15813, metadata !DIExpression()) #23, !dbg !16196
  call void @llvm.dbg.value(metadata i32 %11, metadata !15807, metadata !DIExpression()) #23, !dbg !16192
  call void @llvm.dbg.value(metadata i32 %11, metadata !16189, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16186, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16190
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16205
  call void @llvm.dbg.value(metadata i32 undef, metadata !15888, metadata !DIExpression()) #23, !dbg !16210
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !16212, !srcloc !15894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16187, metadata !DIExpression()), !dbg !16191
  %12 = add i64 %7, %6, !dbg !16213
  ret i64 %12, !dbg !16214
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16215 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16217, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata i32 0, metadata !16218, metadata !DIExpression()), !dbg !16222
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15801, metadata !DIExpression()) #23, !dbg !16223
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16225, !srcloc !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16227
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()) #23, !dbg !16227
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16223
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16228
  br i1 %2, label %4, label %3, !dbg !16229

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16230
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16230
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16230
  unreachable, !dbg !16230

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16227
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16223
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16231
  call void @llvm.dbg.value(metadata i32 undef, metadata !16220, metadata !DIExpression()), !dbg !16222
  call void @llvm.dbg.value(metadata i32 -1, metadata !16217, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata i32 undef, metadata !16218, metadata !DIExpression()), !dbg !16222
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !16232
  call void @llvm.dbg.value(metadata i32 %5, metadata !16217, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15879, metadata !DIExpression()) #23, !dbg !16235
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16237
  br i1 %6, label %8, label %7, !dbg !16238

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16239
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16239
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16239
  unreachable, !dbg !16239

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16225
  call void @llvm.dbg.value(metadata i32 %9, metadata !15813, metadata !DIExpression()) #23, !dbg !16227
  call void @llvm.dbg.value(metadata i32 %9, metadata !15807, metadata !DIExpression()) #23, !dbg !16223
  call void @llvm.dbg.value(metadata i32 %9, metadata !16220, metadata !DIExpression()), !dbg !16222
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16235
  call void @llvm.dbg.value(metadata i32 undef, metadata !15888, metadata !DIExpression()) #23, !dbg !16240
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16242, !srcloc !15894
  call void @llvm.dbg.value(metadata i32 %5, metadata !16217, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata i32 undef, metadata !16218, metadata !DIExpression()), !dbg !16222
  ret i32 %5, !dbg !16243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16246, metadata !DIExpression()), !dbg !16256
  call void @llvm.dbg.value(metadata i1 %1, metadata !16247, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16256
  call void @llvm.dbg.value(metadata i32 0, metadata !16248, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15801, metadata !DIExpression()) #23, !dbg !16258
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16260, !srcloc !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()) #23, !dbg !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16258
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16263
  br i1 %4, label %6, label %5, !dbg !16264

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16265
  unreachable, !dbg !16265

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16258
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16250, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !16248, metadata !DIExpression()), !dbg !16257
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !16267
  call void @llvm.dbg.value(metadata i32 %7, metadata !16251, metadata !DIExpression()), !dbg !16268
  call void @llvm.dbg.value(metadata i1 undef, metadata !16254, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16268
  %8 = icmp slt i32 %7, 2, !dbg !16269
  call void @llvm.dbg.value(metadata i1 %8, metadata !16255, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16268
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16270
  call void @llvm.dbg.value(metadata i1 %9, metadata !16254, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16268
  br i1 %10, label %14, label %11, !dbg !16270

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16272
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16272
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #26, !dbg !16274
  br label %14, !dbg !16275

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16276
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15879, metadata !DIExpression()) #23, !dbg !16276
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16278
  br i1 %15, label %17, label %16, !dbg !16279

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16280
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16280
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16280
  unreachable, !dbg !16280

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16260
  call void @llvm.dbg.value(metadata i32 %18, metadata !15813, metadata !DIExpression()) #23, !dbg !16262
  call void @llvm.dbg.value(metadata i32 %18, metadata !15807, metadata !DIExpression()) #23, !dbg !16258
  call void @llvm.dbg.value(metadata i32 %18, metadata !16250, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !15888, metadata !DIExpression()) #23, !dbg !16281
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !16283, !srcloc !15894
  call void @llvm.dbg.value(metadata i32 1, metadata !16248, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !16248, metadata !DIExpression()), !dbg !16257
  ret void, !dbg !16284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16289, metadata !DIExpression()), !dbg !16294
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !16295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15801, metadata !DIExpression()) #23, !dbg !16296
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16298, !srcloc !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16300
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()) #23, !dbg !16300
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16296
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16301
  br i1 %3, label %5, label %4, !dbg !16302

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16303
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16303
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16303
  unreachable, !dbg !16303

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16300
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16296
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16304
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16294
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16294
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16294
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !16305
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16306
  br i1 %7, label %37, label %8, !dbg !16307

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16294
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16308
  %14 = load i64, i64* %13, align 8, !dbg !16308
  %15 = sext i32 %11 to i64, !dbg !16309
  %16 = icmp sgt i64 %14, %15, !dbg !16310
  br i1 %16, label %35, label %17, !dbg !16311

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16291, metadata !DIExpression()), !dbg !16312
  %18 = trunc i64 %14 to i32, !dbg !16313
  call void @llvm.dbg.value(metadata i32 %18, metadata !16293, metadata !DIExpression()), !dbg !16312
  %19 = sext i32 %18 to i64, !dbg !16314
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16315
  %21 = add i64 %20, %19, !dbg !16315
  store i64 %21, i64* @curr_tick, align 8, !dbg !16315
  store i64 0, i64* %13, align 8, !dbg !16316
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !16317
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15879, metadata !DIExpression()) #23, !dbg !16318
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16320
  br i1 %22, label %24, label %23, !dbg !16321

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16322
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16322
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16322
  unreachable, !dbg !16322

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !15874, metadata !DIExpression()) #23, !dbg !16318
  call void @llvm.dbg.value(metadata i32 %12, metadata !15888, metadata !DIExpression()) #23, !dbg !16323
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !16325, !srcloc !15894
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16326
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16326
  tail call void %26(%struct._timeout* noundef nonnull %9) #26, !dbg !16327
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15801, metadata !DIExpression()) #23, !dbg !16328
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16330, !srcloc !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16332
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()) #23, !dbg !16332
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16328
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16333
  br i1 %28, label %30, label %29, !dbg !16334

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16335
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16335
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16335
  unreachable, !dbg !16335

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16332
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16328
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16294
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16337
  %32 = sub nsw i32 %31, %18, !dbg !16337
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16294
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16294
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !16305
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16306
  br i1 %34, label %37, label %8, !dbg !16307, !llvm.loop !16338

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16340
  store i64 %36, i64* %13, align 8, !dbg !16340
  br label %41, !dbg !16343

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16294
  %40 = sext i32 %39 to i64, !dbg !16344
  br label %41, !dbg !16344

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16344
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16345
  %45 = add i64 %44, %42, !dbg !16345
  store i64 %45, i64* @curr_tick, align 8, !dbg !16345
  store i32 0, i32* @announce_remaining, align 4, !dbg !16346
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !16347
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #26, !dbg !16348
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15879, metadata !DIExpression()) #23, !dbg !16349
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16351
  br i1 %47, label %49, label %48, !dbg !16352

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16353
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16353
  unreachable, !dbg !16353

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16294
  call void @llvm.dbg.value(metadata i32 %50, metadata !15874, metadata !DIExpression()) #23, !dbg !16349
  call void @llvm.dbg.value(metadata i32 %50, metadata !15888, metadata !DIExpression()) #23, !dbg !16354
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !16356, !srcloc !15894
  ret void, !dbg !16357
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16358 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16360, metadata !DIExpression()), !dbg !16364
  call void @llvm.dbg.value(metadata i32 0, metadata !16361, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15801, metadata !DIExpression()) #23, !dbg !16366
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16368, !srcloc !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16370
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()) #23, !dbg !16370
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16366
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16371
  br i1 %2, label %4, label %3, !dbg !16372

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16373
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16373
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #26, !dbg !16373
  unreachable, !dbg !16373

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16370
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16366
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !16363, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i64 0, metadata !16360, metadata !DIExpression()), !dbg !16364
  call void @llvm.dbg.value(metadata i32 undef, metadata !16361, metadata !DIExpression()), !dbg !16365
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16375
  %6 = tail call fastcc i32 @elapsed.302() #24, !dbg !16378
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16360, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16364
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16379
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15879, metadata !DIExpression()) #23, !dbg !16379
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16381
  br i1 %7, label %9, label %8, !dbg !16382

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16383
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #26, !dbg !16383
  unreachable, !dbg !16383

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16368
  call void @llvm.dbg.value(metadata i32 %10, metadata !15813, metadata !DIExpression()) #23, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %10, metadata !15807, metadata !DIExpression()) #23, !dbg !16366
  call void @llvm.dbg.value(metadata i32 %10, metadata !16363, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16360, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16364
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16360, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16364
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()) #23, !dbg !16379
  call void @llvm.dbg.value(metadata i32 undef, metadata !15888, metadata !DIExpression()) #23, !dbg !16384
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16386, !srcloc !15894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16361, metadata !DIExpression()), !dbg !16365
  %11 = sext i32 %6 to i64, !dbg !16378
  %12 = add i64 %5, %11, !dbg !16387
  ret i64 %12, !dbg !16388
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16389 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !16390
  %2 = trunc i64 %1 to i32, !dbg !16391
  ret i32 %2, !dbg !16392
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16393 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !16394
  ret i64 %1, !dbg !16395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16398, metadata !DIExpression()), !dbg !16405
  %2 = icmp eq i32 %0, 0, !dbg !16406
  br i1 %2, label %10, label %3, !dbg !16408

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !16409
  call void @llvm.dbg.value(metadata i32 %4, metadata !16399, metadata !DIExpression()), !dbg !16405
  %5 = mul i32 %0, 84, !dbg !16410
  call void @llvm.dbg.value(metadata i32 %5, metadata !16400, metadata !DIExpression()), !dbg !16405
  br label %6, !dbg !16411

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !16412
  call void @llvm.dbg.value(metadata i32 %7, metadata !16401, metadata !DIExpression()), !dbg !16413
  %8 = sub i32 %7, %4, !dbg !16414
  %9 = icmp ult i32 %8, %5, !dbg !16416
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16418 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !16419
  ret i32 %1, !dbg !16420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16421 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !16423
  ret i32 %1, !dbg !16424
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16425 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16429, metadata !DIExpression()), !dbg !16431
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16432

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !16433
  br label %14, !dbg !16437

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16430, metadata !DIExpression()), !dbg !16431
  %6 = icmp slt i64 %2, -1, !dbg !16438
  br i1 %6, label %7, label %9, !dbg !16441

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16442
  br label %14, !dbg !16443

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !16445
  %11 = icmp ugt i64 %2, 1, !dbg !16446
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16446
  %13 = add nsw i64 %10, %12, !dbg !16447
  br label %14, !dbg !16448

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16449
  ret i64 %15, !dbg !16450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16451 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.326, i32 0, i32 0)) #26, !dbg !16453
  ret void, !dbg !16454
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree nosync nounwind willreturn }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!765, !2, !2487, !27, !282, !2489, !2503, !2505, !2542, !2544, !292, !345, !374, !2546, !2557, !2603, !2605, !2633, !2661, !2704, !2776, !2821, !387, !531, !2849, !567, !592, !797, !2854, !935, !1001, !1305, !1522, !2893, !1635, !1725, !2895, !2981, !3046, !1777, !3049, !1784, !2066, !3067, !2204, !2323, !3069, !2448, !3072}
!llvm.ident = !{!3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074, !3074}
!llvm.module.flags = !{!3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "forks", scope: !27, file: !116, line: 149, type: !278, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/philosophers/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !108, !109, !110, !111}
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !103)
!103 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!114, !25, !266, !269}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "fork_objs", scope: !27, file: !116, line: 146, type: !117, isLocal: false, isDefinition: true)
!116 = !DIFile(filename: "zephyr/samples/philosophers/src/phil_obj_abstract.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 960, elements: !264)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !119, line: 2720, size: 160, elements: !120)
!119 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = !{!121, !142, !262, !263}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !118, file: !119, line: 2722, baseType: !122, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !124)
!123 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !125)
!125 = !{!126}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !124, file: !123, line: 232, baseType: !127, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !130)
!130 = !{!131, !137}
!131 = !DIDerivedType(tag: DW_TAG_member, scope: !129, file: !128, line: 38, baseType: !132, size: 32)
!132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !129, file: !128, line: 38, size: 32, elements: !133)
!133 = !{!134, !136}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !132, file: !128, line: 39, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !132, file: !128, line: 40, baseType: !135, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, scope: !129, file: !128, line: 42, baseType: !138, size: 32, offset: 32)
!138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !129, file: !128, line: 42, size: 32, elements: !139)
!139 = !{!140, !141}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !138, file: !128, line: 43, baseType: !135, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !138, file: !128, line: 44, baseType: !135, size: 32)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !118, file: !119, line: 2724, baseType: !143, size: 32, offset: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147, !196, !209, !210, !211, !223, !224, !229, !230, !238, !257}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !144, file: !145, line: 247, baseType: !148, size: 384)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !149)
!149 = !{!150, !164, !166, !169, !170, !183, !184, !185}
!150 = !DIDerivedType(tag: DW_TAG_member, scope: !148, file: !145, line: 60, baseType: !151, size: 64)
!151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !148, file: !145, line: 60, size: 64, elements: !152)
!152 = !{!153, !155}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !151, file: !145, line: 61, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !129)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !151, file: !145, line: 62, baseType: !156, size: 64)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !158)
!157 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !156, file: !157, line: 50, baseType: !160, size: 64)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !162)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!162 = !{!163}
!163 = !DISubrange(count: 2)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !148, file: !145, line: 68, baseType: !165, size: 32, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !148, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !168)
!168 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !148, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!170 = !DIDerivedType(tag: DW_TAG_member, scope: !148, file: !145, line: 90, baseType: !171, size: 16, offset: 112)
!171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !148, file: !145, line: 90, size: 16, elements: !172)
!172 = !{!173, !180}
!173 = !DIDerivedType(tag: DW_TAG_member, scope: !171, file: !145, line: 91, baseType: !174, size: 16)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !171, file: !145, line: 91, size: 16, elements: !175)
!175 = !{!176, !179}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !174, file: !145, line: 96, baseType: !177, size: 8)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !178)
!178 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !174, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !171, file: !145, line: 100, baseType: !181, size: 16)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !182)
!182 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !148, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !148, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !148, file: !145, line: 131, baseType: !186, size: 192, offset: 192)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !187)
!187 = !{!188, !189, !195}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !186, file: !123, line: 245, baseType: !154, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !186, file: !123, line: 246, baseType: !190, size: 32, offset: 64)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !191)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!192 = !DISubroutineType(types: !193)
!193 = !{null, !194}
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !186, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !144, file: !145, line: 250, baseType: !197, size: 288, offset: 384)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !199)
!198 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!199 = !{!200, !201, !202, !203, !204, !205, !206, !207, !208}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !197, file: !198, line: 26, baseType: !110, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !197, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !197, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !197, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !197, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !197, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !197, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !197, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !197, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !144, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !144, file: !145, line: 256, baseType: !122, size: 64, offset: 704)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !144, file: !145, line: 271, baseType: !212, size: 128, offset: 768)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !213)
!213 = !{!214, !220, !221, !222}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !212, file: !145, line: 35, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !216, line: 46, baseType: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!218 = !DISubroutineType(types: !219)
!219 = !{null, !108, !108, !108}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !212, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !212, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !212, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !144, file: !145, line: 274, baseType: !143, size: 32, offset: 896)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !144, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 256, elements: !227)
!226 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!227 = !{!228}
!228 = !DISubrange(count: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !144, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !144, file: !145, line: 300, baseType: !231, size: 96, offset: 1216)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !232)
!232 = !{!233, !234, !237}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !231, file: !145, line: 153, baseType: !22, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !231, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !236, line: 214, baseType: !32)
!236 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !231, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !144, file: !145, line: 325, baseType: !239, size: 32, offset: 1312)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !241)
!241 = !{!242, !251, !252}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !240, file: !119, line: 5074, baseType: !243, size: 96)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !245)
!244 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!245 = !{!246, !249, !250}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !243, file: !244, line: 57, baseType: !247, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !244, line: 57, flags: DIFlagFwdDecl)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !243, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !243, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !240, file: !119, line: 5075, baseType: !122, size: 64, offset: 96)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !240, file: !119, line: 5076, baseType: !253, size: 32, offset: 160)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !255)
!254 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!255 = !{!256}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !253, file: !254, line: 52, baseType: !22, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !144, file: !145, line: 343, baseType: !258, size: 64, offset: 1344)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !259)
!259 = !{!260, !261}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !258, file: !198, line: 63, baseType: !110, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !258, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !118, file: !119, line: 2727, baseType: !110, size: 32, offset: 96)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !118, file: !119, line: 2730, baseType: !109, size: 32, offset: 128)
!264 = !{!265}
!265 = !DISubrange(count: 6)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !116, line: 160, type: !268, isLocal: true, isDefinition: true)
!268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8448, elements: !264)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "stacks", scope: !27, file: !116, line: 159, type: !271, isLocal: true, isDefinition: true, align: 512)
!271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 101376, elements: !276)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !274)
!273 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !{!275}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !272, file: !273, line: 48, baseType: !226, size: 8)
!276 = !{!265, !277}
!277 = !DISubrange(count: 2112)
!278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 192, elements: !264)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!280 = !DIGlobalVariableExpression(var: !281, expr: !DIExpression())
!281 = distinct !DIGlobalVariable(name: "_char_out", scope: !282, file: !286, line: 54, type: !287, isLocal: false, isDefinition: true)
!282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !283, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !285, splitDebugInlining: false, nameTableKind: None)
!283 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!284 = !{!108, !109}
!285 = !{!280}
!286 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{!109, !109}
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !292, file: !309, line: 56, type: !310, isLocal: true, isDefinition: true, align: 32)
!292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !294, globals: !308, splitDebugInlining: false, nameTableKind: None)
!293 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!294 = !{!295}
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !297, line: 259, baseType: !298)
!297 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 250, size: 224, elements: !299)
!299 = !{!300, !302, !303, !304, !305, !306, !307}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !298, file: !297, line: 252, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !298, file: !297, line: 253, baseType: !301, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !298, file: !297, line: 254, baseType: !301, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !298, file: !297, line: 255, baseType: !301, size: 32, offset: 96)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !298, file: !297, line: 256, baseType: !301, size: 32, offset: 128)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !298, file: !297, line: 257, baseType: !301, size: 32, offset: 160)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !298, file: !297, line: 258, baseType: !301, size: 32, offset: 192)
!308 = !{!290}
!309 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !311)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !313)
!312 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = !{!314, !342}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !311, file: !312, line: 60, baseType: !315, size: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{!109, !318}
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 32)
!319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !320)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !{!323, !326, !327, !328, !335, !336}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !320, file: !321, line: 380, baseType: !324, size: 32)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 32)
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !226)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !320, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !320, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !320, file: !321, line: 386, baseType: !329, size: 32, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 32)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !331)
!331 = !{!332, !333}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !330, file: !321, line: 359, baseType: !167, size: 8)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !330, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!334 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !320, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !320, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !321, line: 43, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !341)
!341 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !311, file: !312, line: 65, baseType: !318, size: 32, offset: 32)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !345, file: !348, line: 71, type: !349, isLocal: true, isDefinition: true, align: 32)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !347, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!347 = !{!343}
!348 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !351)
!351 = !{!352, !371}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !350, file: !312, line: 60, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = !DISubroutineType(types: !355)
!355 = !{!109, !356}
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 32)
!357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !359)
!359 = !{!360, !361, !362, !363, !369, !370}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !358, file: !321, line: 380, baseType: !324, size: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !358, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !358, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !358, file: !321, line: 386, baseType: !364, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !366)
!366 = !{!367, !368}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !365, file: !321, line: 359, baseType: !167, size: 8)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !365, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !358, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !358, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !350, file: !312, line: 65, baseType: !356, size: 32, offset: 32)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "_kernel_thread_info_offsets", scope: !374, file: !379, line: 41, type: !382, isLocal: false, isDefinition: true)
!374 = distinct !DICompileUnit(language: DW_LANG_C99, file: !375, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !376, splitDebugInlining: false, nameTableKind: None)
!375 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/debug/thread_info.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!376 = !{!372, !377, !380}
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "_kernel_thread_info_num_offsets", scope: !374, file: !379, line: 140, type: !235, isLocal: false, isDefinition: true)
!379 = !DIFile(filename: "zephyr/subsys/debug/thread_info.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !DIGlobalVariableExpression(var: !381, expr: !DIExpression())
!381 = distinct !DIGlobalVariable(name: "_kernel_thread_info_size_t_size", scope: !374, file: !379, line: 145, type: !167, isLocal: false, isDefinition: true)
!382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 448, elements: !383)
!383 = !{!384}
!384 = !DISubrange(count: 14)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !527, isLocal: true, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!389 = !{!235, !109, !110, !108}
!390 = !{!391, !385}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !513, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !508)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !479, !480, !481, !482, !488, !503}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !145, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !145, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !145, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !145, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !128, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !128, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !128, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !128, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !128, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !128, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !128, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !128, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !145, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !157, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !162)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !145, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !123, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !145, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !145, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !145, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !145, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !145, line: 96, baseType: !177, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !145, line: 100, baseType: !181, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !145, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !123, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !123, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !145, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !198, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !145, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !398, file: !145, line: 271, baseType: !473, size: 128, offset: 768)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !474)
!474 = !{!475, !476, !477, !478}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !473, file: !145, line: 35, baseType: !215, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !473, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !473, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !473, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !398, file: !145, line: 274, baseType: !397, size: 32, offset: 896)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !145, line: 300, baseType: !483, size: 96, offset: 1216)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !483, file: !145, line: 153, baseType: !22, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !483, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !483, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !145, line: 325, baseType: !489, size: 32, offset: 1312)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 32)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !491)
!491 = !{!492, !498, !499}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !490, file: !119, line: 5074, baseType: !493, size: 96)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !494)
!494 = !{!495, !496, !497}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !493, file: !244, line: 57, baseType: !247, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !493, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !493, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !490, file: !119, line: 5075, baseType: !429, size: 64, offset: 96)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !490, file: !119, line: 5076, baseType: !500, size: 32, offset: 160)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !501)
!501 = !{!502}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !500, file: !254, line: 52, baseType: !22, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !145, line: 343, baseType: !504, size: 64, offset: 1344)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !504, file: !198, line: 63, baseType: !110, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !504, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!508 = !{!509, !510, !511, !512}
!509 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!510 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !167)
!511 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!512 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !235)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 96, elements: !525)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !515, line: 52, size: 96, elements: !516)
!515 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518, !519}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !514, file: !515, line: 53, baseType: !22, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !514, file: !515, line: 54, baseType: !235, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !514, file: !515, line: 55, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !521, line: 151, baseType: !522)
!521 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !521, line: 149, size: 32, elements: !523)
!523 = !{!524}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !522, file: !521, line: 150, baseType: !110, size: 32)
!525 = !{!526}
!526 = !DISubrange(count: 1)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 96, elements: !525)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!529 = !DIGlobalVariableExpression(var: !530, expr: !DIExpression())
!530 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !531, file: !564, line: 39, type: !167, isLocal: true, isDefinition: true)
!531 = distinct !DICompileUnit(language: DW_LANG_C99, file: !532, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !533, globals: !563, splitDebugInlining: false, nameTableKind: None)
!532 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!533 = !{!534, !108, !109, !551, !167}
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !536, line: 1226, baseType: !537)
!536 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 1213, size: 352, elements: !538)
!538 = !{!539, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !537, file: !536, line: 1215, baseType: !540, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !537, file: !536, line: 1216, baseType: !301, size: 32, offset: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !537, file: !536, line: 1217, baseType: !301, size: 32, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !537, file: !536, line: 1218, baseType: !301, size: 32, offset: 96)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !537, file: !536, line: 1219, baseType: !301, size: 32, offset: 128)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !537, file: !536, line: 1220, baseType: !301, size: 32, offset: 160)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !537, file: !536, line: 1221, baseType: !301, size: 32, offset: 192)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !537, file: !536, line: 1222, baseType: !301, size: 32, offset: 224)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !537, file: !536, line: 1223, baseType: !301, size: 32, offset: 256)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !537, file: !536, line: 1224, baseType: !301, size: 32, offset: 288)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !537, file: !536, line: 1225, baseType: !301, size: 32, offset: 320)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !554, line: 27, size: 96, elements: !555)
!554 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!555 = !{!556, !557, !558}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !553, file: !554, line: 29, baseType: !110, size: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !553, file: !554, line: 31, baseType: !324, size: 32, offset: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !553, file: !554, line: 37, baseType: !559, size: 32, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !521, line: 146, baseType: !560)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !521, line: 141, size: 32, elements: !561)
!561 = !{!562}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !560, file: !521, line: 143, baseType: !110, size: 32)
!563 = !{!529}
!564 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!565 = !DIGlobalVariableExpression(var: !566, expr: !DIExpression())
!566 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !567, file: !572, line: 13, type: !589, isLocal: true, isDefinition: true)
!567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !569, splitDebugInlining: false, nameTableKind: None)
!568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!569 = !{!570, !565}
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "mpu_config", scope: !567, file: !572, line: 37, type: !573, isLocal: false, isDefinition: true)
!572 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !554, line: 41, size: 64, elements: !575)
!575 = !{!576, !577}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !574, file: !554, line: 43, baseType: !110, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !574, file: !554, line: 45, baseType: !578, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !554, line: 27, size: 96, elements: !581)
!581 = !{!582, !583, !584}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !580, file: !554, line: 29, baseType: !110, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !580, file: !554, line: 31, baseType: !324, size: 32, offset: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !580, file: !554, line: 37, baseType: !585, size: 32, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !521, line: 146, baseType: !586)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !521, line: 141, size: 32, elements: !587)
!587 = !{!588}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !586, file: !521, line: 143, baseType: !110, size: 32)
!589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !579, size: 192, elements: !162)
!590 = !DIGlobalVariableExpression(var: !591, expr: !DIExpression())
!591 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !592, file: !676, line: 72, type: !760, isLocal: true, isDefinition: true)
!592 = distinct !DICompileUnit(language: DW_LANG_C99, file: !593, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !594, retainedTypes: !662, globals: !673, splitDebugInlining: false, nameTableKind: None)
!593 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!594 = !{!30, !595}
!595 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !297, line: 65, baseType: !109, size: 32, elements: !596)
!596 = !{!597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661}
!597 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!598 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!599 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!600 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!601 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!602 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!603 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!604 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!605 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!606 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!607 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!608 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!609 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!610 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!611 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!612 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!613 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!614 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!615 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!616 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!617 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!618 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!619 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!620 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!621 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!622 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!623 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!624 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!625 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!626 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!627 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!628 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!629 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!630 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!631 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!632 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!633 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!634 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!635 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!636 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!637 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!638 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!639 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!640 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!641 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!642 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!643 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!644 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!645 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!646 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!647 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!648 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!649 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!650 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!651 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!652 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!653 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!654 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!655 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!656 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!657 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!658 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!659 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!660 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!661 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!662 = !{!235, !109, !108, !663}
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !297, line: 244, baseType: !665)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 236, size: 192, elements: !666)
!666 = !{!667, !668, !669, !670, !671, !672}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !665, file: !297, line: 238, baseType: !301, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !665, file: !297, line: 239, baseType: !301, size: 32, offset: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !665, file: !297, line: 240, baseType: !301, size: 32, offset: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !665, file: !297, line: 241, baseType: !301, size: 32, offset: 96)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !665, file: !297, line: 242, baseType: !301, size: 32, offset: 128)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !665, file: !297, line: 243, baseType: !301, size: 32, offset: 160)
!673 = !{!674, !680, !696, !707, !724, !590, !726, !740, !742, !744, !746, !748, !750, !752, !754, !756, !758}
!674 = !DIGlobalVariableExpression(var: !675, expr: !DIExpression())
!675 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !592, file: !676, line: 424, type: !677, isLocal: false, isDefinition: true, align: 16)
!676 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 64, elements: !678)
!678 = !{!679}
!679 = !DISubrange(count: 4)
!680 = !DIGlobalVariableExpression(var: !681, expr: !DIExpression())
!681 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !592, file: !676, line: 424, type: !682, isLocal: false, isDefinition: true, align: 32)
!682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !683)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !684)
!684 = !{!685, !686, !687, !688, !694, !695}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !683, file: !321, line: 380, baseType: !324, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !683, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !683, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !683, file: !321, line: 386, baseType: !689, size: 32, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !691)
!691 = !{!692, !693}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !690, file: !321, line: 359, baseType: !167, size: 8)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !690, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !683, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !683, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !592, file: !676, line: 424, type: !698, isLocal: true, isDefinition: true, align: 32)
!698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !699)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !700)
!700 = !{!701, !706}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !699, file: !312, line: 60, baseType: !702, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 32)
!703 = !DISubroutineType(types: !704)
!704 = !{!109, !705}
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !699, file: !312, line: 65, baseType: !705, size: 32, offset: 32)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "exti_data", scope: !592, file: !676, line: 423, type: !709, isLocal: true, isDefinition: true)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !676, line: 107, size: 1472, elements: !710)
!710 = !{!711}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !709, file: !676, line: 109, baseType: !712, size: 1472)
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 1472, elements: !722)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !676, line: 101, size: 64, elements: !714)
!714 = !{!715, !721}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !713, file: !676, line: 102, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !717, line: 63, baseType: !718)
!717 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 32)
!719 = !DISubroutineType(types: !720)
!720 = !{null, !109, !108}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !713, file: !676, line: 103, baseType: !108, size: 32, offset: 32)
!722 = !{!723}
!723 = !DISubrange(count: 23)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !592, file: !676, line: 424, type: !690, isLocal: true, isDefinition: true, align: 8)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !728, file: !676, line: 493, type: !733, isLocal: true, isDefinition: true, align: 32)
!728 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !676, file: !676, line: 460, type: !729, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !731)
!729 = !DISubroutineType(types: !730)
!730 = !{null, !705}
!731 = !{!732}
!732 = !DILocalVariable(name: "dev", arg: 1, scope: !728, file: !676, line: 460, type: !705)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !734)
!734 = !{!735, !737, !738, !739}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !733, file: !10, line: 55, baseType: !736, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !733, file: !10, line: 57, baseType: !736, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !733, file: !10, line: 59, baseType: !108, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !733, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !728, file: !676, line: 497, type: !733, isLocal: true, isDefinition: true, align: 32)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !728, file: !676, line: 507, type: !733, isLocal: true, isDefinition: true, align: 32)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !728, file: !676, line: 512, type: !733, isLocal: true, isDefinition: true, align: 32)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !728, file: !676, line: 516, type: !733, isLocal: true, isDefinition: true, align: 32)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !728, file: !676, line: 523, type: !733, isLocal: true, isDefinition: true, align: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !728, file: !676, line: 527, type: !733, isLocal: true, isDefinition: true, align: 32)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !728, file: !676, line: 581, type: !733, isLocal: true, isDefinition: true, align: 32)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !728, file: !676, line: 586, type: !733, isLocal: true, isDefinition: true, align: 32)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !728, file: !676, line: 591, type: !733, isLocal: true, isDefinition: true, align: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !728, file: !676, line: 595, type: !733, isLocal: true, isDefinition: true, align: 32)
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !761, size: 736, elements: !722)
!761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !762)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !297, line: 134, baseType: !595)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !765, file: !770, line: 22, type: !792, isLocal: false, isDefinition: true, align: 16)
!765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !767, splitDebugInlining: false, nameTableKind: None)
!766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!767 = !{!768, !763, !774, !776, !778, !780, !782, !784, !786, !788, !790}
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !765, file: !770, line: 17, type: !771, isLocal: false, isDefinition: true, align: 16)
!770 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 192, elements: !772)
!772 = !{!773}
!773 = !DISubrange(count: 12)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !765, file: !770, line: 29, type: !677, isLocal: false, isDefinition: true, align: 16)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !765, file: !770, line: 36, type: !677, isLocal: false, isDefinition: true, align: 16)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !765, file: !770, line: 43, type: !677, isLocal: false, isDefinition: true, align: 16)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !765, file: !770, line: 50, type: !677, isLocal: false, isDefinition: true, align: 16)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !765, file: !770, line: 57, type: !677, isLocal: false, isDefinition: true, align: 16)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !765, file: !770, line: 64, type: !677, isLocal: false, isDefinition: true, align: 16)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !765, file: !770, line: 71, type: !677, isLocal: false, isDefinition: true, align: 16)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !765, file: !770, line: 78, type: !677, isLocal: false, isDefinition: true, align: 16)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !765, file: !770, line: 85, type: !677, isLocal: false, isDefinition: true, align: 16)
!792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 48, elements: !793)
!793 = !{!794}
!794 = !DISubrange(count: 3)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !797, file: !861, line: 398, type: !894, isLocal: true, isDefinition: true)
!797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !798, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !799, retainedTypes: !812, globals: !858, splitDebugInlining: false, nameTableKind: None)
!798 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!799 = !{!800, !30, !805}
!800 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !801, line: 197, baseType: !32, size: 32, elements: !802)
!801 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!802 = !{!803, !804}
!803 = !DIEnumerator(name: "SUCCESS", value: 0)
!804 = !DIEnumerator(name: "ERROR", value: 1)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !806, line: 44, baseType: !32, size: 32, elements: !807)
!806 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!807 = !{!808, !809, !810, !811}
!808 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!809 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!810 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!811 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!812 = !{!108, !109, !110, !813, !851, !857}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 370, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 336, size: 1152, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !850}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !815, file: !297, line: 338, baseType: !301, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !815, file: !297, line: 339, baseType: !301, size: 32, offset: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !815, file: !297, line: 340, baseType: !301, size: 32, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !815, file: !297, line: 341, baseType: !301, size: 32, offset: 96)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !815, file: !297, line: 342, baseType: !301, size: 32, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !815, file: !297, line: 343, baseType: !301, size: 32, offset: 160)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !815, file: !297, line: 344, baseType: !301, size: 32, offset: 192)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !815, file: !297, line: 345, baseType: !110, size: 32, offset: 224)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !815, file: !297, line: 346, baseType: !301, size: 32, offset: 256)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !815, file: !297, line: 347, baseType: !301, size: 32, offset: 288)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !815, file: !297, line: 348, baseType: !828, size: 64, offset: 320)
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !162)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !815, file: !297, line: 349, baseType: !301, size: 32, offset: 384)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !815, file: !297, line: 350, baseType: !301, size: 32, offset: 416)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !815, file: !297, line: 351, baseType: !301, size: 32, offset: 448)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !815, file: !297, line: 352, baseType: !110, size: 32, offset: 480)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !815, file: !297, line: 353, baseType: !301, size: 32, offset: 512)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !815, file: !297, line: 354, baseType: !301, size: 32, offset: 544)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !815, file: !297, line: 355, baseType: !828, size: 64, offset: 576)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !815, file: !297, line: 356, baseType: !301, size: 32, offset: 640)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !815, file: !297, line: 357, baseType: !301, size: 32, offset: 672)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !815, file: !297, line: 358, baseType: !301, size: 32, offset: 704)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !815, file: !297, line: 359, baseType: !110, size: 32, offset: 736)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !815, file: !297, line: 360, baseType: !301, size: 32, offset: 768)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !815, file: !297, line: 361, baseType: !301, size: 32, offset: 800)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !815, file: !297, line: 362, baseType: !828, size: 64, offset: 832)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !815, file: !297, line: 363, baseType: !301, size: 32, offset: 896)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !815, file: !297, line: 364, baseType: !301, size: 32, offset: 928)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !815, file: !297, line: 365, baseType: !828, size: 64, offset: 960)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !815, file: !297, line: 366, baseType: !301, size: 32, offset: 1024)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !815, file: !297, line: 367, baseType: !301, size: 32, offset: 1056)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !815, file: !297, line: 368, baseType: !849, size: 32, offset: 1088)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 32, elements: !525)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !815, file: !297, line: 369, baseType: !301, size: 32, offset: 1120)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 32)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !853, line: 343, size: 64, elements: !854)
!853 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!854 = !{!855, !856}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !852, file: !853, line: 344, baseType: !110, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !852, file: !853, line: 345, baseType: !110, size: 32, offset: 32)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!858 = !{!859, !865, !881, !892, !795}
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !797, file: !861, line: 752, type: !862, isLocal: false, isDefinition: true, align: 16)
!861 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 704, elements: !863)
!863 = !{!864}
!864 = !DISubrange(count: 44)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !797, file: !861, line: 752, type: !867, isLocal: false, isDefinition: true, align: 32)
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !869)
!869 = !{!870, !871, !872, !873, !879, !880}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !868, file: !321, line: 380, baseType: !324, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !868, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !868, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !868, file: !321, line: 386, baseType: !874, size: 32, offset: 96)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 32)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !876)
!876 = !{!877, !878}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !875, file: !321, line: 359, baseType: !167, size: 8)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !875, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !868, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !868, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !797, file: !861, line: 752, type: !883, isLocal: true, isDefinition: true, align: 32)
!883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !885)
!885 = !{!886, !891}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !884, file: !312, line: 60, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = !DISubroutineType(types: !889)
!889 = !{!109, !890}
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !884, file: !312, line: 65, baseType: !890, size: 32, offset: 32)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !797, file: !861, line: 752, type: !875, isLocal: true, isDefinition: true, align: 8)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !806, line: 100, size: 224, elements: !895)
!895 = !{!896, !902, !903, !912, !917, !922, !928}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !894, file: !806, line: 101, baseType: !897, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !806, line: 76, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = !DISubroutineType(types: !900)
!900 = !{!109, !890, !901}
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !806, line: 56, baseType: !108)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !894, file: !806, line: 102, baseType: !897, size: 32, offset: 32)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !894, file: !806, line: 103, baseType: !904, size: 32, offset: 64)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !806, line: 83, baseType: !905)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{!109, !890, !901, !908, !108}
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !806, line: 72, baseType: !909)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!910 = !DISubroutineType(types: !911)
!911 = !{null, !890, !901, !108}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !894, file: !806, line: 104, baseType: !913, size: 32, offset: 96)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !806, line: 79, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!109, !890, !901, !857}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !894, file: !806, line: 105, baseType: !918, size: 32, offset: 128)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !806, line: 88, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!805, !890, !901}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !894, file: !806, line: 106, baseType: !923, size: 32, offset: 160)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !806, line: 92, baseType: !924)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 32)
!925 = !DISubroutineType(types: !926)
!926 = !{!109, !890, !901, !927}
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !806, line: 64, baseType: !108)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !894, file: !806, line: 107, baseType: !929, size: 32, offset: 192)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !806, line: 96, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DISubroutineType(types: !932)
!932 = !{!109, !890, !901, !108}
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !935, file: !992, line: 603, type: !994, isLocal: true, isDefinition: true, align: 32)
!935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !937, globals: !989, splitDebugInlining: false, nameTableKind: None)
!936 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!937 = !{!108, !109, !938}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !940)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !941, line: 336, size: 160, elements: !942)
!941 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!942 = !{!943, !963, !967, !971, !984}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !940, file: !941, line: 365, baseType: !944, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DISubroutineType(types: !946)
!946 = !{!109, !947, !962}
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !950)
!950 = !{!951, !952, !953, !954, !960, !961}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !949, file: !321, line: 380, baseType: !324, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !949, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !949, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !949, file: !321, line: 386, baseType: !955, size: 32, offset: 96)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !957)
!957 = !{!958, !959}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !956, file: !321, line: 359, baseType: !167, size: 8)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !956, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !949, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !949, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !940, file: !941, line: 366, baseType: !964, size: 32, offset: 32)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{null, !947, !168}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !940, file: !941, line: 374, baseType: !968, size: 32, offset: 64)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!969 = !DISubroutineType(types: !970)
!970 = !{!109, !947}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !940, file: !941, line: 377, baseType: !972, size: 32, offset: 96)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DISubroutineType(types: !974)
!974 = !{!109, !947, !975}
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !941, line: 122, size: 64, elements: !978)
!978 = !{!979, !980, !981, !982, !983}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !977, file: !941, line: 123, baseType: !110, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !977, file: !941, line: 124, baseType: !167, size: 8, offset: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !977, file: !941, line: 125, baseType: !167, size: 8, offset: 40)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !977, file: !941, line: 126, baseType: !167, size: 8, offset: 48)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !977, file: !941, line: 127, baseType: !167, size: 8, offset: 56)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !940, file: !941, line: 379, baseType: !985, size: 32, offset: 128)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{!109, !947, !988}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!989 = !{!933, !990}
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !935, file: !992, line: 38, type: !993, isLocal: true, isDefinition: true)
!992 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !995)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !996)
!996 = !{!997, !998}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !995, file: !312, line: 60, baseType: !968, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !995, file: !312, line: 65, baseType: !947, size: 32, offset: 32)
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1001, file: !1171, line: 762, type: !1280, isLocal: true, isDefinition: true)
!1001 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1002, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1003, retainedTypes: !1021, globals: !1168, splitDebugInlining: false, nameTableKind: None)
!1002 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!1003 = !{!30, !1004, !1010, !1015, !805}
!1004 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1005, line: 506, baseType: !32, size: 32, elements: !1006)
!1005 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1006 = !{!1007, !1008, !1009}
!1007 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1008 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1009 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1010 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1005, line: 512, baseType: !32, size: 32, elements: !1011)
!1011 = !{!1012, !1013, !1014}
!1012 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1013 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1014 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1015 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !717, line: 43, baseType: !32, size: 32, elements: !1016)
!1016 = !{!1017, !1018, !1019, !1020}
!1017 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1018 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1019 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1020 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1021 = !{!108, !109, !1022, !1092, !1097, !1057, !1010, !1004, !1102, !1103, !110, !1117, !1072, !1127, !1128, !1129}
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1005, line: 523, size: 288, elements: !1025)
!1025 = !{!1026, !1047, !1053, !1058, !1062, !1063, !1064, !1068, !1088}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1024, file: !1005, line: 524, baseType: !1027, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!109, !1030, !1045, !1046}
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1037, !1043, !1044}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1032, file: !321, line: 380, baseType: !324, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1032, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1032, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1032, file: !321, line: 386, baseType: !1038, size: 32, offset: 96)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1040)
!1040 = !{!1041, !1042}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1039, file: !321, line: 359, baseType: !167, size: 8)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1039, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1032, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1032, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1005, line: 237, baseType: !167)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1005, line: 257, baseType: !110)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1024, file: !1005, line: 530, baseType: !1048, size: 32, offset: 32)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!109, !1030, !1051}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1005, line: 229, baseType: !110)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1024, file: !1005, line: 532, baseType: !1054, size: 32, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!109, !1030, !1057, !1052}
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1005, line: 216, baseType: !110)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1024, file: !1005, line: 535, baseType: !1059, size: 32, offset: 96)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!109, !1030, !1057}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1024, file: !1005, line: 537, baseType: !1059, size: 32, offset: 128)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1024, file: !1005, line: 539, baseType: !1059, size: 32, offset: 160)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1024, file: !1005, line: 541, baseType: !1065, size: 32, offset: 192)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!109, !1030, !1045, !1004, !1010}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1024, file: !1005, line: 544, baseType: !1069, size: 32, offset: 224)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!109, !1030, !1072, !334}
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1005, line: 478, size: 96, elements: !1074)
!1074 = !{!1075, !1082, !1087}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1073, file: !1005, line: 482, baseType: !1076, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1077, line: 33, baseType: !1078)
!1077 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1077, line: 29, size: 32, elements: !1079)
!1079 = !{!1080}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1078, file: !1077, line: 30, baseType: !1081, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1073, file: !1005, line: 485, baseType: !1083, size: 32, offset: 32)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1005, line: 464, baseType: !1084)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{null, !1030, !1072, !1057}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1073, file: !1005, line: 493, baseType: !1057, size: 32, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1024, file: !1005, line: 547, baseType: !1089, size: 32, offset: 256)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!110, !1030}
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1005, line: 428, size: 32, elements: !1095)
!1095 = !{!1096}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1094, file: !1005, line: 434, baseType: !1057, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1005, line: 441, size: 32, elements: !1100)
!1100 = !{!1101}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1099, file: !1005, line: 447, baseType: !1057, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !297, line: 276, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 265, size: 320, elements: !1106)
!1106 = !{!1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1105, file: !297, line: 267, baseType: !301, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1105, file: !297, line: 268, baseType: !301, size: 32, offset: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1105, file: !297, line: 269, baseType: !301, size: 32, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1105, file: !297, line: 270, baseType: !301, size: 32, offset: 96)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1105, file: !297, line: 271, baseType: !301, size: 32, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1105, file: !297, line: 272, baseType: !301, size: 32, offset: 160)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1105, file: !297, line: 273, baseType: !301, size: 32, offset: 192)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1105, file: !297, line: 274, baseType: !301, size: 32, offset: 224)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1105, file: !297, line: 275, baseType: !1116, size: 64, offset: 256)
!1116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 64, elements: !162)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !297, line: 289, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 282, size: 288, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1125, !1126}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1119, file: !297, line: 284, baseType: !301, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1119, file: !297, line: 285, baseType: !301, size: 32, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1119, file: !297, line: 286, baseType: !1124, size: 128, offset: 64)
!1124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 128, elements: !678)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1119, file: !297, line: 287, baseType: !828, size: 64, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1119, file: !297, line: 288, baseType: !301, size: 32, offset: 256)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1131)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !806, line: 100, size: 224, elements: !1132)
!1132 = !{!1133, !1138, !1139, !1148, !1153, !1158, !1163}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1131, file: !806, line: 101, baseType: !1134, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !806, line: 76, baseType: !1135)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!109, !1030, !901}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1131, file: !806, line: 102, baseType: !1134, size: 32, offset: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1131, file: !806, line: 103, baseType: !1140, size: 32, offset: 64)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !806, line: 83, baseType: !1141)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!109, !1030, !901, !1144, !108}
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !806, line: 72, baseType: !1145)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{null, !1030, !901, !108}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1131, file: !806, line: 104, baseType: !1149, size: 32, offset: 96)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !806, line: 79, baseType: !1150)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!109, !1030, !901, !857}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1131, file: !806, line: 105, baseType: !1154, size: 32, offset: 128)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !806, line: 88, baseType: !1155)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!805, !1030, !901}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1131, file: !806, line: 106, baseType: !1159, size: 32, offset: 160)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !806, line: 92, baseType: !1160)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!109, !1030, !901, !927}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1131, file: !806, line: 107, baseType: !1164, size: 32, offset: 192)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !806, line: 96, baseType: !1165)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 32)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{!109, !1030, !901, !108}
!1168 = !{!1169, !1175, !1177, !1187, !1192, !1194, !1196, !1198, !1200, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1246, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !999, !1276, !1278, !1291, !1293, !1295, !1297, !1299, !1301}
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1001, file: !1171, line: 762, type: !1172, isLocal: false, isDefinition: true, align: 16)
!1171 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 80, elements: !1173)
!1173 = !{!1174}
!1174 = !DISubrange(count: 5)
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1001, file: !1171, line: 762, type: !1031, isLocal: false, isDefinition: true, align: 32)
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1001, file: !1171, line: 762, type: !1179, isLocal: true, isDefinition: true, align: 32)
!1179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1180)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !1181)
!1181 = !{!1182, !1186}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1180, file: !312, line: 60, baseType: !1183, size: 32)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!109, !1030}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1180, file: !312, line: 65, baseType: !1030, size: 32, offset: 32)
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1001, file: !1171, line: 766, type: !1189, isLocal: false, isDefinition: true, align: 16)
!1189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 160, elements: !1190)
!1190 = !{!1191}
!1191 = !DISubrange(count: 10)
!1192 = !DIGlobalVariableExpression(var: !1193, expr: !DIExpression())
!1193 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1001, file: !1171, line: 766, type: !1031, isLocal: false, isDefinition: true, align: 32)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1001, file: !1171, line: 766, type: !1179, isLocal: true, isDefinition: true, align: 32)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1001, file: !1171, line: 770, type: !1172, isLocal: false, isDefinition: true, align: 16)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1001, file: !1171, line: 770, type: !1031, isLocal: false, isDefinition: true, align: 32)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1001, file: !1171, line: 770, type: !1179, isLocal: true, isDefinition: true, align: 32)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1001, file: !1171, line: 774, type: !1172, isLocal: false, isDefinition: true, align: 16)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1001, file: !1171, line: 774, type: !1031, isLocal: false, isDefinition: true, align: 32)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1001, file: !1171, line: 774, type: !1179, isLocal: true, isDefinition: true, align: 32)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1001, file: !1171, line: 778, type: !1172, isLocal: false, isDefinition: true, align: 16)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1001, file: !1171, line: 778, type: !1031, isLocal: false, isDefinition: true, align: 32)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1001, file: !1171, line: 778, type: !1179, isLocal: true, isDefinition: true, align: 32)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1001, file: !1171, line: 782, type: !1172, isLocal: false, isDefinition: true, align: 16)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1001, file: !1171, line: 782, type: !1031, isLocal: false, isDefinition: true, align: 32)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1001, file: !1171, line: 782, type: !1179, isLocal: true, isDefinition: true, align: 32)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1001, file: !1171, line: 786, type: !1172, isLocal: false, isDefinition: true, align: 16)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1001, file: !1171, line: 786, type: !1031, isLocal: false, isDefinition: true, align: 32)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1001, file: !1171, line: 786, type: !1179, isLocal: true, isDefinition: true, align: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1001, file: !1171, line: 790, type: !1172, isLocal: false, isDefinition: true, align: 16)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1001, file: !1171, line: 790, type: !1031, isLocal: false, isDefinition: true, align: 32)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1001, file: !1171, line: 790, type: !1179, isLocal: true, isDefinition: true, align: 32)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1001, file: !1171, line: 762, type: !1234, isLocal: true, isDefinition: true)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1235, line: 237, size: 128, elements: !1236)
!1235 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1236 = !{!1237, !1238, !1239}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1234, file: !1235, line: 239, baseType: !1099, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1234, file: !1235, line: 241, baseType: !1030, size: 32, offset: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1234, file: !1235, line: 243, baseType: !1240, size: 64, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1077, line: 40, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1077, line: 35, size: 64, elements: !1242)
!1242 = !{!1243, !1245}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1241, file: !1077, line: 36, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1241, file: !1077, line: 37, baseType: !1244, size: 32, offset: 32)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1001, file: !1171, line: 762, type: !1039, isLocal: true, isDefinition: true, align: 8)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1001, file: !1171, line: 766, type: !1234, isLocal: true, isDefinition: true)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1001, file: !1171, line: 766, type: !1039, isLocal: true, isDefinition: true, align: 8)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1001, file: !1171, line: 770, type: !1234, isLocal: true, isDefinition: true)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1001, file: !1171, line: 770, type: !1039, isLocal: true, isDefinition: true, align: 8)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1001, file: !1171, line: 774, type: !1234, isLocal: true, isDefinition: true)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1001, file: !1171, line: 774, type: !1039, isLocal: true, isDefinition: true, align: 8)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1001, file: !1171, line: 778, type: !1234, isLocal: true, isDefinition: true)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1001, file: !1171, line: 778, type: !1039, isLocal: true, isDefinition: true, align: 8)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1001, file: !1171, line: 782, type: !1234, isLocal: true, isDefinition: true)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1001, file: !1171, line: 782, type: !1039, isLocal: true, isDefinition: true, align: 8)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1001, file: !1171, line: 786, type: !1234, isLocal: true, isDefinition: true)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1001, file: !1171, line: 786, type: !1039, isLocal: true, isDefinition: true, align: 8)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1001, file: !1171, line: 790, type: !1234, isLocal: true, isDefinition: true)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1001, file: !1171, line: 790, type: !1039, isLocal: true, isDefinition: true, align: 8)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1001, file: !1171, line: 656, type: !1023, isLocal: true, isDefinition: true)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1001, file: !1171, line: 766, type: !1280, isLocal: true, isDefinition: true)
!1280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1281)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1235, line: 224, size: 160, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1281, file: !1235, line: 226, baseType: !1094, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1281, file: !1235, line: 228, baseType: !857, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1281, file: !1235, line: 230, baseType: !109, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1281, file: !1235, line: 231, baseType: !1287, size: 64, offset: 96)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !853, line: 343, size: 64, elements: !1288)
!1288 = !{!1289, !1290}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1287, file: !853, line: 344, baseType: !110, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1287, file: !853, line: 345, baseType: !110, size: 32, offset: 32)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1001, file: !1171, line: 770, type: !1280, isLocal: true, isDefinition: true)
!1293 = !DIGlobalVariableExpression(var: !1294, expr: !DIExpression())
!1294 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1001, file: !1171, line: 774, type: !1280, isLocal: true, isDefinition: true)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1001, file: !1171, line: 778, type: !1280, isLocal: true, isDefinition: true)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1001, file: !1171, line: 782, type: !1280, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1001, file: !1171, line: 786, type: !1280, isLocal: true, isDefinition: true)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1001, file: !1171, line: 790, type: !1280, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1305, file: !1444, line: 1914, type: !1505, isLocal: true, isDefinition: true)
!1305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1306, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1307, retainedTypes: !1340, globals: !1441, splitDebugInlining: false, nameTableKind: None)
!1306 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!1307 = !{!30, !1308, !1315, !1322, !1329, !1335, !805}
!1308 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !941, line: 47, baseType: !32, size: 32, elements: !1309)
!1309 = !{!1310, !1311, !1312, !1313, !1314}
!1310 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1311 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1312 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1313 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1314 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1315 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !941, line: 75, baseType: !32, size: 32, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320, !1321}
!1317 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1318 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1319 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1320 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1321 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1322 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !941, line: 92, baseType: !32, size: 32, elements: !1323)
!1323 = !{!1324, !1325, !1326, !1327, !1328}
!1324 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1325 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1326 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1327 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1328 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !941, line: 84, baseType: !32, size: 32, elements: !1330)
!1330 = !{!1331, !1332, !1333, !1334}
!1331 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1332 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1333 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1334 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !941, line: 107, baseType: !32, size: 32, elements: !1336)
!1336 = !{!1337, !1338, !1339}
!1337 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1338 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1339 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1340 = !{!108, !109, !1341, !168, !167, !1390, !110, !901, !1401, !181, !111, !1440}
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !941, line: 336, size: 160, elements: !1344)
!1344 = !{!1345, !1364, !1368, !1372, !1385}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1343, file: !941, line: 365, baseType: !1346, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 32)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!109, !1349, !962}
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1362, !1363}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1351, file: !321, line: 380, baseType: !324, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1351, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1351, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1351, file: !321, line: 386, baseType: !1357, size: 32, offset: 96)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 32)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1359)
!1359 = !{!1360, !1361}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1358, file: !321, line: 359, baseType: !167, size: 8)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1358, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1351, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1351, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1343, file: !941, line: 366, baseType: !1365, size: 32, offset: 32)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 32)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{null, !1349, !168}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1343, file: !941, line: 374, baseType: !1369, size: 32, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 32)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!109, !1349}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1343, file: !941, line: 377, baseType: !1373, size: 32, offset: 96)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!109, !1349, !1376}
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !941, line: 122, size: 64, elements: !1379)
!1379 = !{!1380, !1381, !1382, !1383, !1384}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1378, file: !941, line: 123, baseType: !110, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1378, file: !941, line: 124, baseType: !167, size: 8, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1378, file: !941, line: 125, baseType: !167, size: 8, offset: 40)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1378, file: !941, line: 126, baseType: !167, size: 8, offset: 48)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1378, file: !941, line: 127, baseType: !167, size: 8, offset: 56)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1343, file: !941, line: 379, baseType: !1386, size: 32, offset: 128)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 32)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!109, !1349, !1389}
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !297, line: 508, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 499, size: 224, elements: !1393)
!1393 = !{!1394, !1395, !1396, !1397, !1398, !1399, !1400}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1392, file: !297, line: 501, baseType: !301, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1392, file: !297, line: 502, baseType: !301, size: 32, offset: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1392, file: !297, line: 503, baseType: !301, size: 32, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1392, file: !297, line: 504, baseType: !301, size: 32, offset: 96)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1392, file: !297, line: 505, baseType: !301, size: 32, offset: 128)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1392, file: !297, line: 506, baseType: !301, size: 32, offset: 160)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1392, file: !297, line: 507, baseType: !301, size: 32, offset: 192)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !806, line: 100, size: 224, elements: !1404)
!1404 = !{!1405, !1410, !1411, !1420, !1425, !1430, !1435}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1403, file: !806, line: 101, baseType: !1406, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !806, line: 76, baseType: !1407)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!109, !1349, !901}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1403, file: !806, line: 102, baseType: !1406, size: 32, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1403, file: !806, line: 103, baseType: !1412, size: 32, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !806, line: 83, baseType: !1413)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{!109, !1349, !901, !1416, !108}
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !806, line: 72, baseType: !1417)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{null, !1349, !901, !108}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1403, file: !806, line: 104, baseType: !1421, size: 32, offset: 96)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !806, line: 79, baseType: !1422)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!109, !1349, !901, !857}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1403, file: !806, line: 105, baseType: !1426, size: 32, offset: 128)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !806, line: 88, baseType: !1427)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!805, !1349, !901}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1403, file: !806, line: 106, baseType: !1431, size: 32, offset: 160)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !806, line: 92, baseType: !1432)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{!109, !1349, !901, !927}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1403, file: !806, line: 107, baseType: !1436, size: 32, offset: 192)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !806, line: 96, baseType: !1437)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!109, !1349, !901, !108}
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!1441 = !{!1442, !1448, !1450, !1457, !1303, !1459, !1467, !1490, !1493, !1496, !1498}
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1305, file: !1444, line: 1914, type: !1445, isLocal: false, isDefinition: true, align: 16)
!1444 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 128, elements: !1446)
!1446 = !{!1447}
!1447 = !DISubrange(count: 8)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1305, file: !1444, line: 1914, type: !1350, isLocal: false, isDefinition: true, align: 32)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1305, file: !1444, line: 1914, type: !1452, isLocal: true, isDefinition: true, align: 32)
!1452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !1454)
!1454 = !{!1455, !1456}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1453, file: !312, line: 60, baseType: !1369, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1453, file: !312, line: 65, baseType: !1349, size: 32, offset: 32)
!1457 = !DIGlobalVariableExpression(var: !1458, expr: !DIExpression())
!1458 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1305, file: !1444, line: 1914, type: !1358, isLocal: true, isDefinition: true, align: 8)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1305, file: !1444, line: 1914, type: !1461, isLocal: true, isDefinition: true)
!1461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1462, size: 64, elements: !525)
!1462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1463)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !853, line: 343, size: 64, elements: !1464)
!1464 = !{!1465, !1466}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1463, file: !853, line: 344, baseType: !110, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1463, file: !853, line: 345, baseType: !110, size: 32, offset: 32)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1305, file: !1444, line: 1914, type: !1469, isLocal: true, isDefinition: true)
!1469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1470)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1471, line: 60, size: 64, elements: !1472)
!1471 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1472 = !{!1473, !1489}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1470, file: !1471, line: 69, baseType: !1474, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1476)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1471, line: 50, size: 64, elements: !1477)
!1477 = !{!1478, !1487, !1488}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1476, file: !1471, line: 52, baseType: !1479, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1481)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1482, line: 37, baseType: !1483)
!1482 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1482, line: 32, size: 64, elements: !1484)
!1484 = !{!1485, !1486}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1483, file: !1482, line: 34, baseType: !110, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1483, file: !1482, line: 36, baseType: !110, size: 32, offset: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1476, file: !1471, line: 54, baseType: !167, size: 8, offset: 32)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1476, file: !1471, line: 56, baseType: !167, size: 8, offset: 40)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1470, file: !1471, line: 71, baseType: !167, size: 8, offset: 32)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1305, file: !1444, line: 1914, type: !1492, isLocal: true, isDefinition: true)
!1492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 64, elements: !525)
!1493 = !DIGlobalVariableExpression(var: !1494, expr: !DIExpression())
!1494 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1305, file: !1444, line: 1914, type: !1495, isLocal: true, isDefinition: true)
!1495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1480, size: 128, elements: !162)
!1496 = !DIGlobalVariableExpression(var: !1497, expr: !DIExpression())
!1497 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1305, file: !1444, line: 1539, type: !1342, isLocal: true, isDefinition: true)
!1498 = !DIGlobalVariableExpression(var: !1499, expr: !DIExpression())
!1499 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1305, file: !1444, line: 1914, type: !1500, isLocal: true, isDefinition: true)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1501, line: 74, size: 64, elements: !1502)
!1501 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1502 = !{!1503, !1504}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1500, file: !1501, line: 76, baseType: !110, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1500, file: !1501, line: 78, baseType: !1349, size: 32, offset: 32)
!1505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1506)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1501, line: 22, size: 224, elements: !1507)
!1507 = !{!1508, !1509, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1506, file: !1501, line: 24, baseType: !1390, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1506, file: !1501, line: 26, baseType: !1510, size: 32, offset: 32)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1506, file: !1501, line: 28, baseType: !235, size: 32, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1506, file: !1501, line: 30, baseType: !334, size: 8, offset: 96)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1506, file: !1501, line: 32, baseType: !109, size: 32, offset: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1506, file: !1501, line: 34, baseType: !334, size: 8, offset: 160)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1506, file: !1501, line: 36, baseType: !334, size: 8, offset: 168)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1506, file: !1501, line: 38, baseType: !334, size: 8, offset: 176)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1506, file: !1501, line: 40, baseType: !334, size: 8, offset: 184)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1506, file: !1501, line: 41, baseType: !1519, size: 32, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1522, file: !1598, line: 65, type: !301, isLocal: true, isDefinition: true)
!1522 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1523, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1524, retainedTypes: !1525, globals: !1595, splitDebugInlining: false, nameTableKind: None)
!1523 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!1524 = !{!595}
!1525 = !{!104, !1526, !736, !167, !110, !1534, !1565}
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !536, line: 770, baseType: !1528)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 764, size: 128, elements: !1529)
!1529 = !{!1530, !1531, !1532, !1533}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1528, file: !536, line: 766, baseType: !301, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1528, file: !536, line: 767, baseType: !301, size: 32, offset: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1528, file: !536, line: 768, baseType: !301, size: 32, offset: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1528, file: !536, line: 769, baseType: !540, size: 32, offset: 96)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !1537)
!1537 = !{!1538, !1540, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1555, !1560, !1564}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1536, file: !536, line: 413, baseType: !1539, size: 256)
!1539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 256, elements: !1446)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1536, file: !536, line: 414, baseType: !1541, size: 768, offset: 256)
!1541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1542)
!1542 = !{!1543}
!1543 = !DISubrange(count: 24)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1536, file: !536, line: 415, baseType: !1539, size: 256, offset: 1024)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1536, file: !536, line: 416, baseType: !1541, size: 768, offset: 1280)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1536, file: !536, line: 417, baseType: !1539, size: 256, offset: 2048)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1536, file: !536, line: 418, baseType: !1541, size: 768, offset: 2304)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1536, file: !536, line: 419, baseType: !1539, size: 256, offset: 3072)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1536, file: !536, line: 420, baseType: !1541, size: 768, offset: 3328)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1536, file: !536, line: 421, baseType: !1539, size: 256, offset: 4096)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1536, file: !536, line: 422, baseType: !1552, size: 1792, offset: 4352)
!1552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1553)
!1553 = !{!1554}
!1554 = !DISubrange(count: 56)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1536, file: !536, line: 423, baseType: !1556, size: 1920, offset: 6144)
!1556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1557, size: 1920, elements: !1558)
!1557 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !167)
!1558 = !{!1559}
!1559 = !DISubrange(count: 240)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1536, file: !536, line: 424, baseType: !1561, size: 20608, offset: 8064)
!1561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1562)
!1562 = !{!1563}
!1563 = !DISubrange(count: 644)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1536, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !1567)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !1568)
!1568 = !{!1569, !1570, !1571, !1572, !1573, !1574, !1575, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1586, !1587, !1588, !1590, !1592, !1594}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1567, file: !536, line: 447, baseType: !540, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1567, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1567, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1567, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1567, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1567, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1567, file: !536, line: 453, baseType: !1576, size: 96, offset: 192)
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1557, size: 96, elements: !772)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1567, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1567, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1567, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1567, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1567, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1567, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1567, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1567, file: !536, line: 461, baseType: !1585, size: 64, offset: 512)
!1585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 64, elements: !162)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1567, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1567, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1567, file: !536, line: 464, baseType: !1589, size: 128, offset: 640)
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 128, elements: !678)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1567, file: !536, line: 465, baseType: !1591, size: 160, offset: 768)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 160, elements: !1173)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1567, file: !536, line: 466, baseType: !1593, size: 160, offset: 928)
!1593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1173)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1567, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!1595 = !{!1596, !1622, !1627, !1629, !1631, !1520}
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1522, file: !1598, line: 285, type: !1599, isLocal: true, isDefinition: true, align: 32)
!1598 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !1601)
!1601 = !{!1602, !1621}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1600, file: !312, line: 60, baseType: !1603, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!109, !1606}
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1608)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1609)
!1609 = !{!1610, !1611, !1612, !1613, !1619, !1620}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1608, file: !321, line: 380, baseType: !324, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1608, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1608, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1608, file: !321, line: 386, baseType: !1614, size: 32, offset: 96)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1616)
!1616 = !{!1617, !1618}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1615, file: !321, line: 359, baseType: !167, size: 8)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1615, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1608, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1608, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1600, file: !312, line: 65, baseType: !1606, size: 32, offset: 32)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "lock", scope: !1522, file: !1598, line: 34, type: !1624, isLocal: true, isDefinition: true)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !1625)
!1625 = !{!1626}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1624, file: !254, line: 52, baseType: !22, size: 32)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "last_load", scope: !1522, file: !1598, line: 36, type: !110, isLocal: true, isDefinition: true)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1522, file: !1598, line: 48, type: !110, isLocal: true, isDefinition: true)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1522, file: !1598, line: 54, type: !110, isLocal: true, isDefinition: true)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1635, file: !1717, line: 22, type: !1719, isLocal: true, isDefinition: true)
!1635 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1636, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1637, retainedTypes: !1638, globals: !1714, splitDebugInlining: false, nameTableKind: None)
!1636 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!1637 = !{!1004, !1010}
!1638 = !{!1639, !1703, !1708, !1057, !1010, !1004, !1713, !108}
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1005, line: 523, size: 288, elements: !1642)
!1642 = !{!1643, !1662, !1666, !1670, !1674, !1675, !1676, !1680, !1699}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1641, file: !1005, line: 524, baseType: !1644, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!109, !1647, !1045, !1046}
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1650)
!1650 = !{!1651, !1652, !1653, !1654, !1660, !1661}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1649, file: !321, line: 380, baseType: !324, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1649, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1649, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1649, file: !321, line: 386, baseType: !1655, size: 32, offset: 96)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1657)
!1657 = !{!1658, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1656, file: !321, line: 359, baseType: !167, size: 8)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1656, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1649, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1649, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1641, file: !1005, line: 530, baseType: !1663, size: 32, offset: 32)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 32)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{!109, !1647, !1051}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1641, file: !1005, line: 532, baseType: !1667, size: 32, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 32)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{!109, !1647, !1057, !1052}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1641, file: !1005, line: 535, baseType: !1671, size: 32, offset: 96)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 32)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!109, !1647, !1057}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1641, file: !1005, line: 537, baseType: !1671, size: 32, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1641, file: !1005, line: 539, baseType: !1671, size: 32, offset: 160)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1641, file: !1005, line: 541, baseType: !1677, size: 32, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!109, !1647, !1045, !1004, !1010}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1641, file: !1005, line: 544, baseType: !1681, size: 32, offset: 224)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 32)
!1682 = !DISubroutineType(types: !1683)
!1683 = !{!109, !1647, !1684, !334}
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1005, line: 478, size: 96, elements: !1686)
!1686 = !{!1687, !1693, !1698}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1685, file: !1005, line: 482, baseType: !1688, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1077, line: 33, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1077, line: 29, size: 32, elements: !1690)
!1690 = !{!1691}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1689, file: !1077, line: 30, baseType: !1692, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1685, file: !1005, line: 485, baseType: !1694, size: 32, offset: 32)
!1694 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1005, line: 464, baseType: !1695)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 32)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{null, !1647, !1684, !1057}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1685, file: !1005, line: 493, baseType: !1057, size: 32, offset: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1641, file: !1005, line: 547, baseType: !1700, size: 32, offset: 256)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!110, !1647}
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1005, line: 428, size: 32, elements: !1706)
!1706 = !{!1707}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1705, file: !1005, line: 434, baseType: !1057, size: 32)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1005, line: 441, size: 32, elements: !1711)
!1711 = !{!1712}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1710, file: !1005, line: 447, baseType: !1057, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1714 = !{!1715, !1633}
!1715 = !DIGlobalVariableExpression(var: !1716, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1716 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1635, file: !1717, line: 37, type: !1718, isLocal: true, isDefinition: true)
!1717 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!1719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1720, size: 352, elements: !1721)
!1720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1647)
!1721 = !{!1722}
!1722 = !DISubrange(count: 11)
!1723 = !DIGlobalVariableExpression(var: !1724, expr: !DIExpression())
!1724 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1725, file: !1767, line: 139, type: !1774, isLocal: false, isDefinition: true)
!1725 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1726, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1727, globals: !1764, splitDebugInlining: false, nameTableKind: None)
!1726 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!1727 = !{!1728}
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 370, baseType: !1730)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 336, size: 1152, elements: !1731)
!1731 = !{!1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1730, file: !297, line: 338, baseType: !301, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1730, file: !297, line: 339, baseType: !301, size: 32, offset: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1730, file: !297, line: 340, baseType: !301, size: 32, offset: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1730, file: !297, line: 341, baseType: !301, size: 32, offset: 96)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1730, file: !297, line: 342, baseType: !301, size: 32, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1730, file: !297, line: 343, baseType: !301, size: 32, offset: 160)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1730, file: !297, line: 344, baseType: !301, size: 32, offset: 192)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1730, file: !297, line: 345, baseType: !110, size: 32, offset: 224)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1730, file: !297, line: 346, baseType: !301, size: 32, offset: 256)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1730, file: !297, line: 347, baseType: !301, size: 32, offset: 288)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1730, file: !297, line: 348, baseType: !828, size: 64, offset: 320)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1730, file: !297, line: 349, baseType: !301, size: 32, offset: 384)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1730, file: !297, line: 350, baseType: !301, size: 32, offset: 416)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1730, file: !297, line: 351, baseType: !301, size: 32, offset: 448)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1730, file: !297, line: 352, baseType: !110, size: 32, offset: 480)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1730, file: !297, line: 353, baseType: !301, size: 32, offset: 512)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1730, file: !297, line: 354, baseType: !301, size: 32, offset: 544)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1730, file: !297, line: 355, baseType: !828, size: 64, offset: 576)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1730, file: !297, line: 356, baseType: !301, size: 32, offset: 640)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1730, file: !297, line: 357, baseType: !301, size: 32, offset: 672)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1730, file: !297, line: 358, baseType: !301, size: 32, offset: 704)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1730, file: !297, line: 359, baseType: !110, size: 32, offset: 736)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1730, file: !297, line: 360, baseType: !301, size: 32, offset: 768)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1730, file: !297, line: 361, baseType: !301, size: 32, offset: 800)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1730, file: !297, line: 362, baseType: !828, size: 64, offset: 832)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1730, file: !297, line: 363, baseType: !301, size: 32, offset: 896)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1730, file: !297, line: 364, baseType: !301, size: 32, offset: 928)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1730, file: !297, line: 365, baseType: !828, size: 64, offset: 960)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1730, file: !297, line: 366, baseType: !301, size: 32, offset: 1024)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1730, file: !297, line: 367, baseType: !301, size: 32, offset: 1056)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1730, file: !297, line: 368, baseType: !849, size: 32, offset: 1088)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1730, file: !297, line: 369, baseType: !301, size: 32, offset: 1120)
!1764 = !{!1765, !1768, !1723}
!1765 = !DIGlobalVariableExpression(var: !1766, expr: !DIExpression())
!1766 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1725, file: !1767, line: 137, type: !110, isLocal: false, isDefinition: true)
!1767 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1768 = !DIGlobalVariableExpression(var: !1769, expr: !DIExpression())
!1769 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1725, file: !1767, line: 138, type: !1770, isLocal: false, isDefinition: true)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1771, size: 128, elements: !1772)
!1771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!1772 = !{!1773}
!1773 = !DISubrange(count: 16)
!1774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1771, size: 64, elements: !1446)
!1775 = !DIGlobalVariableExpression(var: !1776, expr: !DIExpression())
!1776 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1777, file: !1780, line: 23, type: !1781, isLocal: false, isDefinition: true)
!1777 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1778, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !1779, splitDebugInlining: false, nameTableKind: None)
!1778 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!1779 = !{!1775}
!1780 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression())
!1783 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1784, file: !1788, line: 86, type: !2062, isLocal: false, isDefinition: true, align: 512)
!1784 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1785, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1786, retainedTypes: !1795, globals: !1869, splitDebugInlining: false, nameTableKind: None)
!1785 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!1786 = !{!1787, !30, !595}
!1787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1788, line: 63, baseType: !32, size: 32, elements: !1789)
!1788 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1789 = !{!1790, !1791, !1792, !1793, !1794}
!1790 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1791 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1792 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1793 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1794 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1795 = !{!235, !108, !109, !1796, !1127, !110, !1827, !736, !167, !1852}
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1799, line: 51, size: 64, elements: !1800)
!1799 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1800 = !{!1801, !1822}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1798, file: !1799, line: 52, baseType: !1802, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1799, line: 38, baseType: !1803)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 32)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{!109, !1806, !1821, !181}
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1808)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813, !1819, !1820}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1808, file: !321, line: 380, baseType: !324, size: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1808, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1808, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1808, file: !321, line: 386, baseType: !1814, size: 32, offset: 96)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 32)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1816)
!1816 = !{!1817, !1818}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1815, file: !321, line: 359, baseType: !167, size: 8)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1815, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1808, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1808, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1798, file: !1799, line: 53, baseType: !1823, size: 32, offset: 32)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1799, line: 47, baseType: !1824)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 32)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!109, !1806, !1821, !181, !110}
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !1829)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1829, file: !536, line: 447, baseType: !540, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1829, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1829, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1829, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1829, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1829, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1829, file: !536, line: 453, baseType: !1576, size: 96, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1829, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1829, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1829, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1829, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1829, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1829, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1829, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1829, file: !536, line: 461, baseType: !1585, size: 64, offset: 512)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1829, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1829, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1829, file: !536, line: 464, baseType: !1589, size: 128, offset: 640)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1829, file: !536, line: 465, baseType: !1591, size: 160, offset: 768)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1829, file: !536, line: 466, baseType: !1593, size: 160, offset: 928)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1829, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !1855)
!1855 = !{!1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1854, file: !536, line: 413, baseType: !1539, size: 256)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1854, file: !536, line: 414, baseType: !1541, size: 768, offset: 256)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1854, file: !536, line: 415, baseType: !1539, size: 256, offset: 1024)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1854, file: !536, line: 416, baseType: !1541, size: 768, offset: 1280)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1854, file: !536, line: 417, baseType: !1539, size: 256, offset: 2048)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1854, file: !536, line: 418, baseType: !1541, size: 768, offset: 2304)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1854, file: !536, line: 419, baseType: !1539, size: 256, offset: 3072)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1854, file: !536, line: 420, baseType: !1541, size: 768, offset: 3328)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1854, file: !536, line: 421, baseType: !1539, size: 256, offset: 4096)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1854, file: !536, line: 422, baseType: !1552, size: 1792, offset: 4352)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1854, file: !536, line: 423, baseType: !1556, size: 1920, offset: 6144)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1854, file: !536, line: 424, baseType: !1561, size: 20608, offset: 8064)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1854, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!1869 = !{!1870, !2019, !2027, !2029, !1782, !2032, !2034, !2039}
!1870 = !DIGlobalVariableExpression(var: !1871, expr: !DIExpression())
!1871 = distinct !DIGlobalVariable(name: "_kernel", scope: !1784, file: !1788, line: 40, type: !1872, isLocal: false, isDefinition: true)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !123, line: 158, size: 384, elements: !1873)
!1873 = !{!1874, !1999, !2018}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1872, file: !123, line: 159, baseType: !1875, size: 192)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1876, size: 192, elements: !525)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !123, line: 100, size: 192, elements: !1877)
!1877 = !{!1878, !1879, !1880, !1992, !1993, !1994, !1995}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1876, file: !123, line: 102, baseType: !110, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1876, file: !123, line: 105, baseType: !1127, size: 32, offset: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1876, file: !123, line: 108, baseType: !1881, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !1883)
!1883 = !{!1884, !1942, !1954, !1955, !1956, !1963, !1964, !1965, !1966, !1972, !1987}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1882, file: !145, line: 247, baseType: !1885, size: 384)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !1886)
!1886 = !{!1887, !1911, !1918, !1919, !1920, !1929, !1930, !1931}
!1887 = !DIDerivedType(tag: DW_TAG_member, scope: !1885, file: !145, line: 60, baseType: !1888, size: 64)
!1888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1885, file: !145, line: 60, size: 64, elements: !1889)
!1889 = !{!1890, !1905}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1888, file: !145, line: 61, baseType: !1891, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !1892)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !1893)
!1893 = !{!1894, !1900}
!1894 = !DIDerivedType(tag: DW_TAG_member, scope: !1892, file: !128, line: 38, baseType: !1895, size: 32)
!1895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1892, file: !128, line: 38, size: 32, elements: !1896)
!1896 = !{!1897, !1899}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1895, file: !128, line: 39, baseType: !1898, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1895, file: !128, line: 40, baseType: !1898, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, scope: !1892, file: !128, line: 42, baseType: !1901, size: 32, offset: 32)
!1901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1892, file: !128, line: 42, size: 32, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1901, file: !128, line: 43, baseType: !1898, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1901, file: !128, line: 44, baseType: !1898, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1888, file: !145, line: 62, baseType: !1906, size: 64)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !1907)
!1907 = !{!1908}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1906, file: !157, line: 50, baseType: !1909, size: 64)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1910, size: 64, elements: !162)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1885, file: !145, line: 68, baseType: !1912, size: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !1914)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !1915)
!1915 = !{!1916}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1914, file: !123, line: 232, baseType: !1917, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !1892)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1885, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1885, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!1920 = !DIDerivedType(tag: DW_TAG_member, scope: !1885, file: !145, line: 90, baseType: !1921, size: 16, offset: 112)
!1921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1885, file: !145, line: 90, size: 16, elements: !1922)
!1922 = !{!1923, !1928}
!1923 = !DIDerivedType(tag: DW_TAG_member, scope: !1921, file: !145, line: 91, baseType: !1924, size: 16)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1921, file: !145, line: 91, size: 16, elements: !1925)
!1925 = !{!1926, !1927}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1924, file: !145, line: 96, baseType: !177, size: 8)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1924, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1921, file: !145, line: 100, baseType: !181, size: 16)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1885, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1885, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1885, file: !145, line: 131, baseType: !1932, size: 192, offset: 192)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !1933)
!1933 = !{!1934, !1935, !1941}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1932, file: !123, line: 245, baseType: !1891, size: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1932, file: !123, line: 246, baseType: !1936, size: 32, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !1937)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{null, !1940}
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1932, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1882, file: !145, line: 250, baseType: !1943, size: 288, offset: 384)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !1944)
!1944 = !{!1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1943, file: !198, line: 26, baseType: !110, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1943, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1943, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1943, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1943, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1943, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1943, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1943, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1943, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1882, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1882, file: !145, line: 256, baseType: !1913, size: 64, offset: 704)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1882, file: !145, line: 271, baseType: !1957, size: 128, offset: 768)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1962}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !1957, file: !145, line: 35, baseType: !215, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !1957, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !1957, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !1957, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !1882, file: !145, line: 274, baseType: !1881, size: 32, offset: 896)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1882, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1882, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1882, file: !145, line: 300, baseType: !1967, size: 96, offset: 1216)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !1968)
!1968 = !{!1969, !1970, !1971}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1967, file: !145, line: 153, baseType: !22, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1967, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1967, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1882, file: !145, line: 325, baseType: !1973, size: 32, offset: 1312)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !1975)
!1975 = !{!1976, !1982, !1983}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1974, file: !119, line: 5074, baseType: !1977, size: 96)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !1978)
!1978 = !{!1979, !1980, !1981}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1977, file: !244, line: 57, baseType: !247, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1977, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1977, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1974, file: !119, line: 5075, baseType: !1913, size: 64, offset: 96)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1974, file: !119, line: 5076, baseType: !1984, size: 32, offset: 160)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !1985)
!1985 = !{!1986}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1984, file: !254, line: 52, baseType: !22, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1882, file: !145, line: 343, baseType: !1988, size: 64, offset: 1344)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !1989)
!1989 = !{!1990, !1991}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1988, file: !198, line: 63, baseType: !110, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1988, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1876, file: !123, line: 111, baseType: !1881, size: 32, offset: 96)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1876, file: !123, line: 124, baseType: !109, size: 32, offset: 128)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1876, file: !123, line: 127, baseType: !167, size: 8, offset: 160)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1876, file: !123, line: 153, baseType: !1996, offset: 168)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1997, line: 33, elements: !1998)
!1997 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1998 = !{}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1872, file: !123, line: 170, baseType: !2000, size: 160, offset: 192)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !123, line: 83, size: 160, elements: !2001)
!2001 = !{!2002, !2003}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2000, file: !123, line: 86, baseType: !1881, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2000, file: !123, line: 92, baseType: !2004, size: 128, offset: 32)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !2005, line: 37, size: 128, elements: !2006)
!2005 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2006 = !{!2007, !2017}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !2004, file: !2005, line: 38, baseType: !2008, size: 96)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !2009)
!2009 = !{!2010, !2011, !2016}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2008, file: !157, line: 84, baseType: !1910, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !2008, file: !157, line: 85, baseType: !2012, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !2013)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!334, !1910, !1910}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !2008, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !2004, file: !2005, line: 39, baseType: !109, size: 32, offset: 96)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1872, file: !123, line: 188, baseType: !1881, size: 32, offset: 352)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1784, file: !1788, line: 43, type: !2021, isLocal: false, isDefinition: true, align: 512)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2022, size: 8704, elements: !2025)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !2023)
!2023 = !{!2024}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2022, file: !273, line: 48, baseType: !226, size: 8)
!2025 = !{!2026}
!2026 = !DISubrange(count: 1088)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1784, file: !1788, line: 44, type: !1882, isLocal: false, isDefinition: true)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1784, file: !1788, line: 48, type: !2031, isLocal: false, isDefinition: true)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1882, size: 1408, elements: !525)
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1784, file: !1788, line: 217, type: !334, isLocal: false, isDefinition: true)
!2034 = !DIGlobalVariableExpression(var: !2035, expr: !DIExpression())
!2035 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1784, file: !1788, line: 50, type: !2036, isLocal: true, isDefinition: true, align: 512)
!2036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2022, size: 3072, elements: !2037)
!2037 = !{!526, !2038}
!2038 = !DISubrange(count: 384)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "levels", scope: !2041, file: !1788, line: 232, type: !2061, isLocal: true, isDefinition: true)
!2041 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1788, file: !1788, line: 230, type: !2042, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !2044)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{null, !1787}
!2044 = !{!2045, !2046, !2056, !2060}
!2045 = !DILocalVariable(name: "level", arg: 1, scope: !2041, file: !1788, line: 230, type: !1787)
!2046 = !DILocalVariable(name: "entry", scope: !2041, file: !1788, line: 244, type: !2047)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2049)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !2050)
!2050 = !{!2051, !2055}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2049, file: !312, line: 60, baseType: !2052, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 32)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!109, !1806}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2049, file: !312, line: 65, baseType: !1806, size: 32, offset: 32)
!2056 = !DILocalVariable(name: "dev", scope: !2057, file: !1788, line: 247, type: !1806)
!2057 = distinct !DILexicalBlock(scope: !2058, file: !1788, line: 246, column: 64)
!2058 = distinct !DILexicalBlock(scope: !2059, file: !1788, line: 246, column: 2)
!2059 = distinct !DILexicalBlock(scope: !2041, file: !1788, line: 246, column: 2)
!2060 = !DILocalVariable(name: "rc", scope: !2057, file: !1788, line: 248, type: !109)
!2061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2047, size: 192, elements: !264)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2022, size: 16896, elements: !2063)
!2063 = !{!526, !277}
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "z_thread_monitor_lock", scope: !2066, file: !2088, line: 39, type: !2181, isLocal: true, isDefinition: true)
!2066 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2067, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2068, globals: !2084, splitDebugInlining: false, nameTableKind: None)
!2067 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2068 = !{!108, !324, !104, !167, !22, !109, !2069, !24, !235, !1127, !110, !111}
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2071)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2072)
!2072 = !{!2073, !2079}
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !2071, file: !128, line: 38, baseType: !2074, size: 32)
!2074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2071, file: !128, line: 38, size: 32, elements: !2075)
!2075 = !{!2076, !2078}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2074, file: !128, line: 39, baseType: !2077, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2074, file: !128, line: 40, baseType: !2077, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !2071, file: !128, line: 42, baseType: !2080, size: 32, offset: 32)
!2080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2071, file: !128, line: 42, size: 32, elements: !2081)
!2081 = !{!2082, !2083}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2080, file: !128, line: 43, baseType: !2077, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2080, file: !128, line: 44, baseType: !2077, size: 32)
!2084 = !{!2085, !2199, !2064}
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "states_str", scope: !2087, file: !2088, line: 276, type: !2198, isLocal: true, isDefinition: true)
!2087 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2088, file: !2088, line: 271, type: !2089, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !2189)
!2088 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!324, !2091, !1127, !235}
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !2092)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 32)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2094)
!2094 = !{!2095, !2139, !2151, !2152, !2153, !2160, !2161, !2162, !2163, !2169, !2184}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2093, file: !145, line: 247, baseType: !2096, size: 384)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2097)
!2097 = !{!2098, !2108, !2115, !2116, !2117, !2126, !2127, !2128}
!2098 = !DIDerivedType(tag: DW_TAG_member, scope: !2096, file: !145, line: 60, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2096, file: !145, line: 60, size: 64, elements: !2100)
!2100 = !{!2101, !2102}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2099, file: !145, line: 61, baseType: !2070, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2099, file: !145, line: 62, baseType: !2103, size: 64)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2104)
!2104 = !{!2105}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2103, file: !157, line: 50, baseType: !2106, size: 64)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2107, size: 64, elements: !162)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2096, file: !145, line: 68, baseType: !2109, size: 32, offset: 64)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2111)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2112)
!2112 = !{!2113}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2111, file: !123, line: 232, baseType: !2114, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2071)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2096, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2096, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2117 = !DIDerivedType(tag: DW_TAG_member, scope: !2096, file: !145, line: 90, baseType: !2118, size: 16, offset: 112)
!2118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2096, file: !145, line: 90, size: 16, elements: !2119)
!2119 = !{!2120, !2125}
!2120 = !DIDerivedType(tag: DW_TAG_member, scope: !2118, file: !145, line: 91, baseType: !2121, size: 16)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2118, file: !145, line: 91, size: 16, elements: !2122)
!2122 = !{!2123, !2124}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2121, file: !145, line: 96, baseType: !177, size: 8)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2121, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2118, file: !145, line: 100, baseType: !181, size: 16)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2096, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2096, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2096, file: !145, line: 131, baseType: !2129, size: 192, offset: 192)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2130)
!2130 = !{!2131, !2132, !2138}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2129, file: !123, line: 245, baseType: !2070, size: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2129, file: !123, line: 246, baseType: !2133, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2134)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!2135 = !DISubroutineType(types: !2136)
!2136 = !{null, !2137}
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2129, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2093, file: !145, line: 250, baseType: !2140, size: 288, offset: 384)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2141)
!2141 = !{!2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2140, file: !198, line: 26, baseType: !110, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2140, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2140, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2140, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2140, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2140, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2140, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2140, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2140, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2093, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2093, file: !145, line: 256, baseType: !2110, size: 64, offset: 704)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2093, file: !145, line: 271, baseType: !2154, size: 128, offset: 768)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2155)
!2155 = !{!2156, !2157, !2158, !2159}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2154, file: !145, line: 35, baseType: !215, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2154, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2154, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2154, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2093, file: !145, line: 274, baseType: !2092, size: 32, offset: 896)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2093, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2093, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2093, file: !145, line: 300, baseType: !2164, size: 96, offset: 1216)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2165)
!2165 = !{!2166, !2167, !2168}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2164, file: !145, line: 153, baseType: !22, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2164, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2164, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2093, file: !145, line: 325, baseType: !2170, size: 32, offset: 1312)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 32)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2172)
!2172 = !{!2173, !2179, !2180}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2171, file: !119, line: 5074, baseType: !2174, size: 96)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2175)
!2175 = !{!2176, !2177, !2178}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2174, file: !244, line: 57, baseType: !247, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2174, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2174, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2171, file: !119, line: 5075, baseType: !2110, size: 64, offset: 96)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2171, file: !119, line: 5076, baseType: !2181, size: 32, offset: 160)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2182)
!2182 = !{!2183}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2181, file: !254, line: 52, baseType: !22, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2093, file: !145, line: 343, baseType: !2185, size: 64, offset: 1344)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2186)
!2186 = !{!2187, !2188}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2185, file: !198, line: 63, baseType: !110, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2185, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2189 = !{!2190, !2191, !2192, !2193, !2194, !2195, !2196}
!2190 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2087, file: !2088, line: 271, type: !2091)
!2191 = !DILocalVariable(name: "buf", arg: 2, scope: !2087, file: !2088, line: 271, type: !1127)
!2192 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2087, file: !2088, line: 271, type: !235)
!2193 = !DILocalVariable(name: "off", scope: !2087, file: !2088, line: 273, type: !235)
!2194 = !DILocalVariable(name: "bit", scope: !2087, file: !2088, line: 274, type: !167)
!2195 = !DILocalVariable(name: "thread_state", scope: !2087, file: !2088, line: 275, type: !167)
!2196 = !DILocalVariable(name: "index", scope: !2197, file: !2088, line: 293, type: !167)
!2197 = distinct !DILexicalBlock(scope: !2087, file: !2088, line: 293, column: 2)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 256, elements: !1446)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "states_sz", scope: !2087, file: !2088, line: 279, type: !2201, isLocal: true, isDefinition: true)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1718, size: 256, elements: !1446)
!2202 = !DIGlobalVariableExpression(var: !2203, expr: !DIExpression())
!2203 = distinct !DIGlobalVariable(name: "lock", scope: !2204, file: !2320, line: 47, type: !2311, isLocal: true, isDefinition: true)
!2204 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2205, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2206, globals: !2319, splitDebugInlining: false, nameTableKind: None)
!2205 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2206 = !{!334, !108, !109, !2207, !2222}
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2209)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2210)
!2210 = !{!2211, !2217}
!2211 = !DIDerivedType(tag: DW_TAG_member, scope: !2209, file: !128, line: 38, baseType: !2212, size: 32)
!2212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2209, file: !128, line: 38, size: 32, elements: !2213)
!2213 = !{!2214, !2216}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2212, file: !128, line: 39, baseType: !2215, size: 32)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2212, file: !128, line: 40, baseType: !2215, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, scope: !2209, file: !128, line: 42, baseType: !2218, size: 32, offset: 32)
!2218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2209, file: !128, line: 42, size: 32, elements: !2219)
!2219 = !{!2220, !2221}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2218, file: !128, line: 43, baseType: !2215, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2218, file: !128, line: 44, baseType: !2215, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2224)
!2224 = !{!2225, !2269, !2281, !2282, !2283, !2290, !2291, !2292, !2293, !2299, !2314}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2223, file: !145, line: 247, baseType: !2226, size: 384)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2227)
!2227 = !{!2228, !2238, !2245, !2246, !2247, !2256, !2257, !2258}
!2228 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !145, line: 60, baseType: !2229, size: 64)
!2229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2226, file: !145, line: 60, size: 64, elements: !2230)
!2230 = !{!2231, !2232}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2229, file: !145, line: 61, baseType: !2208, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2229, file: !145, line: 62, baseType: !2233, size: 64)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2234)
!2234 = !{!2235}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2233, file: !157, line: 50, baseType: !2236, size: 64)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2237, size: 64, elements: !162)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2226, file: !145, line: 68, baseType: !2239, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2241)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2242)
!2242 = !{!2243}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2241, file: !123, line: 232, baseType: !2244, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2209)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2226, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2226, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2247 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !145, line: 90, baseType: !2248, size: 16, offset: 112)
!2248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2226, file: !145, line: 90, size: 16, elements: !2249)
!2249 = !{!2250, !2255}
!2250 = !DIDerivedType(tag: DW_TAG_member, scope: !2248, file: !145, line: 91, baseType: !2251, size: 16)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2248, file: !145, line: 91, size: 16, elements: !2252)
!2252 = !{!2253, !2254}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2251, file: !145, line: 96, baseType: !177, size: 8)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2251, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2248, file: !145, line: 100, baseType: !181, size: 16)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2226, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2226, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2226, file: !145, line: 131, baseType: !2259, size: 192, offset: 192)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2260)
!2260 = !{!2261, !2262, !2268}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2259, file: !123, line: 245, baseType: !2208, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2259, file: !123, line: 246, baseType: !2263, size: 32, offset: 64)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2264)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2265 = !DISubroutineType(types: !2266)
!2266 = !{null, !2267}
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2259, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2223, file: !145, line: 250, baseType: !2270, size: 288, offset: 384)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2271)
!2271 = !{!2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2270, file: !198, line: 26, baseType: !110, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2270, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2270, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2270, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2270, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2270, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2270, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2270, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2270, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2223, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2223, file: !145, line: 256, baseType: !2240, size: 64, offset: 704)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2223, file: !145, line: 271, baseType: !2284, size: 128, offset: 768)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2285)
!2285 = !{!2286, !2287, !2288, !2289}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2284, file: !145, line: 35, baseType: !215, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2284, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2284, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2284, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2223, file: !145, line: 274, baseType: !2222, size: 32, offset: 896)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2223, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2223, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2223, file: !145, line: 300, baseType: !2294, size: 96, offset: 1216)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2295)
!2295 = !{!2296, !2297, !2298}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2294, file: !145, line: 153, baseType: !22, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2294, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2294, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2223, file: !145, line: 325, baseType: !2300, size: 32, offset: 1312)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 32)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2302)
!2302 = !{!2303, !2309, !2310}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2301, file: !119, line: 5074, baseType: !2304, size: 96)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2305)
!2305 = !{!2306, !2307, !2308}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2304, file: !244, line: 57, baseType: !247, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2304, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2304, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2301, file: !119, line: 5075, baseType: !2240, size: 64, offset: 96)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2301, file: !119, line: 5076, baseType: !2311, size: 32, offset: 160)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2312)
!2312 = !{!2313}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2311, file: !254, line: 52, baseType: !22, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2223, file: !145, line: 343, baseType: !2315, size: 64, offset: 1344)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2316)
!2316 = !{!2317, !2318}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2315, file: !198, line: 63, baseType: !110, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2315, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2319 = !{!2202}
!2320 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2323, file: !2441, line: 56, type: !2429, isLocal: false, isDefinition: true)
!2323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2325, globals: !2438, splitDebugInlining: false, nameTableKind: None)
!2324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2325 = !{!2326, !1127, !108, !2437, !1821, !104, !736, !109, !110, !111}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2328)
!2328 = !{!2329, !2387, !2399, !2400, !2401, !2408, !2409, !2410, !2411, !2417, !2432}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2327, file: !145, line: 247, baseType: !2330, size: 384)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2331)
!2331 = !{!2332, !2356, !2363, !2364, !2365, !2374, !2375, !2376}
!2332 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !145, line: 60, baseType: !2333, size: 64)
!2333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2330, file: !145, line: 60, size: 64, elements: !2334)
!2334 = !{!2335, !2350}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2333, file: !145, line: 61, baseType: !2336, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2337)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2338)
!2338 = !{!2339, !2345}
!2339 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !128, line: 38, baseType: !2340, size: 32)
!2340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !128, line: 38, size: 32, elements: !2341)
!2341 = !{!2342, !2344}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2340, file: !128, line: 39, baseType: !2343, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2340, file: !128, line: 40, baseType: !2343, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !128, line: 42, baseType: !2346, size: 32, offset: 32)
!2346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !128, line: 42, size: 32, elements: !2347)
!2347 = !{!2348, !2349}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2346, file: !128, line: 43, baseType: !2343, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2346, file: !128, line: 44, baseType: !2343, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2333, file: !145, line: 62, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2352)
!2352 = !{!2353}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2351, file: !157, line: 50, baseType: !2354, size: 64)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2355, size: 64, elements: !162)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2330, file: !145, line: 68, baseType: !2357, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2359)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2360)
!2360 = !{!2361}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2359, file: !123, line: 232, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2337)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2330, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2330, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !145, line: 90, baseType: !2366, size: 16, offset: 112)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2330, file: !145, line: 90, size: 16, elements: !2367)
!2367 = !{!2368, !2373}
!2368 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !145, line: 91, baseType: !2369, size: 16)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2366, file: !145, line: 91, size: 16, elements: !2370)
!2370 = !{!2371, !2372}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2369, file: !145, line: 96, baseType: !177, size: 8)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2369, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2366, file: !145, line: 100, baseType: !181, size: 16)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2330, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2330, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2330, file: !145, line: 131, baseType: !2377, size: 192, offset: 192)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2378)
!2378 = !{!2379, !2380, !2386}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2377, file: !123, line: 245, baseType: !2336, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2377, file: !123, line: 246, baseType: !2381, size: 32, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2382)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{null, !2385}
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2377, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2327, file: !145, line: 250, baseType: !2388, size: 288, offset: 384)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2389)
!2389 = !{!2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2388, file: !198, line: 26, baseType: !110, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2388, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2388, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2388, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2388, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2388, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2388, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2388, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2388, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2327, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2327, file: !145, line: 256, baseType: !2358, size: 64, offset: 704)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2327, file: !145, line: 271, baseType: !2402, size: 128, offset: 768)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2403)
!2403 = !{!2404, !2405, !2406, !2407}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2402, file: !145, line: 35, baseType: !215, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2402, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2402, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2402, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2327, file: !145, line: 274, baseType: !2326, size: 32, offset: 896)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2327, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2327, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2327, file: !145, line: 300, baseType: !2412, size: 96, offset: 1216)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2413)
!2413 = !{!2414, !2415, !2416}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2412, file: !145, line: 153, baseType: !22, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2412, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2412, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2327, file: !145, line: 325, baseType: !2418, size: 32, offset: 1312)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2420)
!2420 = !{!2421, !2427, !2428}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2419, file: !119, line: 5074, baseType: !2422, size: 96)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2423)
!2423 = !{!2424, !2425, !2426}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2422, file: !244, line: 57, baseType: !247, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2422, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2422, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2419, file: !119, line: 5075, baseType: !2358, size: 64, offset: 96)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2419, file: !119, line: 5076, baseType: !2429, size: 32, offset: 160)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2430)
!2430 = !{!2431}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2429, file: !254, line: 52, baseType: !22, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2327, file: !145, line: 343, baseType: !2433, size: 64, offset: 1344)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2434)
!2434 = !{!2435, !2436}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2433, file: !198, line: 63, baseType: !110, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2433, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 32)
!2438 = !{!2321, !2439, !2442, !2444}
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2323, file: !2441, line: 404, type: !109, isLocal: true, isDefinition: true)
!2441 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2442 = !DIGlobalVariableExpression(var: !2443, expr: !DIExpression())
!2443 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2323, file: !2441, line: 405, type: !109, isLocal: true, isDefinition: true)
!2444 = !DIGlobalVariableExpression(var: !2445, expr: !DIExpression())
!2445 = distinct !DIGlobalVariable(name: "pending_current", scope: !2323, file: !2441, line: 425, type: !2326, isLocal: true, isDefinition: true)
!2446 = !DIGlobalVariableExpression(var: !2447, expr: !DIExpression())
!2447 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2448, file: !2478, line: 19, type: !2484, isLocal: true, isDefinition: true)
!2448 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2449, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2450, globals: !2475, splitDebugInlining: false, nameTableKind: None)
!2449 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2450 = !{!104, !108, !736, !110, !111, !109, !2451, !1127, !106}
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 32)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2453)
!2453 = !{!2454, !2469, !2474}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2452, file: !123, line: 245, baseType: !2455, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2456)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2457)
!2457 = !{!2458, !2464}
!2458 = !DIDerivedType(tag: DW_TAG_member, scope: !2456, file: !128, line: 38, baseType: !2459, size: 32)
!2459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2456, file: !128, line: 38, size: 32, elements: !2460)
!2460 = !{!2461, !2463}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2459, file: !128, line: 39, baseType: !2462, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2459, file: !128, line: 40, baseType: !2462, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, scope: !2456, file: !128, line: 42, baseType: !2465, size: 32, offset: 32)
!2465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2456, file: !128, line: 42, size: 32, elements: !2466)
!2466 = !{!2467, !2468}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2465, file: !128, line: 43, baseType: !2462, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2465, file: !128, line: 44, baseType: !2462, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2452, file: !123, line: 246, baseType: !2470, size: 32, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2471)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2472 = !DISubroutineType(types: !2473)
!2473 = !{null, !2451}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2452, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2475 = !{!2476, !2446, !2479, !2481}
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2448, file: !2478, line: 15, type: !111, isLocal: true, isDefinition: true)
!2478 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2479 = !DIGlobalVariableExpression(var: !2480, expr: !DIExpression())
!2480 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2448, file: !2478, line: 25, type: !109, isLocal: true, isDefinition: true)
!2481 = !DIGlobalVariableExpression(var: !2482, expr: !DIExpression())
!2482 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2448, file: !2478, line: 17, type: !2483, isLocal: true, isDefinition: true)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2456)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2485)
!2485 = !{!2486}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2484, file: !254, line: 52, baseType: !22, size: 32)
!2487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2489 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2490, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2491, retainedTypes: !2497, splitDebugInlining: false, nameTableKind: None)
!2490 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/rb.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2491 = !{!2492, !30}
!2492 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rb_color", file: !2493, line: 19, baseType: !32, size: 32, elements: !2494)
!2493 = !DIFile(filename: "zephyr/lib/os/rb.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2494 = !{!2495, !2496}
!2495 = !DIEnumerator(name: "RED", value: 0)
!2496 = !DIEnumerator(name: "BLACK", value: 1)
!2497 = !{!108, !109, !22, !2498, !167}
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 32)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2500)
!2500 = !{!2501}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2499, file: !157, line: 50, baseType: !2502, size: 64)
!2502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2498, size: 64, elements: !162)
!2503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2505 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2506, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2507, retainedTypes: !2527, splitDebugInlining: false, nameTableKind: None)
!2506 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2507 = !{!2508, !2516}
!2508 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2509, line: 69, baseType: !32, size: 32, elements: !2510)
!2509 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2510 = !{!2511, !2512, !2513, !2514, !2515}
!2511 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2512 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2513 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2514 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2515 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2509, line: 56, baseType: !32, size: 32, elements: !2517)
!2517 = !{!2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526}
!2518 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2519 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2520 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2521 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2522 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2523 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2524 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2525 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2526 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2527 = !{!109, !2508, !2516, !2528, !178, !341, !2530, !2531, !168, !182, !324, !235, !108, !22, !32, !2533, !2534, !2535, !103, !2536, !107, !2537, !2529, !2538, !2539, !2540, !2541}
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2509, line: 31, baseType: !2529)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !236, line: 329, baseType: !32)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2509, line: 32, baseType: !2532)
!2532 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !236, line: 145, baseType: !109)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 32)
!2542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2543, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2543 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2545, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2545 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2548, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2548 = !{!2549, !30}
!2549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2550, line: 27, baseType: !32, size: 32, elements: !2551)
!2550 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2551 = !{!2552, !2553, !2554, !2555, !2556}
!2552 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2553 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2554 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2555 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2556 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2559, retainedTypes: !2560, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2559 = !{!595, !2549, !30}
!2560 = !{!762, !2561, !108, !109, !736, !110, !167, !2578}
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !2563)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !2564)
!2564 = !{!2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2563, file: !536, line: 413, baseType: !1539, size: 256)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2563, file: !536, line: 414, baseType: !1541, size: 768, offset: 256)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2563, file: !536, line: 415, baseType: !1539, size: 256, offset: 1024)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2563, file: !536, line: 416, baseType: !1541, size: 768, offset: 1280)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2563, file: !536, line: 417, baseType: !1539, size: 256, offset: 2048)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2563, file: !536, line: 418, baseType: !1541, size: 768, offset: 2304)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2563, file: !536, line: 419, baseType: !1539, size: 256, offset: 3072)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2563, file: !536, line: 420, baseType: !1541, size: 768, offset: 3328)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2563, file: !536, line: 421, baseType: !1539, size: 256, offset: 4096)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2563, file: !536, line: 422, baseType: !1552, size: 1792, offset: 4352)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2563, file: !536, line: 423, baseType: !1556, size: 1920, offset: 6144)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2563, file: !536, line: 424, baseType: !1561, size: 20608, offset: 8064)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2563, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2580)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2581)
!2581 = !{!2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2580, file: !536, line: 447, baseType: !540, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2580, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2580, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2580, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2580, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2580, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2580, file: !536, line: 453, baseType: !1576, size: 96, offset: 192)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2580, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2580, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2580, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2580, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2580, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2580, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2580, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2580, file: !536, line: 461, baseType: !1585, size: 64, offset: 512)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2580, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2580, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2580, file: !536, line: 464, baseType: !1589, size: 128, offset: 640)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2580, file: !536, line: 465, baseType: !1591, size: 160, offset: 768)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2580, file: !536, line: 466, baseType: !1593, size: 160, offset: 928)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2580, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2604, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2604 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2606, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2607, splitDebugInlining: false, nameTableKind: None)
!2606 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2607 = !{!108, !109, !22, !2608}
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2610)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2611)
!2611 = !{!2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2610, file: !536, line: 447, baseType: !540, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2610, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2610, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2610, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2610, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2610, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2610, file: !536, line: 453, baseType: !1576, size: 96, offset: 192)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2610, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2610, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2610, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2610, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2610, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2610, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2610, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2610, file: !536, line: 461, baseType: !1585, size: 64, offset: 512)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2610, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2610, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2610, file: !536, line: 464, baseType: !1589, size: 128, offset: 640)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2610, file: !536, line: 465, baseType: !1591, size: 160, offset: 768)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2610, file: !536, line: 466, baseType: !1593, size: 160, offset: 928)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2610, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2633 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2634, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2635, splitDebugInlining: false, nameTableKind: None)
!2634 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2635 = !{!2636, !108, !109}
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2638)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2639)
!2639 = !{!2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2638, file: !536, line: 447, baseType: !540, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2638, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2638, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2638, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2638, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2638, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2638, file: !536, line: 453, baseType: !1576, size: 96, offset: 192)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2638, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2638, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2638, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2638, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2638, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2638, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2638, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2638, file: !536, line: 461, baseType: !1585, size: 64, offset: 512)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2638, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2638, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2638, file: !536, line: 464, baseType: !1589, size: 128, offset: 640)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2638, file: !536, line: 465, baseType: !1591, size: 160, offset: 768)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2638, file: !536, line: 466, baseType: !1593, size: 160, offset: 928)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2638, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2661 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2662, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2663, splitDebugInlining: false, nameTableKind: None)
!2662 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2663 = !{!2664, !110, !108, !109}
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 32)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2666, line: 98, size: 256, elements: !2667)
!2666 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2667 = !{!2668, !2673, !2678, !2683, !2688, !2693, !2698, !2703}
!2668 = !DIDerivedType(tag: DW_TAG_member, scope: !2665, file: !2666, line: 99, baseType: !2669, size: 32)
!2669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2665, file: !2666, line: 99, size: 32, elements: !2670)
!2670 = !{!2671, !2672}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2669, file: !2666, line: 99, baseType: !110, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2669, file: !2666, line: 99, baseType: !110, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, scope: !2665, file: !2666, line: 100, baseType: !2674, size: 32, offset: 32)
!2674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2665, file: !2666, line: 100, size: 32, elements: !2675)
!2675 = !{!2676, !2677}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2674, file: !2666, line: 100, baseType: !110, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2674, file: !2666, line: 100, baseType: !110, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, scope: !2665, file: !2666, line: 101, baseType: !2679, size: 32, offset: 64)
!2679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2665, file: !2666, line: 101, size: 32, elements: !2680)
!2680 = !{!2681, !2682}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2679, file: !2666, line: 101, baseType: !110, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2679, file: !2666, line: 101, baseType: !110, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, scope: !2665, file: !2666, line: 102, baseType: !2684, size: 32, offset: 96)
!2684 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2665, file: !2666, line: 102, size: 32, elements: !2685)
!2685 = !{!2686, !2687}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2684, file: !2666, line: 102, baseType: !110, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2684, file: !2666, line: 102, baseType: !110, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, scope: !2665, file: !2666, line: 103, baseType: !2689, size: 32, offset: 128)
!2689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2665, file: !2666, line: 103, size: 32, elements: !2690)
!2690 = !{!2691, !2692}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2689, file: !2666, line: 103, baseType: !110, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2689, file: !2666, line: 103, baseType: !110, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2665, file: !2666, line: 104, baseType: !2694, size: 32, offset: 160)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2665, file: !2666, line: 104, size: 32, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2694, file: !2666, line: 104, baseType: !110, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2694, file: !2666, line: 104, baseType: !110, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, scope: !2665, file: !2666, line: 105, baseType: !2699, size: 32, offset: 192)
!2699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2665, file: !2666, line: 105, size: 32, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2699, file: !2666, line: 105, baseType: !110, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2699, file: !2666, line: 105, baseType: !110, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2665, file: !2666, line: 106, baseType: !110, size: 32, offset: 224)
!2704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2705, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2548, retainedTypes: !2706, splitDebugInlining: false, nameTableKind: None)
!2705 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2706 = !{!2707, !108, !109, !2732, !2775, !110}
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2709)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2710)
!2710 = !{!2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2709, file: !536, line: 447, baseType: !540, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2709, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2709, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2709, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2709, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2709, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2709, file: !536, line: 453, baseType: !1576, size: 96, offset: 192)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2709, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2709, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2709, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2709, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2709, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2709, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2709, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2709, file: !536, line: 461, baseType: !1585, size: 64, offset: 512)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2709, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2709, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2709, file: !536, line: 464, baseType: !1589, size: 128, offset: 640)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2709, file: !536, line: 465, baseType: !1591, size: 160, offset: 768)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2709, file: !536, line: 466, baseType: !1593, size: 160, offset: 928)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2709, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2666, line: 141, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2666, line: 97, size: 256, elements: !2735)
!2735 = !{!2736}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2734, file: !2666, line: 107, baseType: !2737, size: 256)
!2737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2666, line: 98, size: 256, elements: !2738)
!2738 = !{!2739, !2744, !2749, !2754, !2759, !2764, !2769, !2774}
!2739 = !DIDerivedType(tag: DW_TAG_member, scope: !2737, file: !2666, line: 99, baseType: !2740, size: 32)
!2740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2737, file: !2666, line: 99, size: 32, elements: !2741)
!2741 = !{!2742, !2743}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2740, file: !2666, line: 99, baseType: !110, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2740, file: !2666, line: 99, baseType: !110, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, scope: !2737, file: !2666, line: 100, baseType: !2745, size: 32, offset: 32)
!2745 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2737, file: !2666, line: 100, size: 32, elements: !2746)
!2746 = !{!2747, !2748}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2745, file: !2666, line: 100, baseType: !110, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2745, file: !2666, line: 100, baseType: !110, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, scope: !2737, file: !2666, line: 101, baseType: !2750, size: 32, offset: 64)
!2750 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2737, file: !2666, line: 101, size: 32, elements: !2751)
!2751 = !{!2752, !2753}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2750, file: !2666, line: 101, baseType: !110, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2750, file: !2666, line: 101, baseType: !110, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, scope: !2737, file: !2666, line: 102, baseType: !2755, size: 32, offset: 96)
!2755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2737, file: !2666, line: 102, size: 32, elements: !2756)
!2756 = !{!2757, !2758}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2755, file: !2666, line: 102, baseType: !110, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2755, file: !2666, line: 102, baseType: !110, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, scope: !2737, file: !2666, line: 103, baseType: !2760, size: 32, offset: 128)
!2760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2737, file: !2666, line: 103, size: 32, elements: !2761)
!2761 = !{!2762, !2763}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2760, file: !2666, line: 103, baseType: !110, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2760, file: !2666, line: 103, baseType: !110, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, scope: !2737, file: !2666, line: 104, baseType: !2765, size: 32, offset: 160)
!2765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2737, file: !2666, line: 104, size: 32, elements: !2766)
!2766 = !{!2767, !2768}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2765, file: !2666, line: 104, baseType: !110, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2765, file: !2666, line: 104, baseType: !110, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, scope: !2737, file: !2666, line: 105, baseType: !2770, size: 32, offset: 192)
!2770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2737, file: !2666, line: 105, size: 32, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2770, file: !2666, line: 105, baseType: !110, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2770, file: !2666, line: 105, baseType: !110, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2737, file: !2666, line: 106, baseType: !110, size: 32, offset: 224)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!2776 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2777, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1524, retainedTypes: !2778, splitDebugInlining: false, nameTableKind: None)
!2777 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2778 = !{!762, !736, !167, !110, !2779, !2796}
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !2781)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !2782)
!2782 = !{!2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2781, file: !536, line: 413, baseType: !1539, size: 256)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2781, file: !536, line: 414, baseType: !1541, size: 768, offset: 256)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2781, file: !536, line: 415, baseType: !1539, size: 256, offset: 1024)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2781, file: !536, line: 416, baseType: !1541, size: 768, offset: 1280)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2781, file: !536, line: 417, baseType: !1539, size: 256, offset: 2048)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2781, file: !536, line: 418, baseType: !1541, size: 768, offset: 2304)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2781, file: !536, line: 419, baseType: !1539, size: 256, offset: 3072)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2781, file: !536, line: 420, baseType: !1541, size: 768, offset: 3328)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2781, file: !536, line: 421, baseType: !1539, size: 256, offset: 4096)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2781, file: !536, line: 422, baseType: !1552, size: 1792, offset: 4352)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2781, file: !536, line: 423, baseType: !1556, size: 1920, offset: 6144)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2781, file: !536, line: 424, baseType: !1561, size: 20608, offset: 8064)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2781, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2798)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2799)
!2799 = !{!2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2798, file: !536, line: 447, baseType: !540, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2798, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2798, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2798, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2798, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2798, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2798, file: !536, line: 453, baseType: !1576, size: 96, offset: 192)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2798, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2798, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2798, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2798, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2798, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2798, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2798, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2798, file: !536, line: 461, baseType: !1585, size: 64, offset: 512)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2798, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2798, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2798, file: !536, line: 464, baseType: !1589, size: 128, offset: 640)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2798, file: !536, line: 465, baseType: !1591, size: 160, offset: 768)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2798, file: !536, line: 466, baseType: !1593, size: 160, offset: 928)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2798, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2821 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2822, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2823, splitDebugInlining: false, nameTableKind: None)
!2822 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2823 = !{!2824, !108, !109}
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2826)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2827)
!2827 = !{!2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2826, file: !536, line: 447, baseType: !540, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2826, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2826, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2826, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2826, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2826, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2826, file: !536, line: 453, baseType: !1576, size: 96, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2826, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2826, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2826, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2826, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2826, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2826, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2826, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2826, file: !536, line: 461, baseType: !1585, size: 64, offset: 512)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2826, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2826, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2826, file: !536, line: 464, baseType: !1589, size: 128, offset: 640)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2826, file: !536, line: 465, baseType: !1591, size: 160, offset: 768)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2826, file: !536, line: 466, baseType: !1593, size: 160, offset: 928)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2826, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2851, splitDebugInlining: false, nameTableKind: None)
!2850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2851 = !{!226, !1127, !235, !962, !2852, !168, !108}
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!2854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2855, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2856, splitDebugInlining: false, nameTableKind: None)
!2855 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2856 = !{!2857}
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 370, baseType: !2859)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 336, size: 1152, elements: !2860)
!2860 = !{!2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2859, file: !297, line: 338, baseType: !301, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2859, file: !297, line: 339, baseType: !301, size: 32, offset: 32)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2859, file: !297, line: 340, baseType: !301, size: 32, offset: 64)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2859, file: !297, line: 341, baseType: !301, size: 32, offset: 96)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2859, file: !297, line: 342, baseType: !301, size: 32, offset: 128)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2859, file: !297, line: 343, baseType: !301, size: 32, offset: 160)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2859, file: !297, line: 344, baseType: !301, size: 32, offset: 192)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2859, file: !297, line: 345, baseType: !110, size: 32, offset: 224)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2859, file: !297, line: 346, baseType: !301, size: 32, offset: 256)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2859, file: !297, line: 347, baseType: !301, size: 32, offset: 288)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2859, file: !297, line: 348, baseType: !828, size: 64, offset: 320)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2859, file: !297, line: 349, baseType: !301, size: 32, offset: 384)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2859, file: !297, line: 350, baseType: !301, size: 32, offset: 416)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2859, file: !297, line: 351, baseType: !301, size: 32, offset: 448)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2859, file: !297, line: 352, baseType: !110, size: 32, offset: 480)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2859, file: !297, line: 353, baseType: !301, size: 32, offset: 512)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2859, file: !297, line: 354, baseType: !301, size: 32, offset: 544)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2859, file: !297, line: 355, baseType: !828, size: 64, offset: 576)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2859, file: !297, line: 356, baseType: !301, size: 32, offset: 640)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2859, file: !297, line: 357, baseType: !301, size: 32, offset: 672)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2859, file: !297, line: 358, baseType: !301, size: 32, offset: 704)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2859, file: !297, line: 359, baseType: !110, size: 32, offset: 736)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2859, file: !297, line: 360, baseType: !301, size: 32, offset: 768)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2859, file: !297, line: 361, baseType: !301, size: 32, offset: 800)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2859, file: !297, line: 362, baseType: !828, size: 64, offset: 832)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2859, file: !297, line: 363, baseType: !301, size: 32, offset: 896)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2859, file: !297, line: 364, baseType: !301, size: 32, offset: 928)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2859, file: !297, line: 365, baseType: !828, size: 64, offset: 960)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2859, file: !297, line: 366, baseType: !301, size: 32, offset: 1024)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2859, file: !297, line: 367, baseType: !301, size: 32, offset: 1056)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2859, file: !297, line: 368, baseType: !849, size: 32, offset: 1088)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2859, file: !297, line: 369, baseType: !301, size: 32, offset: 1120)
!2893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2894, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2894 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2897, retainedTypes: !2913, splitDebugInlining: false, nameTableKind: None)
!2896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2897 = !{!2898, !2905, !2909}
!2898 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2899, line: 38, baseType: !32, size: 32, elements: !2900)
!2899 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2900 = !{!2901, !2902, !2903, !2904}
!2901 = !DIEnumerator(name: "HAL_OK", value: 0)
!2902 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2903 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2904 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2905 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !801, line: 184, baseType: !32, size: 32, elements: !2906)
!2906 = !{!2907, !2908}
!2907 = !DIEnumerator(name: "RESET", value: 0)
!2908 = !DIEnumerator(name: "SET", value: 1)
!2909 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !801, line: 190, baseType: !32, size: 32, elements: !2910)
!2910 = !{!2911, !2912}
!2911 = !DIEnumerator(name: "DISABLE", value: 0)
!2912 = !DIEnumerator(name: "ENABLE", value: 1)
!2913 = !{!108, !2914, !167, !110, !1440, !2950, !2956, !2967, !181, !2968, !111}
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 370, baseType: !2916)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 336, size: 1152, elements: !2917)
!2917 = !{!2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2916, file: !297, line: 338, baseType: !301, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2916, file: !297, line: 339, baseType: !301, size: 32, offset: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2916, file: !297, line: 340, baseType: !301, size: 32, offset: 64)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2916, file: !297, line: 341, baseType: !301, size: 32, offset: 96)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2916, file: !297, line: 342, baseType: !301, size: 32, offset: 128)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2916, file: !297, line: 343, baseType: !301, size: 32, offset: 160)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2916, file: !297, line: 344, baseType: !301, size: 32, offset: 192)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2916, file: !297, line: 345, baseType: !110, size: 32, offset: 224)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2916, file: !297, line: 346, baseType: !301, size: 32, offset: 256)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2916, file: !297, line: 347, baseType: !301, size: 32, offset: 288)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2916, file: !297, line: 348, baseType: !828, size: 64, offset: 320)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2916, file: !297, line: 349, baseType: !301, size: 32, offset: 384)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2916, file: !297, line: 350, baseType: !301, size: 32, offset: 416)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2916, file: !297, line: 351, baseType: !301, size: 32, offset: 448)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2916, file: !297, line: 352, baseType: !110, size: 32, offset: 480)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2916, file: !297, line: 353, baseType: !301, size: 32, offset: 512)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2916, file: !297, line: 354, baseType: !301, size: 32, offset: 544)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2916, file: !297, line: 355, baseType: !828, size: 64, offset: 576)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2916, file: !297, line: 356, baseType: !301, size: 32, offset: 640)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2916, file: !297, line: 357, baseType: !301, size: 32, offset: 672)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2916, file: !297, line: 358, baseType: !301, size: 32, offset: 704)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2916, file: !297, line: 359, baseType: !110, size: 32, offset: 736)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2916, file: !297, line: 360, baseType: !301, size: 32, offset: 768)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2916, file: !297, line: 361, baseType: !301, size: 32, offset: 800)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2916, file: !297, line: 362, baseType: !828, size: 64, offset: 832)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2916, file: !297, line: 363, baseType: !301, size: 32, offset: 896)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2916, file: !297, line: 364, baseType: !301, size: 32, offset: 928)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2916, file: !297, line: 365, baseType: !828, size: 64, offset: 960)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2916, file: !297, line: 366, baseType: !301, size: 32, offset: 1024)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2916, file: !297, line: 367, baseType: !301, size: 32, offset: 1056)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2916, file: !297, line: 368, baseType: !849, size: 32, offset: 1088)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2916, file: !297, line: 369, baseType: !301, size: 32, offset: 1120)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !297, line: 330, baseType: !2952)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 326, size: 64, elements: !2953)
!2953 = !{!2954, !2955}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2952, file: !297, line: 328, baseType: !301, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2952, file: !297, line: 329, baseType: !301, size: 32, offset: 32)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !297, line: 259, baseType: !2958)
!2958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 250, size: 224, elements: !2959)
!2959 = !{!2960, !2961, !2962, !2963, !2964, !2965, !2966}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2958, file: !297, line: 252, baseType: !301, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2958, file: !297, line: 253, baseType: !301, size: 32, offset: 32)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2958, file: !297, line: 254, baseType: !301, size: 32, offset: 64)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2958, file: !297, line: 255, baseType: !301, size: 32, offset: 96)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2958, file: !297, line: 256, baseType: !301, size: 32, offset: 128)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2958, file: !297, line: 257, baseType: !301, size: 32, offset: 160)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2958, file: !297, line: 258, baseType: !301, size: 32, offset: 192)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !297, line: 276, baseType: !2970)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 265, size: 320, elements: !2971)
!2971 = !{!2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2970, file: !297, line: 267, baseType: !301, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2970, file: !297, line: 268, baseType: !301, size: 32, offset: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2970, file: !297, line: 269, baseType: !301, size: 32, offset: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2970, file: !297, line: 270, baseType: !301, size: 32, offset: 96)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2970, file: !297, line: 271, baseType: !301, size: 32, offset: 128)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2970, file: !297, line: 272, baseType: !301, size: 32, offset: 160)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2970, file: !297, line: 273, baseType: !301, size: 32, offset: 192)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2970, file: !297, line: 274, baseType: !301, size: 32, offset: 224)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2970, file: !297, line: 275, baseType: !1116, size: 64, offset: 256)
!2981 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2982, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2983, retainedTypes: !2984, splitDebugInlining: false, nameTableKind: None)
!2982 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!2983 = !{!800}
!2984 = !{!2985, !110, !2993, !2999, !3010}
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !536, line: 770, baseType: !2987)
!2987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 764, size: 128, elements: !2988)
!2988 = !{!2989, !2990, !2991, !2992}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2987, file: !536, line: 766, baseType: !301, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2987, file: !536, line: 767, baseType: !301, size: 32, offset: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2987, file: !536, line: 768, baseType: !301, size: 32, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2987, file: !536, line: 769, baseType: !540, size: 32, offset: 96)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !297, line: 330, baseType: !2995)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 326, size: 64, elements: !2996)
!2996 = !{!2997, !2998}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2995, file: !297, line: 328, baseType: !301, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2995, file: !297, line: 329, baseType: !301, size: 32, offset: 32)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !297, line: 259, baseType: !3001)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 250, size: 224, elements: !3002)
!3002 = !{!3003, !3004, !3005, !3006, !3007, !3008, !3009}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3001, file: !297, line: 252, baseType: !301, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3001, file: !297, line: 253, baseType: !301, size: 32, offset: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3001, file: !297, line: 254, baseType: !301, size: 32, offset: 64)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3001, file: !297, line: 255, baseType: !301, size: 32, offset: 96)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3001, file: !297, line: 256, baseType: !301, size: 32, offset: 128)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3001, file: !297, line: 257, baseType: !301, size: 32, offset: 160)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3001, file: !297, line: 258, baseType: !301, size: 32, offset: 192)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 370, baseType: !3012)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 336, size: 1152, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3012, file: !297, line: 338, baseType: !301, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3012, file: !297, line: 339, baseType: !301, size: 32, offset: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3012, file: !297, line: 340, baseType: !301, size: 32, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3012, file: !297, line: 341, baseType: !301, size: 32, offset: 96)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3012, file: !297, line: 342, baseType: !301, size: 32, offset: 128)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3012, file: !297, line: 343, baseType: !301, size: 32, offset: 160)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3012, file: !297, line: 344, baseType: !301, size: 32, offset: 192)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3012, file: !297, line: 345, baseType: !110, size: 32, offset: 224)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3012, file: !297, line: 346, baseType: !301, size: 32, offset: 256)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3012, file: !297, line: 347, baseType: !301, size: 32, offset: 288)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3012, file: !297, line: 348, baseType: !828, size: 64, offset: 320)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3012, file: !297, line: 349, baseType: !301, size: 32, offset: 384)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3012, file: !297, line: 350, baseType: !301, size: 32, offset: 416)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3012, file: !297, line: 351, baseType: !301, size: 32, offset: 448)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3012, file: !297, line: 352, baseType: !110, size: 32, offset: 480)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3012, file: !297, line: 353, baseType: !301, size: 32, offset: 512)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3012, file: !297, line: 354, baseType: !301, size: 32, offset: 544)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3012, file: !297, line: 355, baseType: !828, size: 64, offset: 576)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3012, file: !297, line: 356, baseType: !301, size: 32, offset: 640)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3012, file: !297, line: 357, baseType: !301, size: 32, offset: 672)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3012, file: !297, line: 358, baseType: !301, size: 32, offset: 704)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3012, file: !297, line: 359, baseType: !110, size: 32, offset: 736)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3012, file: !297, line: 360, baseType: !301, size: 32, offset: 768)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3012, file: !297, line: 361, baseType: !301, size: 32, offset: 800)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3012, file: !297, line: 362, baseType: !828, size: 64, offset: 832)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3012, file: !297, line: 363, baseType: !301, size: 32, offset: 896)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3012, file: !297, line: 364, baseType: !301, size: 32, offset: 928)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3012, file: !297, line: 365, baseType: !828, size: 64, offset: 960)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3012, file: !297, line: 366, baseType: !301, size: 32, offset: 1024)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3012, file: !297, line: 367, baseType: !301, size: 32, offset: 1056)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3012, file: !297, line: 368, baseType: !849, size: 32, offset: 1088)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3012, file: !297, line: 369, baseType: !301, size: 32, offset: 1120)
!3046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3048, splitDebugInlining: false, nameTableKind: None)
!3047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!3048 = !{!108, !235}
!3049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3050, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3051, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3050 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!3051 = !{!3052, !3059, !2549, !30}
!3052 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3053, line: 14, baseType: !32, size: 32, elements: !3054)
!3053 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3054 = !{!3055, !3056, !3057, !3058}
!3055 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3056 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3057 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3058 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3059 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3053, line: 42, baseType: !32, size: 32, elements: !3060)
!3060 = !{!3061, !3062, !3063, !3064, !3065, !3066}
!3061 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3062 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3063 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3064 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3065 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3066 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3067 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3068, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3068 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!3069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3070, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3071, splitDebugInlining: false, nameTableKind: None)
!3070 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!3071 = !{!22, !108, !109}
!3072 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3073, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3073 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!3074 = !{!"Ubuntu clang version 14.0.6"}
!3075 = !{i32 7, !"Dwarf Version", i32 4}
!3076 = !{i32 2, !"Debug Info Version", i32 3}
!3077 = !{i32 1, !"wchar_size", i32 4}
!3078 = !{i32 1, !"min_enum_size", i32 4}
!3079 = !{i32 1, !"branch-target-enforcement", i32 0}
!3080 = !{i32 1, !"sign-return-address", i32 0}
!3081 = !{i32 1, !"sign-return-address-all", i32 0}
!3082 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3083 = !{i32 7, !"frame-pointer", i32 2}
!3084 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3085, file: !3085, line: 26, type: !3086, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !1998)
!3085 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3086 = !DISubroutineType(types: !3087)
!3087 = !{null}
!3088 = !DILocation(line: 28, column: 1, scope: !3084)
!3089 = !{i64 2154350148, i64 2154350168, i64 2154350231}
!3090 = !DILocation(line: 29, column: 1, scope: !3084)
!3091 = !{i64 2154350563, i64 2154350583, i64 2154350646}
!3092 = !DILocation(line: 30, column: 1, scope: !3084)
!3093 = !{i64 2154350982, i64 2154351002, i64 2154351065}
!3094 = !DILocation(line: 31, column: 1, scope: !3084)
!3095 = !{i64 2154351401, i64 2154351421, i64 2154351484}
!3096 = !DILocation(line: 33, column: 1, scope: !3084)
!3097 = !{i64 2154351693, i64 2154351713, i64 2154351776}
!3098 = !DILocation(line: 35, column: 1, scope: !3084)
!3099 = !{i64 2154352018, i64 2154352038, i64 2154352101}
!3100 = !DILocation(line: 42, column: 1, scope: !3084)
!3101 = !{i64 2154352445, i64 2154352465, i64 2154352528}
!3102 = !DILocation(line: 50, column: 1, scope: !3084)
!3103 = !{i64 2154352887, i64 2154352907, i64 2154352970}
!3104 = !DILocation(line: 54, column: 1, scope: !3084)
!3105 = !{i64 2154353326, i64 2154353346, i64 2154353409}
!3106 = !DILocation(line: 61, column: 1, scope: !3084)
!3107 = !{i64 2154353643, i64 2154353663, i64 2154353726}
!3108 = !DILocation(line: 63, column: 1, scope: !3084)
!3109 = !{i64 2154354023, i64 2154354043, i64 2154354106}
!3110 = !DILocation(line: 64, column: 1, scope: !3084)
!3111 = !{i64 2154354545, i64 2154354565, i64 2154354628}
!3112 = !DILocation(line: 65, column: 1, scope: !3084)
!3113 = !{i64 2154355043, i64 2154355063, i64 2154355126}
!3114 = !DILocation(line: 66, column: 1, scope: !3084)
!3115 = !{i64 2154355525, i64 2154355545, i64 2154355608}
!3116 = !DILocation(line: 67, column: 1, scope: !3084)
!3117 = !{i64 2154356032, i64 2154356052, i64 2154356115}
!3118 = !DILocation(line: 68, column: 1, scope: !3084)
!3119 = !{i64 2154356520, i64 2154356540, i64 2154356603}
!3120 = !DILocation(line: 70, column: 1, scope: !3084)
!3121 = !{i64 2154361049, i64 2154361069, i64 2154361132}
!3122 = !DILocation(line: 71, column: 1, scope: !3084)
!3123 = !{i64 2154361491, i64 2154361511, i64 2154361574}
!3124 = !DILocation(line: 72, column: 1, scope: !3084)
!3125 = !{i64 2154361949, i64 2154361969, i64 2154362032}
!3126 = !DILocation(line: 79, column: 1, scope: !3084)
!3127 = !{i64 2154362403, i64 2154362423, i64 2154362486}
!3128 = !DILocation(line: 80, column: 1, scope: !3084)
!3129 = !{i64 2154362914, i64 2154362934, i64 2154362997}
!3130 = !DILocation(line: 82, column: 1, scope: !3084)
!3131 = !{i64 2154363405, i64 2154363425, i64 2154363488}
!3132 = !DILocation(line: 86, column: 1, scope: !3084)
!3133 = !{i64 2154363874, i64 2154363894, i64 2154363957}
!3134 = !DILocation(line: 97, column: 1, scope: !3084)
!3135 = !{i64 2154364216, i64 2154364236, i64 2154364299}
!3136 = !DILocation(line: 99, column: 1, scope: !3084)
!3137 = !{i64 2154364434, i64 2154364454, i64 2154364517}
!3138 = !DILocation(line: 102, column: 1, scope: !3084)
!3139 = !{i64 2154364691, i64 2154364711, i64 2154364774}
!3140 = !DILocation(line: 105, column: 1, scope: !3084)
!3141 = !{i64 2154364931, i64 2154364951, i64 2154365014}
!3142 = !DILocation(line: 115, column: 1, scope: !3084)
!3143 = !{i64 2154365270, i64 2154365290, i64 2154365353}
!3144 = !DILocation(line: 118, column: 1, scope: !3084)
!3145 = !{i64 2154365614, i64 2154365634, i64 2154365697}
!3146 = !DILocation(line: 32, column: 1, scope: !3147)
!3147 = !DILexicalBlockFile(scope: !3084, file: !3148, discriminator: 0)
!3148 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3149 = !{i64 2154365970, i64 2154365990, i64 2154366053}
!3150 = !DILocation(line: 33, column: 1, scope: !3147)
!3151 = !{i64 2154366482, i64 2154366502, i64 2154366565}
!3152 = !DILocation(line: 53, column: 1, scope: !3147)
!3153 = !{i64 2154366990, i64 2154367010, i64 2154367073}
!3154 = !DILocation(line: 54, column: 1, scope: !3147)
!3155 = !{i64 2154367408, i64 2154367428, i64 2154367491}
!3156 = !DILocation(line: 55, column: 1, scope: !3147)
!3157 = !{i64 2154367826, i64 2154367846, i64 2154367909}
!3158 = !DILocation(line: 56, column: 1, scope: !3147)
!3159 = !{i64 2154368244, i64 2154368264, i64 2154368327}
!3160 = !DILocation(line: 57, column: 1, scope: !3147)
!3161 = !{i64 2154368662, i64 2154368682, i64 2154368745}
!3162 = !DILocation(line: 58, column: 1, scope: !3147)
!3163 = !{i64 2154369080, i64 2154369100, i64 2154369163}
!3164 = !DILocation(line: 59, column: 1, scope: !3147)
!3165 = !{i64 2154369498, i64 2154369518, i64 2154369581}
!3166 = !DILocation(line: 60, column: 1, scope: !3147)
!3167 = !{i64 2154369922, i64 2154369942, i64 2154370005}
!3168 = !DILocation(line: 61, column: 1, scope: !3147)
!3169 = !{i64 2154370239, i64 2154370259, i64 2154370322}
!3170 = !DILocation(line: 70, column: 1, scope: !3147)
!3171 = !{i64 2154374529, i64 2154374549, i64 2154374612}
!3172 = !DILocation(line: 72, column: 1, scope: !3147)
!3173 = !{i64 2154374861, i64 2154374881, i64 2154374944}
!3174 = !DILocation(line: 73, column: 1, scope: !3147)
!3175 = !{i64 2154375311, i64 2154375331, i64 2154375394}
!3176 = !DILocation(line: 74, column: 1, scope: !3147)
!3177 = !{i64 2154375761, i64 2154375781, i64 2154375844}
!3178 = !DILocation(line: 75, column: 1, scope: !3147)
!3179 = !{i64 2154376211, i64 2154376231, i64 2154376294}
!3180 = !DILocation(line: 76, column: 1, scope: !3147)
!3181 = !{i64 2154376661, i64 2154376681, i64 2154376744}
!3182 = !DILocation(line: 77, column: 1, scope: !3147)
!3183 = !{i64 2154377111, i64 2154377131, i64 2154377194}
!3184 = !DILocation(line: 78, column: 1, scope: !3147)
!3185 = !{i64 2154377561, i64 2154377581, i64 2154377644}
!3186 = !DILocation(line: 79, column: 1, scope: !3147)
!3187 = !{i64 2154378011, i64 2154378031, i64 2154378094}
!3188 = !DILocation(line: 80, column: 1, scope: !3147)
!3189 = !{i64 2154378464, i64 2154378484, i64 2154378547}
!3190 = !DILocation(line: 84, column: 1, scope: !3147)
!3191 = !{i64 2154378796, i64 2154378816, i64 2154378879}
!3192 = !DILocation(line: 91, column: 1, scope: !3147)
!3193 = !{i64 2154379193, i64 2154379213, i64 2154379276}
!3194 = !DILocation(line: 93, column: 1, scope: !3147)
!3195 = !{i64 2154379560, i64 2154379580, i64 2154379643}
!3196 = !DILocation(line: 106, column: 1, scope: !3147)
!3197 = !{i64 2154379830, i64 2154379850, i64 2154379913}
!3198 = !DILocation(line: 11, column: 1, scope: !3199)
!3199 = !DILexicalBlockFile(scope: !3084, file: !3200, discriminator: 0)
!3200 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3201 = distinct !DISubprogram(name: "philosopher", scope: !3202, file: !3202, line: 140, type: !218, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3203)
!3202 = !DIFile(filename: "zephyr/samples/philosophers/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3203 = !{!3204, !3205, !3206, !3207, !3208, !3209, !3210}
!3204 = !DILocalVariable(name: "id", arg: 1, scope: !3201, file: !3202, line: 140, type: !108)
!3205 = !DILocalVariable(name: "unused1", arg: 2, scope: !3201, file: !3202, line: 140, type: !108)
!3206 = !DILocalVariable(name: "unused2", arg: 3, scope: !3201, file: !3202, line: 140, type: !108)
!3207 = !DILocalVariable(name: "fork1", scope: !3201, file: !3202, line: 145, type: !279)
!3208 = !DILocalVariable(name: "fork2", scope: !3201, file: !3202, line: 146, type: !279)
!3209 = !DILocalVariable(name: "my_id", scope: !3201, file: !3202, line: 148, type: !109)
!3210 = !DILocalVariable(name: "delay", scope: !3211, file: !3202, line: 160, type: !736)
!3211 = distinct !DILexicalBlock(scope: !3201, file: !3202, line: 159, column: 12)
!3212 = !DILocation(line: 0, scope: !3201)
!3213 = !DILocation(line: 148, column: 14, scope: !3201)
!3214 = !DILocation(line: 151, column: 6, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3201, file: !3202, line: 151, column: 6)
!3216 = !DILocation(line: 151, column: 6, scope: !3201)
!3217 = !DILocation(line: 155, column: 11, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3215, file: !3202, line: 154, column: 9)
!3219 = !DILocation(line: 156, column: 11, scope: !3218)
!3220 = !DILocation(line: 0, scope: !3215)
!3221 = !DILocation(line: 159, column: 2, scope: !3201)
!3222 = !DILocation(line: 162, column: 3, scope: !3211)
!3223 = !DILocation(line: 163, column: 3, scope: !3211)
!3224 = !DILocation(line: 164, column: 3, scope: !3211)
!3225 = !DILocation(line: 165, column: 3, scope: !3211)
!3226 = !DILocation(line: 167, column: 11, scope: !3211)
!3227 = !DILocation(line: 0, scope: !3211)
!3228 = !DILocation(line: 168, column: 3, scope: !3211)
!3229 = !DILocation(line: 169, column: 3, scope: !3211)
!3230 = !DILocation(line: 171, column: 3, scope: !3211)
!3231 = !DILocation(line: 172, column: 3, scope: !3211)
!3232 = !DILocation(line: 173, column: 3, scope: !3211)
!3233 = !DILocation(line: 175, column: 11, scope: !3211)
!3234 = !DILocation(line: 176, column: 3, scope: !3211)
!3235 = !DILocation(line: 177, column: 3, scope: !3211)
!3236 = distinct !{!3236, !3221, !3237}
!3237 = !DILocation(line: 178, column: 2, scope: !3201)
!3238 = distinct !DISubprogram(name: "is_last_philosopher", scope: !3202, file: !3202, line: 135, type: !288, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3239)
!3239 = !{!3240}
!3240 = !DILocalVariable(name: "id", arg: 1, scope: !3238, file: !3202, line: 135, type: !109)
!3241 = !DILocation(line: 0, scope: !3238)
!3242 = !DILocation(line: 137, column: 12, scope: !3238)
!3243 = !DILocation(line: 137, column: 2, scope: !3238)
!3244 = distinct !DISubprogram(name: "print_phil_state", scope: !3202, file: !3202, line: 100, type: !3245, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3247)
!3245 = !DISubroutineType(types: !3246)
!3246 = !{null, !109, !324, !736}
!3247 = !{!3248, !3249, !3250, !3251}
!3248 = !DILocalVariable(name: "id", arg: 1, scope: !3244, file: !3202, line: 100, type: !109)
!3249 = !DILocalVariable(name: "fmt", arg: 2, scope: !3244, file: !3202, line: 100, type: !324)
!3250 = !DILocalVariable(name: "delay", arg: 3, scope: !3244, file: !3202, line: 100, type: !736)
!3251 = !DILocalVariable(name: "prio", scope: !3244, file: !3202, line: 102, type: !109)
!3252 = !DILocation(line: 0, scope: !3244)
!3253 = !DILocation(line: 102, column: 35, scope: !3244)
!3254 = !DILocation(line: 102, column: 13, scope: !3244)
!3255 = !DILocation(line: 104, column: 2, scope: !3244)
!3256 = !DILocation(line: 107, column: 18, scope: !3244)
!3257 = !DILocation(line: 107, column: 13, scope: !3244)
!3258 = !DILocation(line: 108, column: 9, scope: !3244)
!3259 = !DILocation(line: 106, column: 2, scope: !3244)
!3260 = !DILocation(line: 111, column: 6, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3244, file: !3202, line: 111, column: 6)
!3262 = !DILocation(line: 111, column: 6, scope: !3244)
!3263 = !DILocation(line: 112, column: 3, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3261, file: !3202, line: 111, column: 13)
!3265 = !DILocation(line: 113, column: 2, scope: !3264)
!3266 = !DILocation(line: 114, column: 3, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3261, file: !3202, line: 113, column: 9)
!3268 = !DILocation(line: 117, column: 2, scope: !3244)
!3269 = !DILocation(line: 118, column: 1, scope: !3244)
!3270 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3271, file: !3271, line: 927, type: !3272, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3278)
!3271 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!3272 = !DISubroutineType(types: !3273)
!3273 = !{!109, !279, !3274}
!3274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !3275)
!3275 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !3276)
!3276 = !{!3277}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3275, file: !105, line: 66, baseType: !104, size: 64)
!3278 = !{!3279, !3280}
!3279 = !DILocalVariable(name: "mutex", arg: 1, scope: !3270, file: !3271, line: 927, type: !279)
!3280 = !DILocalVariable(name: "timeout", arg: 2, scope: !3270, file: !3271, line: 927, type: !3274)
!3281 = !DILocation(line: 0, scope: !3270)
!3282 = !DILocation(line: 936, column: 2, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3270, file: !3271, line: 936, column: 2)
!3284 = !{i64 2154075936}
!3285 = !DILocation(line: 937, column: 9, scope: !3270)
!3286 = !DILocation(line: 937, column: 2, scope: !3270)
!3287 = distinct !DISubprogram(name: "get_random_delay", scope: !3202, file: !3202, line: 120, type: !3288, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3290)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{!736, !109, !109}
!3290 = !{!3291, !3292, !3293, !3294}
!3291 = !DILocalVariable(name: "id", arg: 1, scope: !3287, file: !3202, line: 120, type: !109)
!3292 = !DILocalVariable(name: "period_in_ms", arg: 2, scope: !3287, file: !3202, line: 120, type: !109)
!3293 = !DILocalVariable(name: "delay", scope: !3287, file: !3202, line: 127, type: !736)
!3294 = !DILocalVariable(name: "ms", scope: !3287, file: !3202, line: 130, type: !736)
!3295 = !DILocation(line: 0, scope: !3287)
!3296 = !DILocation(line: 127, column: 19, scope: !3287)
!3297 = !DILocation(line: 127, column: 36, scope: !3287)
!3298 = !DILocation(line: 127, column: 47, scope: !3287)
!3299 = !DILocation(line: 127, column: 41, scope: !3287)
!3300 = !DILocation(line: 127, column: 53, scope: !3287)
!3301 = !DILocation(line: 130, column: 27, scope: !3287)
!3302 = !DILocation(line: 132, column: 2, scope: !3287)
!3303 = distinct !DISubprogram(name: "k_msleep", scope: !119, file: !119, line: 439, type: !3304, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3306)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{!736, !736}
!3306 = !{!3307}
!3307 = !DILocalVariable(name: "ms", arg: 1, scope: !3303, file: !119, line: 439, type: !736)
!3308 = !DILocation(line: 0, scope: !3303)
!3309 = !DILocation(line: 441, column: 17, scope: !3303)
!3310 = !DILocation(line: 441, column: 9, scope: !3303)
!3311 = !DILocation(line: 441, column: 2, scope: !3303)
!3312 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3271, file: !3271, line: 944, type: !3313, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3315)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!109, !279}
!3315 = !{!3316}
!3316 = !DILocalVariable(name: "mutex", arg: 1, scope: !3312, file: !3271, line: 944, type: !279)
!3317 = !DILocation(line: 0, scope: !3312)
!3318 = !DILocation(line: 952, column: 2, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3312, file: !3271, line: 952, column: 2)
!3320 = !{i64 2154076004}
!3321 = !DILocation(line: 953, column: 9, scope: !3312)
!3322 = !DILocation(line: 953, column: 2, scope: !3312)
!3323 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3324, file: !3324, line: 403, type: !3325, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3327)
!3324 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!111, !111}
!3327 = !{!3328}
!3328 = !DILocalVariable(name: "t", arg: 1, scope: !3323, file: !3324, line: 403, type: !111)
!3329 = !DILocation(line: 0, scope: !3323)
!3330 = !DILocalVariable(name: "t", arg: 1, scope: !3331, file: !3324, line: 102, type: !111)
!3331 = distinct !DISubprogram(name: "z_tmcvt", scope: !3324, file: !3324, line: 102, type: !3332, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3334)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!111, !111, !110, !110, !334, !334, !334, !334}
!3334 = !{!3330, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344}
!3335 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3331, file: !3324, line: 102, type: !110)
!3336 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3331, file: !3324, line: 103, type: !110)
!3337 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3331, file: !3324, line: 103, type: !334)
!3338 = !DILocalVariable(name: "result32", arg: 5, scope: !3331, file: !3324, line: 104, type: !334)
!3339 = !DILocalVariable(name: "round_up", arg: 6, scope: !3331, file: !3324, line: 104, type: !334)
!3340 = !DILocalVariable(name: "round_off", arg: 7, scope: !3331, file: !3324, line: 105, type: !334)
!3341 = !DILocalVariable(name: "mul_ratio", scope: !3331, file: !3324, line: 107, type: !334)
!3342 = !DILocalVariable(name: "div_ratio", scope: !3331, file: !3324, line: 109, type: !334)
!3343 = !DILocalVariable(name: "off", scope: !3331, file: !3324, line: 116, type: !111)
!3344 = !DILocalVariable(name: "rdivisor", scope: !3345, file: !3324, line: 119, type: !110)
!3345 = distinct !DILexicalBlock(scope: !3346, file: !3324, line: 118, column: 18)
!3346 = distinct !DILexicalBlock(scope: !3331, file: !3324, line: 118, column: 6)
!3347 = !DILocation(line: 0, scope: !3331, inlinedAt: !3348)
!3348 = distinct !DILocation(line: 406, column: 9, scope: !3323)
!3349 = !DILocation(line: 145, column: 13, scope: !3350, inlinedAt: !3348)
!3350 = distinct !DILexicalBlock(scope: !3351, file: !3324, line: 144, column: 10)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !3324, line: 142, column: 7)
!3352 = distinct !DILexicalBlock(scope: !3353, file: !3324, line: 141, column: 24)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !3324, line: 141, column: 13)
!3354 = distinct !DILexicalBlock(scope: !3331, file: !3324, line: 134, column: 6)
!3355 = !DILocation(line: 406, column: 2, scope: !3323)
!3356 = distinct !DISubprogram(name: "k_sleep", scope: !3271, file: !3271, line: 91, type: !3357, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3359)
!3357 = !DISubroutineType(types: !3358)
!3358 = !{!736, !3274}
!3359 = !{!3360}
!3360 = !DILocalVariable(name: "timeout", arg: 1, scope: !3356, file: !3271, line: 91, type: !3274)
!3361 = !DILocation(line: 0, scope: !3356)
!3362 = !DILocation(line: 99, column: 2, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3356, file: !3271, line: 99, column: 2)
!3364 = !{i64 2154072568}
!3365 = !DILocation(line: 100, column: 9, scope: !3356)
!3366 = !DILocation(line: 100, column: 2, scope: !3356)
!3367 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !119, file: !119, line: 1640, type: !3368, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1998)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{!110}
!3370 = !DILocation(line: 1642, column: 19, scope: !3367)
!3371 = !DILocation(line: 1642, column: 9, scope: !3367)
!3372 = !DILocation(line: 1642, column: 2, scope: !3367)
!3373 = distinct !DISubprogram(name: "k_uptime_get", scope: !119, file: !119, line: 1616, type: !3374, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1998)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{!106}
!3376 = !DILocation(line: 1618, column: 31, scope: !3373)
!3377 = !DILocation(line: 1618, column: 9, scope: !3373)
!3378 = !DILocation(line: 1618, column: 2, scope: !3373)
!3379 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3271, file: !3271, line: 564, type: !3374, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1998)
!3380 = !DILocation(line: 573, column: 2, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3379, file: !3271, line: 573, column: 2)
!3382 = !{i64 2154074472}
!3383 = !DILocation(line: 574, column: 9, scope: !3379)
!3384 = !DILocation(line: 574, column: 2, scope: !3379)
!3385 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3324, file: !3324, line: 1103, type: !3325, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3386)
!3386 = !{!3387}
!3387 = !DILocalVariable(name: "t", arg: 1, scope: !3385, file: !3324, line: 1103, type: !111)
!3388 = !DILocation(line: 0, scope: !3385)
!3389 = !DILocation(line: 0, scope: !3331, inlinedAt: !3390)
!3390 = distinct !DILocation(line: 1106, column: 9, scope: !3385)
!3391 = !DILocation(line: 139, column: 13, scope: !3392, inlinedAt: !3390)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !3324, line: 138, column: 10)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !3324, line: 136, column: 7)
!3394 = distinct !DILexicalBlock(scope: !3354, file: !3324, line: 134, column: 17)
!3395 = !DILocation(line: 1106, column: 2, scope: !3385)
!3396 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !3397, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1998)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!3399}
!3399 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !143)
!3400 = !DILocation(line: 535, column: 9, scope: !3396)
!3401 = !DILocation(line: 535, column: 2, scope: !3396)
!3402 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3271, file: !3271, line: 258, type: !3403, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3405)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!109, !3399}
!3405 = !{!3406}
!3406 = !DILocalVariable(name: "thread", arg: 1, scope: !3402, file: !3271, line: 258, type: !3399)
!3407 = !DILocation(line: 0, scope: !3402)
!3408 = !DILocation(line: 266, column: 2, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3402, file: !3271, line: 266, column: 2)
!3410 = !{i64 2154073248}
!3411 = !DILocation(line: 267, column: 9, scope: !3402)
!3412 = !DILocation(line: 267, column: 2, scope: !3402)
!3413 = distinct !DISubprogram(name: "set_phil_state_pos", scope: !3202, file: !3202, line: 92, type: !3414, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3416)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{null, !109}
!3416 = !{!3417}
!3417 = !DILocalVariable(name: "id", arg: 1, scope: !3413, file: !3202, line: 92, type: !109)
!3418 = !DILocation(line: 0, scope: !3413)
!3419 = !DILocation(line: 95, column: 27, scope: !3413)
!3420 = !DILocation(line: 95, column: 2, scope: !3413)
!3421 = !DILocation(line: 97, column: 1, scope: !3413)
!3422 = distinct !DISubprogram(name: "z_current_get", scope: !3271, file: !3271, line: 173, type: !3397, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1998)
!3423 = !DILocation(line: 180, column: 2, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3422, file: !3271, line: 180, column: 2)
!3425 = !{i64 2154072908}
!3426 = !DILocation(line: 181, column: 9, scope: !3422)
!3427 = !DILocation(line: 181, column: 2, scope: !3422)
!3428 = distinct !DISubprogram(name: "main", scope: !3202, file: !3202, line: 252, type: !3086, scopeLine: 253, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1998)
!3429 = !DILocation(line: 254, column: 2, scope: !3428)
!3430 = !DILocation(line: 256, column: 2, scope: !3428)
!3431 = !DILocation(line: 259, column: 2, scope: !3428)
!3432 = !DILocation(line: 260, column: 2, scope: !3428)
!3433 = !DILocation(line: 268, column: 1, scope: !3428)
!3434 = distinct !DISubprogram(name: "display_demo_description", scope: !3202, file: !3202, line: 245, type: !3086, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1998)
!3435 = !DILocation(line: 248, column: 2, scope: !3434)
!3436 = !DILocation(line: 250, column: 1, scope: !3434)
!3437 = distinct !DISubprogram(name: "init_objects", scope: !3202, file: !3202, line: 201, type: !3086, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3438)
!3438 = !{!3439}
!3439 = !DILocalVariable(name: "i", scope: !3440, file: !3202, line: 204, type: !109)
!3440 = distinct !DILexicalBlock(scope: !3437, file: !3202, line: 204, column: 2)
!3441 = !DILocation(line: 0, scope: !3440)
!3442 = !DILocation(line: 204, column: 2, scope: !3440)
!3443 = !DILocation(line: 208, column: 1, scope: !3437)
!3444 = !DILocation(line: 205, column: 3, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !3202, line: 204, column: 37)
!3446 = distinct !DILexicalBlock(scope: !3440, file: !3202, line: 204, column: 2)
!3447 = !DILocation(line: 204, column: 33, scope: !3446)
!3448 = !DILocation(line: 204, column: 20, scope: !3446)
!3449 = distinct !{!3449, !3442, !3450}
!3450 = !DILocation(line: 206, column: 2, scope: !3440)
!3451 = distinct !DISubprogram(name: "start_threads", scope: !3202, file: !3202, line: 210, type: !3086, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3452)
!3452 = !{!3453, !3455, !3458}
!3453 = !DILocalVariable(name: "i", scope: !3454, file: !3202, line: 216, type: !109)
!3454 = distinct !DILexicalBlock(scope: !3451, file: !3202, line: 216, column: 2)
!3455 = !DILocalVariable(name: "prio", scope: !3456, file: !3202, line: 217, type: !109)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !3202, line: 216, column: 37)
!3457 = distinct !DILexicalBlock(scope: !3454, file: !3202, line: 216, column: 2)
!3458 = !DILocalVariable(name: "tname", scope: !3456, file: !3202, line: 223, type: !225)
!3459 = !DILocation(line: 0, scope: !3454)
!3460 = !DILocation(line: 216, column: 2, scope: !3454)
!3461 = !DILocation(line: 233, column: 1, scope: !3451)
!3462 = !DILocation(line: 217, column: 14, scope: !3456)
!3463 = !{i32 -2, i32 -2147483644}
!3464 = !DILocation(line: 0, scope: !3456)
!3465 = !DILocation(line: 219, column: 20, scope: !3456)
!3466 = !DILocation(line: 219, column: 33, scope: !3456)
!3467 = !DILocation(line: 220, column: 18, scope: !3456)
!3468 = !DILocation(line: 219, column: 3, scope: !3456)
!3469 = !DILocation(line: 223, column: 3, scope: !3456)
!3470 = !DILocation(line: 223, column: 8, scope: !3456)
!3471 = !DILocation(line: 225, column: 3, scope: !3456)
!3472 = !DILocation(line: 226, column: 3, scope: !3456)
!3473 = !DILocation(line: 228, column: 3, scope: !3456)
!3474 = !DILocation(line: 229, column: 25, scope: !3456)
!3475 = !DILocation(line: 229, column: 3, scope: !3456)
!3476 = !DILocation(line: 231, column: 3, scope: !3456)
!3477 = !DILocation(line: 232, column: 2, scope: !3457)
!3478 = !DILocation(line: 216, column: 20, scope: !3457)
!3479 = distinct !{!3479, !3460, !3480}
!3480 = !DILocation(line: 232, column: 2, scope: !3454)
!3481 = distinct !DISubprogram(name: "new_prio", scope: !3202, file: !3202, line: 182, type: !288, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3482)
!3482 = !{!3483}
!3483 = !DILocalVariable(name: "phil", arg: 1, scope: !3481, file: !3202, line: 182, type: !109)
!3484 = !DILocation(line: 0, scope: !3481)
!3485 = !DILocation(line: 188, column: 9, scope: !3481)
!3486 = !DILocation(line: 188, column: 2, scope: !3481)
!3487 = distinct !DISubprogram(name: "k_thread_create", scope: !3271, file: !3271, line: 24, type: !3488, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3492)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!3399, !143, !3490, !235, !215, !108, !108, !108, !109, !110, !3274}
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 32)
!3491 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !272)
!3492 = !{!3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502}
!3493 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3487, file: !3271, line: 24, type: !143)
!3494 = !DILocalVariable(name: "stack", arg: 2, scope: !3487, file: !3271, line: 24, type: !3490)
!3495 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3487, file: !3271, line: 24, type: !235)
!3496 = !DILocalVariable(name: "entry", arg: 4, scope: !3487, file: !3271, line: 24, type: !215)
!3497 = !DILocalVariable(name: "p1", arg: 5, scope: !3487, file: !3271, line: 24, type: !108)
!3498 = !DILocalVariable(name: "p2", arg: 6, scope: !3487, file: !3271, line: 24, type: !108)
!3499 = !DILocalVariable(name: "p3", arg: 7, scope: !3487, file: !3271, line: 24, type: !108)
!3500 = !DILocalVariable(name: "prio", arg: 8, scope: !3487, file: !3271, line: 24, type: !109)
!3501 = !DILocalVariable(name: "options", arg: 9, scope: !3487, file: !3271, line: 24, type: !110)
!3502 = !DILocalVariable(name: "delay", arg: 10, scope: !3487, file: !3271, line: 24, type: !3274)
!3503 = !DILocation(line: 0, scope: !3487)
!3504 = !DILocation(line: 49, column: 2, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3487, file: !3271, line: 49, column: 2)
!3506 = !{i64 2154072364}
!3507 = !DILocation(line: 50, column: 9, scope: !3487)
!3508 = !DILocation(line: 50, column: 2, scope: !3487)
!3509 = distinct !DISubprogram(name: "k_thread_name_set", scope: !3271, file: !3271, line: 391, type: !3510, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3512)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!109, !3399, !324}
!3512 = !{!3513, !3514}
!3513 = !DILocalVariable(name: "thread", arg: 1, scope: !3509, file: !3271, line: 391, type: !3399)
!3514 = !DILocalVariable(name: "str", arg: 2, scope: !3509, file: !3271, line: 391, type: !324)
!3515 = !DILocation(line: 0, scope: !3509)
!3516 = !DILocation(line: 400, column: 2, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3509, file: !3271, line: 400, column: 2)
!3518 = !{i64 2154073792}
!3519 = !DILocation(line: 401, column: 9, scope: !3509)
!3520 = !DILocation(line: 401, column: 2, scope: !3509)
!3521 = distinct !DISubprogram(name: "k_object_access_grant", scope: !3522, file: !3522, line: 24, type: !3523, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3525)
!3522 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!3523 = !DISubroutineType(types: !3524)
!3524 = !{null, !13, !143}
!3525 = !{!3526, !3527}
!3526 = !DILocalVariable(name: "object", arg: 1, scope: !3521, file: !3522, line: 24, type: !13)
!3527 = !DILocalVariable(name: "thread", arg: 2, scope: !3521, file: !3522, line: 24, type: !143)
!3528 = !DILocation(line: 0, scope: !3521)
!3529 = !DILocation(line: 34, column: 2, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3521, file: !3522, line: 34, column: 2)
!3531 = !{i64 2153588784}
!3532 = !DILocation(line: 36, column: 1, scope: !3521)
!3533 = distinct !DISubprogram(name: "k_thread_start", scope: !3271, file: !3271, line: 205, type: !3534, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3536)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{null, !3399}
!3536 = !{!3537}
!3537 = !DILocalVariable(name: "thread", arg: 1, scope: !3533, file: !3271, line: 205, type: !3399)
!3538 = !DILocation(line: 0, scope: !3533)
!3539 = !DILocation(line: 214, column: 2, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3533, file: !3271, line: 214, column: 2)
!3541 = !{i64 2154073044}
!3542 = !DILocation(line: 215, column: 2, scope: !3533)
!3543 = !DILocation(line: 216, column: 1, scope: !3533)
!3544 = distinct !DISubprogram(name: "k_mutex_init", scope: !3271, file: !3271, line: 911, type: !3313, scopeLine: 912, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3545)
!3545 = !{!3546}
!3546 = !DILocalVariable(name: "mutex", arg: 1, scope: !3544, file: !3271, line: 911, type: !279)
!3547 = !DILocation(line: 0, scope: !3544)
!3548 = !DILocation(line: 919, column: 2, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3544, file: !3271, line: 919, column: 2)
!3550 = !{i64 2154075868}
!3551 = !DILocation(line: 920, column: 9, scope: !3544)
!3552 = !DILocation(line: 920, column: 2, scope: !3544)
!3553 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !286, file: !286, line: 45, type: !288, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3554)
!3554 = !{!3555}
!3555 = !DILocalVariable(name: "c", arg: 1, scope: !3553, file: !286, line: 45, type: !109)
!3556 = !DILocation(line: 0, scope: !3553)
!3557 = !DILocation(line: 50, column: 2, scope: !3553)
!3558 = distinct !DISubprogram(name: "__printk_hook_install", scope: !286, file: !286, line: 63, type: !3559, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3561)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{null, !287}
!3561 = !{!3562}
!3562 = !DILocalVariable(name: "fn", arg: 1, scope: !3558, file: !286, line: 63, type: !287)
!3563 = !DILocation(line: 0, scope: !3558)
!3564 = !DILocation(line: 65, column: 12, scope: !3558)
!3565 = !DILocation(line: 66, column: 1, scope: !3558)
!3566 = distinct !DISubprogram(name: "__printk_get_hook", scope: !286, file: !286, line: 76, type: !3567, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !1998)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{!108}
!3569 = !DILocation(line: 78, column: 9, scope: !3566)
!3570 = !DILocation(line: 78, column: 2, scope: !3566)
!3571 = distinct !DISubprogram(name: "vprintk", scope: !286, file: !286, line: 113, type: !3572, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3581)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{null, !324, !3574}
!3574 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3575, line: 99, baseType: !3576)
!3575 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3576 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3575, line: 40, baseType: !3577)
!3577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !286, baseType: !3578)
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3579)
!3579 = !{!3580}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3578, file: !286, line: 79, baseType: !108, size: 32)
!3581 = !{!3582, !3583, !3584}
!3582 = !DILocalVariable(name: "fmt", arg: 1, scope: !3571, file: !286, line: 113, type: !324)
!3583 = !DILocalVariable(name: "ap", arg: 2, scope: !3571, file: !286, line: 113, type: !3574)
!3584 = !DILocalVariable(name: "ctx", scope: !3585, file: !286, line: 121, type: !3587)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !286, line: 120, column: 27)
!3586 = distinct !DILexicalBlock(scope: !3571, file: !286, line: 120, column: 6)
!3587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !286, line: 81, size: 32, elements: !3588)
!3588 = !{!3589, !3590}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3587, file: !286, line: 85, baseType: !32, size: 32)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3587, file: !286, line: 86, baseType: !3591, offset: 32)
!3591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, elements: !3592)
!3592 = !{!3593}
!3593 = !DISubrange(count: 0)
!3594 = !DILocation(line: 0, scope: !3571)
!3595 = !DILocation(line: 148, column: 3, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3586, file: !286, line: 138, column: 9)
!3597 = !DILocation(line: 155, column: 1, scope: !3571)
!3598 = distinct !DISubprogram(name: "char_out", scope: !286, file: !286, line: 107, type: !3599, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3601)
!3599 = !DISubroutineType(types: !3600)
!3600 = !{!109, !109, !108}
!3601 = !{!3602, !3603}
!3602 = !DILocalVariable(name: "c", arg: 1, scope: !3598, file: !286, line: 107, type: !109)
!3603 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3598, file: !286, line: 107, type: !108)
!3604 = !DILocation(line: 0, scope: !3598)
!3605 = !DILocation(line: 110, column: 9, scope: !3598)
!3606 = !DILocation(line: 110, column: 2, scope: !3598)
!3607 = distinct !DISubprogram(name: "cbvprintf", scope: !3608, file: !3608, line: 739, type: !3609, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3615)
!3608 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!109, !3611, !108, !324, !3574}
!3611 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3608, line: 297, baseType: !3612)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3613, size: 32)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!109, null}
!3615 = !{!3616, !3617, !3618, !3619}
!3616 = !DILocalVariable(name: "out", arg: 1, scope: !3607, file: !3608, line: 739, type: !3611)
!3617 = !DILocalVariable(name: "ctx", arg: 2, scope: !3607, file: !3608, line: 739, type: !108)
!3618 = !DILocalVariable(name: "format", arg: 3, scope: !3607, file: !3608, line: 739, type: !324)
!3619 = !DILocalVariable(name: "ap", arg: 4, scope: !3607, file: !3608, line: 739, type: !3574)
!3620 = !DILocation(line: 0, scope: !3607)
!3621 = !DILocation(line: 741, column: 9, scope: !3607)
!3622 = !DILocation(line: 741, column: 2, scope: !3607)
!3623 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !286, file: !286, line: 157, type: !3624, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3626)
!3624 = !DISubroutineType(types: !3625)
!3625 = !{null, !1127, !235}
!3626 = !{!3627, !3628, !3629}
!3627 = !DILocalVariable(name: "c", arg: 1, scope: !3623, file: !286, line: 157, type: !1127)
!3628 = !DILocalVariable(name: "n", arg: 2, scope: !3623, file: !286, line: 157, type: !235)
!3629 = !DILocalVariable(name: "i", scope: !3623, file: !286, line: 159, type: !235)
!3630 = !DILocation(line: 0, scope: !3623)
!3631 = !DILocation(line: 164, column: 16, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !286, line: 164, column: 2)
!3633 = distinct !DILexicalBlock(scope: !3623, file: !286, line: 164, column: 2)
!3634 = !DILocation(line: 164, column: 2, scope: !3633)
!3635 = !DILocation(line: 165, column: 3, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3632, file: !286, line: 164, column: 26)
!3637 = !DILocation(line: 165, column: 13, scope: !3636)
!3638 = !DILocation(line: 164, column: 22, scope: !3632)
!3639 = distinct !{!3639, !3634, !3640}
!3640 = !DILocation(line: 166, column: 2, scope: !3633)
!3641 = !DILocation(line: 171, column: 1, scope: !3623)
!3642 = distinct !DISubprogram(name: "printk", scope: !286, file: !286, line: 203, type: !3643, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3645)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{null, !324, null}
!3645 = !{!3646, !3647}
!3646 = !DILocalVariable(name: "fmt", arg: 1, scope: !3642, file: !286, line: 203, type: !324)
!3647 = !DILocalVariable(name: "ap", scope: !3642, file: !286, line: 205, type: !3574)
!3648 = !DILocation(line: 0, scope: !3642)
!3649 = !DILocation(line: 205, column: 2, scope: !3642)
!3650 = !DILocation(line: 205, column: 10, scope: !3642)
!3651 = !DILocation(line: 207, column: 2, scope: !3642)
!3652 = !DILocation(line: 209, column: 2, scope: !3642)
!3653 = !DILocation(line: 211, column: 2, scope: !3642)
!3654 = !DILocation(line: 212, column: 1, scope: !3642)
!3655 = distinct !DISubprogram(name: "snprintk", scope: !286, file: !286, line: 239, type: !3656, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3658)
!3656 = !DISubroutineType(types: !3657)
!3657 = !{!109, !1127, !235, !324, null}
!3658 = !{!3659, !3660, !3661, !3662, !3663}
!3659 = !DILocalVariable(name: "str", arg: 1, scope: !3655, file: !286, line: 239, type: !1127)
!3660 = !DILocalVariable(name: "size", arg: 2, scope: !3655, file: !286, line: 239, type: !235)
!3661 = !DILocalVariable(name: "fmt", arg: 3, scope: !3655, file: !286, line: 239, type: !324)
!3662 = !DILocalVariable(name: "ap", scope: !3655, file: !286, line: 241, type: !3574)
!3663 = !DILocalVariable(name: "ret", scope: !3655, file: !286, line: 242, type: !109)
!3664 = !DILocation(line: 0, scope: !3655)
!3665 = !DILocation(line: 241, column: 2, scope: !3655)
!3666 = !DILocation(line: 241, column: 10, scope: !3655)
!3667 = !DILocation(line: 244, column: 2, scope: !3655)
!3668 = !DILocation(line: 245, column: 8, scope: !3655)
!3669 = !DILocation(line: 246, column: 2, scope: !3655)
!3670 = !DILocation(line: 249, column: 1, scope: !3655)
!3671 = !DILocation(line: 248, column: 2, scope: !3655)
!3672 = distinct !DISubprogram(name: "vsnprintk", scope: !286, file: !286, line: 251, type: !3673, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3675)
!3673 = !DISubroutineType(types: !3674)
!3674 = !{!109, !1127, !235, !324, !3574}
!3675 = !{!3676, !3677, !3678, !3679, !3680}
!3676 = !DILocalVariable(name: "str", arg: 1, scope: !3672, file: !286, line: 251, type: !1127)
!3677 = !DILocalVariable(name: "size", arg: 2, scope: !3672, file: !286, line: 251, type: !235)
!3678 = !DILocalVariable(name: "fmt", arg: 3, scope: !3672, file: !286, line: 251, type: !324)
!3679 = !DILocalVariable(name: "ap", arg: 4, scope: !3672, file: !286, line: 251, type: !3574)
!3680 = !DILocalVariable(name: "ctx", scope: !3672, file: !286, line: 253, type: !3681)
!3681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !286, line: 217, size: 96, elements: !3682)
!3682 = !{!3683, !3684, !3685}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3681, file: !286, line: 218, baseType: !1127, size: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3681, file: !286, line: 219, baseType: !109, size: 32, offset: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3681, file: !286, line: 220, baseType: !109, size: 32, offset: 64)
!3686 = !DILocation(line: 0, scope: !3672)
!3687 = !DILocation(line: 253, column: 2, scope: !3672)
!3688 = !DILocation(line: 253, column: 21, scope: !3672)
!3689 = !DILocation(line: 253, column: 27, scope: !3672)
!3690 = !DILocation(line: 255, column: 2, scope: !3672)
!3691 = !DILocation(line: 257, column: 10, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3672, file: !286, line: 257, column: 6)
!3693 = !DILocation(line: 257, column: 22, scope: !3692)
!3694 = !DILocation(line: 257, column: 16, scope: !3692)
!3695 = !DILocation(line: 257, column: 6, scope: !3672)
!3696 = !DILocation(line: 258, column: 3, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3692, file: !286, line: 257, column: 27)
!3698 = !DILocation(line: 258, column: 18, scope: !3697)
!3699 = !DILocation(line: 259, column: 2, scope: !3697)
!3700 = !DILocation(line: 262, column: 1, scope: !3672)
!3701 = !DILocation(line: 261, column: 2, scope: !3672)
!3702 = distinct !DISubprogram(name: "str_out", scope: !286, file: !286, line: 223, type: !3703, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3706)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!109, !109, !3705}
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 32)
!3706 = !{!3707, !3708}
!3707 = !DILocalVariable(name: "c", arg: 1, scope: !3702, file: !286, line: 223, type: !109)
!3708 = !DILocalVariable(name: "ctx", arg: 2, scope: !3702, file: !286, line: 223, type: !3705)
!3709 = !DILocation(line: 0, scope: !3702)
!3710 = !DILocation(line: 225, column: 11, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3702, file: !286, line: 225, column: 6)
!3712 = !DILocation(line: 225, column: 15, scope: !3711)
!3713 = !DILocation(line: 0, scope: !3711)
!3714 = !DILocation(line: 225, column: 23, scope: !3711)
!3715 = !DILocation(line: 225, column: 45, scope: !3711)
!3716 = !DILocation(line: 225, column: 37, scope: !3711)
!3717 = !DILocation(line: 225, column: 6, scope: !3702)
!3718 = !DILocation(line: 226, column: 8, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3711, file: !286, line: 225, column: 50)
!3720 = !DILocation(line: 226, column: 13, scope: !3719)
!3721 = !DILocation(line: 227, column: 3, scope: !3719)
!3722 = !DILocation(line: 230, column: 29, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3702, file: !286, line: 230, column: 6)
!3724 = !DILocation(line: 230, column: 17, scope: !3723)
!3725 = !DILocation(line: 230, column: 6, scope: !3702)
!3726 = !DILocation(line: 231, column: 22, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3723, file: !286, line: 230, column: 34)
!3728 = !DILocation(line: 231, column: 3, scope: !3727)
!3729 = !DILocation(line: 231, column: 26, scope: !3727)
!3730 = !DILocation(line: 232, column: 2, scope: !3727)
!3731 = !DILocation(line: 233, column: 28, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3723, file: !286, line: 232, column: 9)
!3733 = !DILocation(line: 233, column: 22, scope: !3732)
!3734 = !DILocation(line: 233, column: 3, scope: !3732)
!3735 = !DILocation(line: 233, column: 26, scope: !3732)
!3736 = !DILocation(line: 237, column: 1, scope: !3702)
!3737 = distinct !DISubprogram(name: "z_rb_get_minmax", scope: !2493, file: !2493, line: 100, type: !3738, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !3750)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!2498, !3740, !167}
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 32)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !3742)
!3742 = !{!3743, !3744, !3749}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3741, file: !157, line: 84, baseType: !2498, size: 32)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !3741, file: !157, line: 85, baseType: !3745, size: 32, offset: 32)
!3745 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !3746)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 32)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{!334, !2498, !2498}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !3741, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!3750 = !{!3751, !3752, !3753}
!3751 = !DILocalVariable(name: "tree", arg: 1, scope: !3737, file: !2493, line: 100, type: !3740)
!3752 = !DILocalVariable(name: "side", arg: 2, scope: !3737, file: !2493, line: 100, type: !167)
!3753 = !DILocalVariable(name: "n", scope: !3737, file: !2493, line: 102, type: !2498)
!3754 = !DILocation(line: 0, scope: !3737)
!3755 = !DILocation(line: 104, column: 17, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3737, file: !2493, line: 104, column: 2)
!3757 = !DILocation(line: 104, column: 7, scope: !3756)
!3758 = !DILocation(line: 0, scope: !3756)
!3759 = !DILocation(line: 104, column: 26, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3756, file: !2493, line: 104, column: 2)
!3761 = !DILocation(line: 104, column: 35, scope: !3760)
!3762 = !DILocation(line: 104, column: 39, scope: !3760)
!3763 = !DILocation(line: 104, column: 58, scope: !3760)
!3764 = !DILocation(line: 104, column: 2, scope: !3756)
!3765 = distinct !{!3765, !3764, !3766}
!3766 = !DILocation(line: 107, column: 2, scope: !3756)
!3767 = !DILocation(line: 108, column: 2, scope: !3737)
!3768 = distinct !DISubprogram(name: "get_child", scope: !2493, file: !2493, line: 21, type: !3769, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !3771)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{!2498, !2498, !167}
!3771 = !{!3772, !3773, !3774}
!3772 = !DILocalVariable(name: "n", arg: 1, scope: !3768, file: !2493, line: 21, type: !2498)
!3773 = !DILocalVariable(name: "side", arg: 2, scope: !3768, file: !2493, line: 21, type: !167)
!3774 = !DILocalVariable(name: "l", scope: !3768, file: !2493, line: 28, type: !22)
!3775 = !DILocation(line: 0, scope: !3768)
!3776 = !DILocation(line: 24, column: 11, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3768, file: !2493, line: 24, column: 6)
!3778 = !DILocation(line: 24, column: 6, scope: !3768)
!3779 = !DILocation(line: 25, column: 10, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3777, file: !2493, line: 24, column: 18)
!3781 = !DILocation(line: 25, column: 3, scope: !3780)
!3782 = !DILocation(line: 28, column: 28, scope: !3768)
!3783 = !DILocation(line: 28, column: 16, scope: !3768)
!3784 = !DILocation(line: 30, column: 4, scope: !3768)
!3785 = !DILocation(line: 31, column: 9, scope: !3768)
!3786 = !DILocation(line: 32, column: 1, scope: !3768)
!3787 = distinct !DISubprogram(name: "rb_insert", scope: !2493, file: !2493, line: 217, type: !3788, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !3790)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{null, !3740, !2498}
!3790 = !{!3791, !3792, !3793, !3794, !3798, !3799, !3800}
!3791 = !DILocalVariable(name: "tree", arg: 1, scope: !3787, file: !2493, line: 217, type: !3740)
!3792 = !DILocalVariable(name: "node", arg: 2, scope: !3787, file: !2493, line: 217, type: !2498)
!3793 = !DILocalVariable(name: "__vla_expr0", scope: !3787, type: !32, flags: DIFlagArtificial)
!3794 = !DILocalVariable(name: "stack", scope: !3787, file: !2493, line: 232, type: !3795)
!3795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2498, elements: !3796)
!3796 = !{!3797}
!3797 = !DISubrange(count: !3793)
!3798 = !DILocalVariable(name: "stacksz", scope: !3787, file: !2493, line: 235, type: !109)
!3799 = !DILocalVariable(name: "parent", scope: !3787, file: !2493, line: 237, type: !2498)
!3800 = !DILocalVariable(name: "side", scope: !3787, file: !2493, line: 239, type: !167)
!3801 = !DILocation(line: 0, scope: !3787)
!3802 = !DILocation(line: 219, column: 2, scope: !3787)
!3803 = !DILocation(line: 220, column: 2, scope: !3787)
!3804 = !DILocation(line: 222, column: 12, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3787, file: !2493, line: 222, column: 6)
!3806 = !DILocation(line: 222, column: 17, scope: !3805)
!3807 = !DILocation(line: 222, column: 6, scope: !3787)
!3808 = !DILocation(line: 223, column: 14, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3805, file: !2493, line: 222, column: 26)
!3810 = !DILocation(line: 224, column: 9, scope: !3809)
!3811 = !DILocation(line: 224, column: 19, scope: !3809)
!3812 = !DILocation(line: 225, column: 3, scope: !3809)
!3813 = !DILocation(line: 226, column: 3, scope: !3809)
!3814 = !DILocation(line: 232, column: 29, scope: !3787)
!3815 = !DILocation(line: 232, column: 39, scope: !3787)
!3816 = !DILocation(line: 232, column: 2, scope: !3787)
!3817 = !DILocation(line: 232, column: 17, scope: !3787)
!3818 = !DILocation(line: 235, column: 16, scope: !3787)
!3819 = !DILocation(line: 237, column: 40, scope: !3787)
!3820 = !DILocation(line: 237, column: 26, scope: !3787)
!3821 = !DILocation(line: 239, column: 23, scope: !3787)
!3822 = !DILocation(line: 239, column: 17, scope: !3787)
!3823 = !DILocation(line: 241, column: 26, scope: !3787)
!3824 = !DILocation(line: 241, column: 2, scope: !3787)
!3825 = !DILocation(line: 242, column: 2, scope: !3787)
!3826 = !DILocation(line: 244, column: 15, scope: !3787)
!3827 = !DILocation(line: 244, column: 2, scope: !3787)
!3828 = !DILocation(line: 244, column: 19, scope: !3787)
!3829 = !DILocation(line: 245, column: 2, scope: !3787)
!3830 = !DILocation(line: 247, column: 22, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3787, file: !2493, line: 247, column: 6)
!3832 = !DILocation(line: 247, column: 14, scope: !3831)
!3833 = !DILocation(line: 247, column: 6, scope: !3787)
!3834 = !DILocation(line: 248, column: 19, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3831, file: !2493, line: 247, column: 33)
!3836 = !DILocation(line: 249, column: 2, scope: !3835)
!3837 = !DILocation(line: 252, column: 15, scope: !3787)
!3838 = !DILocation(line: 252, column: 13, scope: !3787)
!3839 = !DILocation(line: 254, column: 1, scope: !3787)
!3840 = distinct !DISubprogram(name: "set_child", scope: !2493, file: !2493, line: 34, type: !3841, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !3843)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{null, !2498, !167, !108}
!3843 = !{!3844, !3845, !3846, !3847, !3850}
!3844 = !DILocalVariable(name: "n", arg: 1, scope: !3840, file: !2493, line: 34, type: !2498)
!3845 = !DILocalVariable(name: "side", arg: 2, scope: !3840, file: !2493, line: 34, type: !167)
!3846 = !DILocalVariable(name: "val", arg: 3, scope: !3840, file: !2493, line: 34, type: !108)
!3847 = !DILocalVariable(name: "old", scope: !3848, file: !2493, line: 40, type: !22)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !2493, line: 39, column: 9)
!3849 = distinct !DILexicalBlock(scope: !3840, file: !2493, line: 37, column: 6)
!3850 = !DILocalVariable(name: "new", scope: !3848, file: !2493, line: 41, type: !22)
!3851 = !DILocation(line: 0, scope: !3840)
!3852 = !DILocation(line: 37, column: 11, scope: !3849)
!3853 = !DILocation(line: 37, column: 6, scope: !3840)
!3854 = !DILocation(line: 38, column: 3, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3849, file: !2493, line: 37, column: 18)
!3856 = !DILocation(line: 38, column: 18, scope: !3855)
!3857 = !DILocation(line: 39, column: 2, scope: !3855)
!3858 = !DILocation(line: 40, column: 31, scope: !3848)
!3859 = !DILocation(line: 40, column: 19, scope: !3848)
!3860 = !DILocation(line: 0, scope: !3848)
!3861 = !DILocation(line: 41, column: 19, scope: !3848)
!3862 = !DILocation(line: 43, column: 41, scope: !3848)
!3863 = !DILocation(line: 43, column: 34, scope: !3848)
!3864 = !DILocation(line: 43, column: 20, scope: !3848)
!3865 = !DILocation(line: 43, column: 18, scope: !3848)
!3866 = !DILocation(line: 45, column: 1, scope: !3840)
!3867 = distinct !DISubprogram(name: "set_color", scope: !2493, file: !2493, line: 63, type: !3868, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !3870)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{null, !2498, !2492}
!3870 = !{!3871, !3872, !3873}
!3871 = !DILocalVariable(name: "n", arg: 1, scope: !3867, file: !2493, line: 63, type: !2498)
!3872 = !DILocalVariable(name: "color", arg: 2, scope: !3867, file: !2493, line: 63, type: !2492)
!3873 = !DILocalVariable(name: "p", scope: !3867, file: !2493, line: 67, type: !3874)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 32)
!3875 = !DILocation(line: 0, scope: !3867)
!3876 = !DILocation(line: 67, column: 17, scope: !3867)
!3877 = !DILocation(line: 69, column: 8, scope: !3867)
!3878 = !DILocation(line: 69, column: 11, scope: !3867)
!3879 = !DILocation(line: 69, column: 21, scope: !3867)
!3880 = !DILocation(line: 69, column: 19, scope: !3867)
!3881 = !DILocation(line: 69, column: 5, scope: !3867)
!3882 = !DILocation(line: 70, column: 1, scope: !3867)
!3883 = distinct !DISubprogram(name: "find_and_stack", scope: !2493, file: !2493, line: 79, type: !3884, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !3887)
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!109, !3740, !2498, !3886}
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 32)
!3887 = !{!3888, !3889, !3890, !3891, !3892, !3894}
!3888 = !DILocalVariable(name: "tree", arg: 1, scope: !3883, file: !2493, line: 79, type: !3740)
!3889 = !DILocalVariable(name: "node", arg: 2, scope: !3883, file: !2493, line: 79, type: !2498)
!3890 = !DILocalVariable(name: "stack", arg: 3, scope: !3883, file: !2493, line: 80, type: !3886)
!3891 = !DILocalVariable(name: "sz", scope: !3883, file: !2493, line: 82, type: !109)
!3892 = !DILocalVariable(name: "side", scope: !3893, file: !2493, line: 87, type: !167)
!3893 = distinct !DILexicalBlock(scope: !3883, file: !2493, line: 86, column: 32)
!3894 = !DILocalVariable(name: "ch", scope: !3893, file: !2493, line: 88, type: !2498)
!3895 = !DILocation(line: 0, scope: !3883)
!3896 = !DILocation(line: 84, column: 22, scope: !3883)
!3897 = !DILocation(line: 84, column: 14, scope: !3883)
!3898 = !DILocation(line: 87, column: 24, scope: !3893)
!3899 = !DILocation(line: 86, column: 23, scope: !3883)
!3900 = !DILocation(line: 86, column: 2, scope: !3883)
!3901 = !DILocation(line: 87, column: 18, scope: !3893)
!3902 = !DILocation(line: 0, scope: !3893)
!3903 = !DILocation(line: 88, column: 33, scope: !3893)
!3904 = !DILocation(line: 88, column: 23, scope: !3893)
!3905 = !DILocation(line: 90, column: 10, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3893, file: !2493, line: 90, column: 7)
!3907 = !DILocation(line: 90, column: 7, scope: !3893)
!3908 = !DILocation(line: 91, column: 12, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3906, file: !2493, line: 90, column: 19)
!3910 = !DILocation(line: 91, column: 4, scope: !3909)
!3911 = !DILocation(line: 91, column: 16, scope: !3909)
!3912 = !DILocation(line: 97, column: 2, scope: !3883)
!3913 = distinct !DISubprogram(name: "fix_extra_red", scope: !2493, file: !2493, line: 155, type: !3914, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !3916)
!3914 = !DISubroutineType(types: !3915)
!3915 = !{null, !3886, !109}
!3916 = !{!3917, !3918, !3919, !3921, !3922, !3923, !3924, !3925}
!3917 = !DILocalVariable(name: "stack", arg: 1, scope: !3913, file: !2493, line: 155, type: !3886)
!3918 = !DILocalVariable(name: "stacksz", arg: 2, scope: !3913, file: !2493, line: 155, type: !109)
!3919 = !DILocalVariable(name: "node", scope: !3920, file: !2493, line: 158, type: !2498)
!3920 = distinct !DILexicalBlock(scope: !3913, file: !2493, line: 157, column: 22)
!3921 = !DILocalVariable(name: "parent", scope: !3920, file: !2493, line: 159, type: !2498)
!3922 = !DILocalVariable(name: "grandparent", scope: !3920, file: !2493, line: 176, type: !2498)
!3923 = !DILocalVariable(name: "side", scope: !3920, file: !2493, line: 177, type: !167)
!3924 = !DILocalVariable(name: "aunt", scope: !3920, file: !2493, line: 178, type: !2498)
!3925 = !DILocalVariable(name: "parent_side", scope: !3920, file: !2493, line: 198, type: !167)
!3926 = !DILocation(line: 0, scope: !3913)
!3927 = !DILocation(line: 157, column: 17, scope: !3913)
!3928 = !DILocation(line: 157, column: 2, scope: !3913)
!3929 = !DILocation(line: 158, column: 39, scope: !3920)
!3930 = !DILocation(line: 158, column: 25, scope: !3920)
!3931 = !DILocation(line: 0, scope: !3920)
!3932 = !DILocation(line: 159, column: 41, scope: !3920)
!3933 = !DILocation(line: 159, column: 27, scope: !3920)
!3934 = !DILocation(line: 167, column: 7, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3920, file: !2493, line: 167, column: 7)
!3936 = !DILocation(line: 167, column: 7, scope: !3920)
!3937 = !DILocation(line: 176, column: 46, scope: !3920)
!3938 = !DILocation(line: 176, column: 32, scope: !3920)
!3939 = !DILocation(line: 177, column: 18, scope: !3920)
!3940 = !DILocation(line: 179, column: 13, scope: !3920)
!3941 = !DILocation(line: 179, column: 7, scope: !3920)
!3942 = !DILocation(line: 178, column: 25, scope: !3920)
!3943 = !DILocation(line: 181, column: 13, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3920, file: !2493, line: 181, column: 7)
!3945 = !DILocation(line: 181, column: 22, scope: !3944)
!3946 = !DILocation(line: 181, column: 25, scope: !3944)
!3947 = !DILocation(line: 181, column: 7, scope: !3920)
!3948 = !DILocation(line: 198, column: 25, scope: !3920)
!3949 = !DILocation(line: 200, column: 19, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3920, file: !2493, line: 200, column: 7)
!3951 = !DILocation(line: 200, column: 7, scope: !3920)
!3952 = !DILocation(line: 201, column: 4, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3950, file: !2493, line: 200, column: 28)
!3954 = !DILocation(line: 202, column: 3, scope: !3953)
!3955 = !DILocation(line: 205, column: 3, scope: !3920)
!3956 = !DILocation(line: 206, column: 13, scope: !3920)
!3957 = !DILocation(line: 206, column: 3, scope: !3920)
!3958 = !DILocation(line: 182, column: 4, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3944, file: !2493, line: 181, column: 39)
!3960 = !DILocation(line: 183, column: 4, scope: !3959)
!3961 = !DILocation(line: 184, column: 4, scope: !3959)
!3962 = !DILocation(line: 215, column: 1, scope: !3913)
!3963 = distinct !DISubprogram(name: "is_black", scope: !2493, file: !2493, line: 53, type: !3964, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !3966)
!3964 = !DISubroutineType(types: !3965)
!3965 = !{!334, !2498}
!3966 = !{!3967}
!3967 = !DILocalVariable(name: "n", arg: 1, scope: !3963, file: !2493, line: 53, type: !2498)
!3968 = !DILocation(line: 0, scope: !3963)
!3969 = !DILocation(line: 55, column: 9, scope: !3963)
!3970 = !DILocation(line: 55, column: 22, scope: !3963)
!3971 = !DILocation(line: 55, column: 2, scope: !3963)
!3972 = distinct !DISubprogram(name: "get_side", scope: !2493, file: !2493, line: 111, type: !3973, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !3975)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!167, !2498, !2498}
!3975 = !{!3976, !3977}
!3976 = !DILocalVariable(name: "parent", arg: 1, scope: !3972, file: !2493, line: 111, type: !2498)
!3977 = !DILocalVariable(name: "child", arg: 2, scope: !3972, file: !2493, line: 111, type: !2498)
!3978 = !DILocation(line: 0, scope: !3972)
!3979 = !DILocation(line: 115, column: 10, scope: !3972)
!3980 = !DILocation(line: 115, column: 32, scope: !3972)
!3981 = !DILocation(line: 115, column: 9, scope: !3972)
!3982 = !DILocation(line: 115, column: 2, scope: !3972)
!3983 = distinct !DISubprogram(name: "is_red", scope: !2493, file: !2493, line: 58, type: !3964, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !3984)
!3984 = !{!3985}
!3985 = !DILocalVariable(name: "n", arg: 1, scope: !3983, file: !2493, line: 58, type: !2498)
!3986 = !DILocation(line: 0, scope: !3983)
!3987 = !DILocation(line: 60, column: 9, scope: !3983)
!3988 = !DILocation(line: 60, column: 22, scope: !3983)
!3989 = !DILocation(line: 60, column: 2, scope: !3983)
!3990 = distinct !DISubprogram(name: "rotate", scope: !2493, file: !2493, line: 128, type: !3914, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !3991)
!3991 = !{!3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999}
!3992 = !DILocalVariable(name: "stack", arg: 1, scope: !3990, file: !2493, line: 128, type: !3886)
!3993 = !DILocalVariable(name: "stacksz", arg: 2, scope: !3990, file: !2493, line: 128, type: !109)
!3994 = !DILocalVariable(name: "parent", scope: !3990, file: !2493, line: 132, type: !2498)
!3995 = !DILocalVariable(name: "child", scope: !3990, file: !2493, line: 133, type: !2498)
!3996 = !DILocalVariable(name: "side", scope: !3990, file: !2493, line: 134, type: !167)
!3997 = !DILocalVariable(name: "a", scope: !3990, file: !2493, line: 135, type: !2498)
!3998 = !DILocalVariable(name: "b", scope: !3990, file: !2493, line: 136, type: !2498)
!3999 = !DILocalVariable(name: "grandparent", scope: !4000, file: !2493, line: 139, type: !2498)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !2493, line: 138, column: 20)
!4001 = distinct !DILexicalBlock(scope: !3990, file: !2493, line: 138, column: 6)
!4002 = !DILocation(line: 0, scope: !3990)
!4003 = !DILocation(line: 132, column: 40, scope: !3990)
!4004 = !DILocation(line: 132, column: 26, scope: !3990)
!4005 = !DILocation(line: 133, column: 39, scope: !3990)
!4006 = !DILocation(line: 133, column: 25, scope: !3990)
!4007 = !DILocation(line: 134, column: 17, scope: !3990)
!4008 = !{i8 0, i8 2}
!4009 = !DILocation(line: 135, column: 21, scope: !3990)
!4010 = !DILocation(line: 136, column: 38, scope: !3990)
!4011 = !DILocation(line: 136, column: 21, scope: !3990)
!4012 = !DILocation(line: 138, column: 14, scope: !4001)
!4013 = !DILocation(line: 138, column: 6, scope: !3990)
!4014 = !DILocation(line: 139, column: 46, scope: !4000)
!4015 = !DILocation(line: 139, column: 32, scope: !4000)
!4016 = !DILocation(line: 0, scope: !4000)
!4017 = !DILocation(line: 141, column: 26, scope: !4000)
!4018 = !DILocation(line: 141, column: 57, scope: !4000)
!4019 = !DILocation(line: 141, column: 3, scope: !4000)
!4020 = !DILocation(line: 142, column: 2, scope: !4000)
!4021 = !DILocation(line: 144, column: 25, scope: !3990)
!4022 = !DILocation(line: 144, column: 2, scope: !3990)
!4023 = !DILocation(line: 145, column: 43, scope: !3990)
!4024 = !DILocation(line: 145, column: 2, scope: !3990)
!4025 = !DILocation(line: 146, column: 26, scope: !3990)
!4026 = !DILocation(line: 146, column: 2, scope: !3990)
!4027 = !DILocation(line: 147, column: 21, scope: !3990)
!4028 = !DILocation(line: 148, column: 21, scope: !3990)
!4029 = !DILocation(line: 149, column: 1, scope: !3990)
!4030 = distinct !DISubprogram(name: "get_color", scope: !2493, file: !2493, line: 47, type: !4031, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4033)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!2492, !2498}
!4033 = !{!4034}
!4034 = !DILocalVariable(name: "n", arg: 1, scope: !4030, file: !2493, line: 47, type: !2498)
!4035 = !DILocation(line: 0, scope: !4030)
!4036 = !DILocation(line: 50, column: 21, scope: !4030)
!4037 = !DILocation(line: 50, column: 10, scope: !4030)
!4038 = !DILocation(line: 50, column: 37, scope: !4030)
!4039 = !DILocation(line: 50, column: 2, scope: !4030)
!4040 = distinct !DISubprogram(name: "rb_remove", scope: !2493, file: !2493, line: 367, type: !3788, scopeLine: 368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4041)
!4041 = !{!4042, !4043, !4044, !4045, !4046, !4050, !4051, !4054, !4055, !4056, !4057, !4058, !4059}
!4042 = !DILocalVariable(name: "tree", arg: 1, scope: !4040, file: !2493, line: 367, type: !3740)
!4043 = !DILocalVariable(name: "node", arg: 2, scope: !4040, file: !2493, line: 367, type: !2498)
!4044 = !DILocalVariable(name: "tmp", scope: !4040, file: !2493, line: 369, type: !2498)
!4045 = !DILocalVariable(name: "__vla_expr0", scope: !4040, type: !32, flags: DIFlagArtificial)
!4046 = !DILocalVariable(name: "stack", scope: !4040, file: !2493, line: 373, type: !4047)
!4047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2498, elements: !4048)
!4048 = !{!4049}
!4049 = !DISubrange(count: !4045)
!4050 = !DILocalVariable(name: "stacksz", scope: !4040, file: !2493, line: 376, type: !109)
!4051 = !DILocalVariable(name: "stacksz0", scope: !4052, file: !2493, line: 388, type: !109)
!4052 = distinct !DILexicalBlock(scope: !4053, file: !2493, line: 387, column: 70)
!4053 = distinct !DILexicalBlock(scope: !4040, file: !2493, line: 387, column: 6)
!4054 = !DILocalVariable(name: "hiparent", scope: !4052, file: !2493, line: 389, type: !2498)
!4055 = !DILocalVariable(name: "loparent", scope: !4052, file: !2493, line: 389, type: !2498)
!4056 = !DILocalVariable(name: "node2", scope: !4052, file: !2493, line: 390, type: !2498)
!4057 = !DILocalVariable(name: "ctmp", scope: !4052, file: !2493, line: 440, type: !2492)
!4058 = !DILocalVariable(name: "child", scope: !4040, file: !2493, line: 449, type: !2498)
!4059 = !DILocalVariable(name: "parent", scope: !4040, file: !2493, line: 466, type: !2498)
!4060 = !DILocation(line: 0, scope: !4040)
!4061 = !DILocation(line: 373, column: 29, scope: !4040)
!4062 = !DILocation(line: 373, column: 39, scope: !4040)
!4063 = !DILocation(line: 373, column: 2, scope: !4040)
!4064 = !DILocation(line: 373, column: 17, scope: !4040)
!4065 = !DILocation(line: 376, column: 16, scope: !4040)
!4066 = !DILocation(line: 378, column: 28, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4040, file: !2493, line: 378, column: 6)
!4068 = !DILocation(line: 378, column: 14, scope: !4067)
!4069 = !DILocation(line: 378, column: 11, scope: !4067)
!4070 = !DILocation(line: 378, column: 6, scope: !4040)
!4071 = !DILocation(line: 387, column: 7, scope: !4053)
!4072 = !DILocation(line: 387, column: 27, scope: !4053)
!4073 = !DILocation(line: 387, column: 36, scope: !4053)
!4074 = !DILocation(line: 387, column: 40, scope: !4053)
!4075 = !DILocation(line: 387, column: 60, scope: !4053)
!4076 = !DILocation(line: 387, column: 6, scope: !4040)
!4077 = !DILocation(line: 0, scope: !4052)
!4078 = !DILocation(line: 392, column: 23, scope: !4052)
!4079 = !DILocation(line: 392, column: 14, scope: !4052)
!4080 = !DILocation(line: 392, column: 44, scope: !4052)
!4081 = !DILocation(line: 392, column: 30, scope: !4052)
!4082 = !DILocation(line: 393, column: 3, scope: !4052)
!4083 = !DILocation(line: 393, column: 20, scope: !4052)
!4084 = !DILocation(line: 394, column: 10, scope: !4052)
!4085 = !DILocation(line: 394, column: 31, scope: !4052)
!4086 = !DILocation(line: 394, column: 3, scope: !4052)
!4087 = !DILocation(line: 396, column: 4, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4052, file: !2493, line: 394, column: 40)
!4089 = !DILocation(line: 396, column: 21, scope: !4088)
!4090 = distinct !{!4090, !4086, !4091}
!4091 = !DILocation(line: 397, column: 3, scope: !4052)
!4092 = !DILocation(line: 399, column: 28, scope: !4052)
!4093 = !DILocation(line: 399, column: 14, scope: !4052)
!4094 = !DILocation(line: 417, column: 16, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4052, file: !2493, line: 417, column: 7)
!4096 = !DILocation(line: 417, column: 7, scope: !4052)
!4097 = !DILocation(line: 418, column: 24, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4095, file: !2493, line: 417, column: 25)
!4099 = !DILocation(line: 418, column: 50, scope: !4098)
!4100 = !DILocation(line: 418, column: 4, scope: !4098)
!4101 = !DILocation(line: 419, column: 3, scope: !4098)
!4102 = !DILocation(line: 420, column: 10, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4095, file: !2493, line: 419, column: 10)
!4104 = !DILocation(line: 420, column: 15, scope: !4103)
!4105 = !DILocation(line: 423, column: 16, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4052, file: !2493, line: 423, column: 7)
!4107 = !DILocation(line: 423, column: 7, scope: !4052)
!4108 = !DILocation(line: 427, column: 24, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4106, file: !2493, line: 426, column: 10)
!4110 = !DILocation(line: 427, column: 51, scope: !4109)
!4111 = !DILocation(line: 427, column: 4, scope: !4109)
!4112 = !DILocation(line: 428, column: 10, scope: !4109)
!4113 = !DILocation(line: 0, scope: !4106)
!4114 = !DILocation(line: 433, column: 24, scope: !4052)
!4115 = !DILocation(line: 433, column: 3, scope: !4052)
!4116 = !DILocation(line: 434, column: 3, scope: !4052)
!4117 = !DILocation(line: 436, column: 9, scope: !4052)
!4118 = !DILocation(line: 437, column: 25, scope: !4052)
!4119 = !DILocation(line: 437, column: 23, scope: !4052)
!4120 = !DILocation(line: 438, column: 22, scope: !4052)
!4121 = !DILocation(line: 440, column: 24, scope: !4052)
!4122 = !DILocation(line: 442, column: 19, scope: !4052)
!4123 = !{i32 0, i32 2}
!4124 = !DILocation(line: 442, column: 3, scope: !4052)
!4125 = !DILocation(line: 443, column: 3, scope: !4052)
!4126 = !DILocation(line: 444, column: 2, scope: !4052)
!4127 = !DILocation(line: 449, column: 25, scope: !4040)
!4128 = !DILocation(line: 451, column: 12, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4040, file: !2493, line: 451, column: 6)
!4130 = !DILocation(line: 451, column: 6, scope: !4040)
!4131 = !DILocation(line: 452, column: 11, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4129, file: !2493, line: 451, column: 21)
!4133 = !DILocation(line: 453, column: 2, scope: !4132)
!4134 = !DILocation(line: 456, column: 14, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4040, file: !2493, line: 456, column: 6)
!4136 = !DILocation(line: 456, column: 6, scope: !4040)
!4137 = !DILocation(line: 457, column: 9, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4135, file: !2493, line: 456, column: 19)
!4139 = !DILocation(line: 457, column: 14, scope: !4138)
!4140 = !DILocation(line: 458, column: 13, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4138, file: !2493, line: 458, column: 7)
!4142 = !DILocation(line: 458, column: 7, scope: !4138)
!4143 = !DILocation(line: 459, column: 4, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4141, file: !2493, line: 458, column: 22)
!4145 = !DILocation(line: 460, column: 3, scope: !4144)
!4146 = !DILocation(line: 461, column: 20, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4141, file: !2493, line: 460, column: 10)
!4148 = !DILocation(line: 466, column: 40, scope: !4040)
!4149 = !DILocation(line: 466, column: 26, scope: !4040)
!4150 = !DILocation(line: 473, column: 12, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4040, file: !2493, line: 473, column: 6)
!4152 = !DILocation(line: 473, column: 6, scope: !4040)
!4153 = !DILocation(line: 474, column: 7, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !2493, line: 474, column: 7)
!4155 = distinct !DILexicalBlock(scope: !4151, file: !2493, line: 473, column: 21)
!4156 = !DILocation(line: 474, column: 7, scope: !4155)
!4157 = !DILocation(line: 475, column: 4, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4154, file: !2493, line: 474, column: 23)
!4159 = !DILocation(line: 476, column: 3, scope: !4158)
!4160 = !DILocation(line: 478, column: 22, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4154, file: !2493, line: 476, column: 10)
!4162 = !DILocation(line: 478, column: 4, scope: !4161)
!4163 = !DILocation(line: 481, column: 21, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4151, file: !2493, line: 480, column: 9)
!4165 = !DILocation(line: 481, column: 45, scope: !4164)
!4166 = !DILocation(line: 481, column: 3, scope: !4164)
!4167 = !DILocation(line: 486, column: 3, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !2493, line: 486, column: 3)
!4169 = distinct !DILexicalBlock(scope: !4164, file: !2493, line: 486, column: 3)
!4170 = !DILocation(line: 486, column: 3, scope: !4169)
!4171 = !DILocation(line: 486, column: 3, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4168, file: !2493, line: 486, column: 3)
!4173 = !DILocation(line: 487, column: 7, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4164, file: !2493, line: 487, column: 7)
!4175 = !DILocation(line: 487, column: 20, scope: !4174)
!4176 = !DILocation(line: 487, column: 23, scope: !4174)
!4177 = !DILocation(line: 487, column: 7, scope: !4164)
!4178 = !DILocation(line: 488, column: 4, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4174, file: !2493, line: 487, column: 38)
!4180 = !DILocation(line: 489, column: 3, scope: !4179)
!4181 = !DILocation(line: 493, column: 15, scope: !4040)
!4182 = !DILocation(line: 493, column: 8, scope: !4040)
!4183 = !DILocation(line: 493, column: 13, scope: !4040)
!4184 = !DILocation(line: 494, column: 1, scope: !4040)
!4185 = distinct !DISubprogram(name: "fix_missing_black", scope: !2493, file: !2493, line: 266, type: !4186, scopeLine: 268, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4188)
!4186 = !DISubroutineType(types: !4187)
!4187 = !{null, !3886, !109, !2498}
!4188 = !{!4189, !4190, !4191, !4192, !4194, !4195, !4196, !4197, !4198, !4199, !4200}
!4189 = !DILocalVariable(name: "stack", arg: 1, scope: !4185, file: !2493, line: 266, type: !3886)
!4190 = !DILocalVariable(name: "stacksz", arg: 2, scope: !4185, file: !2493, line: 266, type: !109)
!4191 = !DILocalVariable(name: "null_node", arg: 3, scope: !4185, file: !2493, line: 267, type: !2498)
!4192 = !DILocalVariable(name: "c0", scope: !4193, file: !2493, line: 271, type: !2498)
!4193 = distinct !DILexicalBlock(scope: !4185, file: !2493, line: 270, column: 22)
!4194 = !DILocalVariable(name: "c1", scope: !4193, file: !2493, line: 271, type: !2498)
!4195 = !DILocalVariable(name: "inner", scope: !4193, file: !2493, line: 271, type: !2498)
!4196 = !DILocalVariable(name: "outer", scope: !4193, file: !2493, line: 271, type: !2498)
!4197 = !DILocalVariable(name: "n", scope: !4193, file: !2493, line: 272, type: !2498)
!4198 = !DILocalVariable(name: "parent", scope: !4193, file: !2493, line: 273, type: !2498)
!4199 = !DILocalVariable(name: "n_side", scope: !4193, file: !2493, line: 274, type: !167)
!4200 = !DILocalVariable(name: "sib", scope: !4193, file: !2493, line: 275, type: !2498)
!4201 = !DILocation(line: 0, scope: !4185)
!4202 = !DILocation(line: 270, column: 17, scope: !4185)
!4203 = !DILocation(line: 270, column: 2, scope: !4185)
!4204 = !DILocation(line: 272, column: 36, scope: !4193)
!4205 = !DILocation(line: 272, column: 22, scope: !4193)
!4206 = !DILocation(line: 0, scope: !4193)
!4207 = !DILocation(line: 273, column: 41, scope: !4193)
!4208 = !DILocation(line: 273, column: 27, scope: !4193)
!4209 = !DILocation(line: 274, column: 20, scope: !4193)
!4210 = !DILocation(line: 276, column: 21, scope: !4193)
!4211 = !DILocation(line: 276, column: 13, scope: !4193)
!4212 = !DILocation(line: 275, column: 24, scope: !4193)
!4213 = !DILocation(line: 285, column: 8, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4193, file: !2493, line: 285, column: 7)
!4215 = !DILocation(line: 285, column: 7, scope: !4193)
!4216 = !DILocation(line: 286, column: 23, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4214, file: !2493, line: 285, column: 23)
!4218 = !DILocation(line: 287, column: 4, scope: !4217)
!4219 = !DILocation(line: 288, column: 4, scope: !4217)
!4220 = !DILocation(line: 289, column: 4, scope: !4217)
!4221 = !DILocation(line: 290, column: 17, scope: !4217)
!4222 = !DILocation(line: 290, column: 4, scope: !4217)
!4223 = !DILocation(line: 290, column: 21, scope: !4217)
!4224 = !DILocation(line: 292, column: 13, scope: !4217)
!4225 = !DILocation(line: 293, column: 10, scope: !4217)
!4226 = !DILocation(line: 294, column: 3, scope: !4217)
!4227 = !DILocation(line: 301, column: 8, scope: !4193)
!4228 = !DILocation(line: 302, column: 8, scope: !4193)
!4229 = !DILocation(line: 303, column: 12, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4193, file: !2493, line: 303, column: 7)
!4231 = !DILocation(line: 303, column: 21, scope: !4230)
!4232 = !DILocation(line: 303, column: 24, scope: !4230)
!4233 = !DILocation(line: 303, column: 38, scope: !4230)
!4234 = !DILocation(line: 303, column: 46, scope: !4230)
!4235 = !DILocation(line: 303, column: 55, scope: !4230)
!4236 = !DILocation(line: 304, column: 6, scope: !4230)
!4237 = !DILocation(line: 303, column: 7, scope: !4193)
!4238 = !DILocation(line: 305, column: 10, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !2493, line: 305, column: 8)
!4240 = distinct !DILexicalBlock(scope: !4230, file: !2493, line: 304, column: 21)
!4241 = !DILocation(line: 305, column: 8, scope: !4240)
!4242 = !DILocation(line: 306, column: 5, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4239, file: !2493, line: 305, column: 24)
!4244 = !DILocation(line: 307, column: 4, scope: !4243)
!4245 = !DILocation(line: 309, column: 4, scope: !4240)
!4246 = !DILocation(line: 310, column: 8, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4240, file: !2493, line: 310, column: 8)
!4248 = !DILocation(line: 310, column: 8, scope: !4240)
!4249 = !DILocation(line: 320, column: 5, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4247, file: !2493, line: 318, column: 11)
!4251 = !DILocation(line: 321, column: 5, scope: !4250)
!4252 = !DILocation(line: 331, column: 11, scope: !4193)
!4253 = !DILocation(line: 332, column: 16, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4193, file: !2493, line: 332, column: 7)
!4255 = !DILocation(line: 332, column: 25, scope: !4254)
!4256 = !DILocation(line: 332, column: 28, scope: !4254)
!4257 = !DILocation(line: 332, column: 7, scope: !4193)
!4258 = !DILocation(line: 358, column: 17, scope: !4193)
!4259 = !DILocation(line: 333, column: 12, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4254, file: !2493, line: 332, column: 44)
!4261 = !DILocation(line: 335, column: 18, scope: !4260)
!4262 = !DILocation(line: 335, column: 4, scope: !4260)
!4263 = !DILocation(line: 335, column: 23, scope: !4260)
!4264 = !DILocation(line: 336, column: 17, scope: !4260)
!4265 = !DILocation(line: 336, column: 4, scope: !4260)
!4266 = !DILocation(line: 336, column: 21, scope: !4260)
!4267 = !DILocation(line: 337, column: 4, scope: !4260)
!4268 = !DILocation(line: 338, column: 4, scope: !4260)
!4269 = !DILocation(line: 339, column: 4, scope: !4260)
!4270 = !DILocation(line: 344, column: 10, scope: !4260)
!4271 = !DILocation(line: 345, column: 12, scope: !4260)
!4272 = !DILocation(line: 346, column: 23, scope: !4260)
!4273 = !DILocation(line: 348, column: 3, scope: !4260)
!4274 = !DILocation(line: 355, column: 18, scope: !4193)
!4275 = !DILocation(line: 355, column: 3, scope: !4193)
!4276 = !DILocation(line: 356, column: 3, scope: !4193)
!4277 = !DILocation(line: 357, column: 3, scope: !4193)
!4278 = !DILocation(line: 358, column: 3, scope: !4193)
!4279 = !DILocation(line: 358, column: 22, scope: !4193)
!4280 = !DILocation(line: 359, column: 3, scope: !4193)
!4281 = !DILocation(line: 360, column: 9, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4193, file: !2493, line: 360, column: 7)
!4283 = !DILocation(line: 360, column: 7, scope: !4193)
!4284 = !DILocation(line: 361, column: 4, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4282, file: !2493, line: 360, column: 23)
!4286 = !DILocation(line: 362, column: 3, scope: !4285)
!4287 = !DILocation(line: 316, column: 12, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4247, file: !2493, line: 310, column: 26)
!4289 = !DILocation(line: 365, column: 1, scope: !4185)
!4290 = distinct !DISubprogram(name: "z_rb_walk", scope: !2493, file: !2493, line: 497, type: !4291, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4297)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{null, !2498, !4293, !108}
!4293 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_visit_t", file: !157, line: 93, baseType: !4294)
!4294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4295, size: 32)
!4295 = !DISubroutineType(types: !4296)
!4296 = !{null, !2498, !108}
!4297 = !{!4298, !4299, !4300}
!4298 = !DILocalVariable(name: "node", arg: 1, scope: !4290, file: !2493, line: 497, type: !2498)
!4299 = !DILocalVariable(name: "visit_fn", arg: 2, scope: !4290, file: !2493, line: 497, type: !4293)
!4300 = !DILocalVariable(name: "cookie", arg: 3, scope: !4290, file: !2493, line: 497, type: !108)
!4301 = !DILocation(line: 0, scope: !4290)
!4302 = !DILocation(line: 499, column: 11, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4290, file: !2493, line: 499, column: 6)
!4304 = !DILocation(line: 499, column: 6, scope: !4290)
!4305 = !DILocation(line: 500, column: 13, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4303, file: !2493, line: 499, column: 20)
!4307 = !DILocation(line: 500, column: 3, scope: !4306)
!4308 = !DILocation(line: 501, column: 3, scope: !4306)
!4309 = !DILocation(line: 502, column: 13, scope: !4306)
!4310 = !DILocation(line: 504, column: 1, scope: !4290)
!4311 = distinct !DISubprogram(name: "z_rb_child", scope: !2493, file: !2493, line: 507, type: !3769, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4312)
!4312 = !{!4313, !4314}
!4313 = !DILocalVariable(name: "node", arg: 1, scope: !4311, file: !2493, line: 507, type: !2498)
!4314 = !DILocalVariable(name: "side", arg: 2, scope: !4311, file: !2493, line: 507, type: !167)
!4315 = !DILocation(line: 0, scope: !4311)
!4316 = !DILocation(line: 509, column: 9, scope: !4311)
!4317 = !DILocation(line: 509, column: 2, scope: !4311)
!4318 = distinct !DISubprogram(name: "z_rb_is_black", scope: !2493, file: !2493, line: 512, type: !4319, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4321)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{!109, !2498}
!4321 = !{!4322}
!4322 = !DILocalVariable(name: "node", arg: 1, scope: !4318, file: !2493, line: 512, type: !2498)
!4323 = !DILocation(line: 0, scope: !4318)
!4324 = !DILocation(line: 514, column: 9, scope: !4318)
!4325 = !DILocation(line: 514, column: 2, scope: !4318)
!4326 = distinct !DISubprogram(name: "rb_contains", scope: !2493, file: !2493, line: 517, type: !4327, scopeLine: 518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4329)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!334, !3740, !2498}
!4329 = !{!4330, !4331, !4332}
!4330 = !DILocalVariable(name: "tree", arg: 1, scope: !4326, file: !2493, line: 517, type: !3740)
!4331 = !DILocalVariable(name: "node", arg: 2, scope: !4326, file: !2493, line: 517, type: !2498)
!4332 = !DILocalVariable(name: "n", scope: !4326, file: !2493, line: 519, type: !2498)
!4333 = !DILocation(line: 0, scope: !4326)
!4334 = !DILocation(line: 519, column: 27, scope: !4326)
!4335 = !DILocation(line: 521, column: 12, scope: !4326)
!4336 = !DILocation(line: 521, column: 21, scope: !4326)
!4337 = !DILocation(line: 521, column: 2, scope: !4326)
!4338 = !DILocation(line: 522, column: 26, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4326, file: !2493, line: 521, column: 37)
!4340 = !DILocation(line: 522, column: 20, scope: !4339)
!4341 = !DILocation(line: 522, column: 7, scope: !4339)
!4342 = distinct !{!4342, !4337, !4343}
!4343 = !DILocation(line: 523, column: 2, scope: !4326)
!4344 = !DILocation(line: 525, column: 11, scope: !4326)
!4345 = !DILocation(line: 525, column: 2, scope: !4326)
!4346 = distinct !DISubprogram(name: "z_rb_foreach_next", scope: !2493, file: !2493, line: 557, type: !4347, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4355)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{!2498, !3740, !4349}
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 32)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !157, line: 155, size: 96, elements: !4351)
!4351 = !{!4352, !4353, !4354}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !4350, file: !157, line: 156, baseType: !3886, size: 32)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !4350, file: !157, line: 157, baseType: !1821, size: 32, offset: 32)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !4350, file: !157, line: 158, baseType: !736, size: 32, offset: 64)
!4355 = !{!4356, !4357, !4358}
!4356 = !DILocalVariable(name: "tree", arg: 1, scope: !4346, file: !2493, line: 557, type: !3740)
!4357 = !DILocalVariable(name: "f", arg: 2, scope: !4346, file: !2493, line: 557, type: !4349)
!4358 = !DILocalVariable(name: "n", scope: !4346, file: !2493, line: 559, type: !2498)
!4359 = !DILocation(line: 0, scope: !4346)
!4360 = !DILocation(line: 561, column: 12, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4346, file: !2493, line: 561, column: 6)
!4362 = !DILocation(line: 561, column: 17, scope: !4361)
!4363 = !DILocation(line: 561, column: 6, scope: !4346)
!4364 = !DILocation(line: 568, column: 9, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4346, file: !2493, line: 568, column: 6)
!4366 = !DILocation(line: 568, column: 13, scope: !4365)
!4367 = !DILocation(line: 568, column: 6, scope: !4346)
!4368 = !DILocation(line: 569, column: 10, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4365, file: !2493, line: 568, column: 20)
!4370 = !DILocation(line: 569, column: 3, scope: !4369)
!4371 = !DILocation(line: 575, column: 19, scope: !4346)
!4372 = !DILocation(line: 575, column: 16, scope: !4346)
!4373 = !DILocation(line: 575, column: 6, scope: !4346)
!4374 = !DILocation(line: 576, column: 8, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4346, file: !2493, line: 576, column: 6)
!4376 = !DILocation(line: 576, column: 6, scope: !4346)
!4377 = !DILocation(line: 577, column: 10, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4375, file: !2493, line: 576, column: 17)
!4379 = !DILocation(line: 577, column: 3, scope: !4378)
!4380 = !DILocation(line: 585, column: 9, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4346, file: !2493, line: 585, column: 6)
!4382 = !DILocation(line: 585, column: 6, scope: !4381)
!4383 = !DILocation(line: 585, column: 25, scope: !4381)
!4384 = !DILocation(line: 585, column: 6, scope: !4346)
!4385 = !DILocation(line: 586, column: 19, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4381, file: !2493, line: 585, column: 32)
!4387 = !DILocation(line: 586, column: 10, scope: !4386)
!4388 = !DILocation(line: 586, column: 3, scope: !4386)
!4389 = !DILocation(line: 593, column: 17, scope: !4346)
!4390 = !DILocation(line: 593, column: 22, scope: !4346)
!4391 = !DILocation(line: 594, column: 9, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4346, file: !2493, line: 593, column: 53)
!4393 = distinct !{!4393, !4394, !4395}
!4394 = !DILocation(line: 593, column: 2, scope: !4346)
!4395 = !DILocation(line: 595, column: 2, scope: !4346)
!4396 = !DILocation(line: 593, column: 26, scope: !4346)
!4397 = !DILocation(line: 593, column: 45, scope: !4346)
!4398 = !DILocation(line: 593, column: 13, scope: !4346)
!4399 = !DILocation(line: 597, column: 8, scope: !4346)
!4400 = !DILocation(line: 598, column: 9, scope: !4346)
!4401 = !DILocation(line: 598, column: 25, scope: !4346)
!4402 = !DILocation(line: 599, column: 1, scope: !4346)
!4403 = distinct !DISubprogram(name: "stack_left_limb", scope: !2493, file: !2493, line: 533, type: !4404, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4406)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{!2498, !2498, !4349}
!4406 = !{!4407, !4408}
!4407 = !DILocalVariable(name: "n", arg: 1, scope: !4403, file: !2493, line: 533, type: !2498)
!4408 = !DILocalVariable(name: "f", arg: 2, scope: !4403, file: !2493, line: 534, type: !4349)
!4409 = !DILocation(line: 0, scope: !4403)
!4410 = !DILocation(line: 536, column: 5, scope: !4403)
!4411 = !DILocation(line: 536, column: 8, scope: !4403)
!4412 = !DILocation(line: 537, column: 5, scope: !4403)
!4413 = !DILocation(line: 537, column: 2, scope: !4403)
!4414 = !DILocation(line: 537, column: 19, scope: !4403)
!4415 = !DILocation(line: 538, column: 5, scope: !4403)
!4416 = !DILocation(line: 538, column: 16, scope: !4403)
!4417 = !DILocation(line: 538, column: 2, scope: !4403)
!4418 = !DILocation(line: 538, column: 21, scope: !4403)
!4419 = !DILocation(line: 540, column: 14, scope: !4403)
!4420 = !DILocation(line: 540, column: 32, scope: !4403)
!4421 = !DILocation(line: 540, column: 2, scope: !4403)
!4422 = !DILocation(line: 541, column: 9, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4403, file: !2493, line: 540, column: 41)
!4424 = !DILocation(line: 542, column: 6, scope: !4423)
!4425 = !DILocation(line: 542, column: 3, scope: !4423)
!4426 = !DILocation(line: 542, column: 20, scope: !4423)
!4427 = !DILocation(line: 543, column: 6, scope: !4423)
!4428 = !DILocation(line: 543, column: 17, scope: !4423)
!4429 = !DILocation(line: 543, column: 3, scope: !4423)
!4430 = !DILocation(line: 543, column: 22, scope: !4423)
!4431 = distinct !{!4431, !4421, !4432}
!4432 = !DILocation(line: 544, column: 2, scope: !4403)
!4433 = !DILocation(line: 546, column: 12, scope: !4403)
!4434 = !DILocation(line: 546, column: 21, scope: !4403)
!4435 = !DILocation(line: 546, column: 9, scope: !4403)
!4436 = !DILocation(line: 546, column: 2, scope: !4403)
!4437 = distinct !DISubprogram(name: "z_thread_entry", scope: !4438, file: !4438, line: 30, type: !4439, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !4441)
!4438 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4439 = !DISubroutineType(types: !4440)
!4440 = !{null, !215, !108, !108, !108}
!4441 = !{!4442, !4443, !4444, !4445}
!4442 = !DILocalVariable(name: "entry", arg: 1, scope: !4437, file: !4438, line: 30, type: !215)
!4443 = !DILocalVariable(name: "p1", arg: 2, scope: !4437, file: !4438, line: 31, type: !108)
!4444 = !DILocalVariable(name: "p2", arg: 3, scope: !4437, file: !4438, line: 31, type: !108)
!4445 = !DILocalVariable(name: "p3", arg: 4, scope: !4437, file: !4438, line: 31, type: !108)
!4446 = !DILocation(line: 0, scope: !4437)
!4447 = !DILocation(line: 36, column: 2, scope: !4437)
!4448 = !DILocation(line: 38, column: 17, scope: !4437)
!4449 = !DILocation(line: 38, column: 2, scope: !4437)
!4450 = !DILocation(line: 45, column: 2, scope: !4437)
!4451 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !4452, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !1998)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{!4454}
!4454 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !4455)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 32)
!4456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !4457)
!4457 = !{!4458, !4516, !4528, !4529, !4530, !4537, !4538, !4539, !4540, !4546, !4561}
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4456, file: !145, line: 247, baseType: !4459, size: 384)
!4459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !4460)
!4460 = !{!4461, !4485, !4492, !4493, !4494, !4503, !4504, !4505}
!4461 = !DIDerivedType(tag: DW_TAG_member, scope: !4459, file: !145, line: 60, baseType: !4462, size: 64)
!4462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4459, file: !145, line: 60, size: 64, elements: !4463)
!4463 = !{!4464, !4479}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4462, file: !145, line: 61, baseType: !4465, size: 64)
!4465 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !4466)
!4466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !4467)
!4467 = !{!4468, !4474}
!4468 = !DIDerivedType(tag: DW_TAG_member, scope: !4466, file: !128, line: 38, baseType: !4469, size: 32)
!4469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4466, file: !128, line: 38, size: 32, elements: !4470)
!4470 = !{!4471, !4473}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4469, file: !128, line: 39, baseType: !4472, size: 32)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 32)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4469, file: !128, line: 40, baseType: !4472, size: 32)
!4474 = !DIDerivedType(tag: DW_TAG_member, scope: !4466, file: !128, line: 42, baseType: !4475, size: 32, offset: 32)
!4475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4466, file: !128, line: 42, size: 32, elements: !4476)
!4476 = !{!4477, !4478}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4475, file: !128, line: 43, baseType: !4472, size: 32)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4475, file: !128, line: 44, baseType: !4472, size: 32)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4462, file: !145, line: 62, baseType: !4480, size: 64)
!4480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !4481)
!4481 = !{!4482}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4480, file: !157, line: 50, baseType: !4483, size: 64)
!4483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4484, size: 64, elements: !162)
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 32)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4459, file: !145, line: 68, baseType: !4486, size: 32, offset: 64)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 32)
!4487 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !4488)
!4488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !4489)
!4489 = !{!4490}
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4488, file: !123, line: 232, baseType: !4491, size: 64)
!4491 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !4466)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4459, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4459, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!4494 = !DIDerivedType(tag: DW_TAG_member, scope: !4459, file: !145, line: 90, baseType: !4495, size: 16, offset: 112)
!4495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4459, file: !145, line: 90, size: 16, elements: !4496)
!4496 = !{!4497, !4502}
!4497 = !DIDerivedType(tag: DW_TAG_member, scope: !4495, file: !145, line: 91, baseType: !4498, size: 16)
!4498 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4495, file: !145, line: 91, size: 16, elements: !4499)
!4499 = !{!4500, !4501}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4498, file: !145, line: 96, baseType: !177, size: 8)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4498, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4495, file: !145, line: 100, baseType: !181, size: 16)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4459, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4459, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4459, file: !145, line: 131, baseType: !4506, size: 192, offset: 192)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !4507)
!4507 = !{!4508, !4509, !4515}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4506, file: !123, line: 245, baseType: !4465, size: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4506, file: !123, line: 246, baseType: !4510, size: 32, offset: 64)
!4510 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !4511)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 32)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{null, !4514}
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4506, size: 32)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4506, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4456, file: !145, line: 250, baseType: !4517, size: 288, offset: 384)
!4517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !4518)
!4518 = !{!4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4517, file: !198, line: 26, baseType: !110, size: 32)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4517, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4517, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4517, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4517, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4517, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4517, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4517, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4517, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4456, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4456, file: !145, line: 256, baseType: !4487, size: 64, offset: 704)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4456, file: !145, line: 271, baseType: !4531, size: 128, offset: 768)
!4531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !4532)
!4532 = !{!4533, !4534, !4535, !4536}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !4531, file: !145, line: 35, baseType: !215, size: 32)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !4531, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !4531, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !4531, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !4456, file: !145, line: 274, baseType: !4455, size: 32, offset: 896)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4456, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4456, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4456, file: !145, line: 300, baseType: !4541, size: 96, offset: 1216)
!4541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !4542)
!4542 = !{!4543, !4544, !4545}
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4541, file: !145, line: 153, baseType: !22, size: 32)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4541, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4541, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4456, file: !145, line: 325, baseType: !4547, size: 32, offset: 1312)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4548, size: 32)
!4548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !4549)
!4549 = !{!4550, !4556, !4557}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4548, file: !119, line: 5074, baseType: !4551, size: 96)
!4551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !4552)
!4552 = !{!4553, !4554, !4555}
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4551, file: !244, line: 57, baseType: !247, size: 32)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4551, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4551, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4548, file: !119, line: 5075, baseType: !4487, size: 64, offset: 96)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4548, file: !119, line: 5076, baseType: !4558, size: 32, offset: 160)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !4559)
!4559 = !{!4560}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4558, file: !254, line: 52, baseType: !22, size: 32)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4456, file: !145, line: 343, baseType: !4562, size: 64, offset: 1344)
!4562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !4563)
!4563 = !{!4564, !4565}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4562, file: !198, line: 63, baseType: !110, size: 32)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4562, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!4566 = !DILocation(line: 535, column: 9, scope: !4451)
!4567 = !DILocation(line: 535, column: 2, scope: !4451)
!4568 = distinct !DISubprogram(name: "k_thread_abort", scope: !3271, file: !3271, line: 188, type: !4569, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !4571)
!4569 = !DISubroutineType(types: !4570)
!4570 = !{null, !4454}
!4571 = !{!4572}
!4572 = !DILocalVariable(name: "thread", arg: 1, scope: !4568, file: !3271, line: 188, type: !4454)
!4573 = !DILocation(line: 0, scope: !4568)
!4574 = !DILocation(line: 197, column: 2, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4568, file: !3271, line: 197, column: 2)
!4576 = !{i64 2154068119}
!4577 = !DILocation(line: 198, column: 2, scope: !4568)
!4578 = !DILocation(line: 199, column: 1, scope: !4568)
!4579 = distinct !DISubprogram(name: "z_current_get", scope: !3271, file: !3271, line: 173, type: !4452, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !1998)
!4580 = !DILocation(line: 180, column: 2, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4579, file: !3271, line: 180, column: 2)
!4582 = !{i64 2154068051}
!4583 = !DILocation(line: 181, column: 9, scope: !4579)
!4584 = !DILocation(line: 181, column: 2, scope: !4579)
!4585 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2509, file: !2509, line: 1338, type: !4586, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !4594)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{!109, !3611, !108, !324, !4588, !110}
!4588 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3575, line: 99, baseType: !4589)
!4589 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3575, line: 40, baseType: !4590)
!4590 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2509, baseType: !4591)
!4591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4592)
!4592 = !{!4593}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4591, file: !2509, baseType: !108, size: 32)
!4594 = !{!4595, !4596, !4597, !4598, !4599, !4600, !4604, !4605, !4606, !4608, !4613, !4658, !4661, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4673, !4674, !4675, !4679, !4682, !4684, !4687, !4688, !4689, !4694, !4700, !4703, !4707, !4713, !4717, !4720, !4722, !4725}
!4595 = !DILocalVariable(name: "out", arg: 1, scope: !4585, file: !2509, line: 1338, type: !3611)
!4596 = !DILocalVariable(name: "ctx", arg: 2, scope: !4585, file: !2509, line: 1338, type: !108)
!4597 = !DILocalVariable(name: "fp", arg: 3, scope: !4585, file: !2509, line: 1338, type: !324)
!4598 = !DILocalVariable(name: "ap", arg: 4, scope: !4585, file: !2509, line: 1339, type: !4588)
!4599 = !DILocalVariable(name: "flags", arg: 5, scope: !4585, file: !2509, line: 1339, type: !110)
!4600 = !DILocalVariable(name: "buf", scope: !4585, file: !2509, line: 1341, type: !4601)
!4601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 176, elements: !4602)
!4602 = !{!4603}
!4603 = !DISubrange(count: 22)
!4604 = !DILocalVariable(name: "count", scope: !4585, file: !2509, line: 1342, type: !235)
!4605 = !DILocalVariable(name: "sint", scope: !4585, file: !2509, line: 1343, type: !2528)
!4606 = !DILocalVariable(name: "tagged_ap", scope: !4585, file: !2509, line: 1345, type: !4607)
!4607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!4608 = !DILocalVariable(name: "rc", scope: !4609, file: !2509, line: 1377, type: !109)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !2509, line: 1377, column: 4)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !2509, line: 1376, column: 19)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1376, column: 7)
!4612 = distinct !DILexicalBlock(scope: !4585, file: !2509, line: 1375, column: 19)
!4613 = !DILocalVariable(name: "state", scope: !4612, file: !2509, line: 1395, type: !4614)
!4614 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4585, file: !2509, line: 1392, size: 192, elements: !4615)
!4615 = !{!4616, !4626}
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4614, file: !2509, line: 1393, baseType: !4617, size: 64)
!4617 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2509, line: 166, size: 64, elements: !4618)
!4618 = !{!4619, !4620, !4621, !4623, !4625}
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4617, file: !2509, line: 168, baseType: !2528, size: 64)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4617, file: !2509, line: 171, baseType: !2531, size: 64)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4617, file: !2509, line: 174, baseType: !4622, size: 64)
!4622 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4617, file: !2509, line: 177, baseType: !4624, size: 64)
!4624 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4617, file: !2509, line: 180, baseType: !108, size: 32)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4614, file: !2509, line: 1394, baseType: !4627, size: 96, offset: 64)
!4627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2509, line: 189, size: 96, elements: !4628)
!4628 = !{!4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4653}
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4627, file: !2509, line: 191, baseType: !334, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4627, file: !2509, line: 194, baseType: !334, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4627, file: !2509, line: 197, baseType: !334, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4627, file: !2509, line: 200, baseType: !334, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4627, file: !2509, line: 203, baseType: !334, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4627, file: !2509, line: 206, baseType: !334, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4627, file: !2509, line: 209, baseType: !334, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4627, file: !2509, line: 212, baseType: !334, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4627, file: !2509, line: 219, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4627, file: !2509, line: 222, baseType: !334, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4627, file: !2509, line: 229, baseType: !334, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4627, file: !2509, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4627, file: !2509, line: 238, baseType: !334, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4627, file: !2509, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4627, file: !2509, line: 244, baseType: !334, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4627, file: !2509, line: 247, baseType: !334, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4627, file: !2509, line: 252, baseType: !334, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4627, file: !2509, line: 257, baseType: !334, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4627, file: !2509, line: 260, baseType: !168, size: 8, offset: 24)
!4648 = !DIDerivedType(tag: DW_TAG_member, scope: !4627, file: !2509, line: 262, baseType: !4649, size: 32, offset: 32)
!4649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4627, file: !2509, line: 262, size: 32, elements: !4650)
!4650 = !{!4651, !4652}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4649, file: !2509, line: 267, baseType: !109, size: 32)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4649, file: !2509, line: 289, baseType: !109, size: 32)
!4653 = !DIDerivedType(tag: DW_TAG_member, scope: !4627, file: !2509, line: 292, baseType: !4654, size: 32, offset: 64)
!4654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4627, file: !2509, line: 292, size: 32, elements: !4655)
!4655 = !{!4656, !4657}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4654, file: !2509, line: 297, baseType: !109, size: 32)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4654, file: !2509, line: 306, baseType: !109, size: 32)
!4658 = !DILocalVariable(name: "conv", scope: !4612, file: !2509, line: 1400, type: !4659)
!4659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4660)
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4627, size: 32)
!4661 = !DILocalVariable(name: "value", scope: !4612, file: !2509, line: 1401, type: !4662)
!4662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4663)
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4617, size: 32)
!4664 = !DILocalVariable(name: "sp", scope: !4612, file: !2509, line: 1402, type: !324)
!4665 = !DILocalVariable(name: "width", scope: !4612, file: !2509, line: 1403, type: !109)
!4666 = !DILocalVariable(name: "precision", scope: !4612, file: !2509, line: 1404, type: !109)
!4667 = !DILocalVariable(name: "bps", scope: !4612, file: !2509, line: 1405, type: !324)
!4668 = !DILocalVariable(name: "bpe", scope: !4612, file: !2509, line: 1406, type: !324)
!4669 = !DILocalVariable(name: "sign", scope: !4612, file: !2509, line: 1407, type: !226)
!4670 = !DILocalVariable(name: "arg", scope: !4671, file: !2509, line: 1432, type: !109)
!4671 = distinct !DILexicalBlock(scope: !4672, file: !2509, line: 1431, column: 24)
!4672 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1431, column: 7)
!4673 = !DILocalVariable(name: "specifier_cat", scope: !4612, file: !2509, line: 1468, type: !2508)
!4674 = !DILocalVariable(name: "length_mod", scope: !4612, file: !2509, line: 1470, type: !2516)
!4675 = !DILocalVariable(name: "rc", scope: !4676, file: !2509, line: 1575, type: !109)
!4676 = distinct !DILexicalBlock(scope: !4677, file: !2509, line: 1575, column: 4)
!4677 = distinct !DILexicalBlock(scope: !4678, file: !2509, line: 1574, column: 43)
!4678 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1574, column: 7)
!4679 = !DILocalVariable(name: "rc", scope: !4680, file: !2509, line: 1584, type: !109)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !2509, line: 1584, column: 4)
!4681 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1582, column: 28)
!4682 = !DILocalVariable(name: "len", scope: !4683, file: !2509, line: 1589, type: !235)
!4683 = distinct !DILexicalBlock(scope: !4681, file: !2509, line: 1586, column: 13)
!4684 = !DILocalVariable(name: "len", scope: !4685, file: !2509, line: 1641, type: !235)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !2509, line: 1640, column: 24)
!4686 = distinct !DILexicalBlock(scope: !4681, file: !2509, line: 1640, column: 8)
!4687 = !DILocalVariable(name: "nj_len", scope: !4612, file: !2509, line: 1722, type: !235)
!4688 = !DILocalVariable(name: "pad_len", scope: !4612, file: !2509, line: 1723, type: !109)
!4689 = !DILocalVariable(name: "pad", scope: !4690, file: !2509, line: 1751, type: !226)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !2509, line: 1750, column: 26)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !2509, line: 1750, column: 8)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !2509, line: 1747, column: 18)
!4693 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1747, column: 7)
!4694 = !DILocalVariable(name: "rc", scope: !4695, file: !2509, line: 1758, type: !109)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !2509, line: 1758, column: 7)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !2509, line: 1757, column: 21)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !2509, line: 1757, column: 10)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !2509, line: 1756, column: 26)
!4699 = distinct !DILexicalBlock(scope: !4690, file: !2509, line: 1756, column: 9)
!4700 = !DILocalVariable(name: "rc", scope: !4701, file: !2509, line: 1765, type: !109)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !2509, line: 1765, column: 6)
!4702 = distinct !DILexicalBlock(scope: !4690, file: !2509, line: 1764, column: 25)
!4703 = !DILocalVariable(name: "rc", scope: !4704, file: !2509, line: 1774, type: !109)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !2509, line: 1774, column: 4)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !2509, line: 1773, column: 18)
!4706 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1773, column: 7)
!4707 = !DILocalVariable(name: "rc", scope: !4708, file: !2509, line: 1819, type: !109)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2509, line: 1819, column: 5)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !2509, line: 1818, column: 44)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !2509, line: 1818, column: 8)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2509, line: 1817, column: 10)
!4712 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1777, column: 7)
!4713 = !DILocalVariable(name: "rc", scope: !4714, file: !2509, line: 1823, type: !109)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2509, line: 1823, column: 5)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !2509, line: 1822, column: 26)
!4716 = distinct !DILexicalBlock(scope: !4711, file: !2509, line: 1822, column: 8)
!4717 = !DILocalVariable(name: "rc", scope: !4718, file: !2509, line: 1828, type: !109)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !2509, line: 1828, column: 5)
!4719 = distinct !DILexicalBlock(scope: !4711, file: !2509, line: 1827, column: 26)
!4720 = !DILocalVariable(name: "rc", scope: !4721, file: !2509, line: 1831, type: !109)
!4721 = distinct !DILexicalBlock(scope: !4711, file: !2509, line: 1831, column: 4)
!4722 = !DILocalVariable(name: "rc", scope: !4723, file: !2509, line: 1836, type: !109)
!4723 = distinct !DILexicalBlock(scope: !4724, file: !2509, line: 1836, column: 4)
!4724 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1835, column: 21)
!4725 = !DILabel(scope: !4681, name: "prec_int_pad0", file: !2509, line: 1634)
!4726 = !DILocation(line: 0, scope: !4585)
!4727 = !DILocation(line: 1341, column: 2, scope: !4585)
!4728 = !DILocation(line: 1341, column: 7, scope: !4585)
!4729 = !DILocation(line: 1375, column: 2, scope: !4585)
!4730 = !DILocation(line: 1342, column: 9, scope: !4585)
!4731 = !DILocation(line: 1375, column: 9, scope: !4585)
!4732 = !DILocation(line: 1377, column: 4, scope: !4609)
!4733 = !DILocation(line: 0, scope: !4609)
!4734 = !DILocation(line: 1377, column: 4, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4609, file: !2509, line: 1377, column: 4)
!4736 = distinct !{!4736, !4729, !4737}
!4737 = !DILocation(line: 1839, column: 2, scope: !4585)
!4738 = !DILocation(line: 1392, column: 3, scope: !4612)
!4739 = !DILocation(line: 1395, column: 5, scope: !4612)
!4740 = !DILocation(line: 0, scope: !4612)
!4741 = !DILocation(line: 1409, column: 8, scope: !4612)
!4742 = !DILocation(line: 1414, column: 13, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1414, column: 7)
!4744 = !DILocation(line: 1414, column: 7, scope: !4612)
!4745 = !DILocation(line: 1415, column: 12, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4743, file: !2509, line: 1414, column: 25)
!4747 = !DILocation(line: 1417, column: 14, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4746, file: !2509, line: 1417, column: 8)
!4749 = !DILocation(line: 1417, column: 8, scope: !4746)
!4750 = !DILocation(line: 1418, column: 21, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4748, file: !2509, line: 1417, column: 19)
!4752 = !DILocation(line: 1419, column: 13, scope: !4751)
!4753 = !DILocation(line: 1420, column: 4, scope: !4751)
!4754 = !DILocation(line: 1421, column: 20, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4743, file: !2509, line: 1421, column: 14)
!4756 = !DILocation(line: 1421, column: 14, scope: !4743)
!4757 = !DILocation(line: 1431, column: 13, scope: !4672)
!4758 = !DILocation(line: 1431, column: 7, scope: !4612)
!4759 = !DILocation(line: 1432, column: 14, scope: !4671)
!4760 = !DILocation(line: 0, scope: !4671)
!4761 = !DILocation(line: 1434, column: 12, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4671, file: !2509, line: 1434, column: 8)
!4763 = !DILocation(line: 1434, column: 8, scope: !4671)
!4764 = !DILocation(line: 1435, column: 24, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4762, file: !2509, line: 1434, column: 17)
!4766 = !DILocation(line: 1436, column: 4, scope: !4765)
!4767 = !DILocation(line: 1439, column: 20, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4672, file: !2509, line: 1439, column: 14)
!4769 = !DILocation(line: 1439, column: 14, scope: !4672)
!4770 = !DILocation(line: 1469, column: 37, scope: !4612)
!4771 = !DILocation(line: 1448, column: 20, scope: !4612)
!4772 = !DILocation(line: 1449, column: 22, scope: !4612)
!4773 = !DILocation(line: 1471, column: 34, scope: !4612)
!4774 = !DILocation(line: 1478, column: 7, scope: !4612)
!4775 = !DILocation(line: 1479, column: 4, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !2509, line: 1478, column: 40)
!4777 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1478, column: 7)
!4778 = !DILocation(line: 1484, column: 19, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4776, file: !2509, line: 1479, column: 24)
!4780 = !DILocation(line: 1484, column: 17, scope: !4779)
!4781 = !DILocation(line: 1485, column: 5, scope: !4779)
!4782 = !DILocation(line: 1492, column: 20, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !2509, line: 1491, column: 12)
!4784 = distinct !DILexicalBlock(scope: !4779, file: !2509, line: 1487, column: 9)
!4785 = !DILocation(line: 1492, column: 18, scope: !4783)
!4786 = !DILocation(line: 1494, column: 5, scope: !4779)
!4787 = !DILocation(line: 1497, column: 23, scope: !4779)
!4788 = !DILocation(line: 1496, column: 17, scope: !4779)
!4789 = !DILocation(line: 1498, column: 5, scope: !4779)
!4790 = !DILocation(line: 1501, column: 23, scope: !4779)
!4791 = !DILocation(line: 1500, column: 17, scope: !4779)
!4792 = !DILocation(line: 1502, column: 5, scope: !4779)
!4793 = !DILocation(line: 1513, column: 23, scope: !4779)
!4794 = !DILocation(line: 1513, column: 6, scope: !4779)
!4795 = !DILocation(line: 1512, column: 17, scope: !4779)
!4796 = !DILocation(line: 1514, column: 5, scope: !4779)
!4797 = !DILocation(line: 0, scope: !4779)
!4798 = !DILocation(line: 1516, column: 8, scope: !4776)
!4799 = !DILocation(line: 1517, column: 19, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !2509, line: 1516, column: 33)
!4801 = distinct !DILexicalBlock(scope: !4776, file: !2509, line: 1516, column: 8)
!4802 = !DILocation(line: 1517, column: 17, scope: !4800)
!4803 = !DILocation(line: 1518, column: 4, scope: !4800)
!4804 = !DILocation(line: 1519, column: 19, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4806, file: !2509, line: 1518, column: 39)
!4806 = distinct !DILexicalBlock(scope: !4801, file: !2509, line: 1518, column: 15)
!4807 = !DILocation(line: 1519, column: 17, scope: !4805)
!4808 = !DILocation(line: 1520, column: 4, scope: !4805)
!4809 = !DILocation(line: 1522, column: 4, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !2509, line: 1521, column: 47)
!4811 = distinct !DILexicalBlock(scope: !4777, file: !2509, line: 1521, column: 14)
!4812 = !DILocation(line: 1527, column: 19, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4810, file: !2509, line: 1522, column: 24)
!4814 = !DILocation(line: 1527, column: 17, scope: !4813)
!4815 = !DILocation(line: 1528, column: 5, scope: !4813)
!4816 = !DILocation(line: 0, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4813, file: !2509, line: 1530, column: 9)
!4818 = !DILocation(line: 1540, column: 23, scope: !4813)
!4819 = !DILocation(line: 1539, column: 17, scope: !4813)
!4820 = !DILocation(line: 1542, column: 5, scope: !4813)
!4821 = !DILocation(line: 1545, column: 23, scope: !4813)
!4822 = !DILocation(line: 1544, column: 17, scope: !4813)
!4823 = !DILocation(line: 1547, column: 5, scope: !4813)
!4824 = !DILocation(line: 1551, column: 23, scope: !4813)
!4825 = !DILocation(line: 1551, column: 6, scope: !4813)
!4826 = !DILocation(line: 1550, column: 17, scope: !4813)
!4827 = !DILocation(line: 1552, column: 5, scope: !4813)
!4828 = !DILocation(line: 0, scope: !4813)
!4829 = !DILocation(line: 1554, column: 8, scope: !4810)
!4830 = !DILocation(line: 1555, column: 19, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4832, file: !2509, line: 1554, column: 33)
!4832 = distinct !DILexicalBlock(scope: !4810, file: !2509, line: 1554, column: 8)
!4833 = !DILocation(line: 1555, column: 17, scope: !4831)
!4834 = !DILocation(line: 1556, column: 4, scope: !4831)
!4835 = !DILocation(line: 1557, column: 19, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4837, file: !2509, line: 1556, column: 39)
!4837 = distinct !DILexicalBlock(scope: !4832, file: !2509, line: 1556, column: 15)
!4838 = !DILocation(line: 1557, column: 17, scope: !4836)
!4839 = !DILocation(line: 1558, column: 4, scope: !4836)
!4840 = !DILocation(line: 0, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4842, file: !2509, line: 1560, column: 8)
!4842 = distinct !DILexicalBlock(scope: !4843, file: !2509, line: 1559, column: 45)
!4843 = distinct !DILexicalBlock(scope: !4811, file: !2509, line: 1559, column: 14)
!4844 = !DILocation(line: 1566, column: 17, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !2509, line: 1565, column: 46)
!4846 = distinct !DILexicalBlock(scope: !4843, file: !2509, line: 1565, column: 14)
!4847 = !DILocation(line: 1566, column: 15, scope: !4845)
!4848 = !DILocation(line: 1567, column: 3, scope: !4845)
!4849 = !DILocation(line: 1574, column: 21, scope: !4678)
!4850 = !DILocation(line: 1575, column: 4, scope: !4676)
!4851 = !DILocation(line: 0, scope: !4676)
!4852 = !DILocation(line: 1575, column: 4, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4676, file: !2509, line: 1575, column: 4)
!4854 = !DILocation(line: 1582, column: 17, scope: !4612)
!4855 = !DILocation(line: 1582, column: 3, scope: !4612)
!4856 = !DILocation(line: 1584, column: 4, scope: !4680)
!4857 = !DILocation(line: 0, scope: !4680)
!4858 = !DILocation(line: 1584, column: 4, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4680, file: !2509, line: 1584, column: 4)
!4860 = !DILocation(line: 1587, column: 31, scope: !4683)
!4861 = !DILocation(line: 1591, column: 18, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4683, file: !2509, line: 1591, column: 8)
!4863 = !DILocation(line: 1591, column: 8, scope: !4683)
!4864 = !DILocation(line: 1592, column: 11, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4862, file: !2509, line: 1591, column: 24)
!4866 = !DILocation(line: 0, scope: !4683)
!4867 = !DILocation(line: 1593, column: 4, scope: !4865)
!4868 = !DILocation(line: 1594, column: 11, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4862, file: !2509, line: 1593, column: 11)
!4870 = !DILocation(line: 1604, column: 51, scope: !4681)
!4871 = !DILocation(line: 1604, column: 13, scope: !4681)
!4872 = !DILocation(line: 1604, column: 11, scope: !4681)
!4873 = !DILocation(line: 1606, column: 4, scope: !4681)
!4874 = !DILocation(line: 1609, column: 14, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4681, file: !2509, line: 1609, column: 8)
!4876 = !DILocation(line: 1609, column: 8, scope: !4681)
!4877 = !DILocation(line: 1619, column: 18, scope: !4681)
!4878 = !DILocation(line: 1620, column: 13, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4681, file: !2509, line: 1620, column: 8)
!4880 = !DILocation(line: 1620, column: 8, scope: !4681)
!4881 = !DILocation(line: 1622, column: 36, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !2509, line: 1620, column: 18)
!4883 = !DILocation(line: 1622, column: 17, scope: !4882)
!4884 = !DILocation(line: 1623, column: 4, scope: !4882)
!4885 = !DILocation(line: 1632, column: 29, scope: !4681)
!4886 = !DILocation(line: 1632, column: 10, scope: !4681)
!4887 = !DILocation(line: 1632, column: 4, scope: !4681)
!4888 = !DILocation(line: 1407, column: 8, scope: !4612)
!4889 = !DILocation(line: 0, scope: !4681)
!4890 = !DILocation(line: 1634, column: 3, scope: !4681)
!4891 = !DILocation(line: 1640, column: 18, scope: !4686)
!4892 = !DILocation(line: 1640, column: 8, scope: !4681)
!4893 = !DILocation(line: 1729, column: 13, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1729, column: 7)
!4895 = !DILocation(line: 1641, column: 22, scope: !4685)
!4896 = !DILocation(line: 0, scope: !4685)
!4897 = !DILocation(line: 1646, column: 21, scope: !4685)
!4898 = !DILocation(line: 1649, column: 13, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4685, file: !2509, line: 1649, column: 9)
!4900 = !DILocation(line: 1649, column: 9, scope: !4685)
!4901 = !DILocation(line: 1650, column: 35, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4899, file: !2509, line: 1649, column: 34)
!4903 = !DILocation(line: 1650, column: 23, scope: !4902)
!4904 = !DILocation(line: 1651, column: 5, scope: !4902)
!4905 = !DILocation(line: 1660, column: 15, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4681, file: !2509, line: 1660, column: 8)
!4907 = !DILocation(line: 1660, column: 19, scope: !4906)
!4908 = !DILocation(line: 1660, column: 8, scope: !4681)
!4909 = !DILocation(line: 1661, column: 23, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4906, file: !2509, line: 1660, column: 28)
!4911 = !DILocation(line: 1661, column: 11, scope: !4910)
!4912 = !DILocation(line: 1665, column: 22, scope: !4910)
!4913 = !DILocation(line: 1666, column: 21, scope: !4910)
!4914 = !DILocation(line: 1668, column: 5, scope: !4910)
!4915 = !DILocation(line: 1677, column: 30, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4917, file: !2509, line: 1676, column: 49)
!4917 = distinct !DILexicalBlock(scope: !4681, file: !2509, line: 1676, column: 8)
!4918 = !DILocation(line: 1677, column: 5, scope: !4916)
!4919 = !DILocation(line: 1680, column: 4, scope: !4681)
!4920 = !DILocation(line: 0, scope: !4862)
!4921 = !DILocation(line: 1597, column: 14, scope: !4683)
!4922 = !DILocation(line: 1699, column: 11, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1699, column: 7)
!4924 = !DILocation(line: 1699, column: 7, scope: !4612)
!4925 = !DILocation(line: 1725, column: 7, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1725, column: 7)
!4927 = !DILocation(line: 1725, column: 12, scope: !4926)
!4928 = !DILocation(line: 1747, column: 13, scope: !4693)
!4929 = !DILocation(line: 1747, column: 7, scope: !4612)
!4930 = !DILocation(line: 1722, column: 24, scope: !4612)
!4931 = !DILocation(line: 1725, column: 7, scope: !4612)
!4932 = !DILocation(line: 1729, column: 7, scope: !4612)
!4933 = !DILocation(line: 1736, column: 13, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4612, file: !2509, line: 1736, column: 7)
!4935 = !DILocation(line: 1735, column: 19, scope: !4612)
!4936 = !DILocation(line: 1736, column: 7, scope: !4612)
!4937 = !DILocation(line: 1748, column: 10, scope: !4692)
!4938 = !DILocation(line: 1750, column: 15, scope: !4691)
!4939 = !DILocation(line: 1750, column: 8, scope: !4692)
!4940 = !DILocation(line: 0, scope: !4690)
!4941 = !DILocation(line: 1756, column: 15, scope: !4699)
!4942 = !DILocation(line: 1756, column: 9, scope: !4690)
!4943 = !DILocation(line: 1758, column: 7, scope: !4695)
!4944 = !DILocation(line: 0, scope: !4695)
!4945 = !DILocation(line: 1758, column: 7, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4695, file: !2509, line: 1758, column: 7)
!4947 = !DILocation(line: 1764, column: 5, scope: !4690)
!4948 = !DILocation(line: 0, scope: !4692)
!4949 = !DILocation(line: 1764, column: 20, scope: !4690)
!4950 = !DILocation(line: 1764, column: 17, scope: !4690)
!4951 = !DILocation(line: 1765, column: 6, scope: !4701)
!4952 = !DILocation(line: 0, scope: !4701)
!4953 = !DILocation(line: 1765, column: 6, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4701, file: !2509, line: 1765, column: 6)
!4955 = distinct !{!4955, !4947, !4956}
!4956 = !DILocation(line: 1766, column: 5, scope: !4690)
!4957 = !DILocation(line: 1773, column: 12, scope: !4706)
!4958 = !DILocation(line: 1773, column: 7, scope: !4612)
!4959 = !DILocation(line: 1773, column: 7, scope: !4706)
!4960 = !DILocation(line: 1774, column: 4, scope: !4704)
!4961 = !DILocation(line: 0, scope: !4704)
!4962 = !DILocation(line: 1774, column: 4, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4704, file: !2509, line: 1774, column: 4)
!4964 = !DILocation(line: 1818, column: 8, scope: !4710)
!4965 = !DILocation(line: 1818, column: 27, scope: !4710)
!4966 = !DILocation(line: 1818, column: 25, scope: !4710)
!4967 = !DILocation(line: 1818, column: 8, scope: !4711)
!4968 = !DILocation(line: 1819, column: 5, scope: !4708)
!4969 = !DILocation(line: 0, scope: !4708)
!4970 = !DILocation(line: 1819, column: 5, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4708, file: !2509, line: 1819, column: 5)
!4972 = !DILocation(line: 1822, column: 14, scope: !4716)
!4973 = !DILocation(line: 1822, column: 8, scope: !4711)
!4974 = !DILocation(line: 1823, column: 5, scope: !4714)
!4975 = !DILocation(line: 0, scope: !4714)
!4976 = !DILocation(line: 1823, column: 5, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4714, file: !2509, line: 1823, column: 5)
!4978 = !DILocation(line: 1826, column: 20, scope: !4711)
!4979 = !DILocation(line: 1827, column: 4, scope: !4711)
!4980 = !DILocation(line: 0, scope: !4711)
!4981 = !DILocation(line: 1827, column: 21, scope: !4711)
!4982 = !DILocation(line: 1827, column: 18, scope: !4711)
!4983 = !DILocation(line: 1828, column: 5, scope: !4718)
!4984 = !DILocation(line: 0, scope: !4718)
!4985 = !DILocation(line: 1828, column: 5, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4718, file: !2509, line: 1828, column: 5)
!4987 = distinct !{!4987, !4979, !4988}
!4988 = !DILocation(line: 1829, column: 4, scope: !4711)
!4989 = !DILocation(line: 1831, column: 4, scope: !4721)
!4990 = !DILocation(line: 0, scope: !4721)
!4991 = !DILocation(line: 1831, column: 4, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4721, file: !2509, line: 1831, column: 4)
!4993 = !DILocation(line: 1835, column: 16, scope: !4612)
!4994 = !DILocation(line: 1835, column: 3, scope: !4612)
!4995 = !DILocation(line: 1836, column: 4, scope: !4723)
!4996 = !DILocation(line: 0, scope: !4723)
!4997 = !DILocation(line: 1836, column: 4, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4723, file: !2509, line: 1836, column: 4)
!4999 = !DILocation(line: 1837, column: 4, scope: !4724)
!5000 = distinct !{!5000, !4994, !5001}
!5001 = !DILocation(line: 1838, column: 3, scope: !4612)
!5002 = !DILocation(line: 1844, column: 1, scope: !4585)
!5003 = distinct !DISubprogram(name: "extract_conversion", scope: !2509, file: !2509, line: 642, type: !5004, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5006)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{!324, !4660, !324}
!5006 = !{!5007, !5008}
!5007 = !DILocalVariable(name: "conv", arg: 1, scope: !5003, file: !2509, line: 642, type: !4660)
!5008 = !DILocalVariable(name: "sp", arg: 2, scope: !5003, file: !2509, line: 643, type: !324)
!5009 = !DILocation(line: 0, scope: !5003)
!5010 = !DILocation(line: 645, column: 10, scope: !5003)
!5011 = !DILocation(line: 653, column: 2, scope: !5003)
!5012 = !DILocation(line: 654, column: 6, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5003, file: !2509, line: 654, column: 6)
!5014 = !DILocation(line: 654, column: 10, scope: !5013)
!5015 = !DILocation(line: 654, column: 6, scope: !5003)
!5016 = !DILocation(line: 655, column: 24, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5013, file: !2509, line: 654, column: 18)
!5018 = !DILocation(line: 655, column: 19, scope: !5017)
!5019 = !DILocation(line: 656, column: 3, scope: !5017)
!5020 = !DILocation(line: 659, column: 7, scope: !5003)
!5021 = !DILocation(line: 660, column: 7, scope: !5003)
!5022 = !DILocation(line: 661, column: 7, scope: !5003)
!5023 = !DILocation(line: 662, column: 7, scope: !5003)
!5024 = !DILocation(line: 663, column: 7, scope: !5003)
!5025 = !DILocation(line: 665, column: 2, scope: !5003)
!5026 = !DILocation(line: 666, column: 1, scope: !5003)
!5027 = distinct !DISubprogram(name: "outs", scope: !2509, file: !2509, line: 1319, type: !5028, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5030)
!5028 = !DISubroutineType(types: !5029)
!5029 = !{!109, !3611, !108, !324, !324}
!5030 = !{!5031, !5032, !5033, !5034, !5035, !5036}
!5031 = !DILocalVariable(name: "out", arg: 1, scope: !5027, file: !2509, line: 1319, type: !3611)
!5032 = !DILocalVariable(name: "ctx", arg: 2, scope: !5027, file: !2509, line: 1320, type: !108)
!5033 = !DILocalVariable(name: "sp", arg: 3, scope: !5027, file: !2509, line: 1321, type: !324)
!5034 = !DILocalVariable(name: "ep", arg: 4, scope: !5027, file: !2509, line: 1322, type: !324)
!5035 = !DILocalVariable(name: "count", scope: !5027, file: !2509, line: 1324, type: !235)
!5036 = !DILocalVariable(name: "rc", scope: !5037, file: !2509, line: 1327, type: !109)
!5037 = distinct !DILexicalBlock(scope: !5027, file: !2509, line: 1326, column: 45)
!5038 = !DILocation(line: 0, scope: !5027)
!5039 = !DILocation(line: 1326, column: 2, scope: !5027)
!5040 = !DILocation(line: 1324, column: 9, scope: !5027)
!5041 = !DILocation(line: 1326, column: 13, scope: !5027)
!5042 = !DILocation(line: 1326, column: 19, scope: !5027)
!5043 = !DILocation(line: 1327, column: 21, scope: !5037)
!5044 = !DILocation(line: 1326, column: 36, scope: !5027)
!5045 = !DILocation(line: 1326, column: 39, scope: !5027)
!5046 = !DILocation(line: 1327, column: 24, scope: !5037)
!5047 = !DILocation(line: 1327, column: 16, scope: !5037)
!5048 = !DILocation(line: 1327, column: 12, scope: !5037)
!5049 = !DILocation(line: 0, scope: !5037)
!5050 = !DILocation(line: 1329, column: 10, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5037, file: !2509, line: 1329, column: 7)
!5052 = !DILocation(line: 1329, column: 7, scope: !5037)
!5053 = distinct !{!5053, !5039, !5054}
!5054 = !DILocation(line: 1333, column: 2, scope: !5027)
!5055 = !DILocation(line: 1336, column: 1, scope: !5027)
!5056 = distinct !DISubprogram(name: "encode_uint", scope: !2509, file: !2509, line: 788, type: !5057, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5059)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{!1127, !2531, !4660, !1127, !324}
!5059 = !{!5060, !5061, !5062, !5063, !5064, !5065, !5067, !5068}
!5060 = !DILocalVariable(name: "value", arg: 1, scope: !5056, file: !2509, line: 788, type: !2531)
!5061 = !DILocalVariable(name: "conv", arg: 2, scope: !5056, file: !2509, line: 789, type: !4660)
!5062 = !DILocalVariable(name: "bps", arg: 3, scope: !5056, file: !2509, line: 790, type: !1127)
!5063 = !DILocalVariable(name: "bpe", arg: 4, scope: !5056, file: !2509, line: 791, type: !324)
!5064 = !DILocalVariable(name: "upcase", scope: !5056, file: !2509, line: 793, type: !334)
!5065 = !DILocalVariable(name: "radix", scope: !5056, file: !2509, line: 794, type: !5066)
!5066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5067 = !DILocalVariable(name: "bp", scope: !5056, file: !2509, line: 795, type: !1127)
!5068 = !DILocalVariable(name: "lsv", scope: !5069, file: !2509, line: 798, type: !32)
!5069 = distinct !DILexicalBlock(scope: !5056, file: !2509, line: 797, column: 5)
!5070 = !DILocation(line: 0, scope: !5056)
!5071 = !DILocation(line: 793, column: 35, scope: !5056)
!5072 = !DILocation(line: 793, column: 24, scope: !5056)
!5073 = !DILocation(line: 793, column: 16, scope: !5056)
!5074 = !DILocation(line: 794, column: 29, scope: !5056)
!5075 = !DILocation(line: 795, column: 24, scope: !5056)
!5076 = !DILocation(line: 795, column: 17, scope: !5056)
!5077 = !DILocation(line: 797, column: 2, scope: !5056)
!5078 = !DILocation(line: 802, column: 9, scope: !5069)
!5079 = !DILocation(line: 798, column: 22, scope: !5069)
!5080 = !DILocation(line: 0, scope: !5069)
!5081 = !DILocation(line: 800, column: 16, scope: !5069)
!5082 = !DILocation(line: 800, column: 11, scope: !5069)
!5083 = !DILocation(line: 800, column: 4, scope: !5069)
!5084 = !DILocation(line: 800, column: 9, scope: !5069)
!5085 = !DILocation(line: 803, column: 18, scope: !5056)
!5086 = !DILocation(line: 803, column: 24, scope: !5056)
!5087 = !DILocation(line: 803, column: 2, scope: !5069)
!5088 = distinct !{!5088, !5077, !5089}
!5089 = !DILocation(line: 803, column: 37, scope: !5056)
!5090 = !DILocation(line: 808, column: 12, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5056, file: !2509, line: 808, column: 6)
!5092 = !DILocation(line: 808, column: 6, scope: !5056)
!5093 = !DILocation(line: 809, column: 7, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5091, file: !2509, line: 808, column: 23)
!5095 = !DILocation(line: 813, column: 3, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !2509, line: 811, column: 27)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !2509, line: 811, column: 14)
!5098 = distinct !DILexicalBlock(scope: !5094, file: !2509, line: 809, column: 7)
!5099 = !DILocation(line: 0, scope: !5098)
!5100 = !DILocation(line: 818, column: 2, scope: !5056)
!5101 = distinct !DISubprogram(name: "store_count", scope: !2509, file: !2509, line: 1280, type: !5102, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5106)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{null, !5104, !108, !109}
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 32)
!5105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4627)
!5106 = !{!5107, !5108, !5109}
!5107 = !DILocalVariable(name: "conv", arg: 1, scope: !5101, file: !2509, line: 1280, type: !5104)
!5108 = !DILocalVariable(name: "dp", arg: 2, scope: !5101, file: !2509, line: 1281, type: !108)
!5109 = !DILocalVariable(name: "count", arg: 3, scope: !5101, file: !2509, line: 1282, type: !109)
!5110 = !DILocation(line: 0, scope: !5101)
!5111 = !DILocation(line: 1284, column: 38, scope: !5101)
!5112 = !DILocation(line: 1284, column: 2, scope: !5101)
!5113 = !DILocation(line: 1286, column: 4, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5101, file: !2509, line: 1284, column: 50)
!5115 = !DILocation(line: 1286, column: 14, scope: !5114)
!5116 = !DILocation(line: 1287, column: 3, scope: !5114)
!5117 = !DILocation(line: 1289, column: 24, scope: !5114)
!5118 = !DILocation(line: 1289, column: 22, scope: !5114)
!5119 = !DILocation(line: 1290, column: 3, scope: !5114)
!5120 = !DILocation(line: 1292, column: 18, scope: !5114)
!5121 = !DILocation(line: 1292, column: 4, scope: !5114)
!5122 = !DILocation(line: 1292, column: 16, scope: !5114)
!5123 = !DILocation(line: 1293, column: 3, scope: !5114)
!5124 = !DILocation(line: 1295, column: 4, scope: !5114)
!5125 = !DILocation(line: 1295, column: 15, scope: !5114)
!5126 = !DILocation(line: 1296, column: 3, scope: !5114)
!5127 = !DILocation(line: 1298, column: 22, scope: !5114)
!5128 = !DILocation(line: 1298, column: 4, scope: !5114)
!5129 = !DILocation(line: 1298, column: 20, scope: !5114)
!5130 = !DILocation(line: 1299, column: 3, scope: !5114)
!5131 = !DILocation(line: 1301, column: 21, scope: !5114)
!5132 = !DILocation(line: 1301, column: 4, scope: !5114)
!5133 = !DILocation(line: 1301, column: 19, scope: !5114)
!5134 = !DILocation(line: 1302, column: 3, scope: !5114)
!5135 = !DILocation(line: 1304, column: 4, scope: !5114)
!5136 = !DILocation(line: 1304, column: 17, scope: !5114)
!5137 = !DILocation(line: 1305, column: 3, scope: !5114)
!5138 = !DILocation(line: 1307, column: 4, scope: !5114)
!5139 = !DILocation(line: 1307, column: 20, scope: !5114)
!5140 = !DILocation(line: 1308, column: 3, scope: !5114)
!5141 = !DILocation(line: 1316, column: 1, scope: !5101)
!5142 = distinct !DISubprogram(name: "isupper", scope: !5143, file: !5143, line: 16, type: !288, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5144)
!5143 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5144 = !{!5145}
!5145 = !DILocalVariable(name: "a", arg: 1, scope: !5142, file: !5143, line: 16, type: !109)
!5146 = !DILocation(line: 0, scope: !5142)
!5147 = !DILocation(line: 18, column: 29, scope: !5142)
!5148 = !DILocation(line: 18, column: 45, scope: !5142)
!5149 = !DILocation(line: 18, column: 2, scope: !5142)
!5150 = distinct !DISubprogram(name: "conversion_radix", scope: !2509, file: !2509, line: 761, type: !5151, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5153)
!5151 = !DISubroutineType(types: !5152)
!5152 = !{!235, !226}
!5153 = !{!5154}
!5154 = !DILocalVariable(name: "specifier", arg: 1, scope: !5150, file: !2509, line: 761, type: !226)
!5155 = !DILocation(line: 0, scope: !5150)
!5156 = !DILocation(line: 763, column: 2, scope: !5150)
!5157 = !DILocation(line: 770, column: 3, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5150, file: !2509, line: 763, column: 21)
!5159 = !DILocation(line: 774, column: 3, scope: !5158)
!5160 = !DILocation(line: 0, scope: !5158)
!5161 = !DILocation(line: 776, column: 1, scope: !5150)
!5162 = distinct !DISubprogram(name: "extract_flags", scope: !2509, file: !2509, line: 339, type: !5004, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5163)
!5163 = !{!5164, !5165, !5166}
!5164 = !DILocalVariable(name: "conv", arg: 1, scope: !5162, file: !2509, line: 339, type: !4660)
!5165 = !DILocalVariable(name: "sp", arg: 2, scope: !5162, file: !2509, line: 340, type: !324)
!5166 = !DILocalVariable(name: "loop", scope: !5162, file: !2509, line: 342, type: !334)
!5167 = !DILocation(line: 0, scope: !5162)
!5168 = !DILocation(line: 344, column: 2, scope: !5162)
!5169 = !DILocation(line: 345, column: 11, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5162, file: !2509, line: 344, column: 5)
!5171 = !DILocation(line: 345, column: 3, scope: !5170)
!5172 = !DILocation(line: 351, column: 4, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5170, file: !2509, line: 345, column: 16)
!5174 = !DILocation(line: 354, column: 4, scope: !5173)
!5175 = !DILocation(line: 357, column: 4, scope: !5173)
!5176 = !DILocation(line: 360, column: 4, scope: !5173)
!5177 = !DILocation(line: 0, scope: !5173)
!5178 = !DILocation(line: 370, column: 12, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5162, file: !2509, line: 370, column: 6)
!5180 = !DILocation(line: 370, column: 22, scope: !5179)
!5181 = !DILocation(line: 371, column: 19, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5179, file: !2509, line: 370, column: 42)
!5183 = !DILocation(line: 372, column: 2, scope: !5182)
!5184 = !DILocation(line: 376, column: 2, scope: !5162)
!5185 = distinct !DISubprogram(name: "extract_width", scope: !2509, file: !2509, line: 388, type: !5004, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5186)
!5186 = !{!5187, !5188, !5189, !5190}
!5187 = !DILocalVariable(name: "conv", arg: 1, scope: !5185, file: !2509, line: 388, type: !4660)
!5188 = !DILocalVariable(name: "sp", arg: 2, scope: !5185, file: !2509, line: 389, type: !324)
!5189 = !DILocalVariable(name: "wp", scope: !5185, file: !2509, line: 398, type: !324)
!5190 = !DILocalVariable(name: "width", scope: !5185, file: !2509, line: 399, type: !235)
!5191 = !DILocation(line: 0, scope: !5185)
!5192 = !DILocation(line: 391, column: 8, scope: !5185)
!5193 = !DILocation(line: 391, column: 22, scope: !5185)
!5194 = !DILocation(line: 393, column: 6, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5185, file: !2509, line: 393, column: 6)
!5196 = !DILocation(line: 393, column: 10, scope: !5195)
!5197 = !DILocation(line: 393, column: 6, scope: !5185)
!5198 = !DILocation(line: 394, column: 20, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5195, file: !2509, line: 393, column: 18)
!5200 = !DILocation(line: 395, column: 10, scope: !5199)
!5201 = !DILocation(line: 395, column: 3, scope: !5199)
!5202 = !DILocation(line: 399, column: 17, scope: !5185)
!5203 = !DILocation(line: 401, column: 6, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5185, file: !2509, line: 401, column: 6)
!5205 = !DILocation(line: 401, column: 9, scope: !5204)
!5206 = !DILocation(line: 401, column: 6, scope: !5185)
!5207 = !DILocation(line: 402, column: 23, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5204, file: !2509, line: 401, column: 16)
!5209 = !DILocation(line: 403, column: 9, scope: !5208)
!5210 = !DILocation(line: 403, column: 21, scope: !5208)
!5211 = !DILocation(line: 405, column: 11, scope: !5208)
!5212 = !DILocation(line: 404, column: 21, scope: !5208)
!5213 = !DILocation(line: 406, column: 2, scope: !5208)
!5214 = !DILocation(line: 409, column: 1, scope: !5185)
!5215 = distinct !DISubprogram(name: "extract_prec", scope: !2509, file: !2509, line: 420, type: !5004, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5216)
!5216 = !{!5217, !5218, !5219}
!5217 = !DILocalVariable(name: "conv", arg: 1, scope: !5215, file: !2509, line: 420, type: !4660)
!5218 = !DILocalVariable(name: "sp", arg: 2, scope: !5215, file: !2509, line: 421, type: !324)
!5219 = !DILocalVariable(name: "prec", scope: !5215, file: !2509, line: 435, type: !235)
!5220 = !DILocation(line: 0, scope: !5215)
!5221 = !DILocation(line: 423, column: 24, scope: !5215)
!5222 = !DILocation(line: 423, column: 28, scope: !5215)
!5223 = !DILocation(line: 423, column: 8, scope: !5215)
!5224 = !DILocation(line: 423, column: 21, scope: !5215)
!5225 = !DILocation(line: 425, column: 6, scope: !5215)
!5226 = !DILocation(line: 428, column: 2, scope: !5215)
!5227 = !DILocation(line: 430, column: 6, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5215, file: !2509, line: 430, column: 6)
!5229 = !DILocation(line: 430, column: 10, scope: !5228)
!5230 = !DILocation(line: 430, column: 6, scope: !5215)
!5231 = !DILocation(line: 431, column: 19, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5228, file: !2509, line: 430, column: 18)
!5233 = !DILocation(line: 432, column: 10, scope: !5232)
!5234 = !DILocation(line: 432, column: 3, scope: !5232)
!5235 = !DILocation(line: 435, column: 16, scope: !5215)
!5236 = !DILocation(line: 437, column: 8, scope: !5215)
!5237 = !DILocation(line: 437, column: 19, scope: !5215)
!5238 = !DILocation(line: 439, column: 10, scope: !5215)
!5239 = !DILocation(line: 438, column: 20, scope: !5215)
!5240 = !DILocation(line: 441, column: 9, scope: !5215)
!5241 = !DILocation(line: 442, column: 1, scope: !5215)
!5242 = distinct !DISubprogram(name: "extract_length", scope: !2509, file: !2509, line: 453, type: !5004, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5243)
!5243 = !{!5244, !5245}
!5244 = !DILocalVariable(name: "conv", arg: 1, scope: !5242, file: !2509, line: 453, type: !4660)
!5245 = !DILocalVariable(name: "sp", arg: 2, scope: !5242, file: !2509, line: 454, type: !324)
!5246 = !DILocation(line: 0, scope: !5242)
!5247 = !DILocation(line: 456, column: 10, scope: !5242)
!5248 = !DILocation(line: 456, column: 2, scope: !5242)
!5249 = !DILocation(line: 458, column: 8, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5251, file: !2509, line: 458, column: 7)
!5251 = distinct !DILexicalBlock(scope: !5242, file: !2509, line: 456, column: 15)
!5252 = !DILocation(line: 458, column: 7, scope: !5250)
!5253 = !DILocation(line: 458, column: 13, scope: !5250)
!5254 = !DILocation(line: 0, scope: !5250)
!5255 = !DILocation(line: 458, column: 7, scope: !5251)
!5256 = !DILocation(line: 459, column: 21, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5250, file: !2509, line: 458, column: 21)
!5258 = !DILocation(line: 460, column: 4, scope: !5257)
!5259 = !DILocation(line: 461, column: 3, scope: !5257)
!5260 = !DILocation(line: 462, column: 21, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5250, file: !2509, line: 461, column: 10)
!5262 = !DILocation(line: 466, column: 8, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5251, file: !2509, line: 466, column: 7)
!5264 = !DILocation(line: 466, column: 7, scope: !5263)
!5265 = !DILocation(line: 466, column: 13, scope: !5263)
!5266 = !DILocation(line: 0, scope: !5263)
!5267 = !DILocation(line: 466, column: 7, scope: !5251)
!5268 = !DILocation(line: 467, column: 21, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5263, file: !2509, line: 466, column: 21)
!5270 = !DILocation(line: 468, column: 4, scope: !5269)
!5271 = !DILocation(line: 469, column: 3, scope: !5269)
!5272 = !DILocation(line: 470, column: 21, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5263, file: !2509, line: 469, column: 10)
!5274 = !DILocation(line: 474, column: 9, scope: !5251)
!5275 = !DILocation(line: 474, column: 20, scope: !5251)
!5276 = !DILocation(line: 475, column: 3, scope: !5251)
!5277 = !DILocation(line: 476, column: 3, scope: !5251)
!5278 = !DILocation(line: 478, column: 9, scope: !5251)
!5279 = !DILocation(line: 478, column: 20, scope: !5251)
!5280 = !DILocation(line: 479, column: 3, scope: !5251)
!5281 = !DILocation(line: 480, column: 3, scope: !5251)
!5282 = !DILocation(line: 482, column: 9, scope: !5251)
!5283 = !DILocation(line: 482, column: 20, scope: !5251)
!5284 = !DILocation(line: 483, column: 3, scope: !5251)
!5285 = !DILocation(line: 484, column: 3, scope: !5251)
!5286 = !DILocation(line: 486, column: 9, scope: !5251)
!5287 = !DILocation(line: 486, column: 20, scope: !5251)
!5288 = !DILocation(line: 487, column: 3, scope: !5251)
!5289 = !DILocation(line: 492, column: 21, scope: !5251)
!5290 = !DILocation(line: 493, column: 3, scope: !5251)
!5291 = !DILocation(line: 495, column: 9, scope: !5251)
!5292 = !DILocation(line: 495, column: 20, scope: !5251)
!5293 = !DILocation(line: 496, column: 3, scope: !5251)
!5294 = !DILocation(line: 498, column: 2, scope: !5242)
!5295 = distinct !DISubprogram(name: "extract_specifier", scope: !2509, file: !2509, line: 513, type: !5004, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5296)
!5296 = !{!5297, !5298, !5299, !5300}
!5297 = !DILocalVariable(name: "conv", arg: 1, scope: !5295, file: !2509, line: 513, type: !4660)
!5298 = !DILocalVariable(name: "sp", arg: 2, scope: !5295, file: !2509, line: 514, type: !324)
!5299 = !DILocalVariable(name: "unsupported", scope: !5295, file: !2509, line: 516, type: !334)
!5300 = !DILabel(scope: !5301, name: "int_conv", file: !2509, line: 526)
!5301 = distinct !DILexicalBlock(scope: !5295, file: !2509, line: 520, column: 27)
!5302 = !DILocation(line: 0, scope: !5295)
!5303 = !DILocation(line: 518, column: 20, scope: !5295)
!5304 = !DILocation(line: 518, column: 8, scope: !5295)
!5305 = !DILocation(line: 518, column: 18, scope: !5295)
!5306 = !DILocation(line: 520, column: 2, scope: !5295)
!5307 = !DILocation(line: 525, column: 3, scope: !5301)
!5308 = !DILocation(line: 0, scope: !5301)
!5309 = !DILocation(line: 526, column: 1, scope: !5301)
!5310 = !DILocation(line: 528, column: 24, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5301, file: !2509, line: 528, column: 7)
!5312 = !DILocation(line: 528, column: 7, scope: !5301)
!5313 = !DILocation(line: 535, column: 23, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5301, file: !2509, line: 535, column: 7)
!5315 = !DILocation(line: 535, column: 7, scope: !5301)
!5316 = !DILocation(line: 536, column: 36, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5314, file: !2509, line: 535, column: 31)
!5318 = !DILocation(line: 537, column: 3, scope: !5317)
!5319 = !DILocation(line: 570, column: 9, scope: !5301)
!5320 = !DILocation(line: 570, column: 23, scope: !5301)
!5321 = !DILocation(line: 575, column: 4, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5323, file: !2509, line: 573, column: 48)
!5323 = distinct !DILexicalBlock(scope: !5301, file: !2509, line: 573, column: 7)
!5324 = !DILocation(line: 603, column: 9, scope: !5301)
!5325 = !DILocation(line: 603, column: 23, scope: !5301)
!5326 = !DILocation(line: 605, column: 24, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5301, file: !2509, line: 605, column: 7)
!5328 = !DILocation(line: 605, column: 7, scope: !5301)
!5329 = !DILocation(line: 612, column: 9, scope: !5301)
!5330 = !DILocation(line: 612, column: 23, scope: !5301)
!5331 = !DILocation(line: 619, column: 24, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5301, file: !2509, line: 619, column: 7)
!5333 = !DILocation(line: 619, column: 7, scope: !5301)
!5334 = !DILocation(line: 625, column: 9, scope: !5301)
!5335 = !DILocation(line: 625, column: 17, scope: !5301)
!5336 = !DILocation(line: 626, column: 3, scope: !5301)
!5337 = !DILocation(line: 629, column: 20, scope: !5295)
!5338 = !DILocation(line: 629, column: 8, scope: !5295)
!5339 = !DILocation(line: 518, column: 23, scope: !5295)
!5340 = !DILocation(line: 631, column: 2, scope: !5295)
!5341 = distinct !DISubprogram(name: "extract_decimal", scope: !2509, file: !2509, line: 318, type: !5342, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5345)
!5342 = !DISubroutineType(types: !5343)
!5343 = !{!235, !5344}
!5344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 32)
!5345 = !{!5346, !5347, !5348}
!5346 = !DILocalVariable(name: "str", arg: 1, scope: !5341, file: !2509, line: 318, type: !5344)
!5347 = !DILocalVariable(name: "sp", scope: !5341, file: !2509, line: 320, type: !324)
!5348 = !DILocalVariable(name: "val", scope: !5341, file: !2509, line: 321, type: !235)
!5349 = !DILocation(line: 0, scope: !5341)
!5350 = !DILocation(line: 320, column: 19, scope: !5341)
!5351 = !DILocation(line: 323, column: 37, scope: !5341)
!5352 = !DILocation(line: 323, column: 17, scope: !5341)
!5353 = !DILocation(line: 323, column: 9, scope: !5341)
!5354 = !DILocation(line: 323, column: 2, scope: !5341)
!5355 = !DILocation(line: 324, column: 13, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5341, file: !2509, line: 323, column: 43)
!5357 = !DILocation(line: 324, column: 24, scope: !5356)
!5358 = !DILocation(line: 324, column: 19, scope: !5356)
!5359 = !DILocation(line: 324, column: 27, scope: !5356)
!5360 = distinct !{!5360, !5354, !5361}
!5361 = !DILocation(line: 325, column: 2, scope: !5341)
!5362 = !DILocation(line: 326, column: 7, scope: !5341)
!5363 = !DILocation(line: 327, column: 2, scope: !5341)
!5364 = distinct !DISubprogram(name: "isdigit", scope: !5143, file: !5143, line: 43, type: !288, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !5365)
!5365 = !{!5366}
!5366 = !DILocalVariable(name: "a", arg: 1, scope: !5364, file: !5143, line: 43, type: !109)
!5367 = !DILocation(line: 0, scope: !5364)
!5368 = !DILocation(line: 45, column: 29, scope: !5364)
!5369 = !DILocation(line: 45, column: 45, scope: !5364)
!5370 = !DILocation(line: 45, column: 2, scope: !5364)
!5371 = distinct !DISubprogram(name: "assert_post_action", scope: !5372, file: !5372, line: 26, type: !5373, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5375)
!5372 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5373 = !DISubroutineType(types: !5374)
!5374 = !{null, !324, !32}
!5375 = !{!5376, !5377}
!5376 = !DILocalVariable(name: "file", arg: 1, scope: !5371, file: !5372, line: 26, type: !324)
!5377 = !DILocalVariable(name: "line", arg: 2, scope: !5371, file: !5372, line: 26, type: !32)
!5378 = !DILocation(line: 0, scope: !5371)
!5379 = !DILocation(line: 43, column: 2, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5371, file: !5372, line: 43, column: 2)
!5381 = !{i64 2154073463, i64 2154073479, i64 2154073505, i64 2154073533, i64 2154073553}
!5382 = !DILocation(line: 44, column: 1, scope: !5371)
!5383 = distinct !DISubprogram(name: "assert_print", scope: !5372, file: !5372, line: 46, type: !3643, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5384)
!5384 = !{!5385, !5386}
!5385 = !DILocalVariable(name: "fmt", arg: 1, scope: !5383, file: !5372, line: 46, type: !324)
!5386 = !DILocalVariable(name: "ap", scope: !5383, file: !5372, line: 48, type: !5387)
!5387 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3575, line: 99, baseType: !5388)
!5388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3575, line: 40, baseType: !5389)
!5389 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5372, baseType: !5390)
!5390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5391)
!5391 = !{!5392}
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5390, file: !5372, line: 48, baseType: !108, size: 32)
!5393 = !DILocation(line: 0, scope: !5383)
!5394 = !DILocation(line: 48, column: 2, scope: !5383)
!5395 = !DILocation(line: 48, column: 10, scope: !5383)
!5396 = !DILocation(line: 50, column: 2, scope: !5383)
!5397 = !DILocation(line: 52, column: 2, scope: !5383)
!5398 = !DILocation(line: 54, column: 2, scope: !5383)
!5399 = !DILocation(line: 55, column: 1, scope: !5383)
!5400 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5401, file: !5401, line: 9, type: !3086, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !1998)
!5401 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!5402 = !DILocation(line: 11, column: 1, scope: !5400)
!5403 = !{i64 2147561130, i64 2147561173, i64 2147561213}
!5404 = !DILocation(line: 12, column: 1, scope: !5400)
!5405 = !{i64 2147565357, i64 2147565400, i64 2147565440}
!5406 = !DILocation(line: 13, column: 1, scope: !5400)
!5407 = !{i64 2147565566, i64 2147565609, i64 2147565649}
!5408 = !DILocation(line: 14, column: 1, scope: !5400)
!5409 = !{i64 2147565735, i64 2147565778, i64 2147565818}
!5410 = !DILocation(line: 15, column: 1, scope: !5400)
!5411 = !{i64 2147565898, i64 2147565941, i64 2147565981}
!5412 = !DILocation(line: 16, column: 1, scope: !5400)
!5413 = !{i64 2147566082, i64 2147566125, i64 2147566165}
!5414 = !DILocation(line: 17, column: 1, scope: !5400)
!5415 = !{i64 2147566261, i64 2147566304, i64 2147566344}
!5416 = !DILocation(line: 18, column: 1, scope: !5400)
!5417 = !{i64 2147566503, i64 2147566546, i64 2147566586}
!5418 = !DILocation(line: 19, column: 1, scope: !5400)
!5419 = !{i64 2147566738, i64 2147566781, i64 2147566821}
!5420 = !DILocation(line: 20, column: 1, scope: !5400)
!5421 = !{i64 2147566924, i64 2147566967, i64 2147567007}
!5422 = !DILocation(line: 21, column: 1, scope: !5400)
!5423 = !{i64 2147567140, i64 2147567183, i64 2147567223}
!5424 = !DILocation(line: 22, column: 1, scope: !5400)
!5425 = !{i64 2147567343, i64 2147567386, i64 2147567426}
!5426 = !DILocation(line: 23, column: 1, scope: !5400)
!5427 = !{i64 2147567546, i64 2147567589, i64 2147567629}
!5428 = !DILocation(line: 24, column: 1, scope: !5400)
!5429 = !{i64 2147567721, i64 2147567764, i64 2147567804}
!5430 = !DILocation(line: 25, column: 1, scope: !5400)
!5431 = !{i64 2147567929, i64 2147567972, i64 2147568012}
!5432 = !DILocation(line: 26, column: 1, scope: !5400)
!5433 = !{i64 2147568133, i64 2147568176, i64 2147568216}
!5434 = !DILocation(line: 27, column: 1, scope: !5400)
!5435 = !{i64 2147568326, i64 2147568369, i64 2147568409}
!5436 = !DILocation(line: 28, column: 1, scope: !5400)
!5437 = !{i64 2147568528, i64 2147568571, i64 2147568611}
!5438 = !DILocation(line: 29, column: 1, scope: !5400)
!5439 = !{i64 2147568755, i64 2147568798, i64 2147568838}
!5440 = !DILocation(line: 30, column: 1, scope: !5400)
!5441 = !{i64 2147568957, i64 2147569000, i64 2147569040}
!5442 = !DILocation(line: 31, column: 1, scope: !5400)
!5443 = !{i64 2147569172, i64 2147569215, i64 2147569255}
!5444 = !DILocation(line: 32, column: 1, scope: !5400)
!5445 = !{i64 2147569344, i64 2147569387, i64 2147569427}
!5446 = !DILocation(line: 33, column: 1, scope: !5400)
!5447 = !{i64 2147569546, i64 2147569589, i64 2147569629}
!5448 = !DILocation(line: 34, column: 1, scope: !5400)
!5449 = !{i64 2147569772, i64 2147569815, i64 2147569855}
!5450 = !DILocation(line: 35, column: 1, scope: !5400)
!5451 = !{i64 2147569971, i64 2147570014, i64 2147570054}
!5452 = !DILocation(line: 36, column: 1, scope: !5400)
!5453 = !{i64 2147570146, i64 2147570189, i64 2147570229}
!5454 = !DILocation(line: 37, column: 1, scope: !5400)
!5455 = !{i64 2147570399, i64 2147570442, i64 2147570482}
!5456 = !DILocation(line: 38, column: 1, scope: !5400)
!5457 = !{i64 2147570640, i64 2147570683, i64 2147570723}
!5458 = !DILocation(line: 39, column: 1, scope: !5400)
!5459 = !{i64 2147570875, i64 2147570918, i64 2147570958}
!5460 = !DILocation(line: 40, column: 1, scope: !5400)
!5461 = !{i64 2147571107, i64 2147571150, i64 2147571190}
!5462 = !DILocation(line: 41, column: 1, scope: !5400)
!5463 = !{i64 2147571333, i64 2147571376, i64 2147571416}
!5464 = !DILocation(line: 42, column: 1, scope: !5400)
!5465 = !{i64 2147571559, i64 2147571602, i64 2147571642}
!5466 = !DILocation(line: 43, column: 1, scope: !5400)
!5467 = !{i64 2147571785, i64 2147571828, i64 2147571868}
!5468 = !DILocation(line: 44, column: 1, scope: !5400)
!5469 = !{i64 2147572020, i64 2147572063, i64 2147572103}
!5470 = !DILocation(line: 45, column: 1, scope: !5400)
!5471 = !{i64 2147572258, i64 2147572301, i64 2147572341}
!5472 = !DILocation(line: 46, column: 1, scope: !5400)
!5473 = !{i64 2147572532, i64 2147572575, i64 2147572615}
!5474 = !DILocation(line: 47, column: 1, scope: !5400)
!5475 = !{i64 2147572770, i64 2147572813, i64 2147572853}
!5476 = !DILocation(line: 48, column: 1, scope: !5400)
!5477 = !{i64 2147573014, i64 2147573057, i64 2147573097}
!5478 = !DILocation(line: 49, column: 1, scope: !5400)
!5479 = !{i64 2147573264, i64 2147573307, i64 2147573347}
!5480 = !DILocation(line: 50, column: 1, scope: !5400)
!5481 = !{i64 2147573511, i64 2147573554, i64 2147573594}
!5482 = !DILocation(line: 51, column: 1, scope: !5400)
!5483 = !{i64 2147573746, i64 2147573789, i64 2147573829}
!5484 = !DILocation(line: 52, column: 1, scope: !5400)
!5485 = !{i64 2147573981, i64 2147574024, i64 2147574064}
!5486 = !DILocation(line: 53, column: 1, scope: !5400)
!5487 = !{i64 2147578277, i64 2147578320, i64 2147578360}
!5488 = !DILocation(line: 54, column: 1, scope: !5400)
!5489 = !{i64 2147578515, i64 2147578558, i64 2147578598}
!5490 = !DILocation(line: 55, column: 1, scope: !5400)
!5491 = !{i64 2147578756, i64 2147578799, i64 2147578839}
!5492 = !DILocation(line: 56, column: 1, scope: !5400)
!5493 = !{i64 2147579036, i64 2147579079, i64 2147579119}
!5494 = !DILocation(line: 57, column: 1, scope: !5400)
!5495 = !{i64 2147579295, i64 2147579338, i64 2147579378}
!5496 = !DILocation(line: 58, column: 1, scope: !5400)
!5497 = !{i64 2147579521, i64 2147579564, i64 2147579604}
!5498 = !DILocation(line: 59, column: 1, scope: !5400)
!5499 = !{i64 2147579759, i64 2147579802, i64 2147579842}
!5500 = !DILocation(line: 60, column: 1, scope: !5400)
!5501 = !{i64 2147579988, i64 2147580031, i64 2147580071}
!5502 = !DILocation(line: 61, column: 1, scope: !5400)
!5503 = !{i64 2147580196, i64 2147580239, i64 2147580279}
!5504 = !DILocation(line: 62, column: 1, scope: !5400)
!5505 = !{i64 2147580407, i64 2147580450, i64 2147580490}
!5506 = !DILocation(line: 63, column: 1, scope: !5400)
!5507 = !{i64 2147580642, i64 2147580685, i64 2147580725}
!5508 = !DILocation(line: 64, column: 1, scope: !5400)
!5509 = !{i64 2147580871, i64 2147580914, i64 2147580954}
!5510 = !DILocation(line: 65, column: 1, scope: !5400)
!5511 = !{i64 2147581109, i64 2147581152, i64 2147581192}
!5512 = !DILocation(line: 66, column: 1, scope: !5400)
!5513 = !{i64 2147581341, i64 2147581384, i64 2147581424}
!5514 = !DILocation(line: 67, column: 1, scope: !5400)
!5515 = !{i64 2147581567, i64 2147581610, i64 2147581650}
!5516 = !DILocation(line: 68, column: 1, scope: !5400)
!5517 = !{i64 2147581784, i64 2147581827, i64 2147581867}
!5518 = !DILocation(line: 69, column: 1, scope: !5400)
!5519 = !{i64 2147582016, i64 2147582059, i64 2147582099}
!5520 = !DILocation(line: 70, column: 1, scope: !5400)
!5521 = !{i64 2147582242, i64 2147582285, i64 2147582325}
!5522 = !DILocation(line: 71, column: 1, scope: !5400)
!5523 = !{i64 2147582456, i64 2147582499, i64 2147582539}
!5524 = !DILocation(line: 72, column: 1, scope: !5400)
!5525 = !{i64 2147582676, i64 2147582719, i64 2147582759}
!5526 = !DILocation(line: 73, column: 1, scope: !5400)
!5527 = !{i64 2147582908, i64 2147582951, i64 2147582991}
!5528 = !DILocation(line: 74, column: 1, scope: !5400)
!5529 = !{i64 2147583116, i64 2147583159, i64 2147583199}
!5530 = !DILocation(line: 75, column: 1, scope: !5400)
!5531 = !{i64 2147583321, i64 2147583364, i64 2147583404}
!5532 = !DILocation(line: 76, column: 1, scope: !5400)
!5533 = !{i64 2147583538, i64 2147583581, i64 2147583621}
!5534 = !DILocation(line: 77, column: 1, scope: !5400)
!5535 = !{i64 2147583752, i64 2147583795, i64 2147583835}
!5536 = !DILocation(line: 78, column: 1, scope: !5400)
!5537 = !{i64 2147583978, i64 2147584021, i64 2147584061}
!5538 = !DILocation(line: 79, column: 1, scope: !5400)
!5539 = !{i64 2147584198, i64 2147584241, i64 2147584281}
!5540 = !DILocation(line: 80, column: 1, scope: !5400)
!5541 = !{i64 2147584403, i64 2147584446, i64 2147584486}
!5542 = !DILocation(line: 81, column: 1, scope: !5400)
!5543 = !{i64 2147584635, i64 2147584678, i64 2147584718}
!5544 = !DILocation(line: 82, column: 1, scope: !5400)
!5545 = !{i64 2147584870, i64 2147584913, i64 2147584953}
!5546 = !DILocation(line: 83, column: 1, scope: !5400)
!5547 = !{i64 2147585120, i64 2147585163, i64 2147585203}
!5548 = !DILocation(line: 84, column: 1, scope: !5400)
!5549 = !{i64 2147585370, i64 2147585413, i64 2147585453}
!5550 = !DILocation(line: 85, column: 1, scope: !5400)
!5551 = !{i64 2147585608, i64 2147585651, i64 2147585691}
!5552 = !DILocation(line: 86, column: 1, scope: !5400)
!5553 = !{i64 2147585819, i64 2147585862, i64 2147585902}
!5554 = !DILocation(line: 87, column: 1, scope: !5400)
!5555 = !{i64 2147586036, i64 2147586079, i64 2147586119}
!5556 = !DILocation(line: 88, column: 1, scope: !5400)
!5557 = !{i64 2147586232, i64 2147586275, i64 2147586315}
!5558 = !DILocation(line: 89, column: 1, scope: !5400)
!5559 = !{i64 2147590495, i64 2147590538, i64 2147590578}
!5560 = !DILocation(line: 90, column: 1, scope: !5400)
!5561 = !{i64 2147590688, i64 2147590731, i64 2147590771}
!5562 = !DILocation(line: 91, column: 1, scope: !5400)
!5563 = !{i64 2147590896, i64 2147590939, i64 2147590979}
!5564 = !DILocation(line: 92, column: 1, scope: !5400)
!5565 = !{i64 2147591092, i64 2147591135, i64 2147591175}
!5566 = !DILocation(line: 93, column: 1, scope: !5400)
!5567 = !{i64 2147591297, i64 2147591340, i64 2147591380}
!5568 = !DILocation(line: 94, column: 1, scope: !5400)
!5569 = !{i64 2147591508, i64 2147591551, i64 2147591591}
!5570 = !DILocation(line: 95, column: 1, scope: !5400)
!5571 = !{i64 2147591707, i64 2147591750, i64 2147591790}
!5572 = !DILocation(line: 96, column: 1, scope: !5400)
!5573 = !{i64 2147591882, i64 2147591925, i64 2147591965}
!5574 = !DILocation(line: 97, column: 1, scope: !5400)
!5575 = !{i64 2147592066, i64 2147592109, i64 2147592149}
!5576 = !DILocation(line: 98, column: 1, scope: !5400)
!5577 = !{i64 2147592268, i64 2147592311, i64 2147592351}
!5578 = !DILocation(line: 99, column: 1, scope: !5400)
!5579 = !{i64 2147592467, i64 2147592510, i64 2147592550}
!5580 = !DILocation(line: 100, column: 1, scope: !5400)
!5581 = !{i64 2147592633, i64 2147592676, i64 2147592716}
!5582 = !DILocation(line: 101, column: 1, scope: !5400)
!5583 = !{i64 2147592817, i64 2147592860, i64 2147592900}
!5584 = !DILocation(line: 102, column: 1, scope: !5400)
!5585 = !{i64 2147593007, i64 2147593050, i64 2147593090}
!5586 = !DILocation(line: 103, column: 1, scope: !5400)
!5587 = !{i64 2147593191, i64 2147593234, i64 2147593274}
!5588 = !DILocation(line: 104, column: 1, scope: !5400)
!5589 = !{i64 2147593405, i64 2147593448, i64 2147593488}
!5590 = !DILocation(line: 105, column: 1, scope: !5400)
!5591 = !{i64 2147593616, i64 2147593659, i64 2147593699}
!5592 = !DILocation(line: 106, column: 1, scope: !5400)
!5593 = !{i64 2147593839, i64 2147593882, i64 2147593922}
!5594 = !DILocation(line: 107, column: 1, scope: !5400)
!5595 = !{i64 2147594023, i64 2147594066, i64 2147594106}
!5596 = !DILocation(line: 108, column: 1, scope: !5400)
!5597 = !{i64 2147594237, i64 2147594280, i64 2147594320}
!5598 = !DILocation(line: 109, column: 1, scope: !5400)
!5599 = !{i64 2147594403, i64 2147594446, i64 2147594486}
!5600 = !DILocation(line: 110, column: 1, scope: !5400)
!5601 = !{i64 2147594584, i64 2147594627, i64 2147594667}
!5602 = !DILocation(line: 111, column: 1, scope: !5400)
!5603 = !{i64 2147594777, i64 2147594820, i64 2147594860}
!5604 = !DILocation(line: 112, column: 1, scope: !5400)
!5605 = !{i64 2147595003, i64 2147595046, i64 2147595086}
!5606 = !DILocation(line: 113, column: 1, scope: !5400)
!5607 = !{i64 2147595217, i64 2147595260, i64 2147595300}
!5608 = !DILocation(line: 114, column: 1, scope: !5400)
!5609 = !{i64 2147595443, i64 2147595486, i64 2147595526}
!5610 = !DILocation(line: 115, column: 1, scope: !5400)
!5611 = !{i64 2147595660, i64 2147595703, i64 2147595743}
!5612 = !DILocation(line: 116, column: 1, scope: !5400)
!5613 = !{i64 2147595937, i64 2147595980, i64 2147596020}
!5614 = !DILocation(line: 117, column: 1, scope: !5400)
!5615 = !{i64 2147596163, i64 2147596206, i64 2147596246}
!5616 = !DILocation(line: 118, column: 1, scope: !5400)
!5617 = !{i64 2147596371, i64 2147596414, i64 2147596454}
!5618 = !DILocation(line: 119, column: 1, scope: !5400)
!5619 = !{i64 2147596567, i64 2147596610, i64 2147596650}
!5620 = !DILocation(line: 120, column: 1, scope: !5400)
!5621 = !{i64 2147596832, i64 2147596875, i64 2147596915}
!5622 = !DILocation(line: 121, column: 1, scope: !5400)
!5623 = !{i64 2147597046, i64 2147597089, i64 2147597129}
!5624 = !DILocation(line: 122, column: 1, scope: !5400)
!5625 = !{i64 2147597221, i64 2147597264, i64 2147597304}
!5626 = !DILocation(line: 123, column: 1, scope: !5400)
!5627 = !{i64 2147597475, i64 2147597518, i64 2147597558}
!5628 = !DILocation(line: 124, column: 1, scope: !5400)
!5629 = !{i64 2147597674, i64 2147597717, i64 2147597757}
!5630 = !DILocation(line: 125, column: 1, scope: !5400)
!5631 = !{i64 2147597916, i64 2147597959, i64 2147597999}
!5632 = !DILocation(line: 126, column: 1, scope: !5400)
!5633 = !{i64 2147598079, i64 2147598122, i64 2147598162}
!5634 = !DILocation(line: 127, column: 1, scope: !5400)
!5635 = !{i64 2147598266, i64 2147598309, i64 2147598349}
!5636 = !DILocation(line: 128, column: 1, scope: !5400)
!5637 = !{i64 2147598459, i64 2147598502, i64 2147598542}
!5638 = !DILocation(line: 129, column: 1, scope: !5400)
!5639 = !{i64 2147598642, i64 2147598685, i64 2147598725}
!5640 = !DILocation(line: 130, column: 1, scope: !5400)
!5641 = !{i64 2147598856, i64 2147598899, i64 2147598939}
!5642 = !DILocation(line: 131, column: 1, scope: !5400)
!5643 = !{i64 2147599067, i64 2147599110, i64 2147599150}
!5644 = !DILocation(line: 132, column: 1, scope: !5400)
!5645 = !{i64 2147599287, i64 2147599330, i64 2147599370}
!5646 = !DILocation(line: 133, column: 1, scope: !5400)
!5647 = !{i64 2147599494, i64 2147599537, i64 2147599577}
!5648 = !DILocation(line: 134, column: 1, scope: !5400)
!5649 = !{i64 2147603828, i64 2147603871, i64 2147603911}
!5650 = !DILocation(line: 135, column: 1, scope: !5400)
!5651 = !{i64 2147604076, i64 2147604119, i64 2147604159}
!5652 = !DILocation(line: 136, column: 1, scope: !5400)
!5653 = !{i64 2147604275, i64 2147604318, i64 2147604358}
!5654 = !DILocation(line: 137, column: 1, scope: !5400)
!5655 = !{i64 2147604510, i64 2147604553, i64 2147604593}
!5656 = !DILocation(line: 138, column: 1, scope: !5400)
!5657 = !{i64 2147604760, i64 2147604803, i64 2147604843}
!5658 = !DILocation(line: 139, column: 1, scope: !5400)
!5659 = !{i64 2147604962, i64 2147605005, i64 2147605045}
!5660 = !DILocation(line: 140, column: 1, scope: !5400)
!5661 = !{i64 2147605185, i64 2147605228, i64 2147605268}
!5662 = !DILocation(line: 141, column: 1, scope: !5400)
!5663 = !{i64 2147605399, i64 2147605442, i64 2147605482}
!5664 = !DILocation(line: 142, column: 1, scope: !5400)
!5665 = !{i64 2147605643, i64 2147605686, i64 2147605726}
!5666 = !DILocation(line: 143, column: 1, scope: !5400)
!5667 = !{i64 2147605872, i64 2147605915, i64 2147605955}
!5668 = !DILocation(line: 144, column: 1, scope: !5400)
!5669 = !{i64 2147606101, i64 2147606144, i64 2147606184}
!5670 = !DILocation(line: 145, column: 1, scope: !5400)
!5671 = !{i64 2147606309, i64 2147606352, i64 2147606392}
!5672 = !DILocation(line: 146, column: 1, scope: !5400)
!5673 = !{i64 2147606547, i64 2147606590, i64 2147606630}
!5674 = !DILocation(line: 147, column: 1, scope: !5400)
!5675 = !{i64 2147606773, i64 2147606816, i64 2147606856}
!5676 = !DILocation(line: 148, column: 1, scope: !5400)
!5677 = !{i64 2147607032, i64 2147607075, i64 2147607115}
!5678 = !DILocation(line: 149, column: 1, scope: !5400)
!5679 = !{i64 2147607252, i64 2147607295, i64 2147607335}
!5680 = !DILocation(line: 150, column: 1, scope: !5400)
!5681 = !{i64 2147607484, i64 2147607527, i64 2147607567}
!5682 = !DILocation(line: 151, column: 1, scope: !5400)
!5683 = !{i64 2147607725, i64 2147607768, i64 2147607808}
!5684 = !DILocation(line: 152, column: 1, scope: !5400)
!5685 = !{i64 2147607966, i64 2147608009, i64 2147608049}
!5686 = !DILocation(line: 153, column: 1, scope: !5400)
!5687 = !{i64 2147608189, i64 2147608232, i64 2147608272}
!5688 = !DILocation(line: 154, column: 1, scope: !5400)
!5689 = !{i64 2147608406, i64 2147608449, i64 2147608489}
!5690 = !DILocation(line: 155, column: 1, scope: !5400)
!5691 = !{i64 2147608647, i64 2147608690, i64 2147608730}
!5692 = !DILocation(line: 156, column: 1, scope: !5400)
!5693 = !{i64 2147608834, i64 2147608877, i64 2147608917}
!5694 = !DILocation(line: 157, column: 1, scope: !5400)
!5695 = !{i64 2147609021, i64 2147609064, i64 2147609104}
!5696 = !DILocation(line: 158, column: 1, scope: !5400)
!5697 = !{i64 2147609184, i64 2147609227, i64 2147609267}
!5698 = !DILocation(line: 159, column: 1, scope: !5400)
!5699 = !{i64 2147609443, i64 2147609486, i64 2147609526}
!5700 = !DILocation(line: 160, column: 1, scope: !5400)
!5701 = !{i64 2147609666, i64 2147609709, i64 2147609749}
!5702 = !DILocation(line: 161, column: 1, scope: !5400)
!5703 = !{i64 2147609895, i64 2147609938, i64 2147609978}
!5704 = !DILocation(line: 162, column: 1, scope: !5400)
!5705 = !{i64 2147610091, i64 2147610134, i64 2147610174}
!5706 = !DILocation(line: 163, column: 1, scope: !5400)
!5707 = !{i64 2147610303, i64 2147610346, i64 2147610386}
!5708 = !DILocation(line: 164, column: 1, scope: !5400)
!5709 = !{i64 2147610524, i64 2147610567, i64 2147610607}
!5710 = !DILocation(line: 165, column: 1, scope: !5400)
!5711 = !{i64 2147610738, i64 2147610781, i64 2147610821}
!5712 = !DILocation(line: 166, column: 1, scope: !5400)
!5713 = !{i64 2147610928, i64 2147610971, i64 2147611011}
!5714 = !DILocation(line: 167, column: 1, scope: !5400)
!5715 = !{i64 2147611127, i64 2147611170, i64 2147611210}
!5716 = !DILocation(line: 168, column: 1, scope: !5400)
!5717 = !{i64 2147611332, i64 2147611375, i64 2147611415}
!5718 = !DILocation(line: 169, column: 1, scope: !5400)
!5719 = !{i64 2147611552, i64 2147611595, i64 2147611635}
!5720 = !DILocation(line: 170, column: 1, scope: !5400)
!5721 = !{i64 2147611753, i64 2147611796, i64 2147611836}
!5722 = !DILocation(line: 171, column: 1, scope: !5400)
!5723 = !{i64 2147611952, i64 2147611995, i64 2147612035}
!5724 = !DILocation(line: 172, column: 1, scope: !5400)
!5725 = !{i64 2147612157, i64 2147612200, i64 2147612240}
!5726 = !DILocation(line: 173, column: 1, scope: !5400)
!5727 = !{i64 2147612326, i64 2147612369, i64 2147612409}
!5728 = !DILocation(line: 174, column: 1, scope: !5400)
!5729 = !{i64 2147616583, i64 2147616626, i64 2147616666}
!5730 = !DILocation(line: 175, column: 1, scope: !5400)
!5731 = !{i64 2147616767, i64 2147616810, i64 2147616850}
!5732 = !DILocation(line: 176, column: 1, scope: !5400)
!5733 = !{i64 2147616954, i64 2147616997, i64 2147617037}
!5734 = !DILocation(line: 177, column: 1, scope: !5400)
!5735 = !{i64 2147617138, i64 2147617181, i64 2147617221}
!5736 = !DILocation(line: 178, column: 1, scope: !5400)
!5737 = !{i64 2147617334, i64 2147617377, i64 2147617417}
!5738 = !DILocation(line: 179, column: 1, scope: !5400)
!5739 = !{i64 2147617521, i64 2147617564, i64 2147617604}
!5740 = !DILocation(line: 180, column: 1, scope: !5400)
!5741 = !{i64 2147617733, i64 2147617776, i64 2147617816}
!5742 = !DILocation(line: 181, column: 1, scope: !5400)
!5743 = !{i64 2147617971, i64 2147618014, i64 2147618054}
!5744 = !DILocation(line: 182, column: 1, scope: !5400)
!5745 = !{i64 2147618201, i64 2147618244, i64 2147618284}
!5746 = !DILocation(line: 183, column: 1, scope: !5400)
!5747 = !{i64 2147618430, i64 2147618473, i64 2147618513}
!5748 = !DILocation(line: 184, column: 1, scope: !5400)
!5749 = !{i64 2147618617, i64 2147618660, i64 2147618700}
!5750 = !DILocation(line: 185, column: 1, scope: !5400)
!5751 = !{i64 2147618813, i64 2147618856, i64 2147618896}
!5752 = !DILocation(line: 186, column: 1, scope: !5400)
!5753 = !{i64 2147619021, i64 2147619064, i64 2147619104}
!5754 = !DILocation(line: 187, column: 1, scope: !5400)
!5755 = !{i64 2147619233, i64 2147619276, i64 2147619316}
!5756 = !DILocation(line: 188, column: 1, scope: !5400)
!5757 = !{i64 2147619432, i64 2147619475, i64 2147619515}
!5758 = !DILocation(line: 189, column: 1, scope: !5400)
!5759 = !{i64 2147619670, i64 2147619713, i64 2147619753}
!5760 = !DILocation(line: 190, column: 1, scope: !5400)
!5761 = !{i64 2147619866, i64 2147619909, i64 2147619949}
!5762 = !DILocation(line: 191, column: 1, scope: !5400)
!5763 = !{i64 2147620068, i64 2147620111, i64 2147620151}
!5764 = !DILocation(line: 192, column: 1, scope: !5400)
!5765 = !{i64 2147620261, i64 2147620304, i64 2147620344}
!5766 = !DILocation(line: 193, column: 1, scope: !5400)
!5767 = !{i64 2147620495, i64 2147620538, i64 2147620578}
!5768 = !DILocation(line: 194, column: 1, scope: !5400)
!5769 = !{i64 2147620658, i64 2147620701, i64 2147620741}
!5770 = !DILocation(line: 195, column: 1, scope: !5400)
!5771 = !{i64 2147620897, i64 2147620940, i64 2147620980}
!5772 = !DILocation(line: 196, column: 1, scope: !5400)
!5773 = !{i64 2147621136, i64 2147621179, i64 2147621219}
!5774 = !DILocation(line: 197, column: 1, scope: !5400)
!5775 = !{i64 2147621372, i64 2147621415, i64 2147621455}
!5776 = !DILocation(line: 198, column: 1, scope: !5400)
!5777 = !{i64 2147621602, i64 2147621645, i64 2147621685}
!5778 = !DILocation(line: 199, column: 1, scope: !5400)
!5779 = !{i64 2147621789, i64 2147621832, i64 2147621872}
!5780 = !DILocation(line: 200, column: 1, scope: !5400)
!5781 = !{i64 2147621988, i64 2147622031, i64 2147622071}
!5782 = !DILocation(line: 201, column: 1, scope: !5400)
!5783 = !{i64 2147622259, i64 2147622302, i64 2147622342}
!5784 = !DILocation(line: 202, column: 1, scope: !5400)
!5785 = !{i64 2147622434, i64 2147622477, i64 2147622517}
!5786 = !DILocation(line: 203, column: 1, scope: !5400)
!5787 = !{i64 2147622668, i64 2147622711, i64 2147622751}
!5788 = !DILocation(line: 204, column: 1, scope: !5400)
!5789 = !{i64 2147622876, i64 2147622919, i64 2147622959}
!5790 = !DILocation(line: 205, column: 1, scope: !5400)
!5791 = !{i64 2147623094, i64 2147623137, i64 2147623177}
!5792 = !DILocation(line: 206, column: 1, scope: !5400)
!5793 = !{i64 2147623284, i64 2147623327, i64 2147623367}
!5794 = !DILocation(line: 207, column: 1, scope: !5400)
!5795 = !{i64 2147623480, i64 2147623523, i64 2147623563}
!5796 = !DILocation(line: 208, column: 1, scope: !5400)
!5797 = !{i64 2147623686, i64 2147623729, i64 2147623769}
!5798 = !DILocation(line: 209, column: 1, scope: !5400)
!5799 = !{i64 2147623891, i64 2147623934, i64 2147623974}
!5800 = !DILocation(line: 210, column: 1, scope: !5400)
!5801 = !{i64 2147624117, i64 2147624160, i64 2147624200}
!5802 = !DILocation(line: 211, column: 1, scope: !5400)
!5803 = !{i64 2147624349, i64 2147624392, i64 2147624432}
!5804 = !DILocation(line: 212, column: 1, scope: !5400)
!5805 = !{i64 2147624533, i64 2147624576, i64 2147624616}
!5806 = !DILocation(line: 213, column: 1, scope: !5400)
!5807 = !{i64 2147624742, i64 2147624785, i64 2147624825}
!5808 = !DILocation(line: 214, column: 1, scope: !5400)
!5809 = !{i64 2147624926, i64 2147624969, i64 2147625009}
!5810 = !DILocation(line: 215, column: 1, scope: !5400)
!5811 = !{i64 2147625152, i64 2147625195, i64 2147625235}
!5812 = !DILocation(line: 216, column: 1, scope: !5400)
!5813 = !{i64 2147625378, i64 2147625421, i64 2147625461}
!5814 = !DILocation(line: 217, column: 1, scope: !5400)
!5815 = !{i64 2147629665, i64 2147629708, i64 2147629748}
!5816 = !DILocation(line: 218, column: 1, scope: !5400)
!5817 = !{i64 2147629891, i64 2147629934, i64 2147629974}
!5818 = !DILocation(line: 219, column: 1, scope: !5400)
!5819 = !{i64 2147630117, i64 2147630160, i64 2147630200}
!5820 = !DILocation(line: 220, column: 1, scope: !5400)
!5821 = !{i64 2147630349, i64 2147630392, i64 2147630432}
!5822 = !DILocation(line: 221, column: 1, scope: !5400)
!5823 = !{i64 2147630587, i64 2147630630, i64 2147630670}
!5824 = !DILocation(line: 222, column: 1, scope: !5400)
!5825 = !{i64 2147630807, i64 2147630850, i64 2147630890}
!5826 = !DILocation(line: 223, column: 1, scope: !5400)
!5827 = !{i64 2147631051, i64 2147631094, i64 2147631134}
!5828 = !DILocation(line: 224, column: 1, scope: !5400)
!5829 = !{i64 2147631292, i64 2147631335, i64 2147631375}
!5830 = !DILocation(line: 225, column: 1, scope: !5400)
!5831 = !{i64 2147631527, i64 2147631570, i64 2147631610}
!5832 = !DILocation(line: 226, column: 1, scope: !5400)
!5833 = !{i64 2147631759, i64 2147631802, i64 2147631842}
!5834 = !DILocation(line: 227, column: 1, scope: !5400)
!5835 = !{i64 2147631961, i64 2147632004, i64 2147632044}
!5836 = !DILocation(line: 228, column: 1, scope: !5400)
!5837 = !{i64 2147632211, i64 2147632254, i64 2147632294}
!5838 = !DILocation(line: 229, column: 1, scope: !5400)
!5839 = !{i64 2147632449, i64 2147632492, i64 2147632532}
!5840 = !DILocation(line: 230, column: 1, scope: !5400)
!5841 = !{i64 2147632633, i64 2147632676, i64 2147632716}
!5842 = !DILocation(line: 231, column: 1, scope: !5400)
!5843 = !{i64 2147632856, i64 2147632899, i64 2147632939}
!5844 = !DILocation(line: 232, column: 1, scope: !5400)
!5845 = !{i64 2147633094, i64 2147633137, i64 2147633177}
!5846 = !DILocation(line: 233, column: 1, scope: !5400)
!5847 = !{i64 2147633332, i64 2147633375, i64 2147633415}
!5848 = !DILocation(line: 234, column: 1, scope: !5400)
!5849 = !{i64 2147633525, i64 2147633568, i64 2147633608}
!5850 = !DILocation(line: 235, column: 1, scope: !5400)
!5851 = !{i64 2147633778, i64 2147633821, i64 2147633861}
!5852 = !DILocation(line: 236, column: 1, scope: !5400)
!5853 = !{i64 2147633992, i64 2147634035, i64 2147634075}
!5854 = !DILocation(line: 237, column: 1, scope: !5400)
!5855 = !{i64 2147634200, i64 2147634243, i64 2147634283}
!5856 = !DILocation(line: 238, column: 1, scope: !5400)
!5857 = !{i64 2147634390, i64 2147634433, i64 2147634473}
!5858 = !DILocation(line: 239, column: 1, scope: !5400)
!5859 = !{i64 2147634604, i64 2147634647, i64 2147634687}
!5860 = !DILocation(line: 240, column: 1, scope: !5400)
!5861 = !{i64 2147634866, i64 2147634909, i64 2147634949}
!5862 = !DILocation(line: 241, column: 1, scope: !5400)
!5863 = !{i64 2147635077, i64 2147635120, i64 2147635160}
!5864 = !DILocation(line: 242, column: 1, scope: !5400)
!5865 = !{i64 2147635321, i64 2147635364, i64 2147635404}
!5866 = !DILocation(line: 243, column: 1, scope: !5400)
!5867 = !{i64 2147635532, i64 2147635575, i64 2147635615}
!5868 = !DILocation(line: 244, column: 1, scope: !5400)
!5869 = !{i64 2147635761, i64 2147635804, i64 2147635844}
!5870 = !DILocation(line: 245, column: 1, scope: !5400)
!5871 = !{i64 2147636026, i64 2147636069, i64 2147636109}
!5872 = !DILocation(line: 246, column: 1, scope: !5400)
!5873 = !{i64 2147636231, i64 2147636274, i64 2147636314}
!5874 = !DILocation(line: 247, column: 1, scope: !5400)
!5875 = !{i64 2147636454, i64 2147636497, i64 2147636537}
!5876 = !DILocation(line: 248, column: 1, scope: !5400)
!5877 = !{i64 2147636617, i64 2147636660, i64 2147636700}
!5878 = !DILocation(line: 249, column: 1, scope: !5400)
!5879 = !{i64 2147636822, i64 2147636865, i64 2147636905}
!5880 = !DILocation(line: 250, column: 1, scope: !5400)
!5881 = !{i64 2147637042, i64 2147637085, i64 2147637125}
!5882 = !DILocation(line: 251, column: 1, scope: !5400)
!5883 = !{i64 2147637256, i64 2147637299, i64 2147637339}
!5884 = !DILocation(line: 252, column: 1, scope: !5400)
!5885 = !{i64 2147637470, i64 2147637513, i64 2147637553}
!5886 = !DILocation(line: 253, column: 1, scope: !5400)
!5887 = !{i64 2147637681, i64 2147637724, i64 2147637764}
!5888 = !DILocation(line: 254, column: 1, scope: !5400)
!5889 = !{i64 2147637874, i64 2147637917, i64 2147637957}
!5890 = !DILocation(line: 255, column: 1, scope: !5400)
!5891 = !{i64 2147638073, i64 2147638116, i64 2147638156}
!5892 = !DILocation(line: 256, column: 1, scope: !5400)
!5893 = !{i64 2147642306, i64 2147642349, i64 2147642389}
!5894 = !DILocation(line: 257, column: 1, scope: !5400)
!5895 = !{i64 2147642499, i64 2147642542, i64 2147642582}
!5896 = !DILocation(line: 258, column: 1, scope: !5400)
!5897 = !{i64 2147642671, i64 2147642714, i64 2147642754}
!5898 = !DILocation(line: 259, column: 1, scope: !5400)
!5899 = !{i64 2147642861, i64 2147642904, i64 2147642944}
!5900 = !DILocation(line: 260, column: 1, scope: !5400)
!5901 = !{i64 2147643054, i64 2147643097, i64 2147643137}
!5902 = !DILocation(line: 261, column: 1, scope: !5400)
!5903 = !{i64 2147643250, i64 2147643293, i64 2147643333}
!5904 = !DILocation(line: 262, column: 1, scope: !5400)
!5905 = !{i64 2147643455, i64 2147643498, i64 2147643538}
!5906 = !DILocation(line: 263, column: 1, scope: !5400)
!5907 = !{i64 2147643682, i64 2147643725, i64 2147643765}
!5908 = !DILocation(line: 264, column: 1, scope: !5400)
!5909 = !{i64 2147643899, i64 2147643942, i64 2147643982}
!5910 = !DILocation(line: 265, column: 1, scope: !5400)
!5911 = !{i64 2147644191, i64 2147644234, i64 2147644274}
!5912 = !DILocation(line: 266, column: 1, scope: !5400)
!5913 = !{i64 2147644423, i64 2147644466, i64 2147644506}
!5914 = !DILocation(line: 267, column: 1, scope: !5400)
!5915 = !{i64 2147644640, i64 2147644683, i64 2147644723}
!5916 = !DILocation(line: 268, column: 1, scope: !5400)
!5917 = !{i64 2147644847, i64 2147644890, i64 2147644930}
!5918 = !DILocation(line: 269, column: 1, scope: !5400)
!5919 = !{i64 2147645048, i64 2147645091, i64 2147645131}
!5920 = !DILocation(line: 270, column: 1, scope: !5400)
!5921 = !{i64 2147645280, i64 2147645323, i64 2147645363}
!5922 = !DILocation(line: 271, column: 1, scope: !5400)
!5923 = !{i64 2147645488, i64 2147645531, i64 2147645571}
!5924 = !DILocation(line: 272, column: 1, scope: !5400)
!5925 = !{i64 2147645678, i64 2147645721, i64 2147645761}
!5926 = !DILocation(line: 273, column: 1, scope: !5400)
!5927 = !{i64 2147645904, i64 2147645947, i64 2147645987}
!5928 = !DILocation(line: 274, column: 1, scope: !5400)
!5929 = !{i64 2147646093, i64 2147646136, i64 2147646176}
!5930 = !DILocation(line: 275, column: 1, scope: !5400)
!5931 = !{i64 2147646364, i64 2147646407, i64 2147646447}
!5932 = !DILocation(line: 276, column: 1, scope: !5400)
!5933 = !{i64 2147646584, i64 2147646627, i64 2147646667}
!5934 = !DILocation(line: 277, column: 1, scope: !5400)
!5935 = !{i64 2147646837, i64 2147646880, i64 2147646920}
!5936 = !DILocation(line: 278, column: 1, scope: !5400)
!5937 = !{i64 2147647045, i64 2147647088, i64 2147647128}
!5938 = !DILocation(line: 279, column: 1, scope: !5400)
!5939 = !{i64 2147647277, i64 2147647320, i64 2147647360}
!5940 = !DILocation(line: 280, column: 1, scope: !5400)
!5941 = !{i64 2147647488, i64 2147647531, i64 2147647571}
!5942 = !DILocation(line: 281, column: 1, scope: !5400)
!5943 = !{i64 2147647678, i64 2147647721, i64 2147647761}
!5944 = !DILocation(line: 282, column: 1, scope: !5400)
!5945 = !{i64 2147647892, i64 2147647935, i64 2147647975}
!5946 = !DILocation(line: 283, column: 1, scope: !5400)
!5947 = !{i64 2147648091, i64 2147648134, i64 2147648174}
!5948 = !DILocation(line: 284, column: 1, scope: !5400)
!5949 = !{i64 2147648278, i64 2147648321, i64 2147648361}
!5950 = !DILocation(line: 285, column: 1, scope: !5400)
!5951 = !{i64 2147648486, i64 2147648529, i64 2147648569}
!5952 = !DILocation(line: 286, column: 1, scope: !5400)
!5953 = !{i64 2147648715, i64 2147648758, i64 2147648798}
!5954 = !DILocation(line: 287, column: 1, scope: !5400)
!5955 = !{i64 2147648917, i64 2147648960, i64 2147649000}
!5956 = !DILocation(line: 288, column: 1, scope: !5400)
!5957 = !{i64 2147649116, i64 2147649159, i64 2147649199}
!5958 = !DILocation(line: 289, column: 1, scope: !5400)
!5959 = !{i64 2147649333, i64 2147649376, i64 2147649416}
!5960 = !DILocation(line: 291, column: 1, scope: !5400)
!5961 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !309, file: !309, line: 30, type: !316, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5962)
!5962 = !{!5963, !5964}
!5963 = !DILocalVariable(name: "arg", arg: 1, scope: !5961, file: !309, line: 30, type: !318)
!5964 = !DILocalVariable(name: "key", scope: !5961, file: !309, line: 32, type: !110)
!5965 = !DILocation(line: 0, scope: !5961)
!5966 = !DILocation(line: 37, column: 2, scope: !5961)
!5967 = !DILocation(line: 38, column: 2, scope: !5961)
!5968 = !DILocation(line: 55, column: 2, scope: !5969, inlinedAt: !5976)
!5969 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5970, file: !5970, line: 42, type: !5971, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5973)
!5970 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5971 = !DISubroutineType(types: !5972)
!5972 = !{!32}
!5973 = !{!5974, !5975}
!5974 = !DILocalVariable(name: "key", scope: !5969, file: !5970, line: 44, type: !32)
!5975 = !DILocalVariable(name: "tmp", scope: !5969, file: !5970, line: 53, type: !32)
!5976 = distinct !DILocation(line: 40, column: 8, scope: !5961)
!5977 = !{i64 1834005}
!5978 = !DILocation(line: 0, scope: !5969, inlinedAt: !5976)
!5979 = !DILocalVariable(name: "key", arg: 1, scope: !5980, file: !5970, line: 84, type: !32)
!5980 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5970, file: !5970, line: 84, type: !5981, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5983)
!5981 = !DISubroutineType(types: !5982)
!5982 = !{null, !32}
!5983 = !{!5979}
!5984 = !DILocation(line: 0, scope: !5980, inlinedAt: !5985)
!5985 = distinct !DILocation(line: 47, column: 2, scope: !5961)
!5986 = !DILocation(line: 95, column: 2, scope: !5980, inlinedAt: !5985)
!5987 = !{i64 1834822}
!5988 = !DILocation(line: 51, column: 18, scope: !5961)
!5989 = !DILocation(line: 53, column: 2, scope: !5961)
!5990 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5991, file: !5991, line: 1609, type: !3086, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !1998)
!5991 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5992 = !DILocation(line: 1611, column: 3, scope: !5990)
!5993 = !DILocation(line: 1612, column: 1, scope: !5990)
!5994 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5991, file: !5991, line: 1629, type: !3086, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !1998)
!5995 = !DILocation(line: 1631, column: 3, scope: !5994)
!5996 = !DILocation(line: 1632, column: 1, scope: !5994)
!5997 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !348, file: !348, line: 26, type: !354, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5998)
!5998 = !{!5999}
!5999 = !DILocalVariable(name: "dev", arg: 1, scope: !5997, file: !348, line: 26, type: !356)
!6000 = !DILocation(line: 0, scope: !5997)
!6001 = !DILocation(line: 68, column: 2, scope: !5997)
!6002 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6003, file: !6003, line: 57, type: !6004, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !6050)
!6003 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6004 = !DISubroutineType(types: !6005)
!6005 = !{null, !32, !6006}
!6006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6007, size: 32)
!6007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6008)
!6008 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2666, line: 141, baseType: !6009)
!6009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2666, line: 97, size: 256, elements: !6010)
!6010 = !{!6011}
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6009, file: !2666, line: 107, baseType: !6012, size: 256)
!6012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2666, line: 98, size: 256, elements: !6013)
!6013 = !{!6014, !6019, !6024, !6029, !6034, !6039, !6044, !6049}
!6014 = !DIDerivedType(tag: DW_TAG_member, scope: !6012, file: !2666, line: 99, baseType: !6015, size: 32)
!6015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6012, file: !2666, line: 99, size: 32, elements: !6016)
!6016 = !{!6017, !6018}
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6015, file: !2666, line: 99, baseType: !110, size: 32)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6015, file: !2666, line: 99, baseType: !110, size: 32)
!6019 = !DIDerivedType(tag: DW_TAG_member, scope: !6012, file: !2666, line: 100, baseType: !6020, size: 32, offset: 32)
!6020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6012, file: !2666, line: 100, size: 32, elements: !6021)
!6021 = !{!6022, !6023}
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6020, file: !2666, line: 100, baseType: !110, size: 32)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6020, file: !2666, line: 100, baseType: !110, size: 32)
!6024 = !DIDerivedType(tag: DW_TAG_member, scope: !6012, file: !2666, line: 101, baseType: !6025, size: 32, offset: 64)
!6025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6012, file: !2666, line: 101, size: 32, elements: !6026)
!6026 = !{!6027, !6028}
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6025, file: !2666, line: 101, baseType: !110, size: 32)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6025, file: !2666, line: 101, baseType: !110, size: 32)
!6029 = !DIDerivedType(tag: DW_TAG_member, scope: !6012, file: !2666, line: 102, baseType: !6030, size: 32, offset: 96)
!6030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6012, file: !2666, line: 102, size: 32, elements: !6031)
!6031 = !{!6032, !6033}
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6030, file: !2666, line: 102, baseType: !110, size: 32)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6030, file: !2666, line: 102, baseType: !110, size: 32)
!6034 = !DIDerivedType(tag: DW_TAG_member, scope: !6012, file: !2666, line: 103, baseType: !6035, size: 32, offset: 128)
!6035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6012, file: !2666, line: 103, size: 32, elements: !6036)
!6036 = !{!6037, !6038}
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6035, file: !2666, line: 103, baseType: !110, size: 32)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6035, file: !2666, line: 103, baseType: !110, size: 32)
!6039 = !DIDerivedType(tag: DW_TAG_member, scope: !6012, file: !2666, line: 104, baseType: !6040, size: 32, offset: 160)
!6040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6012, file: !2666, line: 104, size: 32, elements: !6041)
!6041 = !{!6042, !6043}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6040, file: !2666, line: 104, baseType: !110, size: 32)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6040, file: !2666, line: 104, baseType: !110, size: 32)
!6044 = !DIDerivedType(tag: DW_TAG_member, scope: !6012, file: !2666, line: 105, baseType: !6045, size: 32, offset: 192)
!6045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6012, file: !2666, line: 105, size: 32, elements: !6046)
!6046 = !{!6047, !6048}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6045, file: !2666, line: 105, baseType: !110, size: 32)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6045, file: !2666, line: 105, baseType: !110, size: 32)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6012, file: !2666, line: 106, baseType: !110, size: 32, offset: 224)
!6050 = !{!6051, !6052}
!6051 = !DILocalVariable(name: "reason", arg: 1, scope: !6002, file: !6003, line: 57, type: !32)
!6052 = !DILocalVariable(name: "esf", arg: 2, scope: !6002, file: !6003, line: 57, type: !6006)
!6053 = !DILocation(line: 0, scope: !6002)
!6054 = !DILocation(line: 63, column: 2, scope: !6002)
!6055 = !DILocation(line: 64, column: 1, scope: !6002)
!6056 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6003, file: !6003, line: 82, type: !6057, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !6072)
!6057 = !DISubroutineType(types: !6058)
!6058 = !{null, !6006, !6059}
!6059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6060, size: 32)
!6060 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !198, line: 37, baseType: !6061)
!6061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6062)
!6062 = !{!6063, !6064, !6065, !6066, !6067, !6068, !6069, !6070, !6071}
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6061, file: !198, line: 26, baseType: !110, size: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6061, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6061, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6061, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6061, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6061, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6061, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6061, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6061, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6072 = !{!6073, !6074, !6075}
!6073 = !DILocalVariable(name: "esf", arg: 1, scope: !6056, file: !6003, line: 82, type: !6006)
!6074 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6056, file: !6003, line: 82, type: !6059)
!6075 = !DILocalVariable(name: "reason", scope: !6056, file: !6003, line: 88, type: !32)
!6076 = !DILocation(line: 0, scope: !6056)
!6077 = !DILocation(line: 88, column: 35, scope: !6056)
!6078 = !DILocation(line: 108, column: 2, scope: !6056)
!6079 = !DILocation(line: 131, column: 1, scope: !6056)
!6080 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6003, file: !6003, line: 133, type: !6081, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !6083)
!6081 = !DISubroutineType(types: !6082)
!6082 = !{null, !108}
!6083 = !{!6084, !6085, !6086}
!6084 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6080, file: !6003, line: 133, type: !108)
!6085 = !DILocalVariable(name: "ssf_contents", scope: !6080, file: !6003, line: 135, type: !857)
!6086 = !DILocalVariable(name: "oops_esf", scope: !6080, file: !6003, line: 136, type: !6008)
!6087 = !DILocation(line: 0, scope: !6080)
!6088 = !DILocation(line: 136, column: 2, scope: !6080)
!6089 = !DILocation(line: 136, column: 15, scope: !6080)
!6090 = !DILocation(line: 139, column: 22, scope: !6080)
!6091 = !DILocation(line: 139, column: 17, scope: !6080)
!6092 = !DILocation(line: 139, column: 20, scope: !6080)
!6093 = !DILocation(line: 141, column: 2, scope: !6080)
!6094 = !DILocation(line: 142, column: 2, scope: !6080)
!6095 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6096, file: !6096, line: 40, type: !5981, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6097)
!6096 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6097 = !{!6098}
!6098 = !DILocalVariable(name: "irq", arg: 1, scope: !6095, file: !6096, line: 40, type: !32)
!6099 = !DILocation(line: 0, scope: !6095)
!6100 = !DILocation(line: 42, column: 2, scope: !6095)
!6101 = !DILocation(line: 43, column: 1, scope: !6095)
!6102 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !536, file: !536, line: 1684, type: !6103, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6105)
!6103 = !DISubroutineType(types: !6104)
!6104 = !{null, !762}
!6105 = !{!6106}
!6106 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6102, file: !536, line: 1684, type: !762)
!6107 = !DILocation(line: 0, scope: !6102)
!6108 = !DILocation(line: 1686, column: 23, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6102, file: !536, line: 1686, column: 7)
!6110 = !DILocation(line: 1686, column: 7, scope: !6102)
!6111 = !DILocation(line: 1688, column: 5, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6109, file: !536, line: 1687, column: 3)
!6113 = !{i64 2150357780}
!6114 = !DILocation(line: 1689, column: 81, scope: !6112)
!6115 = !DILocation(line: 1689, column: 60, scope: !6112)
!6116 = !DILocation(line: 1689, column: 34, scope: !6112)
!6117 = !DILocation(line: 1689, column: 5, scope: !6112)
!6118 = !DILocation(line: 1689, column: 43, scope: !6112)
!6119 = !DILocation(line: 1690, column: 5, scope: !6112)
!6120 = !{i64 2150357894}
!6121 = !DILocation(line: 1691, column: 3, scope: !6112)
!6122 = !DILocation(line: 1692, column: 1, scope: !6102)
!6123 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6096, file: !6096, line: 45, type: !5981, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6124)
!6124 = !{!6125}
!6125 = !DILocalVariable(name: "irq", arg: 1, scope: !6123, file: !6096, line: 45, type: !32)
!6126 = !DILocation(line: 0, scope: !6123)
!6127 = !DILocation(line: 47, column: 2, scope: !6123)
!6128 = !DILocation(line: 48, column: 1, scope: !6123)
!6129 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !536, file: !536, line: 1722, type: !6103, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6130)
!6130 = !{!6131}
!6131 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6129, file: !536, line: 1722, type: !762)
!6132 = !DILocation(line: 0, scope: !6129)
!6133 = !DILocation(line: 1724, column: 23, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6129, file: !536, line: 1724, column: 7)
!6135 = !DILocation(line: 1724, column: 7, scope: !6129)
!6136 = !DILocation(line: 1726, column: 81, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6134, file: !536, line: 1725, column: 3)
!6138 = !DILocation(line: 1726, column: 60, scope: !6137)
!6139 = !DILocation(line: 1726, column: 34, scope: !6137)
!6140 = !DILocation(line: 1726, column: 5, scope: !6137)
!6141 = !DILocation(line: 1726, column: 43, scope: !6137)
!6142 = !DILocation(line: 271, column: 3, scope: !6143, inlinedAt: !6145)
!6143 = distinct !DISubprogram(name: "__DSB", scope: !6144, file: !6144, line: 269, type: !3086, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !1998)
!6144 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6145 = distinct !DILocation(line: 1727, column: 5, scope: !6137)
!6146 = !{i64 2812163}
!6147 = !DILocation(line: 260, column: 3, scope: !6148, inlinedAt: !6149)
!6148 = distinct !DISubprogram(name: "__ISB", scope: !6144, file: !6144, line: 258, type: !3086, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !1998)
!6149 = distinct !DILocation(line: 1728, column: 5, scope: !6137)
!6150 = !{i64 2811880}
!6151 = !DILocation(line: 1729, column: 3, scope: !6137)
!6152 = !DILocation(line: 1730, column: 1, scope: !6129)
!6153 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6096, file: !6096, line: 50, type: !6154, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6156)
!6154 = !DISubroutineType(types: !6155)
!6155 = !{!109, !32}
!6156 = !{!6157}
!6157 = !DILocalVariable(name: "irq", arg: 1, scope: !6153, file: !6096, line: 50, type: !32)
!6158 = !DILocation(line: 0, scope: !6153)
!6159 = !DILocation(line: 52, column: 20, scope: !6153)
!6160 = !DILocation(line: 52, column: 9, scope: !6153)
!6161 = !DILocation(line: 52, column: 41, scope: !6153)
!6162 = !DILocation(line: 52, column: 39, scope: !6153)
!6163 = !DILocation(line: 52, column: 2, scope: !6153)
!6164 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6096, file: !6096, line: 64, type: !6165, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6167)
!6165 = !DISubroutineType(types: !6166)
!6166 = !{null, !32, !32, !110}
!6167 = !{!6168, !6169, !6170}
!6168 = !DILocalVariable(name: "irq", arg: 1, scope: !6164, file: !6096, line: 64, type: !32)
!6169 = !DILocalVariable(name: "prio", arg: 2, scope: !6164, file: !6096, line: 64, type: !32)
!6170 = !DILocalVariable(name: "flags", arg: 3, scope: !6164, file: !6096, line: 64, type: !110)
!6171 = !DILocation(line: 0, scope: !6164)
!6172 = !DILocation(line: 83, column: 8, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !6096, line: 82, column: 9)
!6174 = distinct !DILexicalBlock(scope: !6164, file: !6096, line: 76, column: 6)
!6175 = !DILocation(line: 91, column: 2, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !6096, line: 91, column: 2)
!6177 = distinct !DILexicalBlock(scope: !6164, file: !6096, line: 91, column: 2)
!6178 = !DILocation(line: 91, column: 2, scope: !6177)
!6179 = !DILocation(line: 91, column: 2, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6176, file: !6096, line: 91, column: 2)
!6181 = !DILocation(line: 95, column: 2, scope: !6164)
!6182 = !DILocation(line: 96, column: 1, scope: !6164)
!6183 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6184, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6186)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{null, !762, !110}
!6186 = !{!6187, !6188}
!6187 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6183, file: !536, line: 1814, type: !762)
!6188 = !DILocalVariable(name: "priority", arg: 2, scope: !6183, file: !536, line: 1814, type: !110)
!6189 = !DILocation(line: 0, scope: !6183)
!6190 = !DILocation(line: 0, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6183, file: !536, line: 1816, column: 7)
!6192 = !DILocation(line: 1816, column: 7, scope: !6183)
!6193 = !DILocation(line: 1824, column: 1, scope: !6183)
!6194 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6096, file: !6096, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6195)
!6195 = !{!6196}
!6196 = !DILocalVariable(name: "unused", arg: 1, scope: !6194, file: !6096, line: 155, type: !13)
!6197 = !DILocation(line: 0, scope: !6194)
!6198 = !DILocation(line: 159, column: 2, scope: !6194)
!6199 = !DILocation(line: 160, column: 1, scope: !6194)
!6200 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6201, file: !6201, line: 87, type: !3086, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !1998)
!6201 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6202 = !DILocation(line: 89, column: 2, scope: !6200)
!6203 = !DILocation(line: 90, column: 2, scope: !6200)
!6204 = !DILocation(line: 91, column: 1, scope: !6200)
!6205 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6201, file: !6201, line: 23, type: !3086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1998)
!6206 = !DISubprogram(name: "z_arm_int_exit", scope: !6207, file: !6207, line: 153, type: !3086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1998)
!6207 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6208 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6209, file: !6209, line: 256, type: !3086, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !1998)
!6209 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6210 = !DILocation(line: 258, column: 2, scope: !6208)
!6211 = !DILocation(line: 260, column: 2, scope: !6208)
!6212 = !DILocation(line: 262, column: 2, scope: !6208)
!6213 = !DILocation(line: 263, column: 2, scope: !6208)
!6214 = !DILocation(line: 267, column: 2, scope: !6208)
!6215 = !DILocation(line: 268, column: 2, scope: !6208)
!6216 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6209, file: !6209, line: 53, type: !3086, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !1998)
!6217 = !DILocation(line: 55, column: 12, scope: !6216)
!6218 = !DILocation(line: 271, column: 3, scope: !6219, inlinedAt: !6220)
!6219 = distinct !DISubprogram(name: "__DSB", scope: !6144, file: !6144, line: 269, type: !3086, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !1998)
!6220 = distinct !DILocation(line: 56, column: 2, scope: !6216)
!6221 = !{i64 2810834}
!6222 = !DILocation(line: 260, column: 3, scope: !6223, inlinedAt: !6224)
!6223 = distinct !DISubprogram(name: "__ISB", scope: !6144, file: !6144, line: 258, type: !3086, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !1998)
!6224 = distinct !DILocation(line: 57, column: 2, scope: !6216)
!6225 = !{i64 2810551}
!6226 = !DILocation(line: 58, column: 1, scope: !6216)
!6227 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6209, file: !6209, line: 96, type: !3086, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !1998)
!6228 = !DILocation(line: 103, column: 13, scope: !6227)
!6229 = !DILocation(line: 975, column: 3, scope: !6230, inlinedAt: !6233)
!6230 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6144, file: !6144, line: 971, type: !3368, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !6231)
!6231 = !{!6232}
!6232 = !DILocalVariable(name: "result", scope: !6230, file: !6144, line: 973, type: !110)
!6233 = distinct !DILocation(line: 189, column: 16, scope: !6227)
!6234 = !{i64 2831664}
!6235 = !DILocation(line: 0, scope: !6230, inlinedAt: !6233)
!6236 = !DILocation(line: 189, column: 32, scope: !6227)
!6237 = !DILocalVariable(name: "control", arg: 1, scope: !6238, file: !6144, line: 1001, type: !110)
!6238 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6144, file: !6144, line: 1001, type: !6239, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !6241)
!6239 = !DISubroutineType(types: !6240)
!6240 = !{null, !110}
!6241 = !{!6237}
!6242 = !DILocation(line: 0, scope: !6238, inlinedAt: !6243)
!6243 = distinct !DILocation(line: 189, column: 2, scope: !6227)
!6244 = !DILocation(line: 1003, column: 3, scope: !6238, inlinedAt: !6243)
!6245 = !{i64 2832384}
!6246 = !DILocation(line: 260, column: 3, scope: !6223, inlinedAt: !6247)
!6247 = distinct !DILocation(line: 1004, column: 3, scope: !6238, inlinedAt: !6243)
!6248 = !DILocation(line: 191, column: 1, scope: !6227)
!6249 = distinct !DISubprogram(name: "arch_swap", scope: !6250, file: !6250, line: 33, type: !6154, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !6251)
!6250 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6251 = !{!6252}
!6252 = !DILocalVariable(name: "key", arg: 1, scope: !6249, file: !6250, line: 33, type: !32)
!6253 = !DILocation(line: 0, scope: !6249)
!6254 = !DILocation(line: 36, column: 2, scope: !6249)
!6255 = !DILocation(line: 36, column: 17, scope: !6249)
!6256 = !DILocation(line: 36, column: 25, scope: !6249)
!6257 = !DILocation(line: 37, column: 37, scope: !6249)
!6258 = !DILocation(line: 37, column: 17, scope: !6249)
!6259 = !DILocation(line: 37, column: 35, scope: !6249)
!6260 = !DILocation(line: 41, column: 12, scope: !6249)
!6261 = !DILocalVariable(name: "key", arg: 1, scope: !6262, file: !5970, line: 84, type: !32)
!6262 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5970, file: !5970, line: 84, type: !5981, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !6263)
!6263 = !{!6261}
!6264 = !DILocation(line: 0, scope: !6262, inlinedAt: !6265)
!6265 = distinct !DILocation(line: 44, column: 2, scope: !6249)
!6266 = !DILocation(line: 95, column: 2, scope: !6262, inlinedAt: !6265)
!6267 = !{i64 1950030}
!6268 = !DILocation(line: 53, column: 9, scope: !6249)
!6269 = !DILocation(line: 53, column: 24, scope: !6249)
!6270 = !DILocation(line: 53, column: 2, scope: !6249)
!6271 = distinct !DISubprogram(name: "arch_new_thread", scope: !6272, file: !6272, line: 56, type: !6273, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2661, retainedNodes: !6391)
!6272 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6273 = !DISubroutineType(types: !6274)
!6274 = !{null, !6275, !6386, !1127, !215, !108, !108, !108}
!6275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6276, size: 32)
!6276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !6277)
!6277 = !{!6278, !6336, !6348, !6349, !6350, !6357, !6358, !6359, !6360, !6366, !6381}
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6276, file: !145, line: 247, baseType: !6279, size: 384)
!6279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !6280)
!6280 = !{!6281, !6305, !6312, !6313, !6314, !6323, !6324, !6325}
!6281 = !DIDerivedType(tag: DW_TAG_member, scope: !6279, file: !145, line: 60, baseType: !6282, size: 64)
!6282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6279, file: !145, line: 60, size: 64, elements: !6283)
!6283 = !{!6284, !6299}
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6282, file: !145, line: 61, baseType: !6285, size: 64)
!6285 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !6286)
!6286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !6287)
!6287 = !{!6288, !6294}
!6288 = !DIDerivedType(tag: DW_TAG_member, scope: !6286, file: !128, line: 38, baseType: !6289, size: 32)
!6289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6286, file: !128, line: 38, size: 32, elements: !6290)
!6290 = !{!6291, !6293}
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6289, file: !128, line: 39, baseType: !6292, size: 32)
!6292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6286, size: 32)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6289, file: !128, line: 40, baseType: !6292, size: 32)
!6294 = !DIDerivedType(tag: DW_TAG_member, scope: !6286, file: !128, line: 42, baseType: !6295, size: 32, offset: 32)
!6295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6286, file: !128, line: 42, size: 32, elements: !6296)
!6296 = !{!6297, !6298}
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6295, file: !128, line: 43, baseType: !6292, size: 32)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6295, file: !128, line: 44, baseType: !6292, size: 32)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6282, file: !145, line: 62, baseType: !6300, size: 64)
!6300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !6301)
!6301 = !{!6302}
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6300, file: !157, line: 50, baseType: !6303, size: 64)
!6303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6304, size: 64, elements: !162)
!6304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6300, size: 32)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6279, file: !145, line: 68, baseType: !6306, size: 32, offset: 64)
!6306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6307, size: 32)
!6307 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !6308)
!6308 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !6309)
!6309 = !{!6310}
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6308, file: !123, line: 232, baseType: !6311, size: 64)
!6311 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !6286)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6279, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6279, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!6314 = !DIDerivedType(tag: DW_TAG_member, scope: !6279, file: !145, line: 90, baseType: !6315, size: 16, offset: 112)
!6315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6279, file: !145, line: 90, size: 16, elements: !6316)
!6316 = !{!6317, !6322}
!6317 = !DIDerivedType(tag: DW_TAG_member, scope: !6315, file: !145, line: 91, baseType: !6318, size: 16)
!6318 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6315, file: !145, line: 91, size: 16, elements: !6319)
!6319 = !{!6320, !6321}
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6318, file: !145, line: 96, baseType: !177, size: 8)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6318, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6315, file: !145, line: 100, baseType: !181, size: 16)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6279, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6279, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6279, file: !145, line: 131, baseType: !6326, size: 192, offset: 192)
!6326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !6327)
!6327 = !{!6328, !6329, !6335}
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6326, file: !123, line: 245, baseType: !6285, size: 64)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6326, file: !123, line: 246, baseType: !6330, size: 32, offset: 64)
!6330 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !6331)
!6331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6332, size: 32)
!6332 = !DISubroutineType(types: !6333)
!6333 = !{null, !6334}
!6334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6326, size: 32)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6326, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6276, file: !145, line: 250, baseType: !6337, size: 288, offset: 384)
!6337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6338)
!6338 = !{!6339, !6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347}
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6337, file: !198, line: 26, baseType: !110, size: 32)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6337, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6337, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6337, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6337, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6337, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6337, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6337, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6337, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6276, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6276, file: !145, line: 256, baseType: !6307, size: 64, offset: 704)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6276, file: !145, line: 271, baseType: !6351, size: 128, offset: 768)
!6351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !6352)
!6352 = !{!6353, !6354, !6355, !6356}
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !6351, file: !145, line: 35, baseType: !215, size: 32)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !6351, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !6351, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !6351, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !6276, file: !145, line: 274, baseType: !6275, size: 32, offset: 896)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6276, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6276, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6276, file: !145, line: 300, baseType: !6361, size: 96, offset: 1216)
!6361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !6362)
!6362 = !{!6363, !6364, !6365}
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6361, file: !145, line: 153, baseType: !22, size: 32)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6361, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6361, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6276, file: !145, line: 325, baseType: !6367, size: 32, offset: 1312)
!6367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6368, size: 32)
!6368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !6369)
!6369 = !{!6370, !6376, !6377}
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6368, file: !119, line: 5074, baseType: !6371, size: 96)
!6371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !6372)
!6372 = !{!6373, !6374, !6375}
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6371, file: !244, line: 57, baseType: !247, size: 32)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6371, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6371, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6368, file: !119, line: 5075, baseType: !6307, size: 64, offset: 96)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6368, file: !119, line: 5076, baseType: !6378, size: 32, offset: 160)
!6378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !6379)
!6379 = !{!6380}
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6378, file: !254, line: 52, baseType: !22, size: 32)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6276, file: !145, line: 343, baseType: !6382, size: 64, offset: 1344)
!6382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !6383)
!6383 = !{!6384, !6385}
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6382, file: !198, line: 63, baseType: !110, size: 32)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6382, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!6386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6387, size: 32)
!6387 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !6388)
!6388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !6389)
!6389 = !{!6390}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6388, file: !273, line: 48, baseType: !226, size: 8)
!6391 = !{!6392, !6393, !6394, !6395, !6396, !6397, !6398, !6399}
!6392 = !DILocalVariable(name: "thread", arg: 1, scope: !6271, file: !6272, line: 56, type: !6275)
!6393 = !DILocalVariable(name: "stack", arg: 2, scope: !6271, file: !6272, line: 56, type: !6386)
!6394 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6271, file: !6272, line: 57, type: !1127)
!6395 = !DILocalVariable(name: "entry", arg: 4, scope: !6271, file: !6272, line: 57, type: !215)
!6396 = !DILocalVariable(name: "p1", arg: 5, scope: !6271, file: !6272, line: 58, type: !108)
!6397 = !DILocalVariable(name: "p2", arg: 6, scope: !6271, file: !6272, line: 58, type: !108)
!6398 = !DILocalVariable(name: "p3", arg: 7, scope: !6271, file: !6272, line: 58, type: !108)
!6399 = !DILocalVariable(name: "iframe", scope: !6271, file: !6272, line: 60, type: !2664)
!6400 = !DILocation(line: 0, scope: !6271)
!6401 = !DILocation(line: 85, column: 11, scope: !6271)
!6402 = !DILocation(line: 93, column: 10, scope: !6271)
!6403 = !DILocation(line: 98, column: 13, scope: !6271)
!6404 = !DILocation(line: 100, column: 15, scope: !6271)
!6405 = !DILocation(line: 100, column: 10, scope: !6271)
!6406 = !DILocation(line: 100, column: 13, scope: !6271)
!6407 = !DILocation(line: 101, column: 15, scope: !6271)
!6408 = !DILocation(line: 101, column: 10, scope: !6271)
!6409 = !DILocation(line: 101, column: 13, scope: !6271)
!6410 = !DILocation(line: 102, column: 15, scope: !6271)
!6411 = !DILocation(line: 102, column: 10, scope: !6271)
!6412 = !DILocation(line: 102, column: 13, scope: !6271)
!6413 = !DILocation(line: 103, column: 15, scope: !6271)
!6414 = !DILocation(line: 103, column: 10, scope: !6271)
!6415 = !DILocation(line: 103, column: 13, scope: !6271)
!6416 = !DILocation(line: 106, column: 10, scope: !6271)
!6417 = !DILocation(line: 106, column: 15, scope: !6271)
!6418 = !DILocation(line: 122, column: 29, scope: !6271)
!6419 = !DILocation(line: 122, column: 23, scope: !6271)
!6420 = !DILocation(line: 122, column: 27, scope: !6271)
!6421 = !DILocation(line: 123, column: 15, scope: !6271)
!6422 = !DILocation(line: 123, column: 23, scope: !6271)
!6423 = !DILocation(line: 143, column: 1, scope: !6271)
!6424 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6272, file: !6272, line: 385, type: !6425, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2661, retainedNodes: !6428)
!6425 = !DISubroutineType(types: !6426)
!6426 = !{!110, !6427, !6427}
!6427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6428 = !{!6429, !6430, !6431, !6434}
!6429 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6424, file: !6272, line: 385, type: !6427)
!6430 = !DILocalVariable(name: "psp", arg: 2, scope: !6424, file: !6272, line: 385, type: !6427)
!6431 = !DILocalVariable(name: "thread", scope: !6424, file: !6272, line: 388, type: !6432)
!6432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6433, size: 32)
!6433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6276)
!6434 = !DILocalVariable(name: "guard_len", scope: !6424, file: !6272, line: 405, type: !110)
!6435 = !DILocation(line: 0, scope: !6424)
!6436 = !DILocation(line: 388, column: 34, scope: !6424)
!6437 = !DILocation(line: 390, column: 13, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6424, file: !6272, line: 390, column: 6)
!6439 = !DILocation(line: 390, column: 6, scope: !6424)
!6440 = !DILocation(line: 438, column: 6, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6424, file: !6272, line: 438, column: 6)
!6442 = !DILocation(line: 438, column: 6, scope: !6424)
!6443 = !DILocation(line: 442, column: 3, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6441, file: !6272, line: 440, column: 22)
!6445 = !DILocation(line: 455, column: 1, scope: !6424)
!6446 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6272, file: !6272, line: 530, type: !6447, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2661, retainedNodes: !6449)
!6447 = !DISubroutineType(types: !6448)
!6448 = !{null, !6275, !1127, !215}
!6449 = !{!6450, !6451, !6452}
!6450 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6446, file: !6272, line: 530, type: !6275)
!6451 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6446, file: !6272, line: 530, type: !1127)
!6452 = !DILocalVariable(name: "_main", arg: 3, scope: !6446, file: !6272, line: 531, type: !215)
!6453 = !DILocation(line: 0, scope: !6446)
!6454 = !DILocation(line: 535, column: 11, scope: !6446)
!6455 = !DILocation(line: 560, column: 2, scope: !6446)
!6456 = !DILocation(line: 576, column: 2, scope: !6446)
!6457 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6458 = !DILocation(line: 603, column: 2, scope: !6446)
!6459 = distinct !DISubprogram(name: "z_arm_fault", scope: !6460, file: !6460, line: 1036, type: !6461, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6476)
!6460 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6461 = !DISubroutineType(types: !6462)
!6462 = !{null, !110, !110, !110, !6463}
!6463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6464, size: 32)
!6464 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !198, line: 37, baseType: !6465)
!6465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6466)
!6466 = !{!6467, !6468, !6469, !6470, !6471, !6472, !6473, !6474, !6475}
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6465, file: !198, line: 26, baseType: !110, size: 32)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6465, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6465, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6465, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6465, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6465, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6465, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6465, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6465, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6476 = !{!6477, !6478, !6479, !6480, !6481, !6482, !6483, !6484, !6485, !6486}
!6477 = !DILocalVariable(name: "msp", arg: 1, scope: !6459, file: !6460, line: 1036, type: !110)
!6478 = !DILocalVariable(name: "psp", arg: 2, scope: !6459, file: !6460, line: 1036, type: !110)
!6479 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6459, file: !6460, line: 1036, type: !110)
!6480 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6459, file: !6460, line: 1037, type: !6463)
!6481 = !DILocalVariable(name: "reason", scope: !6459, file: !6460, line: 1039, type: !110)
!6482 = !DILocalVariable(name: "fault", scope: !6459, file: !6460, line: 1040, type: !109)
!6483 = !DILocalVariable(name: "recoverable", scope: !6459, file: !6460, line: 1041, type: !334)
!6484 = !DILocalVariable(name: "nested_exc", scope: !6459, file: !6460, line: 1041, type: !334)
!6485 = !DILocalVariable(name: "esf", scope: !6459, file: !6460, line: 1042, type: !2732)
!6486 = !DILocalVariable(name: "esf_copy", scope: !6459, file: !6460, line: 1047, type: !2733)
!6487 = !DILocation(line: 0, scope: !6459)
!6488 = !DILocation(line: 1040, column: 19, scope: !6459)
!6489 = !DILocation(line: 1041, column: 2, scope: !6459)
!6490 = !DILocation(line: 1047, column: 2, scope: !6459)
!6491 = !DILocation(line: 1047, column: 15, scope: !6459)
!6492 = !DILocalVariable(name: "key", arg: 1, scope: !6493, file: !5970, line: 84, type: !32)
!6493 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5970, file: !5970, line: 84, type: !5981, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6494)
!6494 = !{!6492}
!6495 = !DILocation(line: 0, scope: !6493, inlinedAt: !6496)
!6496 = distinct !DILocation(line: 1050, column: 2, scope: !6459)
!6497 = !DILocation(line: 95, column: 2, scope: !6493, inlinedAt: !6496)
!6498 = !{i64 1983274}
!6499 = !DILocation(line: 1055, column: 9, scope: !6459)
!6500 = !DILocation(line: 1056, column: 2, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6502, file: !6460, line: 1056, column: 2)
!6502 = distinct !DILexicalBlock(scope: !6459, file: !6460, line: 1056, column: 2)
!6503 = !DILocation(line: 1056, column: 2, scope: !6502)
!6504 = !DILocation(line: 1056, column: 2, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6501, file: !6460, line: 1056, column: 2)
!6506 = !DILocation(line: 1040, column: 24, scope: !6459)
!6507 = !DILocation(line: 1063, column: 11, scope: !6459)
!6508 = !DILocation(line: 1064, column: 6, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6459, file: !6460, line: 1064, column: 6)
!6510 = !DILocation(line: 1064, column: 6, scope: !6459)
!6511 = !DILocation(line: 1070, column: 20, scope: !6459)
!6512 = !DILocation(line: 1070, column: 2, scope: !6459)
!6513 = !DILocation(line: 1089, column: 6, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6459, file: !6460, line: 1089, column: 6)
!6515 = !DILocation(line: 0, scope: !6514)
!6516 = !DILocation(line: 1089, column: 6, scope: !6459)
!6517 = !DILocation(line: 1090, column: 28, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !6460, line: 1090, column: 7)
!6519 = distinct !DILexicalBlock(scope: !6514, file: !6460, line: 1089, column: 18)
!6520 = !DILocation(line: 1090, column: 44, scope: !6518)
!6521 = !DILocation(line: 1090, column: 7, scope: !6519)
!6522 = !DILocation(line: 1091, column: 24, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6518, file: !6460, line: 1090, column: 50)
!6524 = !DILocation(line: 1092, column: 3, scope: !6523)
!6525 = !DILocation(line: 1094, column: 23, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6514, file: !6460, line: 1093, column: 9)
!6527 = !DILocation(line: 1097, column: 2, scope: !6459)
!6528 = !DILocation(line: 1098, column: 1, scope: !6459)
!6529 = distinct !DISubprogram(name: "get_esf", scope: !6460, file: !6460, line: 894, type: !6530, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6533)
!6530 = !DISubroutineType(types: !6531)
!6531 = !{!2732, !110, !110, !110, !6532}
!6532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!6533 = !{!6534, !6535, !6536, !6537, !6538, !6539}
!6534 = !DILocalVariable(name: "msp", arg: 1, scope: !6529, file: !6460, line: 894, type: !110)
!6535 = !DILocalVariable(name: "psp", arg: 2, scope: !6529, file: !6460, line: 894, type: !110)
!6536 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6529, file: !6460, line: 894, type: !110)
!6537 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6529, file: !6460, line: 895, type: !6532)
!6538 = !DILocalVariable(name: "alternative_state_exc", scope: !6529, file: !6460, line: 897, type: !334)
!6539 = !DILocalVariable(name: "ptr_esf", scope: !6529, file: !6460, line: 898, type: !2732)
!6540 = !DILocation(line: 0, scope: !6529)
!6541 = !DILocation(line: 900, column: 14, scope: !6529)
!6542 = !DILocation(line: 902, column: 49, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6529, file: !6460, line: 902, column: 6)
!6544 = !DILocation(line: 902, column: 6, scope: !6529)
!6545 = !DILocation(line: 983, column: 18, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6529, file: !6460, line: 983, column: 6)
!6547 = !DILocation(line: 991, column: 7, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !6460, line: 990, column: 30)
!6549 = distinct !DILexicalBlock(scope: !6529, file: !6460, line: 990, column: 6)
!6550 = !DILocation(line: 998, column: 16, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6552, file: !6460, line: 995, column: 10)
!6552 = distinct !DILexicalBlock(scope: !6548, file: !6460, line: 991, column: 7)
!6553 = !DILocation(line: 1002, column: 2, scope: !6529)
!6554 = !DILocation(line: 1003, column: 1, scope: !6529)
!6555 = distinct !DISubprogram(name: "fault_handle", scope: !6460, file: !6460, line: 786, type: !6556, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6558)
!6556 = !DISubroutineType(types: !6557)
!6557 = !{!110, !2732, !109, !6532}
!6558 = !{!6559, !6560, !6561, !6562}
!6559 = !DILocalVariable(name: "esf", arg: 1, scope: !6555, file: !6460, line: 786, type: !2732)
!6560 = !DILocalVariable(name: "fault", arg: 2, scope: !6555, file: !6460, line: 786, type: !109)
!6561 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6555, file: !6460, line: 786, type: !6532)
!6562 = !DILocalVariable(name: "reason", scope: !6555, file: !6460, line: 788, type: !110)
!6563 = !DILocation(line: 0, scope: !6555)
!6564 = !DILocation(line: 790, column: 15, scope: !6555)
!6565 = !DILocation(line: 792, column: 2, scope: !6555)
!6566 = !DILocation(line: 794, column: 12, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6555, file: !6460, line: 792, column: 17)
!6568 = !DILocation(line: 795, column: 3, scope: !6567)
!6569 = !DILocation(line: 800, column: 12, scope: !6567)
!6570 = !DILocation(line: 801, column: 3, scope: !6567)
!6571 = !DILocation(line: 803, column: 12, scope: !6567)
!6572 = !DILocation(line: 804, column: 3, scope: !6567)
!6573 = !DILocation(line: 806, column: 12, scope: !6567)
!6574 = !DILocation(line: 807, column: 3, scope: !6567)
!6575 = !DILocation(line: 814, column: 3, scope: !6567)
!6576 = !DILocation(line: 815, column: 3, scope: !6567)
!6577 = !DILocation(line: 829, column: 2, scope: !6555)
!6578 = distinct !DISubprogram(name: "hard_fault", scope: !6460, file: !6460, line: 709, type: !6579, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6581)
!6579 = !DISubroutineType(types: !6580)
!6580 = !{!110, !2732, !6532}
!6581 = !{!6582, !6583, !6584}
!6582 = !DILocalVariable(name: "esf", arg: 1, scope: !6578, file: !6460, line: 709, type: !2732)
!6583 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6578, file: !6460, line: 709, type: !6532)
!6584 = !DILocalVariable(name: "reason", scope: !6578, file: !6460, line: 711, type: !110)
!6585 = !DILocation(line: 0, scope: !6578)
!6586 = !DILocation(line: 732, column: 15, scope: !6578)
!6587 = !DILocation(line: 734, column: 12, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6578, file: !6460, line: 734, column: 6)
!6589 = !DILocation(line: 734, column: 17, scope: !6588)
!6590 = !DILocation(line: 734, column: 41, scope: !6588)
!6591 = !DILocation(line: 734, column: 6, scope: !6578)
!6592 = !DILocation(line: 736, column: 19, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6588, file: !6460, line: 736, column: 13)
!6594 = !DILocation(line: 736, column: 49, scope: !6593)
!6595 = !DILocation(line: 736, column: 13, scope: !6588)
!6596 = !DILocation(line: 738, column: 19, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6593, file: !6460, line: 738, column: 13)
!6598 = !DILocation(line: 738, column: 24, scope: !6597)
!6599 = !DILocation(line: 738, column: 47, scope: !6597)
!6600 = !DILocation(line: 738, column: 13, scope: !6593)
!6601 = !DILocation(line: 740, column: 7, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6603, file: !6460, line: 740, column: 7)
!6603 = distinct !DILexicalBlock(scope: !6597, file: !6460, line: 738, column: 53)
!6604 = !DILocation(line: 740, column: 7, scope: !6603)
!6605 = !DILocation(line: 742, column: 24, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6602, file: !6460, line: 740, column: 38)
!6607 = !DILocation(line: 743, column: 3, scope: !6606)
!6608 = !DILocation(line: 743, column: 20, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6602, file: !6460, line: 743, column: 14)
!6610 = !DILocation(line: 743, column: 25, scope: !6609)
!6611 = !DILocation(line: 743, column: 52, scope: !6609)
!6612 = !DILocation(line: 743, column: 14, scope: !6602)
!6613 = !DILocation(line: 744, column: 13, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6609, file: !6460, line: 743, column: 58)
!6615 = !DILocation(line: 745, column: 3, scope: !6614)
!6616 = !DILocation(line: 745, column: 20, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6609, file: !6460, line: 745, column: 14)
!6618 = !DILocation(line: 745, column: 25, scope: !6617)
!6619 = !DILocation(line: 745, column: 52, scope: !6617)
!6620 = !DILocation(line: 745, column: 14, scope: !6609)
!6621 = !DILocation(line: 746, column: 13, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6617, file: !6460, line: 745, column: 58)
!6623 = !DILocation(line: 747, column: 3, scope: !6622)
!6624 = !DILocation(line: 747, column: 20, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6617, file: !6460, line: 747, column: 14)
!6626 = !DILocation(line: 747, column: 52, scope: !6625)
!6627 = !DILocation(line: 747, column: 14, scope: !6617)
!6628 = !DILocation(line: 748, column: 13, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6625, file: !6460, line: 747, column: 58)
!6630 = !DILocation(line: 754, column: 4, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6632, file: !6460, line: 754, column: 4)
!6632 = distinct !DILexicalBlock(scope: !6633, file: !6460, line: 754, column: 4)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !6460, line: 754, column: 4)
!6634 = distinct !DILexicalBlock(scope: !6625, file: !6460, line: 753, column: 10)
!6635 = !DILocation(line: 758, column: 3, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !6460, line: 758, column: 3)
!6637 = distinct !DILexicalBlock(scope: !6638, file: !6460, line: 758, column: 3)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !6460, line: 758, column: 3)
!6639 = distinct !DILexicalBlock(scope: !6597, file: !6460, line: 757, column: 9)
!6640 = !DILocation(line: 766, column: 2, scope: !6578)
!6641 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6460, file: !6460, line: 229, type: !6556, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6642)
!6642 = !{!6643, !6644, !6645, !6646, !6647, !6648, !6651}
!6643 = !DILocalVariable(name: "esf", arg: 1, scope: !6641, file: !6460, line: 229, type: !2732)
!6644 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6641, file: !6460, line: 229, type: !109)
!6645 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6641, file: !6460, line: 230, type: !6532)
!6646 = !DILocalVariable(name: "reason", scope: !6641, file: !6460, line: 232, type: !110)
!6647 = !DILocalVariable(name: "mmfar", scope: !6641, file: !6460, line: 233, type: !110)
!6648 = !DILocalVariable(name: "temp", scope: !6649, file: !6460, line: 254, type: !110)
!6649 = distinct !DILexicalBlock(scope: !6650, file: !6460, line: 244, column: 48)
!6650 = distinct !DILexicalBlock(scope: !6641, file: !6460, line: 244, column: 6)
!6651 = !DILocalVariable(name: "min_stack_ptr", scope: !6652, file: !6460, line: 309, type: !110)
!6652 = distinct !DILexicalBlock(scope: !6653, file: !6460, line: 308, column: 43)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !6460, line: 308, column: 7)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !6460, line: 289, column: 40)
!6655 = distinct !DILexicalBlock(scope: !6641, file: !6460, line: 288, column: 6)
!6656 = !DILocation(line: 0, scope: !6641)
!6657 = !DILocation(line: 237, column: 12, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6641, file: !6460, line: 237, column: 6)
!6659 = !DILocation(line: 241, column: 12, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6641, file: !6460, line: 241, column: 6)
!6661 = !DILocation(line: 244, column: 12, scope: !6650)
!6662 = !DILocation(line: 244, column: 17, scope: !6650)
!6663 = !DILocation(line: 244, column: 42, scope: !6650)
!6664 = !DILocation(line: 244, column: 6, scope: !6641)
!6665 = !DILocation(line: 254, column: 24, scope: !6649)
!6666 = !DILocation(line: 0, scope: !6649)
!6667 = !DILocation(line: 256, column: 13, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6649, file: !6460, line: 256, column: 7)
!6669 = !DILocation(line: 256, column: 18, scope: !6668)
!6670 = !DILocation(line: 256, column: 44, scope: !6668)
!6671 = !DILocation(line: 256, column: 7, scope: !6649)
!6672 = !DILocation(line: 259, column: 24, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !6460, line: 259, column: 8)
!6674 = distinct !DILexicalBlock(scope: !6668, file: !6460, line: 256, column: 50)
!6675 = !DILocation(line: 259, column: 8, scope: !6674)
!6676 = !DILocation(line: 261, column: 15, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6673, file: !6460, line: 259, column: 30)
!6678 = !DILocation(line: 262, column: 4, scope: !6677)
!6679 = !DILocation(line: 265, column: 12, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6641, file: !6460, line: 265, column: 6)
!6681 = !DILocation(line: 269, column: 12, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6641, file: !6460, line: 269, column: 6)
!6683 = !DILocation(line: 288, column: 12, scope: !6655)
!6684 = !DILocation(line: 288, column: 17, scope: !6655)
!6685 = !DILocation(line: 288, column: 41, scope: !6655)
!6686 = !DILocation(line: 289, column: 9, scope: !6655)
!6687 = !DILocation(line: 289, column: 14, scope: !6655)
!6688 = !DILocation(line: 288, column: 6, scope: !6641)
!6689 = !DILocation(line: 308, column: 12, scope: !6653)
!6690 = !DILocation(line: 308, column: 17, scope: !6653)
!6691 = !DILocation(line: 308, column: 7, scope: !6654)
!6692 = !DILocation(line: 310, column: 6, scope: !6652)
!6693 = !DILocation(line: 309, column: 29, scope: !6652)
!6694 = !DILocation(line: 0, scope: !6652)
!6695 = !DILocation(line: 312, column: 8, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6652, file: !6460, line: 312, column: 8)
!6697 = !DILocation(line: 312, column: 8, scope: !6652)
!6698 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6699, file: !6144, line: 1099, type: !110)
!6699 = distinct !DISubprogram(name: "__set_PSP", scope: !6144, file: !6144, line: 1099, type: !6239, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6700)
!6700 = !{!6698}
!6701 = !DILocation(line: 0, scope: !6699, inlinedAt: !6702)
!6702 = distinct !DILocation(line: 338, column: 5, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6696, file: !6460, line: 312, column: 23)
!6704 = !DILocation(line: 1101, column: 3, scope: !6699, inlinedAt: !6702)
!6705 = !{i64 2861803}
!6706 = !DILocation(line: 341, column: 4, scope: !6703)
!6707 = !DILocation(line: 342, column: 5, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6709, file: !6460, line: 342, column: 5)
!6709 = distinct !DILexicalBlock(scope: !6710, file: !6460, line: 342, column: 5)
!6710 = distinct !DILexicalBlock(scope: !6696, file: !6460, line: 341, column: 11)
!6711 = !DILocation(line: 342, column: 5, scope: !6709)
!6712 = !DILocation(line: 342, column: 5, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6708, file: !6460, line: 342, column: 5)
!6714 = !DILocation(line: 360, column: 12, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6641, file: !6460, line: 360, column: 6)
!6716 = !DILocation(line: 360, column: 17, scope: !6715)
!6717 = !DILocation(line: 360, column: 41, scope: !6715)
!6718 = !DILocation(line: 360, column: 6, scope: !6641)
!6719 = !DILocation(line: 361, column: 14, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6715, file: !6460, line: 360, column: 47)
!6721 = !DILocation(line: 362, column: 2, scope: !6720)
!6722 = !DILocation(line: 366, column: 12, scope: !6641)
!6723 = !DILocation(line: 369, column: 15, scope: !6641)
!6724 = !DILocation(line: 371, column: 2, scope: !6641)
!6725 = distinct !DISubprogram(name: "bus_fault", scope: !6460, file: !6460, line: 383, type: !6726, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6728)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{!109, !2732, !109, !6532}
!6728 = !{!6729, !6730, !6731, !6732, !6733}
!6729 = !DILocalVariable(name: "esf", arg: 1, scope: !6725, file: !6460, line: 383, type: !2732)
!6730 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6725, file: !6460, line: 383, type: !109)
!6731 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6725, file: !6460, line: 383, type: !6532)
!6732 = !DILocalVariable(name: "reason", scope: !6725, file: !6460, line: 385, type: !110)
!6733 = !DILocalVariable(name: "bfar", scope: !6734, file: !6460, line: 405, type: !110)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !6460, line: 395, column: 42)
!6735 = distinct !DILexicalBlock(scope: !6725, file: !6460, line: 395, column: 6)
!6736 = !DILocation(line: 0, scope: !6725)
!6737 = !DILocation(line: 389, column: 11, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6725, file: !6460, line: 389, column: 6)
!6739 = !DILocation(line: 392, column: 11, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6725, file: !6460, line: 392, column: 6)
!6741 = !DILocation(line: 395, column: 11, scope: !6735)
!6742 = !DILocation(line: 395, column: 16, scope: !6735)
!6743 = !DILocation(line: 395, column: 6, scope: !6725)
!6744 = !DILocation(line: 405, column: 3, scope: !6734)
!6745 = !DILocation(line: 0, scope: !6734)
!6746 = !DILocation(line: 407, column: 13, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6734, file: !6460, line: 407, column: 7)
!6748 = !DILocation(line: 407, column: 18, scope: !6747)
!6749 = !DILocation(line: 407, column: 44, scope: !6747)
!6750 = !DILocation(line: 407, column: 7, scope: !6734)
!6751 = !DILocation(line: 411, column: 15, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !6460, line: 409, column: 30)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !6460, line: 409, column: 8)
!6754 = distinct !DILexicalBlock(scope: !6747, file: !6460, line: 407, column: 50)
!6755 = !DILocation(line: 412, column: 4, scope: !6752)
!6756 = !DILocation(line: 415, column: 11, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6725, file: !6460, line: 415, column: 6)
!6758 = !DILocation(line: 418, column: 12, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6725, file: !6460, line: 418, column: 6)
!6760 = !DILocation(line: 418, column: 17, scope: !6759)
!6761 = !DILocation(line: 418, column: 41, scope: !6759)
!6762 = !DILocation(line: 418, column: 6, scope: !6725)
!6763 = !DILocation(line: 423, column: 18, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6759, file: !6460, line: 423, column: 13)
!6765 = !DILocation(line: 524, column: 12, scope: !6725)
!6766 = !DILocation(line: 526, column: 15, scope: !6725)
!6767 = !DILocation(line: 528, column: 2, scope: !6725)
!6768 = distinct !DISubprogram(name: "usage_fault", scope: !6460, file: !6460, line: 539, type: !6769, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6773)
!6769 = !DISubroutineType(types: !6770)
!6770 = !{!110, !6771}
!6771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6772, size: 32)
!6772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2733)
!6773 = !{!6774, !6775}
!6774 = !DILocalVariable(name: "esf", arg: 1, scope: !6768, file: !6460, line: 539, type: !6771)
!6775 = !DILocalVariable(name: "reason", scope: !6768, file: !6460, line: 541, type: !110)
!6776 = !DILocation(line: 0, scope: !6768)
!6777 = !DILocation(line: 546, column: 12, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6768, file: !6460, line: 546, column: 6)
!6779 = !DILocation(line: 549, column: 12, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6768, file: !6460, line: 549, column: 6)
!6781 = !DILocation(line: 567, column: 12, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6768, file: !6460, line: 567, column: 6)
!6783 = !DILocation(line: 570, column: 12, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6768, file: !6460, line: 570, column: 6)
!6785 = !DILocation(line: 573, column: 12, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6768, file: !6460, line: 573, column: 6)
!6787 = !DILocation(line: 576, column: 12, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6768, file: !6460, line: 576, column: 6)
!6789 = !DILocation(line: 581, column: 12, scope: !6768)
!6790 = !DILocation(line: 583, column: 2, scope: !6768)
!6791 = distinct !DISubprogram(name: "debug_monitor", scope: !6460, file: !6460, line: 632, type: !6792, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6794)
!6792 = !DISubroutineType(types: !6793)
!6793 = !{null, !2732, !6532}
!6794 = !{!6795, !6796}
!6795 = !DILocalVariable(name: "esf", arg: 1, scope: !6791, file: !6460, line: 632, type: !2732)
!6796 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6791, file: !6460, line: 632, type: !6532)
!6797 = !DILocation(line: 0, scope: !6791)
!6798 = !DILocation(line: 634, column: 15, scope: !6791)
!6799 = !DILocation(line: 652, column: 1, scope: !6791)
!6800 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6460, file: !6460, line: 658, type: !6801, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6803)
!6801 = !DISubroutineType(types: !6802)
!6802 = !{!334, !2732}
!6803 = !{!6804, !6805, !6806}
!6804 = !DILocalVariable(name: "esf", arg: 1, scope: !6800, file: !6460, line: 658, type: !2732)
!6805 = !DILocalVariable(name: "ret_addr", scope: !6800, file: !6460, line: 660, type: !2775)
!6806 = !DILocalVariable(name: "fault_insn", scope: !6800, file: !6460, line: 686, type: !181)
!6807 = !DILocation(line: 0, scope: !6800)
!6808 = !DILocation(line: 660, column: 46, scope: !6800)
!6809 = !DILocation(line: 660, column: 23, scope: !6800)
!6810 = !DILocation(line: 682, column: 11, scope: !6800)
!6811 = !DILocation(line: 271, column: 3, scope: !6812, inlinedAt: !6813)
!6812 = distinct !DISubprogram(name: "__DSB", scope: !6144, file: !6144, line: 269, type: !3086, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !1998)
!6813 = distinct !DILocation(line: 683, column: 2, scope: !6800)
!6814 = !{i64 2837938}
!6815 = !DILocation(line: 260, column: 3, scope: !6816, inlinedAt: !6817)
!6816 = distinct !DISubprogram(name: "__ISB", scope: !6144, file: !6144, line: 258, type: !3086, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !1998)
!6817 = distinct !DILocation(line: 684, column: 2, scope: !6800)
!6818 = !{i64 2837655}
!6819 = !DILocation(line: 686, column: 35, scope: !6800)
!6820 = !DILocation(line: 686, column: 24, scope: !6800)
!6821 = !DILocation(line: 688, column: 11, scope: !6800)
!6822 = !DILocation(line: 271, column: 3, scope: !6812, inlinedAt: !6823)
!6823 = distinct !DILocation(line: 689, column: 2, scope: !6800)
!6824 = !DILocation(line: 260, column: 3, scope: !6816, inlinedAt: !6825)
!6825 = distinct !DILocation(line: 690, column: 2, scope: !6800)
!6826 = !DILocation(line: 693, column: 45, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6800, file: !6460, line: 693, column: 6)
!6828 = !DILocation(line: 699, column: 1, scope: !6800)
!6829 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6460, file: !6460, line: 1107, type: !3086, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !1998)
!6830 = !DILocation(line: 1111, column: 11, scope: !6829)
!6831 = !DILocation(line: 1136, column: 1, scope: !6829)
!6832 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6833, file: !6833, line: 26, type: !3086, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2776, retainedNodes: !6834)
!6833 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6834 = !{!6835}
!6835 = !DILocalVariable(name: "irq", scope: !6832, file: !6833, line: 28, type: !109)
!6836 = !DILocation(line: 0, scope: !6832)
!6837 = !DILocation(line: 30, column: 2, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6832, file: !6833, line: 30, column: 2)
!6839 = !DILocation(line: 31, column: 3, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !6833, line: 30, column: 39)
!6841 = distinct !DILexicalBlock(scope: !6838, file: !6833, line: 30, column: 2)
!6842 = !DILocation(line: 30, column: 35, scope: !6841)
!6843 = !DILocation(line: 30, column: 13, scope: !6841)
!6844 = distinct !{!6844, !6837, !6845}
!6845 = !DILocation(line: 32, column: 2, scope: !6838)
!6846 = !DILocation(line: 33, column: 1, scope: !6832)
!6847 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6184, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2776, retainedNodes: !6848)
!6848 = !{!6849, !6850}
!6849 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6847, file: !536, line: 1814, type: !762)
!6850 = !DILocalVariable(name: "priority", arg: 2, scope: !6847, file: !536, line: 1814, type: !110)
!6851 = !DILocation(line: 0, scope: !6847)
!6852 = !DILocation(line: 1816, column: 7, scope: !6847)
!6853 = !DILocation(line: 0, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6847, file: !536, line: 1816, column: 7)
!6855 = !DILocation(line: 1824, column: 1, scope: !6847)
!6856 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6857, file: !6857, line: 27, type: !6858, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2821, retainedNodes: !6972)
!6857 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6858 = !DISubroutineType(types: !6859)
!6859 = !{null, !6860}
!6860 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !6861)
!6861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6862, size: 32)
!6862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !6863)
!6863 = !{!6864, !6922, !6934, !6935, !6936, !6943, !6944, !6945, !6946, !6952, !6967}
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6862, file: !145, line: 247, baseType: !6865, size: 384)
!6865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !6866)
!6866 = !{!6867, !6891, !6898, !6899, !6900, !6909, !6910, !6911}
!6867 = !DIDerivedType(tag: DW_TAG_member, scope: !6865, file: !145, line: 60, baseType: !6868, size: 64)
!6868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6865, file: !145, line: 60, size: 64, elements: !6869)
!6869 = !{!6870, !6885}
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6868, file: !145, line: 61, baseType: !6871, size: 64)
!6871 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !6872)
!6872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !6873)
!6873 = !{!6874, !6880}
!6874 = !DIDerivedType(tag: DW_TAG_member, scope: !6872, file: !128, line: 38, baseType: !6875, size: 32)
!6875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6872, file: !128, line: 38, size: 32, elements: !6876)
!6876 = !{!6877, !6879}
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6875, file: !128, line: 39, baseType: !6878, size: 32)
!6878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6872, size: 32)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6875, file: !128, line: 40, baseType: !6878, size: 32)
!6880 = !DIDerivedType(tag: DW_TAG_member, scope: !6872, file: !128, line: 42, baseType: !6881, size: 32, offset: 32)
!6881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6872, file: !128, line: 42, size: 32, elements: !6882)
!6882 = !{!6883, !6884}
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6881, file: !128, line: 43, baseType: !6878, size: 32)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6881, file: !128, line: 44, baseType: !6878, size: 32)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6868, file: !145, line: 62, baseType: !6886, size: 64)
!6886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !6887)
!6887 = !{!6888}
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6886, file: !157, line: 50, baseType: !6889, size: 64)
!6889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6890, size: 64, elements: !162)
!6890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6886, size: 32)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6865, file: !145, line: 68, baseType: !6892, size: 32, offset: 64)
!6892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6893, size: 32)
!6893 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !6894)
!6894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !6895)
!6895 = !{!6896}
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6894, file: !123, line: 232, baseType: !6897, size: 64)
!6897 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !6872)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6865, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6865, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!6900 = !DIDerivedType(tag: DW_TAG_member, scope: !6865, file: !145, line: 90, baseType: !6901, size: 16, offset: 112)
!6901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6865, file: !145, line: 90, size: 16, elements: !6902)
!6902 = !{!6903, !6908}
!6903 = !DIDerivedType(tag: DW_TAG_member, scope: !6901, file: !145, line: 91, baseType: !6904, size: 16)
!6904 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6901, file: !145, line: 91, size: 16, elements: !6905)
!6905 = !{!6906, !6907}
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6904, file: !145, line: 96, baseType: !177, size: 8)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6904, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6901, file: !145, line: 100, baseType: !181, size: 16)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6865, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6865, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6865, file: !145, line: 131, baseType: !6912, size: 192, offset: 192)
!6912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !6913)
!6913 = !{!6914, !6915, !6921}
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6912, file: !123, line: 245, baseType: !6871, size: 64)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6912, file: !123, line: 246, baseType: !6916, size: 32, offset: 64)
!6916 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !6917)
!6917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6918, size: 32)
!6918 = !DISubroutineType(types: !6919)
!6919 = !{null, !6920}
!6920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6912, size: 32)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6912, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6862, file: !145, line: 250, baseType: !6923, size: 288, offset: 384)
!6923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6924)
!6924 = !{!6925, !6926, !6927, !6928, !6929, !6930, !6931, !6932, !6933}
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6923, file: !198, line: 26, baseType: !110, size: 32)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6923, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6923, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6923, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6923, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6923, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6923, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6923, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6923, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6862, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6862, file: !145, line: 256, baseType: !6893, size: 64, offset: 704)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6862, file: !145, line: 271, baseType: !6937, size: 128, offset: 768)
!6937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !6938)
!6938 = !{!6939, !6940, !6941, !6942}
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !6937, file: !145, line: 35, baseType: !215, size: 32)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !6937, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !6937, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !6937, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !6862, file: !145, line: 274, baseType: !6861, size: 32, offset: 896)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6862, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6862, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6862, file: !145, line: 300, baseType: !6947, size: 96, offset: 1216)
!6947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !6948)
!6948 = !{!6949, !6950, !6951}
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6947, file: !145, line: 153, baseType: !22, size: 32)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6947, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6947, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6862, file: !145, line: 325, baseType: !6953, size: 32, offset: 1312)
!6953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6954, size: 32)
!6954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !6955)
!6955 = !{!6956, !6962, !6963}
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6954, file: !119, line: 5074, baseType: !6957, size: 96)
!6957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !6958)
!6958 = !{!6959, !6960, !6961}
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6957, file: !244, line: 57, baseType: !247, size: 32)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6957, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6957, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6954, file: !119, line: 5075, baseType: !6893, size: 64, offset: 96)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6954, file: !119, line: 5076, baseType: !6964, size: 32, offset: 160)
!6964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !6965)
!6965 = !{!6966}
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6964, file: !254, line: 52, baseType: !22, size: 32)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6862, file: !145, line: 343, baseType: !6968, size: 64, offset: 1344)
!6968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !6969)
!6969 = !{!6970, !6971}
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6968, file: !198, line: 63, baseType: !110, size: 32)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6968, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!6972 = !{!6973}
!6973 = !DILocalVariable(name: "thread", arg: 1, scope: !6856, file: !6857, line: 27, type: !6860)
!6974 = !DILocation(line: 0, scope: !6856)
!6975 = !DILocation(line: 29, column: 6, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6856, file: !6857, line: 29, column: 6)
!6977 = !DILocation(line: 29, column: 15, scope: !6976)
!6978 = !DILocation(line: 29, column: 6, scope: !6856)
!6979 = !DILocation(line: 1031, column: 3, scope: !6980, inlinedAt: !6983)
!6980 = distinct !DISubprogram(name: "__get_IPSR", scope: !6144, file: !6144, line: 1027, type: !3368, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2821, retainedNodes: !6981)
!6981 = !{!6982}
!6982 = !DILocalVariable(name: "result", scope: !6980, file: !6144, line: 1029, type: !110)
!6983 = distinct !DILocation(line: 48, column: 10, scope: !6984, inlinedAt: !6988)
!6984 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6985, file: !6985, line: 46, type: !6986, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2821, retainedNodes: !1998)
!6985 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6986 = !DISubroutineType(types: !6987)
!6987 = !{!334}
!6988 = distinct !DILocation(line: 30, column: 7, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !6857, line: 30, column: 7)
!6990 = distinct !DILexicalBlock(scope: !6976, file: !6857, line: 29, column: 26)
!6991 = !{i64 2826786}
!6992 = !DILocation(line: 0, scope: !6980, inlinedAt: !6983)
!6993 = !DILocation(line: 48, column: 9, scope: !6984, inlinedAt: !6988)
!6994 = !DILocation(line: 30, column: 7, scope: !6990)
!6995 = !DILocation(line: 42, column: 14, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6989, file: !6857, line: 30, column: 25)
!6997 = !DILocation(line: 48, column: 15, scope: !6996)
!6998 = !DILocation(line: 49, column: 3, scope: !6996)
!6999 = !DILocation(line: 52, column: 2, scope: !6856)
!7000 = !DILocation(line: 53, column: 1, scope: !6856)
!7001 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3086, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !1998)
!7002 = !DILocation(line: 134, column: 2, scope: !7001)
!7003 = !DILocation(line: 156, column: 1, scope: !7001)
!7004 = !DILocation(line: 0, scope: !393)
!7005 = !DILocation(line: 289, column: 36, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7007 = !DILocation(line: 289, column: 42, scope: !7006)
!7008 = !DILocation(line: 300, column: 36, scope: !393)
!7009 = !DILocation(line: 301, column: 35, scope: !393)
!7010 = !DILocation(line: 302, column: 37, scope: !393)
!7011 = !DILocation(line: 311, column: 2, scope: !393)
!7012 = !DILocation(line: 316, column: 1, scope: !393)
!7013 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !564, file: !564, line: 180, type: !3086, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !1998)
!7014 = !DILocation(line: 188, column: 12, scope: !7013)
!7015 = !DILocation(line: 271, column: 3, scope: !7016, inlinedAt: !7017)
!7016 = distinct !DISubprogram(name: "__DSB", scope: !6144, file: !6144, line: 269, type: !3086, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !1998)
!7017 = distinct !DILocation(line: 192, column: 2, scope: !7013)
!7018 = !{i64 2989921}
!7019 = !DILocation(line: 260, column: 3, scope: !7020, inlinedAt: !7021)
!7020 = distinct !DISubprogram(name: "__ISB", scope: !6144, file: !6144, line: 258, type: !3086, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !1998)
!7021 = distinct !DILocation(line: 193, column: 2, scope: !7013)
!7022 = !{i64 2989638}
!7023 = !DILocation(line: 194, column: 1, scope: !7013)
!7024 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !564, file: !564, line: 199, type: !3086, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !1998)
!7025 = !DILocation(line: 282, column: 3, scope: !7026, inlinedAt: !7027)
!7026 = distinct !DISubprogram(name: "__DMB", scope: !6144, file: !6144, line: 280, type: !3086, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !1998)
!7027 = distinct !DILocation(line: 202, column: 2, scope: !7024)
!7028 = !{i64 2990197}
!7029 = !DILocation(line: 205, column: 12, scope: !7024)
!7030 = !DILocation(line: 206, column: 1, scope: !7024)
!7031 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !564, file: !564, line: 275, type: !7032, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7045)
!7032 = !DISubroutineType(types: !7033)
!7033 = !{null, !7034, !1771, !6427, !6427}
!7034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7035, size: 32)
!7035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7036)
!7036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !515, line: 52, size: 96, elements: !7037)
!7037 = !{!7038, !7039, !7040}
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7036, file: !515, line: 53, baseType: !22, size: 32)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7036, file: !515, line: 54, baseType: !235, size: 32, offset: 32)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7036, file: !515, line: 55, baseType: !7041, size: 32, offset: 64)
!7041 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !521, line: 151, baseType: !7042)
!7042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !521, line: 149, size: 32, elements: !7043)
!7043 = !{!7044}
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7042, file: !521, line: 150, baseType: !110, size: 32)
!7045 = !{!7046, !7047, !7048, !7049}
!7046 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7031, file: !564, line: 276, type: !7034)
!7047 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7031, file: !564, line: 276, type: !1771)
!7048 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7031, file: !564, line: 277, type: !6427)
!7049 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7031, file: !564, line: 277, type: !6427)
!7050 = !DILocation(line: 0, scope: !7031)
!7051 = !DILocation(line: 279, column: 6, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7031, file: !564, line: 279, column: 6)
!7053 = !DILocation(line: 280, column: 57, scope: !7052)
!7054 = !DILocation(line: 279, column: 6, scope: !7031)
!7055 = !DILocation(line: 282, column: 3, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !564, line: 282, column: 3)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !564, line: 282, column: 3)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !564, line: 282, column: 3)
!7059 = distinct !DILexicalBlock(scope: !7052, file: !564, line: 280, column: 69)
!7060 = !DILocation(line: 285, column: 1, scope: !7031)
!7061 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7062, file: !7062, line: 220, type: !7063, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7065)
!7062 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7063 = !DISubroutineType(types: !7064)
!7064 = !{!109, !7034, !1771, !6427, !6427}
!7065 = !{!7066, !7067, !7068, !7069, !7070}
!7066 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7061, file: !7062, line: 221, type: !7034)
!7067 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7061, file: !7062, line: 221, type: !1771)
!7068 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7061, file: !7062, line: 222, type: !6427)
!7069 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7061, file: !7062, line: 223, type: !6427)
!7070 = !DILocalVariable(name: "mpu_reg_index", scope: !7061, file: !7062, line: 225, type: !109)
!7071 = !DILocation(line: 0, scope: !7061)
!7072 = !DILocation(line: 225, column: 22, scope: !7061)
!7073 = !DILocation(line: 233, column: 18, scope: !7061)
!7074 = !DILocation(line: 236, column: 23, scope: !7061)
!7075 = !DILocation(line: 236, column: 21, scope: !7061)
!7076 = !DILocation(line: 238, column: 2, scope: !7061)
!7077 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !564, file: !564, line: 105, type: !7078, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7080)
!7078 = !DISubroutineType(types: !7079)
!7079 = !{!109, !7034, !167, !167, !334}
!7080 = !{!7081, !7082, !7083, !7084, !7085, !7086}
!7081 = !DILocalVariable(name: "regions", arg: 1, scope: !7077, file: !564, line: 106, type: !7034)
!7082 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7077, file: !564, line: 106, type: !167)
!7083 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7077, file: !564, line: 106, type: !167)
!7084 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7077, file: !564, line: 107, type: !334)
!7085 = !DILocalVariable(name: "i", scope: !7077, file: !564, line: 109, type: !109)
!7086 = !DILocalVariable(name: "reg_index", scope: !7077, file: !564, line: 110, type: !109)
!7087 = !DILocation(line: 0, scope: !7077)
!7088 = !DILocation(line: 110, column: 18, scope: !7077)
!7089 = !DILocation(line: 112, column: 16, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !564, line: 112, column: 2)
!7091 = distinct !DILexicalBlock(scope: !7077, file: !564, line: 112, column: 2)
!7092 = !DILocation(line: 112, column: 2, scope: !7091)
!7093 = !DILocation(line: 113, column: 7, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !564, line: 113, column: 7)
!7095 = distinct !DILexicalBlock(scope: !7090, file: !564, line: 112, column: 36)
!7096 = !DILocation(line: 113, column: 18, scope: !7094)
!7097 = !DILocation(line: 113, column: 23, scope: !7094)
!7098 = !DILocation(line: 113, column: 7, scope: !7095)
!7099 = !DILocation(line: 118, column: 23, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7095, file: !564, line: 118, column: 7)
!7101 = !DILocation(line: 119, column: 7, scope: !7100)
!7102 = !DILocation(line: 118, column: 7, scope: !7095)
!7103 = !DILocation(line: 124, column: 36, scope: !7095)
!7104 = !DILocation(line: 124, column: 15, scope: !7095)
!7105 = !DILocation(line: 126, column: 17, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7095, file: !564, line: 126, column: 7)
!7107 = !DILocation(line: 126, column: 7, scope: !7095)
!7108 = !DILocation(line: 131, column: 12, scope: !7095)
!7109 = !DILocation(line: 132, column: 2, scope: !7095)
!7110 = !DILocation(line: 112, column: 32, scope: !7090)
!7111 = distinct !{!7111, !7092, !7112}
!7112 = !DILocation(line: 132, column: 2, scope: !7091)
!7113 = !DILocation(line: 135, column: 1, scope: !7077)
!7114 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7062, file: !7062, line: 63, type: !7115, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7117)
!7115 = !DISubroutineType(types: !7116)
!7116 = !{!109, !7034}
!7117 = !{!7118, !7119}
!7118 = !DILocalVariable(name: "part", arg: 1, scope: !7114, file: !7062, line: 63, type: !7034)
!7119 = !DILocalVariable(name: "partition_is_valid", scope: !7114, file: !7062, line: 70, type: !109)
!7120 = !DILocation(line: 0, scope: !7114)
!7121 = !DILocation(line: 71, column: 11, scope: !7114)
!7122 = !DILocation(line: 71, column: 37, scope: !7114)
!7123 = !{i32 0, i32 33}
!7124 = !DILocation(line: 72, column: 3, scope: !7114)
!7125 = !DILocation(line: 71, column: 30, scope: !7114)
!7126 = !DILocation(line: 75, column: 11, scope: !7114)
!7127 = !DILocation(line: 75, column: 17, scope: !7114)
!7128 = !DILocation(line: 75, column: 38, scope: !7114)
!7129 = !DILocation(line: 77, column: 2, scope: !7114)
!7130 = distinct !DISubprogram(name: "mpu_configure_region", scope: !564, file: !564, line: 79, type: !7131, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7133)
!7131 = !DISubroutineType(types: !7132)
!7132 = !{!109, !1771, !7034}
!7133 = !{!7134, !7135, !7136}
!7134 = !DILocalVariable(name: "index", arg: 1, scope: !7130, file: !564, line: 79, type: !1771)
!7135 = !DILocalVariable(name: "new_region", arg: 2, scope: !7130, file: !564, line: 80, type: !7034)
!7136 = !DILocalVariable(name: "region_conf", scope: !7130, file: !564, line: 82, type: !553)
!7137 = !DILocation(line: 0, scope: !7130)
!7138 = !DILocation(line: 82, column: 2, scope: !7130)
!7139 = !DILocation(line: 82, column: 24, scope: !7130)
!7140 = !DILocation(line: 87, column: 33, scope: !7130)
!7141 = !DILocation(line: 87, column: 14, scope: !7130)
!7142 = !DILocation(line: 87, column: 19, scope: !7130)
!7143 = !DILocation(line: 91, column: 55, scope: !7130)
!7144 = !DILocation(line: 92, column: 16, scope: !7130)
!7145 = !DILocation(line: 92, column: 53, scope: !7130)
!7146 = !DILocation(line: 91, column: 2, scope: !7130)
!7147 = !DILocation(line: 95, column: 9, scope: !7130)
!7148 = !DILocation(line: 97, column: 1, scope: !7130)
!7149 = !DILocation(line: 95, column: 2, scope: !7130)
!7150 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7062, file: !7062, line: 113, type: !7151, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7156)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{null, !7153, !7154, !110, !110}
!7153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 32)
!7154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7155, size: 32)
!7155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7041)
!7156 = !{!7157, !7158, !7159, !7160}
!7157 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7150, file: !7062, line: 114, type: !7153)
!7158 = !DILocalVariable(name: "attr", arg: 2, scope: !7150, file: !7062, line: 115, type: !7154)
!7159 = !DILocalVariable(name: "base", arg: 3, scope: !7150, file: !7062, line: 115, type: !110)
!7160 = !DILocalVariable(name: "size", arg: 4, scope: !7150, file: !7062, line: 115, type: !110)
!7161 = !DILocation(line: 0, scope: !7150)
!7162 = !DILocation(line: 127, column: 23, scope: !7150)
!7163 = !DILocation(line: 127, column: 35, scope: !7150)
!7164 = !DILocation(line: 127, column: 33, scope: !7150)
!7165 = !DILocation(line: 127, column: 10, scope: !7150)
!7166 = !DILocation(line: 127, column: 15, scope: !7150)
!7167 = !DILocation(line: 129, column: 1, scope: !7150)
!7168 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !564, file: !564, line: 57, type: !7169, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7171)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{!109, !1771, !551}
!7171 = !{!7172, !7173}
!7172 = !DILocalVariable(name: "index", arg: 1, scope: !7168, file: !564, line: 57, type: !1771)
!7173 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7168, file: !564, line: 58, type: !551)
!7174 = !DILocation(line: 0, scope: !7168)
!7175 = !DILocation(line: 61, column: 6, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7168, file: !564, line: 61, column: 6)
!7177 = !DILocation(line: 61, column: 12, scope: !7176)
!7178 = !DILocation(line: 61, column: 6, scope: !7168)
!7179 = !DILocation(line: 71, column: 2, scope: !7168)
!7180 = !DILocation(line: 73, column: 2, scope: !7168)
!7181 = !DILocation(line: 74, column: 1, scope: !7168)
!7182 = distinct !DISubprogram(name: "region_init", scope: !7062, file: !7062, line: 29, type: !7183, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7185)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{null, !6427, !551}
!7185 = !{!7186, !7187}
!7186 = !DILocalVariable(name: "index", arg: 1, scope: !7182, file: !7062, line: 29, type: !6427)
!7187 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7182, file: !7062, line: 30, type: !551)
!7188 = !DILocation(line: 0, scope: !7182)
!7189 = !DILocation(line: 33, column: 2, scope: !7182)
!7190 = !DILocation(line: 47, column: 28, scope: !7182)
!7191 = !DILocation(line: 47, column: 33, scope: !7182)
!7192 = !DILocation(line: 48, column: 26, scope: !7182)
!7193 = !DILocation(line: 47, column: 12, scope: !7182)
!7194 = !DILocation(line: 49, column: 32, scope: !7182)
!7195 = !DILocation(line: 49, column: 37, scope: !7182)
!7196 = !DILocation(line: 49, column: 12, scope: !7182)
!7197 = !DILocation(line: 53, column: 1, scope: !7182)
!7198 = distinct !DISubprogram(name: "set_region_number", scope: !7199, file: !7199, line: 32, type: !6239, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7200)
!7199 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7200 = !{!7201}
!7201 = !DILocalVariable(name: "index", arg: 1, scope: !7198, file: !7199, line: 32, type: !110)
!7202 = !DILocation(line: 0, scope: !7198)
!7203 = !DILocation(line: 34, column: 11, scope: !7198)
!7204 = !DILocation(line: 35, column: 1, scope: !7198)
!7205 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7062, file: !7062, line: 88, type: !7206, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7208)
!7206 = !DISubroutineType(types: !7207)
!7207 = !{!110, !110}
!7208 = !{!7209}
!7209 = !DILocalVariable(name: "size", arg: 1, scope: !7205, file: !7062, line: 88, type: !110)
!7210 = !DILocation(line: 0, scope: !7205)
!7211 = !DILocation(line: 91, column: 11, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7205, file: !7062, line: 91, column: 6)
!7213 = !DILocation(line: 91, column: 6, scope: !7205)
!7214 = !DILocation(line: 100, column: 11, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7205, file: !7062, line: 100, column: 6)
!7216 = !DILocation(line: 100, column: 6, scope: !7205)
!7217 = !DILocation(line: 104, column: 35, scope: !7205)
!7218 = !DILocation(line: 104, column: 16, scope: !7205)
!7219 = !DILocation(line: 104, column: 50, scope: !7205)
!7220 = !DILocation(line: 104, column: 72, scope: !7205)
!7221 = !DILocation(line: 104, column: 2, scope: !7205)
!7222 = !DILocation(line: 106, column: 1, scope: !7205)
!7223 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !564, file: !564, line: 307, type: !7224, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7226)
!7224 = !DISubroutineType(types: !7225)
!7225 = !{null, !7034, !167}
!7226 = !{!7227, !7228}
!7227 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7223, file: !564, line: 308, type: !7034)
!7228 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7223, file: !564, line: 308, type: !167)
!7229 = !DILocation(line: 0, scope: !7223)
!7230 = !DILocation(line: 310, column: 6, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7223, file: !564, line: 310, column: 6)
!7232 = !DILocation(line: 311, column: 3, scope: !7231)
!7233 = !DILocation(line: 310, column: 6, scope: !7223)
!7234 = !DILocation(line: 313, column: 3, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !564, line: 313, column: 3)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !564, line: 313, column: 3)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !564, line: 313, column: 3)
!7238 = distinct !DILexicalBlock(scope: !7231, file: !564, line: 311, column: 15)
!7239 = !DILocation(line: 316, column: 1, scope: !7223)
!7240 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7062, file: !7062, line: 249, type: !7241, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7243)
!7241 = !DISubroutineType(types: !7242)
!7242 = !{!109, !7034, !167}
!7243 = !{!7244, !7245, !7246, !7247}
!7244 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7240, file: !7062, line: 250, type: !7034)
!7245 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7240, file: !7062, line: 250, type: !167)
!7246 = !DILocalVariable(name: "mpu_reg_index", scope: !7240, file: !7062, line: 252, type: !109)
!7247 = !DILocalVariable(name: "i", scope: !7248, file: !7062, line: 264, type: !109)
!7248 = distinct !DILexicalBlock(scope: !7249, file: !7062, line: 264, column: 3)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !7062, line: 261, column: 32)
!7250 = distinct !DILexicalBlock(scope: !7240, file: !7062, line: 261, column: 6)
!7251 = !DILocation(line: 0, scope: !7240)
!7252 = !DILocation(line: 252, column: 22, scope: !7240)
!7253 = !DILocation(line: 258, column: 18, scope: !7240)
!7254 = !DILocation(line: 261, column: 20, scope: !7250)
!7255 = !DILocation(line: 261, column: 6, scope: !7240)
!7256 = !DILocation(line: 0, scope: !7248)
!7257 = !DILocation(line: 265, column: 4, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7259, file: !7062, line: 264, column: 59)
!7259 = distinct !DILexicalBlock(scope: !7248, file: !7062, line: 264, column: 3)
!7260 = !DILocation(line: 264, column: 55, scope: !7259)
!7261 = !DILocation(line: 264, column: 33, scope: !7259)
!7262 = !DILocation(line: 264, column: 3, scope: !7248)
!7263 = distinct !{!7263, !7262, !7264}
!7264 = !DILocation(line: 266, column: 3, scope: !7248)
!7265 = !DILocation(line: 269, column: 2, scope: !7240)
!7266 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7267, file: !7267, line: 218, type: !6239, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7268)
!7267 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7268 = !{!7269}
!7269 = !DILocalVariable(name: "rnr", arg: 1, scope: !7266, file: !7267, line: 218, type: !110)
!7270 = !DILocation(line: 0, scope: !7266)
!7271 = !DILocation(line: 220, column: 12, scope: !7266)
!7272 = !DILocation(line: 221, column: 13, scope: !7266)
!7273 = !DILocation(line: 222, column: 1, scope: !7266)
!7274 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !564, file: !564, line: 326, type: !7275, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7277)
!7275 = !DISubroutineType(types: !7276)
!7276 = !{!109}
!7277 = !{!7278}
!7278 = !DILocalVariable(name: "r_index", scope: !7274, file: !564, line: 328, type: !110)
!7279 = !DILocation(line: 330, column: 17, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7274, file: !564, line: 330, column: 6)
!7281 = !DILocation(line: 330, column: 29, scope: !7280)
!7282 = !DILocation(line: 330, column: 6, scope: !7274)
!7283 = !DILocation(line: 337, column: 3, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7285, file: !564, line: 337, column: 3)
!7285 = distinct !DILexicalBlock(scope: !7286, file: !564, line: 337, column: 3)
!7286 = distinct !DILexicalBlock(scope: !7287, file: !564, line: 337, column: 3)
!7287 = distinct !DILexicalBlock(scope: !7280, file: !564, line: 330, column: 50)
!7288 = !DILocation(line: 347, column: 2, scope: !7274)
!7289 = !DILocation(line: 0, scope: !7274)
!7290 = !DILocation(line: 364, column: 29, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !564, line: 364, column: 2)
!7292 = distinct !DILexicalBlock(scope: !7274, file: !564, line: 364, column: 2)
!7293 = !DILocation(line: 364, column: 2, scope: !7292)
!7294 = !DILocation(line: 365, column: 25, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7291, file: !564, line: 364, column: 66)
!7296 = !DILocation(line: 365, column: 3, scope: !7295)
!7297 = !DILocation(line: 364, column: 62, scope: !7291)
!7298 = distinct !{!7298, !7293, !7299}
!7299 = !DILocation(line: 366, column: 2, scope: !7292)
!7300 = !DILocation(line: 369, column: 23, scope: !7274)
!7301 = !DILocation(line: 369, column: 21, scope: !7274)
!7302 = !DILocation(line: 372, column: 2, scope: !7274)
!7303 = !DILocation(line: 433, column: 2, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7305, file: !564, line: 433, column: 2)
!7305 = distinct !DILexicalBlock(scope: !7274, file: !564, line: 433, column: 2)
!7306 = !DILocation(line: 433, column: 2, scope: !7305)
!7307 = !DILocation(line: 433, column: 2, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7304, file: !564, line: 433, column: 2)
!7309 = !DILocation(line: 444, column: 1, scope: !7274)
!7310 = distinct !DISubprogram(name: "strcpy", scope: !7311, file: !7311, line: 20, type: !7312, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7316)
!7311 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7312 = !DISubroutineType(types: !7313)
!7313 = !{!1127, !7314, !7315}
!7314 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1127)
!7315 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !324)
!7316 = !{!7317, !7318, !7319}
!7317 = !DILocalVariable(name: "d", arg: 1, scope: !7310, file: !7311, line: 20, type: !7314)
!7318 = !DILocalVariable(name: "s", arg: 2, scope: !7310, file: !7311, line: 20, type: !7315)
!7319 = !DILocalVariable(name: "dest", scope: !7310, file: !7311, line: 22, type: !1127)
!7320 = !DILocation(line: 0, scope: !7310)
!7321 = !DILocation(line: 24, column: 9, scope: !7310)
!7322 = !DILocation(line: 24, column: 12, scope: !7310)
!7323 = !DILocation(line: 24, column: 2, scope: !7310)
!7324 = !DILocation(line: 25, column: 6, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7310, file: !7311, line: 24, column: 21)
!7326 = !DILocation(line: 26, column: 4, scope: !7325)
!7327 = !DILocation(line: 27, column: 4, scope: !7325)
!7328 = distinct !{!7328, !7323, !7329}
!7329 = !DILocation(line: 28, column: 2, scope: !7310)
!7330 = !DILocation(line: 30, column: 5, scope: !7310)
!7331 = !DILocation(line: 32, column: 2, scope: !7310)
!7332 = distinct !DISubprogram(name: "strncpy", scope: !7311, file: !7311, line: 42, type: !7333, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7335)
!7333 = !DISubroutineType(types: !7334)
!7334 = !{!1127, !7314, !7315, !235}
!7335 = !{!7336, !7337, !7338, !7339}
!7336 = !DILocalVariable(name: "d", arg: 1, scope: !7332, file: !7311, line: 42, type: !7314)
!7337 = !DILocalVariable(name: "s", arg: 2, scope: !7332, file: !7311, line: 42, type: !7315)
!7338 = !DILocalVariable(name: "n", arg: 3, scope: !7332, file: !7311, line: 42, type: !235)
!7339 = !DILocalVariable(name: "dest", scope: !7332, file: !7311, line: 44, type: !1127)
!7340 = !DILocation(line: 0, scope: !7332)
!7341 = !DILocation(line: 46, column: 12, scope: !7332)
!7342 = !DILocation(line: 46, column: 17, scope: !7332)
!7343 = !DILocation(line: 46, column: 20, scope: !7332)
!7344 = !DILocation(line: 46, column: 23, scope: !7332)
!7345 = !DILocation(line: 46, column: 2, scope: !7332)
!7346 = !DILocation(line: 47, column: 6, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7332, file: !7311, line: 46, column: 32)
!7348 = !DILocation(line: 48, column: 4, scope: !7347)
!7349 = !DILocation(line: 49, column: 4, scope: !7347)
!7350 = !DILocation(line: 50, column: 4, scope: !7347)
!7351 = distinct !{!7351, !7345, !7352}
!7352 = !DILocation(line: 51, column: 2, scope: !7332)
!7353 = !DILocation(line: 54, column: 6, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7332, file: !7311, line: 53, column: 16)
!7355 = !DILocation(line: 55, column: 4, scope: !7354)
!7356 = !DILocation(line: 56, column: 4, scope: !7354)
!7357 = !DILocation(line: 53, column: 11, scope: !7332)
!7358 = !DILocation(line: 53, column: 2, scope: !7332)
!7359 = distinct !{!7359, !7358, !7360}
!7360 = !DILocation(line: 57, column: 2, scope: !7332)
!7361 = !DILocation(line: 59, column: 2, scope: !7332)
!7362 = distinct !DISubprogram(name: "strchr", scope: !7311, file: !7311, line: 69, type: !7363, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7365)
!7363 = !DISubroutineType(types: !7364)
!7364 = !{!1127, !324, !109}
!7365 = !{!7366, !7367, !7368}
!7366 = !DILocalVariable(name: "s", arg: 1, scope: !7362, file: !7311, line: 69, type: !324)
!7367 = !DILocalVariable(name: "c", arg: 2, scope: !7362, file: !7311, line: 69, type: !109)
!7368 = !DILocalVariable(name: "tmp", scope: !7362, file: !7311, line: 71, type: !226)
!7369 = !DILocation(line: 0, scope: !7362)
!7370 = !DILocation(line: 73, column: 2, scope: !7362)
!7371 = !DILocation(line: 73, column: 10, scope: !7362)
!7372 = !DILocation(line: 73, column: 13, scope: !7362)
!7373 = !DILocation(line: 73, column: 21, scope: !7362)
!7374 = !DILocation(line: 74, column: 4, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7362, file: !7311, line: 73, column: 38)
!7376 = distinct !{!7376, !7370, !7377}
!7377 = !DILocation(line: 75, column: 2, scope: !7362)
!7378 = !DILocation(line: 77, column: 9, scope: !7362)
!7379 = !DILocation(line: 77, column: 2, scope: !7362)
!7380 = distinct !DISubprogram(name: "strrchr", scope: !7311, file: !7311, line: 87, type: !7363, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7381)
!7381 = !{!7382, !7383, !7384}
!7382 = !DILocalVariable(name: "s", arg: 1, scope: !7380, file: !7311, line: 87, type: !324)
!7383 = !DILocalVariable(name: "c", arg: 2, scope: !7380, file: !7311, line: 87, type: !109)
!7384 = !DILocalVariable(name: "match", scope: !7380, file: !7311, line: 89, type: !1127)
!7385 = !DILocation(line: 0, scope: !7380)
!7386 = !DILocation(line: 91, column: 2, scope: !7380)
!7387 = !DILocation(line: 92, column: 7, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7389, file: !7311, line: 92, column: 7)
!7389 = distinct !DILexicalBlock(scope: !7380, file: !7311, line: 91, column: 5)
!7390 = !DILocation(line: 92, column: 10, scope: !7388)
!7391 = !DILocation(line: 92, column: 7, scope: !7389)
!7392 = !DILocation(line: 95, column: 13, scope: !7380)
!7393 = !DILocation(line: 95, column: 2, scope: !7389)
!7394 = distinct !{!7394, !7386, !7395}
!7395 = !DILocation(line: 95, column: 15, scope: !7380)
!7396 = !DILocation(line: 97, column: 2, scope: !7380)
!7397 = distinct !DISubprogram(name: "strlen", scope: !7311, file: !7311, line: 107, type: !7398, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7400)
!7398 = !DISubroutineType(types: !7399)
!7399 = !{!235, !324}
!7400 = !{!7401, !7402}
!7401 = !DILocalVariable(name: "s", arg: 1, scope: !7397, file: !7311, line: 107, type: !324)
!7402 = !DILocalVariable(name: "n", scope: !7397, file: !7311, line: 109, type: !235)
!7403 = !DILocation(line: 0, scope: !7397)
!7404 = !DILocation(line: 111, column: 9, scope: !7397)
!7405 = !DILocation(line: 111, column: 12, scope: !7397)
!7406 = !DILocation(line: 111, column: 2, scope: !7397)
!7407 = !DILocation(line: 112, column: 4, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7397, file: !7311, line: 111, column: 21)
!7409 = !DILocation(line: 113, column: 4, scope: !7408)
!7410 = distinct !{!7410, !7406, !7411}
!7411 = !DILocation(line: 114, column: 2, scope: !7397)
!7412 = !DILocation(line: 116, column: 2, scope: !7397)
!7413 = distinct !DISubprogram(name: "strnlen", scope: !7311, file: !7311, line: 126, type: !7414, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7416)
!7414 = !DISubroutineType(types: !7415)
!7415 = !{!235, !324, !235}
!7416 = !{!7417, !7418, !7419}
!7417 = !DILocalVariable(name: "s", arg: 1, scope: !7413, file: !7311, line: 126, type: !324)
!7418 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7413, file: !7311, line: 126, type: !235)
!7419 = !DILocalVariable(name: "n", scope: !7413, file: !7311, line: 128, type: !235)
!7420 = !DILocation(line: 0, scope: !7413)
!7421 = !DILocation(line: 130, column: 9, scope: !7413)
!7422 = !DILocation(line: 130, column: 12, scope: !7413)
!7423 = !DILocation(line: 130, column: 20, scope: !7413)
!7424 = !DILocation(line: 130, column: 2, scope: !7413)
!7425 = !DILocation(line: 131, column: 4, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7413, file: !7311, line: 130, column: 35)
!7427 = !DILocation(line: 132, column: 4, scope: !7426)
!7428 = distinct !{!7428, !7424, !7429}
!7429 = !DILocation(line: 133, column: 2, scope: !7413)
!7430 = !DILocation(line: 135, column: 2, scope: !7413)
!7431 = distinct !DISubprogram(name: "strcmp", scope: !7311, file: !7311, line: 145, type: !7432, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7434)
!7432 = !DISubroutineType(types: !7433)
!7433 = !{!109, !324, !324}
!7434 = !{!7435, !7436}
!7435 = !DILocalVariable(name: "s1", arg: 1, scope: !7431, file: !7311, line: 145, type: !324)
!7436 = !DILocalVariable(name: "s2", arg: 2, scope: !7431, file: !7311, line: 145, type: !324)
!7437 = !DILocation(line: 0, scope: !7431)
!7438 = !DILocation(line: 147, column: 10, scope: !7431)
!7439 = !DILocation(line: 147, column: 17, scope: !7431)
!7440 = !DILocation(line: 147, column: 14, scope: !7431)
!7441 = !DILocation(line: 147, column: 22, scope: !7431)
!7442 = !DILocation(line: 148, column: 5, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7431, file: !7311, line: 147, column: 40)
!7444 = !DILocation(line: 149, column: 5, scope: !7443)
!7445 = distinct !{!7445, !7446, !7447}
!7446 = !DILocation(line: 147, column: 2, scope: !7431)
!7447 = !DILocation(line: 150, column: 2, scope: !7431)
!7448 = !DILocation(line: 152, column: 9, scope: !7431)
!7449 = !DILocation(line: 152, column: 15, scope: !7431)
!7450 = !DILocation(line: 152, column: 13, scope: !7431)
!7451 = !DILocation(line: 152, column: 2, scope: !7431)
!7452 = distinct !DISubprogram(name: "strncmp", scope: !7311, file: !7311, line: 162, type: !7453, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7455)
!7453 = !DISubroutineType(types: !7454)
!7454 = !{!109, !324, !324, !235}
!7455 = !{!7456, !7457, !7458}
!7456 = !DILocalVariable(name: "s1", arg: 1, scope: !7452, file: !7311, line: 162, type: !324)
!7457 = !DILocalVariable(name: "s2", arg: 2, scope: !7452, file: !7311, line: 162, type: !324)
!7458 = !DILocalVariable(name: "n", arg: 3, scope: !7452, file: !7311, line: 162, type: !235)
!7459 = !DILocation(line: 0, scope: !7452)
!7460 = !DILocation(line: 164, column: 17, scope: !7452)
!7461 = !DILocation(line: 164, column: 21, scope: !7452)
!7462 = !DILocation(line: 164, column: 28, scope: !7452)
!7463 = !DILocation(line: 164, column: 25, scope: !7452)
!7464 = !DILocation(line: 164, column: 33, scope: !7452)
!7465 = !DILocation(line: 165, column: 5, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7452, file: !7311, line: 164, column: 51)
!7467 = !DILocation(line: 166, column: 5, scope: !7466)
!7468 = !DILocation(line: 167, column: 4, scope: !7466)
!7469 = distinct !{!7469, !7470, !7471}
!7470 = !DILocation(line: 164, column: 2, scope: !7452)
!7471 = !DILocation(line: 168, column: 2, scope: !7452)
!7472 = !DILocation(line: 170, column: 25, scope: !7452)
!7473 = !DILocation(line: 170, column: 31, scope: !7452)
!7474 = !DILocation(line: 170, column: 29, scope: !7452)
!7475 = !DILocation(line: 170, column: 9, scope: !7452)
!7476 = !DILocation(line: 170, column: 2, scope: !7452)
!7477 = distinct !DISubprogram(name: "strtok_r", scope: !7311, file: !7311, line: 180, type: !7478, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7481)
!7478 = !DISubroutineType(types: !7479)
!7479 = !{!1127, !1127, !324, !7480}
!7480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!7481 = !{!7482, !7483, !7484, !7485, !7486}
!7482 = !DILocalVariable(name: "str", arg: 1, scope: !7477, file: !7311, line: 180, type: !1127)
!7483 = !DILocalVariable(name: "sep", arg: 2, scope: !7477, file: !7311, line: 180, type: !324)
!7484 = !DILocalVariable(name: "state", arg: 3, scope: !7477, file: !7311, line: 180, type: !7480)
!7485 = !DILocalVariable(name: "start", scope: !7477, file: !7311, line: 182, type: !1127)
!7486 = !DILocalVariable(name: "end", scope: !7477, file: !7311, line: 182, type: !1127)
!7487 = !DILocation(line: 0, scope: !7477)
!7488 = !DILocation(line: 184, column: 10, scope: !7477)
!7489 = !DILocation(line: 184, column: 22, scope: !7477)
!7490 = !DILocation(line: 187, column: 9, scope: !7477)
!7491 = !DILocation(line: 187, column: 16, scope: !7477)
!7492 = !DILocation(line: 187, column: 19, scope: !7477)
!7493 = !DILocation(line: 187, column: 2, scope: !7477)
!7494 = !DILocation(line: 188, column: 8, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7477, file: !7311, line: 187, column: 40)
!7496 = distinct !{!7496, !7493, !7497}
!7497 = !DILocation(line: 189, column: 2, scope: !7477)
!7498 = !DILocation(line: 198, column: 9, scope: !7477)
!7499 = !DILocation(line: 198, column: 18, scope: !7477)
!7500 = !DILocation(line: 198, column: 17, scope: !7477)
!7501 = !DILocation(line: 198, column: 2, scope: !7477)
!7502 = !DILocation(line: 199, column: 6, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7477, file: !7311, line: 198, column: 37)
!7504 = !DILocation(line: 198, column: 14, scope: !7477)
!7505 = distinct !{!7505, !7501, !7506}
!7506 = !DILocation(line: 200, column: 2, scope: !7477)
!7507 = !DILocation(line: 203, column: 8, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !7311, line: 202, column: 20)
!7509 = distinct !DILexicalBlock(scope: !7477, file: !7311, line: 202, column: 6)
!7510 = !DILocation(line: 204, column: 16, scope: !7508)
!7511 = !DILocation(line: 205, column: 2, scope: !7508)
!7512 = !DILocation(line: 210, column: 1, scope: !7477)
!7513 = distinct !DISubprogram(name: "strcat", scope: !7311, file: !7311, line: 212, type: !7312, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7514)
!7514 = !{!7515, !7516}
!7515 = !DILocalVariable(name: "dest", arg: 1, scope: !7513, file: !7311, line: 212, type: !7314)
!7516 = !DILocalVariable(name: "src", arg: 2, scope: !7513, file: !7311, line: 212, type: !7315)
!7517 = !DILocation(line: 0, scope: !7513)
!7518 = !DILocation(line: 214, column: 16, scope: !7513)
!7519 = !DILocation(line: 214, column: 14, scope: !7513)
!7520 = !DILocation(line: 214, column: 2, scope: !7513)
!7521 = !DILocation(line: 215, column: 2, scope: !7513)
!7522 = distinct !DISubprogram(name: "strncat", scope: !7311, file: !7311, line: 218, type: !7333, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7523)
!7523 = !{!7524, !7525, !7526, !7527, !7528}
!7524 = !DILocalVariable(name: "dest", arg: 1, scope: !7522, file: !7311, line: 218, type: !7314)
!7525 = !DILocalVariable(name: "src", arg: 2, scope: !7522, file: !7311, line: 218, type: !7315)
!7526 = !DILocalVariable(name: "n", arg: 3, scope: !7522, file: !7311, line: 219, type: !235)
!7527 = !DILocalVariable(name: "orig_dest", scope: !7522, file: !7311, line: 221, type: !1127)
!7528 = !DILocalVariable(name: "len", scope: !7522, file: !7311, line: 222, type: !235)
!7529 = !DILocation(line: 0, scope: !7522)
!7530 = !DILocation(line: 222, column: 15, scope: !7522)
!7531 = !DILocation(line: 224, column: 7, scope: !7522)
!7532 = !DILocation(line: 225, column: 14, scope: !7522)
!7533 = !DILocation(line: 225, column: 19, scope: !7522)
!7534 = !DILocation(line: 225, column: 11, scope: !7522)
!7535 = !DILocation(line: 225, column: 23, scope: !7522)
!7536 = !DILocation(line: 225, column: 28, scope: !7522)
!7537 = !DILocation(line: 225, column: 2, scope: !7522)
!7538 = !DILocation(line: 226, column: 17, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7522, file: !7311, line: 225, column: 38)
!7540 = !DILocation(line: 226, column: 8, scope: !7539)
!7541 = !DILocation(line: 226, column: 11, scope: !7539)
!7542 = distinct !{!7542, !7537, !7543}
!7543 = !DILocation(line: 227, column: 2, scope: !7522)
!7544 = !DILocation(line: 228, column: 8, scope: !7522)
!7545 = !DILocation(line: 230, column: 2, scope: !7522)
!7546 = distinct !DISubprogram(name: "memcmp", scope: !7311, file: !7311, line: 239, type: !7547, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7549)
!7547 = !DISubroutineType(types: !7548)
!7548 = !{!109, !13, !13, !235}
!7549 = !{!7550, !7551, !7552, !7553, !7554}
!7550 = !DILocalVariable(name: "m1", arg: 1, scope: !7546, file: !7311, line: 239, type: !13)
!7551 = !DILocalVariable(name: "m2", arg: 2, scope: !7546, file: !7311, line: 239, type: !13)
!7552 = !DILocalVariable(name: "n", arg: 3, scope: !7546, file: !7311, line: 239, type: !235)
!7553 = !DILocalVariable(name: "c1", scope: !7546, file: !7311, line: 241, type: !324)
!7554 = !DILocalVariable(name: "c2", scope: !7546, file: !7311, line: 242, type: !324)
!7555 = !DILocation(line: 0, scope: !7546)
!7556 = !DILocation(line: 244, column: 7, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7546, file: !7311, line: 244, column: 6)
!7558 = !DILocation(line: 244, column: 6, scope: !7546)
!7559 = !DILocation(line: 248, column: 10, scope: !7546)
!7560 = !DILocation(line: 248, column: 14, scope: !7546)
!7561 = !DILocation(line: 248, column: 19, scope: !7546)
!7562 = !DILocation(line: 248, column: 2, scope: !7546)
!7563 = !DILocation(line: 248, column: 23, scope: !7546)
!7564 = !DILocation(line: 248, column: 30, scope: !7546)
!7565 = !DILocation(line: 248, column: 27, scope: !7546)
!7566 = !DILocation(line: 249, column: 5, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7546, file: !7311, line: 248, column: 36)
!7568 = !DILocation(line: 250, column: 5, scope: !7567)
!7569 = distinct !{!7569, !7562, !7570}
!7570 = !DILocation(line: 251, column: 2, scope: !7546)
!7571 = !DILocation(line: 253, column: 9, scope: !7546)
!7572 = !DILocation(line: 253, column: 15, scope: !7546)
!7573 = !DILocation(line: 253, column: 13, scope: !7546)
!7574 = !DILocation(line: 253, column: 2, scope: !7546)
!7575 = !DILocation(line: 254, column: 1, scope: !7546)
!7576 = distinct !DISubprogram(name: "memmove", scope: !7311, file: !7311, line: 263, type: !7577, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7579)
!7577 = !DISubroutineType(types: !7578)
!7578 = !{!108, !108, !13, !235}
!7579 = !{!7580, !7581, !7582, !7583, !7584}
!7580 = !DILocalVariable(name: "d", arg: 1, scope: !7576, file: !7311, line: 263, type: !108)
!7581 = !DILocalVariable(name: "s", arg: 2, scope: !7576, file: !7311, line: 263, type: !13)
!7582 = !DILocalVariable(name: "n", arg: 3, scope: !7576, file: !7311, line: 263, type: !235)
!7583 = !DILocalVariable(name: "dest", scope: !7576, file: !7311, line: 265, type: !1127)
!7584 = !DILocalVariable(name: "src", scope: !7576, file: !7311, line: 266, type: !324)
!7585 = !DILocation(line: 0, scope: !7576)
!7586 = !DILocation(line: 268, column: 21, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7576, file: !7311, line: 268, column: 6)
!7588 = !DILocation(line: 268, column: 28, scope: !7587)
!7589 = !DILocation(line: 268, column: 6, scope: !7576)
!7590 = !DILocation(line: 280, column: 12, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7587, file: !7311, line: 278, column: 9)
!7592 = !DILocation(line: 280, column: 3, scope: !7591)
!7593 = !DILocation(line: 275, column: 5, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !7311, line: 274, column: 17)
!7595 = distinct !DILexicalBlock(scope: !7587, file: !7311, line: 268, column: 33)
!7596 = !DILocation(line: 276, column: 14, scope: !7594)
!7597 = !DILocation(line: 276, column: 4, scope: !7594)
!7598 = !DILocation(line: 276, column: 12, scope: !7594)
!7599 = !DILocation(line: 274, column: 12, scope: !7595)
!7600 = !DILocation(line: 274, column: 3, scope: !7595)
!7601 = distinct !{!7601, !7600, !7602}
!7602 = !DILocation(line: 277, column: 3, scope: !7595)
!7603 = !DILocation(line: 281, column: 12, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7591, file: !7311, line: 280, column: 17)
!7605 = !DILocation(line: 281, column: 10, scope: !7604)
!7606 = !DILocation(line: 282, column: 8, scope: !7604)
!7607 = !DILocation(line: 283, column: 7, scope: !7604)
!7608 = !DILocation(line: 284, column: 5, scope: !7604)
!7609 = distinct !{!7609, !7592, !7610}
!7610 = !DILocation(line: 285, column: 3, scope: !7591)
!7611 = !DILocation(line: 288, column: 2, scope: !7576)
!7612 = distinct !DISubprogram(name: "memcpy", scope: !7311, file: !7311, line: 298, type: !7613, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7617)
!7613 = !DISubroutineType(types: !7614)
!7614 = !{!108, !7615, !7616, !235}
!7615 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !108)
!7616 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7617 = !{!7618, !7619, !7620, !7621, !7622}
!7618 = !DILocalVariable(name: "d", arg: 1, scope: !7612, file: !7311, line: 298, type: !7615)
!7619 = !DILocalVariable(name: "s", arg: 2, scope: !7612, file: !7311, line: 298, type: !7616)
!7620 = !DILocalVariable(name: "n", arg: 3, scope: !7612, file: !7311, line: 298, type: !235)
!7621 = !DILocalVariable(name: "d_byte", scope: !7612, file: !7311, line: 302, type: !962)
!7622 = !DILocalVariable(name: "s_byte", scope: !7612, file: !7311, line: 303, type: !2852)
!7623 = !DILocation(line: 0, scope: !7612)
!7624 = !DILocation(line: 337, column: 11, scope: !7612)
!7625 = !DILocation(line: 337, column: 2, scope: !7612)
!7626 = !DILocation(line: 338, column: 25, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7612, file: !7311, line: 337, column: 16)
!7628 = !DILocation(line: 338, column: 17, scope: !7627)
!7629 = !DILocation(line: 338, column: 11, scope: !7627)
!7630 = !DILocation(line: 338, column: 15, scope: !7627)
!7631 = !DILocation(line: 339, column: 4, scope: !7627)
!7632 = distinct !{!7632, !7625, !7633}
!7633 = !DILocation(line: 340, column: 2, scope: !7612)
!7634 = !DILocation(line: 342, column: 2, scope: !7612)
!7635 = distinct !DISubprogram(name: "memset", scope: !7311, file: !7311, line: 352, type: !7636, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7638)
!7636 = !DISubroutineType(types: !7637)
!7637 = !{!108, !108, !109, !235}
!7638 = !{!7639, !7640, !7641, !7642, !7643}
!7639 = !DILocalVariable(name: "buf", arg: 1, scope: !7635, file: !7311, line: 352, type: !108)
!7640 = !DILocalVariable(name: "c", arg: 2, scope: !7635, file: !7311, line: 352, type: !109)
!7641 = !DILocalVariable(name: "n", arg: 3, scope: !7635, file: !7311, line: 352, type: !235)
!7642 = !DILocalVariable(name: "d_byte", scope: !7635, file: !7311, line: 356, type: !962)
!7643 = !DILocalVariable(name: "c_byte", scope: !7635, file: !7311, line: 357, type: !168)
!7644 = !DILocation(line: 0, scope: !7635)
!7645 = !DILocation(line: 357, column: 25, scope: !7635)
!7646 = !DILocation(line: 389, column: 11, scope: !7635)
!7647 = !DILocation(line: 389, column: 2, scope: !7635)
!7648 = !DILocation(line: 390, column: 11, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7635, file: !7311, line: 389, column: 16)
!7650 = !DILocation(line: 390, column: 15, scope: !7649)
!7651 = !DILocation(line: 391, column: 4, scope: !7649)
!7652 = distinct !{!7652, !7647, !7653}
!7653 = !DILocation(line: 392, column: 2, scope: !7635)
!7654 = !DILocation(line: 394, column: 2, scope: !7635)
!7655 = distinct !DISubprogram(name: "memchr", scope: !7311, file: !7311, line: 404, type: !7656, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7658)
!7656 = !DISubroutineType(types: !7657)
!7657 = !{!108, !13, !109, !235}
!7658 = !{!7659, !7660, !7661, !7662}
!7659 = !DILocalVariable(name: "s", arg: 1, scope: !7655, file: !7311, line: 404, type: !13)
!7660 = !DILocalVariable(name: "c", arg: 2, scope: !7655, file: !7311, line: 404, type: !109)
!7661 = !DILocalVariable(name: "n", arg: 3, scope: !7655, file: !7311, line: 404, type: !235)
!7662 = !DILocalVariable(name: "p", scope: !7663, file: !7311, line: 407, type: !2852)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !7311, line: 406, column: 14)
!7664 = distinct !DILexicalBlock(scope: !7655, file: !7311, line: 406, column: 6)
!7665 = !DILocation(line: 0, scope: !7655)
!7666 = !DILocation(line: 406, column: 8, scope: !7664)
!7667 = !DILocation(line: 406, column: 6, scope: !7655)
!7668 = !DILocation(line: 409, column: 3, scope: !7663)
!7669 = !DILocation(line: 0, scope: !7663)
!7670 = !DILocation(line: 410, column: 8, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !7311, line: 410, column: 8)
!7672 = distinct !DILexicalBlock(scope: !7663, file: !7311, line: 409, column: 6)
!7673 = !DILocation(line: 410, column: 13, scope: !7671)
!7674 = !DILocation(line: 410, column: 8, scope: !7672)
!7675 = distinct !{!7675, !7668, !7676}
!7676 = !DILocation(line: 414, column: 20, scope: !7663)
!7677 = !DILocation(line: 417, column: 2, scope: !7655)
!7678 = !DILocation(line: 418, column: 1, scope: !7655)
!7679 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !676, file: !676, line: 368, type: !729, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7680)
!7680 = !{!7681}
!7681 = !DILocalVariable(name: "dev", arg: 1, scope: !7679, file: !676, line: 368, type: !705)
!7682 = !DILocation(line: 0, scope: !7679)
!7683 = !DILocation(line: 370, column: 2, scope: !7679)
!7684 = !DILocation(line: 371, column: 1, scope: !7679)
!7685 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !676, file: !676, line: 243, type: !7686, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7688)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{null, !109, !109, !705}
!7688 = !{!7689, !7690, !7691, !7692, !7694}
!7689 = !DILocalVariable(name: "min", arg: 1, scope: !7685, file: !676, line: 243, type: !109)
!7690 = !DILocalVariable(name: "max", arg: 2, scope: !7685, file: !676, line: 243, type: !109)
!7691 = !DILocalVariable(name: "dev", arg: 3, scope: !7685, file: !676, line: 243, type: !705)
!7692 = !DILocalVariable(name: "data", scope: !7685, file: !676, line: 245, type: !7693)
!7693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!7694 = !DILocalVariable(name: "line", scope: !7685, file: !676, line: 246, type: !109)
!7695 = !DILocation(line: 0, scope: !7685)
!7696 = !DILocation(line: 245, column: 38, scope: !7685)
!7697 = !DILocation(line: 249, column: 24, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !676, line: 249, column: 2)
!7699 = distinct !DILexicalBlock(scope: !7685, file: !676, line: 249, column: 2)
!7700 = !DILocation(line: 249, column: 2, scope: !7699)
!7701 = !DILocation(line: 251, column: 7, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !676, line: 251, column: 7)
!7703 = distinct !DILexicalBlock(scope: !7698, file: !676, line: 249, column: 39)
!7704 = !DILocation(line: 251, column: 7, scope: !7703)
!7705 = !DILocation(line: 253, column: 4, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7702, file: !676, line: 251, column: 36)
!7707 = !DILocation(line: 256, column: 24, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7706, file: !676, line: 256, column: 8)
!7709 = !DILocation(line: 256, column: 9, scope: !7708)
!7710 = !DILocation(line: 256, column: 8, scope: !7706)
!7711 = !DILocation(line: 260, column: 43, scope: !7706)
!7712 = !DILocation(line: 260, column: 4, scope: !7706)
!7713 = !DILocation(line: 261, column: 3, scope: !7706)
!7714 = !DILocation(line: 249, column: 35, scope: !7698)
!7715 = distinct !{!7715, !7700, !7716}
!7716 = !DILocation(line: 262, column: 2, scope: !7699)
!7717 = !DILocation(line: 263, column: 1, scope: !7685)
!7718 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !676, file: !676, line: 158, type: !288, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7719)
!7719 = !{!7720}
!7720 = !DILocalVariable(name: "line", arg: 1, scope: !7718, file: !676, line: 158, type: !109)
!7721 = !DILocation(line: 0, scope: !7718)
!7722 = !DILocation(line: 170, column: 38, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !676, line: 160, column: 17)
!7724 = distinct !DILexicalBlock(scope: !7718, file: !676, line: 160, column: 6)
!7725 = !DILocation(line: 170, column: 10, scope: !7723)
!7726 = !DILocation(line: 176, column: 1, scope: !7718)
!7727 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !676, file: !676, line: 183, type: !3414, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7728)
!7728 = !{!7729}
!7729 = !DILocalVariable(name: "line", arg: 1, scope: !7727, file: !676, line: 183, type: !109)
!7730 = !DILocation(line: 0, scope: !7727)
!7731 = !DILocation(line: 195, column: 28, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7733, file: !676, line: 185, column: 17)
!7733 = distinct !DILexicalBlock(scope: !7727, file: !676, line: 185, column: 6)
!7734 = !DILocation(line: 195, column: 3, scope: !7732)
!7735 = !DILocation(line: 200, column: 1, scope: !7727)
!7736 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7737, file: !7737, line: 910, type: !6239, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7738)
!7737 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7738 = !{!7739}
!7739 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7736, file: !7737, line: 910, type: !110)
!7740 = !DILocation(line: 0, scope: !7736)
!7741 = !DILocation(line: 912, column: 3, scope: !7736)
!7742 = !DILocation(line: 913, column: 1, scope: !7736)
!7743 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7737, file: !7737, line: 834, type: !7206, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7744)
!7744 = !{!7745}
!7745 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7743, file: !7737, line: 834, type: !110)
!7746 = !DILocation(line: 0, scope: !7743)
!7747 = !DILocation(line: 836, column: 11, scope: !7743)
!7748 = !DILocation(line: 836, column: 40, scope: !7743)
!7749 = !DILocation(line: 836, column: 3, scope: !7743)
!7750 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !676, file: !676, line: 304, type: !729, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7751)
!7751 = !{!7752}
!7752 = !DILocalVariable(name: "dev", arg: 1, scope: !7750, file: !676, line: 304, type: !705)
!7753 = !DILocation(line: 0, scope: !7750)
!7754 = !DILocation(line: 306, column: 2, scope: !7750)
!7755 = !DILocation(line: 307, column: 1, scope: !7750)
!7756 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !676, file: !676, line: 299, type: !729, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7757)
!7757 = !{!7758}
!7758 = !DILocalVariable(name: "dev", arg: 1, scope: !7756, file: !676, line: 299, type: !705)
!7759 = !DILocation(line: 0, scope: !7756)
!7760 = !DILocation(line: 301, column: 2, scope: !7756)
!7761 = !DILocation(line: 302, column: 1, scope: !7756)
!7762 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !676, file: !676, line: 294, type: !729, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7763)
!7763 = !{!7764}
!7764 = !DILocalVariable(name: "dev", arg: 1, scope: !7762, file: !676, line: 294, type: !705)
!7765 = !DILocation(line: 0, scope: !7762)
!7766 = !DILocation(line: 296, column: 2, scope: !7762)
!7767 = !DILocation(line: 297, column: 1, scope: !7762)
!7768 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !676, file: !676, line: 397, type: !729, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7769)
!7769 = !{!7770}
!7770 = !DILocalVariable(name: "dev", arg: 1, scope: !7768, file: !676, line: 397, type: !705)
!7771 = !DILocation(line: 0, scope: !7768)
!7772 = !DILocation(line: 399, column: 2, scope: !7768)
!7773 = !DILocation(line: 400, column: 1, scope: !7768)
!7774 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !676, file: !676, line: 392, type: !729, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7775)
!7775 = !{!7776}
!7776 = !DILocalVariable(name: "dev", arg: 1, scope: !7774, file: !676, line: 392, type: !705)
!7777 = !DILocation(line: 0, scope: !7774)
!7778 = !DILocation(line: 394, column: 2, scope: !7774)
!7779 = !DILocation(line: 395, column: 1, scope: !7774)
!7780 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !676, file: !676, line: 289, type: !729, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7781)
!7781 = !{!7782}
!7782 = !DILocalVariable(name: "dev", arg: 1, scope: !7780, file: !676, line: 289, type: !705)
!7783 = !DILocation(line: 0, scope: !7780)
!7784 = !DILocation(line: 291, column: 2, scope: !7780)
!7785 = !DILocation(line: 292, column: 1, scope: !7780)
!7786 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !676, file: !676, line: 387, type: !729, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7787)
!7787 = !{!7788}
!7788 = !DILocalVariable(name: "dev", arg: 1, scope: !7786, file: !676, line: 387, type: !705)
!7789 = !DILocation(line: 0, scope: !7786)
!7790 = !DILocation(line: 389, column: 2, scope: !7786)
!7791 = !DILocation(line: 390, column: 1, scope: !7786)
!7792 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !676, file: !676, line: 382, type: !729, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7793)
!7793 = !{!7794}
!7794 = !DILocalVariable(name: "dev", arg: 1, scope: !7792, file: !676, line: 382, type: !705)
!7795 = !DILocation(line: 0, scope: !7792)
!7796 = !DILocation(line: 384, column: 2, scope: !7792)
!7797 = !DILocation(line: 385, column: 1, scope: !7792)
!7798 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !676, file: !676, line: 373, type: !729, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7799)
!7799 = !{!7800}
!7800 = !DILocalVariable(name: "dev", arg: 1, scope: !7798, file: !676, line: 373, type: !705)
!7801 = !DILocation(line: 0, scope: !7798)
!7802 = !DILocation(line: 375, column: 2, scope: !7798)
!7803 = !DILocation(line: 376, column: 1, scope: !7798)
!7804 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !676, file: !676, line: 284, type: !729, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7805)
!7805 = !{!7806}
!7806 = !DILocalVariable(name: "dev", arg: 1, scope: !7804, file: !676, line: 284, type: !705)
!7807 = !DILocation(line: 0, scope: !7804)
!7808 = !DILocation(line: 286, column: 2, scope: !7804)
!7809 = !DILocation(line: 287, column: 1, scope: !7804)
!7810 = distinct !DISubprogram(name: "stm32_exti_init", scope: !676, file: !676, line: 416, type: !703, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7811)
!7811 = !{!7812}
!7812 = !DILocalVariable(name: "dev", arg: 1, scope: !7810, file: !676, line: 416, type: !705)
!7813 = !DILocation(line: 0, scope: !7810)
!7814 = !DILocation(line: 418, column: 2, scope: !7810)
!7815 = !DILocation(line: 420, column: 2, scope: !7810)
!7816 = !DILocation(line: 0, scope: !728)
!7817 = !DILocation(line: 493, column: 2, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !728, file: !676, line: 493, column: 2)
!7819 = !DILocation(line: 497, column: 2, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !728, file: !676, line: 497, column: 2)
!7821 = !DILocation(line: 507, column: 2, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !728, file: !676, line: 507, column: 2)
!7823 = !DILocation(line: 512, column: 2, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !728, file: !676, line: 512, column: 2)
!7825 = !DILocation(line: 516, column: 2, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !728, file: !676, line: 516, column: 2)
!7827 = !DILocation(line: 523, column: 2, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !728, file: !676, line: 523, column: 2)
!7829 = !DILocation(line: 527, column: 2, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !728, file: !676, line: 527, column: 2)
!7831 = !DILocation(line: 581, column: 2, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !728, file: !676, line: 581, column: 2)
!7833 = !DILocation(line: 586, column: 2, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !728, file: !676, line: 586, column: 2)
!7835 = !DILocation(line: 591, column: 2, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !728, file: !676, line: 591, column: 2)
!7837 = !DILocation(line: 595, column: 2, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !728, file: !676, line: 595, column: 2)
!7839 = !DILocation(line: 607, column: 1, scope: !728)
!7840 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !676, file: !676, line: 112, type: !3414, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7841)
!7841 = !{!7842, !7843}
!7842 = !DILocalVariable(name: "line", arg: 1, scope: !7840, file: !676, line: 112, type: !109)
!7843 = !DILocalVariable(name: "irqnum", scope: !7840, file: !676, line: 114, type: !109)
!7844 = !DILocation(line: 0, scope: !7840)
!7845 = !DILocation(line: 122, column: 13, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7840, file: !676, line: 122, column: 6)
!7847 = !DILocation(line: 122, column: 6, scope: !7840)
!7848 = !DILocation(line: 123, column: 3, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !676, line: 123, column: 3)
!7850 = distinct !DILexicalBlock(scope: !7851, file: !676, line: 123, column: 3)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !676, line: 123, column: 3)
!7852 = distinct !DILexicalBlock(scope: !7846, file: !676, line: 122, column: 22)
!7853 = !DILocation(line: 121, column: 11, scope: !7840)
!7854 = !DILocation(line: 130, column: 26, scope: !7840)
!7855 = !DILocation(line: 130, column: 2, scope: !7840)
!7856 = !DILocation(line: 134, column: 2, scope: !7840)
!7857 = !DILocation(line: 135, column: 1, scope: !7840)
!7858 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7737, file: !7737, line: 268, type: !6239, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7859)
!7859 = !{!7860}
!7860 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7858, file: !7737, line: 268, type: !110)
!7861 = !DILocation(line: 0, scope: !7858)
!7862 = !DILocation(line: 270, column: 3, scope: !7858)
!7863 = !DILocation(line: 271, column: 1, scope: !7858)
!7864 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !676, file: !676, line: 137, type: !3414, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7865)
!7865 = !{!7866}
!7866 = !DILocalVariable(name: "line", arg: 1, scope: !7864, file: !676, line: 137, type: !109)
!7867 = !DILocation(line: 0, scope: !7864)
!7868 = !DILocation(line: 141, column: 11, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7864, file: !676, line: 141, column: 6)
!7870 = !DILocation(line: 141, column: 6, scope: !7864)
!7871 = !DILocation(line: 145, column: 28, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7869, file: !676, line: 141, column: 17)
!7873 = !DILocation(line: 145, column: 3, scope: !7872)
!7874 = !DILocation(line: 147, column: 2, scope: !7872)
!7875 = !DILocation(line: 151, column: 1, scope: !7864)
!7876 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7737, file: !7737, line: 309, type: !6239, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7877)
!7877 = !{!7878}
!7878 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7876, file: !7737, line: 309, type: !110)
!7879 = !DILocation(line: 0, scope: !7876)
!7880 = !DILocation(line: 311, column: 3, scope: !7876)
!7881 = !DILocation(line: 312, column: 1, scope: !7876)
!7882 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !676, file: !676, line: 202, type: !7883, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7885)
!7883 = !DISubroutineType(types: !7884)
!7884 = !{null, !109, !109}
!7885 = !{!7886, !7887}
!7886 = !DILocalVariable(name: "line", arg: 1, scope: !7882, file: !676, line: 202, type: !109)
!7887 = !DILocalVariable(name: "trigger", arg: 2, scope: !7882, file: !676, line: 202, type: !109)
!7888 = !DILocation(line: 0, scope: !7882)
!7889 = !DILocation(line: 211, column: 2, scope: !7882)
!7890 = !DILocation(line: 213, column: 36, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7882, file: !676, line: 211, column: 19)
!7892 = !DILocation(line: 213, column: 3, scope: !7891)
!7893 = !DILocation(line: 214, column: 3, scope: !7891)
!7894 = !DILocation(line: 215, column: 3, scope: !7891)
!7895 = !DILocation(line: 217, column: 35, scope: !7891)
!7896 = !DILocation(line: 217, column: 3, scope: !7891)
!7897 = !DILocation(line: 218, column: 3, scope: !7891)
!7898 = !DILocation(line: 219, column: 3, scope: !7891)
!7899 = !DILocation(line: 221, column: 36, scope: !7891)
!7900 = !DILocation(line: 221, column: 3, scope: !7891)
!7901 = !DILocation(line: 222, column: 3, scope: !7891)
!7902 = !DILocation(line: 223, column: 3, scope: !7891)
!7903 = !DILocation(line: 225, column: 35, scope: !7891)
!7904 = !DILocation(line: 225, column: 3, scope: !7891)
!7905 = !DILocation(line: 226, column: 3, scope: !7891)
!7906 = !DILocation(line: 227, column: 3, scope: !7891)
!7907 = !DILocation(line: 232, column: 1, scope: !7882)
!7908 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7737, file: !7737, line: 573, type: !6239, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7909)
!7909 = !{!7910}
!7910 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7908, file: !7737, line: 573, type: !110)
!7911 = !DILocation(line: 0, scope: !7908)
!7912 = !DILocation(line: 575, column: 3, scope: !7908)
!7913 = !DILocation(line: 577, column: 1, scope: !7908)
!7914 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7737, file: !7737, line: 703, type: !6239, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7915)
!7915 = !{!7916}
!7916 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7914, file: !7737, line: 703, type: !110)
!7917 = !DILocation(line: 0, scope: !7914)
!7918 = !DILocation(line: 705, column: 3, scope: !7914)
!7919 = !DILocation(line: 706, column: 1, scope: !7914)
!7920 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7737, file: !7737, line: 529, type: !6239, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7921)
!7921 = !{!7922}
!7922 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7920, file: !7737, line: 529, type: !110)
!7923 = !DILocation(line: 0, scope: !7920)
!7924 = !DILocation(line: 531, column: 3, scope: !7920)
!7925 = !DILocation(line: 533, column: 1, scope: !7920)
!7926 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7737, file: !7737, line: 661, type: !6239, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7927)
!7927 = !{!7928}
!7928 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7926, file: !7737, line: 661, type: !110)
!7929 = !DILocation(line: 0, scope: !7926)
!7930 = !DILocation(line: 663, column: 3, scope: !7926)
!7931 = !DILocation(line: 664, column: 1, scope: !7926)
!7932 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !676, file: !676, line: 433, type: !7933, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7935)
!7933 = !DISubroutineType(types: !7934)
!7934 = !{!109, !109, !716, !108}
!7935 = !{!7936, !7937, !7938, !7939, !7941}
!7936 = !DILocalVariable(name: "line", arg: 1, scope: !7932, file: !676, line: 433, type: !109)
!7937 = !DILocalVariable(name: "cb", arg: 2, scope: !7932, file: !676, line: 433, type: !716)
!7938 = !DILocalVariable(name: "arg", arg: 3, scope: !7932, file: !676, line: 433, type: !108)
!7939 = !DILocalVariable(name: "dev", scope: !7932, file: !676, line: 435, type: !7940)
!7940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !705)
!7941 = !DILocalVariable(name: "data", scope: !7932, file: !676, line: 436, type: !7693)
!7942 = !DILocation(line: 0, scope: !7932)
!7943 = !DILocation(line: 438, column: 21, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7932, file: !676, line: 438, column: 6)
!7945 = !DILocation(line: 438, column: 6, scope: !7944)
!7946 = !DILocation(line: 438, column: 6, scope: !7932)
!7947 = !DILocation(line: 442, column: 20, scope: !7932)
!7948 = !DILocation(line: 443, column: 17, scope: !7932)
!7949 = !DILocation(line: 443, column: 22, scope: !7932)
!7950 = !DILocation(line: 445, column: 2, scope: !7932)
!7951 = !DILocation(line: 446, column: 1, scope: !7932)
!7952 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !676, file: !676, line: 448, type: !3414, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7953)
!7953 = !{!7954, !7955, !7956}
!7954 = !DILocalVariable(name: "line", arg: 1, scope: !7952, file: !676, line: 448, type: !109)
!7955 = !DILocalVariable(name: "dev", scope: !7952, file: !676, line: 450, type: !7940)
!7956 = !DILocalVariable(name: "data", scope: !7952, file: !676, line: 451, type: !7693)
!7957 = !DILocation(line: 0, scope: !7952)
!7958 = !DILocation(line: 453, column: 17, scope: !7952)
!7959 = !DILocation(line: 453, column: 20, scope: !7952)
!7960 = !DILocation(line: 454, column: 17, scope: !7952)
!7961 = !DILocation(line: 454, column: 22, scope: !7952)
!7962 = !DILocation(line: 455, column: 1, scope: !7952)
!7963 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !861, file: !861, line: 183, type: !899, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !7964)
!7964 = !{!7965, !7966, !7967, !7968, !7969}
!7965 = !DILocalVariable(name: "dev", arg: 1, scope: !7963, file: !861, line: 183, type: !890)
!7966 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7963, file: !861, line: 184, type: !901)
!7967 = !DILocalVariable(name: "pclken", scope: !7963, file: !861, line: 186, type: !851)
!7968 = !DILocalVariable(name: "reg", scope: !7963, file: !861, line: 187, type: !1440)
!7969 = !DILocalVariable(name: "reg_val", scope: !7963, file: !861, line: 188, type: !110)
!7970 = !DILocation(line: 0, scope: !7963)
!7971 = !DILocation(line: 192, column: 6, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7963, file: !861, line: 192, column: 6)
!7973 = !DILocation(line: 192, column: 6, scope: !7963)
!7974 = !DILocation(line: 197, column: 52, scope: !7963)
!7975 = !DILocation(line: 197, column: 8, scope: !7963)
!7976 = !DILocation(line: 198, column: 12, scope: !7963)
!7977 = !DILocation(line: 199, column: 21, scope: !7963)
!7978 = !DILocation(line: 199, column: 10, scope: !7963)
!7979 = !DILocation(line: 200, column: 7, scope: !7963)
!7980 = !DILocation(line: 202, column: 2, scope: !7963)
!7981 = !DILocation(line: 203, column: 1, scope: !7963)
!7982 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !861, file: !861, line: 205, type: !899, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !7983)
!7983 = !{!7984, !7985, !7986, !7987, !7988}
!7984 = !DILocalVariable(name: "dev", arg: 1, scope: !7982, file: !861, line: 205, type: !890)
!7985 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7982, file: !861, line: 206, type: !901)
!7986 = !DILocalVariable(name: "pclken", scope: !7982, file: !861, line: 208, type: !851)
!7987 = !DILocalVariable(name: "reg", scope: !7982, file: !861, line: 209, type: !1440)
!7988 = !DILocalVariable(name: "reg_val", scope: !7982, file: !861, line: 210, type: !110)
!7989 = !DILocation(line: 0, scope: !7982)
!7990 = !DILocation(line: 214, column: 6, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7982, file: !861, line: 214, column: 6)
!7992 = !DILocation(line: 214, column: 6, scope: !7982)
!7993 = !DILocation(line: 219, column: 52, scope: !7982)
!7994 = !DILocation(line: 219, column: 8, scope: !7982)
!7995 = !DILocation(line: 220, column: 12, scope: !7982)
!7996 = !DILocation(line: 221, column: 22, scope: !7982)
!7997 = !DILocation(line: 221, column: 13, scope: !7982)
!7998 = !DILocation(line: 221, column: 10, scope: !7982)
!7999 = !DILocation(line: 222, column: 7, scope: !7982)
!8000 = !DILocation(line: 224, column: 2, scope: !7982)
!8001 = !DILocation(line: 225, column: 1, scope: !7982)
!8002 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !861, file: !861, line: 262, type: !915, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8003)
!8003 = !{!8004, !8005, !8006, !8007, !8008, !8009, !8010, !8011}
!8004 = !DILocalVariable(name: "clock", arg: 1, scope: !8002, file: !861, line: 262, type: !890)
!8005 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8002, file: !861, line: 263, type: !901)
!8006 = !DILocalVariable(name: "rate", arg: 3, scope: !8002, file: !861, line: 264, type: !857)
!8007 = !DILocalVariable(name: "pclken", scope: !8002, file: !861, line: 266, type: !851)
!8008 = !DILocalVariable(name: "ahb_clock", scope: !8002, file: !861, line: 273, type: !110)
!8009 = !DILocalVariable(name: "apb1_clock", scope: !8002, file: !861, line: 274, type: !110)
!8010 = !DILocalVariable(name: "apb2_clock", scope: !8002, file: !861, line: 276, type: !110)
!8011 = !DILocalVariable(name: "ahb3_clock", scope: !8002, file: !861, line: 286, type: !110)
!8012 = !DILocation(line: 0, scope: !8002)
!8013 = !DILocation(line: 273, column: 23, scope: !8002)
!8014 = !DILocation(line: 299, column: 18, scope: !8002)
!8015 = !DILocation(line: 299, column: 2, scope: !8002)
!8016 = !DILocation(line: 274, column: 24, scope: !8002)
!8017 = !DILocation(line: 319, column: 3, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8002, file: !861, line: 299, column: 23)
!8019 = !DILocation(line: 276, column: 24, scope: !8002)
!8020 = !DILocation(line: 323, column: 3, scope: !8018)
!8021 = !DILocation(line: 346, column: 33, scope: !8018)
!8022 = !DILocation(line: 346, column: 11, scope: !8018)
!8023 = !DILocation(line: 350, column: 3, scope: !8018)
!8024 = !DILocation(line: 374, column: 3, scope: !8018)
!8025 = !DILocation(line: 379, column: 3, scope: !8018)
!8026 = !DILocation(line: 0, scope: !8018)
!8027 = !DILocation(line: 396, column: 1, scope: !8002)
!8028 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !861, file: !861, line: 227, type: !931, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8029)
!8029 = !{!8030, !8031, !8032, !8033, !8034, !8035, !8036, !8037}
!8030 = !DILocalVariable(name: "dev", arg: 1, scope: !8028, file: !861, line: 227, type: !890)
!8031 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8028, file: !861, line: 228, type: !901)
!8032 = !DILocalVariable(name: "data", arg: 3, scope: !8028, file: !861, line: 229, type: !108)
!8033 = !DILocalVariable(name: "pclken", scope: !8028, file: !861, line: 233, type: !851)
!8034 = !DILocalVariable(name: "reg", scope: !8028, file: !861, line: 234, type: !1440)
!8035 = !DILocalVariable(name: "reg_val", scope: !8028, file: !861, line: 235, type: !110)
!8036 = !DILocalVariable(name: "dt_val", scope: !8028, file: !861, line: 235, type: !110)
!8037 = !DILocalVariable(name: "err", scope: !8028, file: !861, line: 236, type: !109)
!8038 = !DILocation(line: 0, scope: !8028)
!8039 = !DILocation(line: 241, column: 30, scope: !8028)
!8040 = !DILocation(line: 241, column: 8, scope: !8028)
!8041 = !DILocation(line: 242, column: 10, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8028, file: !861, line: 242, column: 6)
!8043 = !DILocation(line: 242, column: 6, scope: !8028)
!8044 = !DILocation(line: 247, column: 11, scope: !8028)
!8045 = !DILocation(line: 248, column: 6, scope: !8028)
!8046 = !DILocation(line: 247, column: 44, scope: !8028)
!8047 = !DILocation(line: 250, column: 6, scope: !8028)
!8048 = !DILocation(line: 249, column: 52, scope: !8028)
!8049 = !DILocation(line: 249, column: 8, scope: !8028)
!8050 = !DILocation(line: 251, column: 12, scope: !8028)
!8051 = !DILocation(line: 252, column: 10, scope: !8028)
!8052 = !DILocation(line: 253, column: 7, scope: !8028)
!8053 = !DILocation(line: 255, column: 2, scope: !8028)
!8054 = !DILocation(line: 260, column: 1, scope: !8028)
!8055 = distinct !DISubprogram(name: "enabled_clock", scope: !861, file: !861, line: 100, type: !8056, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8058)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{!109, !110}
!8058 = !{!8059, !8060}
!8059 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8055, file: !861, line: 100, type: !110)
!8060 = !DILocalVariable(name: "r", scope: !8055, file: !861, line: 102, type: !109)
!8061 = !DILocation(line: 0, scope: !8055)
!8062 = !DILocation(line: 104, column: 2, scope: !8055)
!8063 = !DILocation(line: 180, column: 2, scope: !8055)
!8064 = !DILocation(line: 181, column: 1, scope: !8055)
!8065 = distinct !DISubprogram(name: "get_bus_clock", scope: !861, file: !861, line: 79, type: !8066, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8068)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{!110, !110, !110}
!8068 = !{!8069, !8070}
!8069 = !DILocalVariable(name: "clock", arg: 1, scope: !8065, file: !861, line: 79, type: !110)
!8070 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8065, file: !861, line: 79, type: !110)
!8071 = !DILocation(line: 0, scope: !8065)
!8072 = !DILocation(line: 81, column: 15, scope: !8065)
!8073 = !DILocation(line: 81, column: 2, scope: !8065)
!8074 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !861, file: !861, line: 68, type: !8075, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8077)
!8075 = !DISubroutineType(types: !8076)
!8076 = !{!110, !110, !109, !109, !109}
!8077 = !{!8078, !8079, !8080, !8081}
!8078 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8074, file: !861, line: 68, type: !110)
!8079 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8074, file: !861, line: 69, type: !109)
!8080 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8074, file: !861, line: 70, type: !109)
!8081 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8074, file: !861, line: 71, type: !109)
!8082 = !DILocation(line: 0, scope: !8074)
!8083 = !DILocation(line: 75, column: 22, scope: !8074)
!8084 = !DILocation(line: 75, column: 34, scope: !8074)
!8085 = !DILocation(line: 75, column: 2, scope: !8074)
!8086 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !861, file: !861, line: 641, type: !888, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8087)
!8087 = !{!8088, !8089, !8090}
!8088 = !DILocalVariable(name: "dev", arg: 1, scope: !8086, file: !861, line: 641, type: !890)
!8089 = !DILocalVariable(name: "old_flash_freq", scope: !8086, file: !861, line: 664, type: !110)
!8090 = !DILocalVariable(name: "new_flash_freq", scope: !8086, file: !861, line: 665, type: !110)
!8091 = !DILocation(line: 0, scope: !8086)
!8092 = !DILocation(line: 646, column: 2, scope: !8086)
!8093 = !DILocation(line: 667, column: 19, scope: !8086)
!8094 = !DILocation(line: 674, column: 21, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8086, file: !861, line: 674, column: 6)
!8096 = !DILocation(line: 674, column: 6, scope: !8086)
!8097 = !DILocation(line: 675, column: 3, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8095, file: !861, line: 674, column: 59)
!8099 = !DILocation(line: 676, column: 2, scope: !8098)
!8100 = !DILocation(line: 680, column: 2, scope: !8086)
!8101 = !DILocation(line: 683, column: 2, scope: !8086)
!8102 = !DILocation(line: 690, column: 3, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !861, line: 689, column: 9)
!8104 = distinct !DILexicalBlock(scope: !8086, file: !861, line: 685, column: 6)
!8105 = !DILocation(line: 695, column: 2, scope: !8086)
!8106 = !DILocation(line: 696, column: 2, scope: !8086)
!8107 = !DILocation(line: 696, column: 9, scope: !8086)
!8108 = !DILocation(line: 696, column: 34, scope: !8086)
!8109 = distinct !{!8109, !8106, !8110}
!8110 = !DILocation(line: 697, column: 2, scope: !8086)
!8111 = !DILocation(line: 720, column: 21, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8086, file: !861, line: 720, column: 6)
!8113 = !DILocation(line: 720, column: 6, scope: !8086)
!8114 = !DILocation(line: 721, column: 3, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8112, file: !861, line: 720, column: 60)
!8116 = !DILocation(line: 722, column: 2, scope: !8115)
!8117 = !DILocation(line: 725, column: 18, scope: !8086)
!8118 = !DILocation(line: 728, column: 2, scope: !8086)
!8119 = !DILocation(line: 730, column: 2, scope: !8086)
!8120 = !DILocation(line: 745, column: 2, scope: !8086)
!8121 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8122, file: !8122, line: 3275, type: !3368, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8122 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8123 = !DILocation(line: 3277, column: 21, scope: !8121)
!8124 = !DILocation(line: 3277, column: 3, scope: !8121)
!8125 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !861, file: !861, line: 507, type: !3086, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8126 = !DILocation(line: 534, column: 7, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !861, line: 534, column: 7)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !861, line: 532, column: 37)
!8129 = distinct !DILexicalBlock(scope: !8125, file: !861, line: 532, column: 6)
!8130 = !DILocation(line: 534, column: 28, scope: !8127)
!8131 = !DILocation(line: 534, column: 7, scope: !8128)
!8132 = !DILocation(line: 536, column: 4, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8127, file: !861, line: 534, column: 34)
!8134 = !DILocation(line: 537, column: 4, scope: !8133)
!8135 = !DILocation(line: 537, column: 11, scope: !8133)
!8136 = !DILocation(line: 537, column: 32, scope: !8133)
!8137 = distinct !{!8137, !8134, !8138}
!8138 = !DILocation(line: 539, column: 4, scope: !8133)
!8139 = !DILocation(line: 583, column: 3, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8141, file: !861, line: 577, column: 37)
!8141 = distinct !DILexicalBlock(scope: !8125, file: !861, line: 577, column: 6)
!8142 = !DILocation(line: 584, column: 3, scope: !8140)
!8143 = !DILocation(line: 584, column: 10, scope: !8140)
!8144 = !DILocation(line: 584, column: 31, scope: !8140)
!8145 = distinct !{!8145, !8142, !8146}
!8146 = !DILocation(line: 585, column: 3, scope: !8140)
!8147 = !DILocation(line: 627, column: 1, scope: !8125)
!8148 = distinct !DISubprogram(name: "set_up_plls", scope: !861, file: !861, line: 448, type: !3086, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8149 = !DILocation(line: 460, column: 6, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8148, file: !861, line: 460, column: 6)
!8151 = !DILocation(line: 460, column: 31, scope: !8150)
!8152 = !DILocation(line: 460, column: 6, scope: !8148)
!8153 = !DILocation(line: 461, column: 3, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8150, file: !861, line: 460, column: 67)
!8155 = !DILocation(line: 462, column: 3, scope: !8154)
!8156 = !DILocation(line: 463, column: 2, scope: !8154)
!8157 = !DILocation(line: 464, column: 2, scope: !8148)
!8158 = !DILocation(line: 488, column: 2, scope: !8148)
!8159 = !DILocation(line: 496, column: 2, scope: !8148)
!8160 = !DILocation(line: 499, column: 2, scope: !8148)
!8161 = !DILocation(line: 500, column: 2, scope: !8148)
!8162 = !DILocation(line: 500, column: 9, scope: !8148)
!8163 = !DILocation(line: 500, column: 30, scope: !8148)
!8164 = distinct !{!8164, !8161, !8165}
!8165 = !DILocation(line: 502, column: 2, scope: !8148)
!8166 = !DILocation(line: 505, column: 1, scope: !8148)
!8167 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8122, file: !8122, line: 3224, type: !6239, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8168)
!8168 = !{!8169}
!8169 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8167, file: !8122, line: 3224, type: !110)
!8170 = !DILocation(line: 0, scope: !8167)
!8171 = !DILocation(line: 3226, column: 3, scope: !8167)
!8172 = !DILocation(line: 3227, column: 1, scope: !8167)
!8173 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8122, file: !8122, line: 3188, type: !6239, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8174)
!8174 = !{!8175}
!8175 = !DILocalVariable(name: "Source", arg: 1, scope: !8173, file: !8122, line: 3188, type: !110)
!8176 = !DILocation(line: 0, scope: !8173)
!8177 = !DILocation(line: 3190, column: 3, scope: !8173)
!8178 = !DILocation(line: 3191, column: 1, scope: !8173)
!8179 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8122, file: !8122, line: 3204, type: !3368, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8180 = !DILocation(line: 3206, column: 21, scope: !8179)
!8181 = !DILocation(line: 3206, column: 3, scope: !8179)
!8182 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8122, file: !8122, line: 3240, type: !6239, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8183)
!8183 = !{!8184}
!8184 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8182, file: !8122, line: 3240, type: !110)
!8185 = !DILocation(line: 0, scope: !8182)
!8186 = !DILocation(line: 3242, column: 3, scope: !8182)
!8187 = !DILocation(line: 3243, column: 1, scope: !8182)
!8188 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8122, file: !8122, line: 3256, type: !6239, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8189)
!8189 = !{!8190}
!8190 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8188, file: !8122, line: 3256, type: !110)
!8191 = !DILocation(line: 0, scope: !8188)
!8192 = !DILocation(line: 3258, column: 3, scope: !8188)
!8193 = !DILocation(line: 3259, column: 1, scope: !8188)
!8194 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !861, file: !861, line: 409, type: !3086, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8195 = !DILocation(line: 412, column: 6, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8194, file: !861, line: 412, column: 6)
!8197 = !DILocation(line: 412, column: 27, scope: !8196)
!8198 = !DILocation(line: 412, column: 6, scope: !8194)
!8199 = !DILocation(line: 414, column: 3, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8196, file: !861, line: 412, column: 33)
!8201 = !DILocation(line: 415, column: 3, scope: !8200)
!8202 = !DILocation(line: 415, column: 10, scope: !8200)
!8203 = !DILocation(line: 415, column: 31, scope: !8200)
!8204 = distinct !{!8204, !8201, !8205}
!8205 = !DILocation(line: 417, column: 3, scope: !8200)
!8206 = !DILocation(line: 421, column: 2, scope: !8194)
!8207 = !DILocation(line: 422, column: 2, scope: !8194)
!8208 = !DILocation(line: 422, column: 9, scope: !8194)
!8209 = !DILocation(line: 422, column: 34, scope: !8194)
!8210 = distinct !{!8210, !8207, !8211}
!8211 = !DILocation(line: 423, column: 2, scope: !8194)
!8212 = !DILocation(line: 424, column: 1, scope: !8194)
!8213 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8122, file: !8122, line: 4195, type: !3086, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8214 = !DILocation(line: 4197, column: 3, scope: !8213)
!8215 = !DILocation(line: 4198, column: 1, scope: !8213)
!8216 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8122, file: !8122, line: 4184, type: !3086, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8217 = !DILocation(line: 4186, column: 3, scope: !8216)
!8218 = !DILocation(line: 4187, column: 1, scope: !8216)
!8219 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8122, file: !8122, line: 4205, type: !3368, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8220 = !DILocation(line: 4207, column: 11, scope: !8219)
!8221 = !DILocation(line: 4207, column: 44, scope: !8219)
!8222 = !DILocation(line: 4207, column: 3, scope: !8219)
!8223 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8122, file: !8122, line: 3007, type: !3368, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8224 = !DILocation(line: 3009, column: 11, scope: !8223)
!8225 = !DILocation(line: 3009, column: 44, scope: !8223)
!8226 = !DILocation(line: 3009, column: 3, scope: !8223)
!8227 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8122, file: !8122, line: 2987, type: !3086, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8228 = !DILocation(line: 2989, column: 3, scope: !8227)
!8229 = !DILocation(line: 2990, column: 1, scope: !8227)
!8230 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8122, file: !8122, line: 3143, type: !3086, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8231 = !DILocation(line: 3145, column: 3, scope: !8230)
!8232 = !DILocation(line: 3146, column: 1, scope: !8230)
!8233 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8122, file: !8122, line: 3163, type: !3368, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !1998)
!8234 = !DILocation(line: 3165, column: 11, scope: !8233)
!8235 = !DILocation(line: 3165, column: 46, scope: !8233)
!8236 = !DILocation(line: 3165, column: 3, scope: !8233)
!8237 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8238, file: !8238, line: 40, type: !3368, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !1998)
!8238 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8239 = !DILocation(line: 43, column: 3, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !8238, line: 42, column: 37)
!8241 = distinct !DILexicalBlock(scope: !8237, file: !8238, line: 42, column: 6)
!8242 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8238, file: !8238, line: 56, type: !3086, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !1998)
!8243 = !DILocation(line: 58, column: 2, scope: !8242)
!8244 = !DILocation(line: 62, column: 1, scope: !8242)
!8245 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8122, file: !8122, line: 4304, type: !8246, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !8248)
!8246 = !DISubroutineType(types: !8247)
!8247 = !{null, !110, !110, !110, !110}
!8248 = !{!8249, !8250, !8251, !8252}
!8249 = !DILocalVariable(name: "Source", arg: 1, scope: !8245, file: !8122, line: 4304, type: !110)
!8250 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8245, file: !8122, line: 4304, type: !110)
!8251 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8245, file: !8122, line: 4304, type: !110)
!8252 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8245, file: !8122, line: 4304, type: !110)
!8253 = !DILocation(line: 0, scope: !8245)
!8254 = !DILocation(line: 4306, column: 3, scope: !8245)
!8255 = !DILocation(line: 4308, column: 3, scope: !8245)
!8256 = !DILocation(line: 4312, column: 1, scope: !8245)
!8257 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8238, file: !8238, line: 69, type: !3086, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !1998)
!8258 = !DILocation(line: 72, column: 2, scope: !8257)
!8259 = !DILocation(line: 73, column: 1, scope: !8257)
!8260 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8261, file: !8261, line: 1185, type: !6239, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !8262)
!8261 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8262 = !{!8263, !8264}
!8263 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8260, file: !8261, line: 1185, type: !110)
!8264 = !DILocalVariable(name: "tmpreg", scope: !8260, file: !8261, line: 1187, type: !301)
!8265 = !DILocation(line: 0, scope: !8260)
!8266 = !DILocation(line: 1187, column: 3, scope: !8260)
!8267 = !DILocation(line: 1187, column: 17, scope: !8260)
!8268 = !DILocation(line: 1188, column: 3, scope: !8260)
!8269 = !DILocation(line: 1190, column: 12, scope: !8260)
!8270 = !DILocation(line: 1190, column: 10, scope: !8260)
!8271 = !DILocation(line: 1191, column: 9, scope: !8260)
!8272 = !DILocation(line: 1192, column: 1, scope: !8260)
!8273 = distinct !DISubprogram(name: "uart_console_init", scope: !992, file: !992, line: 588, type: !969, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !8274)
!8274 = !{!8275}
!8275 = !DILocalVariable(name: "arg", arg: 1, scope: !8273, file: !992, line: 588, type: !947)
!8276 = !DILocation(line: 0, scope: !8273)
!8277 = !DILocation(line: 593, column: 7, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8273, file: !992, line: 593, column: 6)
!8279 = !DILocation(line: 593, column: 6, scope: !8273)
!8280 = !DILocation(line: 597, column: 2, scope: !8273)
!8281 = !DILocation(line: 599, column: 2, scope: !8273)
!8282 = !DILocation(line: 600, column: 1, scope: !8273)
!8283 = distinct !DISubprogram(name: "device_is_ready", scope: !8284, file: !8284, line: 47, type: !8285, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !8287)
!8284 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!8285 = !DISubroutineType(types: !8286)
!8286 = !{!334, !947}
!8287 = !{!8288}
!8288 = !DILocalVariable(name: "dev", arg: 1, scope: !8283, file: !8284, line: 47, type: !947)
!8289 = !DILocation(line: 0, scope: !8283)
!8290 = !DILocation(line: 55, column: 2, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8283, file: !8284, line: 55, column: 2)
!8292 = !{i64 2154276055}
!8293 = !DILocation(line: 56, column: 9, scope: !8283)
!8294 = !DILocation(line: 56, column: 2, scope: !8283)
!8295 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !992, file: !992, line: 573, type: !3086, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !1998)
!8296 = !DILocation(line: 579, column: 2, scope: !8295)
!8297 = !DILocation(line: 581, column: 1, scope: !8295)
!8298 = distinct !DISubprogram(name: "console_out", scope: !992, file: !992, line: 77, type: !288, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !8299)
!8299 = !{!8300}
!8300 = !DILocalVariable(name: "c", arg: 1, scope: !8298, file: !992, line: 77, type: !109)
!8301 = !DILocation(line: 0, scope: !8298)
!8302 = !DILocation(line: 89, column: 11, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8298, file: !992, line: 89, column: 6)
!8304 = !DILocation(line: 89, column: 6, scope: !8298)
!8305 = !DILocation(line: 90, column: 3, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8303, file: !992, line: 89, column: 17)
!8307 = !DILocation(line: 91, column: 2, scope: !8306)
!8308 = !DILocation(line: 92, column: 34, scope: !8298)
!8309 = !DILocation(line: 92, column: 2, scope: !8298)
!8310 = !DILocation(line: 94, column: 2, scope: !8298)
!8311 = distinct !DISubprogram(name: "uart_poll_out", scope: !8312, file: !8312, line: 95, type: !965, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !8313)
!8312 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/philosophers")
!8313 = !{!8314, !8315}
!8314 = !DILocalVariable(name: "dev", arg: 1, scope: !8311, file: !8312, line: 95, type: !947)
!8315 = !DILocalVariable(name: "out_char", arg: 2, scope: !8311, file: !8312, line: 95, type: !168)
!8316 = !DILocation(line: 0, scope: !8311)
!8317 = !DILocation(line: 105, column: 2, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8311, file: !8312, line: 105, column: 2)
!8319 = !{i64 2154359446}
!8320 = !DILocation(line: 106, column: 2, scope: !8311)
!8321 = !DILocation(line: 107, column: 1, scope: !8311)
!8322 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !941, file: !941, line: 574, type: !965, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !8323)
!8323 = !{!8324, !8325, !8326}
!8324 = !DILocalVariable(name: "dev", arg: 1, scope: !8322, file: !941, line: 574, type: !947)
!8325 = !DILocalVariable(name: "out_char", arg: 2, scope: !8322, file: !941, line: 575, type: !168)
!8326 = !DILocalVariable(name: "api", scope: !8322, file: !941, line: 577, type: !938)
!8327 = !DILocation(line: 0, scope: !8322)
!8328 = !DILocation(line: 578, column: 40, scope: !8322)
!8329 = !DILocation(line: 580, column: 7, scope: !8322)
!8330 = !DILocation(line: 580, column: 2, scope: !8322)
!8331 = !DILocation(line: 581, column: 1, scope: !8322)
!8332 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !8285, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !8333)
!8333 = !{!8334}
!8334 = !DILocalVariable(name: "dev", arg: 1, scope: !8332, file: !321, line: 730, type: !947)
!8335 = !DILocation(line: 0, scope: !8332)
!8336 = !DILocation(line: 732, column: 9, scope: !8332)
!8337 = !DILocation(line: 732, column: 2, scope: !8332)
!8338 = distinct !DISubprogram(name: "uart_register_input", scope: !992, file: !992, line: 560, type: !8339, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !8386)
!8339 = !DISubroutineType(types: !8340)
!8340 = !{null, !8341, !8341, !8383}
!8341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8342, size: 32)
!8342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !119, line: 2208, size: 160, elements: !8343)
!8343 = !{!8344}
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8342, file: !119, line: 2209, baseType: !8345, size: 160)
!8345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !119, line: 1709, size: 160, elements: !8346)
!8346 = !{!8347, !8360, !8364}
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8345, file: !119, line: 1710, baseType: !8348, size: 64)
!8348 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8349, line: 46, baseType: !8350)
!8349 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8349, line: 41, size: 64, elements: !8351)
!8351 = !{!8352, !8359}
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8350, file: !8349, line: 42, baseType: !8353, size: 32)
!8353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8354, size: 32)
!8354 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8349, line: 39, baseType: !8355)
!8355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8349, line: 35, size: 32, elements: !8356)
!8356 = !{!8357}
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8355, file: !8349, line: 36, baseType: !8358, size: 32)
!8358 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8349, line: 32, baseType: !110)
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8350, file: !8349, line: 43, baseType: !8353, size: 32, offset: 32)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8345, file: !119, line: 1711, baseType: !8361, size: 32, offset: 64)
!8361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !8362)
!8362 = !{!8363}
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8361, file: !254, line: 52, baseType: !22, size: 32)
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8345, file: !119, line: 1712, baseType: !8365, size: 64, offset: 96)
!8365 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !8366)
!8366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !8367)
!8367 = !{!8368}
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8366, file: !123, line: 232, baseType: !8369, size: 64)
!8369 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !8370)
!8370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !8371)
!8371 = !{!8372, !8378}
!8372 = !DIDerivedType(tag: DW_TAG_member, scope: !8370, file: !128, line: 38, baseType: !8373, size: 32)
!8373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8370, file: !128, line: 38, size: 32, elements: !8374)
!8374 = !{!8375, !8377}
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8373, file: !128, line: 39, baseType: !8376, size: 32)
!8376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8370, size: 32)
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8373, file: !128, line: 40, baseType: !8376, size: 32)
!8378 = !DIDerivedType(tag: DW_TAG_member, scope: !8370, file: !128, line: 42, baseType: !8379, size: 32, offset: 32)
!8379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8370, file: !128, line: 42, size: 32, elements: !8380)
!8380 = !{!8381, !8382}
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8379, file: !128, line: 43, baseType: !8376, size: 32)
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8379, file: !128, line: 44, baseType: !8376, size: 32)
!8383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8384, size: 32)
!8384 = !DISubroutineType(types: !8385)
!8385 = !{!167, !1127, !167}
!8386 = !{!8387, !8388, !8389}
!8387 = !DILocalVariable(name: "avail", arg: 1, scope: !8338, file: !992, line: 560, type: !8341)
!8388 = !DILocalVariable(name: "lines", arg: 2, scope: !8338, file: !992, line: 560, type: !8341)
!8389 = !DILocalVariable(name: "completion", arg: 3, scope: !8338, file: !992, line: 561, type: !8383)
!8390 = !DILocation(line: 0, scope: !8338)
!8391 = !DILocation(line: 566, column: 1, scope: !8338)
!8392 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1171, file: !1171, line: 523, type: !1028, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8393)
!8393 = !{!8394, !8395, !8396, !8397, !8398}
!8394 = !DILocalVariable(name: "dev", arg: 1, scope: !8392, file: !1171, line: 523, type: !1030)
!8395 = !DILocalVariable(name: "pin", arg: 2, scope: !8392, file: !1171, line: 524, type: !1045)
!8396 = !DILocalVariable(name: "flags", arg: 3, scope: !8392, file: !1171, line: 524, type: !1046)
!8397 = !DILocalVariable(name: "err", scope: !8392, file: !1171, line: 526, type: !109)
!8398 = !DILocalVariable(name: "pincfg", scope: !8392, file: !1171, line: 527, type: !109)
!8399 = !DILocation(line: 0, scope: !8392)
!8400 = !DILocation(line: 527, column: 2, scope: !8392)
!8401 = !DILocation(line: 532, column: 8, scope: !8392)
!8402 = !DILocation(line: 533, column: 10, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8392, file: !1171, line: 533, column: 6)
!8404 = !DILocation(line: 533, column: 6, scope: !8392)
!8405 = !DILocation(line: 543, column: 13, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8392, file: !1171, line: 543, column: 6)
!8407 = !DILocation(line: 543, column: 28, scope: !8406)
!8408 = !DILocation(line: 543, column: 6, scope: !8392)
!8409 = !DILocation(line: 544, column: 14, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !1171, line: 544, column: 7)
!8411 = distinct !DILexicalBlock(scope: !8406, file: !1171, line: 543, column: 34)
!8412 = !DILocation(line: 544, column: 39, scope: !8410)
!8413 = !DILocation(line: 544, column: 7, scope: !8411)
!8414 = !DILocation(line: 545, column: 38, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8410, file: !1171, line: 544, column: 45)
!8416 = !DILocation(line: 545, column: 4, scope: !8415)
!8417 = !DILocation(line: 546, column: 3, scope: !8415)
!8418 = !DILocation(line: 546, column: 21, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8410, file: !1171, line: 546, column: 14)
!8420 = !DILocation(line: 546, column: 45, scope: !8419)
!8421 = !DILocation(line: 546, column: 14, scope: !8410)
!8422 = !DILocation(line: 547, column: 40, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8419, file: !1171, line: 546, column: 51)
!8424 = !DILocation(line: 547, column: 4, scope: !8423)
!8425 = !DILocation(line: 548, column: 3, scope: !8423)
!8426 = !DILocation(line: 551, column: 32, scope: !8392)
!8427 = !DILocation(line: 551, column: 37, scope: !8392)
!8428 = !DILocation(line: 551, column: 2, scope: !8392)
!8429 = !DILocation(line: 554, column: 6, scope: !8392)
!8430 = !DILocation(line: 562, column: 1, scope: !8392)
!8431 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1171, file: !1171, line: 410, type: !8432, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8434)
!8432 = !DISubroutineType(types: !8433)
!8433 = !{!109, !1030, !857}
!8434 = !{!8435, !8436, !8437, !8439}
!8435 = !DILocalVariable(name: "dev", arg: 1, scope: !8431, file: !1171, line: 410, type: !1030)
!8436 = !DILocalVariable(name: "value", arg: 2, scope: !8431, file: !1171, line: 410, type: !857)
!8437 = !DILocalVariable(name: "cfg", scope: !8431, file: !1171, line: 412, type: !8438)
!8438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!8439 = !DILocalVariable(name: "gpio", scope: !8431, file: !1171, line: 413, type: !1103)
!8440 = !DILocation(line: 0, scope: !8431)
!8441 = !DILocation(line: 412, column: 45, scope: !8431)
!8442 = !DILocation(line: 413, column: 44, scope: !8431)
!8443 = !DILocation(line: 415, column: 11, scope: !8431)
!8444 = !DILocation(line: 415, column: 9, scope: !8431)
!8445 = !DILocation(line: 417, column: 2, scope: !8431)
!8446 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1171, file: !1171, line: 420, type: !1055, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8447)
!8447 = !{!8448, !8449, !8450, !8451, !8452, !8453}
!8448 = !DILocalVariable(name: "dev", arg: 1, scope: !8446, file: !1171, line: 420, type: !1030)
!8449 = !DILocalVariable(name: "mask", arg: 2, scope: !8446, file: !1171, line: 421, type: !1057)
!8450 = !DILocalVariable(name: "value", arg: 3, scope: !8446, file: !1171, line: 422, type: !1052)
!8451 = !DILocalVariable(name: "cfg", scope: !8446, file: !1171, line: 424, type: !8438)
!8452 = !DILocalVariable(name: "gpio", scope: !8446, file: !1171, line: 425, type: !1103)
!8453 = !DILocalVariable(name: "port_value", scope: !8446, file: !1171, line: 426, type: !110)
!8454 = !DILocation(line: 0, scope: !8446)
!8455 = !DILocation(line: 424, column: 45, scope: !8446)
!8456 = !DILocation(line: 425, column: 44, scope: !8446)
!8457 = !DILocation(line: 430, column: 15, scope: !8446)
!8458 = !DILocation(line: 431, column: 46, scope: !8446)
!8459 = !DILocation(line: 431, column: 44, scope: !8446)
!8460 = !DILocation(line: 431, column: 61, scope: !8446)
!8461 = !DILocation(line: 431, column: 53, scope: !8446)
!8462 = !DILocation(line: 431, column: 2, scope: !8446)
!8463 = !DILocation(line: 435, column: 2, scope: !8446)
!8464 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1171, file: !1171, line: 438, type: !1060, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8465)
!8465 = !{!8466, !8467, !8468, !8469}
!8466 = !DILocalVariable(name: "dev", arg: 1, scope: !8464, file: !1171, line: 438, type: !1030)
!8467 = !DILocalVariable(name: "pins", arg: 2, scope: !8464, file: !1171, line: 439, type: !1057)
!8468 = !DILocalVariable(name: "cfg", scope: !8464, file: !1171, line: 441, type: !8438)
!8469 = !DILocalVariable(name: "gpio", scope: !8464, file: !1171, line: 442, type: !1103)
!8470 = !DILocation(line: 0, scope: !8464)
!8471 = !DILocation(line: 441, column: 45, scope: !8464)
!8472 = !DILocation(line: 442, column: 44, scope: !8464)
!8473 = !DILocation(line: 448, column: 2, scope: !8464)
!8474 = !DILocation(line: 450, column: 2, scope: !8464)
!8475 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1171, file: !1171, line: 453, type: !1060, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8476)
!8476 = !{!8477, !8478, !8479, !8480}
!8477 = !DILocalVariable(name: "dev", arg: 1, scope: !8475, file: !1171, line: 453, type: !1030)
!8478 = !DILocalVariable(name: "pins", arg: 2, scope: !8475, file: !1171, line: 454, type: !1057)
!8479 = !DILocalVariable(name: "cfg", scope: !8475, file: !1171, line: 456, type: !8438)
!8480 = !DILocalVariable(name: "gpio", scope: !8475, file: !1171, line: 457, type: !1103)
!8481 = !DILocation(line: 0, scope: !8475)
!8482 = !DILocation(line: 456, column: 45, scope: !8475)
!8483 = !DILocation(line: 457, column: 44, scope: !8475)
!8484 = !DILocation(line: 467, column: 2, scope: !8475)
!8485 = !DILocation(line: 470, column: 2, scope: !8475)
!8486 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1171, file: !1171, line: 473, type: !1060, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8487)
!8487 = !{!8488, !8489, !8490, !8491}
!8488 = !DILocalVariable(name: "dev", arg: 1, scope: !8486, file: !1171, line: 473, type: !1030)
!8489 = !DILocalVariable(name: "pins", arg: 2, scope: !8486, file: !1171, line: 474, type: !1057)
!8490 = !DILocalVariable(name: "cfg", scope: !8486, file: !1171, line: 476, type: !8438)
!8491 = !DILocalVariable(name: "gpio", scope: !8486, file: !1171, line: 477, type: !1103)
!8492 = !DILocation(line: 0, scope: !8486)
!8493 = !DILocation(line: 476, column: 45, scope: !8486)
!8494 = !DILocation(line: 477, column: 44, scope: !8486)
!8495 = !DILocation(line: 484, column: 2, scope: !8486)
!8496 = !DILocation(line: 487, column: 2, scope: !8486)
!8497 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1171, file: !1171, line: 594, type: !1066, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8498)
!8498 = !{!8499, !8500, !8501, !8502, !8503, !8504, !8506, !8507, !8508}
!8499 = !DILocalVariable(name: "dev", arg: 1, scope: !8497, file: !1171, line: 594, type: !1030)
!8500 = !DILocalVariable(name: "pin", arg: 2, scope: !8497, file: !1171, line: 595, type: !1045)
!8501 = !DILocalVariable(name: "mode", arg: 3, scope: !8497, file: !1171, line: 596, type: !1004)
!8502 = !DILocalVariable(name: "trig", arg: 4, scope: !8497, file: !1171, line: 597, type: !1010)
!8503 = !DILocalVariable(name: "cfg", scope: !8497, file: !1171, line: 599, type: !8438)
!8504 = !DILocalVariable(name: "data", scope: !8497, file: !1171, line: 600, type: !8505)
!8505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!8506 = !DILocalVariable(name: "edge", scope: !8497, file: !1171, line: 601, type: !109)
!8507 = !DILocalVariable(name: "err", scope: !8497, file: !1171, line: 602, type: !109)
!8508 = !DILabel(scope: !8497, name: "exit", file: !1171, line: 643)
!8509 = !DILocation(line: 0, scope: !8497)
!8510 = !DILocation(line: 599, column: 45, scope: !8497)
!8511 = !DILocation(line: 604, column: 6, scope: !8497)
!8512 = !DILocation(line: 605, column: 34, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8514, file: !1171, line: 605, column: 7)
!8514 = distinct !DILexicalBlock(scope: !8515, file: !1171, line: 604, column: 38)
!8515 = distinct !DILexicalBlock(scope: !8497, file: !1171, line: 604, column: 6)
!8516 = !DILocation(line: 605, column: 7, scope: !8513)
!8517 = !DILocation(line: 605, column: 47, scope: !8513)
!8518 = !DILocation(line: 605, column: 39, scope: !8513)
!8519 = !DILocation(line: 605, column: 7, scope: !8514)
!8520 = !DILocation(line: 606, column: 4, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8513, file: !1171, line: 605, column: 53)
!8522 = !DILocation(line: 607, column: 4, scope: !8521)
!8523 = !DILocation(line: 608, column: 4, scope: !8521)
!8524 = !DILocation(line: 609, column: 3, scope: !8521)
!8525 = !DILocation(line: 600, column: 38, scope: !8497)
!8526 = !DILocation(line: 620, column: 30, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8497, file: !1171, line: 620, column: 6)
!8528 = !DILocation(line: 620, column: 6, scope: !8527)
!8529 = !DILocation(line: 620, column: 57, scope: !8527)
!8530 = !DILocation(line: 620, column: 6, scope: !8497)
!8531 = !DILocation(line: 625, column: 29, scope: !8497)
!8532 = !DILocation(line: 625, column: 2, scope: !8497)
!8533 = !DILocation(line: 627, column: 2, scope: !8497)
!8534 = !DILocation(line: 630, column: 3, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8497, file: !1171, line: 627, column: 16)
!8536 = !DILocation(line: 633, column: 3, scope: !8535)
!8537 = !DILocation(line: 636, column: 3, scope: !8535)
!8538 = !DILocation(line: 639, column: 2, scope: !8497)
!8539 = !DILocation(line: 641, column: 2, scope: !8497)
!8540 = !DILocation(line: 643, column: 1, scope: !8497)
!8541 = !DILocation(line: 644, column: 2, scope: !8497)
!8542 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1171, file: !1171, line: 647, type: !1070, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8543)
!8543 = !{!8544, !8545, !8546, !8547}
!8544 = !DILocalVariable(name: "dev", arg: 1, scope: !8542, file: !1171, line: 647, type: !1030)
!8545 = !DILocalVariable(name: "callback", arg: 2, scope: !8542, file: !1171, line: 648, type: !1072)
!8546 = !DILocalVariable(name: "set", arg: 3, scope: !8542, file: !1171, line: 649, type: !334)
!8547 = !DILocalVariable(name: "data", scope: !8542, file: !1171, line: 651, type: !8505)
!8548 = !DILocation(line: 0, scope: !8542)
!8549 = !DILocation(line: 651, column: 38, scope: !8542)
!8550 = !DILocation(line: 653, column: 37, scope: !8542)
!8551 = !DILocation(line: 653, column: 9, scope: !8542)
!8552 = !DILocation(line: 653, column: 2, scope: !8542)
!8553 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8554, file: !8554, line: 38, type: !8555, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8558)
!8554 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8555 = !DISubroutineType(types: !8556)
!8556 = !{!109, !8557, !1072, !334}
!8557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!8558 = !{!8559, !8560, !8561}
!8559 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8553, file: !8554, line: 38, type: !8557)
!8560 = !DILocalVariable(name: "callback", arg: 2, scope: !8553, file: !8554, line: 39, type: !1072)
!8561 = !DILocalVariable(name: "set", arg: 3, scope: !8553, file: !8554, line: 40, type: !334)
!8562 = !DILocation(line: 0, scope: !8553)
!8563 = !DILocation(line: 42, column: 2, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8565, file: !8554, line: 42, column: 2)
!8565 = distinct !DILexicalBlock(scope: !8553, file: !8554, line: 42, column: 2)
!8566 = !DILocation(line: 42, column: 2, scope: !8565)
!8567 = !DILocation(line: 42, column: 2, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8564, file: !8554, line: 42, column: 2)
!8569 = !DILocation(line: 43, column: 2, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !8554, line: 43, column: 2)
!8571 = distinct !DILexicalBlock(scope: !8553, file: !8554, line: 43, column: 2)
!8572 = !DILocation(line: 43, column: 2, scope: !8571)
!8573 = !DILocation(line: 43, column: 2, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8570, file: !8554, line: 43, column: 2)
!8575 = !DILocation(line: 45, column: 7, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8553, file: !8554, line: 45, column: 6)
!8577 = !DILocation(line: 45, column: 6, scope: !8553)
!8578 = !DILocation(line: 46, column: 56, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !8554, line: 46, column: 7)
!8580 = distinct !DILexicalBlock(scope: !8576, file: !8554, line: 45, column: 38)
!8581 = !DILocation(line: 46, column: 8, scope: !8579)
!8582 = !DILocation(line: 46, column: 7, scope: !8580)
!8583 = !DILocation(line: 51, column: 13, scope: !8576)
!8584 = !DILocation(line: 56, column: 43, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8586, file: !8554, line: 55, column: 11)
!8586 = distinct !DILexicalBlock(scope: !8553, file: !8554, line: 55, column: 6)
!8587 = !DILocation(line: 56, column: 3, scope: !8585)
!8588 = !DILocation(line: 57, column: 2, scope: !8585)
!8589 = !DILocation(line: 60, column: 1, scope: !8553)
!8590 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1077, file: !1077, line: 261, type: !8591, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8593)
!8591 = !DISubroutineType(types: !8592)
!8592 = !{!334, !8557}
!8593 = !{!8594}
!8594 = !DILocalVariable(name: "list", arg: 1, scope: !8590, file: !1077, line: 261, type: !8557)
!8595 = !DILocation(line: 0, scope: !8590)
!8596 = !DILocation(line: 261, column: 1, scope: !8590)
!8597 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1077, file: !1077, line: 417, type: !8598, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8600)
!8598 = !DISubroutineType(types: !8599)
!8599 = !{!334, !8557, !1244}
!8600 = !{!8601, !8602, !8603, !8604}
!8601 = !DILocalVariable(name: "list", arg: 1, scope: !8597, file: !1077, line: 417, type: !8557)
!8602 = !DILocalVariable(name: "node", arg: 2, scope: !8597, file: !1077, line: 417, type: !1244)
!8603 = !DILocalVariable(name: "prev", scope: !8597, file: !1077, line: 417, type: !1244)
!8604 = !DILocalVariable(name: "test", scope: !8597, file: !1077, line: 417, type: !1244)
!8605 = !DILocation(line: 0, scope: !8597)
!8606 = !DILocation(line: 417, column: 1, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8597, file: !1077, line: 417, column: 1)
!8608 = !DILocation(line: 417, column: 1, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8607, file: !1077, line: 417, column: 1)
!8610 = !DILocation(line: 417, column: 1, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8612, file: !1077, line: 417, column: 1)
!8612 = distinct !DILexicalBlock(scope: !8609, file: !1077, line: 417, column: 1)
!8613 = !DILocation(line: 417, column: 1, scope: !8612)
!8614 = distinct !{!8614, !8606, !8606}
!8615 = !DILocation(line: 417, column: 1, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8611, file: !1077, line: 417, column: 1)
!8617 = !DILocation(line: 417, column: 1, scope: !8597)
!8618 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1077, file: !1077, line: 298, type: !8619, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8621)
!8619 = !DISubroutineType(types: !8620)
!8620 = !{null, !8557, !1244}
!8621 = !{!8622, !8623}
!8622 = !DILocalVariable(name: "list", arg: 1, scope: !8618, file: !1077, line: 298, type: !8557)
!8623 = !DILocalVariable(name: "node", arg: 2, scope: !8618, file: !1077, line: 298, type: !1244)
!8624 = !DILocation(line: 0, scope: !8618)
!8625 = !DILocation(line: 298, column: 1, scope: !8618)
!8626 = !DILocation(line: 298, column: 1, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8618, file: !1077, line: 298, column: 1)
!8628 = !DILocation(line: 298, column: 1, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8627, file: !1077, line: 298, column: 1)
!8630 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1077, file: !1077, line: 231, type: !8631, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8633)
!8631 = !DISubroutineType(types: !8632)
!8632 = !{!1244, !8557}
!8633 = !{!8634}
!8634 = !DILocalVariable(name: "list", arg: 1, scope: !8630, file: !1077, line: 231, type: !8557)
!8635 = !DILocation(line: 0, scope: !8630)
!8636 = !DILocation(line: 233, column: 15, scope: !8630)
!8637 = !DILocation(line: 233, column: 2, scope: !8630)
!8638 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1077, file: !1077, line: 209, type: !8639, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8641)
!8639 = !DISubroutineType(types: !8640)
!8640 = !{null, !1244, !1244}
!8641 = !{!8642, !8643}
!8642 = !DILocalVariable(name: "parent", arg: 1, scope: !8638, file: !1077, line: 209, type: !1244)
!8643 = !DILocalVariable(name: "child", arg: 2, scope: !8638, file: !1077, line: 209, type: !1244)
!8644 = !DILocation(line: 0, scope: !8638)
!8645 = !DILocation(line: 211, column: 10, scope: !8638)
!8646 = !DILocation(line: 211, column: 15, scope: !8638)
!8647 = !DILocation(line: 212, column: 1, scope: !8638)
!8648 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1077, file: !1077, line: 214, type: !8619, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8649)
!8649 = !{!8650, !8651}
!8650 = !DILocalVariable(name: "list", arg: 1, scope: !8648, file: !1077, line: 214, type: !8557)
!8651 = !DILocalVariable(name: "node", arg: 2, scope: !8648, file: !1077, line: 214, type: !1244)
!8652 = !DILocation(line: 0, scope: !8648)
!8653 = !DILocation(line: 216, column: 8, scope: !8648)
!8654 = !DILocation(line: 216, column: 13, scope: !8648)
!8655 = !DILocation(line: 217, column: 1, scope: !8648)
!8656 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1077, file: !1077, line: 243, type: !8631, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8657)
!8657 = !{!8658}
!8658 = !DILocalVariable(name: "list", arg: 1, scope: !8656, file: !1077, line: 243, type: !8557)
!8659 = !DILocation(line: 0, scope: !8656)
!8660 = !DILocation(line: 245, column: 15, scope: !8656)
!8661 = !DILocation(line: 245, column: 2, scope: !8656)
!8662 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1077, file: !1077, line: 219, type: !8619, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8663)
!8663 = !{!8664, !8665}
!8664 = !DILocalVariable(name: "list", arg: 1, scope: !8662, file: !1077, line: 219, type: !8557)
!8665 = !DILocalVariable(name: "node", arg: 2, scope: !8662, file: !1077, line: 219, type: !1244)
!8666 = !DILocation(line: 0, scope: !8662)
!8667 = !DILocation(line: 221, column: 8, scope: !8662)
!8668 = !DILocation(line: 221, column: 13, scope: !8662)
!8669 = !DILocation(line: 222, column: 1, scope: !8662)
!8670 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1077, file: !1077, line: 401, type: !8671, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8673)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{null, !8557, !1244, !1244}
!8673 = !{!8674, !8675, !8676}
!8674 = !DILocalVariable(name: "list", arg: 1, scope: !8670, file: !1077, line: 401, type: !8557)
!8675 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8670, file: !1077, line: 401, type: !1244)
!8676 = !DILocalVariable(name: "node", arg: 3, scope: !8670, file: !1077, line: 401, type: !1244)
!8677 = !DILocation(line: 0, scope: !8670)
!8678 = !DILocation(line: 401, column: 1, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8670, file: !1077, line: 401, column: 1)
!8680 = !DILocation(line: 0, scope: !8679)
!8681 = !DILocation(line: 401, column: 1, scope: !8670)
!8682 = !DILocation(line: 401, column: 1, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8679, file: !1077, line: 401, column: 1)
!8684 = !DILocation(line: 401, column: 1, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8683, file: !1077, line: 401, column: 1)
!8686 = !DILocation(line: 401, column: 1, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8685, file: !1077, line: 401, column: 1)
!8688 = !DILocation(line: 401, column: 1, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8679, file: !1077, line: 401, column: 1)
!8690 = !DILocation(line: 401, column: 1, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8689, file: !1077, line: 401, column: 1)
!8692 = !DILocation(line: 401, column: 1, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8691, file: !1077, line: 401, column: 1)
!8694 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1077, file: !1077, line: 285, type: !8695, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8697)
!8695 = !DISubroutineType(types: !8696)
!8696 = !{!1244, !1244}
!8697 = !{!8698}
!8698 = !DILocalVariable(name: "node", arg: 1, scope: !8694, file: !1077, line: 285, type: !1244)
!8699 = !DILocation(line: 0, scope: !8694)
!8700 = !DILocation(line: 285, column: 1, scope: !8694)
!8701 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1077, file: !1077, line: 274, type: !8695, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8702)
!8702 = !{!8703}
!8703 = !DILocalVariable(name: "node", arg: 1, scope: !8701, file: !1077, line: 274, type: !1244)
!8704 = !DILocation(line: 0, scope: !8701)
!8705 = !DILocation(line: 274, column: 1, scope: !8701)
!8706 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1077, file: !1077, line: 204, type: !8695, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8707)
!8707 = !{!8708}
!8708 = !DILocalVariable(name: "node", arg: 1, scope: !8706, file: !1077, line: 204, type: !1244)
!8709 = !DILocation(line: 0, scope: !8706)
!8710 = !DILocation(line: 206, column: 15, scope: !8706)
!8711 = !DILocation(line: 206, column: 2, scope: !8706)
!8712 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1171, file: !1171, line: 342, type: !288, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8713)
!8713 = !{!8714, !8715, !8716}
!8714 = !DILocalVariable(name: "pin", arg: 1, scope: !8712, file: !1171, line: 342, type: !109)
!8715 = !DILocalVariable(name: "line", scope: !8712, file: !1171, line: 344, type: !110)
!8716 = !DILocalVariable(name: "port", scope: !8712, file: !1171, line: 345, type: !109)
!8717 = !DILocation(line: 0, scope: !8712)
!8718 = !DILocation(line: 344, column: 18, scope: !8712)
!8719 = !{i32 983040, i32 0}
!8720 = !DILocation(line: 356, column: 9, scope: !8712)
!8721 = !DILocation(line: 370, column: 2, scope: !8712)
!8722 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1171, file: !1171, line: 37, type: !719, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8723)
!8723 = !{!8724, !8725, !8726}
!8724 = !DILocalVariable(name: "line", arg: 1, scope: !8722, file: !1171, line: 37, type: !109)
!8725 = !DILocalVariable(name: "arg", arg: 2, scope: !8722, file: !1171, line: 37, type: !108)
!8726 = !DILocalVariable(name: "data", scope: !8722, file: !1171, line: 39, type: !8505)
!8727 = !DILocation(line: 0, scope: !8722)
!8728 = !DILocation(line: 41, column: 29, scope: !8722)
!8729 = !DILocation(line: 41, column: 39, scope: !8722)
!8730 = !DILocation(line: 41, column: 44, scope: !8722)
!8731 = !DILocation(line: 41, column: 2, scope: !8722)
!8732 = !DILocation(line: 42, column: 1, scope: !8722)
!8733 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1171, file: !1171, line: 376, type: !8734, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8736)
!8734 = !DISubroutineType(types: !8735)
!8735 = !{!109, !109, !109}
!8736 = !{!8737, !8738, !8739, !8741, !8742}
!8737 = !DILocalVariable(name: "port", arg: 1, scope: !8733, file: !1171, line: 376, type: !109)
!8738 = !DILocalVariable(name: "pin", arg: 2, scope: !8733, file: !1171, line: 376, type: !109)
!8739 = !DILocalVariable(name: "clk", scope: !8733, file: !1171, line: 386, type: !8740)
!8740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!8741 = !DILocalVariable(name: "pclken", scope: !8733, file: !1171, line: 387, type: !1287)
!8742 = !DILocalVariable(name: "ret", scope: !8733, file: !1171, line: 396, type: !109)
!8743 = !DILocation(line: 0, scope: !8733)
!8744 = !DILocation(line: 387, column: 2, scope: !8733)
!8745 = !DILocation(line: 387, column: 22, scope: !8733)
!8746 = !DILocation(line: 399, column: 8, scope: !8733)
!8747 = !DILocation(line: 400, column: 10, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8733, file: !1171, line: 400, column: 6)
!8749 = !DILocation(line: 400, column: 6, scope: !8733)
!8750 = !DILocation(line: 405, column: 2, scope: !8733)
!8751 = !DILocation(line: 407, column: 2, scope: !8733)
!8752 = !DILocation(line: 408, column: 1, scope: !8733)
!8753 = distinct !DISubprogram(name: "clock_control_on", scope: !806, file: !806, line: 123, type: !1136, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8754)
!8754 = !{!8755, !8756, !8757}
!8755 = !DILocalVariable(name: "dev", arg: 1, scope: !8753, file: !806, line: 123, type: !1030)
!8756 = !DILocalVariable(name: "sys", arg: 2, scope: !8753, file: !806, line: 124, type: !901)
!8757 = !DILocalVariable(name: "api", scope: !8753, file: !806, line: 126, type: !1129)
!8758 = !DILocation(line: 0, scope: !8753)
!8759 = !DILocation(line: 127, column: 49, scope: !8753)
!8760 = !DILocation(line: 129, column: 14, scope: !8753)
!8761 = !DILocation(line: 129, column: 9, scope: !8753)
!8762 = !DILocation(line: 129, column: 2, scope: !8753)
!8763 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1171, file: !1171, line: 311, type: !7883, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8764)
!8764 = !{!8765, !8766, !8767}
!8765 = !DILocalVariable(name: "port", arg: 1, scope: !8763, file: !1171, line: 311, type: !109)
!8766 = !DILocalVariable(name: "pin", arg: 2, scope: !8763, file: !1171, line: 311, type: !109)
!8767 = !DILocalVariable(name: "line", scope: !8763, file: !1171, line: 313, type: !110)
!8768 = !DILocation(line: 0, scope: !8763)
!8769 = !DILocation(line: 313, column: 18, scope: !8763)
!8770 = !DILocation(line: 337, column: 2, scope: !8763)
!8771 = !DILocation(line: 340, column: 1, scope: !8763)
!8772 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1171, file: !1171, line: 295, type: !8773, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8775)
!8773 = !DISubroutineType(types: !8774)
!8774 = !{!110, !109}
!8775 = !{!8776}
!8776 = !DILocalVariable(name: "pin", arg: 1, scope: !8772, file: !1171, line: 295, type: !109)
!8777 = !DILocation(line: 0, scope: !8772)
!8778 = !DILocation(line: 307, column: 46, scope: !8772)
!8779 = !DILocation(line: 307, column: 27, scope: !8772)
!8780 = !DILocation(line: 307, column: 32, scope: !8772)
!8781 = !DILocation(line: 307, column: 14, scope: !8772)
!8782 = !DILocation(line: 307, column: 39, scope: !8772)
!8783 = !DILocation(line: 307, column: 2, scope: !8772)
!8784 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5991, file: !5991, line: 671, type: !8785, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8787)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{null, !110, !110}
!8787 = !{!8788, !8789}
!8788 = !DILocalVariable(name: "Port", arg: 1, scope: !8784, file: !5991, line: 671, type: !110)
!8789 = !DILocalVariable(name: "Line", arg: 2, scope: !8784, file: !5991, line: 671, type: !110)
!8790 = !DILocation(line: 0, scope: !8784)
!8791 = !DILocation(line: 673, column: 3, scope: !8784)
!8792 = !DILocalVariable(name: "value", arg: 1, scope: !8793, file: !6144, line: 373, type: !110)
!8793 = distinct !DISubprogram(name: "__RBIT", scope: !6144, file: !6144, line: 373, type: !7206, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8794)
!8794 = !{!8792, !8795}
!8795 = !DILocalVariable(name: "result", scope: !8793, file: !6144, line: 375, type: !110)
!8796 = !DILocation(line: 0, scope: !8793, inlinedAt: !8797)
!8797 = distinct !DILocation(line: 673, column: 3, scope: !8784)
!8798 = !DILocation(line: 380, column: 4, scope: !8793, inlinedAt: !8797)
!8799 = !{i64 2834086}
!8800 = !DILocalVariable(name: "value", arg: 1, scope: !8801, file: !6144, line: 403, type: !110)
!8801 = distinct !DISubprogram(name: "__CLZ", scope: !6144, file: !6144, line: 403, type: !8802, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8804)
!8802 = !DISubroutineType(types: !8803)
!8803 = !{!167, !110}
!8804 = !{!8800}
!8805 = !DILocation(line: 0, scope: !8801, inlinedAt: !8806)
!8806 = distinct !DILocation(line: 673, column: 3, scope: !8784)
!8807 = !DILocation(line: 414, column: 7, scope: !8801, inlinedAt: !8806)
!8808 = !DILocation(line: 674, column: 1, scope: !8784)
!8809 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8554, file: !8554, line: 69, type: !8810, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8812)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{null, !8557, !1030, !110}
!8812 = !{!8813, !8814, !8815, !8816, !8817}
!8813 = !DILocalVariable(name: "list", arg: 1, scope: !8809, file: !8554, line: 69, type: !8557)
!8814 = !DILocalVariable(name: "port", arg: 2, scope: !8809, file: !8554, line: 70, type: !1030)
!8815 = !DILocalVariable(name: "pins", arg: 3, scope: !8809, file: !8554, line: 71, type: !110)
!8816 = !DILocalVariable(name: "cb", scope: !8809, file: !8554, line: 73, type: !1072)
!8817 = !DILocalVariable(name: "tmp", scope: !8809, file: !8554, line: 73, type: !1072)
!8818 = !DILocation(line: 0, scope: !8809)
!8819 = !DILocation(line: 75, column: 2, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8809, file: !8554, line: 75, column: 2)
!8821 = !DILocation(line: 0, scope: !8820)
!8822 = !DILocation(line: 76, column: 11, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !8554, line: 76, column: 7)
!8824 = distinct !DILexicalBlock(scope: !8825, file: !8554, line: 75, column: 57)
!8825 = distinct !DILexicalBlock(scope: !8820, file: !8554, line: 75, column: 2)
!8826 = !DILocation(line: 76, column: 20, scope: !8823)
!8827 = !DILocation(line: 76, column: 7, scope: !8824)
!8828 = !DILocation(line: 77, column: 4, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8830, file: !8554, line: 77, column: 4)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !8554, line: 77, column: 4)
!8831 = distinct !DILexicalBlock(scope: !8823, file: !8554, line: 76, column: 28)
!8832 = !DILocation(line: 77, column: 4, scope: !8830)
!8833 = !DILocation(line: 77, column: 4, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8829, file: !8554, line: 77, column: 4)
!8835 = !DILocation(line: 78, column: 4, scope: !8831)
!8836 = !DILocation(line: 79, column: 3, scope: !8831)
!8837 = !DILocation(line: 75, column: 2, scope: !8825)
!8838 = !DILocation(line: 81, column: 1, scope: !8809)
!8839 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5991, file: !5991, line: 710, type: !7206, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8840)
!8840 = !{!8841}
!8841 = !DILocalVariable(name: "Line", arg: 1, scope: !8839, file: !5991, line: 710, type: !110)
!8842 = !DILocation(line: 0, scope: !8839)
!8843 = !DILocation(line: 712, column: 21, scope: !8839)
!8844 = !DILocation(line: 0, scope: !8793, inlinedAt: !8845)
!8845 = distinct !DILocation(line: 712, column: 76, scope: !8839)
!8846 = !DILocation(line: 380, column: 4, scope: !8793, inlinedAt: !8845)
!8847 = !DILocation(line: 0, scope: !8801, inlinedAt: !8848)
!8848 = distinct !DILocation(line: 712, column: 76, scope: !8839)
!8849 = !DILocation(line: 414, column: 7, scope: !8801, inlinedAt: !8848)
!8850 = !DILocation(line: 712, column: 73, scope: !8839)
!8851 = !DILocation(line: 712, column: 3, scope: !8839)
!8852 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8853, file: !8853, line: 910, type: !8854, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8856)
!8853 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8854 = !DISubroutineType(types: !8855)
!8855 = !{null, !1103, !110}
!8856 = !{!8857, !8858}
!8857 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8852, file: !8853, line: 910, type: !1103)
!8858 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8852, file: !8853, line: 910, type: !110)
!8859 = !DILocation(line: 0, scope: !8852)
!8860 = !DILocation(line: 912, column: 3, scope: !8852)
!8861 = !DILocation(line: 913, column: 1, scope: !8852)
!8862 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8853, file: !8853, line: 823, type: !8863, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8865)
!8863 = !DISubroutineType(types: !8864)
!8864 = !{!110, !1103}
!8865 = !{!8866}
!8866 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8862, file: !8853, line: 823, type: !1103)
!8867 = !DILocation(line: 0, scope: !8862)
!8868 = !DILocation(line: 825, column: 21, scope: !8862)
!8869 = !DILocation(line: 825, column: 3, scope: !8862)
!8870 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8853, file: !8853, line: 812, type: !8854, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8871)
!8871 = !{!8872, !8873}
!8872 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8870, file: !8853, line: 812, type: !1103)
!8873 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8870, file: !8853, line: 812, type: !110)
!8874 = !DILocation(line: 0, scope: !8870)
!8875 = !DILocation(line: 814, column: 3, scope: !8870)
!8876 = !DILocation(line: 815, column: 1, scope: !8870)
!8877 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8853, file: !8853, line: 771, type: !8863, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8878)
!8878 = !{!8879}
!8879 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8877, file: !8853, line: 771, type: !1103)
!8880 = !DILocation(line: 0, scope: !8877)
!8881 = !DILocation(line: 773, column: 21, scope: !8877)
!8882 = !DILocation(line: 773, column: 3, scope: !8877)
!8883 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1171, file: !1171, line: 47, type: !8884, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8886)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{!109, !1046, !2533}
!8886 = !{!8887, !8888}
!8887 = !DILocalVariable(name: "flags", arg: 1, scope: !8883, file: !1171, line: 47, type: !1046)
!8888 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8883, file: !1171, line: 47, type: !2533)
!8889 = !DILocation(line: 0, scope: !8883)
!8890 = !DILocation(line: 50, column: 13, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8883, file: !1171, line: 50, column: 6)
!8892 = !DILocation(line: 50, column: 28, scope: !8891)
!8893 = !DILocation(line: 50, column: 6, scope: !8883)
!8894 = !DILocation(line: 53, column: 11, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8891, file: !1171, line: 50, column: 34)
!8896 = !DILocation(line: 55, column: 14, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8895, file: !1171, line: 55, column: 7)
!8898 = !DILocation(line: 55, column: 35, scope: !8897)
!8899 = !DILocation(line: 55, column: 7, scope: !8895)
!8900 = !DILocation(line: 56, column: 14, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !1171, line: 56, column: 8)
!8902 = distinct !DILexicalBlock(scope: !8897, file: !1171, line: 55, column: 41)
!8903 = !DILocation(line: 56, column: 8, scope: !8902)
!8904 = !DILocation(line: 0, scope: !8897)
!8905 = !DILocation(line: 66, column: 14, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8895, file: !1171, line: 66, column: 7)
!8907 = !DILocation(line: 66, column: 30, scope: !8906)
!8908 = !DILocation(line: 66, column: 7, scope: !8895)
!8909 = !DILocation(line: 67, column: 12, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8906, file: !1171, line: 66, column: 36)
!8911 = !DILocation(line: 68, column: 3, scope: !8910)
!8912 = !DILocation(line: 68, column: 21, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8906, file: !1171, line: 68, column: 14)
!8914 = !DILocation(line: 68, column: 39, scope: !8913)
!8915 = !DILocation(line: 68, column: 14, scope: !8906)
!8916 = !DILocation(line: 69, column: 12, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8913, file: !1171, line: 68, column: 45)
!8918 = !DILocation(line: 70, column: 3, scope: !8917)
!8919 = !DILocation(line: 72, column: 21, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8891, file: !1171, line: 72, column: 14)
!8921 = !DILocation(line: 72, column: 35, scope: !8920)
!8922 = !DILocation(line: 72, column: 14, scope: !8891)
!8923 = !DILocation(line: 77, column: 14, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8925, file: !1171, line: 77, column: 7)
!8925 = distinct !DILexicalBlock(scope: !8920, file: !1171, line: 72, column: 41)
!8926 = !DILocation(line: 77, column: 30, scope: !8924)
!8927 = !DILocation(line: 77, column: 7, scope: !8925)
!8928 = !DILocation(line: 0, scope: !8891)
!8929 = !DILocation(line: 90, column: 1, scope: !8883)
!8930 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1171, file: !1171, line: 157, type: !8931, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8933)
!8931 = !DISubroutineType(types: !8932)
!8932 = !{null, !1030, !109, !109, !109}
!8933 = !{!8934, !8935, !8936, !8937, !8938, !8939, !8940, !8941, !8942, !8943, !8944}
!8934 = !DILocalVariable(name: "dev", arg: 1, scope: !8930, file: !1171, line: 157, type: !1030)
!8935 = !DILocalVariable(name: "pin", arg: 2, scope: !8930, file: !1171, line: 157, type: !109)
!8936 = !DILocalVariable(name: "conf", arg: 3, scope: !8930, file: !1171, line: 158, type: !109)
!8937 = !DILocalVariable(name: "func", arg: 4, scope: !8930, file: !1171, line: 158, type: !109)
!8938 = !DILocalVariable(name: "cfg", scope: !8930, file: !1171, line: 160, type: !8438)
!8939 = !DILocalVariable(name: "gpio", scope: !8930, file: !1171, line: 161, type: !1103)
!8940 = !DILocalVariable(name: "pin_ll", scope: !8930, file: !1171, line: 163, type: !109)
!8941 = !DILocalVariable(name: "mode", scope: !8930, file: !1171, line: 227, type: !32)
!8942 = !DILocalVariable(name: "otype", scope: !8930, file: !1171, line: 227, type: !32)
!8943 = !DILocalVariable(name: "ospeed", scope: !8930, file: !1171, line: 227, type: !32)
!8944 = !DILocalVariable(name: "pupd", scope: !8930, file: !1171, line: 227, type: !32)
!8945 = !DILocation(line: 0, scope: !8930)
!8946 = !DILocation(line: 160, column: 45, scope: !8930)
!8947 = !DILocation(line: 161, column: 44, scope: !8930)
!8948 = !DILocation(line: 163, column: 15, scope: !8930)
!8949 = !DILocation(line: 229, column: 14, scope: !8930)
!8950 = !DILocation(line: 246, column: 47, scope: !8930)
!8951 = !DILocation(line: 246, column: 2, scope: !8930)
!8952 = !DILocation(line: 248, column: 43, scope: !8930)
!8953 = !DILocation(line: 248, column: 2, scope: !8930)
!8954 = !DILocation(line: 250, column: 40, scope: !8930)
!8955 = !DILocation(line: 250, column: 2, scope: !8930)
!8956 = !DILocation(line: 252, column: 11, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8930, file: !1171, line: 252, column: 6)
!8958 = !DILocation(line: 252, column: 6, scope: !8930)
!8959 = !DILocation(line: 253, column: 11, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !1171, line: 253, column: 7)
!8961 = distinct !DILexicalBlock(scope: !8957, file: !1171, line: 252, column: 36)
!8962 = !DILocation(line: 253, column: 7, scope: !8961)
!8963 = !DILocation(line: 254, column: 4, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8960, file: !1171, line: 253, column: 16)
!8965 = !DILocation(line: 255, column: 3, scope: !8964)
!8966 = !DILocation(line: 256, column: 4, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8960, file: !1171, line: 255, column: 10)
!8968 = !DILocation(line: 260, column: 40, scope: !8930)
!8969 = !DILocation(line: 260, column: 2, scope: !8930)
!8970 = !DILocation(line: 265, column: 1, scope: !8930)
!8971 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1171, file: !1171, line: 137, type: !8773, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8972)
!8972 = !{!8973, !8974}
!8973 = !DILocalVariable(name: "pin", arg: 1, scope: !8971, file: !1171, line: 137, type: !109)
!8974 = !DILocalVariable(name: "pinval", scope: !8971, file: !1171, line: 139, type: !110)
!8975 = !DILocation(line: 0, scope: !8971)
!8976 = !DILocation(line: 149, column: 13, scope: !8971)
!8977 = !DILocation(line: 151, column: 2, scope: !8971)
!8978 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8853, file: !8853, line: 342, type: !8979, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8981)
!8979 = !DISubroutineType(types: !8980)
!8980 = !{null, !1103, !110, !110}
!8981 = !{!8982, !8983, !8984}
!8982 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8978, file: !8853, line: 342, type: !1103)
!8983 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8978, file: !8853, line: 342, type: !110)
!8984 = !DILocalVariable(name: "OutputType", arg: 3, scope: !8978, file: !8853, line: 342, type: !110)
!8985 = !DILocation(line: 0, scope: !8978)
!8986 = !DILocation(line: 344, column: 3, scope: !8978)
!8987 = !DILocation(line: 345, column: 1, scope: !8978)
!8988 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8853, file: !8853, line: 413, type: !8979, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !8989)
!8989 = !{!8990, !8991, !8992}
!8990 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8988, file: !8853, line: 413, type: !1103)
!8991 = !DILocalVariable(name: "Pin", arg: 2, scope: !8988, file: !8853, line: 413, type: !110)
!8992 = !DILocalVariable(name: "Speed", arg: 3, scope: !8988, file: !8853, line: 413, type: !110)
!8993 = !DILocation(line: 0, scope: !8988)
!8994 = !DILocation(line: 415, column: 3, scope: !8988)
!8995 = !DILocation(line: 0, scope: !8793, inlinedAt: !8996)
!8996 = distinct !DILocation(line: 415, column: 3, scope: !8988)
!8997 = !DILocation(line: 380, column: 4, scope: !8793, inlinedAt: !8996)
!8998 = !DILocation(line: 0, scope: !8801, inlinedAt: !8999)
!8999 = distinct !DILocation(line: 415, column: 3, scope: !8988)
!9000 = !DILocation(line: 414, column: 7, scope: !8801, inlinedAt: !8999)
!9001 = !DILocation(line: 0, scope: !8793, inlinedAt: !9002)
!9002 = distinct !DILocation(line: 415, column: 3, scope: !8988)
!9003 = !DILocation(line: 0, scope: !8801, inlinedAt: !9004)
!9004 = distinct !DILocation(line: 415, column: 3, scope: !8988)
!9005 = !DILocation(line: 417, column: 1, scope: !8988)
!9006 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8853, file: !8853, line: 484, type: !8979, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !9007)
!9007 = !{!9008, !9009, !9010}
!9008 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9006, file: !8853, line: 484, type: !1103)
!9009 = !DILocalVariable(name: "Pin", arg: 2, scope: !9006, file: !8853, line: 484, type: !110)
!9010 = !DILocalVariable(name: "Pull", arg: 3, scope: !9006, file: !8853, line: 484, type: !110)
!9011 = !DILocation(line: 0, scope: !9006)
!9012 = !DILocation(line: 486, column: 3, scope: !9006)
!9013 = !DILocation(line: 0, scope: !8793, inlinedAt: !9014)
!9014 = distinct !DILocation(line: 486, column: 3, scope: !9006)
!9015 = !DILocation(line: 380, column: 4, scope: !8793, inlinedAt: !9014)
!9016 = !DILocation(line: 0, scope: !8801, inlinedAt: !9017)
!9017 = distinct !DILocation(line: 486, column: 3, scope: !9006)
!9018 = !DILocation(line: 414, column: 7, scope: !8801, inlinedAt: !9017)
!9019 = !DILocation(line: 0, scope: !8793, inlinedAt: !9020)
!9020 = distinct !DILocation(line: 486, column: 3, scope: !9006)
!9021 = !DILocation(line: 0, scope: !8801, inlinedAt: !9022)
!9022 = distinct !DILocation(line: 486, column: 3, scope: !9006)
!9023 = !DILocation(line: 487, column: 1, scope: !9006)
!9024 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8853, file: !8853, line: 556, type: !8979, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !9025)
!9025 = !{!9026, !9027, !9028}
!9026 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9024, file: !8853, line: 556, type: !1103)
!9027 = !DILocalVariable(name: "Pin", arg: 2, scope: !9024, file: !8853, line: 556, type: !110)
!9028 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9024, file: !8853, line: 556, type: !110)
!9029 = !DILocation(line: 0, scope: !9024)
!9030 = !DILocation(line: 558, column: 3, scope: !9024)
!9031 = !DILocation(line: 0, scope: !8793, inlinedAt: !9032)
!9032 = distinct !DILocation(line: 558, column: 3, scope: !9024)
!9033 = !DILocation(line: 380, column: 4, scope: !8793, inlinedAt: !9032)
!9034 = !DILocation(line: 0, scope: !8801, inlinedAt: !9035)
!9035 = distinct !DILocation(line: 558, column: 3, scope: !9024)
!9036 = !DILocation(line: 414, column: 7, scope: !8801, inlinedAt: !9035)
!9037 = !DILocation(line: 0, scope: !8793, inlinedAt: !9038)
!9038 = distinct !DILocation(line: 558, column: 3, scope: !9024)
!9039 = !DILocation(line: 0, scope: !8801, inlinedAt: !9040)
!9040 = distinct !DILocation(line: 558, column: 3, scope: !9024)
!9041 = !DILocation(line: 560, column: 1, scope: !9024)
!9042 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8853, file: !8853, line: 633, type: !8979, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !9043)
!9043 = !{!9044, !9045, !9046}
!9044 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9042, file: !8853, line: 633, type: !1103)
!9045 = !DILocalVariable(name: "Pin", arg: 2, scope: !9042, file: !8853, line: 633, type: !110)
!9046 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9042, file: !8853, line: 633, type: !110)
!9047 = !DILocation(line: 0, scope: !9042)
!9048 = !DILocation(line: 635, column: 3, scope: !9042)
!9049 = !DILocation(line: 0, scope: !8793, inlinedAt: !9050)
!9050 = distinct !DILocation(line: 635, column: 3, scope: !9042)
!9051 = !DILocation(line: 380, column: 4, scope: !8793, inlinedAt: !9050)
!9052 = !DILocation(line: 0, scope: !8801, inlinedAt: !9053)
!9053 = distinct !DILocation(line: 635, column: 3, scope: !9042)
!9054 = !DILocation(line: 414, column: 7, scope: !8801, inlinedAt: !9053)
!9055 = !DILocation(line: 0, scope: !8793, inlinedAt: !9056)
!9056 = distinct !DILocation(line: 635, column: 3, scope: !9042)
!9057 = !DILocation(line: 0, scope: !8801, inlinedAt: !9058)
!9058 = distinct !DILocation(line: 635, column: 3, scope: !9042)
!9059 = !DILocation(line: 637, column: 1, scope: !9042)
!9060 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8853, file: !8853, line: 273, type: !8979, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !9061)
!9061 = !{!9062, !9063, !9064}
!9062 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9060, file: !8853, line: 273, type: !1103)
!9063 = !DILocalVariable(name: "Pin", arg: 2, scope: !9060, file: !8853, line: 273, type: !110)
!9064 = !DILocalVariable(name: "Mode", arg: 3, scope: !9060, file: !8853, line: 273, type: !110)
!9065 = !DILocation(line: 0, scope: !9060)
!9066 = !DILocation(line: 275, column: 3, scope: !9060)
!9067 = !DILocation(line: 0, scope: !8793, inlinedAt: !9068)
!9068 = distinct !DILocation(line: 275, column: 3, scope: !9060)
!9069 = !DILocation(line: 380, column: 4, scope: !8793, inlinedAt: !9068)
!9070 = !DILocation(line: 0, scope: !8801, inlinedAt: !9071)
!9071 = distinct !DILocation(line: 275, column: 3, scope: !9060)
!9072 = !DILocation(line: 414, column: 7, scope: !8801, inlinedAt: !9071)
!9073 = !DILocation(line: 0, scope: !8793, inlinedAt: !9074)
!9074 = distinct !DILocation(line: 275, column: 3, scope: !9060)
!9075 = !DILocation(line: 0, scope: !8801, inlinedAt: !9076)
!9076 = distinct !DILocation(line: 275, column: 3, scope: !9060)
!9077 = !DILocation(line: 276, column: 1, scope: !9060)
!9078 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1171, file: !1171, line: 698, type: !1184, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !9079)
!9079 = !{!9080, !9081, !9082}
!9080 = !DILocalVariable(name: "dev", arg: 1, scope: !9078, file: !1171, line: 698, type: !1030)
!9081 = !DILocalVariable(name: "data", scope: !9078, file: !1171, line: 700, type: !8505)
!9082 = !DILocalVariable(name: "ret", scope: !9078, file: !1171, line: 701, type: !109)
!9083 = !DILocation(line: 0, scope: !9078)
!9084 = !DILocation(line: 700, column: 38, scope: !9078)
!9085 = !DILocation(line: 703, column: 8, scope: !9078)
!9086 = !DILocation(line: 703, column: 12, scope: !9078)
!9087 = !DILocation(line: 705, column: 7, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9078, file: !1171, line: 705, column: 6)
!9089 = !DILocation(line: 705, column: 6, scope: !9078)
!9090 = !DILocation(line: 722, column: 8, scope: !9078)
!9091 = !DILocation(line: 723, column: 10, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9078, file: !1171, line: 723, column: 6)
!9093 = !DILocation(line: 723, column: 6, scope: !9078)
!9094 = !DILocation(line: 731, column: 1, scope: !9078)
!9095 = distinct !DISubprogram(name: "device_is_ready", scope: !8284, file: !8284, line: 47, type: !9096, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !9098)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{!334, !1030}
!9098 = !{!9099}
!9099 = !DILocalVariable(name: "dev", arg: 1, scope: !9095, file: !8284, line: 47, type: !1030)
!9100 = !DILocation(line: 0, scope: !9095)
!9101 = !DILocation(line: 55, column: 2, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9095, file: !8284, line: 55, column: 2)
!9103 = !{i64 2154267262}
!9104 = !DILocation(line: 56, column: 9, scope: !9095)
!9105 = !DILocation(line: 56, column: 2, scope: !9095)
!9106 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1171, file: !1171, line: 270, type: !9107, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !9109)
!9107 = !DISubroutineType(types: !9108)
!9108 = !{!109, !1030, !334}
!9109 = !{!9110, !9111, !9112, !9113, !9114}
!9110 = !DILocalVariable(name: "dev", arg: 1, scope: !9106, file: !1171, line: 270, type: !1030)
!9111 = !DILocalVariable(name: "on", arg: 2, scope: !9106, file: !1171, line: 270, type: !334)
!9112 = !DILocalVariable(name: "cfg", scope: !9106, file: !1171, line: 272, type: !8438)
!9113 = !DILocalVariable(name: "ret", scope: !9106, file: !1171, line: 273, type: !109)
!9114 = !DILocalVariable(name: "clk", scope: !9106, file: !1171, line: 278, type: !8740)
!9115 = !DILocation(line: 0, scope: !9106)
!9116 = !DILocation(line: 272, column: 45, scope: !9106)
!9117 = !DILocation(line: 282, column: 38, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !1171, line: 280, column: 10)
!9119 = distinct !DILexicalBlock(scope: !9106, file: !1171, line: 280, column: 6)
!9120 = !DILocation(line: 282, column: 6, scope: !9118)
!9121 = !DILocation(line: 281, column: 9, scope: !9118)
!9122 = !DILocation(line: 293, column: 1, scope: !9106)
!9123 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !9096, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !9124)
!9124 = !{!9125}
!9125 = !DILocalVariable(name: "dev", arg: 1, scope: !9123, file: !321, line: 730, type: !1030)
!9126 = !DILocation(line: 0, scope: !9123)
!9127 = !DILocation(line: 732, column: 9, scope: !9123)
!9128 = !DILocation(line: 732, column: 2, scope: !9123)
!9129 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1171, file: !1171, line: 496, type: !9130, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1001, retainedNodes: !9132)
!9130 = !DISubroutineType(types: !9131)
!9131 = !{!109, !1030, !109, !109, !109}
!9132 = !{!9133, !9134, !9135, !9136, !9137, !9138}
!9133 = !DILocalVariable(name: "dev", arg: 1, scope: !9129, file: !1171, line: 496, type: !1030)
!9134 = !DILocalVariable(name: "pin", arg: 2, scope: !9129, file: !1171, line: 496, type: !109)
!9135 = !DILocalVariable(name: "conf", arg: 3, scope: !9129, file: !1171, line: 496, type: !109)
!9136 = !DILocalVariable(name: "func", arg: 4, scope: !9129, file: !1171, line: 496, type: !109)
!9137 = !DILocalVariable(name: "ret", scope: !9129, file: !1171, line: 498, type: !109)
!9138 = !DILocalVariable(name: "gpio_out", scope: !9139, file: !1171, line: 508, type: !110)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !1171, line: 507, column: 27)
!9140 = distinct !DILexicalBlock(scope: !9129, file: !1171, line: 507, column: 6)
!9141 = !DILocation(line: 0, scope: !9129)
!9142 = !DILocation(line: 505, column: 2, scope: !9129)
!9143 = !DILocation(line: 507, column: 11, scope: !9140)
!9144 = !DILocation(line: 507, column: 6, scope: !9129)
!9145 = !DILocation(line: 508, column: 28, scope: !9139)
!9146 = !DILocation(line: 0, scope: !9139)
!9147 = !DILocation(line: 510, column: 16, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9139, file: !1171, line: 510, column: 7)
!9149 = !DILocation(line: 0, scope: !9148)
!9150 = !DILocation(line: 510, column: 7, scope: !9139)
!9151 = !DILocation(line: 511, column: 4, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9148, file: !1171, line: 510, column: 32)
!9153 = !DILocation(line: 512, column: 3, scope: !9152)
!9154 = !DILocation(line: 513, column: 4, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !1171, line: 512, column: 39)
!9156 = distinct !DILexicalBlock(scope: !9148, file: !1171, line: 512, column: 14)
!9157 = !DILocation(line: 514, column: 3, scope: !9155)
!9158 = !DILocation(line: 518, column: 1, scope: !9129)
!9159 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1444, file: !1444, line: 526, type: !1347, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9160)
!9160 = !{!9161, !9162, !9163}
!9161 = !DILocalVariable(name: "dev", arg: 1, scope: !9159, file: !1444, line: 526, type: !1349)
!9162 = !DILocalVariable(name: "c", arg: 2, scope: !9159, file: !1444, line: 526, type: !962)
!9163 = !DILocalVariable(name: "config", scope: !9159, file: !1444, line: 528, type: !9164)
!9164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!9165 = !DILocation(line: 0, scope: !9159)
!9166 = !DILocation(line: 528, column: 48, scope: !9159)
!9167 = !DILocation(line: 531, column: 40, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9159, file: !1444, line: 531, column: 6)
!9169 = !DILocation(line: 531, column: 6, scope: !9168)
!9170 = !DILocation(line: 531, column: 6, scope: !9159)
!9171 = !DILocation(line: 532, column: 34, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9168, file: !1444, line: 531, column: 48)
!9173 = !DILocation(line: 532, column: 3, scope: !9172)
!9174 = !DILocation(line: 533, column: 2, scope: !9172)
!9175 = !DILocation(line: 539, column: 42, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9159, file: !1444, line: 539, column: 6)
!9177 = !DILocation(line: 539, column: 7, scope: !9176)
!9178 = !DILocation(line: 539, column: 6, scope: !9159)
!9179 = !DILocation(line: 543, column: 52, scope: !9159)
!9180 = !DILocation(line: 543, column: 22, scope: !9159)
!9181 = !DILocation(line: 543, column: 5, scope: !9159)
!9182 = !DILocation(line: 545, column: 2, scope: !9159)
!9183 = !DILocation(line: 546, column: 1, scope: !9159)
!9184 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1444, file: !1444, line: 548, type: !1366, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9185)
!9185 = !{!9186, !9187, !9188, !9189}
!9186 = !DILocalVariable(name: "dev", arg: 1, scope: !9184, file: !1444, line: 548, type: !1349)
!9187 = !DILocalVariable(name: "c", arg: 2, scope: !9184, file: !1444, line: 549, type: !168)
!9188 = !DILocalVariable(name: "config", scope: !9184, file: !1444, line: 551, type: !9164)
!9189 = !DILocalVariable(name: "key", scope: !9184, file: !1444, line: 555, type: !32)
!9190 = !DILocation(line: 0, scope: !9184)
!9191 = !DILocation(line: 551, column: 48, scope: !9184)
!9192 = !DILocation(line: 562, column: 2, scope: !9184)
!9193 = !DILocation(line: 563, column: 41, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9195, file: !1444, line: 563, column: 7)
!9195 = distinct !DILexicalBlock(scope: !9184, file: !1444, line: 562, column: 12)
!9196 = !DILocation(line: 563, column: 7, scope: !9194)
!9197 = !DILocation(line: 563, column: 7, scope: !9195)
!9198 = !DILocation(line: 55, column: 2, scope: !9199, inlinedAt: !9203)
!9199 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5970, file: !5970, line: 42, type: !5971, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9200)
!9200 = !{!9201, !9202}
!9201 = !DILocalVariable(name: "key", scope: !9199, file: !5970, line: 44, type: !32)
!9202 = !DILocalVariable(name: "tmp", scope: !9199, file: !5970, line: 53, type: !32)
!9203 = distinct !DILocation(line: 564, column: 10, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9194, file: !1444, line: 563, column: 49)
!9205 = !{i64 1999631}
!9206 = !DILocation(line: 0, scope: !9199, inlinedAt: !9203)
!9207 = !DILocation(line: 565, column: 42, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9204, file: !1444, line: 565, column: 8)
!9209 = !DILocation(line: 565, column: 8, scope: !9208)
!9210 = !DILocation(line: 565, column: 8, scope: !9204)
!9211 = !DILocalVariable(name: "key", arg: 1, scope: !9212, file: !5970, line: 84, type: !32)
!9212 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5970, file: !5970, line: 84, type: !5981, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9213)
!9213 = !{!9211}
!9214 = !DILocation(line: 0, scope: !9212, inlinedAt: !9215)
!9215 = distinct !DILocation(line: 568, column: 4, scope: !9204)
!9216 = !DILocation(line: 95, column: 2, scope: !9212, inlinedAt: !9215)
!9217 = !{i64 2000448}
!9218 = !DILocation(line: 569, column: 3, scope: !9204)
!9219 = distinct !{!9219, !9192, !9220}
!9220 = !DILocation(line: 570, column: 2, scope: !9184)
!9221 = !DILocation(line: 592, column: 33, scope: !9184)
!9222 = !DILocation(line: 592, column: 2, scope: !9184)
!9223 = !DILocation(line: 0, scope: !9212, inlinedAt: !9224)
!9224 = distinct !DILocation(line: 593, column: 2, scope: !9184)
!9225 = !DILocation(line: 95, column: 2, scope: !9212, inlinedAt: !9224)
!9226 = !DILocation(line: 594, column: 1, scope: !9184)
!9227 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1444, file: !1444, line: 596, type: !1370, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9228)
!9228 = !{!9229, !9230, !9231}
!9229 = !DILocalVariable(name: "dev", arg: 1, scope: !9227, file: !1444, line: 596, type: !1349)
!9230 = !DILocalVariable(name: "config", scope: !9227, file: !1444, line: 598, type: !9164)
!9231 = !DILocalVariable(name: "err", scope: !9227, file: !1444, line: 599, type: !110)
!9232 = !DILocation(line: 0, scope: !9227)
!9233 = !DILocation(line: 598, column: 48, scope: !9227)
!9234 = !DILocation(line: 606, column: 40, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9227, file: !1444, line: 606, column: 6)
!9236 = !DILocation(line: 606, column: 6, scope: !9235)
!9237 = !DILocation(line: 606, column: 6, scope: !9227)
!9238 = !DILocation(line: 610, column: 39, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9227, file: !1444, line: 610, column: 6)
!9240 = !DILocation(line: 610, column: 6, scope: !9239)
!9241 = !DILocation(line: 610, column: 6, scope: !9227)
!9242 = !DILocation(line: 614, column: 39, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9227, file: !1444, line: 614, column: 6)
!9244 = !DILocation(line: 614, column: 6, scope: !9243)
!9245 = !DILocation(line: 614, column: 6, scope: !9227)
!9246 = !DILocation(line: 619, column: 40, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9227, file: !1444, line: 619, column: 6)
!9248 = !DILocation(line: 619, column: 6, scope: !9247)
!9249 = !DILocation(line: 619, column: 6, scope: !9227)
!9250 = !DILocation(line: 623, column: 10, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9227, file: !1444, line: 623, column: 6)
!9252 = !DILocation(line: 623, column: 6, scope: !9227)
!9253 = !DILocation(line: 624, column: 34, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9251, file: !1444, line: 623, column: 24)
!9255 = !DILocation(line: 624, column: 3, scope: !9254)
!9256 = !DILocation(line: 625, column: 2, scope: !9254)
!9257 = !DILocation(line: 632, column: 10, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9227, file: !1444, line: 632, column: 6)
!9259 = !DILocation(line: 632, column: 6, scope: !9227)
!9260 = !DILocation(line: 633, column: 34, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9258, file: !1444, line: 632, column: 32)
!9262 = !DILocation(line: 633, column: 3, scope: !9261)
!9263 = !DILocation(line: 634, column: 2, scope: !9261)
!9264 = !DILocation(line: 636, column: 10, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9227, file: !1444, line: 636, column: 6)
!9266 = !DILocation(line: 636, column: 6, scope: !9227)
!9267 = !DILocation(line: 637, column: 33, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9265, file: !1444, line: 636, column: 31)
!9269 = !DILocation(line: 637, column: 3, scope: !9268)
!9270 = !DILocation(line: 638, column: 2, scope: !9268)
!9271 = !DILocation(line: 640, column: 10, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9227, file: !1444, line: 640, column: 6)
!9273 = !DILocation(line: 640, column: 6, scope: !9227)
!9274 = !DILocation(line: 641, column: 33, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9272, file: !1444, line: 640, column: 32)
!9276 = !DILocation(line: 641, column: 3, scope: !9275)
!9277 = !DILocation(line: 642, column: 2, scope: !9275)
!9278 = !DILocation(line: 646, column: 32, scope: !9227)
!9279 = !DILocation(line: 646, column: 2, scope: !9227)
!9280 = !DILocation(line: 648, column: 2, scope: !9227)
!9281 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1444, file: !1444, line: 419, type: !1374, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9282)
!9282 = !{!9283, !9284, !9285, !9286, !9288, !9289, !9290, !9291}
!9283 = !DILocalVariable(name: "dev", arg: 1, scope: !9281, file: !1444, line: 419, type: !1349)
!9284 = !DILocalVariable(name: "cfg", arg: 2, scope: !9281, file: !1444, line: 420, type: !1376)
!9285 = !DILocalVariable(name: "config", scope: !9281, file: !1444, line: 422, type: !9164)
!9286 = !DILocalVariable(name: "data", scope: !9281, file: !1444, line: 423, type: !9287)
!9287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!9288 = !DILocalVariable(name: "parity", scope: !9281, file: !1444, line: 424, type: !6427)
!9289 = !DILocalVariable(name: "stopbits", scope: !9281, file: !1444, line: 425, type: !6427)
!9290 = !DILocalVariable(name: "databits", scope: !9281, file: !1444, line: 426, type: !6427)
!9291 = !DILocalVariable(name: "flowctrl", scope: !9281, file: !1444, line: 428, type: !6427)
!9292 = !DILocation(line: 0, scope: !9281)
!9293 = !DILocation(line: 422, column: 48, scope: !9281)
!9294 = !DILocation(line: 423, column: 38, scope: !9281)
!9295 = !DILocation(line: 424, column: 56, scope: !9281)
!9296 = !DILocation(line: 424, column: 51, scope: !9281)
!9297 = !DILocation(line: 424, column: 26, scope: !9281)
!9298 = !DILocation(line: 425, column: 60, scope: !9281)
!9299 = !DILocation(line: 425, column: 55, scope: !9281)
!9300 = !DILocation(line: 425, column: 28, scope: !9281)
!9301 = !DILocation(line: 426, column: 60, scope: !9281)
!9302 = !DILocation(line: 426, column: 55, scope: !9281)
!9303 = !DILocation(line: 426, column: 28, scope: !9281)
!9304 = !DILocation(line: 428, column: 58, scope: !9281)
!9305 = !DILocation(line: 428, column: 53, scope: !9281)
!9306 = !DILocation(line: 428, column: 28, scope: !9281)
!9307 = !DILocation(line: 431, column: 44, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9281, file: !1444, line: 431, column: 6)
!9309 = !DILocation(line: 438, column: 22, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9281, file: !1444, line: 437, column: 6)
!9311 = !DILocation(line: 437, column: 6, scope: !9281)
!9312 = !DILocation(line: 448, column: 6, scope: !9281)
!9313 = !DILocation(line: 465, column: 47, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9281, file: !1444, line: 465, column: 6)
!9315 = !DILocation(line: 475, column: 21, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9281, file: !1444, line: 475, column: 6)
!9317 = !DILocation(line: 475, column: 6, scope: !9281)
!9318 = !DILocation(line: 476, column: 8, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9320, file: !1444, line: 476, column: 7)
!9320 = distinct !DILexicalBlock(scope: !9316, file: !1444, line: 475, column: 49)
!9321 = !DILocation(line: 477, column: 34, scope: !9319)
!9322 = !DILocation(line: 476, column: 7, scope: !9320)
!9323 = !DILocation(line: 482, column: 27, scope: !9281)
!9324 = !DILocation(line: 482, column: 2, scope: !9281)
!9325 = !DILocation(line: 484, column: 16, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9281, file: !1444, line: 484, column: 6)
!9327 = !DILocation(line: 484, column: 13, scope: !9326)
!9328 = !DILocation(line: 484, column: 6, scope: !9281)
!9329 = !DILocation(line: 485, column: 3, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9326, file: !1444, line: 484, column: 44)
!9331 = !DILocation(line: 486, column: 2, scope: !9330)
!9332 = !DILocation(line: 488, column: 18, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9281, file: !1444, line: 488, column: 6)
!9334 = !DILocation(line: 488, column: 15, scope: !9333)
!9335 = !DILocation(line: 488, column: 6, scope: !9281)
!9336 = !DILocation(line: 489, column: 3, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9333, file: !1444, line: 488, column: 48)
!9338 = !DILocation(line: 490, column: 2, scope: !9337)
!9339 = !DILocation(line: 492, column: 18, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9281, file: !1444, line: 492, column: 6)
!9341 = !DILocation(line: 492, column: 15, scope: !9340)
!9342 = !DILocation(line: 492, column: 6, scope: !9281)
!9343 = !DILocation(line: 493, column: 3, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9340, file: !1444, line: 492, column: 48)
!9345 = !DILocation(line: 494, column: 2, scope: !9344)
!9346 = !DILocation(line: 496, column: 18, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9281, file: !1444, line: 496, column: 6)
!9348 = !DILocation(line: 496, column: 15, scope: !9347)
!9349 = !DILocation(line: 496, column: 6, scope: !9281)
!9350 = !DILocation(line: 497, column: 3, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9347, file: !1444, line: 496, column: 46)
!9352 = !DILocation(line: 498, column: 2, scope: !9351)
!9353 = !DILocation(line: 500, column: 11, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9281, file: !1444, line: 500, column: 6)
!9355 = !DILocation(line: 500, column: 29, scope: !9354)
!9356 = !DILocation(line: 500, column: 20, scope: !9354)
!9357 = !DILocation(line: 500, column: 6, scope: !9281)
!9358 = !DILocation(line: 501, column: 3, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9354, file: !1444, line: 500, column: 40)
!9360 = !DILocation(line: 502, column: 26, scope: !9359)
!9361 = !DILocation(line: 502, column: 19, scope: !9359)
!9362 = !DILocation(line: 503, column: 2, scope: !9359)
!9363 = !DILocation(line: 505, column: 26, scope: !9281)
!9364 = !DILocation(line: 505, column: 2, scope: !9281)
!9365 = !DILocation(line: 506, column: 2, scope: !9281)
!9366 = !DILocation(line: 507, column: 1, scope: !9281)
!9367 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1444, file: !1444, line: 509, type: !1387, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9368)
!9368 = !{!9369, !9370, !9371}
!9369 = !DILocalVariable(name: "dev", arg: 1, scope: !9367, file: !1444, line: 509, type: !1349)
!9370 = !DILocalVariable(name: "cfg", arg: 2, scope: !9367, file: !1444, line: 510, type: !1389)
!9371 = !DILocalVariable(name: "data", scope: !9367, file: !1444, line: 512, type: !9287)
!9372 = !DILocation(line: 0, scope: !9367)
!9373 = !DILocation(line: 512, column: 38, scope: !9367)
!9374 = !DILocation(line: 514, column: 24, scope: !9367)
!9375 = !DILocation(line: 514, column: 7, scope: !9367)
!9376 = !DILocation(line: 514, column: 16, scope: !9367)
!9377 = !DILocation(line: 515, column: 41, scope: !9367)
!9378 = !{i32 0, i32 1537}
!9379 = !DILocation(line: 515, column: 16, scope: !9367)
!9380 = !DILocation(line: 515, column: 7, scope: !9367)
!9381 = !DILocation(line: 515, column: 14, scope: !9367)
!9382 = !DILocation(line: 517, column: 3, scope: !9367)
!9383 = !{i32 0, i32 12289}
!9384 = !DILocation(line: 516, column: 19, scope: !9367)
!9385 = !DILocation(line: 516, column: 7, scope: !9367)
!9386 = !DILocation(line: 516, column: 17, scope: !9367)
!9387 = !DILocation(line: 519, column: 3, scope: !9367)
!9388 = !DILocation(line: 519, column: 33, scope: !9367)
!9389 = !DILocation(line: 518, column: 19, scope: !9367)
!9390 = !DILocation(line: 518, column: 7, scope: !9367)
!9391 = !DILocation(line: 518, column: 17, scope: !9367)
!9392 = !DILocation(line: 521, column: 3, scope: !9367)
!9393 = !{i32 0, i32 769}
!9394 = !DILocation(line: 520, column: 19, scope: !9367)
!9395 = !DILocation(line: 520, column: 7, scope: !9367)
!9396 = !DILocation(line: 520, column: 17, scope: !9367)
!9397 = !DILocation(line: 522, column: 2, scope: !9367)
!9398 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1444, file: !1444, line: 205, type: !9399, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9401)
!9399 = !DISubroutineType(types: !9400)
!9400 = !{!110, !1349}
!9401 = !{!9402, !9403}
!9402 = !DILocalVariable(name: "dev", arg: 1, scope: !9398, file: !1444, line: 205, type: !1349)
!9403 = !DILocalVariable(name: "config", scope: !9398, file: !1444, line: 207, type: !9164)
!9404 = !DILocation(line: 0, scope: !9398)
!9405 = !DILocation(line: 207, column: 48, scope: !9398)
!9406 = !DILocation(line: 209, column: 36, scope: !9398)
!9407 = !DILocation(line: 209, column: 9, scope: !9398)
!9408 = !DILocation(line: 209, column: 2, scope: !9398)
!9409 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1444, file: !1444, line: 270, type: !9410, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9412)
!9410 = !DISubroutineType(types: !9411)
!9411 = !{!1315, !110}
!9412 = !{!9413}
!9413 = !DILocalVariable(name: "parity", arg: 1, scope: !9409, file: !1444, line: 270, type: !110)
!9414 = !DILocation(line: 0, scope: !9409)
!9415 = !DILocation(line: 272, column: 2, scope: !9409)
!9416 = !DILocation(line: 281, column: 1, scope: !9409)
!9417 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1444, file: !1444, line: 220, type: !9399, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9418)
!9418 = !{!9419, !9420}
!9419 = !DILocalVariable(name: "dev", arg: 1, scope: !9417, file: !1444, line: 220, type: !1349)
!9420 = !DILocalVariable(name: "config", scope: !9417, file: !1444, line: 222, type: !9164)
!9421 = !DILocation(line: 0, scope: !9417)
!9422 = !DILocation(line: 222, column: 48, scope: !9417)
!9423 = !DILocation(line: 224, column: 44, scope: !9417)
!9424 = !DILocation(line: 224, column: 9, scope: !9417)
!9425 = !DILocation(line: 224, column: 2, scope: !9417)
!9426 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1444, file: !1444, line: 304, type: !9427, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9429)
!9427 = !DISubroutineType(types: !9428)
!9428 = !{!1329, !110}
!9429 = !{!9430}
!9430 = !DILocalVariable(name: "sb", arg: 1, scope: !9426, file: !1444, line: 304, type: !110)
!9431 = !DILocation(line: 0, scope: !9426)
!9432 = !DILocation(line: 306, column: 2, scope: !9426)
!9433 = !DILocation(line: 0, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9426, file: !1444, line: 306, column: 14)
!9435 = !DILocation(line: 323, column: 1, scope: !9426)
!9436 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1444, file: !1444, line: 235, type: !9399, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9437)
!9437 = !{!9438, !9439}
!9438 = !DILocalVariable(name: "dev", arg: 1, scope: !9436, file: !1444, line: 235, type: !1349)
!9439 = !DILocalVariable(name: "config", scope: !9436, file: !1444, line: 237, type: !9164)
!9440 = !DILocation(line: 0, scope: !9436)
!9441 = !DILocation(line: 237, column: 48, scope: !9436)
!9442 = !DILocation(line: 239, column: 39, scope: !9436)
!9443 = !DILocation(line: 239, column: 9, scope: !9436)
!9444 = !DILocation(line: 239, column: 2, scope: !9436)
!9445 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1444, file: !1444, line: 355, type: !9446, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9448)
!9446 = !DISubroutineType(types: !9447)
!9447 = !{!1322, !110, !110}
!9448 = !{!9449, !9450}
!9449 = !DILocalVariable(name: "db", arg: 1, scope: !9445, file: !1444, line: 355, type: !110)
!9450 = !DILocalVariable(name: "p", arg: 2, scope: !9445, file: !1444, line: 356, type: !110)
!9451 = !DILocation(line: 0, scope: !9445)
!9452 = !DILocation(line: 358, column: 2, scope: !9445)
!9453 = !DILocation(line: 384, column: 1, scope: !9445)
!9454 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1444, file: !1444, line: 250, type: !9399, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9455)
!9455 = !{!9456, !9457}
!9456 = !DILocalVariable(name: "dev", arg: 1, scope: !9454, file: !1444, line: 250, type: !1349)
!9457 = !DILocalVariable(name: "config", scope: !9454, file: !1444, line: 252, type: !9164)
!9458 = !DILocation(line: 0, scope: !9454)
!9459 = !DILocation(line: 252, column: 48, scope: !9454)
!9460 = !DILocation(line: 254, column: 40, scope: !9454)
!9461 = !DILocation(line: 254, column: 9, scope: !9454)
!9462 = !DILocation(line: 254, column: 2, scope: !9454)
!9463 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1444, file: !1444, line: 409, type: !9464, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9466)
!9464 = !DISubroutineType(types: !9465)
!9465 = !{!1335, !110}
!9466 = !{!9467}
!9467 = !DILocalVariable(name: "fc", arg: 1, scope: !9463, file: !1444, line: 409, type: !110)
!9468 = !DILocation(line: 0, scope: !9463)
!9469 = !DILocation(line: 411, column: 9, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9463, file: !1444, line: 411, column: 6)
!9471 = !DILocation(line: 416, column: 1, scope: !9463)
!9472 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9473, file: !9473, line: 967, type: !9474, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9476)
!9473 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9474 = !DISubroutineType(types: !9475)
!9475 = !{!110, !1390}
!9476 = !{!9477}
!9477 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9472, file: !9473, line: 967, type: !1390)
!9478 = !DILocation(line: 0, scope: !9472)
!9479 = !DILocation(line: 969, column: 21, scope: !9472)
!9480 = !DILocation(line: 969, column: 3, scope: !9472)
!9481 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9473, file: !9473, line: 601, type: !9474, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9482)
!9482 = !{!9483}
!9483 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9481, file: !9473, line: 601, type: !1390)
!9484 = !DILocation(line: 0, scope: !9481)
!9485 = !DILocation(line: 603, column: 21, scope: !9481)
!9486 = !DILocation(line: 603, column: 3, scope: !9481)
!9487 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9473, file: !9473, line: 820, type: !9474, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9488)
!9488 = !{!9489}
!9489 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9487, file: !9473, line: 820, type: !1390)
!9490 = !DILocation(line: 0, scope: !9487)
!9491 = !DILocation(line: 822, column: 21, scope: !9487)
!9492 = !DILocation(line: 822, column: 3, scope: !9487)
!9493 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9473, file: !9473, line: 547, type: !9474, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9494)
!9494 = !{!9495}
!9495 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9493, file: !9473, line: 547, type: !1390)
!9496 = !DILocation(line: 0, scope: !9493)
!9497 = !DILocation(line: 549, column: 21, scope: !9493)
!9498 = !DILocation(line: 549, column: 3, scope: !9493)
!9499 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1444, file: !1444, line: 257, type: !9500, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9502)
!9500 = !DISubroutineType(types: !9501)
!9501 = !{!110, !1315}
!9502 = !{!9503}
!9503 = !DILocalVariable(name: "parity", arg: 1, scope: !9499, file: !1444, line: 257, type: !1315)
!9504 = !DILocation(line: 0, scope: !9499)
!9505 = !DILocation(line: 259, column: 2, scope: !9499)
!9506 = !DILocation(line: 268, column: 1, scope: !9499)
!9507 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1444, file: !1444, line: 283, type: !9508, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9510)
!9508 = !DISubroutineType(types: !9509)
!9509 = !{!110, !1329}
!9510 = !{!9511}
!9511 = !DILocalVariable(name: "sb", arg: 1, scope: !9507, file: !1444, line: 283, type: !1329)
!9512 = !DILocation(line: 0, scope: !9507)
!9513 = !DILocation(line: 285, column: 2, scope: !9507)
!9514 = !DILocation(line: 0, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9507, file: !1444, line: 285, column: 14)
!9516 = !DILocation(line: 302, column: 1, scope: !9507)
!9517 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1444, file: !1444, line: 325, type: !9518, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9520)
!9518 = !DISubroutineType(types: !9519)
!9519 = !{!110, !1322, !1315}
!9520 = !{!9521, !9522}
!9521 = !DILocalVariable(name: "db", arg: 1, scope: !9517, file: !1444, line: 325, type: !1322)
!9522 = !DILocalVariable(name: "p", arg: 2, scope: !9517, file: !1444, line: 326, type: !1315)
!9523 = !DILocation(line: 0, scope: !9517)
!9524 = !DILocation(line: 328, column: 2, scope: !9517)
!9525 = !DILocation(line: 353, column: 1, scope: !9517)
!9526 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1444, file: !1444, line: 393, type: !9527, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9529)
!9527 = !DISubroutineType(types: !9528)
!9528 = !{!110, !1335}
!9529 = !{!9530}
!9530 = !DILocalVariable(name: "fc", arg: 1, scope: !9526, file: !1444, line: 393, type: !1335)
!9531 = !DILocation(line: 0, scope: !9526)
!9532 = !DILocation(line: 395, column: 9, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9526, file: !1444, line: 395, column: 6)
!9534 = !DILocation(line: 400, column: 1, scope: !9526)
!9535 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9473, file: !9473, line: 424, type: !9536, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9538)
!9536 = !DISubroutineType(types: !9537)
!9537 = !{null, !1390}
!9538 = !{!9539}
!9539 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9535, file: !9473, line: 424, type: !1390)
!9540 = !DILocation(line: 0, scope: !9535)
!9541 = !DILocation(line: 426, column: 3, scope: !9535)
!9542 = !DILocation(line: 427, column: 1, scope: !9535)
!9543 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1444, file: !1444, line: 197, type: !9544, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9546)
!9544 = !DISubroutineType(types: !9545)
!9545 = !{null, !1349, !110}
!9546 = !{!9547, !9548, !9549}
!9547 = !DILocalVariable(name: "dev", arg: 1, scope: !9543, file: !1444, line: 197, type: !1349)
!9548 = !DILocalVariable(name: "parity", arg: 2, scope: !9543, file: !1444, line: 198, type: !110)
!9549 = !DILocalVariable(name: "config", scope: !9543, file: !1444, line: 200, type: !9164)
!9550 = !DILocation(line: 0, scope: !9543)
!9551 = !DILocation(line: 200, column: 48, scope: !9543)
!9552 = !DILocation(line: 202, column: 29, scope: !9543)
!9553 = !DILocation(line: 202, column: 2, scope: !9543)
!9554 = !DILocation(line: 203, column: 1, scope: !9543)
!9555 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1444, file: !1444, line: 212, type: !9544, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9556)
!9556 = !{!9557, !9558, !9559}
!9557 = !DILocalVariable(name: "dev", arg: 1, scope: !9555, file: !1444, line: 212, type: !1349)
!9558 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9555, file: !1444, line: 213, type: !110)
!9559 = !DILocalVariable(name: "config", scope: !9555, file: !1444, line: 215, type: !9164)
!9560 = !DILocation(line: 0, scope: !9555)
!9561 = !DILocation(line: 215, column: 48, scope: !9555)
!9562 = !DILocation(line: 217, column: 37, scope: !9555)
!9563 = !DILocation(line: 217, column: 2, scope: !9555)
!9564 = !DILocation(line: 218, column: 1, scope: !9555)
!9565 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1444, file: !1444, line: 227, type: !9544, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9566)
!9566 = !{!9567, !9568, !9569}
!9567 = !DILocalVariable(name: "dev", arg: 1, scope: !9565, file: !1444, line: 227, type: !1349)
!9568 = !DILocalVariable(name: "databits", arg: 2, scope: !9565, file: !1444, line: 228, type: !110)
!9569 = !DILocalVariable(name: "config", scope: !9565, file: !1444, line: 230, type: !9164)
!9570 = !DILocation(line: 0, scope: !9565)
!9571 = !DILocation(line: 230, column: 48, scope: !9565)
!9572 = !DILocation(line: 232, column: 32, scope: !9565)
!9573 = !DILocation(line: 232, column: 2, scope: !9565)
!9574 = !DILocation(line: 233, column: 1, scope: !9565)
!9575 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1444, file: !1444, line: 242, type: !9544, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9576)
!9576 = !{!9577, !9578, !9579}
!9577 = !DILocalVariable(name: "dev", arg: 1, scope: !9575, file: !1444, line: 242, type: !1349)
!9578 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9575, file: !1444, line: 243, type: !110)
!9579 = !DILocalVariable(name: "config", scope: !9575, file: !1444, line: 245, type: !9164)
!9580 = !DILocation(line: 0, scope: !9575)
!9581 = !DILocation(line: 245, column: 48, scope: !9575)
!9582 = !DILocation(line: 247, column: 33, scope: !9575)
!9583 = !DILocation(line: 247, column: 2, scope: !9575)
!9584 = !DILocation(line: 248, column: 1, scope: !9575)
!9585 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1444, file: !1444, line: 107, type: !9544, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9586)
!9586 = !{!9587, !9588, !9589, !9590, !9591}
!9587 = !DILocalVariable(name: "dev", arg: 1, scope: !9585, file: !1444, line: 107, type: !1349)
!9588 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9585, file: !1444, line: 107, type: !110)
!9589 = !DILocalVariable(name: "config", scope: !9585, file: !1444, line: 109, type: !9164)
!9590 = !DILocalVariable(name: "data", scope: !9585, file: !1444, line: 110, type: !9287)
!9591 = !DILocalVariable(name: "clock_rate", scope: !9585, file: !1444, line: 112, type: !110)
!9592 = !DILocation(line: 0, scope: !9585)
!9593 = !DILocation(line: 109, column: 48, scope: !9585)
!9594 = !DILocation(line: 110, column: 38, scope: !9585)
!9595 = !DILocation(line: 112, column: 2, scope: !9585)
!9596 = !DILocation(line: 123, column: 36, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9598, file: !1444, line: 123, column: 7)
!9598 = distinct !DILexicalBlock(scope: !9599, file: !1444, line: 122, column: 9)
!9599 = distinct !DILexicalBlock(scope: !9585, file: !1444, line: 115, column: 6)
!9600 = !DILocation(line: 124, column: 42, scope: !9597)
!9601 = !DILocation(line: 123, column: 7, scope: !9597)
!9602 = !DILocation(line: 125, column: 22, scope: !9597)
!9603 = !DILocation(line: 123, column: 7, scope: !9598)
!9604 = !DILocation(line: 176, column: 36, scope: !9585)
!9605 = !DILocation(line: 176, column: 3, scope: !9585)
!9606 = !DILocation(line: 179, column: 32, scope: !9585)
!9607 = !DILocation(line: 180, column: 10, scope: !9585)
!9608 = !DILocation(line: 179, column: 3, scope: !9585)
!9609 = !DILocation(line: 189, column: 3, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !1444, line: 189, column: 3)
!9611 = distinct !DILexicalBlock(scope: !9585, file: !1444, line: 189, column: 3)
!9612 = !DILocation(line: 189, column: 3, scope: !9611)
!9613 = !DILocation(line: 189, column: 3, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9610, file: !1444, line: 189, column: 3)
!9615 = !DILocation(line: 195, column: 1, scope: !9585)
!9616 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9473, file: !9473, line: 410, type: !9536, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9617)
!9617 = !{!9618}
!9618 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9616, file: !9473, line: 410, type: !1390)
!9619 = !DILocation(line: 0, scope: !9616)
!9620 = !DILocation(line: 412, column: 3, scope: !9616)
!9621 = !DILocation(line: 413, column: 1, scope: !9616)
!9622 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !806, file: !806, line: 216, type: !1423, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9623)
!9623 = !{!9624, !9625, !9626, !9627}
!9624 = !DILocalVariable(name: "dev", arg: 1, scope: !9622, file: !806, line: 216, type: !1349)
!9625 = !DILocalVariable(name: "sys", arg: 2, scope: !9622, file: !806, line: 217, type: !901)
!9626 = !DILocalVariable(name: "rate", arg: 3, scope: !9622, file: !806, line: 218, type: !857)
!9627 = !DILocalVariable(name: "api", scope: !9622, file: !806, line: 220, type: !1401)
!9628 = !DILocation(line: 0, scope: !9622)
!9629 = !DILocation(line: 221, column: 49, scope: !9622)
!9630 = !DILocation(line: 223, column: 11, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9622, file: !806, line: 223, column: 6)
!9632 = !DILocation(line: 223, column: 20, scope: !9631)
!9633 = !DILocation(line: 223, column: 6, scope: !9622)
!9634 = !DILocation(line: 227, column: 9, scope: !9622)
!9635 = !DILocation(line: 227, column: 2, scope: !9622)
!9636 = !DILocation(line: 228, column: 1, scope: !9622)
!9637 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9473, file: !9473, line: 615, type: !9638, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9640)
!9638 = !DISubroutineType(types: !9639)
!9639 = !{null, !1390, !110}
!9640 = !{!9641, !9642}
!9641 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9637, file: !9473, line: 615, type: !1390)
!9642 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9637, file: !9473, line: 615, type: !110)
!9643 = !DILocation(line: 0, scope: !9637)
!9644 = !DILocation(line: 617, column: 3, scope: !9637)
!9645 = !DILocation(line: 618, column: 1, scope: !9637)
!9646 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9473, file: !9473, line: 1020, type: !9647, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9649)
!9647 = !DISubroutineType(types: !9648)
!9648 = !{null, !1390, !110, !110, !110}
!9649 = !{!9650, !9651, !9652, !9653}
!9650 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9646, file: !9473, line: 1020, type: !1390)
!9651 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9646, file: !9473, line: 1020, type: !110)
!9652 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9646, file: !9473, line: 1020, type: !110)
!9653 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9646, file: !9473, line: 1021, type: !110)
!9654 = !DILocation(line: 0, scope: !9646)
!9655 = !DILocation(line: 1029, column: 30, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9657, file: !9473, line: 1028, column: 3)
!9657 = distinct !DILexicalBlock(scope: !9646, file: !9473, line: 1023, column: 7)
!9658 = !DILocation(line: 1029, column: 19, scope: !9656)
!9659 = !DILocation(line: 1029, column: 13, scope: !9656)
!9660 = !DILocation(line: 1029, column: 17, scope: !9656)
!9661 = !DILocation(line: 1031, column: 1, scope: !9646)
!9662 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9473, file: !9473, line: 949, type: !9638, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9663)
!9663 = !{!9664, !9665}
!9664 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9662, file: !9473, line: 949, type: !1390)
!9665 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9662, file: !9473, line: 949, type: !110)
!9666 = !DILocation(line: 0, scope: !9662)
!9667 = !DILocation(line: 951, column: 3, scope: !9662)
!9668 = !DILocation(line: 952, column: 1, scope: !9662)
!9669 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9473, file: !9473, line: 588, type: !9638, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9670)
!9670 = !{!9671, !9672}
!9671 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9669, file: !9473, line: 588, type: !1390)
!9672 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9669, file: !9473, line: 588, type: !110)
!9673 = !DILocation(line: 0, scope: !9669)
!9674 = !DILocation(line: 590, column: 3, scope: !9669)
!9675 = !DILocation(line: 591, column: 1, scope: !9669)
!9676 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9473, file: !9473, line: 805, type: !9638, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9677)
!9677 = !{!9678, !9679}
!9678 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9676, file: !9473, line: 805, type: !1390)
!9679 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9676, file: !9473, line: 805, type: !110)
!9680 = !DILocation(line: 0, scope: !9676)
!9681 = !DILocation(line: 807, column: 3, scope: !9676)
!9682 = !DILocation(line: 808, column: 1, scope: !9676)
!9683 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9473, file: !9473, line: 532, type: !9638, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9684)
!9684 = !{!9685, !9686}
!9685 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9683, file: !9473, line: 532, type: !1390)
!9686 = !DILocalVariable(name: "Parity", arg: 2, scope: !9683, file: !9473, line: 532, type: !110)
!9687 = !DILocation(line: 0, scope: !9683)
!9688 = !DILocation(line: 534, column: 3, scope: !9683)
!9689 = !DILocation(line: 535, column: 1, scope: !9683)
!9690 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9473, file: !9473, line: 1770, type: !9474, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9691)
!9691 = !{!9692}
!9692 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9690, file: !9473, line: 1770, type: !1390)
!9693 = !DILocation(line: 0, scope: !9690)
!9694 = !DILocation(line: 1772, column: 11, scope: !9690)
!9695 = !DILocation(line: 1772, column: 46, scope: !9690)
!9696 = !DILocation(line: 1772, column: 3, scope: !9690)
!9697 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9473, file: !9473, line: 1737, type: !9474, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9698)
!9698 = !{!9699}
!9699 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9697, file: !9473, line: 1737, type: !1390)
!9700 = !DILocation(line: 0, scope: !9697)
!9701 = !DILocation(line: 1739, column: 11, scope: !9697)
!9702 = !DILocation(line: 1739, column: 3, scope: !9697)
!9703 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9473, file: !9473, line: 1748, type: !9474, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9704)
!9704 = !{!9705}
!9705 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9703, file: !9473, line: 1748, type: !1390)
!9706 = !DILocation(line: 0, scope: !9703)
!9707 = !DILocation(line: 1750, column: 11, scope: !9703)
!9708 = !DILocation(line: 1750, column: 45, scope: !9703)
!9709 = !DILocation(line: 1750, column: 3, scope: !9703)
!9710 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9473, file: !9473, line: 1827, type: !9474, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9711)
!9711 = !{!9712}
!9712 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9710, file: !9473, line: 1827, type: !1390)
!9713 = !DILocation(line: 0, scope: !9710)
!9714 = !DILocation(line: 1829, column: 11, scope: !9710)
!9715 = !DILocation(line: 1829, column: 46, scope: !9710)
!9716 = !DILocation(line: 1829, column: 3, scope: !9710)
!9717 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9473, file: !9473, line: 1992, type: !9536, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9718)
!9718 = !{!9719}
!9719 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9717, file: !9473, line: 1992, type: !1390)
!9720 = !DILocation(line: 0, scope: !9717)
!9721 = !DILocation(line: 1994, column: 3, scope: !9717)
!9722 = !DILocation(line: 1995, column: 1, scope: !9717)
!9723 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9473, file: !9473, line: 1934, type: !9536, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9724)
!9724 = !{!9725, !9726}
!9725 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9723, file: !9473, line: 1934, type: !1390)
!9726 = !DILocalVariable(name: "tmpreg", scope: !9723, file: !9473, line: 1936, type: !301)
!9727 = !DILocation(line: 0, scope: !9723)
!9728 = !DILocation(line: 1936, column: 3, scope: !9723)
!9729 = !DILocation(line: 1936, column: 17, scope: !9723)
!9730 = !DILocation(line: 1937, column: 20, scope: !9723)
!9731 = !DILocation(line: 1937, column: 10, scope: !9723)
!9732 = !DILocation(line: 1938, column: 10, scope: !9723)
!9733 = !DILocation(line: 1939, column: 20, scope: !9723)
!9734 = !DILocation(line: 1939, column: 10, scope: !9723)
!9735 = !DILocation(line: 1940, column: 10, scope: !9723)
!9736 = !DILocation(line: 1941, column: 1, scope: !9723)
!9737 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9473, file: !9473, line: 1877, type: !9536, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9738)
!9738 = !{!9739, !9740}
!9739 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9737, file: !9473, line: 1877, type: !1390)
!9740 = !DILocalVariable(name: "tmpreg", scope: !9737, file: !9473, line: 1879, type: !301)
!9741 = !DILocation(line: 0, scope: !9737)
!9742 = !DILocation(line: 1879, column: 3, scope: !9737)
!9743 = !DILocation(line: 1879, column: 17, scope: !9737)
!9744 = !DILocation(line: 1880, column: 20, scope: !9737)
!9745 = !DILocation(line: 1880, column: 10, scope: !9737)
!9746 = !DILocation(line: 1881, column: 10, scope: !9737)
!9747 = !DILocation(line: 1882, column: 20, scope: !9737)
!9748 = !DILocation(line: 1882, column: 10, scope: !9737)
!9749 = !DILocation(line: 1883, column: 10, scope: !9737)
!9750 = !DILocation(line: 1884, column: 1, scope: !9737)
!9751 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9473, file: !9473, line: 1896, type: !9536, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9752)
!9752 = !{!9753, !9754}
!9753 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9751, file: !9473, line: 1896, type: !1390)
!9754 = !DILocalVariable(name: "tmpreg", scope: !9751, file: !9473, line: 1898, type: !301)
!9755 = !DILocation(line: 0, scope: !9751)
!9756 = !DILocation(line: 1898, column: 3, scope: !9751)
!9757 = !DILocation(line: 1898, column: 17, scope: !9751)
!9758 = !DILocation(line: 1899, column: 20, scope: !9751)
!9759 = !DILocation(line: 1899, column: 10, scope: !9751)
!9760 = !DILocation(line: 1900, column: 10, scope: !9751)
!9761 = !DILocation(line: 1901, column: 20, scope: !9751)
!9762 = !DILocation(line: 1901, column: 10, scope: !9751)
!9763 = !DILocation(line: 1902, column: 10, scope: !9751)
!9764 = !DILocation(line: 1903, column: 1, scope: !9751)
!9765 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9473, file: !9473, line: 1915, type: !9536, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9766)
!9766 = !{!9767, !9768}
!9767 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9765, file: !9473, line: 1915, type: !1390)
!9768 = !DILocalVariable(name: "tmpreg", scope: !9765, file: !9473, line: 1917, type: !301)
!9769 = !DILocation(line: 0, scope: !9765)
!9770 = !DILocation(line: 1917, column: 3, scope: !9765)
!9771 = !DILocation(line: 1917, column: 17, scope: !9765)
!9772 = !DILocation(line: 1918, column: 20, scope: !9765)
!9773 = !DILocation(line: 1918, column: 10, scope: !9765)
!9774 = !DILocation(line: 1919, column: 10, scope: !9765)
!9775 = !DILocation(line: 1920, column: 20, scope: !9765)
!9776 = !DILocation(line: 1920, column: 10, scope: !9765)
!9777 = !DILocation(line: 1921, column: 10, scope: !9765)
!9778 = !DILocation(line: 1922, column: 1, scope: !9765)
!9779 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9473, file: !9473, line: 1814, type: !9474, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9780)
!9780 = !{!9781}
!9781 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9779, file: !9473, line: 1814, type: !1390)
!9782 = !DILocation(line: 0, scope: !9779)
!9783 = !DILocation(line: 1816, column: 11, scope: !9779)
!9784 = !DILocation(line: 1816, column: 46, scope: !9779)
!9785 = !DILocation(line: 1816, column: 3, scope: !9779)
!9786 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9473, file: !9473, line: 2426, type: !9787, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9789)
!9787 = !DISubroutineType(types: !9788)
!9788 = !{null, !1390, !167}
!9789 = !{!9790, !9791}
!9790 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9786, file: !9473, line: 2426, type: !1390)
!9791 = !DILocalVariable(name: "Value", arg: 2, scope: !9786, file: !9473, line: 2426, type: !167)
!9792 = !DILocation(line: 0, scope: !9786)
!9793 = !DILocation(line: 2428, column: 16, scope: !9786)
!9794 = !DILocation(line: 2428, column: 11, scope: !9786)
!9795 = !DILocation(line: 2428, column: 14, scope: !9786)
!9796 = !DILocation(line: 2429, column: 1, scope: !9786)
!9797 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9473, file: !9473, line: 1792, type: !9474, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9798)
!9798 = !{!9799}
!9799 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9797, file: !9473, line: 1792, type: !1390)
!9800 = !DILocation(line: 0, scope: !9797)
!9801 = !DILocation(line: 1794, column: 11, scope: !9797)
!9802 = !DILocation(line: 1794, column: 47, scope: !9797)
!9803 = !DILocation(line: 1794, column: 3, scope: !9797)
!9804 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9473, file: !9473, line: 2403, type: !9805, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9807)
!9805 = !DISubroutineType(types: !9806)
!9806 = !{!167, !1390}
!9807 = !{!9808}
!9808 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9804, file: !9473, line: 2403, type: !1390)
!9809 = !DILocation(line: 0, scope: !9804)
!9810 = !DILocation(line: 2405, column: 20, scope: !9804)
!9811 = !DILocation(line: 2405, column: 10, scope: !9804)
!9812 = !DILocation(line: 2405, column: 3, scope: !9804)
!9813 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1444, file: !1444, line: 1583, type: !1370, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9814)
!9814 = !{!9815, !9816, !9817, !9818, !9819, !9820}
!9815 = !DILocalVariable(name: "dev", arg: 1, scope: !9813, file: !1444, line: 1583, type: !1349)
!9816 = !DILocalVariable(name: "config", scope: !9813, file: !1444, line: 1585, type: !9164)
!9817 = !DILocalVariable(name: "data", scope: !9813, file: !1444, line: 1586, type: !9287)
!9818 = !DILocalVariable(name: "ll_parity", scope: !9813, file: !1444, line: 1587, type: !110)
!9819 = !DILocalVariable(name: "ll_datawidth", scope: !9813, file: !1444, line: 1588, type: !110)
!9820 = !DILocalVariable(name: "err", scope: !9813, file: !1444, line: 1589, type: !109)
!9821 = !DILocation(line: 0, scope: !9813)
!9822 = !DILocation(line: 1585, column: 48, scope: !9813)
!9823 = !DILocation(line: 1586, column: 38, scope: !9813)
!9824 = !DILocation(line: 1591, column: 2, scope: !9813)
!9825 = !DILocation(line: 1593, column: 29, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9813, file: !1444, line: 1593, column: 6)
!9827 = !DILocation(line: 1593, column: 7, scope: !9826)
!9828 = !DILocation(line: 1593, column: 6, scope: !9813)
!9829 = !DILocation(line: 1599, column: 31, scope: !9813)
!9830 = !DILocation(line: 1599, column: 71, scope: !9813)
!9831 = !DILocation(line: 1599, column: 8, scope: !9813)
!9832 = !DILocation(line: 1600, column: 10, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9813, file: !1444, line: 1600, column: 6)
!9834 = !DILocation(line: 1600, column: 6, scope: !9813)
!9835 = !DILocation(line: 1616, column: 36, scope: !9813)
!9836 = !DILocation(line: 1616, column: 8, scope: !9813)
!9837 = !DILocation(line: 1617, column: 10, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9813, file: !1444, line: 1617, column: 6)
!9839 = !DILocation(line: 1617, column: 6, scope: !9813)
!9840 = !DILocation(line: 1621, column: 27, scope: !9813)
!9841 = !DILocation(line: 1621, column: 2, scope: !9813)
!9842 = !DILocation(line: 1624, column: 40, scope: !9813)
!9843 = !DILocation(line: 1624, column: 2, scope: !9813)
!9844 = !DILocation(line: 1630, column: 14, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9813, file: !1444, line: 1630, column: 6)
!9846 = !DILocation(line: 1630, column: 6, scope: !9813)
!9847 = !DILocation(line: 1638, column: 2, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9849, file: !1444, line: 1634, column: 34)
!9849 = distinct !DILexicalBlock(scope: !9845, file: !1444, line: 1634, column: 13)
!9850 = !DILocation(line: 0, scope: !9845)
!9851 = !DILocation(line: 1649, column: 35, scope: !9813)
!9852 = !DILocation(line: 1649, column: 2, scope: !9813)
!9853 = !DILocation(line: 1654, column: 14, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9813, file: !1444, line: 1654, column: 6)
!9855 = !DILocation(line: 1654, column: 6, scope: !9813)
!9856 = !DILocation(line: 1655, column: 3, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9854, file: !1444, line: 1654, column: 31)
!9858 = !DILocation(line: 1656, column: 2, scope: !9857)
!9859 = !DILocation(line: 1659, column: 37, scope: !9813)
!9860 = !DILocation(line: 1659, column: 2, scope: !9813)
!9861 = !DILocation(line: 1662, column: 14, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9813, file: !1444, line: 1662, column: 6)
!9863 = !DILocation(line: 1662, column: 6, scope: !9813)
!9864 = !DILocation(line: 1663, column: 37, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9862, file: !1444, line: 1662, column: 27)
!9866 = !DILocation(line: 1663, column: 3, scope: !9865)
!9867 = !DILocation(line: 1664, column: 2, scope: !9865)
!9868 = !DILocation(line: 1684, column: 26, scope: !9813)
!9869 = !DILocation(line: 1684, column: 2, scope: !9813)
!9870 = !DILocation(line: 1722, column: 2, scope: !9813)
!9871 = !DILocation(line: 1724, column: 1, scope: !9813)
!9872 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1444, file: !1444, line: 651, type: !9873, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9875)
!9873 = !DISubroutineType(types: !9874)
!9874 = !{null, !1349}
!9875 = !{!9876, !9877, !9878}
!9876 = !DILocalVariable(name: "dev", arg: 1, scope: !9872, file: !1444, line: 651, type: !1349)
!9877 = !DILocalVariable(name: "data", scope: !9872, file: !1444, line: 653, type: !9287)
!9878 = !DILocalVariable(name: "clk", scope: !9872, file: !1444, line: 654, type: !9879)
!9879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!9880 = !DILocation(line: 0, scope: !9872)
!9881 = !DILocation(line: 653, column: 38, scope: !9872)
!9882 = !DILocation(line: 656, column: 8, scope: !9872)
!9883 = !DILocation(line: 656, column: 14, scope: !9872)
!9884 = !DILocation(line: 657, column: 1, scope: !9872)
!9885 = distinct !DISubprogram(name: "device_is_ready", scope: !8284, file: !8284, line: 47, type: !9886, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9888)
!9886 = !DISubroutineType(types: !9887)
!9887 = !{!334, !1349}
!9888 = !{!9889}
!9889 = !DILocalVariable(name: "dev", arg: 1, scope: !9885, file: !8284, line: 47, type: !1349)
!9890 = !DILocation(line: 0, scope: !9885)
!9891 = !DILocation(line: 55, column: 2, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9885, file: !8284, line: 55, column: 2)
!9893 = !{i64 2154358425}
!9894 = !DILocation(line: 56, column: 9, scope: !9885)
!9895 = !DILocation(line: 56, column: 2, scope: !9885)
!9896 = distinct !DISubprogram(name: "clock_control_on", scope: !806, file: !806, line: 123, type: !1408, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9897)
!9897 = !{!9898, !9899, !9900}
!9898 = !DILocalVariable(name: "dev", arg: 1, scope: !9896, file: !806, line: 123, type: !1349)
!9899 = !DILocalVariable(name: "sys", arg: 2, scope: !9896, file: !806, line: 124, type: !901)
!9900 = !DILocalVariable(name: "api", scope: !9896, file: !806, line: 126, type: !1401)
!9901 = !DILocation(line: 0, scope: !9896)
!9902 = !DILocation(line: 127, column: 49, scope: !9896)
!9903 = !DILocation(line: 129, column: 14, scope: !9896)
!9904 = !DILocation(line: 129, column: 9, scope: !9896)
!9905 = !DILocation(line: 129, column: 2, scope: !9896)
!9906 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1471, file: !1471, line: 342, type: !9907, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9909)
!9907 = !DISubroutineType(types: !9908)
!9908 = !{!109, !1519, !167}
!9909 = !{!9910, !9911, !9912, !9913}
!9910 = !DILocalVariable(name: "config", arg: 1, scope: !9906, file: !1471, line: 342, type: !1519)
!9911 = !DILocalVariable(name: "id", arg: 2, scope: !9906, file: !1471, line: 343, type: !167)
!9912 = !DILocalVariable(name: "ret", scope: !9906, file: !1471, line: 345, type: !109)
!9913 = !DILocalVariable(name: "state", scope: !9906, file: !1471, line: 346, type: !1474)
!9914 = !DILocation(line: 0, scope: !9906)
!9915 = !DILocation(line: 346, column: 2, scope: !9906)
!9916 = !DILocation(line: 348, column: 8, scope: !9906)
!9917 = !DILocation(line: 349, column: 10, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9906, file: !1471, line: 349, column: 6)
!9919 = !DILocation(line: 349, column: 6, scope: !9906)
!9920 = !DILocation(line: 353, column: 44, scope: !9906)
!9921 = !DILocation(line: 353, column: 9, scope: !9906)
!9922 = !DILocation(line: 353, column: 2, scope: !9906)
!9923 = !DILocation(line: 354, column: 1, scope: !9906)
!9924 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9473, file: !9473, line: 497, type: !9638, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9925)
!9925 = !{!9926, !9927, !9928}
!9926 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9924, file: !9473, line: 497, type: !1390)
!9927 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !9924, file: !9473, line: 497, type: !110)
!9928 = !DILocalVariable(name: "val", scope: !9929, file: !9473, line: 499, type: !110)
!9929 = distinct !DILexicalBlock(scope: !9924, file: !9473, line: 499, column: 3)
!9930 = !DILocation(line: 0, scope: !9924)
!9931 = !DILocation(line: 499, column: 3, scope: !9929)
!9932 = !DILocalVariable(name: "addr", arg: 1, scope: !9933, file: !6144, line: 476, type: !1440)
!9933 = distinct !DISubprogram(name: "__LDREXW", scope: !6144, file: !6144, line: 476, type: !9934, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9936)
!9934 = !DISubroutineType(types: !9935)
!9935 = !{!110, !1440}
!9936 = !{!9932, !9937}
!9937 = !DILocalVariable(name: "result", scope: !9933, file: !6144, line: 478, type: !110)
!9938 = !DILocation(line: 0, scope: !9933, inlinedAt: !9939)
!9939 = distinct !DILocation(line: 499, column: 3, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9929, file: !9473, line: 499, column: 3)
!9941 = !DILocation(line: 480, column: 4, scope: !9933, inlinedAt: !9939)
!9942 = !{i64 2861693}
!9943 = !DILocation(line: 499, column: 3, scope: !9940)
!9944 = !DILocation(line: 0, scope: !9929)
!9945 = !DILocalVariable(name: "value", arg: 1, scope: !9946, file: !6144, line: 527, type: !110)
!9946 = distinct !DISubprogram(name: "__STREXW", scope: !6144, file: !6144, line: 527, type: !9947, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9949)
!9947 = !DISubroutineType(types: !9948)
!9948 = !{!110, !110, !1440}
!9949 = !{!9945, !9950, !9951}
!9950 = !DILocalVariable(name: "addr", arg: 2, scope: !9946, file: !6144, line: 527, type: !1440)
!9951 = !DILocalVariable(name: "result", scope: !9946, file: !6144, line: 529, type: !110)
!9952 = !DILocation(line: 0, scope: !9946, inlinedAt: !9953)
!9953 = distinct !DILocation(line: 499, column: 3, scope: !9929)
!9954 = !DILocation(line: 531, column: 4, scope: !9946, inlinedAt: !9953)
!9955 = !{i64 2863129}
!9956 = distinct !{!9956, !9931, !9931}
!9957 = !DILocation(line: 500, column: 1, scope: !9924)
!9958 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9473, file: !9473, line: 850, type: !9647, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9959)
!9959 = !{!9960, !9961, !9962, !9963}
!9960 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9958, file: !9473, line: 850, type: !1390)
!9961 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9958, file: !9473, line: 850, type: !110)
!9962 = !DILocalVariable(name: "Parity", arg: 3, scope: !9958, file: !9473, line: 850, type: !110)
!9963 = !DILocalVariable(name: "StopBits", arg: 4, scope: !9958, file: !9473, line: 851, type: !110)
!9964 = !DILocation(line: 0, scope: !9958)
!9965 = !DILocation(line: 853, column: 3, scope: !9958)
!9966 = !DILocation(line: 854, column: 3, scope: !9958)
!9967 = !DILocation(line: 855, column: 1, scope: !9958)
!9968 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9473, file: !9473, line: 1337, type: !9536, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9969)
!9969 = !{!9970}
!9970 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9968, file: !9473, line: 1337, type: !1390)
!9971 = !DILocation(line: 0, scope: !9968)
!9972 = !DILocation(line: 1339, column: 3, scope: !9968)
!9973 = !DILocation(line: 1340, column: 1, scope: !9968)
!9974 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1471, file: !1471, line: 316, type: !9975, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9977)
!9975 = !DISubroutineType(types: !9976)
!9976 = !{!109, !1519, !1474}
!9977 = !{!9978, !9979, !9980}
!9978 = !DILocalVariable(name: "config", arg: 1, scope: !9974, file: !1471, line: 317, type: !1519)
!9979 = !DILocalVariable(name: "state", arg: 2, scope: !9974, file: !1471, line: 318, type: !1474)
!9980 = !DILocalVariable(name: "reg", scope: !9974, file: !1471, line: 320, type: !22)
!9981 = !DILocation(line: 0, scope: !9974)
!9982 = !DILocation(line: 329, column: 39, scope: !9974)
!9983 = !DILocation(line: 329, column: 52, scope: !9974)
!9984 = !DILocation(line: 329, column: 9, scope: !9974)
!9985 = !DILocation(line: 329, column: 2, scope: !9974)
!9986 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !9886, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1305, retainedNodes: !9987)
!9987 = !{!9988}
!9988 = !DILocalVariable(name: "dev", arg: 1, scope: !9986, file: !321, line: 730, type: !1349)
!9989 = !DILocation(line: 0, scope: !9986)
!9990 = !DILocation(line: 732, column: 9, scope: !9986)
!9991 = !DILocation(line: 732, column: 2, scope: !9986)
!9992 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1598, file: !1598, line: 270, type: !1604, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !9993)
!9993 = !{!9994}
!9994 = !DILocalVariable(name: "dev", arg: 1, scope: !9992, file: !1598, line: 270, type: !1606)
!9995 = !DILocation(line: 0, scope: !9992)
!9996 = !DILocation(line: 274, column: 2, scope: !9992)
!9997 = !DILocation(line: 275, column: 12, scope: !9992)
!9998 = !DILocation(line: 276, column: 15, scope: !9992)
!9999 = !DILocation(line: 277, column: 16, scope: !9992)
!10000 = !DILocation(line: 278, column: 15, scope: !9992)
!10001 = !DILocation(line: 279, column: 16, scope: !9992)
!10002 = !DILocation(line: 282, column: 2, scope: !9992)
!10003 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6184, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !10004)
!10004 = !{!10005, !10006}
!10005 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10003, file: !536, line: 1814, type: !762)
!10006 = !DILocalVariable(name: "priority", arg: 2, scope: !10003, file: !536, line: 1814, type: !110)
!10007 = !DILocation(line: 0, scope: !10003)
!10008 = !DILocation(line: 1822, column: 46, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10010, file: !536, line: 1821, column: 3)
!10010 = distinct !DILexicalBlock(scope: !10003, file: !536, line: 1816, column: 7)
!10011 = !DILocation(line: 1824, column: 1, scope: !10003)
!10012 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1598, file: !1598, line: 118, type: !6081, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !10013)
!10013 = !{!10014, !10015}
!10014 = !DILocalVariable(name: "arg", arg: 1, scope: !10012, file: !1598, line: 118, type: !108)
!10015 = !DILocalVariable(name: "dticks", scope: !10012, file: !1598, line: 121, type: !110)
!10016 = !DILocation(line: 0, scope: !10012)
!10017 = !DILocation(line: 124, column: 2, scope: !10012)
!10018 = !DILocation(line: 129, column: 17, scope: !10012)
!10019 = !DILocation(line: 129, column: 14, scope: !10012)
!10020 = !DILocation(line: 130, column: 15, scope: !10012)
!10021 = !DILocation(line: 145, column: 27, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10023, file: !1598, line: 132, column: 16)
!10023 = distinct !DILexicalBlock(scope: !10012, file: !1598, line: 132, column: 6)
!10024 = !DILocation(line: 145, column: 25, scope: !10022)
!10025 = !DILocation(line: 145, column: 45, scope: !10022)
!10026 = !DILocation(line: 146, column: 30, scope: !10022)
!10027 = !DILocation(line: 146, column: 20, scope: !10022)
!10028 = !DILocation(line: 147, column: 3, scope: !10022)
!10029 = !DILocation(line: 151, column: 2, scope: !10012)
!10030 = !DILocation(line: 152, column: 1, scope: !10012)
!10031 = distinct !DISubprogram(name: "elapsed", scope: !1598, file: !1598, line: 85, type: !3368, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !10032)
!10032 = !{!10033, !10034, !10035}
!10033 = !DILocalVariable(name: "val1", scope: !10031, file: !1598, line: 87, type: !110)
!10034 = !DILocalVariable(name: "ctrl", scope: !10031, file: !1598, line: 88, type: !110)
!10035 = !DILocalVariable(name: "val2", scope: !10031, file: !1598, line: 89, type: !110)
!10036 = !DILocation(line: 87, column: 27, scope: !10031)
!10037 = !DILocation(line: 0, scope: !10031)
!10038 = !DILocation(line: 88, column: 27, scope: !10031)
!10039 = !DILocation(line: 89, column: 27, scope: !10031)
!10040 = !DILocation(line: 105, column: 12, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10031, file: !1598, line: 105, column: 6)
!10042 = !DILocation(line: 106, column: 6, scope: !10041)
!10043 = !DILocation(line: 107, column: 16, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10041, file: !1598, line: 106, column: 24)
!10045 = !DILocation(line: 111, column: 18, scope: !10044)
!10046 = !DILocation(line: 112, column: 2, scope: !10044)
!10047 = !DILocation(line: 114, column: 20, scope: !10031)
!10048 = !DILocation(line: 114, column: 30, scope: !10031)
!10049 = !DILocation(line: 114, column: 28, scope: !10031)
!10050 = !DILocation(line: 114, column: 2, scope: !10031)
!10051 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1598, file: !1598, line: 154, type: !10052, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !10054)
!10052 = !DISubroutineType(types: !10053)
!10053 = !{null, !736, !334}
!10054 = !{!10055, !10056, !10057, !10058, !10059, !10060, !10061, !10066, !10067}
!10055 = !DILocalVariable(name: "ticks", arg: 1, scope: !10051, file: !1598, line: 154, type: !736)
!10056 = !DILocalVariable(name: "idle", arg: 2, scope: !10051, file: !1598, line: 154, type: !334)
!10057 = !DILocalVariable(name: "delay", scope: !10051, file: !1598, line: 169, type: !110)
!10058 = !DILocalVariable(name: "val1", scope: !10051, file: !1598, line: 170, type: !110)
!10059 = !DILocalVariable(name: "val2", scope: !10051, file: !1598, line: 170, type: !110)
!10060 = !DILocalVariable(name: "last_load_", scope: !10051, file: !1598, line: 171, type: !110)
!10061 = !DILocalVariable(name: "key", scope: !10051, file: !1598, line: 176, type: !10062)
!10062 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !10063)
!10063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !10064)
!10064 = !{!10065}
!10065 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10063, file: !254, line: 33, baseType: !109, size: 32)
!10066 = !DILocalVariable(name: "pending", scope: !10051, file: !1598, line: 178, type: !110)
!10067 = !DILocalVariable(name: "unannounced", scope: !10051, file: !1598, line: 185, type: !110)
!10068 = !DILocation(line: 0, scope: !10051)
!10069 = !DILocation(line: 162, column: 49, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10051, file: !1598, line: 162, column: 6)
!10071 = !DILocation(line: 163, column: 17, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10070, file: !1598, line: 162, column: 78)
!10073 = !DILocation(line: 164, column: 13, scope: !10072)
!10074 = !DILocation(line: 165, column: 3, scope: !10072)
!10075 = !DILocation(line: 171, column: 24, scope: !10051)
!10076 = !DILocation(line: 173, column: 10, scope: !10051)
!10077 = !DILocation(line: 174, column: 10, scope: !10051)
!10078 = !DILocalVariable(name: "l", arg: 1, scope: !10079, file: !254, line: 136, type: !10082)
!10079 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !10080, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !10083)
!10080 = !DISubroutineType(types: !10081)
!10081 = !{!10062, !10082}
!10082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 32)
!10083 = !{!10078, !10084}
!10084 = !DILocalVariable(name: "k", scope: !10079, file: !254, line: 139, type: !10062)
!10085 = !DILocation(line: 0, scope: !10079, inlinedAt: !10086)
!10086 = distinct !DILocation(line: 176, column: 25, scope: !10051)
!10087 = !DILocation(line: 55, column: 2, scope: !10088, inlinedAt: !10092)
!10088 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5970, file: !5970, line: 42, type: !5971, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !10089)
!10089 = !{!10090, !10091}
!10090 = !DILocalVariable(name: "key", scope: !10088, file: !5970, line: 44, type: !32)
!10091 = !DILocalVariable(name: "tmp", scope: !10088, file: !5970, line: 53, type: !32)
!10092 = distinct !DILocation(line: 145, column: 10, scope: !10079, inlinedAt: !10086)
!10093 = !{i64 1924231}
!10094 = !DILocation(line: 0, scope: !10088, inlinedAt: !10092)
!10095 = !DILocation(line: 148, column: 2, scope: !10096, inlinedAt: !10086)
!10096 = distinct !DILexicalBlock(scope: !10097, file: !254, line: 148, column: 2)
!10097 = distinct !DILexicalBlock(scope: !10079, file: !254, line: 148, column: 2)
!10098 = !DILocation(line: 148, column: 2, scope: !10097, inlinedAt: !10086)
!10099 = !DILocation(line: 148, column: 2, scope: !10100, inlinedAt: !10086)
!10100 = distinct !DILexicalBlock(scope: !10096, file: !254, line: 148, column: 2)
!10101 = !DILocation(line: 160, column: 2, scope: !10079, inlinedAt: !10086)
!10102 = !DILocation(line: 178, column: 21, scope: !10051)
!10103 = !DILocation(line: 180, column: 18, scope: !10051)
!10104 = !DILocation(line: 182, column: 14, scope: !10051)
!10105 = !DILocation(line: 183, column: 15, scope: !10051)
!10106 = !DILocation(line: 185, column: 39, scope: !10051)
!10107 = !DILocation(line: 185, column: 37, scope: !10051)
!10108 = !DILocation(line: 187, column: 27, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10051, file: !1598, line: 187, column: 6)
!10110 = !DILocation(line: 187, column: 6, scope: !10051)
!10111 = !DILocation(line: 202, column: 27, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10109, file: !1598, line: 195, column: 9)
!10113 = !DILocation(line: 202, column: 48, scope: !10112)
!10114 = !DILocation(line: 203, column: 9, scope: !10112)
!10115 = !DILocation(line: 204, column: 11, scope: !10112)
!10116 = !DILocation(line: 205, column: 13, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10112, file: !1598, line: 205, column: 7)
!10118 = !DILocation(line: 205, column: 7, scope: !10112)
!10119 = !DILocation(line: 0, scope: !10109)
!10120 = !DILocation(line: 212, column: 18, scope: !10051)
!10121 = !DILocation(line: 214, column: 28, scope: !10051)
!10122 = !DILocation(line: 214, column: 16, scope: !10051)
!10123 = !DILocation(line: 215, column: 15, scope: !10051)
!10124 = !DILocation(line: 227, column: 11, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10051, file: !1598, line: 227, column: 6)
!10126 = !DILocation(line: 227, column: 6, scope: !10051)
!10127 = !DILocation(line: 228, column: 15, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10125, file: !1598, line: 227, column: 19)
!10129 = !DILocation(line: 228, column: 38, scope: !10128)
!10130 = !DILocation(line: 228, column: 24, scope: !10128)
!10131 = !DILocation(line: 229, column: 2, scope: !10128)
!10132 = !DILocation(line: 230, column: 24, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10125, file: !1598, line: 229, column: 9)
!10134 = !DILocation(line: 230, column: 15, scope: !10133)
!10135 = !DILocation(line: 0, scope: !10125)
!10136 = !DILocalVariable(name: "key", arg: 2, scope: !10137, file: !254, line: 190, type: !10062)
!10137 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !10138, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !10140)
!10138 = !DISubroutineType(types: !10139)
!10139 = !{null, !10082, !10062}
!10140 = !{!10141, !10136}
!10141 = !DILocalVariable(name: "l", arg: 1, scope: !10137, file: !254, line: 189, type: !10082)
!10142 = !DILocation(line: 0, scope: !10137, inlinedAt: !10143)
!10143 = distinct !DILocation(line: 232, column: 2, scope: !10051)
!10144 = !DILocation(line: 194, column: 2, scope: !10145, inlinedAt: !10143)
!10145 = distinct !DILexicalBlock(scope: !10146, file: !254, line: 194, column: 2)
!10146 = distinct !DILexicalBlock(scope: !10137, file: !254, line: 194, column: 2)
!10147 = !DILocation(line: 194, column: 2, scope: !10146, inlinedAt: !10143)
!10148 = !DILocation(line: 194, column: 2, scope: !10149, inlinedAt: !10143)
!10149 = distinct !DILexicalBlock(scope: !10145, file: !254, line: 194, column: 2)
!10150 = !DILocalVariable(name: "key", arg: 1, scope: !10151, file: !5970, line: 84, type: !32)
!10151 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5970, file: !5970, line: 84, type: !5981, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !10152)
!10152 = !{!10150}
!10153 = !DILocation(line: 0, scope: !10151, inlinedAt: !10154)
!10154 = distinct !DILocation(line: 215, column: 2, scope: !10137, inlinedAt: !10143)
!10155 = !DILocation(line: 95, column: 2, scope: !10151, inlinedAt: !10154)
!10156 = !{i64 1925048}
!10157 = !DILocation(line: 234, column: 1, scope: !10051)
!10158 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1598, file: !1598, line: 236, type: !3368, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !10159)
!10159 = !{!10160, !10161}
!10160 = !DILocalVariable(name: "key", scope: !10158, file: !1598, line: 242, type: !10062)
!10161 = !DILocalVariable(name: "cyc", scope: !10158, file: !1598, line: 243, type: !110)
!10162 = !DILocation(line: 0, scope: !10079, inlinedAt: !10163)
!10163 = distinct !DILocation(line: 242, column: 25, scope: !10158)
!10164 = !DILocation(line: 55, column: 2, scope: !10088, inlinedAt: !10165)
!10165 = distinct !DILocation(line: 145, column: 10, scope: !10079, inlinedAt: !10163)
!10166 = !DILocation(line: 0, scope: !10088, inlinedAt: !10165)
!10167 = !DILocation(line: 148, column: 2, scope: !10096, inlinedAt: !10163)
!10168 = !DILocation(line: 148, column: 2, scope: !10097, inlinedAt: !10163)
!10169 = !DILocation(line: 148, column: 2, scope: !10100, inlinedAt: !10163)
!10170 = !DILocation(line: 160, column: 2, scope: !10079, inlinedAt: !10163)
!10171 = !DILocation(line: 0, scope: !10158)
!10172 = !DILocation(line: 243, column: 17, scope: !10158)
!10173 = !DILocation(line: 243, column: 29, scope: !10158)
!10174 = !DILocation(line: 243, column: 43, scope: !10158)
!10175 = !DILocation(line: 0, scope: !10137, inlinedAt: !10176)
!10176 = distinct !DILocation(line: 245, column: 2, scope: !10158)
!10177 = !DILocation(line: 194, column: 2, scope: !10145, inlinedAt: !10176)
!10178 = !DILocation(line: 194, column: 2, scope: !10146, inlinedAt: !10176)
!10179 = !DILocation(line: 194, column: 2, scope: !10149, inlinedAt: !10176)
!10180 = !DILocation(line: 243, column: 27, scope: !10158)
!10181 = !DILocation(line: 243, column: 41, scope: !10158)
!10182 = !DILocation(line: 0, scope: !10151, inlinedAt: !10183)
!10183 = distinct !DILocation(line: 215, column: 2, scope: !10137, inlinedAt: !10176)
!10184 = !DILocation(line: 95, column: 2, scope: !10151, inlinedAt: !10183)
!10185 = !DILocation(line: 246, column: 13, scope: !10158)
!10186 = !DILocation(line: 246, column: 2, scope: !10158)
!10187 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1598, file: !1598, line: 249, type: !3368, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !10188)
!10188 = !{!10189, !10190}
!10189 = !DILocalVariable(name: "key", scope: !10187, file: !1598, line: 251, type: !10062)
!10190 = !DILocalVariable(name: "ret", scope: !10187, file: !1598, line: 252, type: !110)
!10191 = !DILocation(line: 0, scope: !10079, inlinedAt: !10192)
!10192 = distinct !DILocation(line: 251, column: 25, scope: !10187)
!10193 = !DILocation(line: 55, column: 2, scope: !10088, inlinedAt: !10194)
!10194 = distinct !DILocation(line: 145, column: 10, scope: !10079, inlinedAt: !10192)
!10195 = !DILocation(line: 0, scope: !10088, inlinedAt: !10194)
!10196 = !DILocation(line: 148, column: 2, scope: !10096, inlinedAt: !10192)
!10197 = !DILocation(line: 148, column: 2, scope: !10097, inlinedAt: !10192)
!10198 = !DILocation(line: 148, column: 2, scope: !10100, inlinedAt: !10192)
!10199 = !DILocation(line: 160, column: 2, scope: !10079, inlinedAt: !10192)
!10200 = !DILocation(line: 0, scope: !10187)
!10201 = !DILocation(line: 252, column: 17, scope: !10187)
!10202 = !DILocation(line: 252, column: 29, scope: !10187)
!10203 = !DILocation(line: 0, scope: !10137, inlinedAt: !10204)
!10204 = distinct !DILocation(line: 254, column: 2, scope: !10187)
!10205 = !DILocation(line: 194, column: 2, scope: !10145, inlinedAt: !10204)
!10206 = !DILocation(line: 194, column: 2, scope: !10146, inlinedAt: !10204)
!10207 = !DILocation(line: 194, column: 2, scope: !10149, inlinedAt: !10204)
!10208 = !DILocation(line: 252, column: 27, scope: !10187)
!10209 = !DILocation(line: 0, scope: !10151, inlinedAt: !10210)
!10210 = distinct !DILocation(line: 215, column: 2, scope: !10137, inlinedAt: !10204)
!10211 = !DILocation(line: 95, column: 2, scope: !10151, inlinedAt: !10210)
!10212 = !DILocation(line: 255, column: 2, scope: !10187)
!10213 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1598, file: !1598, line: 258, type: !3086, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !1998)
!10214 = !DILocation(line: 260, column: 6, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10213, file: !1598, line: 260, column: 6)
!10216 = !DILocation(line: 260, column: 16, scope: !10215)
!10217 = !DILocation(line: 260, column: 6, scope: !10213)
!10218 = !DILocation(line: 261, column: 17, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10215, file: !1598, line: 260, column: 34)
!10220 = !DILocation(line: 262, column: 2, scope: !10219)
!10221 = !DILocation(line: 263, column: 1, scope: !10213)
!10222 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1598, file: !1598, line: 265, type: !3086, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1522, retainedNodes: !1998)
!10223 = !DILocation(line: 267, column: 16, scope: !10222)
!10224 = !DILocation(line: 268, column: 1, scope: !10222)
!10225 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10226, file: !10226, line: 9, type: !10227, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10250)
!10226 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10227 = !DISubroutineType(types: !10228)
!10228 = !{!109, !10229, !167, !10249}
!10229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10230, size: 32)
!10230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10231)
!10231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1471, line: 60, size: 64, elements: !10232)
!10232 = !{!10233, !10248}
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10231, file: !1471, line: 69, baseType: !10234, size: 32)
!10234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10235, size: 32)
!10235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10236)
!10236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1471, line: 50, size: 64, elements: !10237)
!10237 = !{!10238, !10246, !10247}
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10236, file: !1471, line: 52, baseType: !10239, size: 32)
!10239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10240, size: 32)
!10240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10241)
!10241 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1482, line: 37, baseType: !10242)
!10242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1482, line: 32, size: 64, elements: !10243)
!10243 = !{!10244, !10245}
!10244 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10242, file: !1482, line: 34, baseType: !110, size: 32)
!10245 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10242, file: !1482, line: 36, baseType: !110, size: 32, offset: 32)
!10246 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10236, file: !1471, line: 54, baseType: !167, size: 8, offset: 32)
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10236, file: !1471, line: 56, baseType: !167, size: 8, offset: 40)
!10248 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10231, file: !1471, line: 71, baseType: !167, size: 8, offset: 32)
!10249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10234, size: 32)
!10250 = !{!10251, !10252, !10253}
!10251 = !DILocalVariable(name: "config", arg: 1, scope: !10225, file: !10226, line: 9, type: !10229)
!10252 = !DILocalVariable(name: "id", arg: 2, scope: !10225, file: !10226, line: 9, type: !167)
!10253 = !DILocalVariable(name: "state", arg: 3, scope: !10225, file: !10226, line: 10, type: !10249)
!10254 = !DILocation(line: 0, scope: !10225)
!10255 = !DILocation(line: 12, column: 20, scope: !10225)
!10256 = !DILocation(line: 13, column: 27, scope: !10225)
!10257 = !DILocation(line: 13, column: 42, scope: !10225)
!10258 = !DILocation(line: 13, column: 19, scope: !10225)
!10259 = !DILocation(line: 13, column: 16, scope: !10225)
!10260 = !DILocation(line: 13, column: 2, scope: !10225)
!10261 = distinct !{!10261, !10260, !10262}
!10262 = !DILocation(line: 19, column: 2, scope: !10225)
!10263 = !DILocation(line: 14, column: 23, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10265, file: !10226, line: 14, column: 7)
!10265 = distinct !DILexicalBlock(scope: !10225, file: !10226, line: 13, column: 54)
!10266 = !DILocation(line: 14, column: 10, scope: !10264)
!10267 = !DILocation(line: 18, column: 11, scope: !10265)
!10268 = !DILocation(line: 14, column: 7, scope: !10265)
!10269 = !DILocation(line: 22, column: 1, scope: !10225)
!10270 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1717, file: !1717, line: 193, type: !10271, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10280)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{!109, !10273, !167, !22}
!10273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10274, size: 32)
!10274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10275)
!10275 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1482, line: 37, baseType: !10276)
!10276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1482, line: 32, size: 64, elements: !10277)
!10277 = !{!10278, !10279}
!10278 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10276, file: !1482, line: 34, baseType: !110, size: 32)
!10279 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10276, file: !1482, line: 36, baseType: !110, size: 32, offset: 32)
!10280 = !{!10281, !10282, !10283, !10284, !10285, !10286, !10287, !10288, !10290}
!10281 = !DILocalVariable(name: "pins", arg: 1, scope: !10270, file: !1717, line: 193, type: !10273)
!10282 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10270, file: !1717, line: 193, type: !167)
!10283 = !DILocalVariable(name: "reg", arg: 3, scope: !10270, file: !1717, line: 194, type: !22)
!10284 = !DILocalVariable(name: "pin", scope: !10270, file: !1717, line: 196, type: !110)
!10285 = !DILocalVariable(name: "mux", scope: !10270, file: !1717, line: 196, type: !110)
!10286 = !DILocalVariable(name: "pin_cgf", scope: !10270, file: !1717, line: 197, type: !110)
!10287 = !DILocalVariable(name: "ret", scope: !10270, file: !1717, line: 198, type: !109)
!10288 = !DILocalVariable(name: "i", scope: !10289, file: !1717, line: 209, type: !167)
!10289 = distinct !DILexicalBlock(scope: !10270, file: !1717, line: 209, column: 2)
!10290 = !DILocalVariable(name: "gpio_out", scope: !10291, file: !1717, line: 239, type: !110)
!10291 = distinct !DILexicalBlock(scope: !10292, file: !1717, line: 238, column: 55)
!10292 = distinct !DILexicalBlock(scope: !10293, file: !1717, line: 238, column: 14)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !1717, line: 236, column: 14)
!10294 = distinct !DILexicalBlock(scope: !10295, file: !1717, line: 234, column: 7)
!10295 = distinct !DILexicalBlock(scope: !10296, file: !1717, line: 209, column: 41)
!10296 = distinct !DILexicalBlock(scope: !10289, file: !1717, line: 209, column: 2)
!10297 = !DILocation(line: 0, scope: !10270)
!10298 = !DILocation(line: 0, scope: !10289)
!10299 = !DILocation(line: 209, column: 25, scope: !10296)
!10300 = !DILocation(line: 209, column: 2, scope: !10289)
!10301 = distinct !{!10301, !10300, !10302}
!10302 = !DILocation(line: 259, column: 2, scope: !10289)
!10303 = !DILocation(line: 210, column: 17, scope: !10295)
!10304 = !DILocation(line: 234, column: 7, scope: !10294)
!10305 = !DILocation(line: 234, column: 33, scope: !10294)
!10306 = !DILocation(line: 234, column: 7, scope: !10295)
!10307 = !DILocation(line: 235, column: 22, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10294, file: !1717, line: 234, column: 49)
!10309 = !DILocation(line: 235, column: 29, scope: !10308)
!10310 = !DILocation(line: 236, column: 3, scope: !10308)
!10311 = !DILocation(line: 236, column: 14, scope: !10294)
!10312 = !DILocation(line: 239, column: 32, scope: !10291)
!10313 = !DILocation(line: 0, scope: !10291)
!10314 = !DILocation(line: 241, column: 8, scope: !10291)
!10315 = !DILocation(line: 246, column: 3, scope: !10291)
!10316 = !DILocation(line: 252, column: 9, scope: !10295)
!10317 = !DILocation(line: 255, column: 9, scope: !10295)
!10318 = !DILocation(line: 256, column: 11, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10295, file: !1717, line: 256, column: 7)
!10320 = !DILocation(line: 209, column: 37, scope: !10296)
!10321 = !DILocation(line: 256, column: 7, scope: !10295)
!10322 = !DILocation(line: 262, column: 1, scope: !10270)
!10323 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1717, file: !1717, line: 176, type: !10324, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10326)
!10324 = !DISubroutineType(types: !10325)
!10325 = !{!109, !110, !110, !110}
!10326 = !{!10327, !10328, !10329, !10330}
!10327 = !DILocalVariable(name: "pin", arg: 1, scope: !10323, file: !1717, line: 176, type: !110)
!10328 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10323, file: !1717, line: 176, type: !110)
!10329 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10323, file: !1717, line: 176, type: !110)
!10330 = !DILocalVariable(name: "port_device", scope: !10323, file: !1717, line: 178, type: !1647)
!10331 = !DILocation(line: 0, scope: !10323)
!10332 = !DILocation(line: 180, column: 22, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10323, file: !1717, line: 180, column: 6)
!10334 = !DILocation(line: 180, column: 6, scope: !10323)
!10335 = !DILocation(line: 180, column: 6, scope: !10333)
!10336 = !DILocation(line: 184, column: 16, scope: !10323)
!10337 = !DILocation(line: 186, column: 19, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10323, file: !1717, line: 186, column: 6)
!10339 = !DILocation(line: 186, column: 28, scope: !10338)
!10340 = !DILocation(line: 186, column: 33, scope: !10338)
!10341 = !DILocation(line: 186, column: 6, scope: !10323)
!10342 = !DILocation(line: 190, column: 43, scope: !10323)
!10343 = !DILocation(line: 190, column: 9, scope: !10323)
!10344 = !DILocation(line: 190, column: 2, scope: !10323)
!10345 = !DILocation(line: 191, column: 1, scope: !10323)
!10346 = distinct !DISubprogram(name: "device_is_ready", scope: !8284, file: !8284, line: 47, type: !10347, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10349)
!10347 = !DISubroutineType(types: !10348)
!10348 = !{!334, !1647}
!10349 = !{!10350}
!10350 = !DILocalVariable(name: "dev", arg: 1, scope: !10346, file: !8284, line: 47, type: !1647)
!10351 = !DILocation(line: 0, scope: !10346)
!10352 = !DILocation(line: 55, column: 2, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10346, file: !8284, line: 55, column: 2)
!10354 = !{i64 2149162301}
!10355 = !DILocation(line: 56, column: 9, scope: !10346)
!10356 = !DILocation(line: 56, column: 2, scope: !10346)
!10357 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !10347, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10358)
!10358 = !{!10359}
!10359 = !DILocalVariable(name: "dev", arg: 1, scope: !10357, file: !321, line: 730, type: !1647)
!10360 = !DILocation(line: 0, scope: !10357)
!10361 = !DILocation(line: 732, column: 9, scope: !10357)
!10362 = !DILocation(line: 732, column: 2, scope: !10357)
!10363 = distinct !DISubprogram(name: "SystemInit", scope: !1767, file: !1767, line: 167, type: !3086, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1725, retainedNodes: !1998)
!10364 = !DILocation(line: 182, column: 1, scope: !10363)
!10365 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1767, file: !1767, line: 220, type: !3086, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1725, retainedNodes: !10366)
!10366 = !{!10367, !10368, !10369, !10370, !10371}
!10367 = !DILocalVariable(name: "tmp", scope: !10365, file: !1767, line: 222, type: !110)
!10368 = !DILocalVariable(name: "pllvco", scope: !10365, file: !1767, line: 222, type: !110)
!10369 = !DILocalVariable(name: "pllp", scope: !10365, file: !1767, line: 222, type: !110)
!10370 = !DILocalVariable(name: "pllsource", scope: !10365, file: !1767, line: 222, type: !110)
!10371 = !DILocalVariable(name: "pllm", scope: !10365, file: !1767, line: 222, type: !110)
!10372 = !DILocation(line: 0, scope: !10365)
!10373 = !DILocation(line: 225, column: 14, scope: !10365)
!10374 = !DILocation(line: 225, column: 19, scope: !10365)
!10375 = !DILocation(line: 227, column: 3, scope: !10365)
!10376 = !DILocation(line: 234, column: 7, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10365, file: !1767, line: 228, column: 3)
!10378 = !DILocation(line: 240, column: 25, scope: !10377)
!10379 = !DILocation(line: 241, column: 19, scope: !10377)
!10380 = !DILocation(line: 241, column: 27, scope: !10377)
!10381 = !DILocation(line: 243, column: 21, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10377, file: !1767, line: 243, column: 11)
!10383 = !DILocation(line: 0, scope: !10382)
!10384 = !DILocation(line: 254, column: 22, scope: !10377)
!10385 = !DILocation(line: 254, column: 62, scope: !10377)
!10386 = !DILocation(line: 255, column: 31, scope: !10377)
!10387 = !DILocation(line: 256, column: 7, scope: !10377)
!10388 = !DILocation(line: 0, scope: !10377)
!10389 = !DILocation(line: 263, column: 30, scope: !10365)
!10390 = !DILocation(line: 263, column: 52, scope: !10365)
!10391 = !DILocation(line: 263, column: 9, scope: !10365)
!10392 = !DILocation(line: 265, column: 19, scope: !10365)
!10393 = !DILocation(line: 266, column: 1, scope: !10365)
!10394 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10395, file: !10395, line: 200, type: !10396, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !1998)
!10395 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10396 = !DISubroutineType(types: !10397)
!10397 = !{!10398}
!10398 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2899, line: 44, baseType: !2898)
!10399 = !DILocation(line: 202, column: 3, scope: !10394)
!10400 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10395, file: !10395, line: 219, type: !10401, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !10425)
!10401 = !DISubroutineType(types: !10402)
!10402 = !{!10398, !10403}
!10403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10404, size: 32)
!10404 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10405, line: 70, baseType: !10406)
!10405 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10405, line: 49, size: 384, elements: !10407)
!10407 = !{!10408, !10409, !10410, !10411, !10412, !10413, !10414}
!10408 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10406, file: !10405, line: 51, baseType: !110, size: 32)
!10409 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10406, file: !10405, line: 54, baseType: !110, size: 32, offset: 32)
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10406, file: !10405, line: 57, baseType: !110, size: 32, offset: 64)
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10406, file: !10405, line: 60, baseType: !110, size: 32, offset: 96)
!10412 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10406, file: !10405, line: 63, baseType: !110, size: 32, offset: 128)
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10406, file: !10405, line: 66, baseType: !110, size: 32, offset: 160)
!10414 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10406, file: !10405, line: 69, baseType: !10415, size: 192, offset: 192)
!10415 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10416, line: 73, baseType: !10417)
!10416 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10417 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10416, line: 45, size: 192, elements: !10418)
!10418 = !{!10419, !10420, !10421, !10422, !10423, !10424}
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10417, file: !10416, line: 47, baseType: !110, size: 32)
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10417, file: !10416, line: 50, baseType: !110, size: 32, offset: 32)
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10417, file: !10416, line: 53, baseType: !110, size: 32, offset: 64)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10417, file: !10416, line: 56, baseType: !110, size: 32, offset: 96)
!10423 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10417, file: !10416, line: 60, baseType: !110, size: 32, offset: 128)
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10417, file: !10416, line: 63, baseType: !110, size: 32, offset: 160)
!10425 = !{!10426, !10427, !10428, !10429, !10433}
!10426 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10400, file: !10395, line: 219, type: !10403)
!10427 = !DILocalVariable(name: "tickstart", scope: !10400, file: !10395, line: 221, type: !110)
!10428 = !DILocalVariable(name: "pll_config", scope: !10400, file: !10395, line: 221, type: !110)
!10429 = !DILocalVariable(name: "pwrclkchanged", scope: !10430, file: !10395, line: 391, type: !10432)
!10430 = distinct !DILexicalBlock(scope: !10431, file: !10395, line: 390, column: 3)
!10431 = distinct !DILexicalBlock(scope: !10400, file: !10395, line: 389, column: 6)
!10432 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !801, line: 188, baseType: !2905)
!10433 = !DILocalVariable(name: "tmpreg", scope: !10434, file: !10395, line: 400, type: !301)
!10434 = distinct !DILexicalBlock(scope: !10435, file: !10395, line: 400, column: 7)
!10435 = distinct !DILexicalBlock(scope: !10436, file: !10395, line: 399, column: 5)
!10436 = distinct !DILexicalBlock(scope: !10430, file: !10395, line: 398, column: 8)
!10437 = !DILocation(line: 0, scope: !10400)
!10438 = !DILocation(line: 224, column: 24, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10400, file: !10395, line: 224, column: 6)
!10440 = !DILocation(line: 224, column: 6, scope: !10400)
!10441 = !DILocation(line: 232, column: 27, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10400, file: !10395, line: 232, column: 6)
!10443 = !DILocation(line: 232, column: 43, scope: !10442)
!10444 = !DILocation(line: 232, column: 69, scope: !10442)
!10445 = !DILocation(line: 232, column: 6, scope: !10400)
!10446 = !DILocation(line: 237, column: 9, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10448, file: !10395, line: 237, column: 8)
!10448 = distinct !DILexicalBlock(scope: !10442, file: !10395, line: 233, column: 3)
!10449 = !DILocation(line: 237, column: 39, scope: !10447)
!10450 = !DILocation(line: 237, column: 60, scope: !10447)
!10451 = !DILocation(line: 238, column: 9, scope: !10447)
!10452 = !DILocation(line: 238, column: 39, scope: !10447)
!10453 = !DILocation(line: 238, column: 60, scope: !10447)
!10454 = !DILocation(line: 238, column: 70, scope: !10447)
!10455 = !DILocation(line: 238, column: 78, scope: !10447)
!10456 = !DILocation(line: 238, column: 100, scope: !10447)
!10457 = !DILocation(line: 237, column: 8, scope: !10448)
!10458 = !DILocation(line: 240, column: 11, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10460, file: !10395, line: 240, column: 10)
!10460 = distinct !DILexicalBlock(scope: !10447, file: !10395, line: 239, column: 5)
!10461 = !DILocation(line: 240, column: 57, scope: !10459)
!10462 = !DILocation(line: 240, column: 80, scope: !10459)
!10463 = !DILocation(line: 240, column: 89, scope: !10459)
!10464 = !DILocation(line: 240, column: 10, scope: !10460)
!10465 = !DILocation(line: 248, column: 7, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10467, file: !10395, line: 248, column: 7)
!10467 = distinct !DILexicalBlock(scope: !10468, file: !10395, line: 248, column: 7)
!10468 = distinct !DILexicalBlock(scope: !10447, file: !10395, line: 246, column: 5)
!10469 = !DILocation(line: 248, column: 7, scope: !10467)
!10470 = !DILocation(line: 248, column: 7, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10466, file: !10395, line: 248, column: 7)
!10472 = !DILocation(line: 248, column: 7, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10474, file: !10395, line: 248, column: 7)
!10474 = distinct !DILexicalBlock(scope: !10466, file: !10395, line: 248, column: 7)
!10475 = !DILocation(line: 248, column: 7, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10474, file: !10395, line: 248, column: 7)
!10477 = !DILocation(line: 0, scope: !10466)
!10478 = !DILocation(line: 251, column: 30, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10468, file: !10395, line: 251, column: 10)
!10480 = !DILocation(line: 251, column: 40, scope: !10479)
!10481 = !DILocation(line: 0, scope: !10479)
!10482 = !DILocation(line: 251, column: 10, scope: !10468)
!10483 = !DILocation(line: 257, column: 15, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10479, file: !10395, line: 252, column: 7)
!10485 = !DILocation(line: 257, column: 51, scope: !10484)
!10486 = !DILocation(line: 257, column: 9, scope: !10484)
!10487 = !DILocation(line: 259, column: 15, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10489, file: !10395, line: 259, column: 14)
!10489 = distinct !DILexicalBlock(scope: !10484, file: !10395, line: 258, column: 9)
!10490 = !DILocation(line: 259, column: 29, scope: !10488)
!10491 = !DILocation(line: 259, column: 43, scope: !10488)
!10492 = !DILocation(line: 259, column: 14, scope: !10489)
!10493 = distinct !{!10493, !10486, !10494}
!10494 = !DILocation(line: 263, column: 9, scope: !10484)
!10495 = !DILocation(line: 271, column: 15, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10479, file: !10395, line: 266, column: 7)
!10497 = !DILocation(line: 271, column: 9, scope: !10496)
!10498 = !DILocation(line: 273, column: 15, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10500, file: !10395, line: 273, column: 14)
!10500 = distinct !DILexicalBlock(scope: !10496, file: !10395, line: 272, column: 9)
!10501 = !DILocation(line: 273, column: 29, scope: !10499)
!10502 = !DILocation(line: 273, column: 43, scope: !10499)
!10503 = !DILocation(line: 273, column: 14, scope: !10500)
!10504 = distinct !{!10504, !10497, !10505}
!10505 = !DILocation(line: 277, column: 9, scope: !10496)
!10506 = !DILocation(line: 282, column: 27, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10400, file: !10395, line: 282, column: 6)
!10508 = !DILocation(line: 282, column: 43, scope: !10507)
!10509 = !DILocation(line: 282, column: 69, scope: !10507)
!10510 = !DILocation(line: 282, column: 6, scope: !10400)
!10511 = !DILocation(line: 289, column: 9, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10513, file: !10395, line: 289, column: 8)
!10513 = distinct !DILexicalBlock(scope: !10507, file: !10395, line: 283, column: 3)
!10514 = !DILocation(line: 289, column: 39, scope: !10512)
!10515 = !DILocation(line: 289, column: 60, scope: !10512)
!10516 = !DILocation(line: 290, column: 9, scope: !10512)
!10517 = !DILocation(line: 290, column: 39, scope: !10512)
!10518 = !DILocation(line: 290, column: 60, scope: !10512)
!10519 = !DILocation(line: 290, column: 70, scope: !10512)
!10520 = !DILocation(line: 290, column: 78, scope: !10512)
!10521 = !DILocation(line: 290, column: 100, scope: !10512)
!10522 = !DILocation(line: 289, column: 8, scope: !10513)
!10523 = !DILocation(line: 293, column: 11, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !10395, line: 293, column: 10)
!10525 = distinct !DILexicalBlock(scope: !10512, file: !10395, line: 291, column: 5)
!10526 = !DILocation(line: 293, column: 57, scope: !10524)
!10527 = !DILocation(line: 293, column: 80, scope: !10524)
!10528 = !DILocation(line: 293, column: 89, scope: !10524)
!10529 = !DILocation(line: 293, column: 10, scope: !10525)
!10530 = !DILocation(line: 307, column: 30, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !10395, line: 307, column: 10)
!10532 = distinct !DILexicalBlock(scope: !10512, file: !10395, line: 305, column: 5)
!10533 = !DILocation(line: 307, column: 39, scope: !10531)
!10534 = !DILocation(line: 307, column: 10, scope: !10532)
!10535 = !DILocation(line: 310, column: 9, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10531, file: !10395, line: 308, column: 7)
!10537 = !DILocation(line: 313, column: 21, scope: !10536)
!10538 = !DILocation(line: 316, column: 9, scope: !10536)
!10539 = !DILocation(line: 316, column: 15, scope: !10536)
!10540 = !DILocation(line: 316, column: 51, scope: !10536)
!10541 = !DILocation(line: 318, column: 15, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10543, file: !10395, line: 318, column: 14)
!10543 = distinct !DILexicalBlock(scope: !10536, file: !10395, line: 317, column: 9)
!10544 = !DILocation(line: 318, column: 29, scope: !10542)
!10545 = !DILocation(line: 318, column: 43, scope: !10542)
!10546 = !DILocation(line: 318, column: 14, scope: !10543)
!10547 = distinct !{!10547, !10538, !10548}
!10548 = !DILocation(line: 322, column: 9, scope: !10536)
!10549 = !DILocation(line: 330, column: 9, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10531, file: !10395, line: 328, column: 7)
!10551 = !DILocation(line: 333, column: 21, scope: !10550)
!10552 = !DILocation(line: 336, column: 9, scope: !10550)
!10553 = !DILocation(line: 336, column: 15, scope: !10550)
!10554 = !DILocation(line: 338, column: 15, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !10395, line: 338, column: 14)
!10556 = distinct !DILexicalBlock(scope: !10550, file: !10395, line: 337, column: 9)
!10557 = !DILocation(line: 338, column: 29, scope: !10555)
!10558 = !DILocation(line: 338, column: 43, scope: !10555)
!10559 = !DILocation(line: 338, column: 14, scope: !10556)
!10560 = distinct !{!10560, !10552, !10561}
!10561 = !DILocation(line: 342, column: 9, scope: !10550)
!10562 = !DILocation(line: 0, scope: !10512)
!10563 = !DILocation(line: 347, column: 27, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10400, file: !10395, line: 347, column: 6)
!10565 = !DILocation(line: 347, column: 43, scope: !10564)
!10566 = !DILocation(line: 347, column: 69, scope: !10564)
!10567 = !DILocation(line: 347, column: 6, scope: !10400)
!10568 = !DILocation(line: 353, column: 28, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10570, file: !10395, line: 353, column: 8)
!10570 = distinct !DILexicalBlock(scope: !10564, file: !10395, line: 348, column: 3)
!10571 = !DILocation(line: 353, column: 37, scope: !10569)
!10572 = !DILocation(line: 353, column: 8, scope: !10570)
!10573 = !DILocation(line: 356, column: 7, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10569, file: !10395, line: 354, column: 5)
!10575 = !DILocation(line: 359, column: 19, scope: !10574)
!10576 = !DILocation(line: 362, column: 7, scope: !10574)
!10577 = !DILocation(line: 362, column: 13, scope: !10574)
!10578 = !DILocation(line: 362, column: 49, scope: !10574)
!10579 = !DILocation(line: 364, column: 13, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10581, file: !10395, line: 364, column: 12)
!10581 = distinct !DILexicalBlock(scope: !10574, file: !10395, line: 363, column: 7)
!10582 = !DILocation(line: 364, column: 27, scope: !10580)
!10583 = !DILocation(line: 364, column: 41, scope: !10580)
!10584 = !DILocation(line: 364, column: 12, scope: !10581)
!10585 = distinct !{!10585, !10576, !10586}
!10586 = !DILocation(line: 368, column: 7, scope: !10574)
!10587 = !DILocation(line: 373, column: 7, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10569, file: !10395, line: 371, column: 5)
!10589 = !DILocation(line: 376, column: 19, scope: !10588)
!10590 = !DILocation(line: 379, column: 7, scope: !10588)
!10591 = !DILocation(line: 379, column: 13, scope: !10588)
!10592 = !DILocation(line: 381, column: 13, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10594, file: !10395, line: 381, column: 12)
!10594 = distinct !DILexicalBlock(scope: !10588, file: !10395, line: 380, column: 7)
!10595 = !DILocation(line: 381, column: 27, scope: !10593)
!10596 = !DILocation(line: 381, column: 41, scope: !10593)
!10597 = !DILocation(line: 381, column: 12, scope: !10594)
!10598 = distinct !{!10598, !10590, !10599}
!10599 = !DILocation(line: 385, column: 7, scope: !10588)
!10600 = !DILocation(line: 389, column: 27, scope: !10431)
!10601 = !DILocation(line: 389, column: 43, scope: !10431)
!10602 = !DILocation(line: 389, column: 69, scope: !10431)
!10603 = !DILocation(line: 389, column: 6, scope: !10400)
!10604 = !DILocation(line: 0, scope: !10430)
!10605 = !DILocation(line: 398, column: 8, scope: !10436)
!10606 = !DILocation(line: 398, column: 8, scope: !10430)
!10607 = !DILocation(line: 400, column: 7, scope: !10434)
!10608 = !DILocation(line: 400, column: 7, scope: !10435)
!10609 = !DILocation(line: 402, column: 5, scope: !10435)
!10610 = !DILocation(line: 404, column: 8, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10430, file: !10395, line: 404, column: 8)
!10612 = !DILocation(line: 404, column: 8, scope: !10430)
!10613 = !DILocation(line: 407, column: 7, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10611, file: !10395, line: 405, column: 5)
!10615 = !DILocation(line: 410, column: 19, scope: !10614)
!10616 = !DILocation(line: 412, column: 7, scope: !10614)
!10617 = !DILocation(line: 412, column: 13, scope: !10614)
!10618 = !DILocation(line: 414, column: 13, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !10395, line: 414, column: 12)
!10620 = distinct !DILexicalBlock(scope: !10614, file: !10395, line: 413, column: 7)
!10621 = !DILocation(line: 414, column: 27, scope: !10619)
!10622 = !DILocation(line: 414, column: 40, scope: !10619)
!10623 = !DILocation(line: 414, column: 12, scope: !10620)
!10624 = distinct !{!10624, !10616, !10625}
!10625 = !DILocation(line: 418, column: 7, scope: !10614)
!10626 = !DILocation(line: 422, column: 5, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10628, file: !10395, line: 422, column: 5)
!10628 = distinct !DILexicalBlock(scope: !10430, file: !10395, line: 422, column: 5)
!10629 = !DILocation(line: 422, column: 5, scope: !10628)
!10630 = !DILocation(line: 422, column: 5, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10627, file: !10395, line: 422, column: 5)
!10632 = !DILocation(line: 422, column: 5, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10634, file: !10395, line: 422, column: 5)
!10634 = distinct !DILexicalBlock(scope: !10627, file: !10395, line: 422, column: 5)
!10635 = !DILocation(line: 422, column: 5, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10634, file: !10395, line: 422, column: 5)
!10637 = !DILocation(line: 0, scope: !10627)
!10638 = !DILocation(line: 424, column: 28, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10430, file: !10395, line: 424, column: 8)
!10640 = !DILocation(line: 424, column: 38, scope: !10639)
!10641 = !DILocation(line: 0, scope: !10639)
!10642 = !DILocation(line: 424, column: 8, scope: !10430)
!10643 = !DILocation(line: 430, column: 13, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10639, file: !10395, line: 425, column: 5)
!10645 = !DILocation(line: 430, column: 49, scope: !10644)
!10646 = !DILocation(line: 430, column: 7, scope: !10644)
!10647 = !DILocation(line: 432, column: 13, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10649, file: !10395, line: 432, column: 12)
!10649 = distinct !DILexicalBlock(scope: !10644, file: !10395, line: 431, column: 7)
!10650 = !DILocation(line: 432, column: 27, scope: !10648)
!10651 = !DILocation(line: 432, column: 41, scope: !10648)
!10652 = !DILocation(line: 432, column: 12, scope: !10649)
!10653 = distinct !{!10653, !10646, !10654}
!10654 = !DILocation(line: 436, column: 7, scope: !10644)
!10655 = !DILocation(line: 444, column: 13, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10639, file: !10395, line: 439, column: 5)
!10657 = !DILocation(line: 444, column: 7, scope: !10656)
!10658 = !DILocation(line: 446, column: 13, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10660, file: !10395, line: 446, column: 12)
!10660 = distinct !DILexicalBlock(scope: !10656, file: !10395, line: 445, column: 7)
!10661 = !DILocation(line: 446, column: 27, scope: !10659)
!10662 = !DILocation(line: 446, column: 41, scope: !10659)
!10663 = !DILocation(line: 446, column: 12, scope: !10660)
!10664 = distinct !{!10664, !10657, !10665}
!10665 = !DILocation(line: 450, column: 7, scope: !10656)
!10666 = !DILocation(line: 454, column: 8, scope: !10430)
!10667 = !DILocation(line: 456, column: 7, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10669, file: !10395, line: 455, column: 5)
!10669 = distinct !DILexicalBlock(scope: !10430, file: !10395, line: 454, column: 8)
!10670 = !DILocation(line: 457, column: 5, scope: !10668)
!10671 = !DILocation(line: 462, column: 31, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10400, file: !10395, line: 462, column: 7)
!10673 = !DILocation(line: 462, column: 41, scope: !10672)
!10674 = !DILocation(line: 462, column: 7, scope: !10400)
!10675 = !DILocation(line: 465, column: 8, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10677, file: !10395, line: 465, column: 8)
!10677 = distinct !DILexicalBlock(scope: !10672, file: !10395, line: 463, column: 3)
!10678 = !DILocation(line: 465, column: 38, scope: !10676)
!10679 = !DILocation(line: 465, column: 8, scope: !10677)
!10680 = !DILocation(line: 467, column: 44, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10682, file: !10395, line: 467, column: 10)
!10682 = distinct !DILexicalBlock(scope: !10676, file: !10395, line: 466, column: 5)
!10683 = !DILocation(line: 0, scope: !10681)
!10684 = !DILocation(line: 467, column: 10, scope: !10682)
!10685 = !DILocation(line: 483, column: 15, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10681, file: !10395, line: 468, column: 7)
!10687 = !DILocation(line: 483, column: 9, scope: !10686)
!10688 = !DILocation(line: 485, column: 15, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10690, file: !10395, line: 485, column: 14)
!10690 = distinct !DILexicalBlock(scope: !10686, file: !10395, line: 484, column: 9)
!10691 = !DILocation(line: 485, column: 29, scope: !10689)
!10692 = !DILocation(line: 485, column: 43, scope: !10689)
!10693 = !DILocation(line: 485, column: 14, scope: !10690)
!10694 = distinct !{!10694, !10687, !10695}
!10695 = !DILocation(line: 489, column: 9, scope: !10686)
!10696 = !DILocation(line: 492, column: 9, scope: !10686)
!10697 = !DILocation(line: 498, column: 9, scope: !10686)
!10698 = !DILocation(line: 501, column: 21, scope: !10686)
!10699 = !DILocation(line: 504, column: 9, scope: !10686)
!10700 = !DILocation(line: 504, column: 15, scope: !10686)
!10701 = !DILocation(line: 504, column: 51, scope: !10686)
!10702 = !DILocation(line: 506, column: 15, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10704, file: !10395, line: 506, column: 14)
!10704 = distinct !DILexicalBlock(scope: !10686, file: !10395, line: 505, column: 9)
!10705 = !DILocation(line: 506, column: 29, scope: !10703)
!10706 = !DILocation(line: 506, column: 43, scope: !10703)
!10707 = !DILocation(line: 506, column: 14, scope: !10704)
!10708 = distinct !{!10708, !10699, !10709}
!10709 = !DILocation(line: 510, column: 9, scope: !10686)
!10710 = !DILocation(line: 521, column: 15, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10681, file: !10395, line: 513, column: 7)
!10712 = !DILocation(line: 521, column: 9, scope: !10711)
!10713 = !DILocation(line: 523, column: 15, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10715, file: !10395, line: 523, column: 14)
!10715 = distinct !DILexicalBlock(scope: !10711, file: !10395, line: 522, column: 9)
!10716 = !DILocation(line: 523, column: 29, scope: !10714)
!10717 = !DILocation(line: 523, column: 43, scope: !10714)
!10718 = !DILocation(line: 523, column: 14, scope: !10715)
!10719 = distinct !{!10719, !10712, !10720}
!10720 = !DILocation(line: 527, column: 9, scope: !10711)
!10721 = !DILocation(line: 533, column: 44, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10723, file: !10395, line: 533, column: 10)
!10723 = distinct !DILexicalBlock(scope: !10676, file: !10395, line: 531, column: 5)
!10724 = !DILocation(line: 533, column: 10, scope: !10723)
!10725 = !DILocation(line: 540, column: 27, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10722, file: !10395, line: 538, column: 7)
!10727 = !DILocation(line: 551, column: 14, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10726, file: !10395, line: 550, column: 13)
!10729 = !DILocation(line: 551, column: 81, scope: !10728)
!10730 = !DILocation(line: 551, column: 55, scope: !10728)
!10731 = !DILocation(line: 551, column: 92, scope: !10728)
!10732 = !DILocation(line: 552, column: 14, scope: !10728)
!10733 = !DILocation(line: 552, column: 80, scope: !10728)
!10734 = !DILocation(line: 552, column: 53, scope: !10728)
!10735 = !DILocation(line: 552, column: 111, scope: !10728)
!10736 = !DILocation(line: 553, column: 14, scope: !10728)
!10737 = !DILocation(line: 553, column: 80, scope: !10728)
!10738 = !DILocation(line: 553, column: 86, scope: !10728)
!10739 = !DILocation(line: 553, column: 53, scope: !10728)
!10740 = !DILocation(line: 553, column: 111, scope: !10728)
!10741 = !DILocation(line: 554, column: 14, scope: !10728)
!10742 = !DILocation(line: 554, column: 82, scope: !10728)
!10743 = !DILocation(line: 554, column: 101, scope: !10728)
!10744 = !DILocation(line: 554, column: 53, scope: !10728)
!10745 = !DILocation(line: 554, column: 126, scope: !10728)
!10746 = !DILocation(line: 555, column: 14, scope: !10728)
!10747 = !DILocation(line: 555, column: 80, scope: !10728)
!10748 = !DILocation(line: 555, column: 85, scope: !10728)
!10749 = !DILocation(line: 555, column: 53, scope: !10728)
!10750 = !DILocation(line: 550, column: 13, scope: !10726)
!10751 = !DILocation(line: 563, column: 3, scope: !10400)
!10752 = !DILocation(line: 564, column: 1, scope: !10400)
!10753 = !DISubprogram(name: "HAL_GetTick", scope: !10754, file: !10754, line: 234, type: !3368, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1998)
!10754 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10755 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10395, file: !10395, line: 591, type: !10756, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !10767)
!10756 = !DISubroutineType(types: !10757)
!10757 = !{!10398, !10758, !110}
!10758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10759, size: 32)
!10759 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10405, line: 92, baseType: !10760)
!10760 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10405, line: 75, size: 160, elements: !10761)
!10761 = !{!10762, !10763, !10764, !10765, !10766}
!10762 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !10760, file: !10405, line: 77, baseType: !110, size: 32)
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !10760, file: !10405, line: 80, baseType: !110, size: 32, offset: 32)
!10764 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10760, file: !10405, line: 83, baseType: !110, size: 32, offset: 64)
!10765 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10760, file: !10405, line: 86, baseType: !110, size: 32, offset: 96)
!10766 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10760, file: !10405, line: 89, baseType: !110, size: 32, offset: 128)
!10767 = !{!10768, !10769, !10770}
!10768 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10755, file: !10395, line: 591, type: !10758)
!10769 = !DILocalVariable(name: "FLatency", arg: 2, scope: !10755, file: !10395, line: 591, type: !110)
!10770 = !DILocalVariable(name: "tickstart", scope: !10755, file: !10395, line: 593, type: !110)
!10771 = !DILocation(line: 0, scope: !10755)
!10772 = !DILocation(line: 596, column: 24, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10755, file: !10395, line: 596, column: 6)
!10774 = !DILocation(line: 596, column: 6, scope: !10755)
!10775 = !DILocation(line: 610, column: 17, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10755, file: !10395, line: 610, column: 6)
!10777 = !DILocation(line: 610, column: 15, scope: !10776)
!10778 = !DILocation(line: 610, column: 6, scope: !10755)
!10779 = !DILocation(line: 613, column: 5, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10776, file: !10395, line: 611, column: 3)
!10781 = !DILocation(line: 617, column: 8, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10780, file: !10395, line: 617, column: 8)
!10783 = !DILocation(line: 617, column: 34, scope: !10782)
!10784 = !DILocation(line: 617, column: 8, scope: !10780)
!10785 = !DILocation(line: 624, column: 27, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10755, file: !10395, line: 624, column: 6)
!10787 = !DILocation(line: 624, column: 38, scope: !10786)
!10788 = !DILocation(line: 624, column: 60, scope: !10786)
!10789 = !DILocation(line: 624, column: 6, scope: !10755)
!10790 = !DILocation(line: 628, column: 40, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10792, file: !10395, line: 628, column: 8)
!10792 = distinct !DILexicalBlock(scope: !10786, file: !10395, line: 625, column: 3)
!10793 = !DILocation(line: 628, column: 63, scope: !10791)
!10794 = !DILocation(line: 628, column: 8, scope: !10792)
!10795 = !DILocation(line: 630, column: 7, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10791, file: !10395, line: 629, column: 5)
!10797 = !DILocation(line: 633, column: 29, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10792, file: !10395, line: 633, column: 8)
!10799 = !DILocation(line: 631, column: 5, scope: !10796)
!10800 = !DILocation(line: 633, column: 40, scope: !10798)
!10801 = !DILocation(line: 633, column: 63, scope: !10798)
!10802 = !DILocation(line: 633, column: 8, scope: !10792)
!10803 = !DILocation(line: 635, column: 7, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10798, file: !10395, line: 634, column: 5)
!10805 = !DILocation(line: 636, column: 5, scope: !10804)
!10806 = !DILocation(line: 639, column: 5, scope: !10792)
!10807 = !DILocation(line: 643, column: 27, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10755, file: !10395, line: 643, column: 6)
!10809 = !DILocation(line: 640, column: 3, scope: !10792)
!10810 = !DILocation(line: 643, column: 38, scope: !10808)
!10811 = !DILocation(line: 643, column: 62, scope: !10808)
!10812 = !DILocation(line: 643, column: 6, scope: !10755)
!10813 = !DILocation(line: 648, column: 27, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !10395, line: 648, column: 8)
!10815 = distinct !DILexicalBlock(scope: !10808, file: !10395, line: 644, column: 3)
!10816 = !DILocation(line: 648, column: 8, scope: !10815)
!10817 = !DILocation(line: 651, column: 10, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10819, file: !10395, line: 651, column: 10)
!10819 = distinct !DILexicalBlock(scope: !10814, file: !10395, line: 649, column: 5)
!10820 = !DILocation(line: 651, column: 46, scope: !10818)
!10821 = !DILocation(line: 651, column: 10, scope: !10819)
!10822 = !DILocation(line: 661, column: 10, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10824, file: !10395, line: 661, column: 10)
!10824 = distinct !DILexicalBlock(scope: !10825, file: !10395, line: 659, column: 5)
!10825 = distinct !DILexicalBlock(scope: !10814, file: !10395, line: 657, column: 13)
!10826 = !DILocation(line: 661, column: 46, scope: !10823)
!10827 = !DILocation(line: 661, column: 10, scope: !10824)
!10828 = !DILocation(line: 670, column: 10, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10830, file: !10395, line: 670, column: 10)
!10830 = distinct !DILexicalBlock(scope: !10825, file: !10395, line: 668, column: 5)
!10831 = !DILocation(line: 670, column: 46, scope: !10829)
!10832 = !DILocation(line: 670, column: 10, scope: !10830)
!10833 = !DILocation(line: 676, column: 5, scope: !10815)
!10834 = !DILocation(line: 679, column: 17, scope: !10815)
!10835 = !DILocation(line: 681, column: 5, scope: !10815)
!10836 = !DILocation(line: 681, column: 12, scope: !10815)
!10837 = !DILocation(line: 681, column: 65, scope: !10815)
!10838 = !DILocation(line: 681, column: 78, scope: !10815)
!10839 = !DILocation(line: 681, column: 42, scope: !10815)
!10840 = !DILocation(line: 683, column: 12, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10842, file: !10395, line: 683, column: 11)
!10842 = distinct !DILexicalBlock(scope: !10815, file: !10395, line: 682, column: 5)
!10843 = !DILocation(line: 683, column: 26, scope: !10841)
!10844 = !DILocation(line: 683, column: 39, scope: !10841)
!10845 = !DILocation(line: 683, column: 11, scope: !10842)
!10846 = distinct !{!10846, !10835, !10847}
!10847 = !DILocation(line: 687, column: 5, scope: !10815)
!10848 = !DILocation(line: 691, column: 17, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10755, file: !10395, line: 691, column: 6)
!10850 = !DILocation(line: 691, column: 15, scope: !10849)
!10851 = !DILocation(line: 691, column: 6, scope: !10755)
!10852 = !DILocation(line: 694, column: 5, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10849, file: !10395, line: 692, column: 3)
!10854 = !DILocation(line: 698, column: 8, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10853, file: !10395, line: 698, column: 8)
!10856 = !DILocation(line: 698, column: 34, scope: !10855)
!10857 = !DILocation(line: 698, column: 8, scope: !10853)
!10858 = !DILocation(line: 705, column: 27, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10755, file: !10395, line: 705, column: 6)
!10860 = !DILocation(line: 705, column: 38, scope: !10859)
!10861 = !DILocation(line: 705, column: 61, scope: !10859)
!10862 = !DILocation(line: 705, column: 6, scope: !10755)
!10863 = !DILocation(line: 708, column: 5, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10859, file: !10395, line: 706, column: 3)
!10865 = !DILocation(line: 712, column: 27, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10755, file: !10395, line: 712, column: 6)
!10867 = !DILocation(line: 709, column: 3, scope: !10864)
!10868 = !DILocation(line: 712, column: 38, scope: !10866)
!10869 = !DILocation(line: 712, column: 61, scope: !10866)
!10870 = !DILocation(line: 712, column: 6, scope: !10755)
!10871 = !DILocation(line: 715, column: 5, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10866, file: !10395, line: 713, column: 3)
!10873 = !DILocation(line: 716, column: 3, scope: !10872)
!10874 = !DILocation(line: 719, column: 21, scope: !10755)
!10875 = !DILocation(line: 719, column: 70, scope: !10755)
!10876 = !DILocation(line: 719, column: 91, scope: !10755)
!10877 = !DILocation(line: 719, column: 50, scope: !10755)
!10878 = !DILocation(line: 719, column: 47, scope: !10755)
!10879 = !DILocation(line: 719, column: 19, scope: !10755)
!10880 = !DILocation(line: 722, column: 17, scope: !10755)
!10881 = !DILocation(line: 722, column: 3, scope: !10755)
!10882 = !DILocation(line: 724, column: 3, scope: !10755)
!10883 = !DILocation(line: 725, column: 1, scope: !10755)
!10884 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10395, file: !10395, line: 885, type: !3368, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !10885)
!10885 = !{!10886, !10887, !10888, !10889}
!10886 = !DILocalVariable(name: "pllm", scope: !10884, file: !10395, line: 887, type: !110)
!10887 = !DILocalVariable(name: "pllvco", scope: !10884, file: !10395, line: 887, type: !110)
!10888 = !DILocalVariable(name: "pllp", scope: !10884, file: !10395, line: 887, type: !110)
!10889 = !DILocalVariable(name: "sysclockfreq", scope: !10884, file: !10395, line: 888, type: !110)
!10890 = !DILocation(line: 0, scope: !10884)
!10891 = !DILocation(line: 891, column: 16, scope: !10884)
!10892 = !DILocation(line: 891, column: 21, scope: !10884)
!10893 = !DILocation(line: 891, column: 3, scope: !10884)
!10894 = !DILocation(line: 901, column: 7, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10896, file: !10395, line: 899, column: 5)
!10896 = distinct !DILexicalBlock(scope: !10884, file: !10395, line: 892, column: 3)
!10897 = !DILocation(line: 907, column: 19, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10896, file: !10395, line: 904, column: 5)
!10899 = !DILocation(line: 907, column: 27, scope: !10898)
!10900 = !DILocation(line: 908, column: 10, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10898, file: !10395, line: 908, column: 10)
!10902 = !DILocation(line: 908, column: 40, scope: !10901)
!10903 = !DILocation(line: 0, scope: !10901)
!10904 = !DILocation(line: 908, column: 10, scope: !10898)
!10905 = !DILocation(line: 911, column: 53, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10901, file: !10395, line: 909, column: 7)
!10907 = !DILocation(line: 911, column: 130, scope: !10906)
!10908 = !DILocation(line: 912, column: 7, scope: !10906)
!10909 = !DILocation(line: 916, column: 56, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10901, file: !10395, line: 914, column: 7)
!10911 = !DILocation(line: 916, column: 53, scope: !10910)
!10912 = !DILocation(line: 916, column: 132, scope: !10910)
!10913 = !DILocation(line: 916, column: 130, scope: !10910)
!10914 = !DILocation(line: 916, column: 18, scope: !10910)
!10915 = !DILocation(line: 918, column: 23, scope: !10898)
!10916 = !DILocation(line: 918, column: 82, scope: !10898)
!10917 = !DILocation(line: 920, column: 28, scope: !10898)
!10918 = !DILocation(line: 921, column: 7, scope: !10898)
!10919 = !DILocation(line: 0, scope: !10896)
!10920 = !DILocation(line: 929, column: 3, scope: !10884)
!10921 = !DISubprogram(name: "HAL_InitTick", scope: !10754, file: !10754, line: 223, type: !10922, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1998)
!10922 = !DISubroutineType(types: !10923)
!10923 = !{!10398, !110}
!10924 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10395, file: !10395, line: 775, type: !10925, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !10927)
!10925 = !DISubroutineType(types: !10926)
!10926 = !{null, !110, !110, !110}
!10927 = !{!10928, !10929, !10930, !10931, !10941, !10945}
!10928 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !10924, file: !10395, line: 775, type: !110)
!10929 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !10924, file: !10395, line: 775, type: !110)
!10930 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !10924, file: !10395, line: 775, type: !110)
!10931 = !DILocalVariable(name: "GPIO_InitStruct", scope: !10924, file: !10395, line: 777, type: !10932)
!10932 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !10933, line: 62, baseType: !10934)
!10933 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10934 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10933, line: 46, size: 160, elements: !10935)
!10935 = !{!10936, !10937, !10938, !10939, !10940}
!10936 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !10934, file: !10933, line: 48, baseType: !110, size: 32)
!10937 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !10934, file: !10933, line: 51, baseType: !110, size: 32, offset: 32)
!10938 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !10934, file: !10933, line: 54, baseType: !110, size: 32, offset: 64)
!10939 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !10934, file: !10933, line: 57, baseType: !110, size: 32, offset: 96)
!10940 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !10934, file: !10933, line: 60, baseType: !110, size: 32, offset: 128)
!10941 = !DILocalVariable(name: "tmpreg", scope: !10942, file: !10395, line: 787, type: !301)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !10395, line: 787, column: 5)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !10395, line: 783, column: 3)
!10944 = distinct !DILexicalBlock(scope: !10924, file: !10395, line: 782, column: 6)
!10945 = !DILocalVariable(name: "tmpreg", scope: !10946, file: !10395, line: 811, type: !301)
!10946 = distinct !DILexicalBlock(scope: !10947, file: !10395, line: 811, column: 5)
!10947 = distinct !DILexicalBlock(scope: !10944, file: !10395, line: 807, column: 3)
!10948 = !DILocation(line: 0, scope: !10924)
!10949 = !DILocation(line: 777, column: 3, scope: !10924)
!10950 = !DILocation(line: 777, column: 20, scope: !10924)
!10951 = !DILocation(line: 782, column: 15, scope: !10944)
!10952 = !DILocation(line: 782, column: 6, scope: !10924)
!10953 = !DILocation(line: 787, column: 5, scope: !10942)
!10954 = !DILocation(line: 787, column: 5, scope: !10943)
!10955 = !DILocation(line: 790, column: 21, scope: !10943)
!10956 = !DILocation(line: 790, column: 25, scope: !10943)
!10957 = !DILocation(line: 791, column: 21, scope: !10943)
!10958 = !DILocation(line: 791, column: 26, scope: !10943)
!10959 = !DILocation(line: 792, column: 21, scope: !10943)
!10960 = !DILocation(line: 792, column: 27, scope: !10943)
!10961 = !DILocation(line: 793, column: 21, scope: !10943)
!10962 = !DILocation(line: 793, column: 26, scope: !10943)
!10963 = !DILocation(line: 794, column: 21, scope: !10943)
!10964 = !DILocation(line: 794, column: 31, scope: !10943)
!10965 = !DILocation(line: 795, column: 5, scope: !10943)
!10966 = !DILocation(line: 798, column: 5, scope: !10943)
!10967 = !DILocation(line: 804, column: 3, scope: !10943)
!10968 = !DILocation(line: 811, column: 5, scope: !10946)
!10969 = !DILocation(line: 811, column: 5, scope: !10947)
!10970 = !DILocation(line: 814, column: 21, scope: !10947)
!10971 = !DILocation(line: 814, column: 25, scope: !10947)
!10972 = !DILocation(line: 815, column: 21, scope: !10947)
!10973 = !DILocation(line: 815, column: 26, scope: !10947)
!10974 = !DILocation(line: 816, column: 21, scope: !10947)
!10975 = !DILocation(line: 816, column: 27, scope: !10947)
!10976 = !DILocation(line: 817, column: 21, scope: !10947)
!10977 = !DILocation(line: 817, column: 26, scope: !10947)
!10978 = !DILocation(line: 818, column: 21, scope: !10947)
!10979 = !DILocation(line: 818, column: 31, scope: !10947)
!10980 = !DILocation(line: 819, column: 5, scope: !10947)
!10981 = !DILocation(line: 822, column: 5, scope: !10947)
!10982 = !DILocation(line: 0, scope: !10944)
!10983 = !DILocation(line: 830, column: 1, scope: !10924)
!10984 = !DISubprogram(name: "HAL_GPIO_Init", scope: !10933, file: !10933, line: 224, type: !10985, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1998)
!10985 = !DISubroutineType(types: !10986)
!10986 = !{null, !2968, !10987}
!10987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10932, size: 32)
!10988 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10395, file: !10395, line: 841, type: !3086, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !1998)
!10989 = !DILocation(line: 843, column: 38, scope: !10988)
!10990 = !DILocation(line: 844, column: 1, scope: !10988)
!10991 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10395, file: !10395, line: 850, type: !3086, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !1998)
!10992 = !DILocation(line: 852, column: 38, scope: !10991)
!10993 = !DILocation(line: 853, column: 1, scope: !10991)
!10994 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10395, file: !10395, line: 941, type: !3368, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !1998)
!10995 = !DILocation(line: 943, column: 10, scope: !10994)
!10996 = !DILocation(line: 943, column: 3, scope: !10994)
!10997 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10395, file: !10395, line: 952, type: !3368, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !1998)
!10998 = !DILocation(line: 955, column: 11, scope: !10997)
!10999 = !DILocation(line: 955, column: 56, scope: !10997)
!11000 = !DILocation(line: 955, column: 78, scope: !10997)
!11001 = !DILocation(line: 955, column: 36, scope: !10997)
!11002 = !DILocation(line: 955, column: 33, scope: !10997)
!11003 = !DILocation(line: 955, column: 3, scope: !10997)
!11004 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10395, file: !10395, line: 964, type: !3368, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !1998)
!11005 = !DILocation(line: 967, column: 11, scope: !11004)
!11006 = !DILocation(line: 967, column: 55, scope: !11004)
!11007 = !DILocation(line: 967, column: 77, scope: !11004)
!11008 = !DILocation(line: 967, column: 35, scope: !11004)
!11009 = !DILocation(line: 967, column: 32, scope: !11004)
!11010 = !DILocation(line: 967, column: 3, scope: !11004)
!11011 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10395, file: !10395, line: 977, type: !11012, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !11014)
!11012 = !DISubroutineType(types: !11013)
!11013 = !{null, !10403}
!11014 = !{!11015}
!11015 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11011, file: !10395, line: 977, type: !10403)
!11016 = !DILocation(line: 0, scope: !11011)
!11017 = !DILocation(line: 980, column: 22, scope: !11011)
!11018 = !DILocation(line: 980, column: 37, scope: !11011)
!11019 = !DILocation(line: 983, column: 12, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11011, file: !10395, line: 983, column: 6)
!11021 = !DILocation(line: 983, column: 15, scope: !11020)
!11022 = !DILocation(line: 983, column: 31, scope: !11020)
!11023 = !DILocation(line: 983, column: 6, scope: !11011)
!11024 = !DILocation(line: 985, column: 24, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11020, file: !10395, line: 984, column: 3)
!11026 = !DILocation(line: 985, column: 33, scope: !11025)
!11027 = !DILocation(line: 986, column: 3, scope: !11025)
!11028 = !DILocation(line: 987, column: 17, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11020, file: !10395, line: 987, column: 11)
!11030 = !DILocation(line: 987, column: 20, scope: !11029)
!11031 = !DILocation(line: 987, column: 35, scope: !11029)
!11032 = !DILocation(line: 0, scope: !11029)
!11033 = !DILocation(line: 987, column: 11, scope: !11020)
!11034 = !DILocation(line: 989, column: 33, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11029, file: !10395, line: 988, column: 3)
!11036 = !DILocation(line: 990, column: 3, scope: !11035)
!11037 = !DILocation(line: 993, column: 33, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11029, file: !10395, line: 992, column: 3)
!11039 = !DILocation(line: 997, column: 12, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11011, file: !10395, line: 997, column: 6)
!11041 = !DILocation(line: 997, column: 15, scope: !11040)
!11042 = !DILocation(line: 1003, column: 24, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11040, file: !10395, line: 1002, column: 3)
!11044 = !DILocation(line: 1003, column: 33, scope: !11043)
!11045 = !DILocation(line: 1006, column: 61, scope: !11011)
!11046 = !DILocation(line: 1006, column: 81, scope: !11011)
!11047 = !DILocation(line: 1006, column: 22, scope: !11011)
!11048 = !DILocation(line: 1006, column: 42, scope: !11011)
!11049 = !DILocation(line: 1009, column: 12, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11011, file: !10395, line: 1009, column: 6)
!11051 = !DILocation(line: 1009, column: 17, scope: !11050)
!11052 = !DILocation(line: 1009, column: 35, scope: !11050)
!11053 = !DILocation(line: 1009, column: 6, scope: !11011)
!11054 = !DILocation(line: 1011, column: 24, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11050, file: !10395, line: 1010, column: 3)
!11056 = !DILocation(line: 1011, column: 33, scope: !11055)
!11057 = !DILocation(line: 1012, column: 3, scope: !11055)
!11058 = !DILocation(line: 1013, column: 17, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11050, file: !10395, line: 1013, column: 11)
!11060 = !DILocation(line: 1013, column: 22, scope: !11059)
!11061 = !DILocation(line: 1013, column: 39, scope: !11059)
!11062 = !DILocation(line: 0, scope: !11059)
!11063 = !DILocation(line: 1013, column: 11, scope: !11050)
!11064 = !DILocation(line: 1015, column: 33, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11059, file: !10395, line: 1014, column: 3)
!11066 = !DILocation(line: 1016, column: 3, scope: !11065)
!11067 = !DILocation(line: 1019, column: 33, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11059, file: !10395, line: 1018, column: 3)
!11069 = !DILocation(line: 1023, column: 12, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11011, file: !10395, line: 1023, column: 6)
!11071 = !DILocation(line: 1023, column: 16, scope: !11070)
!11072 = !DILocation(line: 1029, column: 24, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11070, file: !10395, line: 1028, column: 3)
!11074 = !DILocation(line: 1029, column: 33, scope: !11073)
!11075 = !DILocation(line: 1033, column: 12, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11011, file: !10395, line: 1033, column: 6)
!11077 = !DILocation(line: 1033, column: 15, scope: !11076)
!11078 = !DILocation(line: 1033, column: 30, scope: !11076)
!11079 = !DILocation(line: 1033, column: 6, scope: !11011)
!11080 = !DILocation(line: 1039, column: 28, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11076, file: !10395, line: 1038, column: 3)
!11082 = !DILocation(line: 1039, column: 37, scope: !11081)
!11083 = !DILocation(line: 1041, column: 54, scope: !11011)
!11084 = !DILocation(line: 1041, column: 62, scope: !11011)
!11085 = !DILocation(line: 1041, column: 26, scope: !11011)
!11086 = !DILocation(line: 1041, column: 36, scope: !11011)
!11087 = !DILocation(line: 1042, column: 49, scope: !11011)
!11088 = !DILocation(line: 1042, column: 57, scope: !11011)
!11089 = !DILocation(line: 1042, column: 26, scope: !11011)
!11090 = !DILocation(line: 1042, column: 31, scope: !11011)
!11091 = !DILocation(line: 1043, column: 50, scope: !11011)
!11092 = !DILocation(line: 1043, column: 78, scope: !11011)
!11093 = !DILocation(line: 1043, column: 26, scope: !11011)
!11094 = !DILocation(line: 1043, column: 31, scope: !11011)
!11095 = !DILocation(line: 1044, column: 52, scope: !11011)
!11096 = !DILocation(line: 1044, column: 102, scope: !11011)
!11097 = !DILocation(line: 1044, column: 109, scope: !11011)
!11098 = !DILocation(line: 1044, column: 26, scope: !11011)
!11099 = !DILocation(line: 1044, column: 31, scope: !11011)
!11100 = !DILocation(line: 1045, column: 50, scope: !11011)
!11101 = !DILocation(line: 1045, column: 78, scope: !11011)
!11102 = !DILocation(line: 1045, column: 26, scope: !11011)
!11103 = !DILocation(line: 1045, column: 31, scope: !11011)
!11104 = !DILocation(line: 1046, column: 1, scope: !11011)
!11105 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10395, file: !10395, line: 1056, type: !11106, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !11108)
!11106 = !DISubroutineType(types: !11107)
!11107 = !{null, !10758, !857}
!11108 = !{!11109, !11110}
!11109 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11105, file: !10395, line: 1056, type: !10758)
!11110 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11105, file: !10395, line: 1056, type: !857)
!11111 = !DILocation(line: 0, scope: !11105)
!11112 = !DILocation(line: 1059, column: 22, scope: !11105)
!11113 = !DILocation(line: 1059, column: 32, scope: !11105)
!11114 = !DILocation(line: 1062, column: 53, scope: !11105)
!11115 = !DILocation(line: 1062, column: 58, scope: !11105)
!11116 = !DILocation(line: 1062, column: 22, scope: !11105)
!11117 = !DILocation(line: 1062, column: 35, scope: !11105)
!11118 = !DILocation(line: 1065, column: 54, scope: !11105)
!11119 = !DILocation(line: 1065, column: 59, scope: !11105)
!11120 = !DILocation(line: 1065, column: 22, scope: !11105)
!11121 = !DILocation(line: 1065, column: 36, scope: !11105)
!11122 = !DILocation(line: 1068, column: 55, scope: !11105)
!11123 = !DILocation(line: 1068, column: 60, scope: !11105)
!11124 = !DILocation(line: 1068, column: 22, scope: !11105)
!11125 = !DILocation(line: 1068, column: 37, scope: !11105)
!11126 = !DILocation(line: 1071, column: 56, scope: !11105)
!11127 = !DILocation(line: 1071, column: 79, scope: !11105)
!11128 = !DILocation(line: 1071, column: 22, scope: !11105)
!11129 = !DILocation(line: 1071, column: 37, scope: !11105)
!11130 = !DILocation(line: 1074, column: 34, scope: !11105)
!11131 = !DILocation(line: 1074, column: 38, scope: !11105)
!11132 = !DILocation(line: 1074, column: 14, scope: !11105)
!11133 = !DILocation(line: 1075, column: 1, scope: !11105)
!11134 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10395, file: !10395, line: 1082, type: !3086, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !1998)
!11135 = !DILocation(line: 1085, column: 6, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11134, file: !10395, line: 1085, column: 6)
!11137 = !DILocation(line: 1085, column: 6, scope: !11134)
!11138 = !DILocation(line: 1088, column: 5, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11136, file: !10395, line: 1086, column: 3)
!11140 = !DILocation(line: 1091, column: 5, scope: !11139)
!11141 = !DILocation(line: 1092, column: 3, scope: !11139)
!11142 = !DILocation(line: 1093, column: 1, scope: !11134)
!11143 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10395, file: !10395, line: 1099, type: !3086, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !1998)
!11144 = !DILocation(line: 1104, column: 1, scope: !11143)
!11145 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11146, file: !11146, line: 257, type: !6239, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11147)
!11146 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11147 = !{!11148}
!11148 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11145, file: !11146, line: 257, type: !110)
!11149 = !DILocation(line: 0, scope: !11145)
!11150 = !DILocation(line: 260, column: 3, scope: !11145)
!11151 = !DILocation(line: 261, column: 1, scope: !11145)
!11152 = distinct !DISubprogram(name: "LL_InitTick", scope: !11153, file: !11153, line: 260, type: !8785, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11154)
!11153 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11154 = !{!11155, !11156}
!11155 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11152, file: !11153, line: 260, type: !110)
!11156 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11152, file: !11153, line: 260, type: !110)
!11157 = !DILocation(line: 0, scope: !11152)
!11158 = !DILocation(line: 263, column: 46, scope: !11152)
!11159 = !DILocation(line: 263, column: 55, scope: !11152)
!11160 = !DILocation(line: 263, column: 18, scope: !11152)
!11161 = !DILocation(line: 264, column: 18, scope: !11152)
!11162 = !DILocation(line: 265, column: 18, scope: !11152)
!11163 = !DILocation(line: 267, column: 1, scope: !11152)
!11164 = distinct !DISubprogram(name: "LL_mDelay", scope: !11146, file: !11146, line: 273, type: !6239, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11165)
!11165 = !{!11166, !11167}
!11166 = !DILocalVariable(name: "Delay", arg: 1, scope: !11164, file: !11146, line: 273, type: !110)
!11167 = !DILocalVariable(name: "tmp", scope: !11164, file: !11146, line: 275, type: !301)
!11168 = !DILocation(line: 0, scope: !11164)
!11169 = !DILocation(line: 275, column: 3, scope: !11164)
!11170 = !DILocation(line: 275, column: 18, scope: !11164)
!11171 = !DILocation(line: 275, column: 33, scope: !11164)
!11172 = !DILocation(line: 277, column: 10, scope: !11164)
!11173 = !DILocation(line: 280, column: 12, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11164, file: !11146, line: 280, column: 6)
!11175 = !DILocation(line: 285, column: 3, scope: !11164)
!11176 = !DILocation(line: 287, column: 18, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11178, file: !11146, line: 287, column: 8)
!11178 = distinct !DILexicalBlock(scope: !11164, file: !11146, line: 286, column: 3)
!11179 = !DILocation(line: 292, column: 1, scope: !11164)
!11180 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11146, file: !11146, line: 323, type: !6239, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11181)
!11181 = !{!11182}
!11182 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11180, file: !11146, line: 323, type: !110)
!11183 = !DILocation(line: 0, scope: !11180)
!11184 = !DILocation(line: 326, column: 19, scope: !11180)
!11185 = !DILocation(line: 327, column: 1, scope: !11180)
!11186 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11146, file: !11146, line: 338, type: !11187, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11190)
!11187 = !DISubroutineType(types: !11188)
!11188 = !{!11189, !110}
!11189 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !801, line: 201, baseType: !800)
!11190 = !{!11191, !11192, !11193, !11194, !11195}
!11191 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11186, file: !11146, line: 338, type: !110)
!11192 = !DILocalVariable(name: "timeout", scope: !11186, file: !11146, line: 340, type: !110)
!11193 = !DILocalVariable(name: "getlatency", scope: !11186, file: !11146, line: 341, type: !110)
!11194 = !DILocalVariable(name: "latency", scope: !11186, file: !11146, line: 342, type: !110)
!11195 = !DILocalVariable(name: "status", scope: !11186, file: !11146, line: 343, type: !11189)
!11196 = !DILocation(line: 0, scope: !11186)
!11197 = !DILocation(line: 347, column: 21, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11186, file: !11146, line: 347, column: 6)
!11199 = !DILocation(line: 347, column: 6, scope: !11186)
!11200 = !DILocation(line: 353, column: 8, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11202, file: !11146, line: 353, column: 8)
!11202 = distinct !DILexicalBlock(scope: !11198, file: !11146, line: 352, column: 3)
!11203 = !DILocation(line: 353, column: 40, scope: !11201)
!11204 = !DILocation(line: 353, column: 8, scope: !11202)
!11205 = !DILocation(line: 374, column: 55, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11207, file: !11146, line: 374, column: 10)
!11207 = distinct !DILexicalBlock(scope: !11201, file: !11146, line: 354, column: 5)
!11208 = !DILocation(line: 368, column: 26, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11207, file: !11146, line: 368, column: 10)
!11210 = !DILocation(line: 368, column: 55, scope: !11209)
!11211 = !DILocation(line: 380, column: 57, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11213, file: !11146, line: 380, column: 12)
!11213 = distinct !DILexicalBlock(scope: !11206, file: !11146, line: 379, column: 7)
!11214 = !DILocation(line: 387, column: 8, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11202, file: !11146, line: 387, column: 8)
!11216 = !DILocation(line: 387, column: 40, scope: !11215)
!11217 = !DILocation(line: 387, column: 8, scope: !11202)
!11218 = !DILocation(line: 407, column: 26, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !11146, line: 407, column: 10)
!11220 = distinct !DILexicalBlock(scope: !11215, file: !11146, line: 388, column: 5)
!11221 = !DILocation(line: 407, column: 55, scope: !11219)
!11222 = !DILocation(line: 413, column: 28, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11224, file: !11146, line: 413, column: 12)
!11224 = distinct !DILexicalBlock(scope: !11219, file: !11146, line: 412, column: 7)
!11225 = !DILocation(line: 413, column: 57, scope: !11223)
!11226 = !DILocation(line: 0, scope: !11202)
!11227 = !DILocation(line: 420, column: 8, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11202, file: !11146, line: 420, column: 8)
!11229 = !DILocation(line: 420, column: 40, scope: !11228)
!11230 = !DILocation(line: 420, column: 8, scope: !11202)
!11231 = !DILocation(line: 429, column: 26, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !11146, line: 429, column: 10)
!11233 = distinct !DILexicalBlock(scope: !11228, file: !11146, line: 421, column: 5)
!11234 = !DILocation(line: 429, column: 55, scope: !11232)
!11235 = !DILocation(line: 435, column: 28, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11237, file: !11146, line: 435, column: 12)
!11237 = distinct !DILexicalBlock(scope: !11232, file: !11146, line: 434, column: 7)
!11238 = !DILocation(line: 435, column: 57, scope: !11236)
!11239 = !DILocation(line: 444, column: 5, scope: !11202)
!11240 = !DILocation(line: 448, column: 5, scope: !11202)
!11241 = !DILocation(line: 451, column: 18, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11202, file: !11146, line: 449, column: 5)
!11243 = !DILocation(line: 452, column: 12, scope: !11242)
!11244 = !DILocation(line: 453, column: 26, scope: !11202)
!11245 = !DILocation(line: 453, column: 38, scope: !11202)
!11246 = !DILocation(line: 453, column: 5, scope: !11242)
!11247 = distinct !{!11247, !11240, !11248}
!11248 = !DILocation(line: 453, column: 54, scope: !11202)
!11249 = !DILocation(line: 0, scope: !11198)
!11250 = !DILocation(line: 464, column: 3, scope: !11186)
!11251 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11252, file: !11252, line: 519, type: !3368, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11252 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11253 = !DILocation(line: 521, column: 21, scope: !11251)
!11254 = !DILocation(line: 521, column: 3, scope: !11251)
!11255 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5991, file: !5991, line: 1543, type: !6239, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11256)
!11256 = !{!11257}
!11257 = !DILocalVariable(name: "Latency", arg: 1, scope: !11255, file: !5991, line: 1543, type: !110)
!11258 = !DILocation(line: 0, scope: !11255)
!11259 = !DILocation(line: 1545, column: 3, scope: !11255)
!11260 = !DILocation(line: 1546, column: 1, scope: !11255)
!11261 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5991, file: !5991, line: 1569, type: !3368, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11262 = !DILocation(line: 1571, column: 21, scope: !11261)
!11263 = !DILocation(line: 1571, column: 3, scope: !11261)
!11264 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11146, file: !11146, line: 483, type: !11265, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11281)
!11265 = !DISubroutineType(types: !11266)
!11266 = !{!11189, !11267, !11274}
!11267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11268, size: 32)
!11268 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11153, line: 114, baseType: !11269)
!11269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11153, line: 94, size: 96, elements: !11270)
!11270 = !{!11271, !11272, !11273}
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11269, file: !11153, line: 96, baseType: !110, size: 32)
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11269, file: !11153, line: 102, baseType: !110, size: 32, offset: 32)
!11273 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11269, file: !11153, line: 109, baseType: !110, size: 32, offset: 64)
!11274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11275, size: 32)
!11275 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11153, line: 139, baseType: !11276)
!11276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11153, line: 119, size: 96, elements: !11277)
!11277 = !{!11278, !11279, !11280}
!11278 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11276, file: !11153, line: 121, baseType: !110, size: 32)
!11279 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11276, file: !11153, line: 127, baseType: !110, size: 32, offset: 32)
!11280 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11276, file: !11153, line: 133, baseType: !110, size: 32, offset: 64)
!11281 = !{!11282, !11283, !11284, !11285}
!11282 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11264, file: !11146, line: 483, type: !11267)
!11283 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11264, file: !11146, line: 484, type: !11274)
!11284 = !DILocalVariable(name: "status", scope: !11264, file: !11146, line: 486, type: !11189)
!11285 = !DILocalVariable(name: "pllfreq", scope: !11264, file: !11146, line: 487, type: !110)
!11286 = !DILocation(line: 0, scope: !11264)
!11287 = !DILocation(line: 490, column: 6, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11264, file: !11146, line: 490, column: 6)
!11289 = !DILocation(line: 490, column: 25, scope: !11288)
!11290 = !DILocation(line: 490, column: 6, scope: !11264)
!11291 = !DILocation(line: 493, column: 15, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11288, file: !11146, line: 491, column: 3)
!11293 = !DILocation(line: 496, column: 8, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11292, file: !11146, line: 496, column: 8)
!11295 = !DILocation(line: 496, column: 29, scope: !11294)
!11296 = !DILocation(line: 496, column: 8, scope: !11292)
!11297 = !DILocation(line: 498, column: 7, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11294, file: !11146, line: 497, column: 5)
!11299 = !DILocation(line: 499, column: 7, scope: !11298)
!11300 = !DILocation(line: 499, column: 14, scope: !11298)
!11301 = !DILocation(line: 499, column: 35, scope: !11298)
!11302 = distinct !{!11302, !11299, !11303}
!11303 = !DILocation(line: 502, column: 7, scope: !11298)
!11304 = !DILocation(line: 506, column: 76, scope: !11292)
!11305 = !DILocation(line: 506, column: 103, scope: !11292)
!11306 = !DILocation(line: 507, column: 54, scope: !11292)
!11307 = !DILocation(line: 506, column: 5, scope: !11292)
!11308 = !DILocation(line: 510, column: 14, scope: !11292)
!11309 = !DILocation(line: 511, column: 3, scope: !11292)
!11310 = !DILocation(line: 0, scope: !11288)
!11311 = !DILocation(line: 518, column: 3, scope: !11264)
!11312 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11146, file: !11146, line: 642, type: !11313, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11315)
!11313 = !DISubroutineType(types: !11314)
!11314 = !{!11189}
!11315 = !{!11316}
!11316 = !DILocalVariable(name: "status", scope: !11312, file: !11146, line: 644, type: !11189)
!11317 = !DILocation(line: 0, scope: !11312)
!11318 = !DILocation(line: 647, column: 6, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11312, file: !11146, line: 647, column: 6)
!11320 = !DILocation(line: 647, column: 27, scope: !11319)
!11321 = !DILocation(line: 663, column: 6, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11312, file: !11146, line: 663, column: 6)
!11323 = !DILocation(line: 663, column: 30, scope: !11322)
!11324 = !DILocation(line: 663, column: 6, scope: !11312)
!11325 = !DILocation(line: 669, column: 3, scope: !11312)
!11326 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11146, file: !11146, line: 611, type: !11327, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11329)
!11327 = !DISubroutineType(types: !11328)
!11328 = !{!110, !110, !11267}
!11329 = !{!11330, !11331, !11332}
!11330 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11326, file: !11146, line: 611, type: !110)
!11331 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11326, file: !11146, line: 611, type: !11267)
!11332 = !DILocalVariable(name: "pllfreq", scope: !11326, file: !11146, line: 613, type: !110)
!11333 = !DILocation(line: 0, scope: !11326)
!11334 = !DILocation(line: 622, column: 56, scope: !11326)
!11335 = !DILocation(line: 622, column: 61, scope: !11326)
!11336 = !DILocation(line: 622, column: 32, scope: !11326)
!11337 = !DILocation(line: 626, column: 45, scope: !11326)
!11338 = !DILocation(line: 626, column: 50, scope: !11326)
!11339 = !DILocation(line: 626, column: 21, scope: !11326)
!11340 = !DILocation(line: 630, column: 47, scope: !11326)
!11341 = !DILocation(line: 630, column: 82, scope: !11326)
!11342 = !DILocation(line: 630, column: 21, scope: !11326)
!11343 = !DILocation(line: 633, column: 3, scope: !11326)
!11344 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8122, file: !8122, line: 3007, type: !3368, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11345 = !DILocation(line: 3009, column: 11, scope: !11344)
!11346 = !DILocation(line: 3009, column: 44, scope: !11344)
!11347 = !DILocation(line: 3009, column: 3, scope: !11344)
!11348 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8122, file: !8122, line: 2987, type: !3086, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11349 = !DILocation(line: 2989, column: 3, scope: !11348)
!11350 = !DILocation(line: 2990, column: 1, scope: !11348)
!11351 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8122, file: !8122, line: 4304, type: !8246, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11352)
!11352 = !{!11353, !11354, !11355, !11356}
!11353 = !DILocalVariable(name: "Source", arg: 1, scope: !11351, file: !8122, line: 4304, type: !110)
!11354 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11351, file: !8122, line: 4304, type: !110)
!11355 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11351, file: !8122, line: 4304, type: !110)
!11356 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11351, file: !8122, line: 4304, type: !110)
!11357 = !DILocation(line: 0, scope: !11351)
!11358 = !DILocation(line: 4306, column: 3, scope: !11351)
!11359 = !DILocation(line: 4308, column: 3, scope: !11351)
!11360 = !DILocation(line: 4312, column: 1, scope: !11351)
!11361 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11146, file: !11146, line: 681, type: !11362, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11364)
!11362 = !DISubroutineType(types: !11363)
!11363 = !{!11189, !110, !11274}
!11364 = !{!11365, !11366, !11367, !11368}
!11365 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11361, file: !11146, line: 681, type: !110)
!11366 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11361, file: !11146, line: 681, type: !11274)
!11367 = !DILocalVariable(name: "status", scope: !11361, file: !11146, line: 683, type: !11189)
!11368 = !DILocalVariable(name: "hclk_frequency", scope: !11361, file: !11146, line: 684, type: !110)
!11369 = !DILocation(line: 0, scope: !11361)
!11370 = !DILocation(line: 691, column: 20, scope: !11361)
!11371 = !DILocation(line: 694, column: 6, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11361, file: !11146, line: 694, column: 6)
!11373 = !DILocation(line: 694, column: 22, scope: !11372)
!11374 = !DILocation(line: 694, column: 6, scope: !11361)
!11375 = !DILocation(line: 697, column: 14, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11372, file: !11146, line: 695, column: 3)
!11377 = !DILocation(line: 701, column: 13, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11361, file: !11146, line: 701, column: 6)
!11379 = !DILocation(line: 701, column: 6, scope: !11361)
!11380 = !DILocation(line: 704, column: 5, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11378, file: !11146, line: 702, column: 3)
!11382 = !DILocation(line: 705, column: 5, scope: !11381)
!11383 = !DILocation(line: 705, column: 12, scope: !11381)
!11384 = !DILocation(line: 705, column: 33, scope: !11381)
!11385 = distinct !{!11385, !11382, !11386}
!11386 = !DILocation(line: 708, column: 5, scope: !11381)
!11387 = !DILocation(line: 711, column: 49, scope: !11381)
!11388 = !DILocation(line: 711, column: 5, scope: !11381)
!11389 = !DILocation(line: 712, column: 5, scope: !11381)
!11390 = !DILocation(line: 713, column: 5, scope: !11381)
!11391 = !DILocation(line: 713, column: 12, scope: !11381)
!11392 = !DILocation(line: 713, column: 37, scope: !11381)
!11393 = distinct !{!11393, !11390, !11394}
!11394 = !DILocation(line: 716, column: 5, scope: !11381)
!11395 = !DILocation(line: 719, column: 50, scope: !11381)
!11396 = !DILocation(line: 719, column: 5, scope: !11381)
!11397 = !DILocation(line: 720, column: 50, scope: !11381)
!11398 = !DILocation(line: 720, column: 5, scope: !11381)
!11399 = !DILocation(line: 721, column: 3, scope: !11381)
!11400 = !DILocation(line: 724, column: 6, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11361, file: !11146, line: 724, column: 6)
!11402 = !DILocation(line: 724, column: 22, scope: !11401)
!11403 = !DILocation(line: 724, column: 6, scope: !11361)
!11404 = !DILocation(line: 727, column: 14, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11401, file: !11146, line: 725, column: 3)
!11406 = !DILocation(line: 728, column: 3, scope: !11405)
!11407 = !DILocation(line: 731, column: 13, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11361, file: !11146, line: 731, column: 6)
!11409 = !DILocation(line: 731, column: 6, scope: !11361)
!11410 = !DILocation(line: 733, column: 5, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11408, file: !11146, line: 732, column: 3)
!11412 = !DILocation(line: 734, column: 3, scope: !11411)
!11413 = !DILocation(line: 736, column: 3, scope: !11361)
!11414 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8122, file: !8122, line: 4184, type: !3086, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11415 = !DILocation(line: 4186, column: 3, scope: !11414)
!11416 = !DILocation(line: 4187, column: 1, scope: !11414)
!11417 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8122, file: !8122, line: 4205, type: !3368, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11418 = !DILocation(line: 4207, column: 11, scope: !11417)
!11419 = !DILocation(line: 4207, column: 44, scope: !11417)
!11420 = !DILocation(line: 4207, column: 3, scope: !11417)
!11421 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8122, file: !8122, line: 3224, type: !6239, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11422)
!11422 = !{!11423}
!11423 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11421, file: !8122, line: 3224, type: !110)
!11424 = !DILocation(line: 0, scope: !11421)
!11425 = !DILocation(line: 3226, column: 3, scope: !11421)
!11426 = !DILocation(line: 3227, column: 1, scope: !11421)
!11427 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8122, file: !8122, line: 3188, type: !6239, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11428)
!11428 = !{!11429}
!11429 = !DILocalVariable(name: "Source", arg: 1, scope: !11427, file: !8122, line: 3188, type: !110)
!11430 = !DILocation(line: 0, scope: !11427)
!11431 = !DILocation(line: 3190, column: 3, scope: !11427)
!11432 = !DILocation(line: 3191, column: 1, scope: !11427)
!11433 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8122, file: !8122, line: 3204, type: !3368, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11434 = !DILocation(line: 3206, column: 21, scope: !11433)
!11435 = !DILocation(line: 3206, column: 3, scope: !11433)
!11436 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8122, file: !8122, line: 3240, type: !6239, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11437)
!11437 = !{!11438}
!11438 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11436, file: !8122, line: 3240, type: !110)
!11439 = !DILocation(line: 0, scope: !11436)
!11440 = !DILocation(line: 3242, column: 3, scope: !11436)
!11441 = !DILocation(line: 3243, column: 1, scope: !11436)
!11442 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8122, file: !8122, line: 3256, type: !6239, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11443)
!11443 = !{!11444}
!11444 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11442, file: !8122, line: 3256, type: !110)
!11445 = !DILocation(line: 0, scope: !11442)
!11446 = !DILocation(line: 3258, column: 3, scope: !11442)
!11447 = !DILocation(line: 3259, column: 1, scope: !11442)
!11448 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8122, file: !8122, line: 5153, type: !3368, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11449 = !DILocation(line: 5155, column: 11, scope: !11448)
!11450 = !DILocation(line: 5155, column: 47, scope: !11448)
!11451 = !DILocation(line: 5155, column: 3, scope: !11448)
!11452 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11146, file: !11146, line: 540, type: !11453, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !11455)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{!11189, !110, !110, !11267, !11274}
!11455 = !{!11456, !11457, !11458, !11459, !11460, !11461}
!11456 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11452, file: !11146, line: 540, type: !110)
!11457 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11452, file: !11146, line: 540, type: !110)
!11458 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11452, file: !11146, line: 541, type: !11267)
!11459 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11452, file: !11146, line: 541, type: !11274)
!11460 = !DILocalVariable(name: "status", scope: !11452, file: !11146, line: 543, type: !11189)
!11461 = !DILocalVariable(name: "pllfreq", scope: !11452, file: !11146, line: 544, type: !110)
!11462 = !DILocation(line: 0, scope: !11452)
!11463 = !DILocation(line: 551, column: 6, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11452, file: !11146, line: 551, column: 6)
!11465 = !DILocation(line: 551, column: 25, scope: !11464)
!11466 = !DILocation(line: 551, column: 6, scope: !11452)
!11467 = !DILocation(line: 554, column: 15, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11464, file: !11146, line: 552, column: 3)
!11469 = !DILocation(line: 557, column: 8, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11468, file: !11146, line: 557, column: 8)
!11471 = !DILocation(line: 557, column: 29, scope: !11470)
!11472 = !DILocation(line: 557, column: 8, scope: !11468)
!11473 = !DILocation(line: 560, column: 20, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !11146, line: 560, column: 10)
!11475 = distinct !DILexicalBlock(scope: !11470, file: !11146, line: 558, column: 5)
!11476 = !DILocation(line: 560, column: 10, scope: !11475)
!11477 = !DILocation(line: 562, column: 9, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11474, file: !11146, line: 561, column: 7)
!11479 = !DILocation(line: 563, column: 7, scope: !11478)
!11480 = !DILocation(line: 566, column: 9, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11474, file: !11146, line: 565, column: 7)
!11482 = !DILocation(line: 570, column: 7, scope: !11475)
!11483 = !DILocation(line: 571, column: 7, scope: !11475)
!11484 = !DILocation(line: 571, column: 14, scope: !11475)
!11485 = !DILocation(line: 571, column: 35, scope: !11475)
!11486 = distinct !{!11486, !11483, !11487}
!11487 = !DILocation(line: 574, column: 7, scope: !11475)
!11488 = !DILocation(line: 578, column: 76, scope: !11468)
!11489 = !DILocation(line: 578, column: 103, scope: !11468)
!11490 = !DILocation(line: 579, column: 54, scope: !11468)
!11491 = !DILocation(line: 578, column: 5, scope: !11468)
!11492 = !DILocation(line: 582, column: 14, scope: !11468)
!11493 = !DILocation(line: 583, column: 3, scope: !11468)
!11494 = !DILocation(line: 0, scope: !11464)
!11495 = !DILocation(line: 590, column: 3, scope: !11452)
!11496 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8122, file: !8122, line: 2969, type: !3368, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11497 = !DILocation(line: 2971, column: 11, scope: !11496)
!11498 = !DILocation(line: 2971, column: 44, scope: !11496)
!11499 = !DILocation(line: 2971, column: 3, scope: !11496)
!11500 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8122, file: !8122, line: 2929, type: !3086, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11501 = !DILocation(line: 2931, column: 3, scope: !11500)
!11502 = !DILocation(line: 2932, column: 1, scope: !11500)
!11503 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8122, file: !8122, line: 2939, type: !3086, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11504 = !DILocation(line: 2941, column: 3, scope: !11503)
!11505 = !DILocation(line: 2942, column: 1, scope: !11503)
!11506 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8122, file: !8122, line: 2949, type: !3086, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !1998)
!11507 = !DILocation(line: 2951, column: 3, scope: !11506)
!11508 = !DILocation(line: 2952, column: 1, scope: !11506)
!11509 = distinct !DISubprogram(name: "z_device_state_init", scope: !11510, file: !11510, line: 23, type: !3086, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !11511)
!11510 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11511 = !{!11512}
!11512 = !DILocalVariable(name: "dev", scope: !11509, file: !11510, line: 25, type: !11513)
!11513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11514, size: 32)
!11514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11515)
!11515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !11516)
!11516 = !{!11517, !11518, !11519, !11520, !11526, !11527}
!11517 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11515, file: !321, line: 380, baseType: !324, size: 32)
!11518 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11515, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!11519 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11515, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!11520 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11515, file: !321, line: 386, baseType: !11521, size: 32, offset: 96)
!11521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11522, size: 32)
!11522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !11523)
!11523 = !{!11524, !11525}
!11524 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11522, file: !321, line: 359, baseType: !167, size: 8)
!11525 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11522, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11526 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11515, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!11527 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11515, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!11528 = !DILocation(line: 0, scope: !11509)
!11529 = !DILocation(line: 31, column: 1, scope: !11509)
!11530 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11510, file: !11510, line: 33, type: !11531, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !11533)
!11531 = !DISubroutineType(types: !11532)
!11532 = !{!11513, !324}
!11533 = !{!11534, !11535}
!11534 = !DILocalVariable(name: "name", arg: 1, scope: !11530, file: !11510, line: 33, type: !324)
!11535 = !DILocalVariable(name: "dev", scope: !11530, file: !11510, line: 35, type: !11513)
!11536 = !DILocation(line: 0, scope: !11530)
!11537 = !DILocation(line: 40, column: 12, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11530, file: !11510, line: 40, column: 6)
!11539 = !DILocation(line: 40, column: 21, scope: !11538)
!11540 = !DILocation(line: 40, column: 25, scope: !11538)
!11541 = !DILocation(line: 40, column: 33, scope: !11538)
!11542 = !DILocation(line: 40, column: 6, scope: !11530)
!11543 = !DILocation(line: 55, column: 2, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11530, file: !11510, line: 55, column: 2)
!11545 = !DILocation(line: 50, column: 7, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11547, file: !11510, line: 50, column: 7)
!11547 = distinct !DILexicalBlock(scope: !11548, file: !11510, line: 49, column: 57)
!11548 = distinct !DILexicalBlock(scope: !11549, file: !11510, line: 49, column: 2)
!11549 = distinct !DILexicalBlock(scope: !11530, file: !11510, line: 49, column: 2)
!11550 = !DILocation(line: 50, column: 30, scope: !11546)
!11551 = !DILocation(line: 50, column: 39, scope: !11546)
!11552 = !DILocation(line: 50, column: 44, scope: !11546)
!11553 = !DILocation(line: 50, column: 7, scope: !11547)
!11554 = !DILocation(line: 49, column: 53, scope: !11548)
!11555 = !DILocation(line: 49, column: 33, scope: !11548)
!11556 = !DILocation(line: 49, column: 2, scope: !11549)
!11557 = distinct !{!11557, !11556, !11558}
!11558 = !DILocation(line: 53, column: 2, scope: !11549)
!11559 = !DILocation(line: 56, column: 7, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11561, file: !11510, line: 56, column: 7)
!11561 = distinct !DILexicalBlock(scope: !11562, file: !11510, line: 55, column: 57)
!11562 = distinct !DILexicalBlock(scope: !11544, file: !11510, line: 55, column: 2)
!11563 = !DILocation(line: 56, column: 30, scope: !11560)
!11564 = !DILocation(line: 56, column: 52, scope: !11560)
!11565 = !DILocation(line: 56, column: 34, scope: !11560)
!11566 = !DILocation(line: 56, column: 58, scope: !11560)
!11567 = !DILocation(line: 56, column: 7, scope: !11561)
!11568 = !DILocation(line: 55, column: 53, scope: !11562)
!11569 = !DILocation(line: 55, column: 33, scope: !11562)
!11570 = distinct !{!11570, !11543, !11571}
!11571 = !DILocation(line: 59, column: 2, scope: !11544)
!11572 = !DILocation(line: 62, column: 1, scope: !11530)
!11573 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11510, file: !11510, line: 93, type: !11574, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !11576)
!11574 = !DISubroutineType(types: !11575)
!11575 = !{!334, !11513}
!11576 = !{!11577}
!11577 = !DILocalVariable(name: "dev", arg: 1, scope: !11573, file: !11510, line: 93, type: !11513)
!11578 = !DILocation(line: 0, scope: !11573)
!11579 = !DILocation(line: 99, column: 10, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11573, file: !11510, line: 99, column: 6)
!11581 = !DILocation(line: 99, column: 6, scope: !11573)
!11582 = !DILocation(line: 103, column: 14, scope: !11573)
!11583 = !DILocation(line: 103, column: 21, scope: !11573)
!11584 = !DILocation(line: 103, column: 33, scope: !11573)
!11585 = !DILocation(line: 103, column: 49, scope: !11573)
!11586 = !DILocation(line: 103, column: 58, scope: !11573)
!11587 = !DILocation(line: 104, column: 1, scope: !11573)
!11588 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11510, file: !11510, line: 87, type: !11589, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !11592)
!11589 = !DISubroutineType(types: !11590)
!11590 = !{!235, !11591}
!11591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11513, size: 32)
!11592 = !{!11593}
!11593 = !DILocalVariable(name: "devices", arg: 1, scope: !11588, file: !11510, line: 87, type: !11591)
!11594 = !DILocation(line: 0, scope: !11588)
!11595 = !DILocation(line: 89, column: 11, scope: !11588)
!11596 = !DILocation(line: 90, column: 2, scope: !11588)
!11597 = distinct !DISubprogram(name: "device_required_foreach", scope: !11510, file: !11510, line: 125, type: !11598, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !11604)
!11598 = !DISubroutineType(types: !11599)
!11599 = !{!109, !11513, !11600, !108}
!11600 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !321, line: 471, baseType: !11601)
!11601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11602, size: 32)
!11602 = !DISubroutineType(types: !11603)
!11603 = !{!109, !11513, !108}
!11604 = !{!11605, !11606, !11607, !11608, !11609}
!11605 = !DILocalVariable(name: "dev", arg: 1, scope: !11597, file: !11510, line: 125, type: !11513)
!11606 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11597, file: !11510, line: 126, type: !11600)
!11607 = !DILocalVariable(name: "context", arg: 3, scope: !11597, file: !11510, line: 127, type: !108)
!11608 = !DILocalVariable(name: "handle_count", scope: !11597, file: !11510, line: 129, type: !235)
!11609 = !DILocalVariable(name: "handles", scope: !11597, file: !11510, line: 130, type: !337)
!11610 = !DILocation(line: 0, scope: !11597)
!11611 = !DILocation(line: 129, column: 2, scope: !11597)
!11612 = !DILocation(line: 129, column: 9, scope: !11597)
!11613 = !DILocation(line: 130, column: 35, scope: !11597)
!11614 = !DILocation(line: 132, column: 33, scope: !11597)
!11615 = !DILocation(line: 132, column: 9, scope: !11597)
!11616 = !DILocation(line: 133, column: 1, scope: !11597)
!11617 = !DILocation(line: 132, column: 2, scope: !11597)
!11618 = distinct !DISubprogram(name: "device_required_handles_get", scope: !321, file: !321, line: 493, type: !11619, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !11621)
!11619 = !DISubroutineType(types: !11620)
!11620 = !{!337, !11513, !2539}
!11621 = !{!11622, !11623, !11624, !11625}
!11622 = !DILocalVariable(name: "dev", arg: 1, scope: !11618, file: !321, line: 493, type: !11513)
!11623 = !DILocalVariable(name: "count", arg: 2, scope: !11618, file: !321, line: 493, type: !2539)
!11624 = !DILocalVariable(name: "rv", scope: !11618, file: !321, line: 495, type: !337)
!11625 = !DILocalVariable(name: "i", scope: !11626, file: !321, line: 498, type: !235)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !321, line: 497, column: 18)
!11627 = distinct !DILexicalBlock(scope: !11618, file: !321, line: 497, column: 6)
!11628 = !DILocation(line: 0, scope: !11618)
!11629 = !DILocation(line: 495, column: 35, scope: !11618)
!11630 = !DILocation(line: 497, column: 9, scope: !11627)
!11631 = !DILocation(line: 497, column: 6, scope: !11618)
!11632 = !DILocation(line: 0, scope: !11626)
!11633 = !DILocation(line: 500, column: 11, scope: !11626)
!11634 = !DILocation(line: 500, column: 40, scope: !11626)
!11635 = !DILocation(line: 502, column: 4, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11626, file: !321, line: 501, column: 40)
!11637 = distinct !{!11637, !11638, !11639}
!11638 = !DILocation(line: 500, column: 3, scope: !11626)
!11639 = !DILocation(line: 503, column: 3, scope: !11626)
!11640 = !DILocation(line: 504, column: 10, scope: !11626)
!11641 = !DILocation(line: 505, column: 2, scope: !11626)
!11642 = !DILocation(line: 507, column: 2, scope: !11618)
!11643 = distinct !DISubprogram(name: "device_visitor", scope: !11510, file: !11510, line: 106, type: !11644, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !11646)
!11644 = !DISubroutineType(types: !11645)
!11645 = !{!109, !337, !235, !11600, !108}
!11646 = !{!11647, !11648, !11649, !11650, !11651, !11653, !11656, !11657}
!11647 = !DILocalVariable(name: "handles", arg: 1, scope: !11643, file: !11510, line: 106, type: !337)
!11648 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11643, file: !11510, line: 107, type: !235)
!11649 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11643, file: !11510, line: 108, type: !11600)
!11650 = !DILocalVariable(name: "context", arg: 4, scope: !11643, file: !11510, line: 109, type: !108)
!11651 = !DILocalVariable(name: "i", scope: !11652, file: !11510, line: 112, type: !235)
!11652 = distinct !DILexicalBlock(scope: !11643, file: !11510, line: 112, column: 2)
!11653 = !DILocalVariable(name: "dh", scope: !11654, file: !11510, line: 113, type: !339)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !11510, line: 112, column: 44)
!11655 = distinct !DILexicalBlock(scope: !11652, file: !11510, line: 112, column: 2)
!11656 = !DILocalVariable(name: "rdev", scope: !11654, file: !11510, line: 114, type: !11513)
!11657 = !DILocalVariable(name: "rc", scope: !11654, file: !11510, line: 115, type: !109)
!11658 = !DILocation(line: 0, scope: !11643)
!11659 = !DILocation(line: 0, scope: !11652)
!11660 = !DILocation(line: 112, column: 23, scope: !11655)
!11661 = !DILocation(line: 112, column: 2, scope: !11652)
!11662 = distinct !{!11662, !11661, !11663}
!11663 = !DILocation(line: 120, column: 2, scope: !11652)
!11664 = !DILocation(line: 113, column: 24, scope: !11654)
!11665 = !DILocation(line: 0, scope: !11654)
!11666 = !DILocation(line: 114, column: 31, scope: !11654)
!11667 = !DILocation(line: 115, column: 12, scope: !11654)
!11668 = !DILocation(line: 117, column: 10, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11654, file: !11510, line: 117, column: 7)
!11670 = !DILocation(line: 112, column: 39, scope: !11655)
!11671 = !DILocation(line: 123, column: 1, scope: !11643)
!11672 = distinct !DISubprogram(name: "device_from_handle", scope: !321, file: !321, line: 439, type: !11673, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !11675)
!11673 = !DISubroutineType(types: !11674)
!11674 = !{!11513, !339}
!11675 = !{!11676, !11677, !11678}
!11676 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11672, file: !321, line: 439, type: !339)
!11677 = !DILocalVariable(name: "dev", scope: !11672, file: !321, line: 443, type: !11513)
!11678 = !DILocalVariable(name: "numdev", scope: !11672, file: !321, line: 444, type: !235)
!11679 = !DILocation(line: 0, scope: !11672)
!11680 = !DILocation(line: 446, column: 7, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11672, file: !321, line: 446, column: 6)
!11682 = !DILocation(line: 446, column: 18, scope: !11681)
!11683 = !DILocation(line: 446, column: 23, scope: !11681)
!11684 = !DILocation(line: 450, column: 2, scope: !11672)
!11685 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11510, file: !11510, line: 135, type: !11598, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !11686)
!11686 = !{!11687, !11688, !11689, !11690, !11691}
!11687 = !DILocalVariable(name: "dev", arg: 1, scope: !11685, file: !11510, line: 135, type: !11513)
!11688 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11685, file: !11510, line: 136, type: !11600)
!11689 = !DILocalVariable(name: "context", arg: 3, scope: !11685, file: !11510, line: 137, type: !108)
!11690 = !DILocalVariable(name: "handle_count", scope: !11685, file: !11510, line: 139, type: !235)
!11691 = !DILocalVariable(name: "handles", scope: !11685, file: !11510, line: 140, type: !337)
!11692 = !DILocation(line: 0, scope: !11685)
!11693 = !DILocation(line: 139, column: 2, scope: !11685)
!11694 = !DILocation(line: 139, column: 9, scope: !11685)
!11695 = !DILocation(line: 140, column: 35, scope: !11685)
!11696 = !DILocation(line: 142, column: 33, scope: !11685)
!11697 = !DILocation(line: 142, column: 9, scope: !11685)
!11698 = !DILocation(line: 143, column: 1, scope: !11685)
!11699 = !DILocation(line: 142, column: 2, scope: !11685)
!11700 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !321, file: !321, line: 573, type: !11619, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !11701)
!11701 = !{!11702, !11703, !11704, !11705, !11706}
!11702 = !DILocalVariable(name: "dev", arg: 1, scope: !11700, file: !321, line: 573, type: !11513)
!11703 = !DILocalVariable(name: "count", arg: 2, scope: !11700, file: !321, line: 573, type: !2539)
!11704 = !DILocalVariable(name: "rv", scope: !11700, file: !321, line: 575, type: !337)
!11705 = !DILocalVariable(name: "region", scope: !11700, file: !321, line: 576, type: !235)
!11706 = !DILocalVariable(name: "i", scope: !11700, file: !321, line: 577, type: !235)
!11707 = !DILocation(line: 0, scope: !11700)
!11708 = !DILocation(line: 575, column: 35, scope: !11700)
!11709 = !DILocation(line: 579, column: 9, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11700, file: !321, line: 579, column: 6)
!11711 = !DILocation(line: 579, column: 6, scope: !11700)
!11712 = !DILocation(line: 582, column: 8, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11714, file: !321, line: 582, column: 8)
!11714 = distinct !DILexicalBlock(scope: !11715, file: !321, line: 581, column: 23)
!11715 = distinct !DILexicalBlock(scope: !11710, file: !321, line: 579, column: 18)
!11716 = !DILocation(line: 582, column: 12, scope: !11713)
!11717 = !DILocation(line: 585, column: 6, scope: !11714)
!11718 = !DILocation(line: 0, scope: !11715)
!11719 = !DILocation(line: 581, column: 17, scope: !11715)
!11720 = !DILocation(line: 581, column: 3, scope: !11715)
!11721 = !DILocation(line: 588, column: 10, scope: !11715)
!11722 = !DILocation(line: 588, column: 16, scope: !11715)
!11723 = !DILocation(line: 589, column: 4, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11715, file: !321, line: 588, column: 39)
!11725 = !DILocation(line: 588, column: 3, scope: !11715)
!11726 = distinct !{!11726, !11725, !11727}
!11727 = !DILocation(line: 590, column: 3, scope: !11715)
!11728 = !DILocation(line: 591, column: 10, scope: !11715)
!11729 = !DILocation(line: 592, column: 2, scope: !11715)
!11730 = !DILocation(line: 575, column: 25, scope: !11700)
!11731 = !DILocation(line: 594, column: 2, scope: !11700)
!11732 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1780, file: !1780, line: 49, type: !11733, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !1998)
!11733 = !DISubroutineType(types: !11734)
!11734 = !{!2533}
!11735 = !DILocation(line: 51, column: 10, scope: !11732)
!11736 = !DILocation(line: 51, column: 20, scope: !11732)
!11737 = !DILocation(line: 51, column: 2, scope: !11732)
!11738 = distinct !DISubprogram(name: "coredump", scope: !3053, file: !3053, line: 209, type: !11739, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !11896)
!11739 = !DISubroutineType(types: !11740)
!11740 = !{null, !32, !11741, !11785}
!11741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11742, size: 32)
!11742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11743)
!11743 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2666, line: 141, baseType: !11744)
!11744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2666, line: 97, size: 256, elements: !11745)
!11745 = !{!11746}
!11746 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11744, file: !2666, line: 107, baseType: !11747, size: 256)
!11747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2666, line: 98, size: 256, elements: !11748)
!11748 = !{!11749, !11754, !11759, !11764, !11769, !11774, !11779, !11784}
!11749 = !DIDerivedType(tag: DW_TAG_member, scope: !11747, file: !2666, line: 99, baseType: !11750, size: 32)
!11750 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11747, file: !2666, line: 99, size: 32, elements: !11751)
!11751 = !{!11752, !11753}
!11752 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11750, file: !2666, line: 99, baseType: !110, size: 32)
!11753 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11750, file: !2666, line: 99, baseType: !110, size: 32)
!11754 = !DIDerivedType(tag: DW_TAG_member, scope: !11747, file: !2666, line: 100, baseType: !11755, size: 32, offset: 32)
!11755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11747, file: !2666, line: 100, size: 32, elements: !11756)
!11756 = !{!11757, !11758}
!11757 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11755, file: !2666, line: 100, baseType: !110, size: 32)
!11758 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11755, file: !2666, line: 100, baseType: !110, size: 32)
!11759 = !DIDerivedType(tag: DW_TAG_member, scope: !11747, file: !2666, line: 101, baseType: !11760, size: 32, offset: 64)
!11760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11747, file: !2666, line: 101, size: 32, elements: !11761)
!11761 = !{!11762, !11763}
!11762 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11760, file: !2666, line: 101, baseType: !110, size: 32)
!11763 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11760, file: !2666, line: 101, baseType: !110, size: 32)
!11764 = !DIDerivedType(tag: DW_TAG_member, scope: !11747, file: !2666, line: 102, baseType: !11765, size: 32, offset: 96)
!11765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11747, file: !2666, line: 102, size: 32, elements: !11766)
!11766 = !{!11767, !11768}
!11767 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11765, file: !2666, line: 102, baseType: !110, size: 32)
!11768 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11765, file: !2666, line: 102, baseType: !110, size: 32)
!11769 = !DIDerivedType(tag: DW_TAG_member, scope: !11747, file: !2666, line: 103, baseType: !11770, size: 32, offset: 128)
!11770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11747, file: !2666, line: 103, size: 32, elements: !11771)
!11771 = !{!11772, !11773}
!11772 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11770, file: !2666, line: 103, baseType: !110, size: 32)
!11773 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11770, file: !2666, line: 103, baseType: !110, size: 32)
!11774 = !DIDerivedType(tag: DW_TAG_member, scope: !11747, file: !2666, line: 104, baseType: !11775, size: 32, offset: 160)
!11775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11747, file: !2666, line: 104, size: 32, elements: !11776)
!11776 = !{!11777, !11778}
!11777 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11775, file: !2666, line: 104, baseType: !110, size: 32)
!11778 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11775, file: !2666, line: 104, baseType: !110, size: 32)
!11779 = !DIDerivedType(tag: DW_TAG_member, scope: !11747, file: !2666, line: 105, baseType: !11780, size: 32, offset: 192)
!11780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11747, file: !2666, line: 105, size: 32, elements: !11781)
!11781 = !{!11782, !11783}
!11782 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11780, file: !2666, line: 105, baseType: !110, size: 32)
!11783 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11780, file: !2666, line: 105, baseType: !110, size: 32)
!11784 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11747, file: !2666, line: 106, baseType: !110, size: 32, offset: 224)
!11785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11786, size: 32)
!11786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !11787)
!11787 = !{!11788, !11846, !11858, !11859, !11860, !11867, !11868, !11869, !11870, !11876, !11891}
!11788 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11786, file: !145, line: 247, baseType: !11789, size: 384)
!11789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !11790)
!11790 = !{!11791, !11815, !11822, !11823, !11824, !11833, !11834, !11835}
!11791 = !DIDerivedType(tag: DW_TAG_member, scope: !11789, file: !145, line: 60, baseType: !11792, size: 64)
!11792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11789, file: !145, line: 60, size: 64, elements: !11793)
!11793 = !{!11794, !11809}
!11794 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11792, file: !145, line: 61, baseType: !11795, size: 64)
!11795 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !11796)
!11796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !11797)
!11797 = !{!11798, !11804}
!11798 = !DIDerivedType(tag: DW_TAG_member, scope: !11796, file: !128, line: 38, baseType: !11799, size: 32)
!11799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11796, file: !128, line: 38, size: 32, elements: !11800)
!11800 = !{!11801, !11803}
!11801 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11799, file: !128, line: 39, baseType: !11802, size: 32)
!11802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11796, size: 32)
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11799, file: !128, line: 40, baseType: !11802, size: 32)
!11804 = !DIDerivedType(tag: DW_TAG_member, scope: !11796, file: !128, line: 42, baseType: !11805, size: 32, offset: 32)
!11805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11796, file: !128, line: 42, size: 32, elements: !11806)
!11806 = !{!11807, !11808}
!11807 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11805, file: !128, line: 43, baseType: !11802, size: 32)
!11808 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11805, file: !128, line: 44, baseType: !11802, size: 32)
!11809 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11792, file: !145, line: 62, baseType: !11810, size: 64)
!11810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !11811)
!11811 = !{!11812}
!11812 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11810, file: !157, line: 50, baseType: !11813, size: 64)
!11813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11814, size: 64, elements: !162)
!11814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11810, size: 32)
!11815 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11789, file: !145, line: 68, baseType: !11816, size: 32, offset: 64)
!11816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11817, size: 32)
!11817 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !11818)
!11818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !11819)
!11819 = !{!11820}
!11820 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11818, file: !123, line: 232, baseType: !11821, size: 64)
!11821 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !11796)
!11822 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11789, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!11823 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11789, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!11824 = !DIDerivedType(tag: DW_TAG_member, scope: !11789, file: !145, line: 90, baseType: !11825, size: 16, offset: 112)
!11825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11789, file: !145, line: 90, size: 16, elements: !11826)
!11826 = !{!11827, !11832}
!11827 = !DIDerivedType(tag: DW_TAG_member, scope: !11825, file: !145, line: 91, baseType: !11828, size: 16)
!11828 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11825, file: !145, line: 91, size: 16, elements: !11829)
!11829 = !{!11830, !11831}
!11830 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11828, file: !145, line: 96, baseType: !177, size: 8)
!11831 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11828, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!11832 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11825, file: !145, line: 100, baseType: !181, size: 16)
!11833 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11789, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!11834 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11789, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!11835 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11789, file: !145, line: 131, baseType: !11836, size: 192, offset: 192)
!11836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !11837)
!11837 = !{!11838, !11839, !11845}
!11838 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11836, file: !123, line: 245, baseType: !11795, size: 64)
!11839 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11836, file: !123, line: 246, baseType: !11840, size: 32, offset: 64)
!11840 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !11841)
!11841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11842, size: 32)
!11842 = !DISubroutineType(types: !11843)
!11843 = !{null, !11844}
!11844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11836, size: 32)
!11845 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11836, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!11846 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11786, file: !145, line: 250, baseType: !11847, size: 288, offset: 384)
!11847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !11848)
!11848 = !{!11849, !11850, !11851, !11852, !11853, !11854, !11855, !11856, !11857}
!11849 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11847, file: !198, line: 26, baseType: !110, size: 32)
!11850 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11847, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!11851 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11847, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!11852 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11847, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!11853 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11847, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!11854 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11847, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!11855 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11847, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!11856 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11847, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!11857 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11847, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!11858 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11786, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!11859 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11786, file: !145, line: 256, baseType: !11817, size: 64, offset: 704)
!11860 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !11786, file: !145, line: 271, baseType: !11861, size: 128, offset: 768)
!11861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !11862)
!11862 = !{!11863, !11864, !11865, !11866}
!11863 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !11861, file: !145, line: 35, baseType: !215, size: 32)
!11864 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !11861, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!11865 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !11861, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!11866 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !11861, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!11867 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !11786, file: !145, line: 274, baseType: !11785, size: 32, offset: 896)
!11868 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11786, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!11869 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11786, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!11870 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11786, file: !145, line: 300, baseType: !11871, size: 96, offset: 1216)
!11871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !11872)
!11872 = !{!11873, !11874, !11875}
!11873 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11871, file: !145, line: 153, baseType: !22, size: 32)
!11874 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11871, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!11875 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11871, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!11876 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11786, file: !145, line: 325, baseType: !11877, size: 32, offset: 1312)
!11877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11878, size: 32)
!11878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !11879)
!11879 = !{!11880, !11886, !11887}
!11880 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11878, file: !119, line: 5074, baseType: !11881, size: 96)
!11881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !11882)
!11882 = !{!11883, !11884, !11885}
!11883 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11881, file: !244, line: 57, baseType: !247, size: 32)
!11884 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11881, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!11885 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11881, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!11886 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11878, file: !119, line: 5075, baseType: !11817, size: 64, offset: 96)
!11887 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11878, file: !119, line: 5076, baseType: !11888, size: 32, offset: 160)
!11888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !11889)
!11889 = !{!11890}
!11890 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !11888, file: !254, line: 52, baseType: !22, size: 32)
!11891 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11786, file: !145, line: 343, baseType: !11892, size: 64, offset: 1344)
!11892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !11893)
!11893 = !{!11894, !11895}
!11894 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11892, file: !198, line: 63, baseType: !110, size: 32)
!11895 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11892, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!11896 = !{!11897, !11898, !11899}
!11897 = !DILocalVariable(name: "reason", arg: 1, scope: !11738, file: !3053, line: 209, type: !32)
!11898 = !DILocalVariable(name: "esf", arg: 2, scope: !11738, file: !3053, line: 209, type: !11741)
!11899 = !DILocalVariable(name: "thread", arg: 3, scope: !11738, file: !3053, line: 210, type: !11785)
!11900 = !DILocation(line: 0, scope: !11738)
!11901 = !DILocation(line: 212, column: 1, scope: !11738)
!11902 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3053, file: !3053, line: 214, type: !11903, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !11905)
!11903 = !DISubroutineType(types: !11904)
!11904 = !{null, !22, !22}
!11905 = !{!11906, !11907}
!11906 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11902, file: !3053, line: 214, type: !22)
!11907 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11902, file: !3053, line: 214, type: !22)
!11908 = !DILocation(line: 0, scope: !11902)
!11909 = !DILocation(line: 216, column: 1, scope: !11902)
!11910 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3053, file: !3053, line: 218, type: !11911, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !11913)
!11911 = !DISubroutineType(types: !11912)
!11912 = !{null, !1821, !235}
!11913 = !{!11914, !11915}
!11914 = !DILocalVariable(name: "buf", arg: 1, scope: !11910, file: !3053, line: 218, type: !1821)
!11915 = !DILocalVariable(name: "buflen", arg: 2, scope: !11910, file: !3053, line: 218, type: !235)
!11916 = !DILocation(line: 0, scope: !11910)
!11917 = !DILocation(line: 220, column: 1, scope: !11910)
!11918 = distinct !DISubprogram(name: "coredump_query", scope: !3053, file: !3053, line: 222, type: !11919, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !11921)
!11919 = !DISubroutineType(types: !11920)
!11920 = !{!109, !3052, !108}
!11921 = !{!11922, !11923}
!11922 = !DILocalVariable(name: "query_id", arg: 1, scope: !11918, file: !3053, line: 222, type: !3052)
!11923 = !DILocalVariable(name: "arg", arg: 2, scope: !11918, file: !3053, line: 222, type: !108)
!11924 = !DILocation(line: 0, scope: !11918)
!11925 = !DILocation(line: 224, column: 2, scope: !11918)
!11926 = distinct !DISubprogram(name: "coredump_cmd", scope: !3053, file: !3053, line: 227, type: !11927, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !11929)
!11927 = !DISubroutineType(types: !11928)
!11928 = !{!109, !3059, !108}
!11929 = !{!11930, !11931}
!11930 = !DILocalVariable(name: "query_id", arg: 1, scope: !11926, file: !3053, line: 227, type: !3059)
!11931 = !DILocalVariable(name: "arg", arg: 2, scope: !11926, file: !3053, line: 227, type: !108)
!11932 = !DILocation(line: 0, scope: !11926)
!11933 = !DILocation(line: 229, column: 2, scope: !11926)
!11934 = distinct !DISubprogram(name: "arch_system_halt", scope: !11935, file: !11935, line: 23, type: !5981, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !11936)
!11935 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11936 = !{!11937}
!11937 = !DILocalVariable(name: "reason", arg: 1, scope: !11934, file: !11935, line: 23, type: !32)
!11938 = !DILocation(line: 0, scope: !11934)
!11939 = !DILocation(line: 55, column: 2, scope: !11940, inlinedAt: !11944)
!11940 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5970, file: !5970, line: 42, type: !5971, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !11941)
!11941 = !{!11942, !11943}
!11942 = !DILocalVariable(name: "key", scope: !11940, file: !5970, line: 44, type: !32)
!11943 = !DILocalVariable(name: "tmp", scope: !11940, file: !5970, line: 53, type: !32)
!11944 = distinct !DILocation(line: 31, column: 8, scope: !11934)
!11945 = !{i64 1952191}
!11946 = !DILocation(line: 0, scope: !11940, inlinedAt: !11944)
!11947 = !DILocation(line: 32, column: 2, scope: !11934)
!11948 = !DILocation(line: 32, column: 2, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11950, file: !11935, line: 32, column: 2)
!11950 = distinct !DILexicalBlock(scope: !11934, file: !11935, line: 32, column: 2)
!11951 = distinct !{!11951, !11952, !11953}
!11952 = !DILocation(line: 32, column: 2, scope: !11950)
!11953 = !DILocation(line: 34, column: 2, scope: !11950)
!11954 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11935, file: !11935, line: 39, type: !11955, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !11957)
!11955 = !DISubroutineType(types: !11956)
!11956 = !{null, !32, !11741}
!11957 = !{!11958, !11959}
!11958 = !DILocalVariable(name: "reason", arg: 1, scope: !11954, file: !11935, line: 39, type: !32)
!11959 = !DILocalVariable(name: "esf", arg: 2, scope: !11954, file: !11935, line: 40, type: !11741)
!11960 = !DILocation(line: 0, scope: !11954)
!11961 = !DILocation(line: 46, column: 2, scope: !11954)
!11962 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11935, file: !11935, line: 81, type: !5981, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !11963)
!11963 = !{!11964}
!11964 = !DILocalVariable(name: "reason", arg: 1, scope: !11962, file: !11935, line: 81, type: !32)
!11965 = !DILocation(line: 0, scope: !11962)
!11966 = !DILocation(line: 83, column: 2, scope: !11962)
!11967 = distinct !DISubprogram(name: "z_fatal_error", scope: !11935, file: !11935, line: 96, type: !11955, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !11968)
!11968 = !{!11969, !11970, !11971, !11972}
!11969 = !DILocalVariable(name: "reason", arg: 1, scope: !11967, file: !11935, line: 96, type: !32)
!11970 = !DILocalVariable(name: "esf", arg: 2, scope: !11967, file: !11935, line: 96, type: !11741)
!11971 = !DILocalVariable(name: "key", scope: !11967, file: !11935, line: 102, type: !32)
!11972 = !DILocalVariable(name: "thread", scope: !11967, file: !11935, line: 103, type: !11785)
!11973 = !DILocation(line: 0, scope: !11967)
!11974 = !DILocation(line: 55, column: 2, scope: !11940, inlinedAt: !11975)
!11975 = distinct !DILocation(line: 102, column: 21, scope: !11967)
!11976 = !DILocation(line: 0, scope: !11940, inlinedAt: !11975)
!11977 = !DILocation(line: 131, column: 2, scope: !11967)
!11978 = !DILocation(line: 147, column: 3, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11980, file: !11935, line: 147, column: 3)
!11980 = distinct !DILexicalBlock(scope: !11981, file: !11935, line: 147, column: 3)
!11981 = distinct !DILexicalBlock(scope: !11982, file: !11935, line: 146, column: 32)
!11982 = distinct !DILexicalBlock(scope: !11967, file: !11935, line: 146, column: 6)
!11983 = !DILocation(line: 147, column: 3, scope: !11980)
!11984 = !DILocation(line: 147, column: 3, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11979, file: !11935, line: 147, column: 3)
!11986 = !DILocation(line: 104, column: 4, scope: !11967)
!11987 = !DILocalVariable(name: "key", arg: 1, scope: !11988, file: !5970, line: 84, type: !32)
!11988 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5970, file: !5970, line: 84, type: !5981, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !11989)
!11989 = !{!11987}
!11990 = !DILocation(line: 0, scope: !11988, inlinedAt: !11991)
!11991 = distinct !DILocation(line: 186, column: 2, scope: !11967)
!11992 = !DILocation(line: 95, column: 2, scope: !11988, inlinedAt: !11991)
!11993 = !{i64 1953008}
!11994 = !DILocation(line: 189, column: 3, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11996, file: !11935, line: 188, column: 41)
!11996 = distinct !DILexicalBlock(scope: !11967, file: !11935, line: 188, column: 6)
!11997 = !DILocation(line: 191, column: 1, scope: !11967)
!11998 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !11999, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !1998)
!11999 = !DISubroutineType(types: !12000)
!12000 = !{!12001}
!12001 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !11785)
!12002 = !DILocation(line: 535, column: 9, scope: !11998)
!12003 = !DILocation(line: 535, column: 2, scope: !11998)
!12004 = distinct !DISubprogram(name: "k_thread_abort", scope: !3271, file: !3271, line: 188, type: !12005, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12007)
!12005 = !DISubroutineType(types: !12006)
!12006 = !{null, !12001}
!12007 = !{!12008}
!12008 = !DILocalVariable(name: "thread", arg: 1, scope: !12004, file: !3271, line: 188, type: !12001)
!12009 = !DILocation(line: 0, scope: !12004)
!12010 = !DILocation(line: 197, column: 2, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12004, file: !3271, line: 197, column: 2)
!12012 = !{i64 2154071824}
!12013 = !DILocation(line: 198, column: 2, scope: !12004)
!12014 = !DILocation(line: 199, column: 1, scope: !12004)
!12015 = distinct !DISubprogram(name: "z_current_get", scope: !3271, file: !3271, line: 173, type: !11999, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !1998)
!12016 = !DILocation(line: 180, column: 2, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12015, file: !3271, line: 180, column: 2)
!12018 = !{i64 2154071756}
!12019 = !DILocation(line: 181, column: 9, scope: !12015)
!12020 = !DILocation(line: 181, column: 2, scope: !12015)
!12021 = distinct !DISubprogram(name: "z_early_memset", scope: !1788, file: !1788, line: 108, type: !12022, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12024)
!12022 = !DISubroutineType(types: !12023)
!12023 = !{null, !108, !109, !235}
!12024 = !{!12025, !12026, !12027}
!12025 = !DILocalVariable(name: "dst", arg: 1, scope: !12021, file: !1788, line: 108, type: !108)
!12026 = !DILocalVariable(name: "c", arg: 2, scope: !12021, file: !1788, line: 108, type: !109)
!12027 = !DILocalVariable(name: "n", arg: 3, scope: !12021, file: !1788, line: 108, type: !235)
!12028 = !DILocation(line: 0, scope: !12021)
!12029 = !DILocation(line: 110, column: 9, scope: !12021)
!12030 = !DILocation(line: 111, column: 1, scope: !12021)
!12031 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1788, file: !1788, line: 121, type: !12032, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12034)
!12032 = !DISubroutineType(types: !12033)
!12033 = !{null, !108, !13, !235}
!12034 = !{!12035, !12036, !12037}
!12035 = !DILocalVariable(name: "dst", arg: 1, scope: !12031, file: !1788, line: 121, type: !108)
!12036 = !DILocalVariable(name: "src", arg: 2, scope: !12031, file: !1788, line: 121, type: !13)
!12037 = !DILocalVariable(name: "n", arg: 3, scope: !12031, file: !1788, line: 121, type: !235)
!12038 = !DILocation(line: 0, scope: !12031)
!12039 = !DILocation(line: 123, column: 9, scope: !12031)
!12040 = !DILocation(line: 124, column: 1, scope: !12031)
!12041 = distinct !DISubprogram(name: "z_bss_zero", scope: !1788, file: !1788, line: 132, type: !3086, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !1998)
!12042 = !DILocation(line: 143, column: 2, scope: !12041)
!12043 = !DILocation(line: 168, column: 1, scope: !12041)
!12044 = distinct !DISubprogram(name: "z_init_cpu", scope: !1788, file: !1788, line: 372, type: !3414, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12045)
!12045 = !{!12046}
!12046 = !DILocalVariable(name: "id", arg: 1, scope: !12044, file: !1788, line: 372, type: !109)
!12047 = !DILocation(line: 0, scope: !12044)
!12048 = !DILocation(line: 374, column: 2, scope: !12044)
!12049 = !DILocation(line: 375, column: 34, scope: !12044)
!12050 = !DILocation(line: 375, column: 19, scope: !12044)
!12051 = !DILocation(line: 375, column: 31, scope: !12044)
!12052 = !DILocation(line: 376, column: 24, scope: !12044)
!12053 = !DILocation(line: 376, column: 19, scope: !12044)
!12054 = !DILocation(line: 376, column: 22, scope: !12044)
!12055 = !DILocation(line: 378, column: 26, scope: !12044)
!12056 = !DILocation(line: 378, column: 4, scope: !12044)
!12057 = !DILocation(line: 378, column: 50, scope: !12044)
!12058 = !DILocation(line: 377, column: 19, scope: !12044)
!12059 = !DILocation(line: 377, column: 29, scope: !12044)
!12060 = !DILocation(line: 384, column: 1, scope: !12044)
!12061 = distinct !DISubprogram(name: "init_idle_thread", scope: !1788, file: !1788, line: 343, type: !3414, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12062)
!12062 = !{!12063, !12064, !12065, !12068}
!12063 = !DILocalVariable(name: "i", arg: 1, scope: !12061, file: !1788, line: 343, type: !109)
!12064 = !DILocalVariable(name: "thread", scope: !12061, file: !1788, line: 345, type: !1881)
!12065 = !DILocalVariable(name: "stack", scope: !12061, file: !1788, line: 346, type: !12066)
!12066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12067, size: 32)
!12067 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !2022)
!12068 = !DILocalVariable(name: "tname", scope: !12061, file: !1788, line: 354, type: !1127)
!12069 = !DILocation(line: 0, scope: !12061)
!12070 = !DILocation(line: 345, column: 29, scope: !12061)
!12071 = !DILocation(line: 346, column: 28, scope: !12061)
!12072 = !DILocation(line: 362, column: 37, scope: !12061)
!12073 = !DILocation(line: 362, column: 36, scope: !12061)
!12074 = !DILocation(line: 361, column: 2, scope: !12061)
!12075 = !DILocation(line: 365, column: 2, scope: !12061)
!12076 = !DILocation(line: 370, column: 1, scope: !12061)
!12077 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !273, file: !273, line: 331, type: !12078, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12080)
!12078 = !DISubroutineType(types: !12079)
!12079 = !{!1127, !12066}
!12080 = !{!12081}
!12081 = !DILocalVariable(name: "sym", arg: 1, scope: !12077, file: !273, line: 331, type: !12066)
!12082 = !DILocation(line: 0, scope: !12077)
!12083 = !DILocation(line: 333, column: 21, scope: !12077)
!12084 = !DILocation(line: 333, column: 2, scope: !12077)
!12085 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12086, file: !12086, line: 155, type: !12087, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12089)
!12086 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12087 = !DISubroutineType(types: !12088)
!12088 = !{null, !1881}
!12089 = !{!12090}
!12090 = !DILocalVariable(name: "thread", arg: 1, scope: !12085, file: !12086, line: 155, type: !1881)
!12091 = !DILocation(line: 0, scope: !12085)
!12092 = !DILocation(line: 157, column: 15, scope: !12085)
!12093 = !DILocation(line: 157, column: 28, scope: !12085)
!12094 = !DILocation(line: 158, column: 1, scope: !12085)
!12095 = distinct !DISubprogram(name: "z_cstart", scope: !1788, file: !1788, line: 501, type: !3086, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12096)
!12096 = !{!12097}
!12097 = !DILocalVariable(name: "dummy_thread", scope: !12095, file: !1788, line: 518, type: !1882)
!12098 = !DILocation(line: 507, column: 2, scope: !12095)
!12099 = !DILocation(line: 43, column: 14, scope: !12100, inlinedAt: !12104)
!12100 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12101, file: !12101, line: 40, type: !3086, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12102)
!12101 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12102 = !{!12103}
!12103 = !DILocalVariable(name: "msp", scope: !12100, file: !12101, line: 42, type: !110)
!12104 = distinct !DILocation(line: 44, column: 2, scope: !12105, inlinedAt: !12107)
!12105 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12106, file: !12106, line: 42, type: !3086, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !1998)
!12106 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12107 = distinct !DILocation(line: 510, column: 2, scope: !12095)
!12108 = !DILocation(line: 43, column: 3, scope: !12100, inlinedAt: !12104)
!12109 = !DILocation(line: 43, column: 60, scope: !12100, inlinedAt: !12104)
!12110 = !DILocation(line: 0, scope: !12100, inlinedAt: !12104)
!12111 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12112, file: !6144, line: 1153, type: !110)
!12112 = distinct !DISubprogram(name: "__set_MSP", scope: !6144, file: !6144, line: 1153, type: !6239, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12113)
!12113 = !{!12111}
!12114 = !DILocation(line: 0, scope: !12112, inlinedAt: !12115)
!12115 = distinct !DILocation(line: 46, column: 2, scope: !12100, inlinedAt: !12104)
!12116 = !DILocation(line: 1155, column: 3, scope: !12112, inlinedAt: !12115)
!12117 = !{i64 2849519}
!12118 = !DILocation(line: 62, column: 11, scope: !12100, inlinedAt: !12104)
!12119 = !DILocation(line: 102, column: 2, scope: !12120, inlinedAt: !12121)
!12120 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6985, file: !6985, line: 97, type: !3086, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !1998)
!12121 = distinct !DILocation(line: 45, column: 2, scope: !12105, inlinedAt: !12107)
!12122 = !DILocation(line: 108, column: 2, scope: !12120, inlinedAt: !12121)
!12123 = !DILocation(line: 112, column: 2, scope: !12120, inlinedAt: !12121)
!12124 = !DILocation(line: 113, column: 2, scope: !12120, inlinedAt: !12121)
!12125 = !DILocation(line: 114, column: 2, scope: !12120, inlinedAt: !12121)
!12126 = !DILocation(line: 116, column: 2, scope: !12120, inlinedAt: !12121)
!12127 = !DILocation(line: 123, column: 13, scope: !12120, inlinedAt: !12121)
!12128 = !DILocation(line: 46, column: 2, scope: !12105, inlinedAt: !12107)
!12129 = !DILocation(line: 47, column: 2, scope: !12105, inlinedAt: !12107)
!12130 = !DILocation(line: 174, column: 12, scope: !12131, inlinedAt: !12132)
!12131 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6985, file: !6985, line: 169, type: !3086, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !1998)
!12132 = distinct !DILocation(line: 48, column: 2, scope: !12105, inlinedAt: !12107)
!12133 = !DILocation(line: 179, column: 12, scope: !12131, inlinedAt: !12132)
!12134 = !DILocation(line: 50, column: 2, scope: !12105, inlinedAt: !12107)
!12135 = !DILocation(line: 57, column: 2, scope: !12105, inlinedAt: !12107)
!12136 = !DILocation(line: 518, column: 2, scope: !12095)
!12137 = !DILocation(line: 518, column: 18, scope: !12095)
!12138 = !DILocation(line: 520, column: 2, scope: !12095)
!12139 = !DILocation(line: 523, column: 2, scope: !12095)
!12140 = !DILocation(line: 526, column: 2, scope: !12095)
!12141 = !DILocation(line: 527, column: 2, scope: !12095)
!12142 = !DILocation(line: 543, column: 24, scope: !12095)
!12143 = !DILocation(line: 543, column: 2, scope: !12095)
!12144 = !DILocation(line: 0, scope: !2041)
!12145 = !DILocation(line: 246, column: 15, scope: !2059)
!12146 = !DILocation(line: 246, column: 36, scope: !2058)
!12147 = !DILocation(line: 246, column: 2, scope: !2059)
!12148 = !DILocation(line: 247, column: 37, scope: !2057)
!12149 = !DILocation(line: 0, scope: !2057)
!12150 = !DILocation(line: 248, column: 19, scope: !2057)
!12151 = !DILocation(line: 248, column: 12, scope: !2057)
!12152 = !DILocation(line: 250, column: 11, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !2057, file: !1788, line: 250, column: 7)
!12154 = !DILocation(line: 250, column: 7, scope: !2057)
!12155 = !DILocation(line: 254, column: 11, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12157, file: !1788, line: 254, column: 8)
!12157 = distinct !DILexicalBlock(scope: !12153, file: !1788, line: 250, column: 20)
!12158 = !DILocation(line: 254, column: 8, scope: !12157)
!12159 = !DILocation(line: 255, column: 9, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12156, file: !1788, line: 254, column: 17)
!12161 = !DILocation(line: 258, column: 9, scope: !12160)
!12162 = !DILocation(line: 261, column: 28, scope: !12160)
!12163 = !DILocation(line: 261, column: 10, scope: !12160)
!12164 = !DILocation(line: 261, column: 17, scope: !12160)
!12165 = !DILocation(line: 261, column: 26, scope: !12160)
!12166 = !DILocation(line: 262, column: 4, scope: !12160)
!12167 = !DILocation(line: 263, column: 9, scope: !12157)
!12168 = !DILocation(line: 263, column: 16, scope: !12157)
!12169 = !DILocation(line: 263, column: 28, scope: !12157)
!12170 = !DILocation(line: 264, column: 3, scope: !12157)
!12171 = !DILocation(line: 246, column: 60, scope: !2058)
!12172 = distinct !{!12172, !12147, !12173}
!12173 = !DILocation(line: 265, column: 2, scope: !2059)
!12174 = !DILocation(line: 266, column: 1, scope: !2041)
!12175 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6184, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12176)
!12176 = !{!12177, !12178}
!12177 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12175, file: !536, line: 1814, type: !762)
!12178 = !DILocalVariable(name: "priority", arg: 2, scope: !12175, file: !536, line: 1814, type: !110)
!12179 = !DILocation(line: 0, scope: !12175)
!12180 = !DILocation(line: 1822, column: 48, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12182, file: !536, line: 1821, column: 3)
!12182 = distinct !DILexicalBlock(scope: !12175, file: !536, line: 1816, column: 7)
!12183 = !DILocation(line: 1822, column: 32, scope: !12181)
!12184 = !DILocation(line: 1822, column: 40, scope: !12181)
!12185 = !DILocation(line: 1822, column: 5, scope: !12181)
!12186 = !DILocation(line: 1822, column: 46, scope: !12181)
!12187 = !DILocation(line: 1824, column: 1, scope: !12175)
!12188 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12106, file: !12106, line: 32, type: !3086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1998)
!12189 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12190, file: !12190, line: 215, type: !12087, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12191)
!12190 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12191 = !{!12192}
!12192 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12189, file: !12190, line: 215, type: !1881)
!12193 = !DILocation(line: 0, scope: !12189)
!12194 = !DILocation(line: 217, column: 21, scope: !12189)
!12195 = !DILocation(line: 217, column: 34, scope: !12189)
!12196 = !DILocation(line: 221, column: 21, scope: !12189)
!12197 = !DILocation(line: 221, column: 34, scope: !12189)
!12198 = !DILocation(line: 223, column: 27, scope: !12189)
!12199 = !DILocation(line: 223, column: 33, scope: !12189)
!12200 = !DILocation(line: 224, column: 27, scope: !12189)
!12201 = !DILocation(line: 224, column: 32, scope: !12189)
!12202 = !DILocation(line: 232, column: 16, scope: !12189)
!12203 = !DILocation(line: 232, column: 30, scope: !12189)
!12204 = !DILocation(line: 239, column: 24, scope: !12189)
!12205 = !DILocation(line: 240, column: 1, scope: !12189)
!12206 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1788, file: !1788, line: 399, type: !12207, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12209)
!12207 = !DISubroutineType(types: !12208)
!12208 = !{!1127}
!12209 = !{!12210}
!12210 = !DILocalVariable(name: "stack_ptr", scope: !12206, file: !1788, line: 401, type: !1127)
!12211 = !DILocation(line: 404, column: 2, scope: !12206)
!12212 = !DILocation(line: 416, column: 24, scope: !12206)
!12213 = !DILocation(line: 418, column: 14, scope: !12206)
!12214 = !DILocation(line: 0, scope: !12206)
!12215 = !DILocation(line: 423, column: 2, scope: !12206)
!12216 = !DILocation(line: 424, column: 2, scope: !12206)
!12217 = !DILocation(line: 426, column: 2, scope: !12206)
!12218 = !DILocation(line: 428, column: 2, scope: !12206)
!12219 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1788, file: !1788, line: 432, type: !12220, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12222)
!12220 = !DISubroutineType(types: !12221)
!12221 = !{null, !1127}
!12222 = !{!12223}
!12223 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12219, file: !1788, line: 432, type: !1127)
!12224 = !DILocation(line: 0, scope: !12219)
!12225 = !DILocation(line: 435, column: 2, scope: !12219)
!12226 = !DILocation(line: 445, column: 2, scope: !12219)
!12227 = distinct !DISubprogram(name: "bg_thread_main", scope: !1788, file: !1788, line: 277, type: !218, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !12228)
!12228 = !{!12229, !12230, !12231}
!12229 = !DILocalVariable(name: "unused1", arg: 1, scope: !12227, file: !1788, line: 277, type: !108)
!12230 = !DILocalVariable(name: "unused2", arg: 2, scope: !12227, file: !1788, line: 277, type: !108)
!12231 = !DILocalVariable(name: "unused3", arg: 3, scope: !12227, file: !1788, line: 277, type: !108)
!12232 = !DILocation(line: 0, scope: !12227)
!12233 = !DILocation(line: 291, column: 20, scope: !12227)
!12234 = !DILocation(line: 293, column: 2, scope: !12227)
!12235 = !DILocation(line: 297, column: 2, scope: !12227)
!12236 = !DILocation(line: 305, column: 2, scope: !12227)
!12237 = !DILocation(line: 307, column: 2, scope: !12227)
!12238 = !DILocation(line: 330, column: 8, scope: !12227)
!12239 = !DILocation(line: 333, column: 34, scope: !12227)
!12240 = !DILocation(line: 339, column: 1, scope: !12227)
!12241 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2088, file: !2088, line: 45, type: !12242, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12250)
!12242 = !DISubroutineType(types: !12243)
!12243 = !{null, !12244, !108}
!12244 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !119, line: 103, baseType: !12245)
!12245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12246, size: 32)
!12246 = !DISubroutineType(types: !12247)
!12247 = !{null, !12248, !108}
!12248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12249, size: 32)
!12249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2093)
!12250 = !{!12251, !12252, !12253, !12254}
!12251 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12241, file: !2088, line: 45, type: !12244)
!12252 = !DILocalVariable(name: "user_data", arg: 2, scope: !12241, file: !2088, line: 45, type: !108)
!12253 = !DILocalVariable(name: "thread", scope: !12241, file: !2088, line: 48, type: !2092)
!12254 = !DILocalVariable(name: "key", scope: !12241, file: !2088, line: 49, type: !12255)
!12255 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !12256)
!12256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !12257)
!12257 = !{!12258}
!12258 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12256, file: !254, line: 33, baseType: !109, size: 32)
!12259 = !DILocation(line: 0, scope: !12241)
!12260 = !DILocation(line: 51, column: 2, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12262, file: !2088, line: 51, column: 2)
!12262 = distinct !DILexicalBlock(scope: !12241, file: !2088, line: 51, column: 2)
!12263 = !DILocation(line: 51, column: 2, scope: !12262)
!12264 = !DILocation(line: 51, column: 2, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12261, file: !2088, line: 51, column: 2)
!12266 = !DILocalVariable(name: "l", arg: 1, scope: !12267, file: !254, line: 136, type: !12270)
!12267 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !12268, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12271)
!12268 = !DISubroutineType(types: !12269)
!12269 = !{!12255, !12270}
!12270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 32)
!12271 = !{!12266, !12272}
!12272 = !DILocalVariable(name: "k", scope: !12267, file: !254, line: 139, type: !12255)
!12273 = !DILocation(line: 0, scope: !12267, inlinedAt: !12274)
!12274 = distinct !DILocation(line: 59, column: 8, scope: !12241)
!12275 = !DILocation(line: 55, column: 2, scope: !12276, inlinedAt: !12280)
!12276 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5970, file: !5970, line: 42, type: !5971, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12277)
!12277 = !{!12278, !12279}
!12278 = !DILocalVariable(name: "key", scope: !12276, file: !5970, line: 44, type: !32)
!12279 = !DILocalVariable(name: "tmp", scope: !12276, file: !5970, line: 53, type: !32)
!12280 = distinct !DILocation(line: 145, column: 10, scope: !12267, inlinedAt: !12274)
!12281 = !{i64 1977347}
!12282 = !DILocation(line: 0, scope: !12276, inlinedAt: !12280)
!12283 = !DILocation(line: 148, column: 2, scope: !12284, inlinedAt: !12274)
!12284 = distinct !DILexicalBlock(scope: !12285, file: !254, line: 148, column: 2)
!12285 = distinct !DILexicalBlock(scope: !12267, file: !254, line: 148, column: 2)
!12286 = !DILocation(line: 148, column: 2, scope: !12285, inlinedAt: !12274)
!12287 = !DILocation(line: 148, column: 2, scope: !12288, inlinedAt: !12274)
!12288 = distinct !DILexicalBlock(scope: !12284, file: !254, line: 148, column: 2)
!12289 = !DILocation(line: 160, column: 2, scope: !12267, inlinedAt: !12274)
!12290 = !DILocation(line: 0, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12241, file: !2088, line: 63, column: 2)
!12292 = !DILocation(line: 63, column: 2, scope: !12291)
!12293 = !DILocation(line: 64, column: 3, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12295, file: !2088, line: 63, column: 71)
!12295 = distinct !DILexicalBlock(scope: !12291, file: !2088, line: 63, column: 2)
!12296 = !DILocation(line: 63, column: 58, scope: !12295)
!12297 = distinct !{!12297, !12292, !12298}
!12298 = !DILocation(line: 65, column: 2, scope: !12291)
!12299 = !DILocalVariable(name: "key", arg: 2, scope: !12300, file: !254, line: 190, type: !12255)
!12300 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !12301, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12303)
!12301 = !DISubroutineType(types: !12302)
!12302 = !{null, !12270, !12255}
!12303 = !{!12304, !12299}
!12304 = !DILocalVariable(name: "l", arg: 1, scope: !12300, file: !254, line: 189, type: !12270)
!12305 = !DILocation(line: 0, scope: !12300, inlinedAt: !12306)
!12306 = distinct !DILocation(line: 69, column: 2, scope: !12241)
!12307 = !DILocation(line: 194, column: 2, scope: !12308, inlinedAt: !12306)
!12308 = distinct !DILexicalBlock(scope: !12309, file: !254, line: 194, column: 2)
!12309 = distinct !DILexicalBlock(scope: !12300, file: !254, line: 194, column: 2)
!12310 = !DILocation(line: 194, column: 2, scope: !12309, inlinedAt: !12306)
!12311 = !DILocation(line: 194, column: 2, scope: !12312, inlinedAt: !12306)
!12312 = distinct !DILexicalBlock(scope: !12308, file: !254, line: 194, column: 2)
!12313 = !DILocalVariable(name: "key", arg: 1, scope: !12314, file: !5970, line: 84, type: !32)
!12314 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5970, file: !5970, line: 84, type: !5981, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12315)
!12315 = !{!12313}
!12316 = !DILocation(line: 0, scope: !12314, inlinedAt: !12317)
!12317 = distinct !DILocation(line: 215, column: 2, scope: !12300, inlinedAt: !12306)
!12318 = !DILocation(line: 95, column: 2, scope: !12314, inlinedAt: !12317)
!12319 = !{i64 1978164}
!12320 = !DILocation(line: 71, column: 1, scope: !12241)
!12321 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2088, file: !2088, line: 853, type: !12322, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12324)
!12322 = !DISubroutineType(types: !12323)
!12323 = !{!334, !12270}
!12324 = !{!12325, !12326}
!12325 = !DILocalVariable(name: "l", arg: 1, scope: !12321, file: !2088, line: 853, type: !12270)
!12326 = !DILocalVariable(name: "thread_cpu", scope: !12321, file: !2088, line: 855, type: !22)
!12327 = !DILocation(line: 0, scope: !12321)
!12328 = !DILocation(line: 855, column: 28, scope: !12321)
!12329 = !DILocation(line: 857, column: 17, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12321, file: !2088, line: 857, column: 6)
!12331 = !DILocation(line: 857, column: 6, scope: !12321)
!12332 = !DILocation(line: 858, column: 19, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !2088, line: 858, column: 7)
!12334 = distinct !DILexicalBlock(scope: !12330, file: !2088, line: 857, column: 24)
!12335 = !DILocation(line: 858, column: 42, scope: !12333)
!12336 = !DILocation(line: 858, column: 28, scope: !12333)
!12337 = !DILocation(line: 858, column: 25, scope: !12333)
!12338 = !DILocation(line: 858, column: 7, scope: !12334)
!12339 = !DILocation(line: 862, column: 2, scope: !12321)
!12340 = !DILocation(line: 863, column: 1, scope: !12321)
!12341 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2088, file: !2088, line: 874, type: !12342, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12344)
!12342 = !DISubroutineType(types: !12343)
!12343 = !{null, !12270}
!12344 = !{!12345}
!12345 = !DILocalVariable(name: "l", arg: 1, scope: !12341, file: !2088, line: 874, type: !12270)
!12346 = !DILocation(line: 0, scope: !12341)
!12347 = !DILocation(line: 876, column: 32, scope: !12341)
!12348 = !DILocation(line: 876, column: 18, scope: !12341)
!12349 = !DILocation(line: 876, column: 48, scope: !12341)
!12350 = !DILocation(line: 876, column: 37, scope: !12341)
!12351 = !DILocation(line: 876, column: 35, scope: !12341)
!12352 = !DILocation(line: 876, column: 5, scope: !12341)
!12353 = !DILocation(line: 876, column: 16, scope: !12341)
!12354 = !DILocation(line: 877, column: 1, scope: !12341)
!12355 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2088, file: !2088, line: 865, type: !12322, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12356)
!12356 = !{!12357}
!12357 = !DILocalVariable(name: "l", arg: 1, scope: !12355, file: !2088, line: 865, type: !12270)
!12358 = !DILocation(line: 0, scope: !12355)
!12359 = !DILocation(line: 867, column: 9, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12355, file: !2088, line: 867, column: 6)
!12361 = !DILocation(line: 867, column: 38, scope: !12360)
!12362 = !DILocation(line: 867, column: 24, scope: !12360)
!12363 = !DILocation(line: 867, column: 54, scope: !12360)
!12364 = !DILocation(line: 867, column: 43, scope: !12360)
!12365 = !DILocation(line: 867, column: 41, scope: !12360)
!12366 = !DILocation(line: 867, column: 20, scope: !12360)
!12367 = !DILocation(line: 867, column: 6, scope: !12355)
!12368 = !DILocation(line: 870, column: 16, scope: !12355)
!12369 = !DILocation(line: 871, column: 2, scope: !12355)
!12370 = !DILocation(line: 872, column: 1, scope: !12355)
!12371 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2088, file: !2088, line: 73, type: !12242, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12372)
!12372 = !{!12373, !12374, !12375, !12376}
!12373 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12371, file: !2088, line: 73, type: !12244)
!12374 = !DILocalVariable(name: "user_data", arg: 2, scope: !12371, file: !2088, line: 73, type: !108)
!12375 = !DILocalVariable(name: "thread", scope: !12371, file: !2088, line: 76, type: !2092)
!12376 = !DILocalVariable(name: "key", scope: !12371, file: !2088, line: 77, type: !12255)
!12377 = !DILocation(line: 0, scope: !12371)
!12378 = !DILocation(line: 79, column: 2, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12380, file: !2088, line: 79, column: 2)
!12380 = distinct !DILexicalBlock(scope: !12371, file: !2088, line: 79, column: 2)
!12381 = !DILocation(line: 79, column: 2, scope: !12380)
!12382 = !DILocation(line: 79, column: 2, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12379, file: !2088, line: 79, column: 2)
!12384 = !DILocation(line: 0, scope: !12267, inlinedAt: !12385)
!12385 = distinct !DILocation(line: 81, column: 8, scope: !12371)
!12386 = !DILocation(line: 55, column: 2, scope: !12276, inlinedAt: !12387)
!12387 = distinct !DILocation(line: 145, column: 10, scope: !12267, inlinedAt: !12385)
!12388 = !DILocation(line: 0, scope: !12276, inlinedAt: !12387)
!12389 = !DILocation(line: 148, column: 2, scope: !12284, inlinedAt: !12385)
!12390 = !DILocation(line: 148, column: 2, scope: !12285, inlinedAt: !12385)
!12391 = !DILocation(line: 148, column: 2, scope: !12288, inlinedAt: !12385)
!12392 = !DILocation(line: 160, column: 2, scope: !12267, inlinedAt: !12385)
!12393 = !DILocation(line: 0, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12371, file: !2088, line: 85, column: 2)
!12395 = !DILocation(line: 85, column: 2, scope: !12394)
!12396 = !DILocation(line: 0, scope: !12300, inlinedAt: !12397)
!12397 = distinct !DILocation(line: 86, column: 3, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12399, file: !2088, line: 85, column: 71)
!12399 = distinct !DILexicalBlock(scope: !12394, file: !2088, line: 85, column: 2)
!12400 = !DILocation(line: 194, column: 2, scope: !12308, inlinedAt: !12397)
!12401 = !DILocation(line: 194, column: 2, scope: !12309, inlinedAt: !12397)
!12402 = !DILocation(line: 194, column: 2, scope: !12312, inlinedAt: !12397)
!12403 = !DILocation(line: 0, scope: !12314, inlinedAt: !12404)
!12404 = distinct !DILocation(line: 215, column: 2, scope: !12300, inlinedAt: !12397)
!12405 = !DILocation(line: 95, column: 2, scope: !12314, inlinedAt: !12404)
!12406 = !DILocation(line: 87, column: 3, scope: !12398)
!12407 = !DILocation(line: 0, scope: !12267, inlinedAt: !12408)
!12408 = distinct !DILocation(line: 88, column: 9, scope: !12398)
!12409 = !DILocation(line: 55, column: 2, scope: !12276, inlinedAt: !12410)
!12410 = distinct !DILocation(line: 145, column: 10, scope: !12267, inlinedAt: !12408)
!12411 = !DILocation(line: 0, scope: !12276, inlinedAt: !12410)
!12412 = !DILocation(line: 148, column: 2, scope: !12284, inlinedAt: !12408)
!12413 = !DILocation(line: 148, column: 2, scope: !12285, inlinedAt: !12408)
!12414 = !DILocation(line: 148, column: 2, scope: !12288, inlinedAt: !12408)
!12415 = !DILocation(line: 160, column: 2, scope: !12267, inlinedAt: !12408)
!12416 = !DILocation(line: 85, column: 58, scope: !12399)
!12417 = distinct !{!12417, !12395, !12418}
!12418 = !DILocation(line: 89, column: 2, scope: !12394)
!12419 = !DILocation(line: 0, scope: !12300, inlinedAt: !12420)
!12420 = distinct !DILocation(line: 93, column: 2, scope: !12371)
!12421 = !DILocation(line: 194, column: 2, scope: !12308, inlinedAt: !12420)
!12422 = !DILocation(line: 194, column: 2, scope: !12309, inlinedAt: !12420)
!12423 = !DILocation(line: 194, column: 2, scope: !12312, inlinedAt: !12420)
!12424 = !DILocation(line: 0, scope: !12314, inlinedAt: !12425)
!12425 = distinct !DILocation(line: 215, column: 2, scope: !12300, inlinedAt: !12420)
!12426 = !DILocation(line: 95, column: 2, scope: !12314, inlinedAt: !12425)
!12427 = !DILocation(line: 95, column: 1, scope: !12371)
!12428 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2088, file: !2088, line: 97, type: !6986, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !1998)
!12429 = !DILocation(line: 1031, column: 3, scope: !12430, inlinedAt: !12433)
!12430 = distinct !DISubprogram(name: "__get_IPSR", scope: !6144, file: !6144, line: 1027, type: !3368, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12431)
!12431 = !{!12432}
!12432 = !DILocalVariable(name: "result", scope: !12430, file: !6144, line: 1029, type: !110)
!12433 = distinct !DILocation(line: 48, column: 10, scope: !12434, inlinedAt: !12435)
!12434 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6985, file: !6985, line: 46, type: !6986, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !1998)
!12435 = distinct !DILocation(line: 99, column: 9, scope: !12428)
!12436 = !{i64 2855086}
!12437 = !DILocation(line: 0, scope: !12430, inlinedAt: !12433)
!12438 = !DILocation(line: 48, column: 9, scope: !12434, inlinedAt: !12435)
!12439 = !DILocation(line: 99, column: 2, scope: !12428)
!12440 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2088, file: !2088, line: 106, type: !3086, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !1998)
!12441 = !DILocation(line: 108, column: 2, scope: !12440)
!12442 = !DILocation(line: 108, column: 17, scope: !12440)
!12443 = !DILocation(line: 108, column: 30, scope: !12440)
!12444 = !DILocation(line: 109, column: 1, scope: !12440)
!12445 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2088, file: !2088, line: 116, type: !3086, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !1998)
!12446 = !DILocation(line: 118, column: 2, scope: !12445)
!12447 = !DILocation(line: 118, column: 17, scope: !12445)
!12448 = !DILocation(line: 118, column: 30, scope: !12445)
!12449 = !DILocation(line: 119, column: 1, scope: !12445)
!12450 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2088, file: !2088, line: 126, type: !6986, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !1998)
!12451 = !DILocation(line: 128, column: 10, scope: !12450)
!12452 = !DILocation(line: 128, column: 25, scope: !12450)
!12453 = !DILocation(line: 128, column: 38, scope: !12450)
!12454 = !DILocation(line: 128, column: 53, scope: !12450)
!12455 = !DILocation(line: 128, column: 2, scope: !12450)
!12456 = distinct !DISubprogram(name: "z_thread_monitor_exit", scope: !2088, file: !2088, line: 164, type: !12457, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12459)
!12457 = !DISubroutineType(types: !12458)
!12458 = !{null, !2092}
!12459 = !{!12460, !12461, !12462}
!12460 = !DILocalVariable(name: "thread", arg: 1, scope: !12456, file: !2088, line: 164, type: !2092)
!12461 = !DILocalVariable(name: "key", scope: !12456, file: !2088, line: 166, type: !12255)
!12462 = !DILocalVariable(name: "prev_thread", scope: !12463, file: !2088, line: 171, type: !2092)
!12463 = distinct !DILexicalBlock(scope: !12464, file: !2088, line: 170, column: 9)
!12464 = distinct !DILexicalBlock(scope: !12456, file: !2088, line: 168, column: 6)
!12465 = !DILocation(line: 0, scope: !12456)
!12466 = !DILocation(line: 0, scope: !12267, inlinedAt: !12467)
!12467 = distinct !DILocation(line: 166, column: 25, scope: !12456)
!12468 = !DILocation(line: 55, column: 2, scope: !12276, inlinedAt: !12469)
!12469 = distinct !DILocation(line: 145, column: 10, scope: !12267, inlinedAt: !12467)
!12470 = !DILocation(line: 0, scope: !12276, inlinedAt: !12469)
!12471 = !DILocation(line: 148, column: 2, scope: !12284, inlinedAt: !12467)
!12472 = !DILocation(line: 148, column: 2, scope: !12285, inlinedAt: !12467)
!12473 = !DILocation(line: 148, column: 2, scope: !12288, inlinedAt: !12467)
!12474 = !DILocation(line: 160, column: 2, scope: !12267, inlinedAt: !12467)
!12475 = !DILocation(line: 168, column: 24, scope: !12464)
!12476 = !DILocation(line: 168, column: 13, scope: !12464)
!12477 = !DILocation(line: 168, column: 6, scope: !12456)
!12478 = !DILocation(line: 169, column: 38, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12464, file: !2088, line: 168, column: 33)
!12480 = !DILocation(line: 169, column: 19, scope: !12479)
!12481 = !DILocation(line: 170, column: 2, scope: !12479)
!12482 = !DILocation(line: 0, scope: !12463)
!12483 = !DILocation(line: 174, column: 23, scope: !12463)
!12484 = !DILocation(line: 174, column: 32, scope: !12463)
!12485 = !DILocation(line: 175, column: 28, scope: !12463)
!12486 = !DILocation(line: 175, column: 12, scope: !12463)
!12487 = !DILocation(line: 174, column: 3, scope: !12463)
!12488 = distinct !{!12488, !12487, !12489}
!12489 = !DILocation(line: 177, column: 3, scope: !12463)
!12490 = !DILocation(line: 179, column: 39, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12492, file: !2088, line: 178, column: 28)
!12492 = distinct !DILexicalBlock(scope: !12463, file: !2088, line: 178, column: 7)
!12493 = !DILocation(line: 179, column: 29, scope: !12491)
!12494 = !DILocation(line: 180, column: 3, scope: !12491)
!12495 = !DILocation(line: 0, scope: !12300, inlinedAt: !12496)
!12496 = distinct !DILocation(line: 183, column: 2, scope: !12456)
!12497 = !DILocation(line: 194, column: 2, scope: !12308, inlinedAt: !12496)
!12498 = !DILocation(line: 194, column: 2, scope: !12309, inlinedAt: !12496)
!12499 = !DILocation(line: 194, column: 2, scope: !12312, inlinedAt: !12496)
!12500 = !DILocation(line: 0, scope: !12314, inlinedAt: !12501)
!12501 = distinct !DILocation(line: 215, column: 2, scope: !12300, inlinedAt: !12496)
!12502 = !DILocation(line: 95, column: 2, scope: !12314, inlinedAt: !12501)
!12503 = !DILocation(line: 184, column: 1, scope: !12456)
!12504 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2088, file: !2088, line: 187, type: !12505, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12507)
!12505 = !DISubroutineType(types: !12506)
!12506 = !{!109, !2092, !324}
!12507 = !{!12508, !12509}
!12508 = !DILocalVariable(name: "thread", arg: 1, scope: !12504, file: !2088, line: 187, type: !2092)
!12509 = !DILocalVariable(name: "value", arg: 2, scope: !12504, file: !2088, line: 187, type: !324)
!12510 = !DILocation(line: 0, scope: !12504)
!12511 = !DILocation(line: 190, column: 13, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12504, file: !2088, line: 190, column: 6)
!12513 = !DILocation(line: 190, column: 6, scope: !12504)
!12514 = !DILocation(line: 194, column: 10, scope: !12504)
!12515 = !DILocation(line: 194, column: 2, scope: !12504)
!12516 = !DILocation(line: 195, column: 2, scope: !12504)
!12517 = !DILocation(line: 195, column: 47, scope: !12504)
!12518 = !DILocation(line: 199, column: 2, scope: !12504)
!12519 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2088, file: !2088, line: 238, type: !12520, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12522)
!12520 = !DISubroutineType(types: !12521)
!12521 = !{!324, !2092}
!12522 = !{!12523}
!12523 = !DILocalVariable(name: "thread", arg: 1, scope: !12519, file: !2088, line: 238, type: !2092)
!12524 = !DILocation(line: 0, scope: !12519)
!12525 = !DILocation(line: 241, column: 23, scope: !12519)
!12526 = !DILocation(line: 241, column: 2, scope: !12519)
!12527 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2088, file: !2088, line: 248, type: !12528, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12530)
!12528 = !DISubroutineType(types: !12529)
!12529 = !{!109, !2091, !1127, !235}
!12530 = !{!12531, !12532, !12533}
!12531 = !DILocalVariable(name: "thread", arg: 1, scope: !12527, file: !2088, line: 248, type: !2091)
!12532 = !DILocalVariable(name: "buf", arg: 2, scope: !12527, file: !2088, line: 248, type: !1127)
!12533 = !DILocalVariable(name: "size", arg: 3, scope: !12527, file: !2088, line: 248, type: !235)
!12534 = !DILocation(line: 0, scope: !12527)
!12535 = !DILocation(line: 251, column: 15, scope: !12527)
!12536 = !DILocation(line: 251, column: 2, scope: !12527)
!12537 = !DILocation(line: 252, column: 2, scope: !12527)
!12538 = !DILocation(line: 0, scope: !2087)
!12539 = !DILocation(line: 281, column: 11, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !2087, file: !2088, line: 281, column: 6)
!12541 = !DILocation(line: 281, column: 20, scope: !12540)
!12542 = !DILocation(line: 275, column: 45, scope: !2087)
!12543 = !DILocation(line: 285, column: 10, scope: !2087)
!12544 = !DILocation(line: 0, scope: !2197)
!12545 = !DILocation(line: 293, column: 39, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !2197, file: !2088, line: 293, column: 2)
!12547 = !DILocation(line: 293, column: 2, scope: !2197)
!12548 = !DILocation(line: 273, column: 14, scope: !2087)
!12549 = !DILocation(line: 309, column: 2, scope: !2087)
!12550 = !DILocation(line: 309, column: 11, scope: !2087)
!12551 = !DILocation(line: 311, column: 2, scope: !2087)
!12552 = !DILocation(line: 293, column: 26, scope: !12546)
!12553 = !DILocation(line: 294, column: 9, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12546, file: !2088, line: 293, column: 54)
!12555 = !DILocation(line: 295, column: 21, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12554, file: !2088, line: 295, column: 7)
!12557 = !DILocation(line: 295, column: 28, scope: !12556)
!12558 = !DILocation(line: 295, column: 7, scope: !12554)
!12559 = !DILocation(line: 299, column: 25, scope: !12554)
!12560 = !DILocation(line: 299, column: 41, scope: !12554)
!12561 = !DILocation(line: 300, column: 7, scope: !12554)
!12562 = !DILocation(line: 300, column: 26, scope: !12554)
!12563 = !DILocation(line: 299, column: 10, scope: !12554)
!12564 = !DILocation(line: 299, column: 7, scope: !12554)
!12565 = !DILocation(line: 302, column: 16, scope: !12554)
!12566 = !DILocation(line: 304, column: 20, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12554, file: !2088, line: 304, column: 7)
!12568 = !DILocation(line: 304, column: 7, scope: !12554)
!12569 = !DILocation(line: 305, column: 26, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12567, file: !2088, line: 304, column: 26)
!12571 = !DILocation(line: 305, column: 42, scope: !12570)
!12572 = !DILocation(line: 305, column: 11, scope: !12570)
!12573 = !DILocation(line: 305, column: 8, scope: !12570)
!12574 = !DILocation(line: 306, column: 3, scope: !12570)
!12575 = !DILocation(line: 293, column: 50, scope: !12546)
!12576 = !DILocation(line: 312, column: 1, scope: !2087)
!12577 = distinct !DISubprogram(name: "copy_bytes", scope: !2088, file: !2088, line: 261, type: !12578, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12580)
!12578 = !DISubroutineType(types: !12579)
!12579 = !{!235, !1127, !235, !324, !235}
!12580 = !{!12581, !12582, !12583, !12584, !12585}
!12581 = !DILocalVariable(name: "dest", arg: 1, scope: !12577, file: !2088, line: 261, type: !1127)
!12582 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12577, file: !2088, line: 261, type: !235)
!12583 = !DILocalVariable(name: "src", arg: 3, scope: !12577, file: !2088, line: 261, type: !324)
!12584 = !DILocalVariable(name: "src_size", arg: 4, scope: !12577, file: !2088, line: 261, type: !235)
!12585 = !DILocalVariable(name: "bytes_to_copy", scope: !12577, file: !2088, line: 263, type: !235)
!12586 = !DILocation(line: 0, scope: !12577)
!12587 = !DILocation(line: 265, column: 18, scope: !12577)
!12588 = !DILocation(line: 266, column: 2, scope: !12577)
!12589 = !DILocation(line: 268, column: 2, scope: !12577)
!12590 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2088, file: !2088, line: 383, type: !12457, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12591)
!12591 = !{!12592}
!12592 = !DILocalVariable(name: "thread", arg: 1, scope: !12590, file: !2088, line: 383, type: !2092)
!12593 = !DILocation(line: 0, scope: !12590)
!12594 = !DILocation(line: 387, column: 2, scope: !12590)
!12595 = !DILocation(line: 388, column: 1, scope: !12590)
!12596 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2088, file: !2088, line: 528, type: !12597, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12604)
!12597 = !DISubroutineType(types: !12598)
!12598 = !{!1127, !2092, !12599, !235, !215, !108, !108, !108, !109, !110, !324}
!12599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12600, size: 32)
!12600 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !12601)
!12601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !12602)
!12602 = !{!12603}
!12603 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12601, file: !273, line: 48, baseType: !226, size: 8)
!12604 = !{!12605, !12606, !12607, !12608, !12609, !12610, !12611, !12612, !12613, !12614, !12615, !12616}
!12605 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12596, file: !2088, line: 528, type: !2092)
!12606 = !DILocalVariable(name: "stack", arg: 2, scope: !12596, file: !2088, line: 529, type: !12599)
!12607 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12596, file: !2088, line: 529, type: !235)
!12608 = !DILocalVariable(name: "entry", arg: 4, scope: !12596, file: !2088, line: 530, type: !215)
!12609 = !DILocalVariable(name: "p1", arg: 5, scope: !12596, file: !2088, line: 531, type: !108)
!12610 = !DILocalVariable(name: "p2", arg: 6, scope: !12596, file: !2088, line: 531, type: !108)
!12611 = !DILocalVariable(name: "p3", arg: 7, scope: !12596, file: !2088, line: 531, type: !108)
!12612 = !DILocalVariable(name: "prio", arg: 8, scope: !12596, file: !2088, line: 532, type: !109)
!12613 = !DILocalVariable(name: "options", arg: 9, scope: !12596, file: !2088, line: 532, type: !110)
!12614 = !DILocalVariable(name: "name", arg: 10, scope: !12596, file: !2088, line: 532, type: !324)
!12615 = !DILocalVariable(name: "stack_ptr", scope: !12596, file: !2088, line: 534, type: !1127)
!12616 = !DILocalVariable(name: "key", scope: !12596, file: !2088, line: 587, type: !12255)
!12617 = !DILocation(line: 0, scope: !12596)
!12618 = !DILocation(line: 536, column: 2, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12620, file: !2088, line: 536, column: 2)
!12620 = distinct !DILexicalBlock(scope: !12621, file: !2088, line: 536, column: 2)
!12621 = distinct !DILexicalBlock(scope: !12596, file: !2088, line: 536, column: 2)
!12622 = !DILocation(line: 536, column: 2, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12619, file: !2088, line: 536, column: 2)
!12624 = !DILocation(line: 550, column: 28, scope: !12596)
!12625 = !DILocation(line: 550, column: 2, scope: !12596)
!12626 = !DILocation(line: 553, column: 34, scope: !12596)
!12627 = !DILocation(line: 553, column: 2, scope: !12596)
!12628 = !DILocation(line: 554, column: 14, scope: !12596)
!12629 = !DILocation(line: 564, column: 2, scope: !12596)
!12630 = !DILocation(line: 567, column: 14, scope: !12596)
!12631 = !DILocation(line: 567, column: 24, scope: !12596)
!12632 = !DILocation(line: 582, column: 20, scope: !12596)
!12633 = !DILocation(line: 582, column: 27, scope: !12596)
!12634 = !DILocation(line: 583, column: 20, scope: !12596)
!12635 = !DILocation(line: 583, column: 31, scope: !12596)
!12636 = !DILocation(line: 584, column: 20, scope: !12596)
!12637 = !DILocation(line: 584, column: 31, scope: !12596)
!12638 = !DILocation(line: 585, column: 20, scope: !12596)
!12639 = !DILocation(line: 585, column: 31, scope: !12596)
!12640 = !DILocation(line: 0, scope: !12267, inlinedAt: !12641)
!12641 = distinct !DILocation(line: 587, column: 25, scope: !12596)
!12642 = !DILocation(line: 55, column: 2, scope: !12276, inlinedAt: !12643)
!12643 = distinct !DILocation(line: 145, column: 10, scope: !12267, inlinedAt: !12641)
!12644 = !DILocation(line: 0, scope: !12276, inlinedAt: !12643)
!12645 = !DILocation(line: 148, column: 2, scope: !12284, inlinedAt: !12641)
!12646 = !DILocation(line: 148, column: 2, scope: !12285, inlinedAt: !12641)
!12647 = !DILocation(line: 148, column: 2, scope: !12288, inlinedAt: !12641)
!12648 = !DILocation(line: 160, column: 2, scope: !12267, inlinedAt: !12641)
!12649 = !DILocation(line: 589, column: 36, scope: !12596)
!12650 = !DILocation(line: 589, column: 14, scope: !12596)
!12651 = !DILocation(line: 589, column: 26, scope: !12596)
!12652 = !DILocation(line: 590, column: 18, scope: !12596)
!12653 = !DILocation(line: 0, scope: !12300, inlinedAt: !12654)
!12654 = distinct !DILocation(line: 591, column: 2, scope: !12596)
!12655 = !DILocation(line: 194, column: 2, scope: !12308, inlinedAt: !12654)
!12656 = !DILocation(line: 194, column: 2, scope: !12309, inlinedAt: !12654)
!12657 = !DILocation(line: 194, column: 2, scope: !12312, inlinedAt: !12654)
!12658 = !DILocation(line: 0, scope: !12314, inlinedAt: !12659)
!12659 = distinct !DILocation(line: 215, column: 2, scope: !12300, inlinedAt: !12654)
!12660 = !DILocation(line: 95, column: 2, scope: !12314, inlinedAt: !12659)
!12661 = !DILocation(line: 594, column: 11, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12596, file: !2088, line: 594, column: 6)
!12663 = !DILocation(line: 0, scope: !12662)
!12664 = !DILocation(line: 594, column: 6, scope: !12596)
!12665 = !DILocation(line: 595, column: 3, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12662, file: !2088, line: 594, column: 20)
!12667 = !DILocation(line: 598, column: 3, scope: !12666)
!12668 = !DILocation(line: 598, column: 52, scope: !12666)
!12669 = !DILocation(line: 599, column: 2, scope: !12666)
!12670 = !DILocation(line: 600, column: 23, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12662, file: !2088, line: 599, column: 9)
!12672 = !DILocation(line: 612, column: 7, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12596, file: !2088, line: 612, column: 6)
!12674 = !DILocation(line: 612, column: 6, scope: !12596)
!12675 = !DILocation(line: 627, column: 40, scope: !12596)
!12676 = !DILocation(line: 637, column: 2, scope: !12596)
!12677 = !DILocation(line: 613, column: 15, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12673, file: !2088, line: 612, column: 17)
!12679 = !DILocation(line: 613, column: 29, scope: !12678)
!12680 = !DILocation(line: 638, column: 1, scope: !12596)
!12681 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12086, file: !12086, line: 78, type: !12682, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12684)
!12682 = !DISubroutineType(types: !12683)
!12683 = !{!334, !108}
!12684 = !{!12685}
!12685 = !DILocalVariable(name: "entry_point", arg: 1, scope: !12681, file: !12086, line: 78, type: !108)
!12686 = !DILocation(line: 0, scope: !12681)
!12687 = !DILocation(line: 80, column: 21, scope: !12681)
!12688 = !DILocation(line: 80, column: 2, scope: !12681)
!12689 = distinct !DISubprogram(name: "z_waitq_init", scope: !12690, file: !12690, line: 47, type: !12691, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12693)
!12690 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12691 = !DISubroutineType(types: !12692)
!12692 = !{null, !2109}
!12693 = !{!12694}
!12694 = !DILocalVariable(name: "w", arg: 1, scope: !12689, file: !12690, line: 47, type: !2109)
!12695 = !DILocation(line: 0, scope: !12689)
!12696 = !DILocation(line: 49, column: 21, scope: !12689)
!12697 = !DILocation(line: 49, column: 2, scope: !12689)
!12698 = !DILocation(line: 50, column: 1, scope: !12689)
!12699 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2088, file: !2088, line: 791, type: !12700, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12703)
!12700 = !DISubroutineType(types: !12701)
!12701 = !{null, !12702, !109, !110, !32}
!12702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 32)
!12703 = !{!12704, !12705, !12706, !12707}
!12704 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12699, file: !2088, line: 791, type: !12702)
!12705 = !DILocalVariable(name: "priority", arg: 2, scope: !12699, file: !2088, line: 791, type: !109)
!12706 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12699, file: !2088, line: 792, type: !110)
!12707 = !DILocalVariable(name: "options", arg: 4, scope: !12699, file: !2088, line: 792, type: !32)
!12708 = !DILocation(line: 0, scope: !12699)
!12709 = !DILocation(line: 795, column: 15, scope: !12699)
!12710 = !DILocation(line: 795, column: 25, scope: !12699)
!12711 = !DILocation(line: 796, column: 30, scope: !12699)
!12712 = !DILocation(line: 796, column: 15, scope: !12699)
!12713 = !DILocation(line: 796, column: 28, scope: !12699)
!12714 = !DILocation(line: 797, column: 30, scope: !12699)
!12715 = !DILocation(line: 797, column: 15, scope: !12699)
!12716 = !DILocation(line: 797, column: 28, scope: !12699)
!12717 = !DILocation(line: 799, column: 22, scope: !12699)
!12718 = !DILocation(line: 799, column: 15, scope: !12699)
!12719 = !DILocation(line: 799, column: 20, scope: !12699)
!12720 = !DILocation(line: 801, column: 15, scope: !12699)
!12721 = !DILocation(line: 801, column: 28, scope: !12699)
!12722 = !DILocation(line: 814, column: 2, scope: !12699)
!12723 = !DILocation(line: 815, column: 1, scope: !12699)
!12724 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2088, file: !2088, line: 449, type: !12725, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12727)
!12725 = !DISubroutineType(types: !12726)
!12726 = !{!1127, !2092, !12599, !235}
!12727 = !{!12728, !12729, !12730, !12731, !12732, !12733, !12734, !12735}
!12728 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12724, file: !2088, line: 449, type: !2092)
!12729 = !DILocalVariable(name: "stack", arg: 2, scope: !12724, file: !2088, line: 450, type: !12599)
!12730 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12724, file: !2088, line: 450, type: !235)
!12731 = !DILocalVariable(name: "stack_obj_size", scope: !12724, file: !2088, line: 452, type: !235)
!12732 = !DILocalVariable(name: "stack_buf_size", scope: !12724, file: !2088, line: 452, type: !235)
!12733 = !DILocalVariable(name: "stack_ptr", scope: !12724, file: !2088, line: 453, type: !1127)
!12734 = !DILocalVariable(name: "stack_buf_start", scope: !12724, file: !2088, line: 453, type: !1127)
!12735 = !DILocalVariable(name: "delta", scope: !12724, file: !2088, line: 454, type: !235)
!12736 = !DILocation(line: 0, scope: !12724)
!12737 = !DILocation(line: 465, column: 20, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12724, file: !2088, line: 463, column: 2)
!12739 = !DILocation(line: 466, column: 21, scope: !12738)
!12740 = !DILocation(line: 473, column: 28, scope: !12724)
!12741 = !DILocation(line: 514, column: 33, scope: !12724)
!12742 = !DILocation(line: 514, column: 25, scope: !12724)
!12743 = !DILocation(line: 514, column: 31, scope: !12724)
!12744 = !DILocation(line: 515, column: 25, scope: !12724)
!12745 = !DILocation(line: 515, column: 30, scope: !12724)
!12746 = !DILocation(line: 516, column: 25, scope: !12724)
!12747 = !DILocation(line: 516, column: 31, scope: !12724)
!12748 = !DILocation(line: 520, column: 2, scope: !12724)
!12749 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !273, file: !273, line: 331, type: !12750, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12752)
!12750 = !DISubroutineType(types: !12751)
!12751 = !{!1127, !12599}
!12752 = !{!12753}
!12753 = !DILocalVariable(name: "sym", arg: 1, scope: !12749, file: !273, line: 331, type: !12599)
!12754 = !DILocation(line: 0, scope: !12749)
!12755 = !DILocation(line: 333, column: 21, scope: !12749)
!12756 = !DILocation(line: 333, column: 2, scope: !12749)
!12757 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12758, file: !12758, line: 40, type: !12759, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12761)
!12758 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12759 = !DISubroutineType(types: !12760)
!12760 = !{null, !12702}
!12761 = !{!12762}
!12762 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12757, file: !12758, line: 40, type: !12702)
!12763 = !DILocation(line: 0, scope: !12757)
!12764 = !DILocation(line: 42, column: 31, scope: !12757)
!12765 = !DILocation(line: 42, column: 2, scope: !12757)
!12766 = !DILocation(line: 43, column: 1, scope: !12757)
!12767 = distinct !DISubprogram(name: "z_init_timeout", scope: !12758, file: !12758, line: 25, type: !2135, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12768)
!12768 = !{!12769}
!12769 = !DILocalVariable(name: "to", arg: 1, scope: !12767, file: !12758, line: 25, type: !2137)
!12770 = !DILocation(line: 0, scope: !12767)
!12771 = !DILocation(line: 27, column: 22, scope: !12767)
!12772 = !DILocation(line: 27, column: 2, scope: !12767)
!12773 = !DILocation(line: 28, column: 1, scope: !12767)
!12774 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !12775, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12777)
!12775 = !DISubroutineType(types: !12776)
!12776 = !{null, !2069}
!12777 = !{!12778}
!12778 = !DILocalVariable(name: "node", arg: 1, scope: !12774, file: !128, line: 211, type: !2069)
!12779 = !DILocation(line: 0, scope: !12774)
!12780 = !DILocation(line: 213, column: 8, scope: !12774)
!12781 = !DILocation(line: 213, column: 13, scope: !12774)
!12782 = !DILocation(line: 214, column: 8, scope: !12774)
!12783 = !DILocation(line: 214, column: 13, scope: !12774)
!12784 = !DILocation(line: 215, column: 1, scope: !12774)
!12785 = distinct !DISubprogram(name: "sys_dlist_init", scope: !128, file: !128, line: 197, type: !12786, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12789)
!12786 = !DISubroutineType(types: !12787)
!12787 = !{null, !12788}
!12788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!12789 = !{!12790}
!12790 = !DILocalVariable(name: "list", arg: 1, scope: !12785, file: !128, line: 197, type: !12788)
!12791 = !DILocation(line: 0, scope: !12785)
!12792 = !DILocation(line: 199, column: 8, scope: !12785)
!12793 = !DILocation(line: 199, column: 13, scope: !12785)
!12794 = !DILocation(line: 200, column: 8, scope: !12785)
!12795 = !DILocation(line: 200, column: 13, scope: !12785)
!12796 = !DILocation(line: 201, column: 1, scope: !12785)
!12797 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2088, file: !2088, line: 641, type: !12798, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12804)
!12798 = !DISubroutineType(types: !12799)
!12799 = !{!2091, !2092, !12599, !235, !215, !108, !108, !108, !109, !110, !12800}
!12800 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !12801)
!12801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !12802)
!12802 = !{!12803}
!12803 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12801, file: !105, line: 66, baseType: !104, size: 64)
!12804 = !{!12805, !12806, !12807, !12808, !12809, !12810, !12811, !12812, !12813, !12814}
!12805 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12797, file: !2088, line: 641, type: !2092)
!12806 = !DILocalVariable(name: "stack", arg: 2, scope: !12797, file: !2088, line: 642, type: !12599)
!12807 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12797, file: !2088, line: 643, type: !235)
!12808 = !DILocalVariable(name: "entry", arg: 4, scope: !12797, file: !2088, line: 643, type: !215)
!12809 = !DILocalVariable(name: "p1", arg: 5, scope: !12797, file: !2088, line: 644, type: !108)
!12810 = !DILocalVariable(name: "p2", arg: 6, scope: !12797, file: !2088, line: 644, type: !108)
!12811 = !DILocalVariable(name: "p3", arg: 7, scope: !12797, file: !2088, line: 644, type: !108)
!12812 = !DILocalVariable(name: "prio", arg: 8, scope: !12797, file: !2088, line: 645, type: !109)
!12813 = !DILocalVariable(name: "options", arg: 9, scope: !12797, file: !2088, line: 645, type: !110)
!12814 = !DILocalVariable(name: "delay", arg: 10, scope: !12797, file: !2088, line: 645, type: !12800)
!12815 = !DILocation(line: 0, scope: !12797)
!12816 = !DILocation(line: 1031, column: 3, scope: !12430, inlinedAt: !12817)
!12817 = distinct !DILocation(line: 48, column: 10, scope: !12434, inlinedAt: !12818)
!12818 = distinct !DILocation(line: 647, column: 2, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12820, file: !2088, line: 647, column: 2)
!12820 = distinct !DILexicalBlock(scope: !12797, file: !2088, line: 647, column: 2)
!12821 = !DILocation(line: 0, scope: !12430, inlinedAt: !12817)
!12822 = !DILocation(line: 48, column: 9, scope: !12434, inlinedAt: !12818)
!12823 = !DILocation(line: 647, column: 2, scope: !12820)
!12824 = !DILocation(line: 647, column: 2, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12819, file: !2088, line: 647, column: 2)
!12826 = !DILocation(line: 649, column: 2, scope: !12797)
!12827 = !DILocation(line: 652, column: 7, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12797, file: !2088, line: 652, column: 6)
!12829 = !DILocation(line: 652, column: 6, scope: !12797)
!12830 = !DILocation(line: 653, column: 3, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12828, file: !2088, line: 652, column: 39)
!12832 = !DILocation(line: 654, column: 2, scope: !12831)
!12833 = !DILocation(line: 656, column: 2, scope: !12797)
!12834 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2088, file: !2088, line: 401, type: !12835, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12837)
!12835 = !DISubroutineType(types: !12836)
!12836 = !{null, !2092, !12800}
!12837 = !{!12838, !12839}
!12838 = !DILocalVariable(name: "thread", arg: 1, scope: !12834, file: !2088, line: 401, type: !2092)
!12839 = !DILocalVariable(name: "delay", arg: 2, scope: !12834, file: !2088, line: 401, type: !12800)
!12840 = !DILocation(line: 0, scope: !12834)
!12841 = !DILocation(line: 404, column: 6, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12834, file: !2088, line: 404, column: 6)
!12843 = !DILocation(line: 404, column: 6, scope: !12834)
!12844 = !DILocation(line: 405, column: 3, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12842, file: !2088, line: 404, column: 38)
!12846 = !DILocation(line: 406, column: 2, scope: !12845)
!12847 = !DILocation(line: 407, column: 3, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12842, file: !2088, line: 406, column: 9)
!12849 = !DILocation(line: 413, column: 1, scope: !12834)
!12850 = distinct !DISubprogram(name: "k_thread_start", scope: !3271, file: !3271, line: 205, type: !12851, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12853)
!12851 = !DISubroutineType(types: !12852)
!12852 = !{null, !2091}
!12853 = !{!12854}
!12854 = !DILocalVariable(name: "thread", arg: 1, scope: !12850, file: !3271, line: 205, type: !2091)
!12855 = !DILocation(line: 0, scope: !12850)
!12856 = !DILocation(line: 214, column: 2, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12850, file: !3271, line: 214, column: 2)
!12858 = !{i64 2154097048}
!12859 = !DILocation(line: 215, column: 2, scope: !12850)
!12860 = !DILocation(line: 216, column: 1, scope: !12850)
!12861 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12758, file: !12758, line: 47, type: !12835, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12862)
!12862 = !{!12863, !12864}
!12863 = !DILocalVariable(name: "thread", arg: 1, scope: !12861, file: !12758, line: 47, type: !2092)
!12864 = !DILocalVariable(name: "ticks", arg: 2, scope: !12861, file: !12758, line: 47, type: !12800)
!12865 = !DILocation(line: 0, scope: !12861)
!12866 = !DILocation(line: 49, column: 30, scope: !12861)
!12867 = !DILocation(line: 49, column: 2, scope: !12861)
!12868 = !DILocation(line: 50, column: 1, scope: !12861)
!12869 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2088, file: !2088, line: 748, type: !3086, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12870)
!12870 = !{!12871, !12889}
!12871 = !DILocalVariable(name: "thread_data", scope: !12872, file: !2088, line: 750, type: !12873)
!12872 = distinct !DILexicalBlock(scope: !12869, file: !2088, line: 750, column: 2)
!12873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12874, size: 32)
!12874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !119, line: 620, size: 384, elements: !12875)
!12875 = !{!12876, !12877, !12878, !12879, !12880, !12881, !12882, !12883, !12884, !12885, !12886, !12888}
!12876 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12874, file: !119, line: 621, baseType: !2092, size: 32)
!12877 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12874, file: !119, line: 622, baseType: !12599, size: 32, offset: 32)
!12878 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12874, file: !119, line: 623, baseType: !32, size: 32, offset: 64)
!12879 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12874, file: !119, line: 624, baseType: !215, size: 32, offset: 96)
!12880 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12874, file: !119, line: 625, baseType: !108, size: 32, offset: 128)
!12881 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12874, file: !119, line: 626, baseType: !108, size: 32, offset: 160)
!12882 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12874, file: !119, line: 627, baseType: !108, size: 32, offset: 192)
!12883 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12874, file: !119, line: 628, baseType: !109, size: 32, offset: 224)
!12884 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12874, file: !119, line: 629, baseType: !110, size: 32, offset: 256)
!12885 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12874, file: !119, line: 630, baseType: !736, size: 32, offset: 288)
!12886 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12874, file: !119, line: 631, baseType: !12887, size: 32, offset: 320)
!12887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 32)
!12888 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12874, file: !119, line: 632, baseType: !324, size: 32, offset: 352)
!12889 = !DILocalVariable(name: "thread_data", scope: !12890, file: !2088, line: 781, type: !12873)
!12890 = distinct !DILexicalBlock(scope: !12869, file: !2088, line: 781, column: 2)
!12891 = !DILocation(line: 0, scope: !12872)
!12892 = !DILocation(line: 750, column: 2, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12894, file: !2088, line: 750, column: 2)
!12894 = distinct !DILexicalBlock(scope: !12895, file: !2088, line: 750, column: 2)
!12895 = distinct !DILexicalBlock(scope: !12872, file: !2088, line: 750, column: 2)
!12896 = !DILocation(line: 750, column: 2, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12898, file: !2088, line: 750, column: 2)
!12898 = distinct !DILexicalBlock(scope: !12893, file: !2088, line: 750, column: 2)
!12899 = !DILocation(line: 750, column: 2, scope: !12894)
!12900 = !DILocation(line: 750, column: 2, scope: !12872)
!12901 = !DILocation(line: 780, column: 2, scope: !12869)
!12902 = !DILocation(line: 0, scope: !12890)
!12903 = !DILocation(line: 781, column: 2, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12905, file: !2088, line: 781, column: 2)
!12905 = distinct !DILexicalBlock(scope: !12906, file: !2088, line: 781, column: 2)
!12906 = distinct !DILexicalBlock(scope: !12890, file: !2088, line: 781, column: 2)
!12907 = !DILocation(line: 752, column: 17, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12895, file: !2088, line: 750, column: 38)
!12909 = !DILocation(line: 753, column: 17, scope: !12908)
!12910 = !DILocation(line: 754, column: 17, scope: !12908)
!12911 = !DILocation(line: 755, column: 17, scope: !12908)
!12912 = !DILocation(line: 756, column: 17, scope: !12908)
!12913 = !DILocation(line: 757, column: 17, scope: !12908)
!12914 = !DILocation(line: 758, column: 17, scope: !12908)
!12915 = !DILocation(line: 759, column: 17, scope: !12908)
!12916 = !DILocation(line: 760, column: 17, scope: !12908)
!12917 = !DILocation(line: 761, column: 17, scope: !12908)
!12918 = !DILocation(line: 751, column: 3, scope: !12908)
!12919 = !DILocation(line: 763, column: 16, scope: !12908)
!12920 = !DILocation(line: 763, column: 29, scope: !12908)
!12921 = !DILocation(line: 763, column: 39, scope: !12908)
!12922 = !DILocation(line: 750, column: 2, scope: !12895)
!12923 = !DILocation(line: 750, column: 2, scope: !12898)
!12924 = distinct !{!12924, !12900, !12925}
!12925 = !DILocation(line: 764, column: 2, scope: !12872)
!12926 = !DILocation(line: 781, column: 2, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12928, file: !2088, line: 781, column: 2)
!12928 = distinct !DILexicalBlock(scope: !12904, file: !2088, line: 781, column: 2)
!12929 = !DILocation(line: 781, column: 2, scope: !12905)
!12930 = !DILocation(line: 781, column: 2, scope: !12890)
!12931 = !DILocation(line: 787, column: 2, scope: !12869)
!12932 = !DILocation(line: 788, column: 1, scope: !12869)
!12933 = !DILocation(line: 782, column: 20, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12935, file: !2088, line: 782, column: 7)
!12935 = distinct !DILexicalBlock(scope: !12906, file: !2088, line: 781, column: 38)
!12936 = !DILocation(line: 782, column: 31, scope: !12934)
!12937 = !DILocation(line: 782, column: 7, scope: !12935)
!12938 = !DILocation(line: 783, column: 37, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12934, file: !2088, line: 782, column: 51)
!12940 = !DILocation(line: 784, column: 10, scope: !12939)
!12941 = !DILocation(line: 783, column: 4, scope: !12939)
!12942 = !DILocation(line: 785, column: 3, scope: !12939)
!12943 = !DILocation(line: 781, column: 2, scope: !12906)
!12944 = !DILocation(line: 781, column: 2, scope: !12928)
!12945 = distinct !{!12945, !12930, !12946}
!12946 = !DILocation(line: 786, column: 2, scope: !12890)
!12947 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3324, file: !3324, line: 403, type: !3325, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12948)
!12948 = !{!12949}
!12949 = !DILocalVariable(name: "t", arg: 1, scope: !12947, file: !3324, line: 403, type: !111)
!12950 = !DILocation(line: 0, scope: !12947)
!12951 = !DILocalVariable(name: "t", arg: 1, scope: !12952, file: !3324, line: 102, type: !111)
!12952 = distinct !DISubprogram(name: "z_tmcvt", scope: !3324, file: !3324, line: 102, type: !3332, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12953)
!12953 = !{!12951, !12954, !12955, !12956, !12957, !12958, !12959, !12960, !12961, !12962, !12963}
!12954 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12952, file: !3324, line: 102, type: !110)
!12955 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12952, file: !3324, line: 103, type: !110)
!12956 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12952, file: !3324, line: 103, type: !334)
!12957 = !DILocalVariable(name: "result32", arg: 5, scope: !12952, file: !3324, line: 104, type: !334)
!12958 = !DILocalVariable(name: "round_up", arg: 6, scope: !12952, file: !3324, line: 104, type: !334)
!12959 = !DILocalVariable(name: "round_off", arg: 7, scope: !12952, file: !3324, line: 105, type: !334)
!12960 = !DILocalVariable(name: "mul_ratio", scope: !12952, file: !3324, line: 107, type: !334)
!12961 = !DILocalVariable(name: "div_ratio", scope: !12952, file: !3324, line: 109, type: !334)
!12962 = !DILocalVariable(name: "off", scope: !12952, file: !3324, line: 116, type: !111)
!12963 = !DILocalVariable(name: "rdivisor", scope: !12964, file: !3324, line: 119, type: !110)
!12964 = distinct !DILexicalBlock(scope: !12965, file: !3324, line: 118, column: 18)
!12965 = distinct !DILexicalBlock(scope: !12952, file: !3324, line: 118, column: 6)
!12966 = !DILocation(line: 0, scope: !12952, inlinedAt: !12967)
!12967 = distinct !DILocation(line: 406, column: 9, scope: !12947)
!12968 = !DILocation(line: 145, column: 13, scope: !12969, inlinedAt: !12967)
!12969 = distinct !DILexicalBlock(scope: !12970, file: !3324, line: 144, column: 10)
!12970 = distinct !DILexicalBlock(scope: !12971, file: !3324, line: 142, column: 7)
!12971 = distinct !DILexicalBlock(scope: !12972, file: !3324, line: 141, column: 24)
!12972 = distinct !DILexicalBlock(scope: !12973, file: !3324, line: 141, column: 13)
!12973 = distinct !DILexicalBlock(scope: !12952, file: !3324, line: 134, column: 6)
!12974 = !DILocation(line: 406, column: 2, scope: !12947)
!12975 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2088, file: !2088, line: 817, type: !4439, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12976)
!12976 = !{!12977, !12978, !12979, !12980}
!12977 = !DILocalVariable(name: "entry", arg: 1, scope: !12975, file: !2088, line: 817, type: !215)
!12978 = !DILocalVariable(name: "p1", arg: 2, scope: !12975, file: !2088, line: 818, type: !108)
!12979 = !DILocalVariable(name: "p2", arg: 3, scope: !12975, file: !2088, line: 818, type: !108)
!12980 = !DILocalVariable(name: "p3", arg: 4, scope: !12975, file: !2088, line: 818, type: !108)
!12981 = !DILocation(line: 0, scope: !12975)
!12982 = !DILocation(line: 822, column: 2, scope: !12975)
!12983 = !DILocation(line: 822, column: 17, scope: !12975)
!12984 = !DILocation(line: 822, column: 30, scope: !12975)
!12985 = !DILocation(line: 823, column: 2, scope: !12975)
!12986 = !DILocation(line: 825, column: 2, scope: !12975)
!12987 = !DILocation(line: 825, column: 18, scope: !12975)
!12988 = !DILocation(line: 825, column: 25, scope: !12975)
!12989 = !DILocation(line: 826, column: 18, scope: !12975)
!12990 = !DILocation(line: 826, column: 29, scope: !12975)
!12991 = !DILocation(line: 827, column: 18, scope: !12975)
!12992 = !DILocation(line: 827, column: 29, scope: !12975)
!12993 = !DILocation(line: 828, column: 18, scope: !12975)
!12994 = !DILocation(line: 828, column: 29, scope: !12975)
!12995 = !DILocation(line: 845, column: 2, scope: !12975)
!12996 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2088, file: !2088, line: 888, type: !12997, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !12999)
!12997 = !DISubroutineType(types: !12998)
!12998 = !{!109, !2092}
!12999 = !{!13000}
!13000 = !DILocalVariable(name: "thread", arg: 1, scope: !12996, file: !2088, line: 888, type: !2092)
!13001 = !DILocation(line: 0, scope: !12996)
!13002 = !DILocation(line: 893, column: 2, scope: !12996)
!13003 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2088, file: !2088, line: 897, type: !13004, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !13006)
!13004 = !DISubroutineType(types: !13005)
!13005 = !{!109, !2092, !32}
!13006 = !{!13007, !13008}
!13007 = !DILocalVariable(name: "thread", arg: 1, scope: !13003, file: !2088, line: 897, type: !2092)
!13008 = !DILocalVariable(name: "options", arg: 2, scope: !13003, file: !2088, line: 897, type: !32)
!13009 = !DILocation(line: 0, scope: !13003)
!13010 = !DILocation(line: 902, column: 2, scope: !13003)
!13011 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2088, file: !2088, line: 1072, type: !13012, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !13017)
!13012 = !DISubroutineType(types: !13013)
!13013 = !{!109, !2091, !13014}
!13014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13015, size: 32)
!13015 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !145, line: 234, baseType: !13016)
!13016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !145, line: 192, elements: !1998)
!13017 = !{!13018, !13019}
!13018 = !DILocalVariable(name: "thread", arg: 1, scope: !13011, file: !2088, line: 1072, type: !2091)
!13019 = !DILocalVariable(name: "stats", arg: 2, scope: !13011, file: !2088, line: 1073, type: !13014)
!13020 = !DILocation(line: 0, scope: !13011)
!13021 = !DILocation(line: 1075, column: 14, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13011, file: !2088, line: 1075, column: 6)
!13023 = !DILocation(line: 1075, column: 23, scope: !13022)
!13024 = !DILocation(line: 1086, column: 1, scope: !13011)
!13025 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2088, file: !2088, line: 1088, type: !13026, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2066, retainedNodes: !13028)
!13026 = !DISubroutineType(types: !13027)
!13027 = !{!109, !13014}
!13028 = !{!13029}
!13029 = !DILocalVariable(name: "stats", arg: 1, scope: !13025, file: !2088, line: 1088, type: !13014)
!13030 = !DILocation(line: 0, scope: !13025)
!13031 = !DILocation(line: 1094, column: 12, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13025, file: !2088, line: 1094, column: 6)
!13033 = !DILocation(line: 1120, column: 1, scope: !13025)
!13034 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13035, file: !13035, line: 20, type: !3086, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !1998)
!13035 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13036 = !DILocation(line: 30, column: 2, scope: !13034)
!13037 = !DILocation(line: 31, column: 1, scope: !13034)
!13038 = distinct !DISubprogram(name: "idle", scope: !13035, file: !13035, line: 33, type: !218, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !13039)
!13039 = !{!13040, !13041, !13042}
!13040 = !DILocalVariable(name: "unused1", arg: 1, scope: !13038, file: !13035, line: 33, type: !108)
!13041 = !DILocalVariable(name: "unused2", arg: 2, scope: !13038, file: !13035, line: 33, type: !108)
!13042 = !DILocalVariable(name: "unused3", arg: 3, scope: !13038, file: !13035, line: 33, type: !108)
!13043 = !DILocation(line: 0, scope: !13038)
!13044 = !DILocation(line: 39, column: 2, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13046, file: !13035, line: 39, column: 2)
!13046 = distinct !DILexicalBlock(scope: !13038, file: !13035, line: 39, column: 2)
!13047 = !DILocation(line: 39, column: 2, scope: !13046)
!13048 = !DILocation(line: 39, column: 2, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13045, file: !13035, line: 39, column: 2)
!13050 = !DILocation(line: 55, column: 2, scope: !13051, inlinedAt: !13055)
!13051 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5970, file: !5970, line: 42, type: !5971, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !13052)
!13052 = !{!13053, !13054}
!13053 = !DILocalVariable(name: "key", scope: !13051, file: !5970, line: 44, type: !32)
!13054 = !DILocalVariable(name: "tmp", scope: !13051, file: !5970, line: 53, type: !32)
!13055 = distinct !DILocation(line: 62, column: 10, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13038, file: !13035, line: 41, column: 15)
!13057 = !{i64 1950533}
!13058 = !DILocation(line: 0, scope: !13051, inlinedAt: !13055)
!13059 = !DILocation(line: 86, column: 3, scope: !13056)
!13060 = !DILocation(line: 41, column: 2, scope: !13038)
!13061 = distinct !{!13061, !13060, !13062}
!13062 = !DILocation(line: 105, column: 2, scope: !13038)
!13063 = distinct !DISubprogram(name: "k_cpu_idle", scope: !119, file: !119, line: 5627, type: !3086, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !1998)
!13064 = !DILocation(line: 5629, column: 2, scope: !13063)
!13065 = !DILocation(line: 5630, column: 1, scope: !13063)
!13066 = !DISubprogram(name: "arch_cpu_idle", scope: !216, file: !216, line: 167, type: !3086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1998)
!13067 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2320, file: !2320, line: 49, type: !13068, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13077)
!13068 = !DISubroutineType(types: !13069)
!13069 = !{!109, !13070}
!13070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13071, size: 32)
!13071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !119, line: 2720, size: 160, elements: !13072)
!13072 = !{!13073, !13074, !13075, !13076}
!13073 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13071, file: !119, line: 2722, baseType: !2240, size: 64)
!13074 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13071, file: !119, line: 2724, baseType: !2222, size: 32, offset: 64)
!13075 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13071, file: !119, line: 2727, baseType: !110, size: 32, offset: 96)
!13076 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13071, file: !119, line: 2730, baseType: !109, size: 32, offset: 128)
!13077 = !{!13078}
!13078 = !DILocalVariable(name: "mutex", arg: 1, scope: !13067, file: !2320, line: 49, type: !13070)
!13079 = !DILocation(line: 0, scope: !13067)
!13080 = !DILocation(line: 51, column: 9, scope: !13067)
!13081 = !DILocation(line: 51, column: 15, scope: !13067)
!13082 = !DILocation(line: 52, column: 9, scope: !13067)
!13083 = !DILocation(line: 52, column: 20, scope: !13067)
!13084 = !DILocation(line: 54, column: 23, scope: !13067)
!13085 = !DILocation(line: 54, column: 2, scope: !13067)
!13086 = !DILocation(line: 60, column: 2, scope: !13067)
!13087 = distinct !DISubprogram(name: "z_waitq_init", scope: !12690, file: !12690, line: 47, type: !13088, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13090)
!13088 = !DISubroutineType(types: !13089)
!13089 = !{null, !2239}
!13090 = !{!13091}
!13091 = !DILocalVariable(name: "w", arg: 1, scope: !13087, file: !12690, line: 47, type: !2239)
!13092 = !DILocation(line: 0, scope: !13087)
!13093 = !DILocation(line: 49, column: 21, scope: !13087)
!13094 = !DILocation(line: 49, column: 2, scope: !13087)
!13095 = !DILocation(line: 50, column: 1, scope: !13087)
!13096 = distinct !DISubprogram(name: "sys_dlist_init", scope: !128, file: !128, line: 197, type: !13097, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13100)
!13097 = !DISubroutineType(types: !13098)
!13098 = !{null, !13099}
!13099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 32)
!13100 = !{!13101}
!13101 = !DILocalVariable(name: "list", arg: 1, scope: !13096, file: !128, line: 197, type: !13099)
!13102 = !DILocation(line: 0, scope: !13096)
!13103 = !DILocation(line: 199, column: 8, scope: !13096)
!13104 = !DILocation(line: 199, column: 13, scope: !13096)
!13105 = !DILocation(line: 200, column: 8, scope: !13096)
!13106 = !DILocation(line: 200, column: 13, scope: !13096)
!13107 = !DILocation(line: 201, column: 1, scope: !13096)
!13108 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2320, file: !2320, line: 95, type: !13109, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13115)
!13109 = !DISubroutineType(types: !13110)
!13110 = !{!109, !13070, !13111}
!13111 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !13112)
!13112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !13113)
!13113 = !{!13114}
!13114 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13112, file: !105, line: 66, baseType: !104, size: 64)
!13115 = !{!13116, !13117, !13118, !13119, !13124, !13125, !13126}
!13116 = !DILocalVariable(name: "mutex", arg: 1, scope: !13108, file: !2320, line: 95, type: !13070)
!13117 = !DILocalVariable(name: "timeout", arg: 2, scope: !13108, file: !2320, line: 95, type: !13111)
!13118 = !DILocalVariable(name: "new_prio", scope: !13108, file: !2320, line: 97, type: !109)
!13119 = !DILocalVariable(name: "key", scope: !13108, file: !2320, line: 98, type: !13120)
!13120 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !13121)
!13121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !13122)
!13122 = !{!13123}
!13123 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13121, file: !254, line: 33, baseType: !109, size: 32)
!13124 = !DILocalVariable(name: "resched", scope: !13108, file: !2320, line: 99, type: !334)
!13125 = !DILocalVariable(name: "got_mutex", scope: !13108, file: !2320, line: 146, type: !109)
!13126 = !DILocalVariable(name: "waiter", scope: !13127, file: !2320, line: 169, type: !2222)
!13127 = distinct !DILexicalBlock(scope: !13128, file: !2320, line: 168, column: 36)
!13128 = distinct !DILexicalBlock(scope: !13108, file: !2320, line: 168, column: 6)
!13129 = !DILocation(line: 0, scope: !13108)
!13130 = !DILocation(line: 1031, column: 3, scope: !13131, inlinedAt: !13134)
!13131 = distinct !DISubprogram(name: "__get_IPSR", scope: !6144, file: !6144, line: 1027, type: !3368, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13132)
!13132 = !{!13133}
!13133 = !DILocalVariable(name: "result", scope: !13131, file: !6144, line: 1029, type: !110)
!13134 = distinct !DILocation(line: 48, column: 10, scope: !13135, inlinedAt: !13136)
!13135 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6985, file: !6985, line: 46, type: !6986, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !1998)
!13136 = distinct !DILocation(line: 101, column: 2, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13138, file: !2320, line: 101, column: 2)
!13138 = distinct !DILexicalBlock(scope: !13108, file: !2320, line: 101, column: 2)
!13139 = !{i64 2832680}
!13140 = !DILocation(line: 0, scope: !13131, inlinedAt: !13134)
!13141 = !DILocation(line: 48, column: 9, scope: !13135, inlinedAt: !13136)
!13142 = !DILocation(line: 101, column: 2, scope: !13138)
!13143 = !DILocation(line: 101, column: 2, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13137, file: !2320, line: 101, column: 2)
!13145 = !DILocalVariable(name: "l", arg: 1, scope: !13146, file: !254, line: 136, type: !13149)
!13146 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !13147, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13150)
!13147 = !DISubroutineType(types: !13148)
!13148 = !{!13120, !13149}
!13149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!13150 = !{!13145, !13151}
!13151 = !DILocalVariable(name: "k", scope: !13146, file: !254, line: 139, type: !13120)
!13152 = !DILocation(line: 0, scope: !13146, inlinedAt: !13153)
!13153 = distinct !DILocation(line: 105, column: 8, scope: !13108)
!13154 = !DILocation(line: 55, column: 2, scope: !13155, inlinedAt: !13159)
!13155 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5970, file: !5970, line: 42, type: !5971, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13156)
!13156 = !{!13157, !13158}
!13157 = !DILocalVariable(name: "key", scope: !13155, file: !5970, line: 44, type: !32)
!13158 = !DILocalVariable(name: "tmp", scope: !13155, file: !5970, line: 53, type: !32)
!13159 = distinct !DILocation(line: 145, column: 10, scope: !13146, inlinedAt: !13153)
!13160 = !{i64 1954941}
!13161 = !DILocation(line: 0, scope: !13155, inlinedAt: !13159)
!13162 = !DILocation(line: 148, column: 2, scope: !13163, inlinedAt: !13153)
!13163 = distinct !DILexicalBlock(scope: !13164, file: !254, line: 148, column: 2)
!13164 = distinct !DILexicalBlock(scope: !13146, file: !254, line: 148, column: 2)
!13165 = !DILocation(line: 148, column: 2, scope: !13164, inlinedAt: !13153)
!13166 = !DILocation(line: 148, column: 2, scope: !13167, inlinedAt: !13153)
!13167 = distinct !DILexicalBlock(scope: !13163, file: !254, line: 148, column: 2)
!13168 = !DILocation(line: 160, column: 2, scope: !13146, inlinedAt: !13153)
!13169 = !DILocation(line: 107, column: 6, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13108, file: !2320, line: 107, column: 6)
!13171 = !DILocation(line: 107, column: 6, scope: !13108)
!13172 = !{!"branch_weights", i32 2000, i32 1}
!13173 = !DILocation(line: 110, column: 6, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13170, file: !2320, line: 107, column: 71)
!13175 = !DILocation(line: 110, column: 21, scope: !13174)
!13176 = !DILocation(line: 109, column: 28, scope: !13174)
!13177 = !DILocation(line: 111, column: 13, scope: !13174)
!13178 = !DILocation(line: 114, column: 18, scope: !13174)
!13179 = !DILocation(line: 109, column: 10, scope: !13174)
!13180 = !DILocation(line: 109, column: 26, scope: !13174)
!13181 = !DILocation(line: 113, column: 20, scope: !13174)
!13182 = !DILocation(line: 114, column: 10, scope: !13174)
!13183 = !DILocation(line: 114, column: 16, scope: !13174)
!13184 = !DILocalVariable(name: "key", arg: 2, scope: !13185, file: !254, line: 190, type: !13120)
!13185 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !13186, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13188)
!13186 = !DISubroutineType(types: !13187)
!13187 = !{null, !13149, !13120}
!13188 = !{!13189, !13184}
!13189 = !DILocalVariable(name: "l", arg: 1, scope: !13185, file: !254, line: 189, type: !13149)
!13190 = !DILocation(line: 0, scope: !13185, inlinedAt: !13191)
!13191 = distinct !DILocation(line: 120, column: 3, scope: !13174)
!13192 = !DILocation(line: 194, column: 2, scope: !13193, inlinedAt: !13191)
!13193 = distinct !DILexicalBlock(scope: !13194, file: !254, line: 194, column: 2)
!13194 = distinct !DILexicalBlock(scope: !13185, file: !254, line: 194, column: 2)
!13195 = !DILocation(line: 194, column: 2, scope: !13194, inlinedAt: !13191)
!13196 = !DILocation(line: 194, column: 2, scope: !13197, inlinedAt: !13191)
!13197 = distinct !DILexicalBlock(scope: !13193, file: !254, line: 194, column: 2)
!13198 = !DILocalVariable(name: "key", arg: 1, scope: !13199, file: !5970, line: 84, type: !32)
!13199 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5970, file: !5970, line: 84, type: !5981, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13200)
!13200 = !{!13198}
!13201 = !DILocation(line: 0, scope: !13199, inlinedAt: !13202)
!13202 = distinct !DILocation(line: 215, column: 2, scope: !13185, inlinedAt: !13191)
!13203 = !DILocation(line: 95, column: 2, scope: !13199, inlinedAt: !13202)
!13204 = !{i64 1955758}
!13205 = !DILocation(line: 124, column: 3, scope: !13174)
!13206 = !DILocation(line: 127, column: 6, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13108, file: !2320, line: 127, column: 6)
!13208 = !DILocation(line: 127, column: 6, scope: !13108)
!13209 = !{!"branch_weights", i32 1, i32 2000}
!13210 = !DILocation(line: 0, scope: !13185, inlinedAt: !13211)
!13211 = distinct !DILocation(line: 128, column: 3, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13207, file: !2320, line: 127, column: 50)
!13213 = !DILocation(line: 194, column: 2, scope: !13193, inlinedAt: !13211)
!13214 = !DILocation(line: 194, column: 2, scope: !13194, inlinedAt: !13211)
!13215 = !DILocation(line: 194, column: 2, scope: !13197, inlinedAt: !13211)
!13216 = !DILocation(line: 0, scope: !13199, inlinedAt: !13217)
!13217 = distinct !DILocation(line: 215, column: 2, scope: !13185, inlinedAt: !13211)
!13218 = !DILocation(line: 95, column: 2, scope: !13199, inlinedAt: !13217)
!13219 = !DILocation(line: 132, column: 3, scope: !13212)
!13220 = !DILocation(line: 137, column: 53, scope: !13108)
!13221 = !DILocation(line: 137, column: 38, scope: !13108)
!13222 = !DILocation(line: 138, column: 29, scope: !13108)
!13223 = !DILocation(line: 138, column: 10, scope: !13108)
!13224 = !DILocation(line: 137, column: 13, scope: !13108)
!13225 = !DILocation(line: 142, column: 6, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13108, file: !2320, line: 142, column: 6)
!13227 = !DILocation(line: 142, column: 6, scope: !13108)
!13228 = !DILocation(line: 143, column: 13, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13226, file: !2320, line: 142, column: 59)
!13230 = !DILocation(line: 144, column: 2, scope: !13229)
!13231 = !DILocation(line: 146, column: 50, scope: !13108)
!13232 = !DILocation(line: 146, column: 18, scope: !13108)
!13233 = !DILocation(line: 153, column: 16, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13108, file: !2320, line: 153, column: 6)
!13235 = !DILocation(line: 153, column: 6, scope: !13108)
!13236 = !DILocation(line: 0, scope: !13146, inlinedAt: !13237)
!13237 = distinct !DILocation(line: 162, column: 8, scope: !13108)
!13238 = !DILocation(line: 55, column: 2, scope: !13155, inlinedAt: !13239)
!13239 = distinct !DILocation(line: 145, column: 10, scope: !13146, inlinedAt: !13237)
!13240 = !DILocation(line: 0, scope: !13155, inlinedAt: !13239)
!13241 = !DILocation(line: 148, column: 2, scope: !13163, inlinedAt: !13237)
!13242 = !DILocation(line: 148, column: 2, scope: !13164, inlinedAt: !13237)
!13243 = !DILocation(line: 148, column: 2, scope: !13167, inlinedAt: !13237)
!13244 = !DILocation(line: 160, column: 2, scope: !13146, inlinedAt: !13237)
!13245 = !DILocation(line: 168, column: 6, scope: !13128)
!13246 = !DILocation(line: 168, column: 6, scope: !13108)
!13247 = !DILocation(line: 169, column: 29, scope: !13127)
!13248 = !DILocation(line: 0, scope: !13127)
!13249 = !DILocation(line: 171, column: 22, scope: !13127)
!13250 = !DILocation(line: 171, column: 14, scope: !13127)
!13251 = !DILocation(line: 172, column: 42, scope: !13127)
!13252 = !DILocation(line: 172, column: 29, scope: !13127)
!13253 = !DILocation(line: 172, column: 55, scope: !13127)
!13254 = !DILocation(line: 172, column: 4, scope: !13127)
!13255 = !DILocation(line: 173, column: 11, scope: !13127)
!13256 = !DILocation(line: 177, column: 13, scope: !13127)
!13257 = !DILocation(line: 177, column: 48, scope: !13127)
!13258 = !DILocation(line: 180, column: 6, scope: !13108)
!13259 = !DILocation(line: 181, column: 3, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13261, file: !2320, line: 180, column: 15)
!13261 = distinct !DILexicalBlock(scope: !13108, file: !2320, line: 180, column: 6)
!13262 = !DILocation(line: 182, column: 2, scope: !13260)
!13263 = !DILocation(line: 0, scope: !13185, inlinedAt: !13264)
!13264 = distinct !DILocation(line: 183, column: 3, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13261, file: !2320, line: 182, column: 9)
!13266 = !DILocation(line: 194, column: 2, scope: !13193, inlinedAt: !13264)
!13267 = !DILocation(line: 194, column: 2, scope: !13194, inlinedAt: !13264)
!13268 = !DILocation(line: 194, column: 2, scope: !13197, inlinedAt: !13264)
!13269 = !DILocation(line: 0, scope: !13199, inlinedAt: !13270)
!13270 = distinct !DILocation(line: 215, column: 2, scope: !13185, inlinedAt: !13264)
!13271 = !DILocation(line: 95, column: 2, scope: !13199, inlinedAt: !13270)
!13272 = !DILocation(line: 189, column: 1, scope: !13108)
!13273 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2320, file: !2320, line: 72, type: !13274, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13276)
!13274 = !DISubroutineType(types: !13275)
!13275 = !{!736, !736, !736}
!13276 = !{!13277, !13278, !13279}
!13277 = !DILocalVariable(name: "target", arg: 1, scope: !13273, file: !2320, line: 72, type: !736)
!13278 = !DILocalVariable(name: "limit", arg: 2, scope: !13273, file: !2320, line: 72, type: !736)
!13279 = !DILocalVariable(name: "new_prio", scope: !13273, file: !2320, line: 74, type: !109)
!13280 = !DILocation(line: 0, scope: !13273)
!13281 = !DILocation(line: 74, column: 17, scope: !13273)
!13282 = !DILocation(line: 76, column: 13, scope: !13273)
!13283 = !DILocation(line: 78, column: 2, scope: !13273)
!13284 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12086, file: !12086, line: 211, type: !13285, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13287)
!13285 = !DISubroutineType(types: !13286)
!13286 = !{!334, !109, !109}
!13287 = !{!13288, !13289}
!13288 = !DILocalVariable(name: "prio", arg: 1, scope: !13284, file: !12086, line: 211, type: !109)
!13289 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13284, file: !12086, line: 211, type: !109)
!13290 = !DILocation(line: 0, scope: !13284)
!13291 = !DILocation(line: 213, column: 9, scope: !13284)
!13292 = !DILocation(line: 213, column: 2, scope: !13284)
!13293 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2320, file: !2320, line: 81, type: !13294, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13296)
!13294 = !DISubroutineType(types: !13295)
!13295 = !{!334, !13070, !736}
!13296 = !{!13297, !13298}
!13297 = !DILocalVariable(name: "mutex", arg: 1, scope: !13293, file: !2320, line: 81, type: !13070)
!13298 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13293, file: !2320, line: 81, type: !736)
!13299 = !DILocation(line: 0, scope: !13293)
!13300 = !DILocation(line: 83, column: 13, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13293, file: !2320, line: 83, column: 6)
!13302 = !DILocation(line: 83, column: 25, scope: !13301)
!13303 = !DILocation(line: 83, column: 6, scope: !13301)
!13304 = !DILocation(line: 83, column: 30, scope: !13301)
!13305 = !DILocation(line: 83, column: 6, scope: !13293)
!13306 = !DILocation(line: 90, column: 10, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13301, file: !2320, line: 83, column: 43)
!13308 = !DILocation(line: 90, column: 3, scope: !13307)
!13309 = !DILocation(line: 93, column: 1, scope: !13293)
!13310 = distinct !DISubprogram(name: "z_waitq_head", scope: !12690, file: !12690, line: 52, type: !13311, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13313)
!13311 = !DISubroutineType(types: !13312)
!13312 = !{!2222, !2239}
!13313 = !{!13314}
!13314 = !DILocalVariable(name: "w", arg: 1, scope: !13310, file: !12690, line: 52, type: !2239)
!13315 = !DILocation(line: 0, scope: !13310)
!13316 = !DILocation(line: 54, column: 52, scope: !13310)
!13317 = !DILocation(line: 54, column: 28, scope: !13310)
!13318 = !DILocation(line: 54, column: 9, scope: !13310)
!13319 = !DILocation(line: 54, column: 2, scope: !13310)
!13320 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !13321, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13323)
!13321 = !DISubroutineType(types: !13322)
!13322 = !{!2207, !13099}
!13323 = !{!13324}
!13324 = !DILocalVariable(name: "list", arg: 1, scope: !13320, file: !128, line: 294, type: !13099)
!13325 = !DILocation(line: 0, scope: !13320)
!13326 = !DILocation(line: 296, column: 9, scope: !13320)
!13327 = !DILocation(line: 296, column: 49, scope: !13320)
!13328 = !DILocation(line: 296, column: 2, scope: !13320)
!13329 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !13330, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13332)
!13330 = !DISubroutineType(types: !13331)
!13331 = !{!334, !13099}
!13332 = !{!13333}
!13333 = !DILocalVariable(name: "list", arg: 1, scope: !13329, file: !128, line: 266, type: !13099)
!13334 = !DILocation(line: 0, scope: !13329)
!13335 = !DILocation(line: 268, column: 15, scope: !13329)
!13336 = !DILocation(line: 268, column: 20, scope: !13329)
!13337 = !DILocation(line: 268, column: 2, scope: !13329)
!13338 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12086, file: !12086, line: 206, type: !13285, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13339)
!13339 = !{!13340, !13341}
!13340 = !DILocalVariable(name: "prio1", arg: 1, scope: !13338, file: !12086, line: 206, type: !109)
!13341 = !DILocalVariable(name: "prio2", arg: 2, scope: !13338, file: !12086, line: 206, type: !109)
!13342 = !DILocation(line: 0, scope: !13338)
!13343 = !DILocation(line: 208, column: 15, scope: !13338)
!13344 = !DILocation(line: 208, column: 2, scope: !13338)
!13345 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12086, file: !12086, line: 186, type: !288, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13346)
!13346 = !{!13347}
!13347 = !DILocalVariable(name: "prio", arg: 1, scope: !13345, file: !12086, line: 186, type: !109)
!13348 = !DILocation(line: 0, scope: !13345)
!13349 = !DILocation(line: 188, column: 9, scope: !13345)
!13350 = !DILocation(line: 188, column: 2, scope: !13345)
!13351 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12086, file: !12086, line: 181, type: !13352, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13354)
!13352 = !DISubroutineType(types: !13353)
!13353 = !{!334, !109}
!13354 = !{!13355}
!13355 = !DILocalVariable(name: "prio", arg: 1, scope: !13351, file: !12086, line: 181, type: !109)
!13356 = !DILocation(line: 0, scope: !13351)
!13357 = !DILocation(line: 183, column: 14, scope: !13351)
!13358 = !DILocation(line: 183, column: 2, scope: !13351)
!13359 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2320, file: !2320, line: 201, type: !13068, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13360)
!13360 = !{!13361, !13362, !13363, !13364}
!13361 = !DILocalVariable(name: "mutex", arg: 1, scope: !13359, file: !2320, line: 201, type: !13070)
!13362 = !DILocalVariable(name: "new_owner", scope: !13359, file: !2320, line: 203, type: !2222)
!13363 = !DILocalVariable(name: "key", scope: !13359, file: !2320, line: 242, type: !13120)
!13364 = !DILabel(scope: !13359, name: "k_mutex_unlock_return", file: !2320, line: 270)
!13365 = !DILocation(line: 0, scope: !13359)
!13366 = !DILocation(line: 1031, column: 3, scope: !13131, inlinedAt: !13367)
!13367 = distinct !DILocation(line: 48, column: 10, scope: !13135, inlinedAt: !13368)
!13368 = distinct !DILocation(line: 205, column: 2, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13370, file: !2320, line: 205, column: 2)
!13370 = distinct !DILexicalBlock(scope: !13359, file: !2320, line: 205, column: 2)
!13371 = !DILocation(line: 0, scope: !13131, inlinedAt: !13367)
!13372 = !DILocation(line: 48, column: 9, scope: !13135, inlinedAt: !13368)
!13373 = !DILocation(line: 205, column: 2, scope: !13370)
!13374 = !DILocation(line: 205, column: 2, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13369, file: !2320, line: 205, column: 2)
!13376 = !DILocation(line: 209, column: 2, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13359, file: !2320, line: 209, column: 2)
!13378 = !DILocation(line: 209, column: 2, scope: !13359)
!13379 = !DILocation(line: 217, column: 2, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13359, file: !2320, line: 217, column: 2)
!13381 = !DILocation(line: 217, column: 2, scope: !13359)
!13382 = !DILocation(line: 229, column: 2, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13384, file: !2320, line: 229, column: 2)
!13384 = distinct !DILexicalBlock(scope: !13359, file: !2320, line: 229, column: 2)
!13385 = !DILocation(line: 229, column: 2, scope: !13384)
!13386 = !DILocation(line: 229, column: 2, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13383, file: !2320, line: 229, column: 2)
!13388 = !DILocation(line: 238, column: 20, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13390, file: !2320, line: 237, column: 30)
!13390 = distinct !DILexicalBlock(scope: !13359, file: !2320, line: 237, column: 6)
!13391 = !DILocation(line: 239, column: 3, scope: !13389)
!13392 = !DILocation(line: 0, scope: !13146, inlinedAt: !13393)
!13393 = distinct !DILocation(line: 242, column: 25, scope: !13359)
!13394 = !DILocation(line: 55, column: 2, scope: !13155, inlinedAt: !13395)
!13395 = distinct !DILocation(line: 145, column: 10, scope: !13146, inlinedAt: !13393)
!13396 = !DILocation(line: 0, scope: !13155, inlinedAt: !13395)
!13397 = !DILocation(line: 148, column: 2, scope: !13163, inlinedAt: !13393)
!13398 = !DILocation(line: 148, column: 2, scope: !13164, inlinedAt: !13393)
!13399 = !DILocation(line: 148, column: 2, scope: !13167, inlinedAt: !13393)
!13400 = !DILocation(line: 160, column: 2, scope: !13146, inlinedAt: !13393)
!13401 = !DILocation(line: 244, column: 34, scope: !13359)
!13402 = !DILocation(line: 244, column: 2, scope: !13359)
!13403 = !DILocation(line: 247, column: 44, scope: !13359)
!13404 = !DILocation(line: 247, column: 14, scope: !13359)
!13405 = !DILocation(line: 249, column: 15, scope: !13359)
!13406 = !DILocation(line: 254, column: 16, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13359, file: !2320, line: 254, column: 6)
!13408 = !DILocation(line: 254, column: 6, scope: !13359)
!13409 = !DILocation(line: 260, column: 44, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13407, file: !2320, line: 254, column: 25)
!13411 = !DILocation(line: 260, column: 28, scope: !13410)
!13412 = !DILocation(line: 260, column: 26, scope: !13410)
!13413 = !DILocalVariable(name: "thread", arg: 1, scope: !13414, file: !12106, line: 65, type: !2222)
!13414 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12106, file: !12106, line: 65, type: !13415, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13417)
!13415 = !DISubroutineType(types: !13416)
!13416 = !{null, !2222, !32}
!13417 = !{!13413, !13418}
!13418 = !DILocalVariable(name: "value", arg: 2, scope: !13414, file: !12106, line: 65, type: !32)
!13419 = !DILocation(line: 0, scope: !13414, inlinedAt: !13420)
!13420 = distinct !DILocation(line: 261, column: 3, scope: !13410)
!13421 = !DILocation(line: 67, column: 15, scope: !13414, inlinedAt: !13420)
!13422 = !DILocation(line: 67, column: 33, scope: !13414, inlinedAt: !13420)
!13423 = !DILocation(line: 262, column: 3, scope: !13410)
!13424 = !DILocation(line: 263, column: 3, scope: !13410)
!13425 = !DILocation(line: 264, column: 2, scope: !13410)
!13426 = !DILocation(line: 265, column: 21, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13407, file: !2320, line: 264, column: 9)
!13428 = !DILocation(line: 0, scope: !13185, inlinedAt: !13429)
!13429 = distinct !DILocation(line: 266, column: 3, scope: !13427)
!13430 = !DILocation(line: 194, column: 2, scope: !13193, inlinedAt: !13429)
!13431 = !DILocation(line: 194, column: 2, scope: !13194, inlinedAt: !13429)
!13432 = !DILocation(line: 194, column: 2, scope: !13197, inlinedAt: !13429)
!13433 = !DILocation(line: 0, scope: !13199, inlinedAt: !13434)
!13434 = distinct !DILocation(line: 215, column: 2, scope: !13185, inlinedAt: !13429)
!13435 = !DILocation(line: 95, column: 2, scope: !13199, inlinedAt: !13434)
!13436 = !DILocation(line: 274, column: 1, scope: !13359)
!13437 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2441, file: !2441, line: 93, type: !13438, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13440)
!13438 = !DISubroutineType(types: !13439)
!13439 = !{!736, !2326, !2326}
!13440 = !{!13441, !13442, !13443, !13444}
!13441 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13437, file: !2441, line: 93, type: !2326)
!13442 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13437, file: !2441, line: 94, type: !2326)
!13443 = !DILocalVariable(name: "b1", scope: !13437, file: !2441, line: 97, type: !736)
!13444 = !DILocalVariable(name: "b2", scope: !13437, file: !2441, line: 98, type: !736)
!13445 = !DILocation(line: 0, scope: !13437)
!13446 = !DILocation(line: 97, column: 30, scope: !13437)
!13447 = !DILocation(line: 98, column: 30, scope: !13437)
!13448 = !DILocation(line: 100, column: 9, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13437, file: !2441, line: 100, column: 6)
!13450 = !DILocation(line: 100, column: 6, scope: !13437)
!13451 = !DILocation(line: 125, column: 1, scope: !13437)
!13452 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2441, file: !2441, line: 428, type: !13453, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13455)
!13453 = !DISubroutineType(types: !13454)
!13454 = !{null, !2326}
!13455 = !{!13456}
!13456 = !DILocalVariable(name: "curr", arg: 1, scope: !13452, file: !2441, line: 428, type: !2326)
!13457 = !DILocation(line: 0, scope: !13452)
!13458 = !DILocation(line: 434, column: 6, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13452, file: !2441, line: 434, column: 6)
!13460 = !DILocation(line: 434, column: 23, scope: !13459)
!13461 = !DILocation(line: 434, column: 6, scope: !13452)
!13462 = !DILocation(line: 435, column: 50, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13459, file: !2441, line: 434, column: 29)
!13464 = !DILocation(line: 435, column: 48, scope: !13463)
!13465 = !DILocation(line: 435, column: 29, scope: !13463)
!13466 = !DILocation(line: 436, column: 24, scope: !13463)
!13467 = !DILocation(line: 436, column: 3, scope: !13463)
!13468 = !DILocation(line: 437, column: 2, scope: !13463)
!13469 = !DILocation(line: 438, column: 1, scope: !13452)
!13470 = distinct !DISubprogram(name: "slice_time", scope: !2441, file: !2441, line: 407, type: !13471, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13473)
!13471 = !DISubroutineType(types: !13472)
!13472 = !{!109, !2326}
!13473 = !{!13474, !13475}
!13474 = !DILocalVariable(name: "curr", arg: 1, scope: !13470, file: !2441, line: 407, type: !2326)
!13475 = !DILocalVariable(name: "ret", scope: !13470, file: !2441, line: 409, type: !109)
!13476 = !DILocation(line: 0, scope: !13470)
!13477 = !DILocation(line: 409, column: 12, scope: !13470)
!13478 = !DILocation(line: 416, column: 2, scope: !13470)
!13479 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2441, file: !2441, line: 440, type: !13480, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13482)
!13480 = !DISubroutineType(types: !13481)
!13481 = !{null, !736, !109}
!13482 = !{!13483, !13484, !13485, !13491}
!13483 = !DILocalVariable(name: "slice", arg: 1, scope: !13479, file: !2441, line: 440, type: !736)
!13484 = !DILocalVariable(name: "prio", arg: 2, scope: !13479, file: !2441, line: 440, type: !109)
!13485 = !DILocalVariable(name: "__i", scope: !13486, file: !2441, line: 442, type: !13487)
!13486 = distinct !DILexicalBlock(scope: !13479, file: !2441, line: 442, column: 2)
!13487 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !13488)
!13488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !13489)
!13489 = !{!13490}
!13490 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13488, file: !254, line: 33, baseType: !109, size: 32)
!13491 = !DILocalVariable(name: "__key", scope: !13486, file: !2441, line: 442, type: !13487)
!13492 = !DILocation(line: 0, scope: !13479)
!13493 = !DILocation(line: 0, scope: !13486)
!13494 = !DILocalVariable(name: "l", arg: 1, scope: !13495, file: !254, line: 136, type: !13498)
!13495 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !13496, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13499)
!13496 = !DISubroutineType(types: !13497)
!13497 = !{!13487, !13498}
!13498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!13499 = !{!13494, !13500}
!13500 = !DILocalVariable(name: "k", scope: !13495, file: !254, line: 139, type: !13487)
!13501 = !DILocation(line: 0, scope: !13495, inlinedAt: !13502)
!13502 = distinct !DILocation(line: 442, column: 2, scope: !13486)
!13503 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !13508)
!13504 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5970, file: !5970, line: 42, type: !5971, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13505)
!13505 = !{!13506, !13507}
!13506 = !DILocalVariable(name: "key", scope: !13504, file: !5970, line: 44, type: !32)
!13507 = !DILocalVariable(name: "tmp", scope: !13504, file: !5970, line: 53, type: !32)
!13508 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !13502)
!13509 = !{i64 1994504}
!13510 = !DILocation(line: 0, scope: !13504, inlinedAt: !13508)
!13511 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !13502)
!13512 = distinct !DILexicalBlock(scope: !13513, file: !254, line: 148, column: 2)
!13513 = distinct !DILexicalBlock(scope: !13495, file: !254, line: 148, column: 2)
!13514 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !13502)
!13515 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !13502)
!13516 = distinct !DILexicalBlock(scope: !13512, file: !254, line: 148, column: 2)
!13517 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !13502)
!13518 = !DILocation(line: 443, column: 29, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13520, file: !2441, line: 442, column: 26)
!13520 = distinct !DILexicalBlock(scope: !13486, file: !2441, line: 442, column: 2)
!13521 = !DILocation(line: 444, column: 17, scope: !13519)
!13522 = !DILocation(line: 445, column: 51, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13519, file: !2441, line: 445, column: 7)
!13524 = !DILocation(line: 445, column: 7, scope: !13519)
!13525 = !DILocation(line: 0, scope: !13519)
!13526 = !DILocation(line: 451, column: 18, scope: !13519)
!13527 = !DILocation(line: 452, column: 3, scope: !13519)
!13528 = !DILocalVariable(name: "key", arg: 2, scope: !13529, file: !254, line: 190, type: !13487)
!13529 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !13530, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13532)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{null, !13498, !13487}
!13532 = !{!13533, !13528}
!13533 = !DILocalVariable(name: "l", arg: 1, scope: !13529, file: !254, line: 189, type: !13498)
!13534 = !DILocation(line: 0, scope: !13529, inlinedAt: !13535)
!13535 = distinct !DILocation(line: 442, column: 2, scope: !13520)
!13536 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !13535)
!13537 = distinct !DILexicalBlock(scope: !13538, file: !254, line: 194, column: 2)
!13538 = distinct !DILexicalBlock(scope: !13529, file: !254, line: 194, column: 2)
!13539 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !13535)
!13540 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !13535)
!13541 = distinct !DILexicalBlock(scope: !13537, file: !254, line: 194, column: 2)
!13542 = !DILocalVariable(name: "key", arg: 1, scope: !13543, file: !5970, line: 84, type: !32)
!13543 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5970, file: !5970, line: 84, type: !5981, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13544)
!13544 = !{!13542}
!13545 = !DILocation(line: 0, scope: !13543, inlinedAt: !13546)
!13546 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !13535)
!13547 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !13546)
!13548 = !{i64 1995321}
!13549 = !DILocation(line: 454, column: 1, scope: !13479)
!13550 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3324, file: !3324, line: 389, type: !7206, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13551)
!13551 = !{!13552}
!13552 = !DILocalVariable(name: "t", arg: 1, scope: !13550, file: !3324, line: 389, type: !110)
!13553 = !DILocation(line: 0, scope: !13550)
!13554 = !DILocalVariable(name: "t", arg: 1, scope: !13555, file: !3324, line: 102, type: !111)
!13555 = distinct !DISubprogram(name: "z_tmcvt", scope: !3324, file: !3324, line: 102, type: !3332, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13556)
!13556 = !{!13554, !13557, !13558, !13559, !13560, !13561, !13562, !13563, !13564, !13565, !13566}
!13557 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13555, file: !3324, line: 102, type: !110)
!13558 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13555, file: !3324, line: 103, type: !110)
!13559 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13555, file: !3324, line: 103, type: !334)
!13560 = !DILocalVariable(name: "result32", arg: 5, scope: !13555, file: !3324, line: 104, type: !334)
!13561 = !DILocalVariable(name: "round_up", arg: 6, scope: !13555, file: !3324, line: 104, type: !334)
!13562 = !DILocalVariable(name: "round_off", arg: 7, scope: !13555, file: !3324, line: 105, type: !334)
!13563 = !DILocalVariable(name: "mul_ratio", scope: !13555, file: !3324, line: 107, type: !334)
!13564 = !DILocalVariable(name: "div_ratio", scope: !13555, file: !3324, line: 109, type: !334)
!13565 = !DILocalVariable(name: "off", scope: !13555, file: !3324, line: 116, type: !111)
!13566 = !DILocalVariable(name: "rdivisor", scope: !13567, file: !3324, line: 119, type: !110)
!13567 = distinct !DILexicalBlock(scope: !13568, file: !3324, line: 118, column: 18)
!13568 = distinct !DILexicalBlock(scope: !13555, file: !3324, line: 118, column: 6)
!13569 = !DILocation(line: 0, scope: !13555, inlinedAt: !13570)
!13570 = distinct !DILocation(line: 392, column: 9, scope: !13550)
!13571 = !DILocation(line: 143, column: 25, scope: !13572, inlinedAt: !13570)
!13572 = distinct !DILexicalBlock(scope: !13573, file: !3324, line: 142, column: 17)
!13573 = distinct !DILexicalBlock(scope: !13574, file: !3324, line: 142, column: 7)
!13574 = distinct !DILexicalBlock(scope: !13575, file: !3324, line: 141, column: 24)
!13575 = distinct !DILexicalBlock(scope: !13576, file: !3324, line: 141, column: 13)
!13576 = distinct !DILexicalBlock(scope: !13555, file: !3324, line: 134, column: 6)
!13577 = !DILocation(line: 392, column: 2, scope: !13550)
!13578 = distinct !DISubprogram(name: "z_time_slice", scope: !2441, file: !2441, line: 502, type: !3414, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13579)
!13579 = !{!13580, !13581}
!13580 = !DILocalVariable(name: "ticks", arg: 1, scope: !13578, file: !2441, line: 502, type: !109)
!13581 = !DILocalVariable(name: "key", scope: !13578, file: !2441, line: 511, type: !13487)
!13582 = !DILocation(line: 0, scope: !13578)
!13583 = !DILocation(line: 0, scope: !13495, inlinedAt: !13584)
!13584 = distinct !DILocation(line: 511, column: 25, scope: !13578)
!13585 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !13586)
!13586 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !13584)
!13587 = !DILocation(line: 0, scope: !13504, inlinedAt: !13586)
!13588 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !13584)
!13589 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !13584)
!13590 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !13584)
!13591 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !13584)
!13592 = !DILocation(line: 514, column: 6, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13578, file: !2441, line: 514, column: 6)
!13594 = !DILocation(line: 514, column: 25, scope: !13593)
!13595 = !DILocation(line: 514, column: 22, scope: !13593)
!13596 = !DILocation(line: 514, column: 6, scope: !13578)
!13597 = !DILocation(line: 515, column: 3, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13593, file: !2441, line: 514, column: 35)
!13599 = !DILocation(line: 0, scope: !13529, inlinedAt: !13600)
!13600 = distinct !DILocation(line: 516, column: 3, scope: !13598)
!13601 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !13600)
!13602 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !13600)
!13603 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !13600)
!13604 = !DILocation(line: 0, scope: !13543, inlinedAt: !13605)
!13605 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !13600)
!13606 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !13605)
!13607 = !DILocation(line: 517, column: 3, scope: !13598)
!13608 = !DILocation(line: 519, column: 18, scope: !13578)
!13609 = !DILocation(line: 522, column: 6, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13578, file: !2441, line: 522, column: 6)
!13611 = !DILocation(line: 522, column: 27, scope: !13610)
!13612 = !DILocation(line: 522, column: 30, scope: !13610)
!13613 = !DILocation(line: 522, column: 6, scope: !13578)
!13614 = !DILocation(line: 523, column: 30, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13616, file: !2441, line: 523, column: 7)
!13616 = distinct !DILexicalBlock(scope: !13610, file: !2441, line: 522, column: 51)
!13617 = !DILocation(line: 523, column: 13, scope: !13615)
!13618 = !DILocation(line: 523, column: 7, scope: !13616)
!13619 = !DILocation(line: 530, column: 10, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13615, file: !2441, line: 523, column: 43)
!13621 = !DILocation(line: 531, column: 3, scope: !13620)
!13622 = !DILocation(line: 532, column: 30, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13615, file: !2441, line: 531, column: 10)
!13624 = !DILocation(line: 535, column: 29, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13610, file: !2441, line: 534, column: 9)
!13626 = !DILocation(line: 0, scope: !13529, inlinedAt: !13627)
!13627 = distinct !DILocation(line: 537, column: 2, scope: !13578)
!13628 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !13627)
!13629 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !13627)
!13630 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !13627)
!13631 = !DILocation(line: 0, scope: !13543, inlinedAt: !13632)
!13632 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !13627)
!13633 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !13632)
!13634 = !DILocation(line: 538, column: 1, scope: !13578)
!13635 = distinct !DISubprogram(name: "sliceable", scope: !2441, file: !2441, line: 468, type: !13636, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13638)
!13636 = !DISubroutineType(types: !13637)
!13637 = !{!334, !2326}
!13638 = !{!13639, !13640}
!13639 = !DILocalVariable(name: "thread", arg: 1, scope: !13635, file: !2441, line: 468, type: !2326)
!13640 = !DILocalVariable(name: "ret", scope: !13635, file: !2441, line: 470, type: !334)
!13641 = !DILocation(line: 0, scope: !13635)
!13642 = !DILocation(line: 470, column: 13, scope: !13635)
!13643 = !DILocation(line: 471, column: 3, scope: !13635)
!13644 = !DILocation(line: 471, column: 7, scope: !13635)
!13645 = !DILocation(line: 472, column: 3, scope: !13635)
!13646 = !DILocation(line: 472, column: 37, scope: !13635)
!13647 = !DILocation(line: 472, column: 24, scope: !13635)
!13648 = !DILocation(line: 472, column: 43, scope: !13635)
!13649 = !DILocation(line: 472, column: 7, scope: !13635)
!13650 = !DILocation(line: 473, column: 3, scope: !13635)
!13651 = !DILocation(line: 473, column: 7, scope: !13635)
!13652 = !DILocation(line: 473, column: 6, scope: !13635)
!13653 = !DILocation(line: 479, column: 2, scope: !13635)
!13654 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2441, file: !2441, line: 482, type: !13655, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13657)
!13655 = !DISubroutineType(types: !13656)
!13656 = !{!13487, !13487}
!13657 = !{!13658, !13659}
!13658 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13654, file: !2441, line: 482, type: !13487)
!13659 = !DILocalVariable(name: "curr", scope: !13654, file: !2441, line: 484, type: !2326)
!13660 = !DILocation(line: 0, scope: !13654)
!13661 = !DILocation(line: 484, column: 26, scope: !13654)
!13662 = !DILocation(line: 493, column: 7, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13654, file: !2441, line: 493, column: 6)
!13664 = !DILocation(line: 493, column: 6, scope: !13654)
!13665 = !DILocation(line: 494, column: 3, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13663, file: !2441, line: 493, column: 49)
!13667 = !DILocation(line: 495, column: 2, scope: !13666)
!13668 = !DILocation(line: 496, column: 2, scope: !13654)
!13669 = !DILocation(line: 499, column: 1, scope: !13654)
!13670 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12086, file: !12086, line: 106, type: !13636, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13671)
!13671 = !{!13672, !13673}
!13672 = !DILocalVariable(name: "thread", arg: 1, scope: !13670, file: !12086, line: 106, type: !2326)
!13673 = !DILocalVariable(name: "state", scope: !13670, file: !12086, line: 108, type: !167)
!13674 = !DILocation(line: 0, scope: !13670)
!13675 = !DILocation(line: 108, column: 31, scope: !13670)
!13676 = !DILocation(line: 110, column: 16, scope: !13670)
!13677 = !DILocation(line: 111, column: 41, scope: !13670)
!13678 = !DILocation(line: 110, column: 2, scope: !13670)
!13679 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2441, file: !2441, line: 393, type: !13453, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13680)
!13680 = !{!13681}
!13681 = !DILocalVariable(name: "thread", arg: 1, scope: !13679, file: !2441, line: 393, type: !2326)
!13682 = !DILocation(line: 0, scope: !13679)
!13683 = !DILocation(line: 395, column: 6, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13679, file: !2441, line: 395, column: 6)
!13685 = !DILocation(line: 395, column: 6, scope: !13679)
!13686 = !DILocalVariable(name: "thread", arg: 1, scope: !13687, file: !2441, line: 264, type: !2326)
!13687 = distinct !DISubprogram(name: "dequeue_thread", scope: !2441, file: !2441, line: 264, type: !13453, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13688)
!13688 = !{!13686}
!13689 = !DILocation(line: 0, scope: !13687, inlinedAt: !13690)
!13690 = distinct !DILocation(line: 396, column: 3, scope: !13691)
!13691 = distinct !DILexicalBlock(scope: !13684, file: !2441, line: 395, column: 34)
!13692 = !DILocation(line: 266, column: 15, scope: !13687, inlinedAt: !13690)
!13693 = !DILocation(line: 266, column: 28, scope: !13687, inlinedAt: !13690)
!13694 = !DILocalVariable(name: "thread", arg: 1, scope: !13695, file: !2441, line: 232, type: !2326)
!13695 = distinct !DISubprogram(name: "runq_remove", scope: !2441, file: !2441, line: 232, type: !13453, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13696)
!13696 = !{!13694}
!13697 = !DILocation(line: 0, scope: !13695, inlinedAt: !13698)
!13698 = distinct !DILocation(line: 268, column: 3, scope: !13699, inlinedAt: !13690)
!13699 = distinct !DILexicalBlock(scope: !13700, file: !2441, line: 267, column: 35)
!13700 = distinct !DILexicalBlock(scope: !13687, file: !2441, line: 267, column: 6)
!13701 = !DILocation(line: 234, column: 2, scope: !13695, inlinedAt: !13698)
!13702 = !DILocation(line: 397, column: 2, scope: !13691)
!13703 = !DILocalVariable(name: "thread", arg: 1, scope: !13704, file: !2441, line: 250, type: !2326)
!13704 = distinct !DISubprogram(name: "queue_thread", scope: !2441, file: !2441, line: 250, type: !13453, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13705)
!13705 = !{!13703}
!13706 = !DILocation(line: 0, scope: !13704, inlinedAt: !13707)
!13707 = distinct !DILocation(line: 398, column: 2, scope: !13679)
!13708 = !DILocation(line: 252, column: 15, scope: !13704, inlinedAt: !13707)
!13709 = !DILocation(line: 252, column: 28, scope: !13704, inlinedAt: !13707)
!13710 = !DILocalVariable(name: "thread", arg: 1, scope: !13711, file: !2441, line: 227, type: !2326)
!13711 = distinct !DISubprogram(name: "runq_add", scope: !2441, file: !2441, line: 227, type: !13453, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13712)
!13712 = !{!13710}
!13713 = !DILocation(line: 0, scope: !13711, inlinedAt: !13714)
!13714 = distinct !DILocation(line: 254, column: 3, scope: !13715, inlinedAt: !13707)
!13715 = distinct !DILexicalBlock(scope: !13716, file: !2441, line: 253, column: 35)
!13716 = distinct !DILexicalBlock(scope: !13704, file: !2441, line: 253, column: 6)
!13717 = !DILocation(line: 229, column: 2, scope: !13711, inlinedAt: !13714)
!13718 = !DILocation(line: 399, column: 25, scope: !13679)
!13719 = !DILocation(line: 399, column: 22, scope: !13679)
!13720 = !DILocation(line: 399, column: 2, scope: !13679)
!13721 = !DILocation(line: 400, column: 1, scope: !13679)
!13722 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12086, file: !12086, line: 136, type: !13636, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13723)
!13723 = !{!13724}
!13724 = !DILocalVariable(name: "thread", arg: 1, scope: !13722, file: !12086, line: 136, type: !2326)
!13725 = !DILocation(line: 0, scope: !13722)
!13726 = !DILocation(line: 138, column: 9, scope: !13722)
!13727 = !DILocation(line: 138, column: 2, scope: !13722)
!13728 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2441, file: !2441, line: 1198, type: !13729, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13745)
!13729 = !DISubroutineType(types: !13730)
!13730 = !{null, !13731, !2326}
!13731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13732, size: 32)
!13732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !2005, line: 37, size: 128, elements: !13733)
!13733 = !{!13734, !13744}
!13734 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13732, file: !2005, line: 38, baseType: !13735, size: 96)
!13735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !13736)
!13736 = !{!13737, !13738, !13743}
!13737 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13735, file: !157, line: 84, baseType: !2355, size: 32)
!13738 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13735, file: !157, line: 85, baseType: !13739, size: 32, offset: 32)
!13739 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !13740)
!13740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13741, size: 32)
!13741 = !DISubroutineType(types: !13742)
!13742 = !{!334, !2355, !2355}
!13743 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13735, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!13744 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13732, file: !2005, line: 39, baseType: !109, size: 32, offset: 96)
!13745 = !{!13746, !13747}
!13746 = !DILocalVariable(name: "pq", arg: 1, scope: !13728, file: !2441, line: 1198, type: !13731)
!13747 = !DILocalVariable(name: "thread", arg: 2, scope: !13728, file: !2441, line: 1198, type: !2326)
!13748 = !DILocation(line: 0, scope: !13728)
!13749 = !DILocation(line: 1200, column: 2, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13751, file: !2441, line: 1200, column: 2)
!13751 = distinct !DILexicalBlock(scope: !13728, file: !2441, line: 1200, column: 2)
!13752 = !DILocation(line: 1200, column: 2, scope: !13751)
!13753 = !DILocation(line: 1200, column: 2, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13750, file: !2441, line: 1200, column: 2)
!13755 = !DILocation(line: 1202, column: 17, scope: !13728)
!13756 = !DILocation(line: 1202, column: 37, scope: !13728)
!13757 = !DILocation(line: 1202, column: 2, scope: !13728)
!13758 = !DILocation(line: 1204, column: 16, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13728, file: !2441, line: 1204, column: 6)
!13760 = !DILocation(line: 1204, column: 7, scope: !13759)
!13761 = !DILocation(line: 1204, column: 6, scope: !13728)
!13762 = !DILocation(line: 1205, column: 7, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13759, file: !2441, line: 1204, column: 22)
!13764 = !DILocation(line: 1205, column: 22, scope: !13763)
!13765 = !DILocation(line: 1206, column: 2, scope: !13763)
!13766 = !DILocation(line: 1207, column: 1, scope: !13728)
!13767 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2441, file: !2441, line: 1175, type: !13729, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13768)
!13768 = !{!13769, !13770, !13771, !13772, !13781}
!13769 = !DILocalVariable(name: "pq", arg: 1, scope: !13767, file: !2441, line: 1175, type: !13731)
!13770 = !DILocalVariable(name: "thread", arg: 2, scope: !13767, file: !2441, line: 1175, type: !2326)
!13771 = !DILocalVariable(name: "t", scope: !13767, file: !2441, line: 1177, type: !2326)
!13772 = !DILocalVariable(name: "__f", scope: !13773, file: !2441, line: 1190, type: !13776)
!13773 = distinct !DILexicalBlock(scope: !13774, file: !2441, line: 1190, column: 3)
!13774 = distinct !DILexicalBlock(scope: !13775, file: !2441, line: 1189, column: 27)
!13775 = distinct !DILexicalBlock(scope: !13767, file: !2441, line: 1189, column: 6)
!13776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !157, line: 155, size: 96, elements: !13777)
!13777 = !{!13778, !13779, !13780}
!13778 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13776, file: !157, line: 156, baseType: !2437, size: 32)
!13779 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13776, file: !157, line: 157, baseType: !1821, size: 32, offset: 32)
!13780 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13776, file: !157, line: 158, baseType: !736, size: 32, offset: 64)
!13781 = !DILocalVariable(name: "n", scope: !13782, file: !2441, line: 1190, type: !2355)
!13782 = distinct !DILexicalBlock(scope: !13783, file: !2441, line: 1190, column: 3)
!13783 = distinct !DILexicalBlock(scope: !13773, file: !2441, line: 1190, column: 3)
!13784 = !DILocation(line: 0, scope: !13767)
!13785 = !DILocation(line: 1179, column: 2, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13787, file: !2441, line: 1179, column: 2)
!13787 = distinct !DILexicalBlock(scope: !13767, file: !2441, line: 1179, column: 2)
!13788 = !DILocation(line: 1179, column: 2, scope: !13787)
!13789 = !DILocation(line: 1179, column: 2, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13786, file: !2441, line: 1179, column: 2)
!13791 = !DILocation(line: 1181, column: 31, scope: !13767)
!13792 = !DILocation(line: 1181, column: 45, scope: !13767)
!13793 = !DILocation(line: 1181, column: 15, scope: !13767)
!13794 = !DILocation(line: 1181, column: 25, scope: !13767)
!13795 = !DILocation(line: 1189, column: 11, scope: !13775)
!13796 = !DILocation(line: 1189, column: 7, scope: !13775)
!13797 = !DILocation(line: 1189, column: 6, scope: !13767)
!13798 = !DILocation(line: 1190, column: 3, scope: !13773)
!13799 = !DILocation(line: 1190, column: 3, scope: !13782)
!13800 = !DILocation(line: 0, scope: !13782)
!13801 = !DILocation(line: 1190, column: 3, scope: !13783)
!13802 = !DILocation(line: 1193, column: 2, scope: !13774)
!13803 = !DILocation(line: 1191, column: 42, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13783, file: !2441, line: 1190, column: 54)
!13805 = !DILocation(line: 1191, column: 12, scope: !13804)
!13806 = !DILocation(line: 1191, column: 22, scope: !13804)
!13807 = distinct !{!13807, !13798, !13808}
!13808 = !DILocation(line: 1192, column: 3, scope: !13773)
!13809 = !DILocation(line: 1195, column: 17, scope: !13767)
!13810 = !DILocation(line: 1195, column: 37, scope: !13767)
!13811 = !DILocation(line: 1195, column: 2, scope: !13767)
!13812 = !DILocation(line: 1196, column: 1, scope: !13767)
!13813 = distinct !DISubprogram(name: "update_cache", scope: !2441, file: !2441, line: 559, type: !3414, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13814)
!13814 = !{!13815, !13816}
!13815 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13813, file: !2441, line: 559, type: !109)
!13816 = !DILocalVariable(name: "thread", scope: !13813, file: !2441, line: 562, type: !2326)
!13817 = !DILocation(line: 0, scope: !13813)
!13818 = !DILocation(line: 239, column: 9, scope: !13819, inlinedAt: !13822)
!13819 = distinct !DISubprogram(name: "runq_best", scope: !2441, file: !2441, line: 237, type: !13820, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !1998)
!13820 = !DISubroutineType(types: !13821)
!13821 = !{!2326}
!13822 = distinct !DILocation(line: 314, column: 28, scope: !13823, inlinedAt: !13826)
!13823 = distinct !DISubprogram(name: "next_up", scope: !2441, file: !2441, line: 312, type: !13820, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13824)
!13824 = !{!13825}
!13825 = !DILocalVariable(name: "thread", scope: !13823, file: !2441, line: 314, type: !2326)
!13826 = distinct !DILocation(line: 562, column: 28, scope: !13813)
!13827 = !DILocation(line: 0, scope: !13823, inlinedAt: !13826)
!13828 = !DILocation(line: 340, column: 17, scope: !13823, inlinedAt: !13826)
!13829 = !DILocation(line: 340, column: 9, scope: !13823, inlinedAt: !13826)
!13830 = !DILocalVariable(name: "thread", arg: 1, scope: !13831, file: !2441, line: 127, type: !2326)
!13831 = distinct !DISubprogram(name: "should_preempt", scope: !2441, file: !2441, line: 127, type: !13832, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13834)
!13832 = !DISubroutineType(types: !13833)
!13833 = !{!334, !2326, !109}
!13834 = !{!13830, !13835}
!13835 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13831, file: !2441, line: 128, type: !109)
!13836 = !DILocation(line: 0, scope: !13831, inlinedAt: !13837)
!13837 = distinct !DILocation(line: 564, column: 6, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13813, file: !2441, line: 564, column: 6)
!13839 = !DILocation(line: 133, column: 17, scope: !13840, inlinedAt: !13837)
!13840 = distinct !DILexicalBlock(scope: !13831, file: !2441, line: 133, column: 6)
!13841 = !DILocation(line: 0, scope: !13838)
!13842 = !DILocation(line: 133, column: 6, scope: !13831, inlinedAt: !13837)
!13843 = !DILocation(line: 137, column: 2, scope: !13844, inlinedAt: !13837)
!13844 = distinct !DILexicalBlock(scope: !13845, file: !2441, line: 137, column: 2)
!13845 = distinct !DILexicalBlock(scope: !13831, file: !2441, line: 137, column: 2)
!13846 = !DILocation(line: 137, column: 2, scope: !13845, inlinedAt: !13837)
!13847 = !DILocation(line: 137, column: 2, scope: !13848, inlinedAt: !13837)
!13848 = distinct !DILexicalBlock(scope: !13844, file: !2441, line: 137, column: 2)
!13849 = !DILocation(line: 140, column: 6, scope: !13850, inlinedAt: !13837)
!13850 = distinct !DILexicalBlock(scope: !13831, file: !2441, line: 140, column: 6)
!13851 = !DILocation(line: 140, column: 6, scope: !13831, inlinedAt: !13837)
!13852 = !DILocation(line: 150, column: 9, scope: !13853, inlinedAt: !13837)
!13853 = distinct !DILexicalBlock(scope: !13831, file: !2441, line: 149, column: 6)
!13854 = !DILocation(line: 149, column: 6, scope: !13831, inlinedAt: !13837)
!13855 = !DILocation(line: 157, column: 6, scope: !13856, inlinedAt: !13837)
!13856 = distinct !DILexicalBlock(scope: !13831, file: !2441, line: 157, column: 6)
!13857 = !DILocation(line: 564, column: 6, scope: !13813)
!13858 = !DILocation(line: 566, column: 14, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13860, file: !2441, line: 566, column: 7)
!13860 = distinct !DILexicalBlock(scope: !13838, file: !2441, line: 564, column: 42)
!13861 = !DILocation(line: 566, column: 7, scope: !13860)
!13862 = !DILocation(line: 567, column: 4, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13859, file: !2441, line: 566, column: 27)
!13864 = !DILocation(line: 568, column: 3, scope: !13863)
!13865 = !DILocation(line: 585, column: 1, scope: !13813)
!13866 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2441, file: !2441, line: 1209, type: !13867, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13869)
!13867 = !DISubroutineType(types: !13868)
!13868 = !{!2326, !13731}
!13869 = !{!13870, !13871, !13872}
!13870 = !DILocalVariable(name: "pq", arg: 1, scope: !13866, file: !2441, line: 1209, type: !13731)
!13871 = !DILocalVariable(name: "thread", scope: !13866, file: !2441, line: 1211, type: !2326)
!13872 = !DILocalVariable(name: "n", scope: !13866, file: !2441, line: 1212, type: !2355)
!13873 = !DILocation(line: 0, scope: !13866)
!13874 = !DILocation(line: 1212, column: 37, scope: !13866)
!13875 = !DILocation(line: 1212, column: 21, scope: !13866)
!13876 = !DILocation(line: 1217, column: 2, scope: !13866)
!13877 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12086, file: !12086, line: 115, type: !13636, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13878)
!13878 = !{!13879}
!13879 = !DILocalVariable(name: "thread", arg: 1, scope: !13877, file: !12086, line: 115, type: !2326)
!13880 = !DILocation(line: 0, scope: !13877)
!13881 = !DILocation(line: 117, column: 46, scope: !13877)
!13882 = !DILocation(line: 117, column: 10, scope: !13877)
!13883 = !DILocation(line: 117, column: 9, scope: !13877)
!13884 = !DILocation(line: 117, column: 2, scope: !13877)
!13885 = distinct !DISubprogram(name: "is_preempt", scope: !2441, file: !2441, line: 62, type: !13471, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13886)
!13886 = !{!13887}
!13887 = !DILocalVariable(name: "thread", arg: 1, scope: !13885, file: !2441, line: 62, type: !2326)
!13888 = !DILocation(line: 0, scope: !13885)
!13889 = !DILocation(line: 65, column: 22, scope: !13885)
!13890 = !DILocation(line: 65, column: 30, scope: !13885)
!13891 = !DILocation(line: 65, column: 2, scope: !13885)
!13892 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12758, file: !12758, line: 35, type: !13893, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13897)
!13893 = !DISubroutineType(types: !13894)
!13894 = !{!334, !13895}
!13895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13896, size: 32)
!13896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2377)
!13897 = !{!13898}
!13898 = !DILocalVariable(name: "to", arg: 1, scope: !13892, file: !12758, line: 35, type: !13895)
!13899 = !DILocation(line: 0, scope: !13892)
!13900 = !DILocation(line: 37, column: 35, scope: !13892)
!13901 = !DILocation(line: 37, column: 10, scope: !13892)
!13902 = !DILocation(line: 37, column: 9, scope: !13892)
!13903 = !DILocation(line: 37, column: 2, scope: !13892)
!13904 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !128, file: !128, line: 225, type: !13905, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13909)
!13905 = !DISubroutineType(types: !13906)
!13906 = !{!334, !13907}
!13907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13908, size: 32)
!13908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2336)
!13909 = !{!13910}
!13910 = !DILocalVariable(name: "node", arg: 1, scope: !13904, file: !128, line: 225, type: !13907)
!13911 = !DILocation(line: 0, scope: !13904)
!13912 = !DILocation(line: 227, column: 15, scope: !13904)
!13913 = !DILocation(line: 227, column: 20, scope: !13904)
!13914 = !DILocation(line: 227, column: 2, scope: !13904)
!13915 = distinct !DISubprogram(name: "rb_get_min", scope: !157, file: !157, line: 115, type: !13916, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13919)
!13916 = !DISubroutineType(types: !13917)
!13917 = !{!2355, !13918}
!13918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13735, size: 32)
!13919 = !{!13920}
!13920 = !DILocalVariable(name: "tree", arg: 1, scope: !13915, file: !157, line: 115, type: !13918)
!13921 = !DILocation(line: 0, scope: !13915)
!13922 = !DILocation(line: 117, column: 9, scope: !13915)
!13923 = !DILocation(line: 117, column: 2, scope: !13915)
!13924 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12086, file: !12086, line: 83, type: !13636, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13925)
!13925 = !{!13926}
!13926 = !DILocalVariable(name: "thread", arg: 1, scope: !13924, file: !12086, line: 83, type: !2326)
!13927 = !DILocation(line: 0, scope: !13924)
!13928 = !DILocation(line: 89, column: 16, scope: !13924)
!13929 = !DILocation(line: 89, column: 2, scope: !13924)
!13930 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12086, file: !12086, line: 131, type: !13931, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13933)
!13931 = !DISubroutineType(types: !13932)
!13932 = !{!334, !2326, !110}
!13933 = !{!13934, !13935}
!13934 = !DILocalVariable(name: "thread", arg: 1, scope: !13930, file: !12086, line: 131, type: !2326)
!13935 = !DILocalVariable(name: "state", arg: 2, scope: !13930, file: !12086, line: 131, type: !110)
!13936 = !DILocation(line: 0, scope: !13930)
!13937 = !DILocation(line: 133, column: 23, scope: !13930)
!13938 = !DILocation(line: 133, column: 10, scope: !13930)
!13939 = !DILocation(line: 133, column: 36, scope: !13930)
!13940 = !DILocation(line: 133, column: 45, scope: !13930)
!13941 = !DILocation(line: 133, column: 2, scope: !13930)
!13942 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12086, file: !12086, line: 211, type: !13285, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13943)
!13943 = !{!13944, !13945}
!13944 = !DILocalVariable(name: "prio", arg: 1, scope: !13942, file: !12086, line: 211, type: !109)
!13945 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13942, file: !12086, line: 211, type: !109)
!13946 = !DILocation(line: 0, scope: !13942)
!13947 = !DILocation(line: 213, column: 9, scope: !13942)
!13948 = !DILocation(line: 213, column: 2, scope: !13942)
!13949 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12086, file: !12086, line: 206, type: !13285, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13950)
!13950 = !{!13951, !13952}
!13951 = !DILocalVariable(name: "prio1", arg: 1, scope: !13949, file: !12086, line: 206, type: !109)
!13952 = !DILocalVariable(name: "prio2", arg: 2, scope: !13949, file: !12086, line: 206, type: !109)
!13953 = !DILocation(line: 0, scope: !13949)
!13954 = !DILocation(line: 208, column: 15, scope: !13949)
!13955 = !DILocation(line: 208, column: 2, scope: !13949)
!13956 = distinct !DISubprogram(name: "z_ready_thread", scope: !2441, file: !2441, line: 635, type: !13453, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13957)
!13957 = !{!13958, !13959, !13961}
!13958 = !DILocalVariable(name: "thread", arg: 1, scope: !13956, file: !2441, line: 635, type: !2326)
!13959 = !DILocalVariable(name: "__i", scope: !13960, file: !2441, line: 637, type: !13487)
!13960 = distinct !DILexicalBlock(scope: !13956, file: !2441, line: 637, column: 2)
!13961 = !DILocalVariable(name: "__key", scope: !13960, file: !2441, line: 637, type: !13487)
!13962 = !DILocation(line: 0, scope: !13956)
!13963 = !DILocation(line: 0, scope: !13960)
!13964 = !DILocation(line: 0, scope: !13495, inlinedAt: !13965)
!13965 = distinct !DILocation(line: 637, column: 2, scope: !13960)
!13966 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !13967)
!13967 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !13965)
!13968 = !DILocation(line: 0, scope: !13504, inlinedAt: !13967)
!13969 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !13965)
!13970 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !13965)
!13971 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !13965)
!13972 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !13965)
!13973 = !DILocation(line: 639, column: 4, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13975, file: !2441, line: 638, column: 41)
!13975 = distinct !DILexicalBlock(scope: !13976, file: !2441, line: 638, column: 7)
!13976 = distinct !DILexicalBlock(scope: !13977, file: !2441, line: 637, column: 26)
!13977 = distinct !DILexicalBlock(scope: !13960, file: !2441, line: 637, column: 2)
!13978 = !DILocation(line: 0, scope: !13529, inlinedAt: !13979)
!13979 = distinct !DILocation(line: 637, column: 2, scope: !13977)
!13980 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !13979)
!13981 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !13979)
!13982 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !13979)
!13983 = !DILocation(line: 0, scope: !13543, inlinedAt: !13984)
!13984 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !13979)
!13985 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !13984)
!13986 = !DILocation(line: 642, column: 1, scope: !13956)
!13987 = distinct !DISubprogram(name: "ready_thread", scope: !2441, file: !2441, line: 617, type: !13453, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13988)
!13988 = !{!13989}
!13989 = !DILocalVariable(name: "thread", arg: 1, scope: !13987, file: !2441, line: 617, type: !2326)
!13990 = !DILocation(line: 0, scope: !13987)
!13991 = !DILocation(line: 626, column: 7, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13987, file: !2441, line: 626, column: 6)
!13993 = !DILocation(line: 626, column: 34, scope: !13992)
!13994 = !DILocation(line: 626, column: 37, scope: !13992)
!13995 = !DILocation(line: 626, column: 6, scope: !13987)
!13996 = !DILocation(line: 0, scope: !13704, inlinedAt: !13997)
!13997 = distinct !DILocation(line: 629, column: 3, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13992, file: !2441, line: 626, column: 64)
!13999 = !DILocation(line: 252, column: 15, scope: !13704, inlinedAt: !13997)
!14000 = !DILocation(line: 252, column: 28, scope: !13704, inlinedAt: !13997)
!14001 = !DILocation(line: 0, scope: !13711, inlinedAt: !14002)
!14002 = distinct !DILocation(line: 254, column: 3, scope: !13715, inlinedAt: !13997)
!14003 = !DILocation(line: 229, column: 2, scope: !13711, inlinedAt: !14002)
!14004 = !DILocation(line: 630, column: 3, scope: !13998)
!14005 = !DILocation(line: 632, column: 2, scope: !13998)
!14006 = !DILocation(line: 633, column: 1, scope: !13987)
!14007 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12086, file: !12086, line: 120, type: !13636, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14008)
!14008 = !{!14009}
!14009 = !DILocalVariable(name: "thread", arg: 1, scope: !14007, file: !12086, line: 120, type: !2326)
!14010 = !DILocation(line: 0, scope: !14007)
!14011 = !DILocation(line: 122, column: 12, scope: !14007)
!14012 = !DILocation(line: 122, column: 62, scope: !14007)
!14013 = !DILocation(line: 123, column: 4, scope: !14007)
!14014 = !DILocation(line: 122, column: 2, scope: !14007)
!14015 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2441, file: !2441, line: 644, type: !13453, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14016)
!14016 = !{!14017, !14018, !14020}
!14017 = !DILocalVariable(name: "thread", arg: 1, scope: !14015, file: !2441, line: 644, type: !2326)
!14018 = !DILocalVariable(name: "__i", scope: !14019, file: !2441, line: 646, type: !13487)
!14019 = distinct !DILexicalBlock(scope: !14015, file: !2441, line: 646, column: 2)
!14020 = !DILocalVariable(name: "__key", scope: !14019, file: !2441, line: 646, type: !13487)
!14021 = !DILocation(line: 0, scope: !14015)
!14022 = !DILocation(line: 0, scope: !14019)
!14023 = !DILocation(line: 0, scope: !13495, inlinedAt: !14024)
!14024 = distinct !DILocation(line: 646, column: 2, scope: !14019)
!14025 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14026)
!14026 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14024)
!14027 = !DILocation(line: 0, scope: !13504, inlinedAt: !14026)
!14028 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14024)
!14029 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14024)
!14030 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14024)
!14031 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14024)
!14032 = !DILocation(line: 647, column: 3, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14034, file: !2441, line: 646, column: 26)
!14034 = distinct !DILexicalBlock(scope: !14019, file: !2441, line: 646, column: 2)
!14035 = !DILocation(line: 0, scope: !13529, inlinedAt: !14036)
!14036 = distinct !DILocation(line: 646, column: 2, scope: !14034)
!14037 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14036)
!14038 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14036)
!14039 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14036)
!14040 = !DILocation(line: 0, scope: !13543, inlinedAt: !14041)
!14041 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14036)
!14042 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14041)
!14043 = !DILocation(line: 649, column: 1, scope: !14015)
!14044 = distinct !DISubprogram(name: "z_sched_start", scope: !2441, file: !2441, line: 651, type: !13453, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14045)
!14045 = !{!14046, !14047}
!14046 = !DILocalVariable(name: "thread", arg: 1, scope: !14044, file: !2441, line: 651, type: !2326)
!14047 = !DILocalVariable(name: "key", scope: !14044, file: !2441, line: 653, type: !13487)
!14048 = !DILocation(line: 0, scope: !14044)
!14049 = !DILocation(line: 0, scope: !13495, inlinedAt: !14050)
!14050 = distinct !DILocation(line: 653, column: 25, scope: !14044)
!14051 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14052)
!14052 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14050)
!14053 = !DILocation(line: 0, scope: !13504, inlinedAt: !14052)
!14054 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14050)
!14055 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14050)
!14056 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14050)
!14057 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14050)
!14058 = !DILocation(line: 655, column: 6, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14044, file: !2441, line: 655, column: 6)
!14060 = !DILocation(line: 655, column: 6, scope: !14044)
!14061 = !DILocation(line: 0, scope: !13529, inlinedAt: !14062)
!14062 = distinct !DILocation(line: 656, column: 3, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14059, file: !2441, line: 655, column: 36)
!14064 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14062)
!14065 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14062)
!14066 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14062)
!14067 = !DILocation(line: 0, scope: !13543, inlinedAt: !14068)
!14068 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14062)
!14069 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14068)
!14070 = !DILocation(line: 657, column: 3, scope: !14063)
!14071 = !DILocation(line: 660, column: 2, scope: !14044)
!14072 = !DILocation(line: 661, column: 2, scope: !14044)
!14073 = !DILocation(line: 662, column: 2, scope: !14044)
!14074 = !DILocation(line: 663, column: 1, scope: !14044)
!14075 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12086, file: !12086, line: 126, type: !13636, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14076)
!14076 = !{!14077}
!14077 = !DILocalVariable(name: "thread", arg: 1, scope: !14075, file: !12086, line: 126, type: !2326)
!14078 = !DILocation(line: 0, scope: !14075)
!14079 = !DILocation(line: 128, column: 23, scope: !14075)
!14080 = !DILocation(line: 128, column: 36, scope: !14075)
!14081 = !DILocation(line: 128, column: 56, scope: !14075)
!14082 = !DILocation(line: 128, column: 2, scope: !14075)
!14083 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12086, file: !12086, line: 155, type: !13453, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14084)
!14084 = !{!14085}
!14085 = !DILocalVariable(name: "thread", arg: 1, scope: !14083, file: !12086, line: 155, type: !2326)
!14086 = !DILocation(line: 0, scope: !14083)
!14087 = !DILocation(line: 157, column: 15, scope: !14083)
!14088 = !DILocation(line: 157, column: 28, scope: !14083)
!14089 = !DILocation(line: 158, column: 1, scope: !14083)
!14090 = distinct !DISubprogram(name: "z_reschedule", scope: !2441, file: !2441, line: 967, type: !13530, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14091)
!14091 = !{!14092, !14093}
!14092 = !DILocalVariable(name: "lock", arg: 1, scope: !14090, file: !2441, line: 967, type: !13498)
!14093 = !DILocalVariable(name: "key", arg: 2, scope: !14090, file: !2441, line: 967, type: !13487)
!14094 = !DILocation(line: 0, scope: !14090)
!14095 = !DILocation(line: 969, column: 6, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14090, file: !2441, line: 969, column: 6)
!14097 = !DILocation(line: 969, column: 23, scope: !14096)
!14098 = !DILocation(line: 969, column: 26, scope: !14096)
!14099 = !DILocation(line: 969, column: 6, scope: !14090)
!14100 = !DILocalVariable(name: "key", arg: 2, scope: !14101, file: !12190, line: 193, type: !13487)
!14101 = distinct !DISubprogram(name: "z_swap", scope: !12190, file: !12190, line: 193, type: !14102, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14104)
!14102 = !DISubroutineType(types: !14103)
!14103 = !{!109, !13498, !13487}
!14104 = !{!14105, !14100}
!14105 = !DILocalVariable(name: "lock", arg: 1, scope: !14101, file: !12190, line: 193, type: !13498)
!14106 = !DILocation(line: 0, scope: !14101, inlinedAt: !14107)
!14107 = distinct !DILocation(line: 970, column: 3, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14096, file: !2441, line: 969, column: 39)
!14109 = !DILocalVariable(name: "l", arg: 1, scope: !14110, file: !254, line: 221, type: !13498)
!14110 = distinct !DISubprogram(name: "k_spin_release", scope: !254, file: !254, line: 221, type: !14111, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14113)
!14111 = !DISubroutineType(types: !14112)
!14112 = !{null, !13498}
!14113 = !{!14109}
!14114 = !DILocation(line: 0, scope: !14110, inlinedAt: !14115)
!14115 = distinct !DILocation(line: 195, column: 2, scope: !14101, inlinedAt: !14107)
!14116 = !DILocation(line: 225, column: 2, scope: !14117, inlinedAt: !14115)
!14117 = distinct !DILexicalBlock(scope: !14118, file: !254, line: 225, column: 2)
!14118 = distinct !DILexicalBlock(scope: !14110, file: !254, line: 225, column: 2)
!14119 = !DILocation(line: 225, column: 2, scope: !14118, inlinedAt: !14115)
!14120 = !DILocation(line: 225, column: 2, scope: !14121, inlinedAt: !14115)
!14121 = distinct !DILexicalBlock(scope: !14117, file: !254, line: 225, column: 2)
!14122 = !DILocation(line: 196, column: 9, scope: !14101, inlinedAt: !14107)
!14123 = !DILocation(line: 971, column: 2, scope: !14108)
!14124 = !DILocation(line: 0, scope: !13529, inlinedAt: !14125)
!14125 = distinct !DILocation(line: 972, column: 3, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14096, file: !2441, line: 971, column: 9)
!14127 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14125)
!14128 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14125)
!14129 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14125)
!14130 = !DILocation(line: 0, scope: !13543, inlinedAt: !14131)
!14131 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14125)
!14132 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14131)
!14133 = !DILocation(line: 975, column: 1, scope: !14090)
!14134 = distinct !DISubprogram(name: "resched", scope: !2441, file: !2441, line: 940, type: !14135, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14137)
!14135 = !DISubroutineType(types: !14136)
!14136 = !{!334, !110}
!14137 = !{!14138}
!14138 = !DILocalVariable(name: "key", arg: 1, scope: !14134, file: !2441, line: 940, type: !110)
!14139 = !DILocation(line: 0, scope: !14134)
!14140 = !DILocalVariable(name: "key", arg: 1, scope: !14141, file: !5970, line: 112, type: !32)
!14141 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5970, file: !5970, line: 112, type: !14142, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14144)
!14142 = !DISubroutineType(types: !14143)
!14143 = !{!334, !32}
!14144 = !{!14140}
!14145 = !DILocation(line: 0, scope: !14141, inlinedAt: !14146)
!14146 = distinct !DILocation(line: 946, column: 9, scope: !14134)
!14147 = !DILocation(line: 115, column: 13, scope: !14141, inlinedAt: !14146)
!14148 = !DILocation(line: 946, column: 32, scope: !14134)
!14149 = !DILocation(line: 1031, column: 3, scope: !14150, inlinedAt: !14153)
!14150 = distinct !DISubprogram(name: "__get_IPSR", scope: !6144, file: !6144, line: 1027, type: !3368, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14151)
!14151 = !{!14152}
!14152 = !DILocalVariable(name: "result", scope: !14150, file: !6144, line: 1029, type: !110)
!14153 = distinct !DILocation(line: 48, column: 10, scope: !14154, inlinedAt: !14155)
!14154 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6985, file: !6985, line: 46, type: !6986, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !1998)
!14155 = distinct !DILocation(line: 946, column: 36, scope: !14134)
!14156 = !{i64 2872243}
!14157 = !DILocation(line: 0, scope: !14150, inlinedAt: !14153)
!14158 = !DILocation(line: 48, column: 9, scope: !14154, inlinedAt: !14155)
!14159 = !DILocation(line: 946, column: 2, scope: !14134)
!14160 = distinct !DISubprogram(name: "need_swap", scope: !2441, file: !2441, line: 953, type: !6986, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14161)
!14161 = !{!14162}
!14162 = !DILocalVariable(name: "new_thread", scope: !14160, file: !2441, line: 959, type: !2326)
!14163 = !DILocation(line: 962, column: 31, scope: !14160)
!14164 = !DILocation(line: 0, scope: !14160)
!14165 = !DILocation(line: 963, column: 23, scope: !14160)
!14166 = !DILocation(line: 963, column: 20, scope: !14160)
!14167 = !DILocation(line: 963, column: 2, scope: !14160)
!14168 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12190, file: !12190, line: 181, type: !6154, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14169)
!14169 = !{!14170, !14171}
!14170 = !DILocalVariable(name: "key", arg: 1, scope: !14168, file: !12190, line: 181, type: !32)
!14171 = !DILocalVariable(name: "ret", scope: !14168, file: !12190, line: 183, type: !109)
!14172 = !DILocation(line: 0, scope: !14168)
!14173 = !DILocation(line: 185, column: 8, scope: !14168)
!14174 = !DILocation(line: 186, column: 2, scope: !14168)
!14175 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2441, file: !2441, line: 665, type: !13453, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14176)
!14176 = !{!14177, !14178, !14180}
!14177 = !DILocalVariable(name: "thread", arg: 1, scope: !14175, file: !2441, line: 665, type: !2326)
!14178 = !DILocalVariable(name: "__i", scope: !14179, file: !2441, line: 671, type: !13487)
!14179 = distinct !DILexicalBlock(scope: !14175, file: !2441, line: 671, column: 2)
!14180 = !DILocalVariable(name: "__key", scope: !14179, file: !2441, line: 671, type: !13487)
!14181 = !DILocation(line: 0, scope: !14175)
!14182 = !DILocation(line: 669, column: 8, scope: !14175)
!14183 = !DILocation(line: 0, scope: !14179)
!14184 = !DILocation(line: 0, scope: !13495, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 671, column: 2, scope: !14179)
!14186 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14187)
!14187 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14185)
!14188 = !DILocation(line: 0, scope: !13504, inlinedAt: !14187)
!14189 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14185)
!14190 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14185)
!14191 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14185)
!14192 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14185)
!14193 = !DILocation(line: 672, column: 7, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14195, file: !2441, line: 672, column: 7)
!14195 = distinct !DILexicalBlock(scope: !14196, file: !2441, line: 671, column: 26)
!14196 = distinct !DILexicalBlock(scope: !14179, file: !2441, line: 671, column: 2)
!14197 = !DILocation(line: 672, column: 7, scope: !14195)
!14198 = !DILocation(line: 0, scope: !13687, inlinedAt: !14199)
!14199 = distinct !DILocation(line: 673, column: 4, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14194, file: !2441, line: 672, column: 35)
!14201 = !DILocation(line: 266, column: 15, scope: !13687, inlinedAt: !14199)
!14202 = !DILocation(line: 266, column: 28, scope: !13687, inlinedAt: !14199)
!14203 = !DILocation(line: 0, scope: !13695, inlinedAt: !14204)
!14204 = distinct !DILocation(line: 268, column: 3, scope: !13699, inlinedAt: !14199)
!14205 = !DILocation(line: 234, column: 2, scope: !13695, inlinedAt: !14204)
!14206 = !DILocation(line: 674, column: 3, scope: !14200)
!14207 = !DILocation(line: 675, column: 3, scope: !14195)
!14208 = !DILocation(line: 676, column: 26, scope: !14195)
!14209 = !DILocation(line: 676, column: 23, scope: !14195)
!14210 = !DILocation(line: 676, column: 3, scope: !14195)
!14211 = !DILocation(line: 0, scope: !13529, inlinedAt: !14212)
!14212 = distinct !DILocation(line: 671, column: 2, scope: !14196)
!14213 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14212)
!14214 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14212)
!14215 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14212)
!14216 = !DILocation(line: 0, scope: !13543, inlinedAt: !14217)
!14217 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14212)
!14218 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14217)
!14219 = !DILocation(line: 679, column: 16, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14175, file: !2441, line: 679, column: 6)
!14221 = !DILocation(line: 679, column: 13, scope: !14220)
!14222 = !DILocation(line: 679, column: 6, scope: !14175)
!14223 = !DILocation(line: 680, column: 3, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14220, file: !2441, line: 679, column: 26)
!14225 = !DILocation(line: 681, column: 2, scope: !14224)
!14226 = !DILocation(line: 684, column: 1, scope: !14175)
!14227 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12758, file: !12758, line: 52, type: !13471, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14228)
!14228 = !{!14229}
!14229 = !DILocalVariable(name: "thread", arg: 1, scope: !14227, file: !12758, line: 52, type: !2326)
!14230 = !DILocation(line: 0, scope: !14227)
!14231 = !DILocation(line: 54, column: 39, scope: !14227)
!14232 = !DILocation(line: 54, column: 9, scope: !14227)
!14233 = !DILocation(line: 54, column: 2, scope: !14227)
!14234 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12086, file: !12086, line: 141, type: !13453, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14235)
!14235 = !{!14236}
!14236 = !DILocalVariable(name: "thread", arg: 1, scope: !14234, file: !12086, line: 141, type: !2326)
!14237 = !DILocation(line: 0, scope: !14234)
!14238 = !DILocation(line: 143, column: 15, scope: !14234)
!14239 = !DILocation(line: 143, column: 28, scope: !14234)
!14240 = !DILocation(line: 146, column: 1, scope: !14234)
!14241 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12086, file: !12086, line: 73, type: !3086, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !1998)
!14242 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14243)
!14243 = distinct !DILocation(line: 75, column: 30, scope: !14241)
!14244 = !DILocation(line: 0, scope: !13504, inlinedAt: !14243)
!14245 = !DILocation(line: 75, column: 9, scope: !14241)
!14246 = !DILocation(line: 76, column: 1, scope: !14241)
!14247 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2441, file: !2441, line: 977, type: !6239, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14248)
!14248 = !{!14249}
!14249 = !DILocalVariable(name: "key", arg: 1, scope: !14247, file: !2441, line: 977, type: !110)
!14250 = !DILocation(line: 0, scope: !14247)
!14251 = !DILocation(line: 979, column: 6, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14247, file: !2441, line: 979, column: 6)
!14253 = !DILocation(line: 979, column: 6, scope: !14247)
!14254 = !DILocation(line: 980, column: 3, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14252, file: !2441, line: 979, column: 20)
!14256 = !DILocation(line: 981, column: 2, scope: !14255)
!14257 = !DILocation(line: 0, scope: !13543, inlinedAt: !14258)
!14258 = distinct !DILocation(line: 982, column: 3, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14252, file: !2441, line: 981, column: 9)
!14260 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14258)
!14261 = !DILocation(line: 985, column: 1, scope: !14247)
!14262 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2441, file: !2441, line: 695, type: !13453, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14263)
!14263 = !{!14264, !14265}
!14264 = !DILocalVariable(name: "thread", arg: 1, scope: !14262, file: !2441, line: 695, type: !2326)
!14265 = !DILocalVariable(name: "key", scope: !14262, file: !2441, line: 699, type: !13487)
!14266 = !DILocation(line: 0, scope: !14262)
!14267 = !DILocation(line: 0, scope: !13495, inlinedAt: !14268)
!14268 = distinct !DILocation(line: 699, column: 25, scope: !14262)
!14269 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14270)
!14270 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14268)
!14271 = !DILocation(line: 0, scope: !13504, inlinedAt: !14270)
!14272 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14268)
!14273 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14268)
!14274 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14268)
!14275 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14268)
!14276 = !DILocation(line: 702, column: 7, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14262, file: !2441, line: 702, column: 6)
!14278 = !DILocation(line: 702, column: 6, scope: !14262)
!14279 = !DILocation(line: 0, scope: !13529, inlinedAt: !14280)
!14280 = distinct !DILocation(line: 703, column: 3, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14277, file: !2441, line: 702, column: 38)
!14282 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14280)
!14283 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14280)
!14284 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14280)
!14285 = !DILocation(line: 0, scope: !13543, inlinedAt: !14286)
!14286 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14280)
!14287 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14286)
!14288 = !DILocation(line: 704, column: 3, scope: !14281)
!14289 = !DILocation(line: 707, column: 2, scope: !14262)
!14290 = !DILocation(line: 708, column: 2, scope: !14262)
!14291 = !DILocation(line: 710, column: 2, scope: !14262)
!14292 = !DILocation(line: 713, column: 1, scope: !14262)
!14293 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12086, file: !12086, line: 96, type: !13636, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14294)
!14294 = !{!14295}
!14295 = !DILocalVariable(name: "thread", arg: 1, scope: !14293, file: !12086, line: 96, type: !2326)
!14296 = !DILocation(line: 0, scope: !14293)
!14297 = !DILocation(line: 98, column: 23, scope: !14293)
!14298 = !DILocation(line: 98, column: 36, scope: !14293)
!14299 = !DILocation(line: 98, column: 57, scope: !14293)
!14300 = !DILocation(line: 98, column: 2, scope: !14293)
!14301 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12086, file: !12086, line: 148, type: !13453, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14302)
!14302 = !{!14303}
!14303 = !DILocalVariable(name: "thread", arg: 1, scope: !14301, file: !12086, line: 148, type: !2326)
!14304 = !DILocation(line: 0, scope: !14301)
!14305 = !DILocation(line: 150, column: 15, scope: !14301)
!14306 = !DILocation(line: 150, column: 28, scope: !14301)
!14307 = !DILocation(line: 153, column: 1, scope: !14301)
!14308 = distinct !DISubprogram(name: "z_pend_thread", scope: !2441, file: !2441, line: 770, type: !14309, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14315)
!14309 = !DISubroutineType(types: !14310)
!14310 = !{null, !2326, !2357, !14311}
!14311 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14312)
!14312 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14313)
!14313 = !{!14314}
!14314 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14312, file: !105, line: 66, baseType: !104, size: 64)
!14315 = !{!14316, !14317, !14318, !14319, !14321}
!14316 = !DILocalVariable(name: "thread", arg: 1, scope: !14308, file: !2441, line: 770, type: !2326)
!14317 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14308, file: !2441, line: 770, type: !2357)
!14318 = !DILocalVariable(name: "timeout", arg: 3, scope: !14308, file: !2441, line: 771, type: !14311)
!14319 = !DILocalVariable(name: "__i", scope: !14320, file: !2441, line: 774, type: !13487)
!14320 = distinct !DILexicalBlock(scope: !14308, file: !2441, line: 774, column: 2)
!14321 = !DILocalVariable(name: "__key", scope: !14320, file: !2441, line: 774, type: !13487)
!14322 = !DILocation(line: 0, scope: !14308)
!14323 = !DILocation(line: 773, column: 2, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14325, file: !2441, line: 773, column: 2)
!14325 = distinct !DILexicalBlock(scope: !14308, file: !2441, line: 773, column: 2)
!14326 = !DILocation(line: 773, column: 2, scope: !14325)
!14327 = !DILocation(line: 773, column: 2, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14324, file: !2441, line: 773, column: 2)
!14329 = !DILocation(line: 0, scope: !14320)
!14330 = !DILocation(line: 0, scope: !13495, inlinedAt: !14331)
!14331 = distinct !DILocation(line: 774, column: 2, scope: !14320)
!14332 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14333)
!14333 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14331)
!14334 = !DILocation(line: 0, scope: !13504, inlinedAt: !14333)
!14335 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14331)
!14336 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14331)
!14337 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14331)
!14338 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14331)
!14339 = !DILocation(line: 775, column: 3, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14341, file: !2441, line: 774, column: 26)
!14341 = distinct !DILexicalBlock(scope: !14320, file: !2441, line: 774, column: 2)
!14342 = !DILocation(line: 0, scope: !13529, inlinedAt: !14343)
!14343 = distinct !DILocation(line: 774, column: 2, scope: !14341)
!14344 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14343)
!14345 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14343)
!14346 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14343)
!14347 = !DILocation(line: 0, scope: !13543, inlinedAt: !14348)
!14348 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14343)
!14349 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14348)
!14350 = !DILocation(line: 777, column: 1, scope: !14308)
!14351 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2441, file: !2441, line: 79, type: !13636, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14352)
!14352 = !{!14353}
!14353 = !DILocalVariable(name: "thread", arg: 1, scope: !14351, file: !2441, line: 79, type: !2326)
!14354 = !DILocation(line: 0, scope: !14351)
!14355 = !DILocation(line: 81, column: 23, scope: !14351)
!14356 = !DILocation(line: 81, column: 36, scope: !14351)
!14357 = !DILocation(line: 81, column: 53, scope: !14351)
!14358 = !DILocation(line: 81, column: 2, scope: !14351)
!14359 = distinct !DISubprogram(name: "pend_locked", scope: !2441, file: !2441, line: 760, type: !14309, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14360)
!14360 = !{!14361, !14362, !14363}
!14361 = !DILocalVariable(name: "thread", arg: 1, scope: !14359, file: !2441, line: 760, type: !2326)
!14362 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14359, file: !2441, line: 760, type: !2357)
!14363 = !DILocalVariable(name: "timeout", arg: 3, scope: !14359, file: !2441, line: 761, type: !14311)
!14364 = !DILocation(line: 0, scope: !14359)
!14365 = !DILocation(line: 766, column: 2, scope: !14359)
!14366 = !DILocation(line: 767, column: 2, scope: !14359)
!14367 = !DILocation(line: 768, column: 1, scope: !14359)
!14368 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2441, file: !2441, line: 740, type: !14369, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14371)
!14369 = !DISubroutineType(types: !14370)
!14370 = !{null, !2326, !2357}
!14371 = !{!14372, !14373}
!14372 = !DILocalVariable(name: "thread", arg: 1, scope: !14368, file: !2441, line: 740, type: !2326)
!14373 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14368, file: !2441, line: 740, type: !2357)
!14374 = !DILocation(line: 0, scope: !14368)
!14375 = !DILocation(line: 742, column: 2, scope: !14368)
!14376 = !DILocation(line: 743, column: 2, scope: !14368)
!14377 = !DILocation(line: 747, column: 13, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14368, file: !2441, line: 747, column: 6)
!14379 = !DILocation(line: 747, column: 6, scope: !14368)
!14380 = !DILocation(line: 748, column: 16, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14378, file: !2441, line: 747, column: 22)
!14382 = !DILocation(line: 748, column: 26, scope: !14381)
!14383 = !DILocation(line: 749, column: 28, scope: !14381)
!14384 = !DILocalVariable(name: "pq", arg: 1, scope: !14385, file: !2441, line: 181, type: !14388)
!14385 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2441, file: !2441, line: 181, type: !14386, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14389)
!14386 = !DISubroutineType(types: !14387)
!14387 = !{null, !14388, !2326}
!14388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!14389 = !{!14384, !14390, !14391}
!14390 = !DILocalVariable(name: "thread", arg: 2, scope: !14385, file: !2441, line: 182, type: !2326)
!14391 = !DILocalVariable(name: "t", scope: !14385, file: !2441, line: 184, type: !2326)
!14392 = !DILocation(line: 0, scope: !14385, inlinedAt: !14393)
!14393 = distinct !DILocation(line: 749, column: 3, scope: !14381)
!14394 = !DILocation(line: 186, column: 2, scope: !14395, inlinedAt: !14393)
!14395 = distinct !DILexicalBlock(scope: !14396, file: !2441, line: 186, column: 2)
!14396 = distinct !DILexicalBlock(scope: !14385, file: !2441, line: 186, column: 2)
!14397 = !DILocation(line: 186, column: 2, scope: !14396, inlinedAt: !14393)
!14398 = !DILocation(line: 186, column: 2, scope: !14399, inlinedAt: !14393)
!14399 = distinct !DILexicalBlock(scope: !14395, file: !2441, line: 186, column: 2)
!14400 = !DILocation(line: 188, column: 2, scope: !14401, inlinedAt: !14393)
!14401 = distinct !DILexicalBlock(scope: !14385, file: !2441, line: 188, column: 2)
!14402 = !DILocation(line: 188, column: 2, scope: !14403, inlinedAt: !14393)
!14403 = distinct !DILexicalBlock(scope: !14401, file: !2441, line: 188, column: 2)
!14404 = !DILocation(line: 0, scope: !14401, inlinedAt: !14393)
!14405 = !DILocation(line: 189, column: 7, scope: !14406, inlinedAt: !14393)
!14406 = distinct !DILexicalBlock(scope: !14407, file: !2441, line: 189, column: 7)
!14407 = distinct !DILexicalBlock(scope: !14403, file: !2441, line: 188, column: 56)
!14408 = !DILocation(line: 189, column: 35, scope: !14406, inlinedAt: !14393)
!14409 = !DILocation(line: 189, column: 7, scope: !14407, inlinedAt: !14393)
!14410 = !DILocation(line: 191, column: 21, scope: !14411, inlinedAt: !14393)
!14411 = distinct !DILexicalBlock(scope: !14406, file: !2441, line: 189, column: 40)
!14412 = !DILocation(line: 190, column: 4, scope: !14411, inlinedAt: !14393)
!14413 = !DILocation(line: 192, column: 4, scope: !14411, inlinedAt: !14393)
!14414 = distinct !{!14414, !14400, !14415}
!14415 = !DILocation(line: 194, column: 2, scope: !14401, inlinedAt: !14393)
!14416 = !DILocation(line: 196, column: 37, scope: !14385, inlinedAt: !14393)
!14417 = !DILocation(line: 196, column: 2, scope: !14385, inlinedAt: !14393)
!14418 = !DILocation(line: 197, column: 1, scope: !14385, inlinedAt: !14393)
!14419 = !DILocation(line: 751, column: 1, scope: !14368)
!14420 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2441, file: !2441, line: 753, type: !14421, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14423)
!14421 = !DISubroutineType(types: !14422)
!14422 = !{null, !2326, !14311}
!14423 = !{!14424, !14425}
!14424 = !DILocalVariable(name: "thread", arg: 1, scope: !14420, file: !2441, line: 753, type: !2326)
!14425 = !DILocalVariable(name: "timeout", arg: 2, scope: !14420, file: !2441, line: 753, type: !14311)
!14426 = !DILocation(line: 0, scope: !14420)
!14427 = !DILocation(line: 755, column: 7, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14420, file: !2441, line: 755, column: 6)
!14429 = !DILocation(line: 755, column: 6, scope: !14420)
!14430 = !DILocation(line: 756, column: 3, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14428, file: !2441, line: 755, column: 41)
!14432 = !DILocation(line: 757, column: 2, scope: !14431)
!14433 = !DILocation(line: 758, column: 1, scope: !14420)
!14434 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12758, file: !12758, line: 47, type: !14421, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14435)
!14435 = !{!14436, !14437}
!14436 = !DILocalVariable(name: "thread", arg: 1, scope: !14434, file: !12758, line: 47, type: !2326)
!14437 = !DILocalVariable(name: "ticks", arg: 2, scope: !14434, file: !12758, line: 47, type: !14311)
!14438 = !DILocation(line: 0, scope: !14434)
!14439 = !DILocation(line: 49, column: 30, scope: !14434)
!14440 = !DILocation(line: 49, column: 2, scope: !14434)
!14441 = !DILocation(line: 50, column: 1, scope: !14434)
!14442 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2441, file: !2441, line: 795, type: !2383, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14443)
!14443 = !{!14444, !14445, !14446, !14448, !14449}
!14444 = !DILocalVariable(name: "timeout", arg: 1, scope: !14442, file: !2441, line: 795, type: !2385)
!14445 = !DILocalVariable(name: "thread", scope: !14442, file: !2441, line: 797, type: !2326)
!14446 = !DILocalVariable(name: "__i", scope: !14447, file: !2441, line: 800, type: !13487)
!14447 = distinct !DILexicalBlock(scope: !14442, file: !2441, line: 800, column: 2)
!14448 = !DILocalVariable(name: "__key", scope: !14447, file: !2441, line: 800, type: !13487)
!14449 = !DILocalVariable(name: "killed", scope: !14450, file: !2441, line: 801, type: !334)
!14450 = distinct !DILexicalBlock(scope: !14451, file: !2441, line: 800, column: 26)
!14451 = distinct !DILexicalBlock(scope: !14447, file: !2441, line: 800, column: 2)
!14452 = !DILocation(line: 0, scope: !14442)
!14453 = !DILocation(line: 797, column: 28, scope: !14442)
!14454 = !DILocation(line: 0, scope: !14447)
!14455 = !DILocation(line: 0, scope: !13495, inlinedAt: !14456)
!14456 = distinct !DILocation(line: 800, column: 2, scope: !14447)
!14457 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14458)
!14458 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14456)
!14459 = !DILocation(line: 0, scope: !13504, inlinedAt: !14458)
!14460 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14456)
!14461 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14456)
!14462 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14456)
!14463 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14456)
!14464 = !DILocation(line: 801, column: 27, scope: !14450)
!14465 = !DILocation(line: 801, column: 32, scope: !14450)
!14466 = !DILocation(line: 801, column: 61, scope: !14450)
!14467 = !DILocation(line: 0, scope: !14450)
!14468 = !DILocation(line: 804, column: 7, scope: !14450)
!14469 = !DILocation(line: 805, column: 21, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14471, file: !2441, line: 805, column: 8)
!14471 = distinct !DILexicalBlock(scope: !14472, file: !2441, line: 804, column: 16)
!14472 = distinct !DILexicalBlock(scope: !14450, file: !2441, line: 804, column: 7)
!14473 = !DILocation(line: 805, column: 31, scope: !14470)
!14474 = !DILocation(line: 805, column: 8, scope: !14471)
!14475 = !DILocation(line: 806, column: 5, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14470, file: !2441, line: 805, column: 40)
!14477 = !DILocation(line: 807, column: 4, scope: !14476)
!14478 = !DILocation(line: 808, column: 4, scope: !14471)
!14479 = !DILocation(line: 809, column: 4, scope: !14471)
!14480 = !DILocation(line: 810, column: 4, scope: !14471)
!14481 = !DILocation(line: 811, column: 3, scope: !14471)
!14482 = !DILocation(line: 0, scope: !13529, inlinedAt: !14483)
!14483 = distinct !DILocation(line: 800, column: 2, scope: !14451)
!14484 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14483)
!14485 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14483)
!14486 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14483)
!14487 = !DILocation(line: 0, scope: !13543, inlinedAt: !14488)
!14488 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14483)
!14489 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14488)
!14490 = !DILocation(line: 813, column: 1, scope: !14442)
!14491 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2441, file: !2441, line: 779, type: !13453, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14492)
!14492 = !{!14493}
!14493 = !DILocalVariable(name: "thread", arg: 1, scope: !14491, file: !2441, line: 779, type: !2326)
!14494 = !DILocation(line: 0, scope: !14491)
!14495 = !DILocation(line: 781, column: 21, scope: !14491)
!14496 = !DILocation(line: 781, column: 2, scope: !14491)
!14497 = !DILocation(line: 782, column: 2, scope: !14491)
!14498 = !DILocation(line: 783, column: 15, scope: !14491)
!14499 = !DILocation(line: 783, column: 25, scope: !14491)
!14500 = !DILocation(line: 784, column: 1, scope: !14491)
!14501 = distinct !DISubprogram(name: "pended_on_thread", scope: !2441, file: !2441, line: 724, type: !14502, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14504)
!14502 = !DISubroutineType(types: !14503)
!14503 = !{!2357, !2326}
!14504 = !{!14505}
!14505 = !DILocalVariable(name: "thread", arg: 1, scope: !14501, file: !2441, line: 724, type: !2326)
!14506 = !DILocation(line: 0, scope: !14501)
!14507 = !DILocation(line: 726, column: 2, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14509, file: !2441, line: 726, column: 2)
!14509 = distinct !DILexicalBlock(scope: !14501, file: !2441, line: 726, column: 2)
!14510 = !DILocation(line: 726, column: 2, scope: !14509)
!14511 = !DILocation(line: 726, column: 2, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14508, file: !2441, line: 726, column: 2)
!14513 = !DILocation(line: 728, column: 2, scope: !14501)
!14514 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2441, file: !2441, line: 1137, type: !14386, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14515)
!14515 = !{!14516, !14517}
!14516 = !DILocalVariable(name: "pq", arg: 1, scope: !14514, file: !2441, line: 1137, type: !14388)
!14517 = !DILocalVariable(name: "thread", arg: 2, scope: !14514, file: !2441, line: 1137, type: !2326)
!14518 = !DILocation(line: 0, scope: !14514)
!14519 = !DILocation(line: 1139, column: 2, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14521, file: !2441, line: 1139, column: 2)
!14521 = distinct !DILexicalBlock(scope: !14514, file: !2441, line: 1139, column: 2)
!14522 = !DILocation(line: 1139, column: 2, scope: !14521)
!14523 = !DILocation(line: 1139, column: 2, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14520, file: !2441, line: 1139, column: 2)
!14525 = !DILocation(line: 1141, column: 33, scope: !14514)
!14526 = !DILocation(line: 1141, column: 2, scope: !14514)
!14527 = !DILocation(line: 1142, column: 1, scope: !14514)
!14528 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12086, file: !12086, line: 165, type: !13453, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14529)
!14529 = !{!14530}
!14530 = !DILocalVariable(name: "thread", arg: 1, scope: !14528, file: !12086, line: 165, type: !2326)
!14531 = !DILocation(line: 0, scope: !14528)
!14532 = !DILocation(line: 167, column: 15, scope: !14528)
!14533 = !DILocation(line: 167, column: 28, scope: !14528)
!14534 = !DILocation(line: 168, column: 1, scope: !14528)
!14535 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !128, file: !128, line: 496, type: !14536, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14539)
!14536 = !DISubroutineType(types: !14537)
!14537 = !{null, !14538}
!14538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!14539 = !{!14540, !14541, !14543}
!14540 = !DILocalVariable(name: "node", arg: 1, scope: !14535, file: !128, line: 496, type: !14538)
!14541 = !DILocalVariable(name: "prev", scope: !14535, file: !128, line: 498, type: !14542)
!14542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14538)
!14543 = !DILocalVariable(name: "next", scope: !14535, file: !128, line: 499, type: !14542)
!14544 = !DILocation(line: 0, scope: !14535)
!14545 = !DILocation(line: 498, column: 34, scope: !14535)
!14546 = !DILocation(line: 499, column: 34, scope: !14535)
!14547 = !DILocation(line: 501, column: 8, scope: !14535)
!14548 = !DILocation(line: 501, column: 13, scope: !14535)
!14549 = !DILocation(line: 502, column: 8, scope: !14535)
!14550 = !DILocation(line: 502, column: 13, scope: !14535)
!14551 = !DILocation(line: 503, column: 2, scope: !14535)
!14552 = !DILocation(line: 504, column: 1, scope: !14535)
!14553 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !14536, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14554)
!14554 = !{!14555}
!14555 = !DILocalVariable(name: "node", arg: 1, scope: !14553, file: !128, line: 211, type: !14538)
!14556 = !DILocation(line: 0, scope: !14553)
!14557 = !DILocation(line: 213, column: 8, scope: !14553)
!14558 = !DILocation(line: 213, column: 13, scope: !14553)
!14559 = !DILocation(line: 214, column: 8, scope: !14553)
!14560 = !DILocation(line: 214, column: 13, scope: !14553)
!14561 = !DILocation(line: 215, column: 1, scope: !14553)
!14562 = distinct !DISubprogram(name: "unready_thread", scope: !2441, file: !2441, line: 731, type: !13453, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14563)
!14563 = !{!14564}
!14564 = !DILocalVariable(name: "thread", arg: 1, scope: !14562, file: !2441, line: 731, type: !2326)
!14565 = !DILocation(line: 0, scope: !14562)
!14566 = !DILocation(line: 733, column: 6, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14562, file: !2441, line: 733, column: 6)
!14568 = !DILocation(line: 733, column: 6, scope: !14562)
!14569 = !DILocation(line: 0, scope: !13687, inlinedAt: !14570)
!14570 = distinct !DILocation(line: 734, column: 3, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14567, file: !2441, line: 733, column: 34)
!14572 = !DILocation(line: 266, column: 15, scope: !13687, inlinedAt: !14570)
!14573 = !DILocation(line: 266, column: 28, scope: !13687, inlinedAt: !14570)
!14574 = !DILocation(line: 0, scope: !13695, inlinedAt: !14575)
!14575 = distinct !DILocation(line: 268, column: 3, scope: !13699, inlinedAt: !14570)
!14576 = !DILocation(line: 234, column: 2, scope: !13695, inlinedAt: !14575)
!14577 = !DILocation(line: 735, column: 2, scope: !14571)
!14578 = !DILocation(line: 736, column: 25, scope: !14562)
!14579 = !DILocation(line: 736, column: 22, scope: !14562)
!14580 = !DILocation(line: 736, column: 2, scope: !14562)
!14581 = !DILocation(line: 737, column: 1, scope: !14562)
!14582 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12086, file: !12086, line: 160, type: !13453, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14583)
!14583 = !{!14584}
!14584 = !DILocalVariable(name: "thread", arg: 1, scope: !14582, file: !12086, line: 160, type: !2326)
!14585 = !DILocation(line: 0, scope: !14582)
!14586 = !DILocation(line: 162, column: 15, scope: !14582)
!14587 = !DILocation(line: 162, column: 28, scope: !14582)
!14588 = !DILocation(line: 163, column: 1, scope: !14582)
!14589 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !14590, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14592)
!14590 = !DISubroutineType(types: !14591)
!14591 = !{!14538, !14388}
!14592 = !{!14593}
!14593 = !DILocalVariable(name: "list", arg: 1, scope: !14589, file: !128, line: 294, type: !14388)
!14594 = !DILocation(line: 0, scope: !14589)
!14595 = !DILocation(line: 296, column: 9, scope: !14589)
!14596 = !DILocation(line: 296, column: 49, scope: !14589)
!14597 = !DILocation(line: 296, column: 2, scope: !14589)
!14598 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !128, file: !128, line: 443, type: !14599, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14601)
!14599 = !DISubroutineType(types: !14600)
!14600 = !{null, !14538, !14538}
!14601 = !{!14602, !14603, !14604}
!14602 = !DILocalVariable(name: "successor", arg: 1, scope: !14598, file: !128, line: 443, type: !14538)
!14603 = !DILocalVariable(name: "node", arg: 2, scope: !14598, file: !128, line: 443, type: !14538)
!14604 = !DILocalVariable(name: "prev", scope: !14598, file: !128, line: 445, type: !14542)
!14605 = !DILocation(line: 0, scope: !14598)
!14606 = !DILocation(line: 445, column: 39, scope: !14598)
!14607 = !DILocation(line: 447, column: 8, scope: !14598)
!14608 = !DILocation(line: 447, column: 13, scope: !14598)
!14609 = !DILocation(line: 448, column: 8, scope: !14598)
!14610 = !DILocation(line: 448, column: 13, scope: !14598)
!14611 = !DILocation(line: 449, column: 8, scope: !14598)
!14612 = !DILocation(line: 449, column: 13, scope: !14598)
!14613 = !DILocation(line: 450, column: 18, scope: !14598)
!14614 = !DILocation(line: 451, column: 1, scope: !14598)
!14615 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !128, file: !128, line: 341, type: !14616, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14618)
!14616 = !DISubroutineType(types: !14617)
!14617 = !{!14538, !14388, !14538}
!14618 = !{!14619, !14620}
!14619 = !DILocalVariable(name: "list", arg: 1, scope: !14615, file: !128, line: 341, type: !14388)
!14620 = !DILocalVariable(name: "node", arg: 2, scope: !14615, file: !128, line: 342, type: !14538)
!14621 = !DILocation(line: 0, scope: !14615)
!14622 = !DILocation(line: 344, column: 15, scope: !14615)
!14623 = !DILocation(line: 344, column: 9, scope: !14615)
!14624 = !DILocation(line: 344, column: 26, scope: !14615)
!14625 = !DILocation(line: 344, column: 2, scope: !14615)
!14626 = distinct !DISubprogram(name: "sys_dlist_append", scope: !128, file: !128, line: 404, type: !14627, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14629)
!14627 = !DISubroutineType(types: !14628)
!14628 = !{null, !14388, !14538}
!14629 = !{!14630, !14631, !14632}
!14630 = !DILocalVariable(name: "list", arg: 1, scope: !14626, file: !128, line: 404, type: !14388)
!14631 = !DILocalVariable(name: "node", arg: 2, scope: !14626, file: !128, line: 404, type: !14538)
!14632 = !DILocalVariable(name: "tail", scope: !14626, file: !128, line: 406, type: !14542)
!14633 = !DILocation(line: 0, scope: !14626)
!14634 = !DILocation(line: 406, column: 34, scope: !14626)
!14635 = !DILocation(line: 408, column: 8, scope: !14626)
!14636 = !DILocation(line: 408, column: 13, scope: !14626)
!14637 = !DILocation(line: 409, column: 8, scope: !14626)
!14638 = !DILocation(line: 409, column: 13, scope: !14626)
!14639 = !DILocation(line: 411, column: 8, scope: !14626)
!14640 = !DILocation(line: 411, column: 13, scope: !14626)
!14641 = !DILocation(line: 412, column: 13, scope: !14626)
!14642 = !DILocation(line: 413, column: 1, scope: !14626)
!14643 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !128, file: !128, line: 325, type: !14616, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14644)
!14644 = !{!14645, !14646}
!14645 = !DILocalVariable(name: "list", arg: 1, scope: !14643, file: !128, line: 325, type: !14388)
!14646 = !DILocalVariable(name: "node", arg: 2, scope: !14643, file: !128, line: 326, type: !14538)
!14647 = !DILocation(line: 0, scope: !14643)
!14648 = !DILocation(line: 328, column: 24, scope: !14643)
!14649 = !DILocation(line: 328, column: 15, scope: !14643)
!14650 = !DILocation(line: 328, column: 9, scope: !14643)
!14651 = !DILocation(line: 328, column: 45, scope: !14643)
!14652 = !DILocation(line: 328, column: 2, scope: !14643)
!14653 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !14654, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14656)
!14654 = !DISubroutineType(types: !14655)
!14655 = !{!334, !14388}
!14656 = !{!14657}
!14657 = !DILocalVariable(name: "list", arg: 1, scope: !14653, file: !128, line: 266, type: !14388)
!14658 = !DILocation(line: 0, scope: !14653)
!14659 = !DILocation(line: 268, column: 15, scope: !14653)
!14660 = !DILocation(line: 268, column: 20, scope: !14653)
!14661 = !DILocation(line: 268, column: 2, scope: !14653)
!14662 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2441, file: !2441, line: 786, type: !13453, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14663)
!14663 = !{!14664, !14665, !14667}
!14664 = !DILocalVariable(name: "thread", arg: 1, scope: !14662, file: !2441, line: 786, type: !2326)
!14665 = !DILocalVariable(name: "__i", scope: !14666, file: !2441, line: 788, type: !13487)
!14666 = distinct !DILexicalBlock(scope: !14662, file: !2441, line: 788, column: 2)
!14667 = !DILocalVariable(name: "__key", scope: !14666, file: !2441, line: 788, type: !13487)
!14668 = !DILocation(line: 0, scope: !14662)
!14669 = !DILocation(line: 0, scope: !14666)
!14670 = !DILocation(line: 0, scope: !13495, inlinedAt: !14671)
!14671 = distinct !DILocation(line: 788, column: 2, scope: !14666)
!14672 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14673)
!14673 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14671)
!14674 = !DILocation(line: 0, scope: !13504, inlinedAt: !14673)
!14675 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14671)
!14676 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14671)
!14677 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14671)
!14678 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14671)
!14679 = !DILocation(line: 789, column: 3, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !14681, file: !2441, line: 788, column: 26)
!14681 = distinct !DILexicalBlock(scope: !14666, file: !2441, line: 788, column: 2)
!14682 = !DILocation(line: 0, scope: !13529, inlinedAt: !14683)
!14683 = distinct !DILocation(line: 788, column: 2, scope: !14681)
!14684 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14683)
!14685 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14683)
!14686 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14683)
!14687 = !DILocation(line: 0, scope: !13543, inlinedAt: !14688)
!14688 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14683)
!14689 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14688)
!14690 = !DILocation(line: 791, column: 1, scope: !14662)
!14691 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2441, file: !2441, line: 816, type: !14692, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14694)
!14692 = !DISubroutineType(types: !14693)
!14693 = !{!109, !110, !2357, !14311}
!14694 = !{!14695, !14696, !14697, !14698, !14699, !14701}
!14695 = !DILocalVariable(name: "key", arg: 1, scope: !14691, file: !2441, line: 816, type: !110)
!14696 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14691, file: !2441, line: 816, type: !2357)
!14697 = !DILocalVariable(name: "timeout", arg: 3, scope: !14691, file: !2441, line: 816, type: !14311)
!14698 = !DILocalVariable(name: "ret", scope: !14691, file: !2441, line: 828, type: !109)
!14699 = !DILocalVariable(name: "__i", scope: !14700, file: !2441, line: 829, type: !13487)
!14700 = distinct !DILexicalBlock(scope: !14691, file: !2441, line: 829, column: 2)
!14701 = !DILocalVariable(name: "__key", scope: !14700, file: !2441, line: 829, type: !13487)
!14702 = !DILocation(line: 0, scope: !14691)
!14703 = !DILocation(line: 823, column: 14, scope: !14691)
!14704 = !DILocation(line: 823, column: 2, scope: !14691)
!14705 = !DILocation(line: 826, column: 20, scope: !14691)
!14706 = !DILocation(line: 826, column: 18, scope: !14691)
!14707 = !DILocation(line: 828, column: 12, scope: !14691)
!14708 = !DILocation(line: 0, scope: !14700)
!14709 = !DILocation(line: 0, scope: !13495, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 829, column: 2, scope: !14700)
!14711 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14712)
!14712 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14710)
!14713 = !DILocation(line: 0, scope: !13504, inlinedAt: !14712)
!14714 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14710)
!14715 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14710)
!14716 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14710)
!14717 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14710)
!14718 = !DILocation(line: 830, column: 7, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14720, file: !2441, line: 830, column: 7)
!14720 = distinct !DILexicalBlock(scope: !14721, file: !2441, line: 829, column: 26)
!14721 = distinct !DILexicalBlock(scope: !14700, file: !2441, line: 829, column: 2)
!14722 = !DILocation(line: 830, column: 26, scope: !14719)
!14723 = !DILocation(line: 830, column: 23, scope: !14719)
!14724 = !DILocation(line: 830, column: 7, scope: !14720)
!14725 = !DILocation(line: 831, column: 20, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14719, file: !2441, line: 830, column: 36)
!14727 = !DILocation(line: 832, column: 3, scope: !14726)
!14728 = !DILocation(line: 0, scope: !13529, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 829, column: 2, scope: !14721)
!14730 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14729)
!14731 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14729)
!14732 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14729)
!14733 = !DILocation(line: 0, scope: !13543, inlinedAt: !14734)
!14734 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14729)
!14735 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14734)
!14736 = !DILocation(line: 834, column: 2, scope: !14691)
!14737 = distinct !DISubprogram(name: "z_pend_curr", scope: !2441, file: !2441, line: 840, type: !14738, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14740)
!14738 = !DISubroutineType(types: !14739)
!14739 = !{!109, !13498, !13487, !2357, !14311}
!14740 = !{!14741, !14742, !14743, !14744}
!14741 = !DILocalVariable(name: "lock", arg: 1, scope: !14737, file: !2441, line: 840, type: !13498)
!14742 = !DILocalVariable(name: "key", arg: 2, scope: !14737, file: !2441, line: 840, type: !13487)
!14743 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14737, file: !2441, line: 841, type: !2357)
!14744 = !DILocalVariable(name: "timeout", arg: 4, scope: !14737, file: !2441, line: 841, type: !14311)
!14745 = !DILocation(line: 0, scope: !14737)
!14746 = !DILocation(line: 844, column: 20, scope: !14737)
!14747 = !DILocation(line: 844, column: 18, scope: !14737)
!14748 = !DILocation(line: 846, column: 2, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14750, file: !2441, line: 846, column: 2)
!14750 = distinct !DILexicalBlock(scope: !14737, file: !2441, line: 846, column: 2)
!14751 = !DILocation(line: 846, column: 2, scope: !14750)
!14752 = !DILocation(line: 846, column: 2, scope: !14753)
!14753 = distinct !DILexicalBlock(scope: !14749, file: !2441, line: 846, column: 2)
!14754 = !DILocation(line: 0, scope: !13495, inlinedAt: !14755)
!14755 = distinct !DILocation(line: 856, column: 9, scope: !14737)
!14756 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14757)
!14757 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14755)
!14758 = !DILocation(line: 0, scope: !13504, inlinedAt: !14757)
!14759 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14755)
!14760 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14755)
!14761 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14755)
!14762 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14755)
!14763 = !DILocation(line: 857, column: 14, scope: !14737)
!14764 = !DILocation(line: 857, column: 2, scope: !14737)
!14765 = !DILocation(line: 0, scope: !14110, inlinedAt: !14766)
!14766 = distinct !DILocation(line: 858, column: 2, scope: !14737)
!14767 = !DILocation(line: 225, column: 2, scope: !14117, inlinedAt: !14766)
!14768 = !DILocation(line: 225, column: 2, scope: !14118, inlinedAt: !14766)
!14769 = !DILocation(line: 225, column: 2, scope: !14121, inlinedAt: !14766)
!14770 = !DILocation(line: 0, scope: !14101, inlinedAt: !14771)
!14771 = distinct !DILocation(line: 859, column: 9, scope: !14737)
!14772 = !DILocation(line: 0, scope: !14110, inlinedAt: !14773)
!14773 = distinct !DILocation(line: 195, column: 2, scope: !14101, inlinedAt: !14771)
!14774 = !DILocation(line: 225, column: 2, scope: !14117, inlinedAt: !14773)
!14775 = !DILocation(line: 225, column: 2, scope: !14118, inlinedAt: !14773)
!14776 = !DILocation(line: 225, column: 2, scope: !14121, inlinedAt: !14773)
!14777 = !DILocation(line: 196, column: 9, scope: !14101, inlinedAt: !14771)
!14778 = !DILocation(line: 859, column: 2, scope: !14737)
!14779 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2441, file: !2441, line: 862, type: !14780, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14782)
!14780 = !DISubroutineType(types: !14781)
!14781 = !{!2326, !2357}
!14782 = !{!14783, !14784, !14785, !14787}
!14783 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14779, file: !2441, line: 862, type: !2357)
!14784 = !DILocalVariable(name: "thread", scope: !14779, file: !2441, line: 864, type: !2326)
!14785 = !DILocalVariable(name: "__i", scope: !14786, file: !2441, line: 866, type: !13487)
!14786 = distinct !DILexicalBlock(scope: !14779, file: !2441, line: 866, column: 2)
!14787 = !DILocalVariable(name: "__key", scope: !14786, file: !2441, line: 866, type: !13487)
!14788 = !DILocation(line: 0, scope: !14779)
!14789 = !DILocation(line: 0, scope: !14786)
!14790 = !DILocation(line: 0, scope: !13495, inlinedAt: !14791)
!14791 = distinct !DILocation(line: 866, column: 2, scope: !14786)
!14792 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14793)
!14793 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14791)
!14794 = !DILocation(line: 0, scope: !13504, inlinedAt: !14793)
!14795 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14791)
!14796 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14791)
!14797 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14791)
!14798 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14791)
!14799 = !DILocation(line: 867, column: 12, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14801, file: !2441, line: 866, column: 26)
!14801 = distinct !DILexicalBlock(scope: !14786, file: !2441, line: 866, column: 2)
!14802 = !DILocation(line: 869, column: 14, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14800, file: !2441, line: 869, column: 7)
!14804 = !DILocation(line: 869, column: 7, scope: !14800)
!14805 = !DILocation(line: 870, column: 4, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14803, file: !2441, line: 869, column: 23)
!14807 = !DILocation(line: 871, column: 3, scope: !14806)
!14808 = !DILocation(line: 0, scope: !13529, inlinedAt: !14809)
!14809 = distinct !DILocation(line: 866, column: 2, scope: !14801)
!14810 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14809)
!14811 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14809)
!14812 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14809)
!14813 = !DILocation(line: 0, scope: !13543, inlinedAt: !14814)
!14814 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14809)
!14815 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14814)
!14816 = !DILocation(line: 874, column: 2, scope: !14779)
!14817 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2441, file: !2441, line: 1144, type: !14818, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14820)
!14818 = !DISubroutineType(types: !14819)
!14819 = !{!2326, !14388}
!14820 = !{!14821, !14822, !14823}
!14821 = !DILocalVariable(name: "pq", arg: 1, scope: !14817, file: !2441, line: 1144, type: !14388)
!14822 = !DILocalVariable(name: "thread", scope: !14817, file: !2441, line: 1146, type: !2326)
!14823 = !DILocalVariable(name: "n", scope: !14817, file: !2441, line: 1147, type: !14538)
!14824 = !DILocation(line: 0, scope: !14817)
!14825 = !DILocation(line: 1147, column: 19, scope: !14817)
!14826 = !DILocation(line: 1152, column: 2, scope: !14817)
!14827 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2441, file: !2441, line: 877, type: !14780, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14828)
!14828 = !{!14829, !14830, !14831, !14833}
!14829 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14827, file: !2441, line: 877, type: !2357)
!14830 = !DILocalVariable(name: "thread", scope: !14827, file: !2441, line: 879, type: !2326)
!14831 = !DILocalVariable(name: "__i", scope: !14832, file: !2441, line: 881, type: !13487)
!14832 = distinct !DILexicalBlock(scope: !14827, file: !2441, line: 881, column: 2)
!14833 = !DILocalVariable(name: "__key", scope: !14832, file: !2441, line: 881, type: !13487)
!14834 = !DILocation(line: 0, scope: !14827)
!14835 = !DILocation(line: 0, scope: !14832)
!14836 = !DILocation(line: 0, scope: !13495, inlinedAt: !14837)
!14837 = distinct !DILocation(line: 881, column: 2, scope: !14832)
!14838 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14839)
!14839 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14837)
!14840 = !DILocation(line: 0, scope: !13504, inlinedAt: !14839)
!14841 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14837)
!14842 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14837)
!14843 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14837)
!14844 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14837)
!14845 = !DILocation(line: 882, column: 12, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14847, file: !2441, line: 881, column: 26)
!14847 = distinct !DILexicalBlock(scope: !14832, file: !2441, line: 881, column: 2)
!14848 = !DILocation(line: 884, column: 14, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14846, file: !2441, line: 884, column: 7)
!14850 = !DILocation(line: 884, column: 7, scope: !14846)
!14851 = !DILocation(line: 885, column: 4, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14849, file: !2441, line: 884, column: 23)
!14853 = !DILocation(line: 886, column: 10, scope: !14852)
!14854 = !DILocation(line: 887, column: 3, scope: !14852)
!14855 = !DILocation(line: 0, scope: !13529, inlinedAt: !14856)
!14856 = distinct !DILocation(line: 881, column: 2, scope: !14847)
!14857 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14856)
!14858 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14856)
!14859 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14856)
!14860 = !DILocation(line: 0, scope: !13543, inlinedAt: !14861)
!14861 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14856)
!14862 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14861)
!14863 = !DILocation(line: 890, column: 2, scope: !14827)
!14864 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2441, file: !2441, line: 893, type: !13453, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14865)
!14865 = !{!14866}
!14866 = !DILocalVariable(name: "thread", arg: 1, scope: !14864, file: !2441, line: 893, type: !2326)
!14867 = !DILocation(line: 0, scope: !14864)
!14868 = !DILocation(line: 0, scope: !14662, inlinedAt: !14869)
!14869 = distinct !DILocation(line: 895, column: 2, scope: !14864)
!14870 = !DILocation(line: 0, scope: !14666, inlinedAt: !14869)
!14871 = !DILocation(line: 0, scope: !13495, inlinedAt: !14872)
!14872 = distinct !DILocation(line: 788, column: 2, scope: !14666, inlinedAt: !14869)
!14873 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14872)
!14875 = !DILocation(line: 0, scope: !13504, inlinedAt: !14874)
!14876 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14872)
!14877 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14872)
!14878 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14872)
!14879 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14872)
!14880 = !DILocation(line: 789, column: 3, scope: !14680, inlinedAt: !14869)
!14881 = !DILocation(line: 0, scope: !13529, inlinedAt: !14882)
!14882 = distinct !DILocation(line: 788, column: 2, scope: !14681, inlinedAt: !14869)
!14883 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14882)
!14884 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14882)
!14885 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14882)
!14886 = !DILocation(line: 0, scope: !13543, inlinedAt: !14887)
!14887 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14882)
!14888 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14887)
!14889 = !DILocation(line: 896, column: 8, scope: !14864)
!14890 = !DILocation(line: 897, column: 1, scope: !14864)
!14891 = distinct !DISubprogram(name: "z_set_prio", scope: !2441, file: !2441, line: 902, type: !13832, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14892)
!14892 = !{!14893, !14894, !14895, !14896, !14898}
!14893 = !DILocalVariable(name: "thread", arg: 1, scope: !14891, file: !2441, line: 902, type: !2326)
!14894 = !DILocalVariable(name: "prio", arg: 2, scope: !14891, file: !2441, line: 902, type: !109)
!14895 = !DILocalVariable(name: "need_sched", scope: !14891, file: !2441, line: 904, type: !334)
!14896 = !DILocalVariable(name: "__i", scope: !14897, file: !2441, line: 906, type: !13487)
!14897 = distinct !DILexicalBlock(scope: !14891, file: !2441, line: 906, column: 2)
!14898 = !DILocalVariable(name: "__key", scope: !14897, file: !2441, line: 906, type: !13487)
!14899 = !DILocation(line: 0, scope: !14891)
!14900 = !DILocation(line: 0, scope: !14897)
!14901 = !DILocation(line: 0, scope: !13495, inlinedAt: !14902)
!14902 = distinct !DILocation(line: 906, column: 2, scope: !14897)
!14903 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14904)
!14904 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14902)
!14905 = !DILocation(line: 0, scope: !13504, inlinedAt: !14904)
!14906 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14902)
!14907 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14902)
!14908 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14902)
!14909 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14902)
!14910 = !DILocation(line: 907, column: 16, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14912, file: !2441, line: 906, column: 26)
!14912 = distinct !DILexicalBlock(scope: !14897, file: !2441, line: 906, column: 2)
!14913 = !DILocation(line: 909, column: 7, scope: !14911)
!14914 = !DILocation(line: 0, scope: !13687, inlinedAt: !14915)
!14915 = distinct !DILocation(line: 912, column: 5, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14917, file: !2441, line: 911, column: 63)
!14917 = distinct !DILexicalBlock(scope: !14918, file: !2441, line: 911, column: 8)
!14918 = distinct !DILexicalBlock(scope: !14919, file: !2441, line: 909, column: 19)
!14919 = distinct !DILexicalBlock(scope: !14911, file: !2441, line: 909, column: 7)
!14920 = !DILocation(line: 266, column: 28, scope: !13687, inlinedAt: !14915)
!14921 = !DILocation(line: 0, scope: !13695, inlinedAt: !14922)
!14922 = distinct !DILocation(line: 268, column: 3, scope: !13699, inlinedAt: !14915)
!14923 = !DILocation(line: 234, column: 2, scope: !13695, inlinedAt: !14922)
!14924 = !DILocation(line: 913, column: 23, scope: !14916)
!14925 = !DILocation(line: 0, scope: !13704, inlinedAt: !14926)
!14926 = distinct !DILocation(line: 914, column: 5, scope: !14916)
!14927 = !DILocation(line: 252, column: 28, scope: !13704, inlinedAt: !14926)
!14928 = !DILocation(line: 0, scope: !13711, inlinedAt: !14929)
!14929 = distinct !DILocation(line: 254, column: 3, scope: !13715, inlinedAt: !14926)
!14930 = !DILocation(line: 229, column: 2, scope: !13711, inlinedAt: !14929)
!14931 = !DILocation(line: 918, column: 4, scope: !14918)
!14932 = !DILocation(line: 919, column: 3, scope: !14918)
!14933 = !DILocation(line: 920, column: 22, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14919, file: !2441, line: 919, column: 10)
!14935 = !DILocation(line: 0, scope: !13529, inlinedAt: !14936)
!14936 = distinct !DILocation(line: 906, column: 2, scope: !14912)
!14937 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14936)
!14938 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14936)
!14939 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14936)
!14940 = !DILocation(line: 0, scope: !13543, inlinedAt: !14941)
!14941 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14936)
!14942 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14941)
!14943 = !DILocation(line: 926, column: 2, scope: !14891)
!14944 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2441, file: !2441, line: 929, type: !14945, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14947)
!14945 = !DISubroutineType(types: !14946)
!14946 = !{null, !2326, !109}
!14947 = !{!14948, !14949, !14950}
!14948 = !DILocalVariable(name: "thread", arg: 1, scope: !14944, file: !2441, line: 929, type: !2326)
!14949 = !DILocalVariable(name: "prio", arg: 2, scope: !14944, file: !2441, line: 929, type: !109)
!14950 = !DILocalVariable(name: "need_sched", scope: !14944, file: !2441, line: 931, type: !334)
!14951 = !DILocation(line: 0, scope: !14944)
!14952 = !DILocation(line: 931, column: 20, scope: !14944)
!14953 = !DILocation(line: 935, column: 17, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14944, file: !2441, line: 935, column: 6)
!14955 = !DILocation(line: 935, column: 20, scope: !14954)
!14956 = !DILocation(line: 935, column: 35, scope: !14954)
!14957 = !DILocation(line: 935, column: 48, scope: !14954)
!14958 = !DILocation(line: 935, column: 6, scope: !14944)
!14959 = !DILocation(line: 936, column: 3, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14954, file: !2441, line: 935, column: 55)
!14961 = !DILocation(line: 937, column: 2, scope: !14960)
!14962 = !DILocation(line: 938, column: 1, scope: !14944)
!14963 = distinct !DISubprogram(name: "k_sched_lock", scope: !2441, file: !2441, line: 987, type: !3086, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14964)
!14964 = !{!14965, !14967}
!14965 = !DILocalVariable(name: "__i", scope: !14966, file: !2441, line: 989, type: !13487)
!14966 = distinct !DILexicalBlock(scope: !14963, file: !2441, line: 989, column: 2)
!14967 = !DILocalVariable(name: "__key", scope: !14966, file: !2441, line: 989, type: !13487)
!14968 = !DILocation(line: 0, scope: !14966)
!14969 = !DILocation(line: 0, scope: !13495, inlinedAt: !14970)
!14970 = distinct !DILocation(line: 989, column: 2, scope: !14966)
!14971 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !14972)
!14972 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !14970)
!14973 = !DILocation(line: 0, scope: !13504, inlinedAt: !14972)
!14974 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !14970)
!14975 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !14970)
!14976 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !14970)
!14977 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !14970)
!14978 = !DILocation(line: 992, column: 3, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14980, file: !2441, line: 989, column: 26)
!14980 = distinct !DILexicalBlock(scope: !14966, file: !2441, line: 989, column: 2)
!14981 = !DILocation(line: 0, scope: !13529, inlinedAt: !14982)
!14982 = distinct !DILocation(line: 989, column: 2, scope: !14980)
!14983 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !14982)
!14984 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !14982)
!14985 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !14982)
!14986 = !DILocation(line: 0, scope: !13543, inlinedAt: !14987)
!14987 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !14982)
!14988 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !14987)
!14989 = !DILocation(line: 994, column: 1, scope: !14963)
!14990 = distinct !DISubprogram(name: "z_sched_lock", scope: !12086, file: !12086, line: 251, type: !3086, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !1998)
!14991 = !DILocation(line: 1031, column: 3, scope: !14150, inlinedAt: !14992)
!14992 = distinct !DILocation(line: 48, column: 10, scope: !14154, inlinedAt: !14993)
!14993 = distinct !DILocation(line: 253, column: 2, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14995, file: !12086, line: 253, column: 2)
!14995 = distinct !DILexicalBlock(scope: !14990, file: !12086, line: 253, column: 2)
!14996 = !DILocation(line: 0, scope: !14150, inlinedAt: !14992)
!14997 = !DILocation(line: 48, column: 9, scope: !14154, inlinedAt: !14993)
!14998 = !DILocation(line: 253, column: 2, scope: !14995)
!14999 = !DILocation(line: 253, column: 2, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14994, file: !12086, line: 253, column: 2)
!15001 = !DILocation(line: 254, column: 2, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !15003, file: !12086, line: 254, column: 2)
!15003 = distinct !DILexicalBlock(scope: !14990, file: !12086, line: 254, column: 2)
!15004 = !DILocation(line: 254, column: 2, scope: !15003)
!15005 = !DILocation(line: 254, column: 2, scope: !15006)
!15006 = distinct !DILexicalBlock(scope: !15002, file: !12086, line: 254, column: 2)
!15007 = !DILocation(line: 256, column: 2, scope: !14990)
!15008 = !DILocation(line: 258, column: 2, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !14990, file: !12086, line: 258, column: 2)
!15010 = !{i64 2154198455}
!15011 = !DILocation(line: 259, column: 1, scope: !14990)
!15012 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2441, file: !2441, line: 996, type: !3086, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15013)
!15013 = !{!15014, !15016}
!15014 = !DILocalVariable(name: "__i", scope: !15015, file: !2441, line: 998, type: !13487)
!15015 = distinct !DILexicalBlock(scope: !15012, file: !2441, line: 998, column: 2)
!15016 = !DILocalVariable(name: "__key", scope: !15015, file: !2441, line: 998, type: !13487)
!15017 = !DILocation(line: 0, scope: !15015)
!15018 = !DILocation(line: 0, scope: !13495, inlinedAt: !15019)
!15019 = distinct !DILocation(line: 998, column: 2, scope: !15015)
!15020 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !15021)
!15021 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !15019)
!15022 = !DILocation(line: 0, scope: !13504, inlinedAt: !15021)
!15023 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !15019)
!15024 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !15019)
!15025 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !15019)
!15026 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !15019)
!15027 = !DILocation(line: 999, column: 3, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15029, file: !2441, line: 999, column: 3)
!15029 = distinct !DILexicalBlock(scope: !15030, file: !2441, line: 999, column: 3)
!15030 = distinct !DILexicalBlock(scope: !15031, file: !2441, line: 998, column: 26)
!15031 = distinct !DILexicalBlock(scope: !15015, file: !2441, line: 998, column: 2)
!15032 = !DILocation(line: 999, column: 3, scope: !15029)
!15033 = !DILocation(line: 999, column: 3, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !15028, file: !2441, line: 999, column: 3)
!15035 = !DILocation(line: 1031, column: 3, scope: !14150, inlinedAt: !15036)
!15036 = distinct !DILocation(line: 48, column: 10, scope: !14154, inlinedAt: !15037)
!15037 = distinct !DILocation(line: 1000, column: 3, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15039, file: !2441, line: 1000, column: 3)
!15039 = distinct !DILexicalBlock(scope: !15030, file: !2441, line: 1000, column: 3)
!15040 = !DILocation(line: 0, scope: !14150, inlinedAt: !15036)
!15041 = !DILocation(line: 48, column: 9, scope: !14154, inlinedAt: !15037)
!15042 = !DILocation(line: 1000, column: 3, scope: !15039)
!15043 = !DILocation(line: 1000, column: 3, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !15038, file: !2441, line: 1000, column: 3)
!15045 = !DILocation(line: 1002, column: 5, scope: !15030)
!15046 = !DILocation(line: 1002, column: 20, scope: !15030)
!15047 = !DILocation(line: 1002, column: 3, scope: !15030)
!15048 = !DILocation(line: 1003, column: 3, scope: !15030)
!15049 = !DILocation(line: 0, scope: !13529, inlinedAt: !15050)
!15050 = distinct !DILocation(line: 998, column: 2, scope: !15031)
!15051 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !15050)
!15052 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !15050)
!15053 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !15050)
!15054 = !DILocation(line: 0, scope: !13543, inlinedAt: !15055)
!15055 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !15050)
!15056 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !15055)
!15057 = !DILocation(line: 1011, column: 2, scope: !15012)
!15058 = !DILocation(line: 1012, column: 1, scope: !15012)
!15059 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2441, file: !2441, line: 1014, type: !13820, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !1998)
!15060 = !DILocation(line: 1028, column: 25, scope: !15059)
!15061 = !DILocation(line: 1028, column: 2, scope: !15059)
!15062 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2441, file: !2441, line: 1155, type: !13741, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15063)
!15063 = !{!15064, !15065, !15066, !15067, !15068}
!15064 = !DILocalVariable(name: "a", arg: 1, scope: !15062, file: !2441, line: 1155, type: !2355)
!15065 = !DILocalVariable(name: "b", arg: 2, scope: !15062, file: !2441, line: 1155, type: !2355)
!15066 = !DILocalVariable(name: "thread_a", scope: !15062, file: !2441, line: 1157, type: !2326)
!15067 = !DILocalVariable(name: "thread_b", scope: !15062, file: !2441, line: 1157, type: !2326)
!15068 = !DILocalVariable(name: "cmp", scope: !15062, file: !2441, line: 1158, type: !736)
!15069 = !DILocation(line: 0, scope: !15062)
!15070 = !DILocation(line: 1160, column: 13, scope: !15062)
!15071 = !DILocation(line: 1161, column: 13, scope: !15062)
!15072 = !DILocation(line: 1163, column: 8, scope: !15062)
!15073 = !DILocation(line: 1165, column: 10, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15062, file: !2441, line: 1165, column: 6)
!15075 = !DILocation(line: 1165, column: 6, scope: !15062)
!15076 = !DILocation(line: 1167, column: 17, scope: !15077)
!15077 = distinct !DILexicalBlock(scope: !15074, file: !2441, line: 1167, column: 13)
!15078 = !DILocation(line: 1167, column: 13, scope: !15074)
!15079 = !DILocation(line: 1170, column: 25, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15077, file: !2441, line: 1169, column: 9)
!15081 = !DILocation(line: 1170, column: 52, scope: !15080)
!15082 = !DILocation(line: 1170, column: 35, scope: !15080)
!15083 = !DILocation(line: 1170, column: 3, scope: !15080)
!15084 = !DILocation(line: 0, scope: !15074)
!15085 = !DILocation(line: 1173, column: 1, scope: !15062)
!15086 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2441, file: !2441, line: 1246, type: !15087, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15095)
!15087 = !DISubroutineType(types: !15088)
!15088 = !{!2326, !15089}
!15089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15090, size: 32)
!15090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !2005, line: 53, size: 2080, elements: !15091)
!15091 = !{!15092, !15094}
!15092 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15090, file: !2005, line: 54, baseType: !15093, size: 2048)
!15093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2362, size: 2048, elements: !227)
!15094 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15090, file: !2005, line: 55, baseType: !32, size: 32, offset: 2048)
!15095 = !{!15096, !15097, !15098, !15099}
!15096 = !DILocalVariable(name: "pq", arg: 1, scope: !15086, file: !2441, line: 1246, type: !15089)
!15097 = !DILocalVariable(name: "thread", scope: !15086, file: !2441, line: 1252, type: !2326)
!15098 = !DILocalVariable(name: "l", scope: !15086, file: !2441, line: 1253, type: !14388)
!15099 = !DILocalVariable(name: "n", scope: !15086, file: !2441, line: 1254, type: !14538)
!15100 = !DILocation(line: 0, scope: !15086)
!15101 = !DILocation(line: 1248, column: 11, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15086, file: !2441, line: 1248, column: 6)
!15103 = !DILocation(line: 1248, column: 7, scope: !15102)
!15104 = !DILocation(line: 1248, column: 6, scope: !15086)
!15105 = !DILocation(line: 1253, column: 31, scope: !15086)
!15106 = !DILocation(line: 1253, column: 20, scope: !15086)
!15107 = !DILocation(line: 1254, column: 19, scope: !15086)
!15108 = !DILocation(line: 1260, column: 1, scope: !15086)
!15109 = distinct !DISubprogram(name: "z_unpend_all", scope: !2441, file: !2441, line: 1262, type: !15110, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15112)
!15110 = !DISubroutineType(types: !15111)
!15111 = !{!109, !2357}
!15112 = !{!15113, !15114, !15115}
!15113 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15109, file: !2441, line: 1262, type: !2357)
!15114 = !DILocalVariable(name: "need_sched", scope: !15109, file: !2441, line: 1264, type: !109)
!15115 = !DILocalVariable(name: "thread", scope: !15109, file: !2441, line: 1265, type: !2326)
!15116 = !DILocation(line: 0, scope: !15109)
!15117 = !DILocation(line: 1267, column: 19, scope: !15109)
!15118 = !DILocation(line: 1267, column: 41, scope: !15109)
!15119 = !DILocation(line: 1267, column: 2, scope: !15109)
!15120 = !DILocation(line: 1268, column: 3, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15109, file: !2441, line: 1267, column: 50)
!15122 = !DILocation(line: 1269, column: 3, scope: !15121)
!15123 = distinct !{!15123, !15119, !15124}
!15124 = !DILocation(line: 1271, column: 2, scope: !15109)
!15125 = !DILocation(line: 1273, column: 2, scope: !15109)
!15126 = distinct !DISubprogram(name: "z_waitq_head", scope: !12690, file: !12690, line: 52, type: !14780, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15127)
!15127 = !{!15128}
!15128 = !DILocalVariable(name: "w", arg: 1, scope: !15126, file: !12690, line: 52, type: !2357)
!15129 = !DILocation(line: 0, scope: !15126)
!15130 = !DILocation(line: 54, column: 52, scope: !15126)
!15131 = !DILocation(line: 54, column: 28, scope: !15126)
!15132 = !DILocation(line: 54, column: 9, scope: !15126)
!15133 = !DILocation(line: 54, column: 2, scope: !15126)
!15134 = distinct !DISubprogram(name: "init_ready_q", scope: !2441, file: !2441, line: 1276, type: !15135, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15142)
!15135 = !DISubroutineType(types: !15136)
!15136 = !{null, !15137}
!15137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15138, size: 32)
!15138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !123, line: 83, size: 160, elements: !15139)
!15139 = !{!15140, !15141}
!15140 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15138, file: !123, line: 86, baseType: !2326, size: 32)
!15141 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15138, file: !123, line: 92, baseType: !13732, size: 128, offset: 32)
!15142 = !{!15143}
!15143 = !DILocalVariable(name: "rq", arg: 1, scope: !15134, file: !2441, line: 1276, type: !15137)
!15144 = !DILocation(line: 0, scope: !15134)
!15145 = !DILocation(line: 1279, column: 13, scope: !15134)
!15146 = !DILocation(line: 1291, column: 1, scope: !15134)
!15147 = distinct !DISubprogram(name: "z_sched_init", scope: !2441, file: !2441, line: 1293, type: !3086, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !1998)
!15148 = !DILocation(line: 1302, column: 2, scope: !15147)
!15149 = !DILocation(line: 1306, column: 2, scope: !15147)
!15150 = !DILocation(line: 1309, column: 1, scope: !15147)
!15151 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2441, file: !2441, line: 1311, type: !15152, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15155)
!15152 = !DISubroutineType(types: !15153)
!15153 = !{!109, !15154}
!15154 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !2326)
!15155 = !{!15156}
!15156 = !DILocalVariable(name: "thread", arg: 1, scope: !15151, file: !2441, line: 1311, type: !15154)
!15157 = !DILocation(line: 0, scope: !15151)
!15158 = !DILocation(line: 1313, column: 22, scope: !15151)
!15159 = !DILocation(line: 1313, column: 9, scope: !15151)
!15160 = !DILocation(line: 1313, column: 2, scope: !15151)
!15161 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2441, file: !2441, line: 1325, type: !15162, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15164)
!15162 = !DISubroutineType(types: !15163)
!15163 = !{null, !15154, !109}
!15164 = !{!15165, !15166, !15167}
!15165 = !DILocalVariable(name: "thread", arg: 1, scope: !15161, file: !2441, line: 1325, type: !15154)
!15166 = !DILocalVariable(name: "prio", arg: 2, scope: !15161, file: !2441, line: 1325, type: !109)
!15167 = !DILocalVariable(name: "th", scope: !15161, file: !2441, line: 1334, type: !2326)
!15168 = !DILocation(line: 0, scope: !15161)
!15169 = !DILocation(line: 1331, column: 2, scope: !15170)
!15170 = distinct !DILexicalBlock(scope: !15171, file: !2441, line: 1331, column: 2)
!15171 = distinct !DILexicalBlock(scope: !15172, file: !2441, line: 1331, column: 2)
!15172 = distinct !DILexicalBlock(scope: !15161, file: !2441, line: 1331, column: 2)
!15173 = !DILocation(line: 1331, column: 2, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15170, file: !2441, line: 1331, column: 2)
!15175 = !DILocation(line: 1031, column: 3, scope: !14150, inlinedAt: !15176)
!15176 = distinct !DILocation(line: 48, column: 10, scope: !14154, inlinedAt: !15177)
!15177 = distinct !DILocation(line: 1332, column: 2, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15179, file: !2441, line: 1332, column: 2)
!15179 = distinct !DILexicalBlock(scope: !15161, file: !2441, line: 1332, column: 2)
!15180 = !DILocation(line: 0, scope: !14150, inlinedAt: !15176)
!15181 = !DILocation(line: 48, column: 9, scope: !14154, inlinedAt: !15177)
!15182 = !DILocation(line: 1332, column: 2, scope: !15179)
!15183 = !DILocation(line: 1332, column: 2, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15178, file: !2441, line: 1332, column: 2)
!15185 = !DILocation(line: 1336, column: 2, scope: !15161)
!15186 = !DILocation(line: 1337, column: 1, scope: !15161)
!15187 = distinct !DISubprogram(name: "k_can_yield", scope: !2441, file: !2441, line: 1384, type: !6986, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !1998)
!15188 = !DILocation(line: 1386, column: 11, scope: !15187)
!15189 = !DILocation(line: 1386, column: 29, scope: !15187)
!15190 = !DILocation(line: 1386, column: 32, scope: !15187)
!15191 = !DILocation(line: 1386, column: 46, scope: !15187)
!15192 = !DILocation(line: 1387, column: 28, scope: !15187)
!15193 = !DILocation(line: 1387, column: 4, scope: !15187)
!15194 = !DILocation(line: 1386, column: 2, scope: !15187)
!15195 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !119, file: !119, line: 989, type: !6986, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !1998)
!15196 = !DILocation(line: 993, column: 10, scope: !15195)
!15197 = !DILocation(line: 993, column: 2, scope: !15195)
!15198 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2441, file: !2441, line: 1390, type: !3086, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15199)
!15199 = !{!15200}
!15200 = !DILocalVariable(name: "key", scope: !15198, file: !2441, line: 1396, type: !13487)
!15201 = !DILocation(line: 1031, column: 3, scope: !14150, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 48, column: 10, scope: !14154, inlinedAt: !15203)
!15203 = distinct !DILocation(line: 1392, column: 2, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15205, file: !2441, line: 1392, column: 2)
!15205 = distinct !DILexicalBlock(scope: !15198, file: !2441, line: 1392, column: 2)
!15206 = !DILocation(line: 0, scope: !14150, inlinedAt: !15202)
!15207 = !DILocation(line: 48, column: 9, scope: !14154, inlinedAt: !15203)
!15208 = !DILocation(line: 1392, column: 2, scope: !15205)
!15209 = !DILocation(line: 1392, column: 2, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15204, file: !2441, line: 1392, column: 2)
!15211 = !DILocation(line: 0, scope: !13495, inlinedAt: !15212)
!15212 = distinct !DILocation(line: 1396, column: 25, scope: !15198)
!15213 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !15214)
!15214 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !15212)
!15215 = !DILocation(line: 0, scope: !13504, inlinedAt: !15214)
!15216 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !15212)
!15217 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !15212)
!15218 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !15212)
!15219 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !15212)
!15220 = !DILocation(line: 0, scope: !15198)
!15221 = !DILocation(line: 1400, column: 18, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15223, file: !2441, line: 1399, column: 36)
!15223 = distinct !DILexicalBlock(scope: !15198, file: !2441, line: 1398, column: 6)
!15224 = !DILocation(line: 0, scope: !13687, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 1400, column: 3, scope: !15222)
!15226 = !DILocation(line: 266, column: 15, scope: !13687, inlinedAt: !15225)
!15227 = !DILocation(line: 266, column: 28, scope: !13687, inlinedAt: !15225)
!15228 = !DILocation(line: 0, scope: !13695, inlinedAt: !15229)
!15229 = distinct !DILocation(line: 268, column: 3, scope: !13699, inlinedAt: !15225)
!15230 = !DILocation(line: 234, column: 2, scope: !13695, inlinedAt: !15229)
!15231 = !DILocation(line: 1402, column: 15, scope: !15198)
!15232 = !DILocation(line: 0, scope: !13704, inlinedAt: !15233)
!15233 = distinct !DILocation(line: 1402, column: 2, scope: !15198)
!15234 = !DILocation(line: 252, column: 15, scope: !13704, inlinedAt: !15233)
!15235 = !DILocation(line: 252, column: 28, scope: !13704, inlinedAt: !15233)
!15236 = !DILocation(line: 0, scope: !13711, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 254, column: 3, scope: !13715, inlinedAt: !15233)
!15238 = !DILocation(line: 229, column: 2, scope: !13711, inlinedAt: !15237)
!15239 = !DILocation(line: 1403, column: 2, scope: !15198)
!15240 = !DILocation(line: 0, scope: !14101, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 1404, column: 2, scope: !15198)
!15242 = !DILocation(line: 0, scope: !14110, inlinedAt: !15243)
!15243 = distinct !DILocation(line: 195, column: 2, scope: !14101, inlinedAt: !15241)
!15244 = !DILocation(line: 225, column: 2, scope: !14117, inlinedAt: !15243)
!15245 = !DILocation(line: 225, column: 2, scope: !14118, inlinedAt: !15243)
!15246 = !DILocation(line: 225, column: 2, scope: !14121, inlinedAt: !15243)
!15247 = !DILocation(line: 196, column: 9, scope: !14101, inlinedAt: !15241)
!15248 = !DILocation(line: 1405, column: 1, scope: !15198)
!15249 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2441, file: !2441, line: 1459, type: !15250, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15252)
!15250 = !DISubroutineType(types: !15251)
!15251 = !{!736, !14311}
!15252 = !{!15253, !15254, !15255}
!15253 = !DILocalVariable(name: "timeout", arg: 1, scope: !15249, file: !2441, line: 1459, type: !14311)
!15254 = !DILocalVariable(name: "ticks", scope: !15249, file: !2441, line: 1461, type: !104)
!15255 = !DILocalVariable(name: "ret", scope: !15249, file: !2441, line: 1480, type: !736)
!15256 = !DILocation(line: 0, scope: !15249)
!15257 = !DILocation(line: 1031, column: 3, scope: !14150, inlinedAt: !15258)
!15258 = distinct !DILocation(line: 48, column: 10, scope: !14154, inlinedAt: !15259)
!15259 = distinct !DILocation(line: 1463, column: 2, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15261, file: !2441, line: 1463, column: 2)
!15261 = distinct !DILexicalBlock(scope: !15249, file: !2441, line: 1463, column: 2)
!15262 = !DILocation(line: 0, scope: !14150, inlinedAt: !15258)
!15263 = !DILocation(line: 48, column: 9, scope: !14154, inlinedAt: !15259)
!15264 = !DILocation(line: 1463, column: 2, scope: !15261)
!15265 = !DILocation(line: 1463, column: 2, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15260, file: !2441, line: 1463, column: 2)
!15267 = !DILocation(line: 1468, column: 6, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15249, file: !2441, line: 1468, column: 6)
!15269 = !DILocation(line: 1468, column: 6, scope: !15249)
!15270 = !DILocation(line: 1469, column: 20, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15268, file: !2441, line: 1468, column: 40)
!15272 = !DILocation(line: 1469, column: 3, scope: !15271)
!15273 = !DILocation(line: 1473, column: 3, scope: !15271)
!15274 = !DILocation(line: 1478, column: 10, scope: !15249)
!15275 = !DILocation(line: 1480, column: 16, scope: !15249)
!15276 = !DILocation(line: 1485, column: 1, scope: !15249)
!15277 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3271, file: !3271, line: 310, type: !15278, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15280)
!15278 = !DISubroutineType(types: !15279)
!15279 = !{null, !15154}
!15280 = !{!15281}
!15281 = !DILocalVariable(name: "thread", arg: 1, scope: !15277, file: !3271, line: 310, type: !15154)
!15282 = !DILocation(line: 0, scope: !15277)
!15283 = !DILocation(line: 319, column: 2, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15277, file: !3271, line: 319, column: 2)
!15285 = !{i64 2154114613}
!15286 = !DILocation(line: 320, column: 2, scope: !15277)
!15287 = !DILocation(line: 321, column: 1, scope: !15277)
!15288 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2441, file: !2441, line: 1415, type: !15289, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15291)
!15289 = !DISubroutineType(types: !15290)
!15290 = !{!736, !104}
!15291 = !{!15292, !15293, !15294, !15295}
!15292 = !DILocalVariable(name: "ticks", arg: 1, scope: !15288, file: !2441, line: 1415, type: !104)
!15293 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15288, file: !2441, line: 1418, type: !110)
!15294 = !DILocalVariable(name: "timeout", scope: !15288, file: !2441, line: 1430, type: !14311)
!15295 = !DILocalVariable(name: "key", scope: !15288, file: !2441, line: 1437, type: !13487)
!15296 = !DILocation(line: 0, scope: !15288)
!15297 = !DILocation(line: 1031, column: 3, scope: !14150, inlinedAt: !15298)
!15298 = distinct !DILocation(line: 48, column: 10, scope: !14154, inlinedAt: !15299)
!15299 = distinct !DILocation(line: 1420, column: 2, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15301, file: !2441, line: 1420, column: 2)
!15301 = distinct !DILexicalBlock(scope: !15288, file: !2441, line: 1420, column: 2)
!15302 = !DILocation(line: 0, scope: !14150, inlinedAt: !15298)
!15303 = !DILocation(line: 48, column: 9, scope: !14154, inlinedAt: !15299)
!15304 = !DILocation(line: 1420, column: 2, scope: !15301)
!15305 = !DILocation(line: 1420, column: 2, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15300, file: !2441, line: 1420, column: 2)
!15307 = !DILocation(line: 1425, column: 12, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15288, file: !2441, line: 1425, column: 6)
!15309 = !DILocation(line: 1425, column: 6, scope: !15288)
!15310 = !DILocation(line: 1426, column: 3, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15308, file: !2441, line: 1425, column: 18)
!15312 = !DILocation(line: 1427, column: 3, scope: !15311)
!15313 = !DILocation(line: 1431, column: 24, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15288, file: !2441, line: 1431, column: 6)
!15315 = !DILocation(line: 1431, column: 6, scope: !15288)
!15316 = !DILocation(line: 1432, column: 35, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15314, file: !2441, line: 1431, column: 30)
!15318 = !DILocation(line: 1432, column: 27, scope: !15317)
!15319 = !DILocation(line: 1433, column: 2, scope: !15317)
!15320 = !DILocation(line: 1434, column: 27, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15314, file: !2441, line: 1433, column: 9)
!15322 = !DILocation(line: 0, scope: !15314)
!15323 = !DILocation(line: 0, scope: !13495, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 1437, column: 25, scope: !15288)
!15325 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !15324)
!15327 = !DILocation(line: 0, scope: !13504, inlinedAt: !15326)
!15328 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !15324)
!15329 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !15324)
!15330 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !15324)
!15331 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !15324)
!15332 = !DILocation(line: 1440, column: 20, scope: !15288)
!15333 = !DILocation(line: 1440, column: 18, scope: !15288)
!15334 = !DILocation(line: 1442, column: 2, scope: !15288)
!15335 = !DILocation(line: 1443, column: 23, scope: !15288)
!15336 = !DILocation(line: 1443, column: 2, scope: !15288)
!15337 = !DILocation(line: 1444, column: 29, scope: !15288)
!15338 = !DILocation(line: 1444, column: 2, scope: !15288)
!15339 = !DILocation(line: 0, scope: !14101, inlinedAt: !15340)
!15340 = distinct !DILocation(line: 1446, column: 8, scope: !15288)
!15341 = !DILocation(line: 0, scope: !14110, inlinedAt: !15342)
!15342 = distinct !DILocation(line: 195, column: 2, scope: !14101, inlinedAt: !15340)
!15343 = !DILocation(line: 225, column: 2, scope: !14117, inlinedAt: !15342)
!15344 = !DILocation(line: 225, column: 2, scope: !14118, inlinedAt: !15342)
!15345 = !DILocation(line: 225, column: 2, scope: !14121, inlinedAt: !15342)
!15346 = !DILocation(line: 196, column: 9, scope: !14101, inlinedAt: !15340)
!15347 = !DILocation(line: 1448, column: 2, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15349, file: !2441, line: 1448, column: 2)
!15349 = distinct !DILexicalBlock(scope: !15288, file: !2441, line: 1448, column: 2)
!15350 = !DILocation(line: 1448, column: 2, scope: !15349)
!15351 = !DILocation(line: 1448, column: 2, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15348, file: !2441, line: 1448, column: 2)
!15353 = !DILocation(line: 1450, column: 10, scope: !15288)
!15354 = !DILocation(line: 1450, column: 45, scope: !15288)
!15355 = !DILocation(line: 1450, column: 43, scope: !15288)
!15356 = !DILocation(line: 1451, column: 6, scope: !15288)
!15357 = !DILocation(line: 1457, column: 1, scope: !15288)
!15358 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3324, file: !3324, line: 1103, type: !3325, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15359)
!15359 = !{!15360}
!15360 = !DILocalVariable(name: "t", arg: 1, scope: !15358, file: !3324, line: 1103, type: !111)
!15361 = !DILocation(line: 0, scope: !15358)
!15362 = !DILocation(line: 0, scope: !13555, inlinedAt: !15363)
!15363 = distinct !DILocation(line: 1106, column: 9, scope: !15358)
!15364 = !DILocation(line: 139, column: 13, scope: !15365, inlinedAt: !15363)
!15365 = distinct !DILexicalBlock(scope: !15366, file: !3324, line: 138, column: 10)
!15366 = distinct !DILexicalBlock(scope: !15367, file: !3324, line: 136, column: 7)
!15367 = distinct !DILexicalBlock(scope: !13576, file: !3324, line: 134, column: 17)
!15368 = !DILocation(line: 1106, column: 2, scope: !15358)
!15369 = distinct !DISubprogram(name: "k_yield", scope: !3271, file: !3271, line: 140, type: !3086, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !1998)
!15370 = !DILocation(line: 148, column: 2, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15369, file: !3271, line: 148, column: 2)
!15372 = !{i64 2154113933}
!15373 = !DILocation(line: 149, column: 2, scope: !15369)
!15374 = !DILocation(line: 150, column: 1, scope: !15369)
!15375 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2441, file: !2441, line: 1495, type: !15376, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15378)
!15376 = !DISubroutineType(types: !15377)
!15377 = !{!736, !109}
!15378 = !{!15379, !15380}
!15379 = !DILocalVariable(name: "us", arg: 1, scope: !15375, file: !2441, line: 1495, type: !109)
!15380 = !DILocalVariable(name: "ticks", scope: !15375, file: !2441, line: 1497, type: !736)
!15381 = !DILocation(line: 0, scope: !15375)
!15382 = !DILocation(line: 1501, column: 31, scope: !15375)
!15383 = !DILocation(line: 1501, column: 10, scope: !15375)
!15384 = !DILocation(line: 1502, column: 23, scope: !15375)
!15385 = !DILocation(line: 1502, column: 10, scope: !15375)
!15386 = !DILocation(line: 1506, column: 31, scope: !15375)
!15387 = !DILocation(line: 1506, column: 9, scope: !15375)
!15388 = !DILocation(line: 1506, column: 2, scope: !15375)
!15389 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3324, file: !3324, line: 571, type: !3325, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15390)
!15390 = !{!15391}
!15391 = !DILocalVariable(name: "t", arg: 1, scope: !15389, file: !3324, line: 571, type: !111)
!15392 = !DILocation(line: 0, scope: !15389)
!15393 = !DILocation(line: 0, scope: !13555, inlinedAt: !15394)
!15394 = distinct !DILocation(line: 574, column: 9, scope: !15389)
!15395 = !DILocation(line: 135, column: 5, scope: !15367, inlinedAt: !15394)
!15396 = !DILocation(line: 139, column: 13, scope: !15365, inlinedAt: !15394)
!15397 = !DILocation(line: 574, column: 2, scope: !15389)
!15398 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3324, file: !3324, line: 1187, type: !3325, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15399)
!15399 = !{!15400}
!15400 = !DILocalVariable(name: "t", arg: 1, scope: !15398, file: !3324, line: 1187, type: !111)
!15401 = !DILocation(line: 0, scope: !15398)
!15402 = !DILocation(line: 0, scope: !13555, inlinedAt: !15403)
!15403 = distinct !DILocation(line: 1190, column: 9, scope: !15398)
!15404 = !DILocation(line: 145, column: 13, scope: !15405, inlinedAt: !15403)
!15405 = distinct !DILexicalBlock(scope: !13573, file: !3324, line: 144, column: 10)
!15406 = !DILocation(line: 1190, column: 2, scope: !15398)
!15407 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2441, file: !2441, line: 1517, type: !15278, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15408)
!15408 = !{!15409}
!15409 = !DILocalVariable(name: "thread", arg: 1, scope: !15407, file: !2441, line: 1517, type: !15154)
!15410 = !DILocation(line: 0, scope: !15407)
!15411 = !DILocation(line: 1521, column: 6, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15407, file: !2441, line: 1521, column: 6)
!15413 = !DILocation(line: 1521, column: 6, scope: !15407)
!15414 = !DILocation(line: 1525, column: 6, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15407, file: !2441, line: 1525, column: 6)
!15416 = !DILocation(line: 1525, column: 37, scope: !15415)
!15417 = !DILocation(line: 1525, column: 6, scope: !15407)
!15418 = !DILocation(line: 1527, column: 20, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !15420, file: !2441, line: 1527, column: 7)
!15420 = distinct !DILexicalBlock(scope: !15415, file: !2441, line: 1525, column: 42)
!15421 = !DILocation(line: 1527, column: 33, scope: !15419)
!15422 = !DILocation(line: 1527, column: 7, scope: !15420)
!15423 = !DILocation(line: 1532, column: 2, scope: !15407)
!15424 = !DILocation(line: 1533, column: 2, scope: !15407)
!15425 = !DILocation(line: 1031, column: 3, scope: !14150, inlinedAt: !15426)
!15426 = distinct !DILocation(line: 48, column: 10, scope: !14154, inlinedAt: !15427)
!15427 = distinct !DILocation(line: 1537, column: 7, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !15407, file: !2441, line: 1537, column: 6)
!15429 = !DILocation(line: 0, scope: !14150, inlinedAt: !15426)
!15430 = !DILocation(line: 48, column: 9, scope: !14154, inlinedAt: !15427)
!15431 = !DILocation(line: 1537, column: 6, scope: !15407)
!15432 = !DILocation(line: 1538, column: 3, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15428, file: !2441, line: 1537, column: 25)
!15434 = !DILocation(line: 1539, column: 2, scope: !15433)
!15435 = !DILocation(line: 1540, column: 1, scope: !15407)
!15436 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12086, file: !12086, line: 101, type: !13636, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15437)
!15437 = !{!15438}
!15438 = !DILocalVariable(name: "thread", arg: 1, scope: !15436, file: !12086, line: 101, type: !2326)
!15439 = !DILocation(line: 0, scope: !15436)
!15440 = !DILocation(line: 103, column: 23, scope: !15436)
!15441 = !DILocation(line: 103, column: 36, scope: !15436)
!15442 = !DILocation(line: 103, column: 55, scope: !15436)
!15443 = !DILocation(line: 103, column: 2, scope: !15436)
!15444 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2441, file: !2441, line: 1567, type: !15445, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15447)
!15445 = !DISubroutineType(types: !15446)
!15446 = !{!15154}
!15447 = !{!15448}
!15448 = !DILocalVariable(name: "ret", scope: !15444, file: !2441, line: 1577, type: !15154)
!15449 = !DILocation(line: 1577, column: 30, scope: !15444)
!15450 = !DILocation(line: 0, scope: !15444)
!15451 = !DILocation(line: 1582, column: 2, scope: !15444)
!15452 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2441, file: !2441, line: 1593, type: !7275, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !1998)
!15453 = !DILocation(line: 1031, column: 3, scope: !14150, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 48, column: 10, scope: !14154, inlinedAt: !15455)
!15455 = distinct !DILocation(line: 1595, column: 10, scope: !15452)
!15456 = !DILocation(line: 0, scope: !14150, inlinedAt: !15454)
!15457 = !DILocation(line: 48, column: 9, scope: !14154, inlinedAt: !15455)
!15458 = !DILocation(line: 1595, column: 27, scope: !15452)
!15459 = !DILocation(line: 1595, column: 41, scope: !15452)
!15460 = !DILocation(line: 1595, column: 30, scope: !15452)
!15461 = !DILocation(line: 1595, column: 2, scope: !15452)
!15462 = distinct !DISubprogram(name: "z_thread_abort", scope: !2441, file: !2441, line: 1725, type: !13453, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15463)
!15463 = !{!15464, !15465}
!15464 = !DILocalVariable(name: "thread", arg: 1, scope: !15462, file: !2441, line: 1725, type: !2326)
!15465 = !DILocalVariable(name: "key", scope: !15462, file: !2441, line: 1727, type: !13487)
!15466 = !DILocation(line: 0, scope: !15462)
!15467 = !DILocation(line: 0, scope: !13495, inlinedAt: !15468)
!15468 = distinct !DILocation(line: 1727, column: 25, scope: !15462)
!15469 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !15468)
!15471 = !DILocation(line: 0, scope: !13504, inlinedAt: !15470)
!15472 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !15468)
!15473 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !15468)
!15474 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !15468)
!15475 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !15468)
!15476 = !DILocation(line: 1729, column: 20, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15462, file: !2441, line: 1729, column: 6)
!15478 = !DILocation(line: 1729, column: 33, scope: !15477)
!15479 = !DILocation(line: 1729, column: 48, scope: !15477)
!15480 = !DILocation(line: 1729, column: 6, scope: !15462)
!15481 = !DILocation(line: 0, scope: !13529, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 1730, column: 3, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15477, file: !2441, line: 1729, column: 54)
!15484 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !15482)
!15485 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !15482)
!15486 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !15482)
!15487 = !DILocation(line: 0, scope: !13543, inlinedAt: !15488)
!15488 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !15482)
!15489 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !15488)
!15490 = !DILocation(line: 1731, column: 3, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15492, file: !2441, line: 1731, column: 3)
!15492 = distinct !DILexicalBlock(scope: !15493, file: !2441, line: 1731, column: 3)
!15493 = distinct !DILexicalBlock(scope: !15483, file: !2441, line: 1731, column: 3)
!15494 = !DILocation(line: 1736, column: 20, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15462, file: !2441, line: 1736, column: 6)
!15496 = !DILocation(line: 1736, column: 33, scope: !15495)
!15497 = !DILocation(line: 1736, column: 49, scope: !15495)
!15498 = !DILocation(line: 1736, column: 6, scope: !15462)
!15499 = !DILocation(line: 0, scope: !13529, inlinedAt: !15500)
!15500 = distinct !DILocation(line: 1737, column: 3, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15495, file: !2441, line: 1736, column: 56)
!15502 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !15500)
!15503 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !15500)
!15504 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !15500)
!15505 = !DILocation(line: 0, scope: !13543, inlinedAt: !15506)
!15506 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !15500)
!15507 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !15506)
!15508 = !DILocation(line: 1738, column: 3, scope: !15501)
!15509 = !DILocation(line: 1775, column: 2, scope: !15462)
!15510 = !DILocation(line: 1776, column: 16, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15462, file: !2441, line: 1776, column: 6)
!15512 = !DILocation(line: 1776, column: 13, scope: !15511)
!15513 = !DILocation(line: 1776, column: 25, scope: !15511)
!15514 = !DILocation(line: 1031, column: 3, scope: !14150, inlinedAt: !15515)
!15515 = distinct !DILocation(line: 48, column: 10, scope: !14154, inlinedAt: !15516)
!15516 = distinct !DILocation(line: 1776, column: 29, scope: !15511)
!15517 = !DILocation(line: 0, scope: !14150, inlinedAt: !15515)
!15518 = !DILocation(line: 48, column: 9, scope: !14154, inlinedAt: !15516)
!15519 = !DILocation(line: 1776, column: 6, scope: !15462)
!15520 = !DILocation(line: 0, scope: !14101, inlinedAt: !15521)
!15521 = distinct !DILocation(line: 1777, column: 3, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15511, file: !2441, line: 1776, column: 47)
!15523 = !DILocation(line: 0, scope: !14110, inlinedAt: !15524)
!15524 = distinct !DILocation(line: 195, column: 2, scope: !14101, inlinedAt: !15521)
!15525 = !DILocation(line: 225, column: 2, scope: !14117, inlinedAt: !15524)
!15526 = !DILocation(line: 225, column: 2, scope: !14118, inlinedAt: !15524)
!15527 = !DILocation(line: 225, column: 2, scope: !14121, inlinedAt: !15524)
!15528 = !DILocation(line: 196, column: 9, scope: !14101, inlinedAt: !15521)
!15529 = !DILocation(line: 1778, column: 3, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15531, file: !2441, line: 1778, column: 3)
!15531 = distinct !DILexicalBlock(scope: !15532, file: !2441, line: 1778, column: 3)
!15532 = distinct !DILexicalBlock(scope: !15522, file: !2441, line: 1778, column: 3)
!15533 = !DILocation(line: 0, scope: !13529, inlinedAt: !15534)
!15534 = distinct !DILocation(line: 1780, column: 2, scope: !15462)
!15535 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !15534)
!15536 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !15534)
!15537 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !15534)
!15538 = !DILocation(line: 0, scope: !13543, inlinedAt: !15539)
!15539 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !15534)
!15540 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !15539)
!15541 = !DILocation(line: 1781, column: 1, scope: !15462)
!15542 = distinct !DISubprogram(name: "end_thread", scope: !2441, file: !2441, line: 1690, type: !13453, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15543)
!15543 = !{!15544}
!15544 = !DILocalVariable(name: "thread", arg: 1, scope: !15542, file: !2441, line: 1690, type: !2326)
!15545 = !DILocation(line: 0, scope: !15542)
!15546 = !DILocation(line: 1695, column: 20, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15542, file: !2441, line: 1695, column: 6)
!15548 = !DILocation(line: 1695, column: 33, scope: !15547)
!15549 = !DILocation(line: 1695, column: 49, scope: !15547)
!15550 = !DILocation(line: 1695, column: 6, scope: !15542)
!15551 = !DILocation(line: 1697, column: 29, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15547, file: !2441, line: 1695, column: 56)
!15553 = !DILocation(line: 1698, column: 7, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15552, file: !2441, line: 1698, column: 7)
!15555 = !DILocation(line: 1698, column: 7, scope: !15552)
!15556 = !DILocation(line: 0, scope: !13687, inlinedAt: !15557)
!15557 = distinct !DILocation(line: 1699, column: 4, scope: !15558)
!15558 = distinct !DILexicalBlock(scope: !15554, file: !2441, line: 1698, column: 35)
!15559 = !DILocation(line: 266, column: 28, scope: !13687, inlinedAt: !15557)
!15560 = !DILocation(line: 0, scope: !13695, inlinedAt: !15561)
!15561 = distinct !DILocation(line: 268, column: 3, scope: !13699, inlinedAt: !15557)
!15562 = !DILocation(line: 234, column: 2, scope: !13695, inlinedAt: !15561)
!15563 = !DILocation(line: 1700, column: 3, scope: !15558)
!15564 = !DILocation(line: 1701, column: 20, scope: !15565)
!15565 = distinct !DILexicalBlock(scope: !15552, file: !2441, line: 1701, column: 7)
!15566 = !DILocation(line: 1701, column: 30, scope: !15565)
!15567 = !DILocation(line: 1701, column: 7, scope: !15552)
!15568 = !DILocation(line: 1702, column: 4, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15565, file: !2441, line: 1701, column: 39)
!15570 = !DILocation(line: 1703, column: 3, scope: !15569)
!15571 = !DILocation(line: 1704, column: 9, scope: !15552)
!15572 = !DILocation(line: 1705, column: 23, scope: !15552)
!15573 = !DILocation(line: 1705, column: 3, scope: !15552)
!15574 = !DILocation(line: 1706, column: 3, scope: !15552)
!15575 = !DILocation(line: 1710, column: 3, scope: !15552)
!15576 = !DILocation(line: 1722, column: 2, scope: !15552)
!15577 = !DILocation(line: 1723, column: 1, scope: !15542)
!15578 = distinct !DISubprogram(name: "unpend_all", scope: !2441, file: !2441, line: 1674, type: !15579, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15581)
!15579 = !DISubroutineType(types: !15580)
!15580 = !{null, !2357}
!15581 = !{!15582, !15583}
!15582 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15578, file: !2441, line: 1674, type: !2357)
!15583 = !DILocalVariable(name: "thread", scope: !15578, file: !2441, line: 1676, type: !2326)
!15584 = !DILocation(line: 0, scope: !15578)
!15585 = !DILocation(line: 1678, column: 19, scope: !15578)
!15586 = !DILocation(line: 1678, column: 41, scope: !15578)
!15587 = !DILocation(line: 1678, column: 2, scope: !15578)
!15588 = !DILocation(line: 1679, column: 3, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15578, file: !2441, line: 1678, column: 50)
!15590 = !DILocation(line: 1680, column: 9, scope: !15589)
!15591 = !DILocalVariable(name: "thread", arg: 1, scope: !15592, file: !12106, line: 65, type: !2326)
!15592 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12106, file: !12106, line: 65, type: !15593, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15595)
!15593 = !DISubroutineType(types: !15594)
!15594 = !{null, !2326, !32}
!15595 = !{!15591, !15596}
!15596 = !DILocalVariable(name: "value", arg: 2, scope: !15592, file: !12106, line: 65, type: !32)
!15597 = !DILocation(line: 0, scope: !15592, inlinedAt: !15598)
!15598 = distinct !DILocation(line: 1681, column: 3, scope: !15589)
!15599 = !DILocation(line: 67, column: 15, scope: !15592, inlinedAt: !15598)
!15600 = !DILocation(line: 67, column: 33, scope: !15592, inlinedAt: !15598)
!15601 = !DILocation(line: 1682, column: 3, scope: !15589)
!15602 = distinct !{!15602, !15587, !15603}
!15603 = !DILocation(line: 1683, column: 2, scope: !15578)
!15604 = !DILocation(line: 1684, column: 1, scope: !15578)
!15605 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2441, file: !2441, line: 1794, type: !15606, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15608)
!15606 = !DISubroutineType(types: !15607)
!15607 = !{!109, !2326, !14311}
!15608 = !{!15609, !15610, !15611, !15612}
!15609 = !DILocalVariable(name: "thread", arg: 1, scope: !15605, file: !2441, line: 1794, type: !2326)
!15610 = !DILocalVariable(name: "timeout", arg: 2, scope: !15605, file: !2441, line: 1794, type: !14311)
!15611 = !DILocalVariable(name: "key", scope: !15605, file: !2441, line: 1796, type: !13487)
!15612 = !DILocalVariable(name: "ret", scope: !15605, file: !2441, line: 1797, type: !109)
!15613 = !DILocation(line: 0, scope: !15605)
!15614 = !DILocation(line: 0, scope: !13495, inlinedAt: !15615)
!15615 = distinct !DILocation(line: 1796, column: 25, scope: !15605)
!15616 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !15617)
!15617 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !15615)
!15618 = !DILocation(line: 0, scope: !13504, inlinedAt: !15617)
!15619 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !15615)
!15620 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !15615)
!15621 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !15615)
!15622 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !15615)
!15623 = !DILocation(line: 1801, column: 20, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !15605, file: !2441, line: 1801, column: 6)
!15625 = !DILocation(line: 1801, column: 33, scope: !15624)
!15626 = !DILocation(line: 1801, column: 49, scope: !15624)
!15627 = !DILocation(line: 1801, column: 6, scope: !15605)
!15628 = !DILocation(line: 1803, column: 13, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15624, file: !2441, line: 1803, column: 13)
!15630 = !DILocation(line: 1803, column: 13, scope: !15624)
!15631 = !DILocation(line: 1805, column: 24, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15629, file: !2441, line: 1805, column: 13)
!15633 = !DILocation(line: 1805, column: 21, scope: !15632)
!15634 = !DILocation(line: 1805, column: 34, scope: !15632)
!15635 = !DILocation(line: 1806, column: 20, scope: !15632)
!15636 = !DILocation(line: 1806, column: 44, scope: !15632)
!15637 = !DILocation(line: 1806, column: 30, scope: !15632)
!15638 = !DILocation(line: 1805, column: 13, scope: !15629)
!15639 = !DILocation(line: 1031, column: 3, scope: !14150, inlinedAt: !15640)
!15640 = distinct !DILocation(line: 48, column: 10, scope: !14154, inlinedAt: !15641)
!15641 = distinct !DILocation(line: 1809, column: 3, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15643, file: !2441, line: 1809, column: 3)
!15643 = distinct !DILexicalBlock(scope: !15644, file: !2441, line: 1809, column: 3)
!15644 = distinct !DILexicalBlock(scope: !15632, file: !2441, line: 1808, column: 9)
!15645 = !DILocation(line: 0, scope: !14150, inlinedAt: !15640)
!15646 = !DILocation(line: 48, column: 9, scope: !14154, inlinedAt: !15641)
!15647 = !DILocation(line: 1809, column: 3, scope: !15643)
!15648 = !DILocation(line: 1809, column: 3, scope: !15649)
!15649 = distinct !DILexicalBlock(scope: !15642, file: !2441, line: 1809, column: 3)
!15650 = !DILocation(line: 1810, column: 23, scope: !15644)
!15651 = !DILocation(line: 1810, column: 42, scope: !15644)
!15652 = !DILocation(line: 1810, column: 3, scope: !15644)
!15653 = !DILocation(line: 1811, column: 22, scope: !15644)
!15654 = !DILocation(line: 1811, column: 3, scope: !15644)
!15655 = !DILocation(line: 0, scope: !14101, inlinedAt: !15656)
!15656 = distinct !DILocation(line: 1814, column: 9, scope: !15644)
!15657 = !DILocation(line: 0, scope: !14110, inlinedAt: !15658)
!15658 = distinct !DILocation(line: 195, column: 2, scope: !14101, inlinedAt: !15656)
!15659 = !DILocation(line: 225, column: 2, scope: !14117, inlinedAt: !15658)
!15660 = !DILocation(line: 225, column: 2, scope: !14118, inlinedAt: !15658)
!15661 = !DILocation(line: 225, column: 2, scope: !14121, inlinedAt: !15658)
!15662 = !DILocation(line: 196, column: 9, scope: !14101, inlinedAt: !15656)
!15663 = !DILocation(line: 1817, column: 3, scope: !15644)
!15664 = !DILocation(line: 0, scope: !15624)
!15665 = !DILocation(line: 0, scope: !13529, inlinedAt: !15666)
!15666 = distinct !DILocation(line: 1822, column: 2, scope: !15605)
!15667 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !15666)
!15668 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !15666)
!15669 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !15666)
!15670 = !DILocation(line: 0, scope: !13543, inlinedAt: !15671)
!15671 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !15666)
!15672 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !15671)
!15673 = !DILocation(line: 1823, column: 2, scope: !15605)
!15674 = !DILocation(line: 1824, column: 1, scope: !15605)
!15675 = distinct !DISubprogram(name: "z_sched_wake", scope: !2441, file: !2441, line: 1882, type: !15676, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15678)
!15676 = !DISubroutineType(types: !15677)
!15677 = !{!334, !2357, !109, !108}
!15678 = !{!15679, !15680, !15681, !15682, !15683, !15684, !15686}
!15679 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15675, file: !2441, line: 1882, type: !2357)
!15680 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15675, file: !2441, line: 1882, type: !109)
!15681 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15675, file: !2441, line: 1882, type: !108)
!15682 = !DILocalVariable(name: "thread", scope: !15675, file: !2441, line: 1884, type: !2326)
!15683 = !DILocalVariable(name: "ret", scope: !15675, file: !2441, line: 1885, type: !334)
!15684 = !DILocalVariable(name: "__i", scope: !15685, file: !2441, line: 1887, type: !13487)
!15685 = distinct !DILexicalBlock(scope: !15675, file: !2441, line: 1887, column: 2)
!15686 = !DILocalVariable(name: "__key", scope: !15685, file: !2441, line: 1887, type: !13487)
!15687 = !DILocation(line: 0, scope: !15675)
!15688 = !DILocation(line: 0, scope: !15685)
!15689 = !DILocation(line: 0, scope: !13495, inlinedAt: !15690)
!15690 = distinct !DILocation(line: 1887, column: 2, scope: !15685)
!15691 = !DILocation(line: 55, column: 2, scope: !13504, inlinedAt: !15692)
!15692 = distinct !DILocation(line: 145, column: 10, scope: !13495, inlinedAt: !15690)
!15693 = !DILocation(line: 0, scope: !13504, inlinedAt: !15692)
!15694 = !DILocation(line: 148, column: 2, scope: !13512, inlinedAt: !15690)
!15695 = !DILocation(line: 148, column: 2, scope: !13513, inlinedAt: !15690)
!15696 = !DILocation(line: 148, column: 2, scope: !13516, inlinedAt: !15690)
!15697 = !DILocation(line: 160, column: 2, scope: !13495, inlinedAt: !15690)
!15698 = !DILocation(line: 1888, column: 12, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15700, file: !2441, line: 1887, column: 26)
!15700 = distinct !DILexicalBlock(scope: !15685, file: !2441, line: 1887, column: 2)
!15701 = !DILocation(line: 1890, column: 14, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15699, file: !2441, line: 1890, column: 7)
!15703 = !DILocation(line: 1890, column: 7, scope: !15699)
!15704 = !DILocalVariable(name: "thread", arg: 1, scope: !15705, file: !15706, line: 134, type: !2326)
!15705 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15706, file: !15706, line: 134, type: !15707, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15709)
!15706 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15707 = !DISubroutineType(types: !15708)
!15708 = !{null, !2326, !32, !108}
!15709 = !{!15704, !15710, !15711}
!15710 = !DILocalVariable(name: "value", arg: 2, scope: !15705, file: !15706, line: 135, type: !32)
!15711 = !DILocalVariable(name: "data", arg: 3, scope: !15705, file: !15706, line: 136, type: !108)
!15712 = !DILocation(line: 0, scope: !15705, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 1891, column: 4, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15702, file: !2441, line: 1890, column: 23)
!15715 = !DILocation(line: 0, scope: !15592, inlinedAt: !15716)
!15716 = distinct !DILocation(line: 138, column: 2, scope: !15705, inlinedAt: !15713)
!15717 = !DILocation(line: 67, column: 15, scope: !15592, inlinedAt: !15716)
!15718 = !DILocation(line: 67, column: 33, scope: !15592, inlinedAt: !15716)
!15719 = !DILocation(line: 139, column: 15, scope: !15705, inlinedAt: !15713)
!15720 = !DILocation(line: 139, column: 25, scope: !15705, inlinedAt: !15713)
!15721 = !DILocation(line: 1894, column: 4, scope: !15714)
!15722 = !DILocation(line: 1895, column: 10, scope: !15714)
!15723 = !DILocation(line: 1896, column: 4, scope: !15714)
!15724 = !DILocation(line: 1898, column: 3, scope: !15714)
!15725 = !DILocation(line: 0, scope: !13529, inlinedAt: !15726)
!15726 = distinct !DILocation(line: 1887, column: 2, scope: !15700)
!15727 = !DILocation(line: 194, column: 2, scope: !13537, inlinedAt: !15726)
!15728 = !DILocation(line: 194, column: 2, scope: !13538, inlinedAt: !15726)
!15729 = !DILocation(line: 194, column: 2, scope: !13541, inlinedAt: !15726)
!15730 = !DILocation(line: 0, scope: !13543, inlinedAt: !15731)
!15731 = distinct !DILocation(line: 215, column: 2, scope: !13529, inlinedAt: !15726)
!15732 = !DILocation(line: 95, column: 2, scope: !13543, inlinedAt: !15731)
!15733 = !DILocation(line: 1901, column: 2, scope: !15675)
!15734 = distinct !DISubprogram(name: "z_sched_wait", scope: !2441, file: !2441, line: 1904, type: !15735, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15738)
!15735 = !DISubroutineType(types: !15736)
!15736 = !{!109, !13498, !13487, !2357, !14311, !15737}
!15737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!15738 = !{!15739, !15740, !15741, !15742, !15743, !15744}
!15739 = !DILocalVariable(name: "lock", arg: 1, scope: !15734, file: !2441, line: 1904, type: !13498)
!15740 = !DILocalVariable(name: "key", arg: 2, scope: !15734, file: !2441, line: 1904, type: !13487)
!15741 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15734, file: !2441, line: 1905, type: !2357)
!15742 = !DILocalVariable(name: "timeout", arg: 4, scope: !15734, file: !2441, line: 1905, type: !14311)
!15743 = !DILocalVariable(name: "data", arg: 5, scope: !15734, file: !2441, line: 1905, type: !15737)
!15744 = !DILocalVariable(name: "ret", scope: !15734, file: !2441, line: 1907, type: !109)
!15745 = !DILocation(line: 0, scope: !15734)
!15746 = !DILocation(line: 1907, column: 12, scope: !15734)
!15747 = !DILocation(line: 1909, column: 11, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15734, file: !2441, line: 1909, column: 6)
!15749 = !DILocation(line: 1909, column: 6, scope: !15734)
!15750 = !DILocation(line: 1910, column: 11, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15748, file: !2441, line: 1909, column: 20)
!15752 = !DILocation(line: 1910, column: 26, scope: !15751)
!15753 = !DILocation(line: 1910, column: 9, scope: !15751)
!15754 = !DILocation(line: 1911, column: 2, scope: !15751)
!15755 = !DILocation(line: 1912, column: 2, scope: !15734)
!15756 = distinct !DISubprogram(name: "z_data_copy", scope: !15757, file: !15757, line: 22, type: !3086, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !1998)
!15757 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15758 = !DILocation(line: 24, column: 2, scope: !15756)
!15759 = !DILocation(line: 27, column: 2, scope: !15756)
!15760 = !DILocation(line: 71, column: 1, scope: !15756)
!15761 = distinct !DISubprogram(name: "z_add_timeout", scope: !2478, file: !2478, line: 88, type: !15762, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15768)
!15762 = !DISubroutineType(types: !15763)
!15763 = !{null, !2451, !2470, !15764}
!15764 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15765)
!15765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15766)
!15766 = !{!15767}
!15767 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15765, file: !105, line: 66, baseType: !104, size: 64)
!15768 = !{!15769, !15770, !15771, !15772, !15778, !15779, !15782, !15785}
!15769 = !DILocalVariable(name: "to", arg: 1, scope: !15761, file: !2478, line: 88, type: !2451)
!15770 = !DILocalVariable(name: "fn", arg: 2, scope: !15761, file: !2478, line: 88, type: !2470)
!15771 = !DILocalVariable(name: "timeout", arg: 3, scope: !15761, file: !2478, line: 89, type: !15764)
!15772 = !DILocalVariable(name: "__i", scope: !15773, file: !2478, line: 102, type: !15774)
!15773 = distinct !DILexicalBlock(scope: !15761, file: !2478, line: 102, column: 2)
!15774 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !15775)
!15775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !15776)
!15776 = !{!15777}
!15777 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15775, file: !254, line: 33, baseType: !109, size: 32)
!15778 = !DILocalVariable(name: "__key", scope: !15773, file: !2478, line: 102, type: !15774)
!15779 = !DILocalVariable(name: "t", scope: !15780, file: !2478, line: 103, type: !2451)
!15780 = distinct !DILexicalBlock(scope: !15781, file: !2478, line: 102, column: 24)
!15781 = distinct !DILexicalBlock(scope: !15773, file: !2478, line: 102, column: 2)
!15782 = !DILocalVariable(name: "ticks", scope: !15783, file: !2478, line: 107, type: !104)
!15783 = distinct !DILexicalBlock(scope: !15784, file: !2478, line: 106, column: 39)
!15784 = distinct !DILexicalBlock(scope: !15780, file: !2478, line: 105, column: 7)
!15785 = !DILocalVariable(name: "next_time", scope: !15786, file: !2478, line: 137, type: !736)
!15786 = distinct !DILexicalBlock(scope: !15787, file: !2478, line: 127, column: 22)
!15787 = distinct !DILexicalBlock(scope: !15780, file: !2478, line: 127, column: 7)
!15788 = !DILocation(line: 0, scope: !15761)
!15789 = !DILocation(line: 91, column: 6, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15761, file: !2478, line: 91, column: 6)
!15791 = !DILocation(line: 91, column: 6, scope: !15761)
!15792 = !DILocation(line: 99, column: 2, scope: !15793)
!15793 = distinct !DILexicalBlock(scope: !15794, file: !2478, line: 99, column: 2)
!15794 = distinct !DILexicalBlock(scope: !15761, file: !2478, line: 99, column: 2)
!15795 = !DILocation(line: 99, column: 2, scope: !15794)
!15796 = !DILocation(line: 99, column: 2, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15793, file: !2478, line: 99, column: 2)
!15798 = !DILocation(line: 100, column: 6, scope: !15761)
!15799 = !DILocation(line: 100, column: 9, scope: !15761)
!15800 = !DILocation(line: 0, scope: !15773)
!15801 = !DILocalVariable(name: "l", arg: 1, scope: !15802, file: !254, line: 136, type: !15805)
!15802 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !15803, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15806)
!15803 = !DISubroutineType(types: !15804)
!15804 = !{!15774, !15805}
!15805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!15806 = !{!15801, !15807}
!15807 = !DILocalVariable(name: "k", scope: !15802, file: !254, line: 139, type: !15774)
!15808 = !DILocation(line: 0, scope: !15802, inlinedAt: !15809)
!15809 = distinct !DILocation(line: 102, column: 2, scope: !15773)
!15810 = !DILocation(line: 55, column: 2, scope: !15811, inlinedAt: !15815)
!15811 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5970, file: !5970, line: 42, type: !5971, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15812)
!15812 = !{!15813, !15814}
!15813 = !DILocalVariable(name: "key", scope: !15811, file: !5970, line: 44, type: !32)
!15814 = !DILocalVariable(name: "tmp", scope: !15811, file: !5970, line: 53, type: !32)
!15815 = distinct !DILocation(line: 145, column: 10, scope: !15802, inlinedAt: !15809)
!15816 = !{i64 1956046}
!15817 = !DILocation(line: 0, scope: !15811, inlinedAt: !15815)
!15818 = !DILocation(line: 148, column: 2, scope: !15819, inlinedAt: !15809)
!15819 = distinct !DILexicalBlock(scope: !15820, file: !254, line: 148, column: 2)
!15820 = distinct !DILexicalBlock(scope: !15802, file: !254, line: 148, column: 2)
!15821 = !DILocation(line: 148, column: 2, scope: !15820, inlinedAt: !15809)
!15822 = !DILocation(line: 148, column: 2, scope: !15823, inlinedAt: !15809)
!15823 = distinct !DILexicalBlock(scope: !15819, file: !254, line: 148, column: 2)
!15824 = !DILocation(line: 160, column: 2, scope: !15802, inlinedAt: !15809)
!15825 = !DILocation(line: 106, column: 33, scope: !15784)
!15826 = !DILocation(line: 105, column: 7, scope: !15780)
!15827 = !DILocation(line: 107, column: 50, scope: !15783)
!15828 = !DILocation(line: 107, column: 48, scope: !15783)
!15829 = !DILocation(line: 0, scope: !15783)
!15830 = !DILocation(line: 109, column: 17, scope: !15783)
!15831 = !DILocation(line: 110, column: 3, scope: !15783)
!15832 = !DILocation(line: 111, column: 31, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15784, file: !2478, line: 110, column: 10)
!15834 = !DILocation(line: 111, column: 37, scope: !15833)
!15835 = !DILocation(line: 111, column: 35, scope: !15833)
!15836 = !DILocation(line: 0, scope: !15784)
!15837 = !DILocation(line: 109, column: 8, scope: !15783)
!15838 = !DILocation(line: 109, column: 15, scope: !15783)
!15839 = !DILocation(line: 114, column: 12, scope: !15840)
!15840 = distinct !DILexicalBlock(scope: !15780, file: !2478, line: 114, column: 3)
!15841 = !DILocation(line: 0, scope: !15780)
!15842 = !DILocation(line: 114, column: 3, scope: !15840)
!15843 = !DILocation(line: 115, column: 24, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15845, file: !2478, line: 115, column: 8)
!15845 = distinct !DILexicalBlock(scope: !15846, file: !2478, line: 114, column: 45)
!15846 = distinct !DILexicalBlock(scope: !15840, file: !2478, line: 114, column: 3)
!15847 = !DILocation(line: 115, column: 11, scope: !15844)
!15848 = !DILocation(line: 115, column: 18, scope: !15844)
!15849 = !DILocation(line: 115, column: 8, scope: !15845)
!15850 = !DILocation(line: 116, column: 15, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15844, file: !2478, line: 115, column: 32)
!15852 = !DILocation(line: 117, column: 26, scope: !15851)
!15853 = !DILocation(line: 117, column: 5, scope: !15851)
!15854 = !DILocation(line: 123, column: 7, scope: !15780)
!15855 = !DILocation(line: 120, column: 15, scope: !15845)
!15856 = !DILocation(line: 114, column: 36, scope: !15846)
!15857 = distinct !{!15857, !15842, !15858}
!15858 = !DILocation(line: 121, column: 3, scope: !15840)
!15859 = !DILocation(line: 124, column: 4, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15861, file: !2478, line: 123, column: 18)
!15861 = distinct !DILexicalBlock(scope: !15780, file: !2478, line: 123, column: 7)
!15862 = !DILocation(line: 125, column: 3, scope: !15860)
!15863 = !DILocation(line: 127, column: 13, scope: !15787)
!15864 = !DILocation(line: 127, column: 10, scope: !15787)
!15865 = !DILocation(line: 127, column: 7, scope: !15780)
!15866 = !DILocation(line: 137, column: 24, scope: !15786)
!15867 = !DILocation(line: 0, scope: !15786)
!15868 = !DILocation(line: 139, column: 18, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15786, file: !2478, line: 139, column: 8)
!15870 = !DILocation(line: 139, column: 23, scope: !15869)
!15871 = !DILocation(line: 141, column: 5, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15869, file: !2478, line: 140, column: 48)
!15873 = !DILocation(line: 142, column: 4, scope: !15872)
!15874 = !DILocalVariable(name: "key", arg: 2, scope: !15875, file: !254, line: 190, type: !15774)
!15875 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !15876, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15878)
!15876 = !DISubroutineType(types: !15877)
!15877 = !{null, !15805, !15774}
!15878 = !{!15879, !15874}
!15879 = !DILocalVariable(name: "l", arg: 1, scope: !15875, file: !254, line: 189, type: !15805)
!15880 = !DILocation(line: 0, scope: !15875, inlinedAt: !15881)
!15881 = distinct !DILocation(line: 102, column: 2, scope: !15781)
!15882 = !DILocation(line: 194, column: 2, scope: !15883, inlinedAt: !15881)
!15883 = distinct !DILexicalBlock(scope: !15884, file: !254, line: 194, column: 2)
!15884 = distinct !DILexicalBlock(scope: !15875, file: !254, line: 194, column: 2)
!15885 = !DILocation(line: 194, column: 2, scope: !15884, inlinedAt: !15881)
!15886 = !DILocation(line: 194, column: 2, scope: !15887, inlinedAt: !15881)
!15887 = distinct !DILexicalBlock(scope: !15883, file: !254, line: 194, column: 2)
!15888 = !DILocalVariable(name: "key", arg: 1, scope: !15889, file: !5970, line: 84, type: !32)
!15889 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5970, file: !5970, line: 84, type: !5981, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15890)
!15890 = !{!15888}
!15891 = !DILocation(line: 0, scope: !15889, inlinedAt: !15892)
!15892 = distinct !DILocation(line: 215, column: 2, scope: !15875, inlinedAt: !15881)
!15893 = !DILocation(line: 95, column: 2, scope: !15889, inlinedAt: !15892)
!15894 = !{i64 1956863}
!15895 = !DILocation(line: 148, column: 1, scope: !15761)
!15896 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !128, file: !128, line: 225, type: !15897, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15901)
!15897 = !DISubroutineType(types: !15898)
!15898 = !{!334, !15899}
!15899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15900, size: 32)
!15900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2455)
!15901 = !{!15902}
!15902 = !DILocalVariable(name: "node", arg: 1, scope: !15896, file: !128, line: 225, type: !15899)
!15903 = !DILocation(line: 0, scope: !15896)
!15904 = !DILocation(line: 227, column: 15, scope: !15896)
!15905 = !DILocation(line: 227, column: 20, scope: !15896)
!15906 = !DILocation(line: 227, column: 2, scope: !15896)
!15907 = distinct !DISubprogram(name: "elapsed", scope: !2478, file: !2478, line: 62, type: !15908, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !1998)
!15908 = !DISubroutineType(types: !15909)
!15909 = !{!736}
!15910 = !DILocation(line: 64, column: 9, scope: !15907)
!15911 = !DILocation(line: 64, column: 28, scope: !15907)
!15912 = !DILocation(line: 64, column: 35, scope: !15907)
!15913 = !DILocation(line: 64, column: 2, scope: !15907)
!15914 = distinct !DISubprogram(name: "first", scope: !2478, file: !2478, line: 39, type: !15915, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15917)
!15915 = !DISubroutineType(types: !15916)
!15916 = !{!2451}
!15917 = !{!15918}
!15918 = !DILocalVariable(name: "t", scope: !15914, file: !2478, line: 41, type: !15919)
!15919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!15920 = !DILocation(line: 41, column: 19, scope: !15914)
!15921 = !DILocation(line: 0, scope: !15914)
!15922 = !DILocation(line: 43, column: 9, scope: !15914)
!15923 = !DILocation(line: 43, column: 2, scope: !15914)
!15924 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !128, file: !128, line: 443, type: !15925, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15927)
!15925 = !DISubroutineType(types: !15926)
!15926 = !{null, !15919, !15919}
!15927 = !{!15928, !15929, !15930}
!15928 = !DILocalVariable(name: "successor", arg: 1, scope: !15924, file: !128, line: 443, type: !15919)
!15929 = !DILocalVariable(name: "node", arg: 2, scope: !15924, file: !128, line: 443, type: !15919)
!15930 = !DILocalVariable(name: "prev", scope: !15924, file: !128, line: 445, type: !15931)
!15931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15919)
!15932 = !DILocation(line: 0, scope: !15924)
!15933 = !DILocation(line: 445, column: 39, scope: !15924)
!15934 = !DILocation(line: 447, column: 8, scope: !15924)
!15935 = !DILocation(line: 447, column: 13, scope: !15924)
!15936 = !DILocation(line: 448, column: 8, scope: !15924)
!15937 = !DILocation(line: 448, column: 13, scope: !15924)
!15938 = !DILocation(line: 449, column: 8, scope: !15924)
!15939 = !DILocation(line: 449, column: 13, scope: !15924)
!15940 = !DILocation(line: 450, column: 18, scope: !15924)
!15941 = !DILocation(line: 451, column: 1, scope: !15924)
!15942 = distinct !DISubprogram(name: "next", scope: !2478, file: !2478, line: 46, type: !15943, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15945)
!15943 = !DISubroutineType(types: !15944)
!15944 = !{!2451, !2451}
!15945 = !{!15946, !15947}
!15946 = !DILocalVariable(name: "t", arg: 1, scope: !15942, file: !2478, line: 46, type: !2451)
!15947 = !DILocalVariable(name: "n", scope: !15942, file: !2478, line: 48, type: !15919)
!15948 = !DILocation(line: 0, scope: !15942)
!15949 = !DILocation(line: 48, column: 58, scope: !15942)
!15950 = !DILocation(line: 48, column: 19, scope: !15942)
!15951 = !DILocation(line: 50, column: 9, scope: !15942)
!15952 = !DILocation(line: 50, column: 2, scope: !15942)
!15953 = distinct !DISubprogram(name: "sys_dlist_append", scope: !128, file: !128, line: 404, type: !15954, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15957)
!15954 = !DISubroutineType(types: !15955)
!15955 = !{null, !15956, !15919}
!15956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!15957 = !{!15958, !15959, !15960}
!15958 = !DILocalVariable(name: "list", arg: 1, scope: !15953, file: !128, line: 404, type: !15956)
!15959 = !DILocalVariable(name: "node", arg: 2, scope: !15953, file: !128, line: 404, type: !15919)
!15960 = !DILocalVariable(name: "tail", scope: !15953, file: !128, line: 406, type: !15931)
!15961 = !DILocation(line: 0, scope: !15953)
!15962 = !DILocation(line: 406, column: 34, scope: !15953)
!15963 = !DILocation(line: 408, column: 8, scope: !15953)
!15964 = !DILocation(line: 408, column: 13, scope: !15953)
!15965 = !DILocation(line: 409, column: 8, scope: !15953)
!15966 = !DILocation(line: 409, column: 13, scope: !15953)
!15967 = !DILocation(line: 411, column: 8, scope: !15953)
!15968 = !DILocation(line: 411, column: 13, scope: !15953)
!15969 = !DILocation(line: 412, column: 13, scope: !15953)
!15970 = !DILocation(line: 413, column: 1, scope: !15953)
!15971 = distinct !DISubprogram(name: "next_timeout", scope: !2478, file: !2478, line: 67, type: !15908, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15972)
!15972 = !{!15973, !15974, !15975}
!15973 = !DILocalVariable(name: "to", scope: !15971, file: !2478, line: 69, type: !2451)
!15974 = !DILocalVariable(name: "ticks_elapsed", scope: !15971, file: !2478, line: 70, type: !736)
!15975 = !DILocalVariable(name: "ret", scope: !15971, file: !2478, line: 71, type: !736)
!15976 = !DILocation(line: 69, column: 24, scope: !15971)
!15977 = !DILocation(line: 0, scope: !15971)
!15978 = !DILocation(line: 70, column: 26, scope: !15971)
!15979 = !DILocation(line: 73, column: 10, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15971, file: !2478, line: 73, column: 6)
!15981 = !DILocation(line: 73, column: 19, scope: !15980)
!15982 = !DILocation(line: 74, column: 21, scope: !15980)
!15983 = !DILocation(line: 74, column: 30, scope: !15980)
!15984 = !DILocation(line: 74, column: 28, scope: !15980)
!15985 = !DILocation(line: 74, column: 45, scope: !15980)
!15986 = !DILocation(line: 73, column: 6, scope: !15971)
!15987 = !DILocation(line: 77, column: 9, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15980, file: !2478, line: 76, column: 9)
!15989 = !DILocation(line: 0, scope: !15980)
!15990 = !DILocation(line: 81, column: 20, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15971, file: !2478, line: 81, column: 6)
!15992 = !DILocation(line: 81, column: 6, scope: !15991)
!15993 = !DILocation(line: 81, column: 32, scope: !15991)
!15994 = !DILocation(line: 85, column: 2, scope: !15971)
!15995 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !128, file: !128, line: 341, type: !15996, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !15998)
!15996 = !DISubroutineType(types: !15997)
!15997 = !{!15919, !15956, !15919}
!15998 = !{!15999, !16000}
!15999 = !DILocalVariable(name: "list", arg: 1, scope: !15995, file: !128, line: 341, type: !15956)
!16000 = !DILocalVariable(name: "node", arg: 2, scope: !15995, file: !128, line: 342, type: !15919)
!16001 = !DILocation(line: 0, scope: !15995)
!16002 = !DILocation(line: 344, column: 15, scope: !15995)
!16003 = !DILocation(line: 344, column: 9, scope: !15995)
!16004 = !DILocation(line: 344, column: 26, scope: !15995)
!16005 = !DILocation(line: 344, column: 2, scope: !15995)
!16006 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !128, file: !128, line: 325, type: !15996, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16007)
!16007 = !{!16008, !16009}
!16008 = !DILocalVariable(name: "list", arg: 1, scope: !16006, file: !128, line: 325, type: !15956)
!16009 = !DILocalVariable(name: "node", arg: 2, scope: !16006, file: !128, line: 326, type: !15919)
!16010 = !DILocation(line: 0, scope: !16006)
!16011 = !DILocation(line: 328, column: 24, scope: !16006)
!16012 = !DILocation(line: 328, column: 15, scope: !16006)
!16013 = !DILocation(line: 328, column: 9, scope: !16006)
!16014 = !DILocation(line: 328, column: 45, scope: !16006)
!16015 = !DILocation(line: 328, column: 2, scope: !16006)
!16016 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !16017, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16019)
!16017 = !DISubroutineType(types: !16018)
!16018 = !{!15919, !15956}
!16019 = !{!16020}
!16020 = !DILocalVariable(name: "list", arg: 1, scope: !16016, file: !128, line: 294, type: !15956)
!16021 = !DILocation(line: 0, scope: !16016)
!16022 = !DILocation(line: 296, column: 9, scope: !16016)
!16023 = !DILocation(line: 296, column: 2, scope: !16016)
!16024 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !16025, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16027)
!16025 = !DISubroutineType(types: !16026)
!16026 = !{!334, !15956}
!16027 = !{!16028}
!16028 = !DILocalVariable(name: "list", arg: 1, scope: !16024, file: !128, line: 266, type: !15956)
!16029 = !DILocation(line: 0, scope: !16024)
!16030 = !DILocation(line: 268, column: 15, scope: !16024)
!16031 = !DILocation(line: 268, column: 20, scope: !16024)
!16032 = !DILocation(line: 268, column: 2, scope: !16024)
!16033 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2478, file: !2478, line: 150, type: !16034, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16036)
!16034 = !DISubroutineType(types: !16035)
!16035 = !{!109, !2451}
!16036 = !{!16037, !16038, !16039, !16041}
!16037 = !DILocalVariable(name: "to", arg: 1, scope: !16033, file: !2478, line: 150, type: !2451)
!16038 = !DILocalVariable(name: "ret", scope: !16033, file: !2478, line: 152, type: !109)
!16039 = !DILocalVariable(name: "__i", scope: !16040, file: !2478, line: 154, type: !15774)
!16040 = distinct !DILexicalBlock(scope: !16033, file: !2478, line: 154, column: 2)
!16041 = !DILocalVariable(name: "__key", scope: !16040, file: !2478, line: 154, type: !15774)
!16042 = !DILocation(line: 0, scope: !16033)
!16043 = !DILocation(line: 0, scope: !16040)
!16044 = !DILocation(line: 0, scope: !15802, inlinedAt: !16045)
!16045 = distinct !DILocation(line: 154, column: 2, scope: !16040)
!16046 = !DILocation(line: 55, column: 2, scope: !15811, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 145, column: 10, scope: !15802, inlinedAt: !16045)
!16048 = !DILocation(line: 0, scope: !15811, inlinedAt: !16047)
!16049 = !DILocation(line: 148, column: 2, scope: !15819, inlinedAt: !16045)
!16050 = !DILocation(line: 148, column: 2, scope: !15820, inlinedAt: !16045)
!16051 = !DILocation(line: 148, column: 2, scope: !15823, inlinedAt: !16045)
!16052 = !DILocation(line: 160, column: 2, scope: !15802, inlinedAt: !16045)
!16053 = !DILocation(line: 155, column: 7, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16055, file: !2478, line: 155, column: 7)
!16055 = distinct !DILexicalBlock(scope: !16056, file: !2478, line: 154, column: 24)
!16056 = distinct !DILexicalBlock(scope: !16040, file: !2478, line: 154, column: 2)
!16057 = !DILocation(line: 155, column: 7, scope: !16055)
!16058 = !DILocation(line: 156, column: 4, scope: !16059)
!16059 = distinct !DILexicalBlock(scope: !16054, file: !2478, line: 155, column: 39)
!16060 = !DILocation(line: 158, column: 3, scope: !16059)
!16061 = !DILocation(line: 0, scope: !15875, inlinedAt: !16062)
!16062 = distinct !DILocation(line: 154, column: 2, scope: !16056)
!16063 = !DILocation(line: 194, column: 2, scope: !15883, inlinedAt: !16062)
!16064 = !DILocation(line: 194, column: 2, scope: !15884, inlinedAt: !16062)
!16065 = !DILocation(line: 194, column: 2, scope: !15887, inlinedAt: !16062)
!16066 = !DILocation(line: 0, scope: !15889, inlinedAt: !16067)
!16067 = distinct !DILocation(line: 215, column: 2, scope: !15875, inlinedAt: !16062)
!16068 = !DILocation(line: 95, column: 2, scope: !15889, inlinedAt: !16067)
!16069 = !DILocation(line: 161, column: 2, scope: !16033)
!16070 = distinct !DISubprogram(name: "remove_timeout", scope: !2478, file: !2478, line: 53, type: !2472, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16071)
!16071 = !{!16072}
!16072 = !DILocalVariable(name: "t", arg: 1, scope: !16070, file: !2478, line: 53, type: !2451)
!16073 = !DILocation(line: 0, scope: !16070)
!16074 = !DILocation(line: 55, column: 6, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16070, file: !2478, line: 55, column: 6)
!16076 = !DILocation(line: 55, column: 14, scope: !16075)
!16077 = !DILocation(line: 55, column: 6, scope: !16070)
!16078 = !DILocation(line: 56, column: 25, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16075, file: !2478, line: 55, column: 23)
!16080 = !DILocation(line: 56, column: 12, scope: !16079)
!16081 = !DILocation(line: 56, column: 19, scope: !16079)
!16082 = !DILocation(line: 57, column: 2, scope: !16079)
!16083 = !DILocation(line: 59, column: 23, scope: !16070)
!16084 = !DILocation(line: 59, column: 2, scope: !16070)
!16085 = !DILocation(line: 60, column: 1, scope: !16070)
!16086 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !128, file: !128, line: 496, type: !16087, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16089)
!16087 = !DISubroutineType(types: !16088)
!16088 = !{null, !15919}
!16089 = !{!16090, !16091, !16092}
!16090 = !DILocalVariable(name: "node", arg: 1, scope: !16086, file: !128, line: 496, type: !15919)
!16091 = !DILocalVariable(name: "prev", scope: !16086, file: !128, line: 498, type: !15931)
!16092 = !DILocalVariable(name: "next", scope: !16086, file: !128, line: 499, type: !15931)
!16093 = !DILocation(line: 0, scope: !16086)
!16094 = !DILocation(line: 498, column: 34, scope: !16086)
!16095 = !DILocation(line: 499, column: 34, scope: !16086)
!16096 = !DILocation(line: 501, column: 8, scope: !16086)
!16097 = !DILocation(line: 501, column: 13, scope: !16086)
!16098 = !DILocation(line: 502, column: 8, scope: !16086)
!16099 = !DILocation(line: 502, column: 13, scope: !16086)
!16100 = !DILocation(line: 503, column: 2, scope: !16086)
!16101 = !DILocation(line: 504, column: 1, scope: !16086)
!16102 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !16087, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16103)
!16103 = !{!16104}
!16104 = !DILocalVariable(name: "node", arg: 1, scope: !16102, file: !128, line: 211, type: !15919)
!16105 = !DILocation(line: 0, scope: !16102)
!16106 = !DILocation(line: 213, column: 8, scope: !16102)
!16107 = !DILocation(line: 213, column: 13, scope: !16102)
!16108 = !DILocation(line: 214, column: 8, scope: !16102)
!16109 = !DILocation(line: 214, column: 13, scope: !16102)
!16110 = !DILocation(line: 215, column: 1, scope: !16102)
!16111 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2478, file: !2478, line: 183, type: !16112, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16116)
!16112 = !DISubroutineType(types: !16113)
!16113 = !{!104, !16114}
!16114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16115, size: 32)
!16115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2452)
!16116 = !{!16117, !16118, !16119, !16121}
!16117 = !DILocalVariable(name: "timeout", arg: 1, scope: !16111, file: !2478, line: 183, type: !16114)
!16118 = !DILocalVariable(name: "ticks", scope: !16111, file: !2478, line: 185, type: !104)
!16119 = !DILocalVariable(name: "__i", scope: !16120, file: !2478, line: 187, type: !15774)
!16120 = distinct !DILexicalBlock(scope: !16111, file: !2478, line: 187, column: 2)
!16121 = !DILocalVariable(name: "__key", scope: !16120, file: !2478, line: 187, type: !15774)
!16122 = !DILocation(line: 0, scope: !16111)
!16123 = !DILocation(line: 0, scope: !16120)
!16124 = !DILocation(line: 0, scope: !15802, inlinedAt: !16125)
!16125 = distinct !DILocation(line: 187, column: 2, scope: !16120)
!16126 = !DILocation(line: 55, column: 2, scope: !15811, inlinedAt: !16127)
!16127 = distinct !DILocation(line: 145, column: 10, scope: !15802, inlinedAt: !16125)
!16128 = !DILocation(line: 0, scope: !15811, inlinedAt: !16127)
!16129 = !DILocation(line: 148, column: 2, scope: !15819, inlinedAt: !16125)
!16130 = !DILocation(line: 148, column: 2, scope: !15820, inlinedAt: !16125)
!16131 = !DILocation(line: 148, column: 2, scope: !15823, inlinedAt: !16125)
!16132 = !DILocation(line: 160, column: 2, scope: !15802, inlinedAt: !16125)
!16133 = !DILocation(line: 188, column: 11, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16135, file: !2478, line: 187, column: 24)
!16135 = distinct !DILexicalBlock(scope: !16120, file: !2478, line: 187, column: 2)
!16136 = !DILocation(line: 0, scope: !15875, inlinedAt: !16137)
!16137 = distinct !DILocation(line: 187, column: 2, scope: !16135)
!16138 = !DILocation(line: 194, column: 2, scope: !15883, inlinedAt: !16137)
!16139 = !DILocation(line: 194, column: 2, scope: !15884, inlinedAt: !16137)
!16140 = !DILocation(line: 194, column: 2, scope: !15887, inlinedAt: !16137)
!16141 = !DILocation(line: 0, scope: !15889, inlinedAt: !16142)
!16142 = distinct !DILocation(line: 215, column: 2, scope: !15875, inlinedAt: !16137)
!16143 = !DILocation(line: 95, column: 2, scope: !15889, inlinedAt: !16142)
!16144 = !DILocation(line: 191, column: 2, scope: !16111)
!16145 = distinct !DISubprogram(name: "timeout_rem", scope: !2478, file: !2478, line: 165, type: !16112, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16146)
!16146 = !{!16147, !16148, !16149}
!16147 = !DILocalVariable(name: "timeout", arg: 1, scope: !16145, file: !2478, line: 165, type: !16114)
!16148 = !DILocalVariable(name: "ticks", scope: !16145, file: !2478, line: 167, type: !104)
!16149 = !DILocalVariable(name: "t", scope: !16150, file: !2478, line: 173, type: !2451)
!16150 = distinct !DILexicalBlock(scope: !16145, file: !2478, line: 173, column: 2)
!16151 = !DILocation(line: 0, scope: !16145)
!16152 = !DILocation(line: 169, column: 6, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16145, file: !2478, line: 169, column: 6)
!16154 = !DILocation(line: 169, column: 6, scope: !16145)
!16155 = !DILocation(line: 173, column: 28, scope: !16150)
!16156 = !DILocation(line: 0, scope: !16150)
!16157 = !DILocation(line: 173, column: 39, scope: !16158)
!16158 = distinct !DILexicalBlock(scope: !16150, file: !2478, line: 173, column: 2)
!16159 = !DILocation(line: 173, column: 2, scope: !16150)
!16160 = !DILocation(line: 174, column: 15, scope: !16161)
!16161 = distinct !DILexicalBlock(scope: !16158, file: !2478, line: 173, column: 61)
!16162 = !DILocation(line: 174, column: 9, scope: !16161)
!16163 = !DILocation(line: 175, column: 15, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16161, file: !2478, line: 175, column: 7)
!16165 = !DILocation(line: 175, column: 7, scope: !16161)
!16166 = !DILocation(line: 173, column: 52, scope: !16158)
!16167 = distinct !{!16167, !16159, !16168}
!16168 = !DILocation(line: 178, column: 2, scope: !16150)
!16169 = !DILocation(line: 180, column: 17, scope: !16145)
!16170 = !DILocation(line: 180, column: 15, scope: !16145)
!16171 = !DILocation(line: 180, column: 2, scope: !16145)
!16172 = !DILocation(line: 181, column: 1, scope: !16145)
!16173 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12758, file: !12758, line: 35, type: !16174, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16176)
!16174 = !DISubroutineType(types: !16175)
!16175 = !{!334, !16114}
!16176 = !{!16177}
!16177 = !DILocalVariable(name: "to", arg: 1, scope: !16173, file: !12758, line: 35, type: !16114)
!16178 = !DILocation(line: 0, scope: !16173)
!16179 = !DILocation(line: 37, column: 35, scope: !16173)
!16180 = !DILocation(line: 37, column: 10, scope: !16173)
!16181 = !DILocation(line: 37, column: 9, scope: !16173)
!16182 = !DILocation(line: 37, column: 2, scope: !16173)
!16183 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2478, file: !2478, line: 194, type: !16112, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16184)
!16184 = !{!16185, !16186, !16187, !16189}
!16185 = !DILocalVariable(name: "timeout", arg: 1, scope: !16183, file: !2478, line: 194, type: !16114)
!16186 = !DILocalVariable(name: "ticks", scope: !16183, file: !2478, line: 196, type: !104)
!16187 = !DILocalVariable(name: "__i", scope: !16188, file: !2478, line: 198, type: !15774)
!16188 = distinct !DILexicalBlock(scope: !16183, file: !2478, line: 198, column: 2)
!16189 = !DILocalVariable(name: "__key", scope: !16188, file: !2478, line: 198, type: !15774)
!16190 = !DILocation(line: 0, scope: !16183)
!16191 = !DILocation(line: 0, scope: !16188)
!16192 = !DILocation(line: 0, scope: !15802, inlinedAt: !16193)
!16193 = distinct !DILocation(line: 198, column: 2, scope: !16188)
!16194 = !DILocation(line: 55, column: 2, scope: !15811, inlinedAt: !16195)
!16195 = distinct !DILocation(line: 145, column: 10, scope: !15802, inlinedAt: !16193)
!16196 = !DILocation(line: 0, scope: !15811, inlinedAt: !16195)
!16197 = !DILocation(line: 148, column: 2, scope: !15819, inlinedAt: !16193)
!16198 = !DILocation(line: 148, column: 2, scope: !15820, inlinedAt: !16193)
!16199 = !DILocation(line: 148, column: 2, scope: !15823, inlinedAt: !16193)
!16200 = !DILocation(line: 160, column: 2, scope: !15802, inlinedAt: !16193)
!16201 = !DILocation(line: 199, column: 11, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16203, file: !2478, line: 198, column: 24)
!16203 = distinct !DILexicalBlock(scope: !16188, file: !2478, line: 198, column: 2)
!16204 = !DILocation(line: 199, column: 23, scope: !16202)
!16205 = !DILocation(line: 0, scope: !15875, inlinedAt: !16206)
!16206 = distinct !DILocation(line: 198, column: 2, scope: !16203)
!16207 = !DILocation(line: 194, column: 2, scope: !15883, inlinedAt: !16206)
!16208 = !DILocation(line: 194, column: 2, scope: !15884, inlinedAt: !16206)
!16209 = !DILocation(line: 194, column: 2, scope: !15887, inlinedAt: !16206)
!16210 = !DILocation(line: 0, scope: !15889, inlinedAt: !16211)
!16211 = distinct !DILocation(line: 215, column: 2, scope: !15875, inlinedAt: !16206)
!16212 = !DILocation(line: 95, column: 2, scope: !15889, inlinedAt: !16211)
!16213 = !DILocation(line: 199, column: 21, scope: !16202)
!16214 = !DILocation(line: 202, column: 2, scope: !16183)
!16215 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2478, file: !2478, line: 205, type: !15908, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16216)
!16216 = !{!16217, !16218, !16220}
!16217 = !DILocalVariable(name: "ret", scope: !16215, file: !2478, line: 207, type: !736)
!16218 = !DILocalVariable(name: "__i", scope: !16219, file: !2478, line: 209, type: !15774)
!16219 = distinct !DILexicalBlock(scope: !16215, file: !2478, line: 209, column: 2)
!16220 = !DILocalVariable(name: "__key", scope: !16219, file: !2478, line: 209, type: !15774)
!16221 = !DILocation(line: 0, scope: !16215)
!16222 = !DILocation(line: 0, scope: !16219)
!16223 = !DILocation(line: 0, scope: !15802, inlinedAt: !16224)
!16224 = distinct !DILocation(line: 209, column: 2, scope: !16219)
!16225 = !DILocation(line: 55, column: 2, scope: !15811, inlinedAt: !16226)
!16226 = distinct !DILocation(line: 145, column: 10, scope: !15802, inlinedAt: !16224)
!16227 = !DILocation(line: 0, scope: !15811, inlinedAt: !16226)
!16228 = !DILocation(line: 148, column: 2, scope: !15819, inlinedAt: !16224)
!16229 = !DILocation(line: 148, column: 2, scope: !15820, inlinedAt: !16224)
!16230 = !DILocation(line: 148, column: 2, scope: !15823, inlinedAt: !16224)
!16231 = !DILocation(line: 160, column: 2, scope: !15802, inlinedAt: !16224)
!16232 = !DILocation(line: 210, column: 9, scope: !16233)
!16233 = distinct !DILexicalBlock(scope: !16234, file: !2478, line: 209, column: 24)
!16234 = distinct !DILexicalBlock(scope: !16219, file: !2478, line: 209, column: 2)
!16235 = !DILocation(line: 0, scope: !15875, inlinedAt: !16236)
!16236 = distinct !DILocation(line: 209, column: 2, scope: !16234)
!16237 = !DILocation(line: 194, column: 2, scope: !15883, inlinedAt: !16236)
!16238 = !DILocation(line: 194, column: 2, scope: !15884, inlinedAt: !16236)
!16239 = !DILocation(line: 194, column: 2, scope: !15887, inlinedAt: !16236)
!16240 = !DILocation(line: 0, scope: !15889, inlinedAt: !16241)
!16241 = distinct !DILocation(line: 215, column: 2, scope: !15875, inlinedAt: !16236)
!16242 = !DILocation(line: 95, column: 2, scope: !15889, inlinedAt: !16241)
!16243 = !DILocation(line: 212, column: 2, scope: !16215)
!16244 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2478, file: !2478, line: 215, type: !10052, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16245)
!16245 = !{!16246, !16247, !16248, !16250, !16251, !16254, !16255}
!16246 = !DILocalVariable(name: "ticks", arg: 1, scope: !16244, file: !2478, line: 215, type: !736)
!16247 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16244, file: !2478, line: 215, type: !334)
!16248 = !DILocalVariable(name: "__i", scope: !16249, file: !2478, line: 217, type: !15774)
!16249 = distinct !DILexicalBlock(scope: !16244, file: !2478, line: 217, column: 2)
!16250 = !DILocalVariable(name: "__key", scope: !16249, file: !2478, line: 217, type: !15774)
!16251 = !DILocalVariable(name: "next_to", scope: !16252, file: !2478, line: 218, type: !109)
!16252 = distinct !DILexicalBlock(scope: !16253, file: !2478, line: 217, column: 24)
!16253 = distinct !DILexicalBlock(scope: !16249, file: !2478, line: 217, column: 2)
!16254 = !DILocalVariable(name: "sooner", scope: !16252, file: !2478, line: 219, type: !334)
!16255 = !DILocalVariable(name: "imminent", scope: !16252, file: !2478, line: 221, type: !334)
!16256 = !DILocation(line: 0, scope: !16244)
!16257 = !DILocation(line: 0, scope: !16249)
!16258 = !DILocation(line: 0, scope: !15802, inlinedAt: !16259)
!16259 = distinct !DILocation(line: 217, column: 2, scope: !16249)
!16260 = !DILocation(line: 55, column: 2, scope: !15811, inlinedAt: !16261)
!16261 = distinct !DILocation(line: 145, column: 10, scope: !15802, inlinedAt: !16259)
!16262 = !DILocation(line: 0, scope: !15811, inlinedAt: !16261)
!16263 = !DILocation(line: 148, column: 2, scope: !15819, inlinedAt: !16259)
!16264 = !DILocation(line: 148, column: 2, scope: !15820, inlinedAt: !16259)
!16265 = !DILocation(line: 148, column: 2, scope: !15823, inlinedAt: !16259)
!16266 = !DILocation(line: 160, column: 2, scope: !15802, inlinedAt: !16259)
!16267 = !DILocation(line: 218, column: 17, scope: !16252)
!16268 = !DILocation(line: 0, scope: !16252)
!16269 = !DILocation(line: 221, column: 27, scope: !16252)
!16270 = !DILocation(line: 233, column: 17, scope: !16271)
!16271 = distinct !DILexicalBlock(scope: !16252, file: !2478, line: 233, column: 7)
!16272 = !DILocation(line: 234, column: 26, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16271, file: !2478, line: 233, column: 56)
!16274 = !DILocation(line: 234, column: 4, scope: !16273)
!16275 = !DILocation(line: 235, column: 3, scope: !16273)
!16276 = !DILocation(line: 0, scope: !15875, inlinedAt: !16277)
!16277 = distinct !DILocation(line: 217, column: 2, scope: !16253)
!16278 = !DILocation(line: 194, column: 2, scope: !15883, inlinedAt: !16277)
!16279 = !DILocation(line: 194, column: 2, scope: !15884, inlinedAt: !16277)
!16280 = !DILocation(line: 194, column: 2, scope: !15887, inlinedAt: !16277)
!16281 = !DILocation(line: 0, scope: !15889, inlinedAt: !16282)
!16282 = distinct !DILocation(line: 215, column: 2, scope: !15875, inlinedAt: !16277)
!16283 = !DILocation(line: 95, column: 2, scope: !15889, inlinedAt: !16282)
!16284 = !DILocation(line: 237, column: 1, scope: !16244)
!16285 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2478, file: !2478, line: 239, type: !16286, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16288)
!16286 = !DISubroutineType(types: !16287)
!16287 = !{null, !736}
!16288 = !{!16289, !16290, !16291, !16293}
!16289 = !DILocalVariable(name: "ticks", arg: 1, scope: !16285, file: !2478, line: 239, type: !736)
!16290 = !DILocalVariable(name: "key", scope: !16285, file: !2478, line: 245, type: !15774)
!16291 = !DILocalVariable(name: "t", scope: !16292, file: !2478, line: 262, type: !2451)
!16292 = distinct !DILexicalBlock(scope: !16285, file: !2478, line: 261, column: 67)
!16293 = !DILocalVariable(name: "dt", scope: !16292, file: !2478, line: 263, type: !109)
!16294 = !DILocation(line: 0, scope: !16285)
!16295 = !DILocation(line: 242, column: 2, scope: !16285)
!16296 = !DILocation(line: 0, scope: !15802, inlinedAt: !16297)
!16297 = distinct !DILocation(line: 245, column: 25, scope: !16285)
!16298 = !DILocation(line: 55, column: 2, scope: !15811, inlinedAt: !16299)
!16299 = distinct !DILocation(line: 145, column: 10, scope: !15802, inlinedAt: !16297)
!16300 = !DILocation(line: 0, scope: !15811, inlinedAt: !16299)
!16301 = !DILocation(line: 148, column: 2, scope: !15819, inlinedAt: !16297)
!16302 = !DILocation(line: 148, column: 2, scope: !15820, inlinedAt: !16297)
!16303 = !DILocation(line: 148, column: 2, scope: !15823, inlinedAt: !16297)
!16304 = !DILocation(line: 160, column: 2, scope: !15802, inlinedAt: !16297)
!16305 = !DILocation(line: 261, column: 9, scope: !16285)
!16306 = !DILocation(line: 261, column: 17, scope: !16285)
!16307 = !DILocation(line: 261, column: 25, scope: !16285)
!16308 = !DILocation(line: 261, column: 37, scope: !16285)
!16309 = !DILocation(line: 261, column: 47, scope: !16285)
!16310 = !DILocation(line: 261, column: 44, scope: !16285)
!16311 = !DILocation(line: 261, column: 2, scope: !16285)
!16312 = !DILocation(line: 0, scope: !16292)
!16313 = !DILocation(line: 263, column: 12, scope: !16292)
!16314 = !DILocation(line: 265, column: 16, scope: !16292)
!16315 = !DILocation(line: 265, column: 13, scope: !16292)
!16316 = !DILocation(line: 266, column: 13, scope: !16292)
!16317 = !DILocation(line: 267, column: 3, scope: !16292)
!16318 = !DILocation(line: 0, scope: !15875, inlinedAt: !16319)
!16319 = distinct !DILocation(line: 269, column: 3, scope: !16292)
!16320 = !DILocation(line: 194, column: 2, scope: !15883, inlinedAt: !16319)
!16321 = !DILocation(line: 194, column: 2, scope: !15884, inlinedAt: !16319)
!16322 = !DILocation(line: 194, column: 2, scope: !15887, inlinedAt: !16319)
!16323 = !DILocation(line: 0, scope: !15889, inlinedAt: !16324)
!16324 = distinct !DILocation(line: 215, column: 2, scope: !15875, inlinedAt: !16319)
!16325 = !DILocation(line: 95, column: 2, scope: !15889, inlinedAt: !16324)
!16326 = !DILocation(line: 270, column: 6, scope: !16292)
!16327 = !DILocation(line: 270, column: 3, scope: !16292)
!16328 = !DILocation(line: 0, scope: !15802, inlinedAt: !16329)
!16329 = distinct !DILocation(line: 271, column: 9, scope: !16292)
!16330 = !DILocation(line: 55, column: 2, scope: !15811, inlinedAt: !16331)
!16331 = distinct !DILocation(line: 145, column: 10, scope: !15802, inlinedAt: !16329)
!16332 = !DILocation(line: 0, scope: !15811, inlinedAt: !16331)
!16333 = !DILocation(line: 148, column: 2, scope: !15819, inlinedAt: !16329)
!16334 = !DILocation(line: 148, column: 2, scope: !15820, inlinedAt: !16329)
!16335 = !DILocation(line: 148, column: 2, scope: !15823, inlinedAt: !16329)
!16336 = !DILocation(line: 160, column: 2, scope: !15802, inlinedAt: !16329)
!16337 = !DILocation(line: 272, column: 22, scope: !16292)
!16338 = distinct !{!16338, !16311, !16339}
!16339 = !DILocation(line: 273, column: 2, scope: !16285)
!16340 = !DILocation(line: 276, column: 19, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16342, file: !2478, line: 275, column: 23)
!16342 = distinct !DILexicalBlock(scope: !16285, file: !2478, line: 275, column: 6)
!16343 = !DILocation(line: 277, column: 2, scope: !16341)
!16344 = !DILocation(line: 279, column: 15, scope: !16285)
!16345 = !DILocation(line: 279, column: 12, scope: !16285)
!16346 = !DILocation(line: 280, column: 21, scope: !16285)
!16347 = !DILocation(line: 282, column: 24, scope: !16285)
!16348 = !DILocation(line: 282, column: 2, scope: !16285)
!16349 = !DILocation(line: 0, scope: !15875, inlinedAt: !16350)
!16350 = distinct !DILocation(line: 284, column: 2, scope: !16285)
!16351 = !DILocation(line: 194, column: 2, scope: !15883, inlinedAt: !16350)
!16352 = !DILocation(line: 194, column: 2, scope: !15884, inlinedAt: !16350)
!16353 = !DILocation(line: 194, column: 2, scope: !15887, inlinedAt: !16350)
!16354 = !DILocation(line: 0, scope: !15889, inlinedAt: !16355)
!16355 = distinct !DILocation(line: 215, column: 2, scope: !15875, inlinedAt: !16350)
!16356 = !DILocation(line: 95, column: 2, scope: !15889, inlinedAt: !16355)
!16357 = !DILocation(line: 285, column: 1, scope: !16285)
!16358 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2478, file: !2478, line: 287, type: !3374, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16359)
!16359 = !{!16360, !16361, !16363}
!16360 = !DILocalVariable(name: "t", scope: !16358, file: !2478, line: 289, type: !111)
!16361 = !DILocalVariable(name: "__i", scope: !16362, file: !2478, line: 291, type: !15774)
!16362 = distinct !DILexicalBlock(scope: !16358, file: !2478, line: 291, column: 2)
!16363 = !DILocalVariable(name: "__key", scope: !16362, file: !2478, line: 291, type: !15774)
!16364 = !DILocation(line: 0, scope: !16358)
!16365 = !DILocation(line: 0, scope: !16362)
!16366 = !DILocation(line: 0, scope: !15802, inlinedAt: !16367)
!16367 = distinct !DILocation(line: 291, column: 2, scope: !16362)
!16368 = !DILocation(line: 55, column: 2, scope: !15811, inlinedAt: !16369)
!16369 = distinct !DILocation(line: 145, column: 10, scope: !15802, inlinedAt: !16367)
!16370 = !DILocation(line: 0, scope: !15811, inlinedAt: !16369)
!16371 = !DILocation(line: 148, column: 2, scope: !15819, inlinedAt: !16367)
!16372 = !DILocation(line: 148, column: 2, scope: !15820, inlinedAt: !16367)
!16373 = !DILocation(line: 148, column: 2, scope: !15823, inlinedAt: !16367)
!16374 = !DILocation(line: 160, column: 2, scope: !15802, inlinedAt: !16367)
!16375 = !DILocation(line: 292, column: 7, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16377, file: !2478, line: 291, column: 24)
!16377 = distinct !DILexicalBlock(scope: !16362, file: !2478, line: 291, column: 2)
!16378 = !DILocation(line: 292, column: 19, scope: !16376)
!16379 = !DILocation(line: 0, scope: !15875, inlinedAt: !16380)
!16380 = distinct !DILocation(line: 291, column: 2, scope: !16377)
!16381 = !DILocation(line: 194, column: 2, scope: !15883, inlinedAt: !16380)
!16382 = !DILocation(line: 194, column: 2, scope: !15884, inlinedAt: !16380)
!16383 = !DILocation(line: 194, column: 2, scope: !15887, inlinedAt: !16380)
!16384 = !DILocation(line: 0, scope: !15889, inlinedAt: !16385)
!16385 = distinct !DILocation(line: 215, column: 2, scope: !15875, inlinedAt: !16380)
!16386 = !DILocation(line: 95, column: 2, scope: !15889, inlinedAt: !16385)
!16387 = !DILocation(line: 292, column: 17, scope: !16376)
!16388 = !DILocation(line: 294, column: 2, scope: !16358)
!16389 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2478, file: !2478, line: 297, type: !3368, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !1998)
!16390 = !DILocation(line: 300, column: 19, scope: !16389)
!16391 = !DILocation(line: 300, column: 9, scope: !16389)
!16392 = !DILocation(line: 300, column: 2, scope: !16389)
!16393 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2478, file: !2478, line: 306, type: !3374, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !1998)
!16394 = !DILocation(line: 308, column: 9, scope: !16393)
!16395 = !DILocation(line: 308, column: 2, scope: !16393)
!16396 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2478, file: !2478, line: 319, type: !6239, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16397)
!16397 = !{!16398, !16399, !16400, !16401}
!16398 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16396, file: !2478, line: 319, type: !110)
!16399 = !DILocalVariable(name: "start_cycles", scope: !16396, file: !2478, line: 328, type: !110)
!16400 = !DILocalVariable(name: "cycles_to_wait", scope: !16396, file: !2478, line: 331, type: !110)
!16401 = !DILocalVariable(name: "current_cycles", scope: !16402, file: !2478, line: 338, type: !110)
!16402 = distinct !DILexicalBlock(scope: !16403, file: !2478, line: 337, column: 11)
!16403 = distinct !DILexicalBlock(scope: !16404, file: !2478, line: 337, column: 2)
!16404 = distinct !DILexicalBlock(scope: !16396, file: !2478, line: 337, column: 2)
!16405 = !DILocation(line: 0, scope: !16396)
!16406 = !DILocation(line: 322, column: 19, scope: !16407)
!16407 = distinct !DILexicalBlock(scope: !16396, file: !2478, line: 322, column: 6)
!16408 = !DILocation(line: 322, column: 6, scope: !16396)
!16409 = !DILocation(line: 328, column: 26, scope: !16396)
!16410 = !DILocation(line: 333, column: 43, scope: !16396)
!16411 = !DILocation(line: 337, column: 2, scope: !16396)
!16412 = !DILocation(line: 338, column: 29, scope: !16402)
!16413 = !DILocation(line: 0, scope: !16402)
!16414 = !DILocation(line: 341, column: 23, scope: !16415)
!16415 = distinct !DILexicalBlock(scope: !16402, file: !2478, line: 341, column: 7)
!16416 = !DILocation(line: 341, column: 39, scope: !16415)
!16417 = !DILocation(line: 349, column: 1, scope: !16396)
!16418 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !119, file: !119, line: 1675, type: !3368, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !1998)
!16419 = !DILocation(line: 1677, column: 9, scope: !16418)
!16420 = !DILocation(line: 1677, column: 2, scope: !16418)
!16421 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16422, file: !16422, line: 24, type: !3368, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !1998)
!16422 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16423 = !DILocation(line: 26, column: 9, scope: !16421)
!16424 = !DILocation(line: 26, column: 2, scope: !16421)
!16425 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2478, file: !2478, line: 364, type: !16426, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16428)
!16426 = !DISubroutineType(types: !16427)
!16427 = !{!111, !15764}
!16428 = !{!16429, !16430}
!16429 = !DILocalVariable(name: "timeout", arg: 1, scope: !16425, file: !2478, line: 364, type: !15764)
!16430 = !DILocalVariable(name: "dt", scope: !16425, file: !2478, line: 366, type: !104)
!16431 = !DILocation(line: 0, scope: !16425)
!16432 = !DILocation(line: 368, column: 6, scope: !16425)
!16433 = !DILocation(line: 371, column: 10, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16435, file: !2478, line: 370, column: 47)
!16435 = distinct !DILexicalBlock(scope: !16436, file: !2478, line: 370, column: 13)
!16436 = distinct !DILexicalBlock(scope: !16425, file: !2478, line: 368, column: 6)
!16437 = !DILocation(line: 371, column: 3, scope: !16434)
!16438 = !DILocation(line: 376, column: 58, scope: !16439)
!16439 = distinct !DILexicalBlock(scope: !16440, file: !2478, line: 376, column: 7)
!16440 = distinct !DILexicalBlock(scope: !16435, file: !2478, line: 372, column: 9)
!16441 = !DILocation(line: 376, column: 7, scope: !16440)
!16442 = !DILocation(line: 376, column: 43, scope: !16439)
!16443 = !DILocation(line: 377, column: 4, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16439, file: !2478, line: 376, column: 64)
!16445 = !DILocation(line: 379, column: 10, scope: !16440)
!16446 = !DILocation(line: 379, column: 33, scope: !16440)
!16447 = !DILocation(line: 379, column: 31, scope: !16440)
!16448 = !DILocation(line: 379, column: 3, scope: !16440)
!16449 = !DILocation(line: 0, scope: !16436)
!16450 = !DILocation(line: 381, column: 1, scope: !16425)
!16451 = distinct !DISubprogram(name: "boot_banner", scope: !16452, file: !16452, line: 26, type: !3086, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3072, retainedNodes: !1998)
!16452 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16453 = !DILocation(line: 34, column: 2, scope: !16451)
!16454 = !DILocation(line: 36, column: 1, scope: !16451)
